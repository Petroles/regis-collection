<?xml version="1.0" encoding="utf-8"?>
<add>
	<doc>
		<field name="docid">BR-TU.08477</field>
		<field name="filename">13314_Dissertacao_Maciel_M_Queiroz.pdf</field>
		<field name="filetype">PDF</field>
		<field name="text">
 
 

MACIEL MANOEL DE QUEIROZ 

 

 

 

 

 

 

 

 

MÉTODOS HEURÍSTICOS APLICADOS AO PROBLEMA DE 

PROGRAMAÇÃO DA FROTA DE NAVIOS PLVs 

 

 

 

 

 

 

 

 

 

 

São Paulo 
2011 

 



 
 

MACIEL MANOEL DE QUEIROZ 

 

 

 

 

 

 

MÉTODOS HEURÍSTICOS APLICADOS AO PROBLEMA DE 

PROGRAMAÇÃO DA FROTA DE NAVIOS PLVs 

 

 

 

 

 

Dissertação apresentada ao Programa de 

Pós-Graduação em Engenharia Naval para a 

obtenção do Título de Mestre em 

Engenharia 
 

 

 

 

 

São Paulo 

2011 



 
 

MACIEL MANOEL DE QUEIROZ 

 

 

MÉTODOS HEURÍSTICOS APLICADOS AO PROBLEMA DE 

PROGRAMAÇÃO DA FROTA DE NAVIOS PLVs 

 

 

 

Dissertação apresentada ao Programa de 

Pós-Graduação em Engenharia Naval para a 

obtenção do Título de Mestre em 

Engenharia 

 

 

 

Área de Concentração:  

Engenharia Naval e Oceânica 

 

 

Orientador:  

                    Prof. Dr. André Bergsten Mendes 

 

 

 

São Paulo 

2011 

 



 
 

Este exemplar foi revisado e alterado em relação à versão original, sob      
responsabilidade única do autor e com a anuência de seu orientador. 
 
São Paulo, 29 de novembro de 2011. 
 
 
Assinatura do autor   ____________________________ 
 
 
Assinatura do orientador   _______________________ 
 

 

 

 

 

 

 

FICHA CATALOGRÁFICA 

 

 

 

 

 

 

 

 

 

 

 
 
Queiroz, Maciel Manoel de 

Métodos heurísticos aplicados ao problema de programação 
da frota de navios PLVs / M.M. de Queiroz. – ed.rev. -- São Paulo, 
2011. 

 101 p. 
 

Dissertação (Mestrado) – Escola Politécnica da Universidade 
de São Paulo. Departamento de Engenharia Naval e Oceânica. 
 

1. Embarcações de apoio 2. Matemática (Modelagem) 3. Pro- 
gramação heurística I. Universidade de São Paulo. Escola Poli-
técnica. Departamento de Engenharia Naval e Oceânica II. t.  

 



 
 

AGRADECIMENTOS 

 

Ao orientador, conselheiro e amigo Prof. Dr. André Bergsten Mendes, pela 

oportunidade, incentivo e por ter acreditado e me apoiado na concretização deste 

trabalho. 

 

Aos funcionários da secretaria do PNV, a todos os professores que contribuíram, 

principalmente ao Prof. Dr. Marco Antonio Brinati e Miguel Cezar Santoro pelas 

valiosas contribuições no exame de qualificação. 

 

 À Agencia Nacional do Petróleo – ANP, por meio do programa PRH-19 e  

Financiadora de Estudos e Projetos – FINEP através do convênio # 01.09.0458.00. 

 

A todos que de forma direta ou indireta contribuíram para o desenvolvimento 

deste trabalho. 

  

 

 

 

 

 

 

 

 

 

 

 



 
 

RESUMO 

 

O presente trabalho abordou um problema de programação de embarcações que 

realizam o lançamento de dutos ou linhas de produção e a interligação destes à infra-

estrutura submarina, em uma operação de exploração de petróleo offshore. As tarefas 

são realizadas por embarcações PLVs (pipe layer vessels), e possuem como atributos: 

duração, em dias; lista de embarcações compatíveis; instante de liberação; penalidade 

relacionada ao atraso na execução da tarefa. Este problema é uma variação da classe de 

problemas de programação de máquinas paralelas não-relacionadas, em que o objetivo é 

minimizar o atraso ponderado total. Este trabalho empregou como métodos de solução a 

meta-heurística GRASP com path relinking. Esta técnica foi implementada utilizando 

os recursos de processamento multi-threading, de forma a explorar múltiplas trajetórias 

simultaneamente. Testes foram feitos para comprovar o desempenho das heurísticas 

propostas, comparando-as com limitantes fornecidos pelo método geração de colunas. 

 

Palavras-chave: Programação de frota; modelagem matemática; métodos heurísticos; 

GRASP; apoio marítimo offshore. 

 

 

 

 

 

 

 

 

 

 

 



 
 

 ABSTRACT 

 

This work addressed a fleet scheduling problem present in the offshore oil industry. 

Among the special purpose services one will find the pipe layer activities  and its 

connection to the subsea infrastructure, accomplished by the Pipe Layer Vessels (PLV). 

The jobs are characterized by a release date, which reflects the expected arrival date of 

the necessary material at the port. There are compatibility constraints between job and 

vessel, so that some vessels may not be able to perform a certain job; the duration of the 

jobs can be differentiated by vessel and if a job is finished after its due date, a penalty is 

incurred. This is a variation of the unrelated parallel machine problem with total 

weighted tardiness objective function. This research employed a metaheuristic GRASP 

with Path Relinking, which have proved to be competitive and an effective solution 

strategy. This method was implemented in a multi-threading scheme allowing multiple 

paths to be explored simultaneously. Computational experiments were conducted, 

comparing solutions with bounds provided by linear column generation. 

 

Keywords: Fleet scheduling; mathematical modeling; heuristics; GRASP; offshore 

support vessels.    

 

 

 

 

 

 

 

 

 



 
 

SUMÁRIO 

1 INTRODUÇÃO .......................................................................................................... 11 

1.1 Detalhamento do Problema ............................................................................ 12 

1.2 Motivação do Tema ....................................................................................... 15 

1.3 Objetivos e Metodologia ................................................................................ 16 

1.4 Delineamento do Trabalho ............................................................................ 19 

2 REVISÃO BIBLIOGRÁFICA .................................................................................. 20 

2.1 Introdução ao Problema de Programação de Máquinas Paralelas ................. 20 

2.2 Métodos de Solução Empregados em Problemas de Programação de 

Máquinas Paralelas .............................................................................................. 23 

2.3 Programação de Navios ................................................................................. 31 

2.4 Conclusão da Revisão Bibliográfica .............................................................. 33 

3 MODELAGEM MATEMÁTICA E  MÉTODOS DE SOLUÇÃO ....................... 36 

3.1 Descrição Resumida do Problema  ................................................................ 36 

3.1.1 Modelo Matemático ........................................................................ 37 

3.2 Métodos de Solução ....................................................................................... 39 

3.2.1 Heurísticas e Meta-heurísticas ........................................................ 39 

3.2.2 Heurística Construtiva .................................................................... 40 

3.2.3 Heurística Construtiva Proposta ..................................................... 40 

3.2.4 Heurísticas de Busca ....................................................................... 41 

3.2.5 Busca Local Inserção ...................................................................... 42 

3.2.6 Busca Local Troca .......................................................................... 44 

3.2.7 Meta-heurísticas .............................................................................. 46 

3.2.8 Meta-heurística GRASP .................................................................. 46 

3.2.8.1 Descrição do GRASP Proposto ........................................ 48 

3.2.9 Heurística Path Relinking ............................................................... 50 

4 TESTES COMPUTACIONAIS E RESULTADOS ................................................ 56 

4.1 Instâncias de Teste ......................................................................................... 56 

4.2 Análise dos Resultados .................................................................................. 57 

4.3 Discussão ....................................................................................................... 64 

5 CONCLUSÕES E RECOMENDAÇÕES ................................................................ 68 

REFERÊNCIAS BIBLIOGRÁFICAS ........................................................................ 70 

APÊNDICE A – Gap médio 30x4, 40x5 e 50x6  ............................................................ 76 

APÊNDICE B – Tempo médio de processamento 30x4, 40x5 e 50x6 ........................... 77 



 
 

APÊNDICE C – Resultados GC x GRASP 30 x 4 .......................................................... 78 

APÊNDICE D – Resultados GC x GRASP 40 x 5 ......................................................... 80 

APÊNDICE E – Resultados GC x GRASP 50 x 6 .......................................................... 82 

APÊNDICE F – Resultados GC x HEU_C + BL 30 x 4 ................................................. 84 

APÊNDICE G – Resultados HEU_C + BL 40 x 5 .......................................................... 86 

APÊNDICE H – Resultados HEU_C + BL 50 X 6 ......................................................... 88 

APÊNDICE I – Resultados HEU_C 30 x 4 ..................................................................... 90 

APÊNDICE J – HEU_C 40 x 5 ....................................................................................... 92 

APÊNDICE K – Resultados HEU_C 50 x 6 ................................................................... 94 

APÊNDICE L – Resultados GRASP PR 30 X 4 ............................................................. 96 

APÊNDICE M – Resultados GRASP PR 40 X 5 ............................................................ 98 

APÊNDICE N – Resultados GRASP PR 50 x 6 ........................................................... 100 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 



 
 

LISTA DE ILUSTRAÇÕES 

Figura 1.1 - PLV Solitaire ............................................................................................... 13 

Figura 1.2 – Lançamento de Linhas ................................................................................ 15 

Figura 1.3 – Metodologia para resolução de problemas em Pesquisa Operacional 

(adaptado de Bertrand; Fransoo, 2002)  ................................................................. 17 

Figura 2.1 – Generalização do problema de programação de máquinas paralelas 

(adaptado de Morton; Pentico, 1993) ..................................................................... 21 

Figura 3.1 – Pseudocódigo da Heurística Construtiva HEU_C ...................................... 40 

Figura 3.2 – Movimento que remove e testa a inserção da tarefa ................................... 43 

Figura 3.3 – Inserção da tarefa na melhor posição da melhor sequência ........................ 43 

Figura 3.4 – Pseudocódigo Busca Local Inserção ........................................................... 44 

Figura 3.5 – Remove e testa a inserção de duas tarefas entre um par de sequências ...... 45 

Figura 3.6 – Inserção das tarefas na melhor posição do par de sequências ..................... 45 

Figura 3.7 – Pseudocódigo da busca local Troca ............................................................ 46 

Figura 3.8 – Pseudocódigo GRASP Básico .................................................................... 47 

Figura 3.9 – Exemplo de Lista Restrita de Candidatos ................................................... 48 

Figura 3.10 – Pseudocódigo GRASP Proposto ............................................................... 48 

Figura 3.11 – Path Relinking ........................................................................................... 51 

Figura 3.12 – Estrutura básica do GRASP com Path Relinking ..................................... 53 

Figura 4.1 – Distribuição dos gaps para HEU_C 30 x 4 ................................................. 58 

Figura 4.2 – Distribuição dos gaps para HEU_C 40 x 5 ................................................. 59 

Figura 4.3 – Distribuição dos gaps para HEU_C 50 x 6 ................................................. 59 

Figura 4.4 – Distribuição dos gaps para HEU_C + BL 30 x 4 ........................................ 60 

Figura 4.5 – Distribuição dos gaps para HEU_C + BL 40 x 5 ........................................ 60 

Figura 4.6 – Distribuição dos gaps para HEU_C + BL 50 x 6 ........................................ 61 

Figura 4.7 – Distribuição dos gaps para GRASP 30 x 4 ................................................. 61 

Figura 4.8 – Distribuição dos gaps para GRASP 40 x 5 ................................................. 62 

Figura 4.9– Distribuição dos gaps para GRASP 50 x 6 .................................................. 62 

Figura 4.10 – Distribuição dos gaps para GRASP PR 30 x 4 ......................................... 63 

Figura 4.11 – Distribuição dos gaps para GRASP PR 40 x 5 ......................................... 63 

Figura 4.12 – Distribuição dos gaps para GRASP PR 50 x 6 ......................................... 64 

Figura 4.13 – Tempo para alcançar uma dada solução (GRASP PR x GRASP) ............ 65 



 
 

LISTA DE TABELAS 

Tabela 2.1 – Principais referências de programação de tarefas da pesquisa ................... 35 

Tabela 4.1 – Métodos de solução .................................................................................... 57 

Tabela 4.2 – Método x gap médio, mínimo e máximo .................................................... 57 

Tabela 4.3 – Método x tempo médio de processamento ................................................. 58 

Tabela 4.4 – Abordagem multi- threading x processamento individual.......................... 64 

Tabela 4.5 – Processamento multi-threading x Branch and Bound ................................ 66 

 

 

 

 

 



11 
 

1 INTRODUÇÃO 

 

Este capítulo visa introduzir o problema de estudo desta pesquisa definido como 

MÉTODOS HEURÍSTICOS APLICADOS AO PROBLEMA DE PROGRAMAÇÃO 

DA FROTA DE NAVIOS PLVs (pipe layer vessel), bem como definir os objetivos, a 

metodologia aplicada e o direcionamento seguido. 

 

O tema programação ou escalonamento de atividades, conhecida na literatura 

técnica como scheduling, está presente em diversos sistemas produtivos, e sempre 

envolve um número de atividades que estão atreladas à utilização de recursos por um 

determinado período de tempo (Morton; Pentico, 1993). A programação de atividades é 

um processo de decisão que possui um importante papel na maioria dos sistemas de 

manufatura, produção e ambientes de processamento de informação, como também nas 

áreas de transportes, distribuição e em outros diversos tipos de indústrias (Pinedo, 

2002). 

 

Geralmente a programação de tarefas envolve um conjunto de tarefas que 

necessitam ser executadas, por um conjunto de recursos previamente especificado, 

tendo em vista as datas de início e término das tarefas (Baker, 1974). A complexidade 

do processo de programação de tarefas e recursos é grande tendo em vista a natureza 

combinatória destes problemas, associada às diversas restrições que devem ser 

observadas, além da escala dos problemas reais. 

 

Esta pesquisa tem seu foco no problema de programação de uma frota de navios 

especializados no processo de lançamento de risers e interligação submarina, presente 

no desenvolvimento de campos de petróleo offshore. Conforme será discutido, o 

problema em questão é uma variação do problema de programação de máquinas 

paralelas não-relacionadas, para o qual Liaw et al. (2003) demonstraram que a 

complexidade é NP-difícil.  

 

Para resolver o problema, foi proposto um método heurístico, combinando-se o 

GRASP com path relinking;  os limitantes inferiores foram estimados pela aplicação do 

método de geração de colunas, conforme proposto por van den Akker et al. (2000) e 

implementado por Mendes et al. (2010). 



12 
 

1.1 Detalhamento do Problema 

 

A exploração e produção de petróleo em alto mar, conhecida como exploração 

offshore, necessita de uma grande quantidade de atividades de apoio marítimo, 

requerendo a utilização dos mais variados tipos de embarcações especializadas. Uma 

etapa importante do desenvolvimento de um campo petrolífero é a de lançamento de 

risers ou linhas de produção. 

 

As linhas ou dutos submarinos podem ser flexíveis ou rígidas, e são de 

fundamental importância para o transporte da produção de petróleo das plataformas 

marítimas (offshore) para refinarias ou tanques de armazenagem situados em terra 

(onshore). Cabe destacar também as linhas que coletam a produção dos poços e 

abastecem diretamente uma unidade estacionária de produção, ou o fazem por meio de 

um manifold submarino, o qual está instalado no leito marinho e recebe várias linhas 

dos poços em sua adjacência – desta caixa de conexão sai uma linha única para a 

plataforma. 

 

As embarcações responsáveis pelo lançamento dos dutos e sua interligação são 

as PLVs – pipe layer vessels, que são recursos críticos que uma empresa petrolífera tem 

que administrar. As embarcações realizam estas operações basicamente de duas 

maneiras distintas: i) os dutos são soldados enquanto a embarcação está operando no 

próprio local de lançamento; ii) os dutos, previamente soldados em terra, são 

armazenados em grandes estruturas tipo carretéis, e são dispostos no leito marinho a 

uma determinada velocidade. A segunda opção é mais vantajosa do ponto de vista de 

desempenho (velocidade), e por não comprometer as operações de soldagem em 

condições climáticas adversas. A figura 1.1 mostra um certo navio, capaz de lançar 

entre 4 a 7 km de dutos por dia. Entre outros recursos, esta embarcação dispõe de um 

eficiente sistema de posicionamento dinâmico, permitindo a realização de serviços em 

áreas congestionadas. 

 

Para a instalação de uma linha, seja ela flexível ou rígida, existem diversas 

atividades necessárias para que isto se concretize. No início da operação a embarcação 

necessita carregar as linhas e os equipamentos que serão utilizados na operação de 

lançamento. O próximo passo consiste em deslocar-se até ao local de instalação, dando 



13 
 

início ao lançamento. Dependendo da profundidade e da extensão do lançamento, pode 

ser necessário retornar novamente ao porto para carregar material adicional. Existem 

casos de maior complexidade, como ilustrado na figura 1.2, em que é necessária a 

requisição de embarcações de apoio como, por exemplo, um rebocador (AHTS) ou uma 

embarcação dotada de sonda de observação (ROV). 

 

 
Figura 1.1 PLV Solitaire (Fonte: http://www.allseas.com/uk/20/equipment/solitaire.html) 

 

Quando uma empresa petrolífera realiza o planejamento operacional da sua 

frota de PLVs, considera como uma macro-tarefa todas as atividades acima 

mencionadas. Em geral, o setor responsável pelo planejamento e execução desta 

operação avalia quais embarcações da frota estão aptas para realizar cada macro-tarefa 

(doravante, denominado simplesmente de tarefa), e elaboram uma matriz de 

compatibilidade entre cada par embarcação-tarefa, estimando o tempo necessário para 

que a tarefa seja realizada. 

 

As diversas tarefas de interligação e lançamentos de linhas que compõem a 

demanda que a empresa deverá atender são decorrentes dos projetos de 

desenvolvimento de novos campos. Cada tarefa a ser realizada tem um potencial de 

produção associado, o qual reflete o volume diário de produção esperado ao longo da 

vida útil do poço que será interligado. Postergar uma tarefa, para realizar outra, implica 

em adiar o retorno sobre o investimento realizado. 

 

Para programar a frota, algumas restrições operacionais devem ser observadas, 

como a compatibilidade embarcação-tarefa e a data mais cedo em que a tarefa pode ser 

iniciada. Esta data reflete o instante de disponibilização de material no porto para 

realizar aquela tarefa, além da obtenção de licença ambiental e da aprovação em 

http://www.allseas.com/uk/20/equipment/solitaire.html
http://www.allseas.com/uk


14 
 

instâncias internas à empresa. A extensão do horizonte de planejamento também deve 

ser considerada, já que a empresa trabalha com uma visão de médio prazo, que no caso 

da operação de lançamento de risers e interligação constitui um período de 3 a 6 meses. 

É importante ressaltar, contudo, que este horizonte, em princípio, não é conhecido com 

precisão. Os técnicos responsáveis pelo setor estimam um prazo capaz de atender a 

demanda e fixam este horizonte como meta. 

 

É importante destacar que, quando uma tarefa é planejada, os tempos de 

navegação já são incluídos no tempo total de execução. Uma vez que uma operação 

inicia e termina em uma base operacional da empresa (um porto), o tempo de 

deslocamento entre duas tarefas consecutivas é zero. 

 

Objetiva-se achar a sequência de execução das tarefas, de forma a minimizar as 

perdas financeiras pelo atraso no início da execução das mesmas em relação aos 

respectivos instantes de liberação.  

 

Quanto à caracterização da demanda, adota-se como hipótese que a mesma é 

conhecida, bem como a duração da execução das tarefas. No caso da oferta, os recursos 

empregados são as embarcações, que se diferenciam uma das outras geralmente pela 

capacidade de armazenagem e tipo de lançamento das linhas. Admite-se conhecida a 

composição da frota, os instantes e os locais em que as embarcações estão disponíveis. 

 

Este problema tem semelhanças com o problema de programação de máquinas 

paralelas não-relacionadas, com instante de liberação das tarefas, minimizando a soma 

dos atrasos ponderados das tarefas. Dado que algumas embarcações não estão 

habilitadas a realizar determinados serviços e, pelo fato das embarcações poderem 

realizar as tarefas em tempos diferentes, fica caracterizado o aspecto das máquinas 

serem não-relacionadas. Conforme dito anteriormente, o horizonte de planejamento não 

é conhecido com total precisão. Contudo, o valor imposto pelo corpo técnico da 

empresa, passa a ser uma restrição rígida, já que a empresa estabelece metas a serem 

atingidas dentro do período de planejamento de suas operações. 

 



15 
 

 

Figura 1.2 – Lançamento de linhas (fonte: http://www.abeam.org.br) 

 

1.2 Motivação do tema 

 

O Brasil tem se destacado no cenário mundial de exploração e produção de 

petróleo e gás natural em águas profundas e ultra-profundas. Nestes ambientes, são de 

fundamental importância o suporte e a operação coordenada dos serviços de apoio, tanto 

na fase prospectiva, quanto na fase da implantação de novos sistemas produtivos e, 

posteriormente, na manutenção e no escoamento da produção. 

 

A busca pela eficiência operacional, ou seja, a utilização dos recursos produtivos 

da melhor forma possível é imprescindível, principalmente em se tratando do uso de 

recursos escassos, como são as sondas de perfuração e as embarcações de apoio 

(incluindo os PLVs). A nova política brasileira para o petróleo, ao permitir contratos 

com empresas estrangeiras para a exploração de novos campos na plataforma 

continental, incentiva não só a expansão da área de atuação da Petrobras, como a 

instalação de outras companhias no Brasil, aumentando sensivelmente a demanda de 

embarcações e equipamentos de apoio marítimo. Neste contexto, foram lançados pela 

Petrobras três planos de renovação (e expansão) da frota de apoio marítimo, oferecendo 

a armadores nacionais (isto é, embarcações com bandeira brasileira, de propriedade de 

empresas brasileiras) um prazo de mobilização suficiente para permitir a construção das 

embarcações no Brasil, e subsequentes contratos de afretamento por oito anos. 



16 
 

A recente descoberta de petróleo na camada do pré-sal aponta para um cenário 

promissor e que deverá consolidar a liderança mundial do Brasil na produção de 

petróleo em águas profundas e ultra-profundas. Portanto, o desenvolvimento de 

abordagens baseadas em técnicas de otimização matemática, exatas e heurísticas, que 

possam conferir elevada produtividade e eficiência à gestão de recursos escassos, como 

é o caso da frota de PLVs, é de grande interesse prático. Além disso, considerando o 

fato de que o processo de interligação é a última etapa antes de um campo petrolífero 

entrar em produção, o setor que planeja e executa tais operações sofre uma pressão 

interna grande para que as metas de produção sejam alcançadas e, eventualmente, 

superadas. 

 

1.3 Objetivos e Metodologia 

 

A presente pesquisa possui o objetivo de resolver o problema de programação da 

frota de navios PLVs em operações de lançamento de linhas (dutos flexíveis e/ou 

rígidas) em cenários reais, contribuindo para que as empresas envolvidas no mercado de 

petróleo tenham uma melhor eficiência no planejamento operacional dos serviços de 

apoio offshore. 

 

A solução de problemas complexos na área de planejamento de sistemas de 

operações é objeto central de estudo da área do conhecimento denominada de Pesquisa 

Operacional. É uma ciência que aplica o método científico para resolução dos mais 

diversos problemas operacionais, tendo como fundamento teórico os conhecimentos 

advindos das áreas da matemática aplicada, ciência da computação e estatística. 

 

Por se tratar de um trabalho da área de Pesquisa Operacional, a metodologia 

aplicada será desenvolvida de acordo com o modelo de Bertrand; Fransoo (2002), onde 

os seguintes passos são desenvolvidos, de acordo com a figura 1.3. A partir de um 

problema real, passa-se por um processo de abstração, em que as variáveis importantes 

do problema e o que se espera obter como resposta é explicitado, gerando um modelo 

conceitual. A próxima fase é a modelagem matemática, cujo produto é um modelo 

matemático, no qual as inter-relações entre as variáveis são explicitadas. Em seguida, o 

modelo é resolvido por meio de métodos específicos, gerando uma solução, a qual 

poderá ser implementada. 



17 
 

 

Figura 1.3 - Metodologia para Resolução de Problemas em Pesquisa Operacional 

(adaptado de Bertrand; Fransoo, 2002) 

 

A presente pesquisa, além de envolver as etapas de abstração e modelagem 

matemática, irá se concentrar no desenvolvimento de métodos de resolução do modelo 

matemático, por meio de técnicas heurísticas. 

 

O problema abordado nesta pesquisa pode ser enquadrado na classe de 

problemas de programação de tarefas em máquinas paralelas não-relacionadas, com 

instantes de liberação distintos por tarefa. Nestes problemas, as tarefas têm que ser 

alocadas às máquinas, de forma a otimizar uma função de mérito. São comuns os 

objetivos de minimizar o horizonte de planejamento (makespan), o atraso médio (mean 

tardiness), o atraso ponderado (weighted tardiness), o desvio médio (mean deviation), o 

desvio ponderado (weighted deviation) e o número de tarefas atrasadas (number of late 

jobs), entre outros (Cheng; Sin, 1990). 

 

O presente trabalho tem por objetivo a determinação da melhor sequência de 

execução das tarefas para um problema real, designando cada tarefa para ser realizada 

por apenas uma embarcação, e respeitando as restrições operacionais. A função de 

mérito a ser utilizada é a minimização das perdas financeiras pelo adiamento da 



18 
 

execução das tarefas, isto é, o atraso total ponderado (total weighted tardiness). Cabe 

ressaltar que a data de entrega (due date) é dada pela soma do instante de liberação mais 

a duração da tarefa. Desta maneira, qualquer atraso em relação ao instante mais cedo 

possível de término é penalizado.  

 

Dada a natureza combinatória deste problema, será utilizada a abordagem 

heurística como método de solução. Estes são algoritmos especificamente construídos 

para resolver determinadas classes de problemas complexos, e são capazes de gerar 

soluções rápidas e de boa qualidade, explorando a estrutura do problema. Compõe esta 

categoria as heurísticas construtivas, as heurísticas de busca (local ou refinamento) e as 

meta-heurísticas, Demeulemeester; Herroelen (2002). 

 

As heurísticas construtivas possuem uma característica básica que é a geração de 

uma solução, que pode ser de boa qualidade, com pouco esforço computacional. As 

heurísticas de busca clássica partem de uma solução inicial conhecida e procuram 

explorar a vizinhança desta solução por meio de movimentos, com o objetivo de 

melhorá-la, chegando a ótimos locais. Já as meta-heurísticas são métodos de busca 

capazes de escapar de ótimos locais, evitando uma parada prematura do algoritmo no 

primeiro ótimo local encontrado. 

 

Nesta pesquisa, aplica-se a meta-heurística GRASP (Greedy Randomized 

Adaptive Search Procedure) de Feo; Resende (1989, 1995), e também algumas 

variações desta heurística como o path relinking, que produz novas soluções explorando 

a reconexão por caminhos entre uma solução inicial e uma dada solução de elite 

(Glover, 1996; Glover et al., 2000). Esta técnica é implementada utilizando os recursos 

de processamento multi-threading, de forma a explorar múltiplas trajetórias 

simultaneamente. 

 

Para a fase de testes é utilizada uma base de dados construída a partir de um 

conjunto de regras disponível na OR-Library
1
 elaborada por Beasley (1990) e adaptada 

do trabalho de Crauwels et al. (1998). Estas regras foram propostas para um problema 

de máquina única (single machine), em que todas as tarefas são conhecidas e liberadas 

                                                           
1
 Coleção de conjunto de dados para teste para uma grande variedade de problemas de pesquisa 

operacional.  



19 
 

no instante inicial. As modificações introduzidas permitiram gerar uma base com 375 

instâncias teste do problema de pesquisa, com 30, 40 e 50 tarefas. A este conjunto de 

problemas aplicou-se a versão linear do método de geração de colunas (Mendes et al., 

2010), para que se possa avaliar a qualidade da solução heurística em relação aos 

limitantes (lower bounds) fornecidos pelo método de geração de colunas. 

 

1.4 Delineamento do trabalho 

 

O restante deste trabalho está estruturado da seguinte forma: 

 

Capítulo 2 – Revisão Bibliográfica: descreve a importância da programação de 

máquinas paralelas e sua aplicação em diversos setores, como por exemplo, em 

programação de navios; relata os principais métodos empregados para a solução de 

problemas de programação e, por fim, caracteriza as principais abordagens das 

heurísticas e meta-heurísticas aplicadas no trabalho. 

 

Capítulo 3 – Modelagem Matemática e Métodos de Solução: apresenta de forma 

sucinta um modelo matemático que caracteriza o problema desta pesquisa, e também os 

métodos de solução empregados.   

 

Capítulo 4 – Testes Computacionais e Resultados: aplicação de testes para os métodos 

empregados no trabalho, por meio de um conjunto de instâncias e avaliação dos 

resultados obtidos. 

 

Capítulo 5 – Conclusões e Recomendações: possui as conclusões do trabalho e sugere 

futuras abordagens para aplicação dos métodos. 

 

Referências Bibliográficas: descreve os trabalhos pesquisados.  

 

  



20 
 

2 REVISÃO BIBLIOGRÁFICA 

 

Este capítulo apresenta a revisão da literatura dos trabalhos pesquisados para a 

presente dissertação. Como o tema abordado nesta pesquisa faz parte de uma classe de 

problemas de programação em máquinas paralelas, faz-se necessário apresentar alguns 

dos principais trabalhos desta área nos últimos anos, assim como a literatura relativa às 

operações de transporte marítimo. Após a caracterização da programação em máquinas 

paralelas, são discutidas algumas heurísticas e meta-heurísticas aplicadas nestes tipos de 

problemas como método de solução. 

 

2.1 Introdução ao Problema de Programação de Máquinas Paralelas 

 

Os problemas de programação de máquinas paralelas são de grande interesse 

tanto do ponto de vista prático, quanto acadêmico, geralmente por envolver diversas 

possibilidades de combinar a utilização dos recursos, ou seja, por se tratar de problemas 

combinatórios em que podem haver diversas soluções com custos diferentes. Do ponto 

de vista teórico é uma generalização dos problemas de máquinas única e, do ponto de 

vista prático, é um ambiente muito encontrado na indústria (Liaw et al.; 2003).  

 

Segundo Pinedo (2002), em todos os problemas de programação, o número de 

máquinas e tarefas é assumido como finito. Suponha que   máquinas              

tenham que processar   tarefas             . A programação é responsável pela 

alocação das tarefas nas máquinas para serem processadas em um determinado intervalo 

de tempo (Brucker, 2007). A figura 2.1 apresenta esta ideia para o problema de 

programação de frotas de embarcações, em que há   tarefas para serem executadas por 

  navios. Assim, cada tarefa   deve ser designada para uma única embarcação  .  

 

Os recursos e tarefas em uma organização podem ser caracterizados de várias 

formas. Por exemplo, os recursos podem ser as máquinas em uma fábrica, pistas em um 

aeroporto, as unidades de processamento em um ambiente de computação etc. As 

tarefas podem ser as operações em um processo de produção, as decolagens e 

aterrissagens em um aeroporto, execuções de programa de computador etc. (Pinedo, 

2002). 



21 
 

Figura 2.1 – Generalização do Problema de Programação de Máquinas Paralelas 

(adaptado de   Morton; Pentico, 1993).                       

          

O número de tarefas é denotado por  , enquanto as máquinas por   . O 

subscrito   caracteriza uma dada tarefa, e o índice   uma determinada máquina. Com 

isto, o par       refere-se ao processamento ou operação da tarefa   na máquina  . A data 

de entrega (due date) é referenciada por   ; o tempo de processamento da tarefa   na 

máquina   é dado por    . O instante de liberação ou (release date) é escrito por   . 

Existe uma função de custo dada por       , que mensura o custo de concluir certa tarefa 

  no instante  . Assim, a data de entrega    e a penalidade ou peso (weight)   , podem 

ser usadas para definir
 
      . 

 

As classes de problemas de programação são especificados por uma 

classificação introduzida por Graham et al. (1979), a qual é expressa por três campos 

     , em que   especifica o ambiente de máquinas (machine environment),    

especifica as características da tarefa (job characteristics), e   denota o critério de 

otimalidade (optimality criterion). 

 

O parâmetro   descreve o ambiente de máquina e pode assumir os valores,  ,   

e  , em que: 

?  : denota máquinas idênticas em paralelo; 

?  : denota máquinas proporcionais em paralelo; 

?  : denota máquinas não-relacionadas em paralelo; 

Se    , então existem máquinas idênticas em paralelo (identical parallel 

machines). Assim, para o tempo de processamento     da tarefa    na máquina    tem-

m

i 1

i 2

j 1 x j 2 ... j n

.

.

.

i m

Fila

n Tarefas

N

a

v

i

o

s



22 
 

se        para todas as máquinas   , ou seja, a tarefa pode ser processada em 

qualquer máquina utilizando o mesmo tempo de processamento. Um trabalho de 

destaque neste ambiente é o de Chen; Powell (1999), que utilizaram o método Branch 

and Bound com a abordagem de geração de colunas para resolução da relaxação linear 

como técnica de solução. Os autores formularam o problema por meio da abordagem de 

programação inteira que foi posteriormente reformulado utilizando a técnica de 

decomposição Dantzig-Wolfe. O objetivo foi minimizar a penalidade ponderada por 

adiantamento e atraso, e constataram que a abordagem proposta é eficiente para 

solucionar problemas difíceis. 

 

 Se    , então existem máquinas proporcionais em paralelo (uniform parallel 

machines), em que     
  

  
, onde    é a velocidade da máquina   . Isto significa que 

uma tarefa   qualquer poderá necessitar menos tempo de processamento em uma 

máquina mais rápida do que em uma mais lenta. Se todas as máquinas têm a mesma 

velocidade, então é igual ao ambiente de máquinas idênticas (Pinedo, 2002). 

 

Finalmente, se    , então existem máquinas não-relacionadas em paralelo 

(unrelated parallel machines). Trata-se de um caso mais geral do ambiente de máquinas 

proporcionais, dado por   máquinas não-relacionadas em paralelo. A máquina   pode 

processar a tarefa   na velocidade    . O tempo     que a tarefa   gasta na máquina i  é 

igual a 
  

   
, assumindo que a tarefa recebe todos os processamentos na mesma máquina. 

Se a velocidade da máquina é independente das tarefas, por exemplo, (       para 

todos  
 
e  ), o ambiente é idêntico ao de máquinas proporcionais.  

 

Azizoglu; Kirca (1999), abordaram um problema de máquinas paralelas não-

relacionadas, visava minimizar o tempo total de fluxo. Também apresentaram as 

propriedades de um programa ótimo, e propuseram um algoritmo branch and bound. Os 

autores puderam constatar que, com até 25 tarefas, o algoritmo consegue obter soluções 

em um tempo razoável. Jansen; Porkolab (2001) também abordaram o problema de 

programação de máquinas não-relacionadas em paralelo, mas com o objetivo de 



23 
 

minimizar o makespan
2
. Mostraram casos em que as tarefas não podem ser 

interrompidas, e outros que podem haver interrupção. Como método de solução, foram 

propostos algoritmos de aproximação. 

 

O parâmetro   descreve as características da tarefa. As opções usualmente 

empregadas são:                              , em que: 

?  :
 
denota que a tarefa não pode ser interrompida; 

?      : o processamento pode ser interrompido e retornado mais tarde; 

?     
 
: descreve relações de precedência entre as tarefas; 

?  
 
: indica que a data de liberação deve ser especificada para cada tarefa; 

?  
 
: especifica as restrições do tempo de processamento ou número de operações; 

?  
 
: um prazo (deadline) é especificado para cada tarefa; 

?        
 
: caso as tarefas precisem ser processadas em lotes. 

 

Finalmente, o parâmetro  
 
diz respeito ao objetivo do problema. Por exemplo, 

se        
 
tem-se uma função objetivo de atraso total ponderado. Dessa forma, um 

modelo pode ser identificado pela notação apresentada padrão de Graham et al. (1979). 

Para o problema desta dissertação, que tem por objetivo determinar um programa em 

que o atraso total ponderado seja minimizado, tem-se:   

 

       
 
                                                                                                             (2.1) 

         

 

2.2 Métodos de Solução Empregados em Problemas de Programação de Máquinas 

Paralelas 

 

A literatura sobre os métodos de soluções empregados na classe de problemas de 

programação de máquinas paralelas é muito vasta. Vários métodos foram propostos 

desde a publicação do artigo de McNaughton (1959) sobre programação de máquinas 

idênticas em paralelo e também máquina única, o qual destaca o tratamento diferente 

que as tarefas podem receber de acordo com a sua urgência relativa. O autor apresenta 

                                                           
2
 O makespan =      é o tempo de conclusão da última tarefa que sai do sistema, e definido 

como             , em que    é o tempo de conclusão da tarefa 
 . O mínimo makespan normalmente 

implica em uma alta utilização das máquinas. 



24 
 

dois critérios para análise de desempenho: 1- abordagem baseada no tempo de finalizar 

a tarefa (completion time based); 2- abordagem baseada na data de entrega (due date 

based).  

 

Cheng; Sin (1990) apresentam uma revisão das principais pesquisas e 

contribuições da época sobre programação de máquinas paralelas. São destacadas as 

principais características desses problemas, assim como os principais objetivos. Os 

métodos de solução em otimização combinatória podem ser classificados segundo o tipo 

de algoritmo empregado, e são divididos em quatro classes: enumeração completa, 

algoritmos com tempo polinomial, algoritmos com tempo não-polinomial, e algoritmos 

de aproximação. Uma contribuição importante também é dada por Blazewicz et al. 

(1991) que apresentam formulações matemáticas para problemas de programação de 

máquinas, tanto para ambientes de máquina única quanto para máquinas paralelas.  

 

Na década de 60 começou-se a pensar sobre as alterações na quantidade de 

máquinas e o efeito gerado no processamento das tarefas, em que Graham (1969) 

analisou o problema de máquinas idênticas em paralelo por meio de técnicas de 

aproximação, para o caso em que certas anormalidades poderiam ocorrer, como por 

exemplo, alterações na quantidade das máquinas e a consequência provocada no tempo 

para completar determinado conjunto de tarefas.  

 

Ao longo dos anos, muitas técnicas vêm sendo desenvolvidas e implementadas 

como, por exemplo, Bruno et al. (1974), que apresentam alguns métodos para reduzir o 

tempo médio de conclusão de tarefas independentes, onde aplicaram o critério 

(Weighted-Finishing-Time - tempo de finalização ponderado), ou tempo médio no 

sistema, em que o problema relacionado a máquinas idênticas é polinomial completo. 



25 
 

Outras regras que também foram utilizadas são o LPT
3
 (longest processing time) e SPT

4
 

(shortest processing time), sendo que, para programas de problemas pequenos, a regra 

LPT se mostrou melhor. Os autores apresentaram o algoritmo RPT (Reverse LPT) o 

qual procura incorporar as melhores propriedades das regras SPT e LPT.  

 

Horowitz; Sahni (1976) mostraram algoritmos exatos e aproximados, aplicados 

no caso de máquinas paralelas proporcionias e não-relacionadas, com o objetivo de 

minimizar o tempo de conclusão das tarefas e o tempo de fluxo médio ponderado. Os 

algoritmos exatos apresentados na avaliação do desempenho no pior caso (worst-case) 

podem ser exponenciais. Já os algoritmos de aproximação apresentam complexidade 

polinomial em função do número de tarefas. Estes algoritmos são  -aproximados, 

significando que eles garantem um erro fracionário de não mais que  , entre o ótimo e o 

valor das soluções aproximadas.   

  

 Ainda em relação a máquinas paralelas não-relacionadas, Ibarra; Kim (1977) 

analisaram o desempenho de algumas heurísticas de aproximação (worst-case), 

propostas para o critério tempo de conclusão da programação. Para o caso de máquinas 

paralelas idênticas, os autores fazem uma analogia sobre a dificuldade computacional 

deste tipo de problema com problemas clássicos como o caixeiro viajante e o problema 

da mochila. É destacado que a regra LPT produz soluções próximas ao ótimo quando o 

número de tarefas é grande. 

 

Devido à complexidade de alguns problemas, existe uma grande dificuldade de 

obter soluções ótimas, sendo que em diversos casos é melhor obter uma boa solução do 

que investir muito tempo, e onerar os custos tentando encontrar a otimalidade. Fuller 

(1978) faz uma comparação entre soluções ótimas e soluções boas, analisando as 

                                                           
3
 LPT – Longest Processing Time: programa as tarefas tendo como prioridade as que possuem o maior 

tempo de processamento, sendo que as tarefas são ordenadas de forma decrescente pelos tempos de 

processamento. Esta regra tende a balancear a carga de trabalho das máquinas. A justificativa para esta 

regra é que é mais vantajoso manter tarefas com tempos de processamento mais curtos para mais tarde, de 

modo que quando as tarefas forem designadas para suas respectivas máquinas, as tarefas em uma dada 

máquina podem ser resequenciadas sem afetar a carga de trabalho.     

4
 SPT – Shortest Processing Time: programa as tarefas pelo menor tempo de processamento, geralmente 

utilizada para minimizar o tempo total de conclusão das tarefas e também reduzir a fila de tarefas em 

processo. 

 



26 
 

heurísticas no processo de decisão. O autor destaca que as heurísticas simplificam o 

processo para o tomador de decisão, permitindo que as decisões sejam tomadas de 

forma rápida. A vantagem em utilizar heurísticas é que os métodos limitam a busca, 

reduzindo o número de alternativas.  

 

Pelo fato de as heurísticas não garantirem soluções ótimas, Fuller (1978) sugere 

algumas abordagens para comparar os resultados, como por exemplo, utilizando 

programação linear, não-linear e verificando não apenas as soluções, mas também o 

tempo computacional. Existem várias abordagens de programação de máquinas 

paralelas utilizando a programação linear como método de solução. Lawler; Labetoulle 

(1978) empregaram a programação linear para resolver o problema de programação de 

máquinas paralelas não-relacionadas com o processamento podendo ser interrompido, o 

critério de desempenho utilizado foi minimizar o makespan. 

 

Graham et al. (1979) analisaram a teoria de programação (scheduling) com 

ênfase em algoritmos de otimização e aproximação, e também na complexidade 

computacional. A pesquisa abrangeu diversos ambientes de programação de máquinas, 

inclusive o ambiente de máquinas paralelas. Problemas de programação em que não 

podem haver interrupção são mais difíceis de encontrar soluções. Davis; Jaffe (1981) 

também pesquisaram algoritmos para programação de tarefas em máquinas paralelas 

não-relacionadas, sendo que as tarefas não podiam ser interrompidas. Os autores 

destacam o caso quando há restrições de precedência entre as tarefas, em que as 

heurísticas tendem a ser pobres. 

 

Zanakis et al. (1989) estudaram mais de 400 artigos sobre diferentes métodos 

heurísticos e suas aplicações, onde ficou evidenciado que a heurística construtiva, por 

ser simples de desenvolver e implementar, e por produzir resultados rápidos e muitas 

vezes boas soluções, já eram bastante utilizadas na época. Dependendo do porte e 

complexidade do problema, as heurísticas construtivas podem não conseguir atingir 

boas soluções, mas, pode ser útil ao fornecer uma solução inicial para um método mais 

robusto, como é caso das metaheurísticas.   

 

As heurísticas construtivas geram soluções adicionando componentes 

individuais, como por exemplo: arcos, nós, variáveis, etc., até que uma solução viável 



27 
 

seja obtida. Na maioria das heurísticas construtivas a solução viável é encontrada 

somente no final do procedimento. Um exemplo clássico é o caso do caixeiro viajante 

(Traveling Salesman Problem - TSP), onde pode ser utilizado o critério do vizinho mais 

próximo. 

 

Alguns autores preferem trabalhar com regras de prioridade (ou de 

seqüenciamento) para programação de tarefas em máquinas paralelas, visto que são 

simples e rápidas para implementar Baker; Bertrand (1982) propuseram uma regra 

dinâmica de prioridade para programação com data de entrega (due-date) aplicado 

inicialmente no ambiente de máquina única. É apresentada uma regra modificada para 

due-date chamada de MDD (Modified Due Date). Esta heurística é uma combinação das 

regras SPT (Shortest Processing Time) e EDD
5
 (Earliest Due Date). A heurística 

modificada (MDD
6
) apresentou um desempenho melhor quando comparada com o SPT 

e EDD puros. 

 

Potts (1985) analisa uma heurística para programação de máquinas paralelas 

não-relacionadas e sem interrupção no processamento, com o objetivo de minimizar o 

tempo de conclusão das tarefas. A heurística proposta utiliza duas fases; na primeira é 

empregada a técnica de programação linear, em que no máximo     tarefas não são 

programadas,  e na segunda fase, um método heurístico para as tarefas não 

programadas. O autor utiliza esta abordagem porque quando todas as tarefas são 

programadas nas suas respectivas máquinas, somente mudando a ordem das tarefas o 

tempo de conclusão não sofre alteração. Quando aplicada em situações que existem 

datas de liberação (release dates), e no ambiente de máquina única, a heurística se 

mostrou boa, mas, para problemas em que há restrições de precedência entre as tarefas, 

a heurística não consegue ser satisfatória.  

 

Lenstra et al. (1990) estudaram algoritmos de aproximação para programação de 

máquinas paralelas diferentes com o objetivo de minimizar o makespan, os quais 

apresentam um esquema de aproximação polinomial. O algoritmo empregado é baseado 

                                                           
5
 EDD – Earliest Due Date: programa as tarefas tendo como prioridade as que possuem a data de entrega 

mais cedo, o objetivo é minimizar o atraso entre as tarefas. 

6
 MDD – Modified Due Date: combina as características das regras EDD e SPT da seguinte forma: tarefas 

com folga são ordenadas segundo a regra EDD, e para as demais tarefas a regra SPT é utilizada. 



28 
 

no relacionamento de programação inteira e suas relaxações lineares. Hariri; Potts 

(1991) utilizaram métodos heurísticos na programação de máquinas paralelas não-

relacionadas, o problema possui a característica de algumas máquinas não serem aptas 

para processar algumas tarefas. Empregaram o conceito de heurística duas fases LP/H 

(programação linear e heurística). Na primeira fase é aplicada a programação linear para 

gerar uma programação parcial e na segunda fase pode ser utilizado um método 

heurístico ou exato para programar as tarefas remanescentes.   

 

Lee (1991) abordou um problema de programação de máquinas paralelas 

idênticas, em que as máquinas não estavam simultaneamente disponíveis. Assim, no 

instante de tempo zero, para iniciar o processamento, existiam apenas algumas 

máquinas disponíveis para processamento. Foi utilizada a regra de sequenciamento LPT 

e também uma versão modificada chamada de MLPT, sendo que esta versão apresentou 

um desempenho melhor do que a original. 

 

Glass et al. (1994) estudaram o problema de programação de máquinas paralelas 

não-relaciondas utilizando métodos de busca. Os seguintes algoritmos foram propostos: 

Busca em Vizinhança (Neighbourhood Search); Método da Descida (Descent); 

(Simulated Annealing); Busca Tabu (Tabu Search); Algoritmo Genético (Genetic 

Algorithm) e (Genetic Descent Algorithm). Na análise da performance dos algoritmos 

acima, os autores perceberam que o algoritmo genético forneceu soluções pobres; a 

melhoria foi somente percebida após a incorporação do algoritmo descent, formando 

assim, o genetic descent algorithm-GD. Para ter uma visão melhor sobre os vários tipos 

de algoritmos utilizados, os autores compararam da seguinte forma: GD comparado 

com o simulated annealing e busca tabu, neste caso específico, a busca tabu mostrou 

melhor desempenho frente aos outros quando o tempo limite era (20 segundos). Com 

relação ao genetic descent e simulated annealing foi constatada com o aumento do 

tempo de processamento. 

 

 No caso de busca local empregada em problemas de programação de máquinas 

paralelas não-relacionadas, Piersma; Van Dijk (1996) mostram uma heurística com uma 

busca em vizinhança utilizando descida iterativa (iterative descent) na busca local. A 

estratégia utilizada na fase inicial foi uma heurística gulosa. 

 



29 
 

 Brucker et al. (1997) estudaram a complexidade dos problemas de programação 

com máquinas multi-propósito. A ênfase foi dada para os casos de máquinas paralelas 

idênticas e uniformes. O problema de programação de máquinas multi-propósito é uma 

generalização dos problemas clássicos de máquinas paralelas, nos quais uma tarefa só 

pode ser processada por uma máquina pertencente a um determinado conjunto 

especificado, ou seja, dado   máquinas         e   tarefas        . A tarefa   

tem que ser processada por uma máquina do conjunto              de máquinas. 

 

Koulamas (1997) estudou o problema de máquinas idênticas com o objetivo de 

minimizar o atraso médio, utilizando as ideias da heurística PSK
7
, dando origem à 

heurística KPM
8
 e também a uma versão da heurística simulated annealing. A heurística 

de decomposição proposta tem por objetivo decompor o problema em subproblemas de 

um tamanho tratável e assim, ser resolvido de uma maneira simples. Também foi 

proposto para este ambiente a heurística simulated annealing utilizando um processo de 

troca entre tarefas e máquinas, o qual apresentou um bom desempenho, com a 

desvantagem de demandar elevado esforço computacional.  

 

As regras de prioridade, conforme comentado anteriormente são eficientes para 

determinados casos e também podem ser uma alternativa para iniciar um algoritmo mais 

robusto. Foi este o caso utilizado por Azizoglu; Kirca (1998), que estudou o problema 

de máquinas paralelas com o objetivo de minimizar o atraso total (total tardiness), 

aplicando um algoritmo SPT e EDD, para achar limitantes superiores para a árvore  

branch and bound, no início do processamento. 

 

Alidaee; Rosa (1997) abordaram o problema de máquinas paralelas idênticas 

aplicados em casos para mimimizar o atraso total ponderado e também para atraso total 

não ponderado. Utilizaram uma heurística chamada de MDD (Modified Due Date), que 

é uma variação da regra de sequenciamento EDD. A regra MDD foi comparada com 

outras regras consagradas, como a regra COVERT (Cost Over Time) de Carroll (1965), 

                                                           
7
 PSK – Possui o objetivo de minimizar o atraso médio no caso de máquina única. Esta regra ordena as 

tarefas aplicando a regra SPT, em que as tarefas com menor tempo de processamento são priorizadas e, 

em caso de empate, é empregada a regra EDD.  

 
8
 KPM - utiliza as regras SPT e PSK para ordenar tarefas e designar para as máquinas com o objetivo de 

minimizar o atraso total. 



30 
 

e AU (Apparent Urgency) de Morton, Rachamadugu e Vepsalainen (1984), e que por 

meio de testes comprovou ter conseguido melhores soluções.  

 

Blazewicz et al. (2000) mostrou um problema de programação de tarefas em 

máquinas paralelas com o processamento podendo ser interrompido e as máquinas 

possuindo disponibilidade limitada, ou seja, existem intervalos de tempo em que as 

máquinas não estão disponíveis. Foram utilizadas técnicas de programação linear e de 

fluxo em rede com o objetivo de minimizar o makespan.  

 

Cao et al. (2005) apresentaram um trabalho que tem por objetivo minimizar 

simultaneamente o custo do atraso do processamento das tarefas, e os custos que as 

máquinas “carregam”. O problema é descrito como PMSSM (Parallel Machine 

Selection Scheduling Model). A função objetivo reflete o balanço entre o sistema de 

custo da máquina, e o custo relacionado com as penalidades de atraso das tarefas. Dessa 

forma, se uma máquina é selecionada para processar uma tarefa qualquer, um custo 

sobre a máquina é gerado. Assim, o custo de uma máquina com grande capacidade de 

processamento será muito maior do que o de uma com pouca capacidade. O método 

utilizado foi a busca tabu com memória de curto prazo, o qual apresentou bons 

resultados. 

 

Liaw et al. (2003) abordaram um problema de máquinas paralelas não 

relacionadas com o objetivo de minimizar o atraso total ponderado, e mostraram as 

propriedades de um programa ótimo, e também propuseram um algoritmo branch and 

bound. Shim e Kim (2007) também exploraram as propriedades de um programa ótimo 

e sugeriram um algoritmo branch and bound aplicado ao caso de máquinas paralelas 

idênticas com o objetivo de minimizar o atraso total.  

 

Panwalkar et al. (1993) propuseram a heurística PSK com o objetivo de 

minimizar o atraso médio no caso de máquina única. A heurística proposta mostrou-se 

eficaz para casos em que a data de entrega é mais apertada.  

 

Biskup et al. (2008) relataram um problema de máquinas paralelas idênticas 

com função objetivo de minimizar o atraso total, onde propuseram algumas heurísticas 



31 
 

baseadas em regras de sequenciamento como EDD, MDD, TPI
9
 e Minimum Slack 

10
(folga mínima). Estas regras foram comparadas com as versões tradicionais MDD, 

KPM e TPI e comprovaram a boa performance do MDD proposto. 

 

 Ou; Leung (2008) mostram o problema de programação com máquinas paralelas 

idênticas com inclusão de conjuntos de restrições para serem processadas. Neste 

problema, o conjunto de tarefas são designadas para diferentes máquinas paralelas com 

a mesma velocidade de processamento e cada tarefa é compatível apenas com um 

conjunto de máquinas. Dessa forma, cada tarefa é compatível somente com um 

subconjunto destas máquinas. O objetivo é minimizar o makespan. Lin et al. (2011) 

abordaram o problema de máquinas não-relacionadas, avaliando os seguintes objetivos 

Makespan, Total Weighted Completion Time e Total Weighted Tardiness.   

 

Minimizar o makespan siginifica não só concluir todas as tarefas tão rápido 

quanto possível, mas também maximizar a utilização das máquinas. Já o Total Weighted 

Completion Time         fornece uma indicação do custo total de manter estoques, 

incorridos pelo programa. E por fim, a outra medida de desempenho        , é uma 

medida de satisfação do cliente em relação ao serviço ser executado no prazo. Os 

autores trabalham a questão de encontrar uma heurística que possua bom desempenho 

para as três funções objetivo mencionadas. A prática mostra que existem algumas 

heurísticas que possuem maior aderência em determinada medida de performance, 

sendo difícil encontrar uma que obtenha bom desempenho em mais de um critério.  

 

2.3 Programação de Navios  

 

Ronen (1993) abordou a questão de programação de navios, onde fez uma 

revisão dos principais trabalhos, abordagens e problemas deste campo até aquela época. 

A função objetivo mais encontrada nesta área é minimizar custos, dado o montante de 

capital envolvido nestas operações, e as principais decisões a serem tomadas são 

referentes a scheduling e fleet size (programação e composição da frota). A 

                                                           
9
 TPI - Traffic Priority Index: leva em consideração o congestionamento do sistema de produção, 

designando as tarefas para as máquinas com menor carga de trabalho. 

 
10

 Minimum Slack - é uma variação da regra EDD, em que a folga remanescente de cada tarefa é 

calculada, e a tarefa com a mínima folga é a próxima a ser programada. 



32 
 

programação de navios é o nível mais detalhado no planejamento operacional de uma 

empresa de navegação, e inclui decisões como: o que cada navio vai carregar e quando. 

Tratam-se de problemas combinatórios, os quais admitem diversas soluções. 

 

 Brown et al. (1987) abordaram o problema de programação de navios no 

transporte de óleo cru. Foi utilizado um modelo de partição de conjuntos para resolver o 

problema, no qual conseguiram determinar velocidades ótimas para as embarcações. Os 

problemas relacionados à programação de embarcações no transporte de óleo cru, 

geralmente tem como objetivo minimizar os seguintes custos: 

? Custo de oportunidade (custo diário); 

? Consumo de combustível; 

? Consumo de combustível para sistemas auxiliares; 

? Custos de entrada em portos e em canal; 

? Custo do aluguel de uma embarcação para cargas eventuais (sem rota 

fixa). 

 

Miller (1987) apresenta um modelo interativo para programação de navios. O 

problema abordado é relacionado com a programação de navios tanques empregados no 

reabastecimento de terminais (portos com tanques de armazenagem), o qual 

desenvolveu duas modelagens, uma utilizando o fluxo em rede e a outra utilizando 

programação inteira mista. 

 

Fagerholt (2004) apresentou um sistema de apoio a decisão para programação de 

frota de navios. Brønmo et al. (2007a) apresentaram uma heurística de busca local com 

multi-início (multi-start) para o problema de programação de navios. As soluções 

iniciais são geradas de forma aleatória, por inserção. As melhores soluções iniciais são 

melhoradas por uma heurística de busca local.  

 

Brønmo et al. (2007b) mostraram um modelo de programação mista e por 

partição de conjuntos aplicada no problema de programar e roteirizar uma frota de 

navios com cargas de tamanhos flexíveis. Mendes (2007) abordou o problema de 

programação de frota de apoio, onde para uma mesma tarefa, poderiam ser necessárias 

várias embarcações para atender ao serviço. Como métodos de solução foram usados: 



33 
 

heurística construtiva, branch and cut, variable neighbourhood search (VNS), e 

combinação de heurística com os métodos descritos. Outra contribuição importante foi 

dada por Brønmo et al. (2010), na qual abordou a programação de navios utilizando o 

método de geração de colunas. 

 

2.4 Conclusão da Revisão Bibliográfica 

 

A revisão bibliográfica apresentou de uma forma geral, diversos problemas 

relacionados à programação de tarefas, com ênfase em máquinas paralelas e a 

generalização das características para o ambiente de programação de frota de 

embarcações. Dessa maneira, trata-se de uma situação que a empresa possui uma frota 

composta por uma determinada classe de embarcações, que no caso são os PLVs, e 

necessita programar a ordem de execução das tarefas dentro de um determinado 

horizonte de planejamento. 

 

Graham et al. (1979) apresentam uma notação padrão para descrever as 

variações dos ambientes de programação de máquinas, incluindo as paralelas, que 

podem ser idênticas, proporcionais e não-relacionadas. O presente trabalho pode ser 

considerado uma generalização dos ambientes de máquinas paralelas não-relacionadas e 

possui o objetivo de minimizar o atraso total ponderado na execução das tarefas, que na 

literatura é conhecido como total weighted tardiness, que é uma medida de satisfação 

do cliente em relação ao serviço ser executado no prazo. 

 

Outros critérios de medir o desempenho nos problemas de máquinas paralelas 

também foram apresentados como o makespan, que siginifica não só concluir todas as 

tarefas tão rápido quanto possível, mas também maximizar a utilização das máquinas. O 

Total Weighted Completion fornece uma indicação do custo total de manter estoques, 

incorridos pelo programa. O critério total weighted tardiness constitui um dos casos 

mais difíceis. 

 

Quanto aos métodos de solução propostos, podem-se destacar duas grandes 

abordagens: métodos exatos e não-exatos. Devido à resposta cada vez mais rápida que o 

mercado necessita das empresas, nem sempre é possível utilizar uma abordagem por 



34 
 

algum método exato. Assim, as heurísticas desempenham um papel fundamental no 

tocante a prover uma solução de boa qualidade em um intervalo de tempo razoável.  

 

Também é importante destacar as regras de sequenciamento como a SPT, LPT, 

EDD, PSK, KPM, e suas modificações, que podem fornecer soluções de qualidade, ou 

ainda ser utilizada como um início para um algoritmo mais robusto.   

  

A tabela 2.1 destaca as principais referências do trabalho, em que é evidenciado o 

tipo de problema e os métodos de solução propostos. 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 



35 
 

Tabela 2.1 – Principais referências de programação de tarefas da pesquisa 

Referência Problema Abordagem 

McNaughton (1959) Máquinas paralelas idênticas  
Data de entrega / Tempo de fluxo 

Graham (1969) Máquinas paralelas idênticas Algoritmos de aproximação 

Bruno et al. (1974) Máquinas paralelas idênticas SPT/LPT 

Horowitz; Sahni 

(1976)  
Máquinas paralelas não-relacionadas 

Algoritmos exatos e de 

aproximação 

Ibarra; Kim (1977) 
Máquinas paralelas não-relacionadas / 

idênticas 
Heurísticas, LPT, SPT 

Lawler; Labetoulle 

(1978)  
Máquinas paralelas não-relacionadas Programação linear 

Fuller (1978) Programação de produção Heurísticas   

Graham et al. (1979) 

Máquinas paralelas idênticas /proporcionais 

/ não-relacionadas 
Algoritmos de aproximação 

Open shop / flow shop / job shop/ máquina 

única 
Algoritmos de otimização 

Davis; Jaffe (1981) Máquinas paralelas não-relacionadas Algoritmos de aproximação 

Baker; Bertrand 

(1982) 
Sistema de produção SPT/EDD 

Potts (1985) Máquinas paralelas não-relacionadas Heurística duas fases 

Brown et al. (1987) Programação de embarcação Partição de conjuntos 

Miller (1987) Programação de embarcação 
Fluxo em rede / programação inteira 

mista 

Lenstra et al. (1990) Máquinas paralelas não-relacionadas Algoritmos de aproximação 

Hariri; Potts (1991) Máquinas paralelas não-relacionadas Heurísticas   

Lee (1991) Máquinas paralelas idênticas LPT/LPT (modificado) 

Panwalkar et al. 

(1993) 
Máquina única PSK 

Glass et al. (1994) Máquinas paralelas não-relacionadas 

Busca local / Busca tabu  

Algoritmo genético 

Simulated annealing 

Método da descida 

Piersma; Van Dijk 

(1996) 
Máquinas paralelas não-relacionadas Busca local 

Brucker (1997) Máquinas paralelas idênticas / proporcionais Complexidade computacional 

Alidaee e Rosa (1997) Máquinas paralelas idênticas MDD 

Koulamas (1997)   Máquinas paralelas idênticas KPM e simulated annealing 

Azizoglu; Kirca 

(1998) 
Máquinas paralelas idênticas/proporcionais Branch and Bound 

Blazewicz et al. 

(2000) 

Máquinas paralelas idênticas / proporcionais 

/ não-relacionadas 
Programação linear / fluxo em rede 

Fagerholt (2004) Programação de embarcação Sistema de suporte a decisão 

Brønmo et al. (2007a)  Programação de embarcação Busca local 

Brønmo et al. (2007b)  Programação de embarcação Partição de conjuntos 

Brønmo et al. (2010)  Programação de embarcação Geração de colunas 

 

 

 



36 
 

3. MODELAGEM MATEMÁTICA E MÉTODOS DE SOLUÇÃO 

 

Este capítulo aborda o modelo matemático e os métodos de solução do problema 

de programação da frota de navios PLVs. Antes da apresentação do modelo matemático 

serão revistos os principais aspectos do problema em questão.  

 

3.1 Descrição Resumida do Problema  

 

Este trabalho aborda o problema de uma operação de lançamento e instalação de 

linhas flexíveis e rígidas realizadas por embarcações denominadas pipe layer vessel. As 

atividades consideradas são expressas pelas tarefas de instalação de novas linhas e a 

interligação à malha existente, dentro de um horizonte de 3 a 6 meses (curto a médio 

prazo). As seguintes premissas são dadas: 

1) Cada tarefa poderá ser realizada a partir de um determinado instante de 

liberação, refletindo a data prevista de chegada de material no porto, ou a 

data prevista da emissão da licença ambiental, ou alguma outra restrição 

do processo; 

2) A data de entrega é dada pela data de liberação mais a duração da tarefa; 

3) As diversas sub-atividades que compõem uma tarefa não serão objeto de 

análise ou de melhoria neste estudo, por demandarem conhecimento 

específico do processo; 

4) O abastecimento e a troca de tripulação de um PLV ocorrerão 

concomitantemente com a estadia no porto, durante o processo de 

carregamento de material/equipamentos; 

5) Há restrições de compatibilidade entre tarefa e embarcação, de forma que 

algumas embarcações poderão não ser aptas para executar uma certa 

tarefa; 

6) As durações das tarefas podem ser diferenciadas por embarcação; 

7) O tempo de reposicionamento de uma embarcação após a conclusão de 

uma tarefa é nulo, já que o término de uma tarefa ocorre no porto com a 

devolução de material; 

8) A composição da frota é fixa, ou seja, os tipos de embarcação e a 

quantidade de cada uma delas na composição da frota não serão 



37 
 

alteradas. Além disso, todas as características das embarcações que 

compõem a frota, necessárias à modelagem do problema, são conhecidas; 

9) O critério de priorização das tarefas será exclusivamente baseado no 

potencial de produção e não levará em conta aspectos de meio-ambiente, 

de continuidade operacional e fatores políticos internos à empresa. Este 

potencial de produção reflete o quanto a interligação de uma linha em um 

determinado poço pode trazer de produção e retorno financeiro para a 

empresa petrolífera. Assim, existem tarefas que podem trazer um retorno 

maior do que as outras, fazendo necessário haver uma priorização; 

10) As embarcações estarão disponíveis para o próximo horizonte de 

planejamento no instante em que finalizar a sua última tarefa, 

caracterizando a existência de uma data de liberação da embarcação; 

11)  Não existem restrições de precedência entre as tarefas; 

12)  Cada embarcação só poderá executar uma tarefa por vez e as tarefas só 

podem ser executadas por uma única embarcação; assim, não é admitido 

que uma determinada tarefa possa ser realizada parcialmente por duas 

embarcações. 

 

As decisões do modelo são quanto à definição das datas de início de cada tarefa, 

e a respectiva embarcação responsável pela execução dessa tarefa. O modelo divide a 

escala de tempo em dias, impondo que o início de uma determinada tarefa ocorra em um 

determinado dia. Esta modelagem faz com que os parâmetros sejam tratados somente na 

unidade específica, que no caso são dias.  

 

3.1.1 Modelo Matemático 

 

Para o presente problema, foi formulado um modelo de programação linear 

inteira mista, usando as ideias apresentadas em van den Akker et al. (2000), para um 

problema de máquina simples com função objetivo regular. Esta formulação baseia-se 

em uma escala de tempo discretizada. É assumido que os parâmetros são conhecidos e 

inteiros, sendo utilizada a notação baseada em Blazewicz et al. (1991) e Unlu; Masson 

(2010). 

 

 



38 
 

Conjuntos 

  Conjunto de tarefas           

  Conjunto de embarcações          

 

Parâmetros 

T         Horizonte de planejamento = T (índice t) 

   Data de liberação da tarefa   

          Data de liberação da embarcação   

  
 
  Tempo de execução da tarefa   pela embarcação   

    Penalidade associada à tarefa  , quando é iniciada na data   

    Parâmetro binário que será igual a 1 se a tarefa   for compatível com a 

embarcação  ; e 0, em caso contrário. 

 

Variáveis de Decisão 

   
     , se a embarcação   inicia a tarefa      na data  ; 0, em caso contrário. 

 

Modelo 

min       
    

   

                  
   
  

   
 
                                                             

Sujeito a: 

     
    

   

                  
 
      

                                                                                     

     
   

           
     

                   
    

 
    
    

                                                                         

   
                                                                                                           

 

A equação       é a função objetivo do problema e contempla a soma dos 

atrasos ponderados de todas as tarefas. É importante destacar que a somatória em   

ocorrerá da maior data entre as datas de liberação da tarefa e da embarcação, até a 

última data possível de início da tarefa. A restrição       garante que toda a demanda 

seja atendida, por meio de embarcações compatíveis. A restrição       garante que, em 

cada data, não seja violada a capacidade da embarcação. A equação       impõe que as 

variáveis sejam binárias. 

 



39 
 

Este modelo foi utilizado para gerar limitantes inferiores para os cenários de 

teste, por meio da técnica de geração de colunas. Utilizou-se a estrutura apresentada em 

van den Akker, et al. (2000), em que o problema foi reformulado utilizando-se a 

decomposição de Dantzig-Wolfe. O problema mestre restrito consistiu na seleção dos 

pseudo-schedules que cobrissem toda a demanda (conforme requerido pela restrição 2) 

a um mínimo custo. O subproblema consistiu em resolver um problema de caminho 

mínimo em uma rede acíclica para cada embarcação, o qual tinha como produto um 

pseudo-schedule, onde as tarefas poderiam, eventualmente, ocorrer mais de uma vez em 

uma mesma sequência, desde que não violassem a capacidade do recurso. 

 

3.2 Métodos de solução 

 

Esta subseção descreve os métodos de solução propostos para o problema de 

programação de frota de navios PLVs. Inicialmente, são apresentadas duas heurísticas 

construtivas e logo após dois métodos de busca (refinamento). Por fim, uma versão 

básica da meta-heurística GRASP e, após isto, o método GRASP com path relinking e 

algumas de suas estratégias de implementação. 

 

3.2.1 Heurísticas e Meta-heurísticas 

 

As heurísticas conseguem boas soluções empregando um esforço computacional 

relativamente baixo, mas sem garantir a otimalidade (Voß, 2001). De uma forma geral, 

as heurísticas são procedimentos que procuram solucionar problemas de uma forma 

racional, explorando a estrutura do problema, com o objetivo de encontrar uma solução 

boa, e quando possível, a ótima. 

 

Demeulemeester; Herroelen (2002) apresentam as heurísticas em duas 

categorias: heurísticas construtivas e heurísticas de busca. As heurísticas construtivas 

iniciam a programação vazia e adicionam as tarefas uma a uma, até obter um programa 

viável. Já as heurísticas de busca iniciam a partir de um programa viável que foi obtido 

com a heurística construtiva, e são feitas operações para transformar a solução em uma 

melhor. Estas operações são repetidas até que um ótimo local seja obtido, ou se atinja 

uma critério de parada. 

 



40 
 

3.2.2 Heurística Construtiva 

 

As heurísticas construtivas são empregadas na geração de uma ou mais soluções 

viáveis, eventualmente, de boa qualidade, com baixo esforço computacional. Elas 

podem ser utilizadas de maneira isolada mas, de uma forma geral, são combinadas com 

outros métodos mais elaborados, como algoritmos de busca local, meta-heurísticas e 

métodos exatos. 

 

3.2.3 Heurística Construtiva Proposta 

 

A heurística construtiva proposta, denominada HEU_C é baseada em Lin et al. 

(2011). Esses autores apresentaram a heurística HEU-II para o caso de máquinas 

paralelas não-relacionadas, com o objetivo de minimizar o atraso ponderado total. A ideia 

principal está concentrada no cálculo do índice Mij, que tem como função principal 

priorizar as tarefas de acordo com o rateio entre data de entrega e penalidade. 

 

O índice Mij expressa a relação entre a data prevista de término da tarefa   na 

máquina  , e a penalidade da tarefa  . A data prevista de término é calculada como 

sendo a maior data entre a data desejada de entrega (due date) e o possível instante de 

término da tarefa   pela máquina  . Para tarefas que possuem mesma data de entrega, 

terão prioridade aquelas que tiverem maior penalidade. E, para tarefas com penalidades 

iguais, terão prioridade aquelas com menor data de entrega. A figura 3.1 mostra o 

algoritmo Heurística Construtiva HEU_C. 

 

ALGORITMO HEURÍSTICA CONSTRUTIVA HEU_C 

1.    LerDados() 

2. faça 

3.       para tarefa j=1 a n faça  

4.     para embarcação i=1 a m 

5.              se embarcação i é compatível com tarefa j então 

6.            Calcule o índice Mij 

7.              fim se             

8.          fim para      
9.    fim para 

10.      Selecione a tarefa j* com base no menor Mij 

11.      Insira a tarefa j* na melhor posição viável de inserção 

12. enquanto existir tarefas para programar 

Figura 3.1 – Pseudocódigo da Heurística Construtiva HEU_C. 



41 
 

A heurística construtiva HEU_C faz uma verificação de compatibilidade entre a 

embarcação e a tarefa para calcular o índice Mij. Após este cálculo é selecionada a tarefa 

com o mínimo valor de Mij, e a tarefa é inserida na sua melhor posição de inserção. O 

critério de parada é quando todas as tarefas forem programadas.  

 

3.2.4 Heurísticas de Busca 

 

As heurísticas de busca partem de uma solução inicial conhecida, e procuram 

explorar a vizinhança desta solução por meio de movimentos, com o objetivo de 

melhorá-la, chegando a ótimos locais.  

 

Para a construção da vizinhança de uma dada solução é necessário definir as 

regras dos movimentos que alteram um ou mais atributos da solução. Dessa forma, é 

criada a vizinhança da solução inicial e é feita a escolha da solução nesta vizinhança 

com o menor valor de função objetivo (Demeulemeester, Herroelen; 2002). A solução 

escolhida torna-se, então, a nova solução de referência e o processo continua até ser 

encontrado um ótimo local. 

 

Este fato faz com que o método chegue, muitas vezes, em ótimos locais distantes 

do ótimo global, visto que ele não é capaz de escapar da otimalidade local e explorar 

novas regiões do espaço de busca.  

 

Existem algumas dificuldades com relação ao desenvolvimento das heurísticas 

de busca, como por exemplo, a sensibilidade à solução de partida, à definição do melhor 

tipo de vizinhança, à melhor estratégia para escolha da próxima solução, e a definição 

do número de iterações. Há algumas estratégias que podem ser seguidas como: Multi-

vizinhança – neste caso, são consideradas mais de um método de escolha de vizinhança. 

Ao atingir o ótimo local em uma vizinhança, é iniciada uma nova busca local baseada 

em outra vizinhança. O algoritmo termina quando a solução atual é um ótimo local em 

relação a todas as vizinhanças empregadas, ou se alcance um critério de parada. Outra 

estratégia é redução da vizinhança na qual é investigado um subconjunto da vizinhança 

da solução atual.  

 



42 
 

Aarts; Lenstra (2003) destacam a importância dos algoritmos de busca local, 

sendo que muitas variações e evolução surgiram por meio de analogias à natureza, e 

algumas por meio de outras áreas do conhecimento como física, biologia e 

neurofisiologia. Também discorrem que a utilização dos algoritmos de busca local tem 

sido intensificada nos dias atuais, em decorrência da evolução dos recursos 

computacionais.  

 

Para a presente pesquisa são propostas duas buscas locais, intituladas de Busca 

Local Inserção e Busca Local Troca. A seguir é descrito o funcionamento de cada uma e 

também um esquema com os movimentos e pseudocódigo. 

 

3.2.5 Busca Local Inserção 

 

O movimento de inserção é caracterizado pela remoção de uma determinada 

tarefa de sua sequência, e pela inserção em outra. Com isto, quando uma tarefa da 

sequência é removida, é verificado o benefício que a remoção da mesma gera, uma vez 

que as demais tarefas poderão, eventualmente, ser antecipadas. Em seguida, é 

necessário verificar todas as possíveis posições de inserção em todas as sequências de 

embarcações compatíveis. Em cada posição de inserção, o custo da inserção é 

calculado, ou seja, mensura-se, financeiramente, o quanto que a inserção causa de atraso 

às demais tarefas da sequência. Após averiguar a melhor inserção para todas as 

embarcações e todas as tarefas, executa-se o movimento para aquela tarefa cujo 

resultado seja o melhor possível, isto é, a maior redução no valor da função objetivo. 

Quando não houver movimento capaz de reduzir o valor da função objetivo, um ótimo 

local terá sido atingido e o método é encerrado. Os esquemas das figuras 3.2 e 3.3 

definem os principais movimentos da busca local inserção. A figura 3.4 contém o 

pseudocódigo desta heurística.  

 



43 
 

 

Figura 3.2 – Movimento que remove e testa inserção da tarefa. 

 

 

 

Figura 3.3 – Inserção da tarefa na melhor posição da melhor sequência. 

 



44 
 

ALGORITMO BUSCA LOCAL INSERÇÃO 

1. faça 

2. para tarefa j=1 a n faça  

3.     Remover tarefa j de sua sequência atual 

4.        para i=1 a m faça 

5.      se sequência i é compatível com tarefa j então 

6.         Achar melhor posição de inserção da tarefa j na    

8.                sequência i.  custo(i,j)   a variação de custo pela   
9.                remoção da tarefa j de sua sequência original e          

10.               inserção na melhor posição da sequência i       

11.      fim se 

12.       fim para 

13.        Devolve tarefa j para a sua sequência original 

14.    fim para 

15.     custo(i*,j*)=                        

16.    se  custo(i*,j*)&amp;lt;0 então            
17.     Executa o movimento de inserção da tarefa j na sequência i 

18.     Atualiza os custos e os instantes de início das tarefas 

19.    fim se 

20. enquanto  custo(i*,j*)&amp;lt;0  
21. Atualiza solução 

Figura 3.4 – Pseudocódigo Busca Local Inserção 

 

3.2.6 Busca Local Troca 

 

A busca local troca é semelhante a anterior, sendo que ela pode trabalhar junto 

com a busca local inserção. Ela necessariamente parte da solução inicial gerada pela 

heurística construtiva. A idéia básica é verificar o benefício causado pela remoção das 

duas tarefas de suas respectivas sequências, e identificar a melhor posição de inserção 

de cada tarefa na outra sequência, computando o ganho na função objetivo. 

 

Este procedimento é realizado para todos os pares de tarefas desde que estejam 

em sequências distintas, e cujas embarcações sejam compatíveis entre si. Após testar 

todos os pares de troca viáveis, o movimento é realizado para o par que apresentar o 

maior ganho na função objetivo. Este processo é repetido enquanto houver melhoria na 

função objetivo. As ilustrações das figuras 3.5 e 3.6 destacam o procedimento básico 

desta heurística, enquanto a figura 3.7 contém o pseudocódigo.  

 



45 
 

 

Figura 3.5 – Remove e testa a inserção de duas tarefas entre um par de sequências. 

 

Figura 3.6 – Inserção das tarefas na melhor posição do par de sequências. 

 

 



46 
 

ALGORITMO BUSCA LOCAL TROCA 

1. faça  

2.    para tarefa j=1 a n faça  

3.      para tarefa k=j+1 a n faça 

4.         se     e sequência(j)   sequência (k) e 
5.        sequência (k) compatível com tarefa j e  

6.   sequência (j)  compatível com tarefa k então 

7.   remove tarefa j 

8    remove tarefa k  

9.   Achar melhor posição de inserção da tarefa j na   

10.               sequência (k)  

11.   Achar melhor posição de inserção da tarefa k na       

12.               sequência (j)  

13.                custo(j,k)   a variação de custo pela troca de       
14.               j por k 

15.    fim se 

16.       fim para 

17.        Devolve tarefas j e k para as sequências originais 

18.   fim para 

19.     custo(j*,k*)=                        

20.  se  custo(j*,k*)&amp;lt;0 então            
21.  Executa o movimento de troca entre j* e k*  

22.  Atualiza os custos e os instantes de início das tarefas 

23.  fim se 

24. enquanto  custo(j*,k*)&amp;lt;0   
25. Atualiza solução 

Figura 3.7 - Pseudocódigo da busca local troca 

 

3.2.7 Meta-heurísticas 

 

As meta-heurísticas são métodos de melhoria capazes de escapar de ótimos 

locais, evitando uma parada prematura do algoritmo de busca. Existem diversos tipos de 

meta-heurísticas, dentre as quais podemos destacar o GRASP – (Greedy Randomized 

Adaptive Search Procedure), Scatter Search, Busca Tabu dentre outros. 

 

3.2.8 Meta-heurística GRASP 

 

Segundo Feo e Resende (1989, 1995), a meta-heurística GRASP (Greedy 

Randomized Adaptive Search Procedure) trabalha com múltiplas soluções iniciais e, em 

cada iteração, duas fases devem ser realizadas: fase de construção e busca local. Na 

primeira fase é construída uma solução viável, por meio de um algoritmo guloso 

aleatório; na segunda fase, a vizinhança da solução gerada é explorada, até que um 

ótimo local seja atingido. 

 



47 
 

Inicialmente, é requerida uma lista ordenada de tarefas de acordo com algum 

critério. Em seguida, constrói-se uma lista restrita de candidatos (RCL – Restricted 

Candidate List), que tem como objetivo armazenar os melhores elementos que possam 

fazer parte da solução parcialmente gerada, a qual será usada para sorteio da “próxima” 

tarefa que será incorporada à solução (parcial). Uma vez sorteado, a lista é refeita e o 

processo continua até que todas as tarefas tenham sido programadas. 

 

Em relação à definição do melhor tamanho da RCL, alguns autores têm 

desenvolvido diferentes estratégias como, por exemplo, a de Prais; Ribeiro (2000), que 

elaboraram uma abordagem conhecida como GRASP Reativo, em que é utilizada uma 

estratégia para a escolha do melhor parâmetro alfa que define o tamanho da RCL. A 

vantagem desta abordagem é que a escolha de alfa é auto-adaptativa, ao passo que no 

GRASP tradicional o parâmetro alfa é fixo. Boudia et al. (2007) comprovaram a 

eficácia da abordagem reativa em relação à lista de tamanho fixa, em um problema 

acoplado de produção e distribuição. 

 

A figura 3.8 descreve o pseudocódigo do algoritmo GRASP na sua versão 

básica. 

 

ALGORITMO GRASP BÁSICO 

1. lerDados 

2.    para i=1,..., maxIterações 

3.       solução   Construtiva 

4.       solução   buscaLocal    
5.    atualizaSolução 

6.    fim para 

7. retorna melhorSolução 

Figura 3.8 – Pseudocódigo GRASP Básico adaptado de Resende; Ribeiro (2003a). 

 

O algoritmo da fase construtiva pode ser exemplificado da seguinte forma: 

suponha que a lista restrita de candidatos trabalha com três elementos, e que foi 

utilizado um critério de ordenação qualquer, e assim obtida a seguinte sequência gulosa:  

 

 

 

 

 



48 
 

 

                    

Iteração 1     

RCL = {j1, j7, j9}   Solução Parcial {j7} 

Tarefa sorteada = j7     

      

Iteração 2     

RCL = {j1, j9, j10}   Solução Parcial {j7, j10} 

Tarefa sorteada = j10   

      

 Iteração 3     

RCL = {j1, j9, j5}   Solução Parcial {j1, j7, j10} 

Tarefa sorteada = j1     

      

Iteração 4     

RCL = {j9, j5}   Solução Parcial {j9, j1, j7, j10} 

Tarefa sorteada = j9     

      

Iteração 5     

RCL = {j5}   Solução Completa {j9, j1, j5, j7, j10} 

Tarefa sorteada = j5     

                 Figura 3.9 – Exemplo de Lista Restrita de Candidatos 

Na busca local, é tentado melhorar a solução da fase construtiva, até que uma 

solução ótima local é atingida (linha 4 da figura 3.8).  

 

3.2.8.1 Descrição do GRASP Proposto 

 

Para o presente trabalho foi realizada uma implementação da heurística 

GRASP e, posteriormente, adicionou-se o mecanismo de path relinking. A versão 

inicial segue a estrutura apresentada na figura 3.10. 

Algoritmo GRASP(maxIterações) 

1 LerDados() 

2 Para k=1,...,maxIterações faça 

3  Atualiza configuração k  

4  Para i=1,...,n faça 

5     Atualiza lista restrita de candidatos de tamanho l(k) 

6      Sorteia uma tarefa j em RCL(k) 

7     Insere a tarefa j na melhor posição viável de inserção 

8  Fim 

9  BuscaLocal() 

10  Atualiza MelhorSolução  

11 Fim 

12 Retorna MelhorSolução  

Fim GRASP 

Figura 3.10 – Pseudocódigo GRASP Proposto. 



49 
 

Em cada iteração será atualizada uma determinada “configuração” do 

algoritmo. Esta configuração consiste em três elementos: o tamanho da lista restrita de 

candidatos (l), a regra de ordenação que será aplicada às tarefas, e a atualização da 

semente do gerador de número aleatório. Quanto ao tamanho da lista restrita, os 

seguintes valores serão adotados: 2, 3, 4, 5, 6 e n. Isto permitirá trabalhar com regras 

aproximadamente gulosas (quando l=2), ou com busca totalmente aleatória (quando 

l=n). 

 

Quanto à regra de ordenação, ao invés de usar uma regra dinâmica em que, 

após um determinado sorteio as tarefas remanescentes sejam reclassificadas, optou-se 

por utilizar uma regra fixa de ordenação. Desta forma, quando uma tarefa pertencente à 

lista restrita é escolhida, a próxima tarefa a compor a lista restrita já será conhecida. Seis 

regras de ordenação das tarefas foram testadas, sendo que cada regra possui dois 

critérios de ordenação. Em caso de empate após a aplicação do primeiro critério, o 

segundo critério servirá para desempatar. Se persistir o empate, então as tarefas serão 

ordenadas pelo seu índice. As regras desenvolvidas foram:  

 

 

(1) Menor Compatibilidade e Menor Instante de Liberação;  

(2) Menor Compatibilidade e Maior Penalidade;  

(3) Menor Instante de Liberação e Menor Compatibilidade;  

(4) Menor Instante de Liberação e Maior Penalidade;  

(5) Maior Penalidade e Menor Instante de Liberação;  

(6) Maior Penalidade e Menor Compatibilidade.  

 

A ideia de utilizar “menor compatibilidade” é para que tarefas com poucos 

navios compatíveis, isto é, aptos para realizarem o serviço, sejam priorizadas, de forma 

a facilitar a geração de soluções viáveis. Quanto à semente, para cada combinação 

acima descrita (tamanho de lista restrita e regra de ordenação), serão testadas 100 

diferentes sementes, perfazendo um total de 6 x 6 x 100 = 3.600 iterações. 

 



50 
 

Após a leitura dos dados na linha 1, a configuração da iteração é atualizada, e a 

fase construtiva é aplicada entre as linhas 4 e 8, até que todas as tarefas tenham sido 

programadas. Cabe destacar que, após a atualização da lista restrita (linha 5) e o sorteio 

da próxima tarefa a ser programada (linha 6), realiza-se um procedimento, descrito na 

linha 7, de identificação da melhor posição de inserção. Isto consiste em testar, para 

cada embarcação compatível com a tarefa sorteada, todas as possíveis posições de 

inserção, verificando aquela que gera o menor acréscimo de custo à solução 

parcialmente gerada. 

 

Após alocar todas as tarefas, uma rotina de busca local é chamada na linha 9. 

Esta rotina aplica os operadores de inserção (relocate) e troca (swap), descritas 

anteriormente neste capítulo. O primeiro operador remove a tarefa de sua posição atual 

e insere-a em todas as demais posições das embarcações compatíveis. O segundo 

operador realiza a troca entre cada par de tarefas, entre embarcações que sejam 

compatíveis. Em cada iteração da busca, realiza-se o movimento que proporciona a 

maior redução na função objetivo. Quando nenhuma melhoria for encontrada, uma 

solução ótima local com relação às vizinhanças de troca e inserção terá sido encontrada 

e o algoritmo encerra. 

 

Por último, caso a solução gerada seja melhor que a “MelhorSolução”, esta é 

atualizada. O GRASP continua até que o limite de iterações dado por “maxIterações” 

seja atingido.  

 

3.2.9 Heurística Path Relinking 

 

A heurística path relinking ou (reconexão por caminhos), descrita 

originalmente por Glover (1996), e também em Glover et al. (2000), consiste em 

explorar o caminho ou trajetória entre duas soluções, uma denominada de solução 

inicial e a outra de solução guia. Em cada iteração é realizado um movimento na 

solução inicial, com o objetivo de aproximá-la da solução guia. Isto implica em 

introduzir atributos encontrados na solução guia na solução inicial, até que ambas as 

soluções sejam iguais. Esta trajetória pode ser compreendida como um processo que faz 

um balanço entre intensificação e diversificação, que é importante por permitir explorar 

o espaço de solução no caminho de aproximação entre as duas soluções. É possível que, 



51 
 

ao longo deste processo, um novo ótimo local seja alcançado, conforme ilustra a figura 

3.11, onde a solução inicial é dada por    e a solução guia    . Para chegar de   a     

são produzidas novas soluções:                        , indicada pela linha 

pontilhada. 

 

Ho; Gendreau (2006) destacam alguns componentes considerados críticos para 

a implementação do path relinking, como a forma que será construída o conjunto de 

elite (referência), o critério de escolha da solução inicial e da solução guia. Todas estas 

escolhas afetam o caminho que o algoritmo irá explorar.  

 

 

Figura 3.11 – Path Relinking: caminho original denotado pela linha contínua e uma 

possibilidade de reconexão pela linha pontilhada. Adaptado de Glover et al. (2000). 

 

O path relinking possui atributos ou formas distintas de implementação. 

Resende et al. (2010a) discutem a “atualização estática”, em que o conjunto de elite é 

preenchido e atualizado ao longo das iterações da aplicação do GRASP. Ao final, o path 

relinking é aplicado entre as soluções de elite, com o intuito de explorar o espaço que há 

entre cada par de soluções de elite. Na “atualização dinâmica”, para cada solução gerada 

pelo GRASP escolhe-se, aleatoriamente, uma solução dentre o conjunto de elite, e o 

path relinking é aplicado. Em ambas as estratégias (estática ou dinâmica), a solução 

resultante é sempre submetida a um processo de busca local. 

 

Resende; Werneck (2004) mesclaram estas duas estratégias. Ao longo das 

iterações, toda solução gerada foi submetida ao path relinking. E, ao final, a trajetória 



52 
 

entre cada par de soluções do conjunto de elite foi explorada, usando uma estratégia 

evolucionária, denominada de EvPR (Evolutionary Path Relinking): cada nova solução 

gerada pelo path relinking, após passar por determinados critérios de aceitação, era 

adicionada a uma nova população de soluções. As gerações são sucessivamente criadas 

com a aplicação do path relinking, até que nenhum indivíduo gerado seja capaz de 

melhorar a solução global. 

 

Resende; Ribeiro (2003b) destacam outras variações importantes: Forward 

Relinking: a trajetória é construída partindo da solução inicial   , até alcançar a solução 

guia    ; Backward Relinking: esta estratégia é o inverso da anterior, ou seja, a solução 

inicial neste caso é     e a guia   ; Mixed Relinking: duas trajetórias são 

simultaneamente exploradas, a primeira iniciando em    e a segunda em    , até que se 

encontrem. 

 

Em Resende et al. (2010b) é discutido o Randomized Path Relinking (RPR). A 

versão usual do path relinking adota um critério guloso na escolha do melhor 

movimento em cada iteração, na construção da trajetória que ligará a solução inicial à 

guia. Isto faz com que, certamente, um único caminho seja gerado, o que poderá 

impedir a obtenção de soluções melhores. O RPR introduz uma lista restrita de 

candidatos, na qual os melhores movimentos são inseridos e um deles, aleatoriamente, é 

escolhido. Isto garante que trajetórias diferentes serão geradas, aumentando a 

possibilidade de atingir novas soluções, eventualmente, de boa qualidade. 

 

Ribeiro; Rosseti (2007), Ribeiro et al. (2009) trabalharam a ideia conhecida 

como time-to-target solution, em que é determinada a probabilidade de o algoritmo 

encontrar uma solução igual ou superior a uma dada solução (target solution) dentro de 

um determinado tempo. Os autores também abordam estratégias de implementação 

paralela em metaheurísticas com o objetivo de acelerar a busca e resolver problemas 

grandes. Duas abordagens foram apresentadas: a paralelização independente, em que os 

threads não trocam nenhuma informação e a paralelização cooperativa onde a 

informação é compartilhada e usada pelos outros threads. 

 

A versão implementada do path relinking, apresentada na figura 3.12, utiliza a 

estratégia de “atualização dinâmica”, ou seja, cada solução gerada pelo GRASP é 



53 
 

combinada com uma solução sorteada dentre o conjunto de soluções de elite e é 

submetida à rotina de path relinking. Este procedimento só será realizado após o 

conjunto de elite estar totalmente preenchido. Na presente implementação, adotou-se 

um conjunto de elite com tamanho igual a 10. 

 

Procedimento GRASP_PathRelinking(maxIterações) 

1 LerDados() 

2 Para k=1,...,maxIterações faça 

3  Atualiza configuração k  

4  Para i=1,...,n faça 

5     Atualiza lista restrita de candidatos de tamanho l(k) 

6      Sorteia uma tarefa j em RCL(k) 

7     Insere a tarefa j na melhor posição viável de inserção 

8  Fim 

9  BuscaLocal() 

10  PathRelinking(sol_elite, sol_GRASP) 

11  Atualiza ConjuntoElite 

12  Atualiza MelhorSolução  

13 Fim 

14 Retorna MelhorSolução  

Fim GRASP 

Figura 3.12 – Estrutura básica do GRASP com Path Relinking 

 

A rotina do path relinking inicia ajustando as soluções de referências (inicial e 

guia), dependendo da estratégia escolhida (forward, backward, mixed). Se for a 

estratégia backward ou mixed, a solução guia será o ponto de partida, isto é, o algoritmo 

será iniciado pela melhor solução a qual é progressivamente modificado, até que a outra 

solução seja atingida. No caso da estratégia forward, a busca ocorre da pior solução para 

a melhor solução. 

 

É importante destacar que o presente problema envolve diferentes 

embarcações. Esta característica torna imprescindível a resolução de um problema de 

pareamento (matching), semelhante do que foi proposto por Ho; Gendreau (2006). Isto 

consiste em identificar qual a sequência da solução guia que é mais próxima de uma 

dada sequência da solução inicial. Após todas as sequências da solução inicial ser 

avaliadas, aplica-se um critério guloso, estabelecendo o pareamento às sequências mais 

similares, até que todas as sequência recebam a indicação de uma sequência 

equivalente. 

 

A aplicação do path relinking consistirá em realizar os movimentos que 

inserem as tarefas que estão fora de suas sequência correspondentes (na solução guia), 



54 
 

na solução inicial. Isto pode ser feito tanto por meio de um movimento de inserção 

(relocate), quanto por meio de um movimento de troca (swap) entre duas tarefas. Após 

todos os possíveis movimentos serem avaliados, o melhor movimento será executado. É 

importante lembrar que o melhor movimento poderá piorar o valor da função objetivo. 

 

Outro aspecto a ser comentado é que uma tarefa, ao ser transferida para uma 

nova sequência, é posicionada na melhor posição de inserção. Contudo, após todas as 

tarefas terem sido enviadas às sequências correspondentes da solução guia, pode 

acontecer que algumas tarefas não estejam nas mesmas posições que em suas sequência 

de referência. Então, um procedimento de inserção/remoção intrínseco à sequência é 

realizado, reposicionando as tarefas, uma a uma, até que as soluções inicial e guia sejam 

iguais. 

 

Se a estratégia do path relinking for a mixed, então duas trajetórias serão 

exploradas, uma a partir de cada solução. Neste caso, uma forma eficiente de 

implementação é a inversão, a cada iteração, de quem é a solução inicial e quem é a 

guia, conforme sugerido por Resende et al. (2010b). 

 

Por último, a versão Randomized Path Relinking (RPR) consiste em não 

necessariamente adotar o melhor movimento possível a partir de um dado estágio do 

path relinking. Antes, os custos associados aos movimentos são ordenados em ordem 

crescente do acréscimo causado na função objetivo. Seja      o custo do movimento 

que proporciona o menor acréscimo, e      o custo associado ao movimento que 

proporciona o maior acréscimo na função objetivo. Seja também   um número aleatório 

sorteado entre 0 e 1, o qual estará fixo durante uma iteração completa do path relinking. 

Os movimentos que estarão presentes na lista restrita serão todos aqueles cuja variação z 

na função objetivo estejam na faixa dada por                         . 

 

Após a execução da rotina do path relinking na linha 10, o conjunto de elite é 

atualizado. Uma solução só será aceita no conjunto de elite se o valor da função objetivo 

for inferior à solução de pior qualidade pertencente ao conjunto. Quanto à determinação 

de qual solução que será excluída, optou-se por substituir a solução com valor da função 

objetivo superior à solução candidata, e que possua a menor distância a esta solução. 

Isto fará com que a solução mais próxima ou similar será excluída, contribuindo para 



55 
 

aumento da diversidade entre as soluções de elite. A medida de distância entre duas 

soluções é dada pelo número de vezes que uma tarefa possui uma tarefa sucessora 

diferente do que acontece na outra solução. 

 

Na presente implementação, foi testada a execução simultânea de múltiplas 

trajetórias com suporte de processamento multi-threading. Na linha 10 (figura 3.12) seis 

trajetórias serão exploradas, no caminho de aproximação entre a solução inicial e guia, a 

saber: path relinking forward, path relinking backward, path relinking mixed, path 

relinking randomized forward, path relinking randomized backward e path relinking 

randomized mixed. 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 



56 
 

4 TESTES COMPUTACIONAIS E RESULTADOS 

 

Este capítulo tem por objetivo apresentar os resultados dos métodos de solução 

propostos. Inicialmente será descrita a estrutura da base de dados utilizada para os testes 

e, em seguida, os resultados obtidos pela aplicação das heurísticas, comparando-as com 

os limitantes gerados pelo método de geração de colunas.  

 

4.1 Instâncias de Teste 

 

Foi desenvolvido um gerador de cenários baseado em Crauwels et al. (1998), 

disponível na OR-LIBRARY (2009), que fornece diferentes instâncias para o problema 

de máquina única, o qual foi devidamente adaptado para o problema em estudo. Em 

todos os testes realizados, foram verificados o gap das soluções obtidas, o qual foi 

definido como a distância relativa da função objetivo gerada pelo método geração de 

colunas em relação à função objetivo da melhor solução obtida, calculado da forma 

indicada pela expressão 4.1, onde QM= Função objetivo do método empregado; GC = 

Função objetivo do método geração de colunas. 

 

                                                                                               

Os problemas teste foram gerados da seguinte forma: para cada tarefa   um 

tempo de processamento    inteiro foi gerado empregando-se uma distribuição 

uniforme no intervalo  1 100  e, para a penalidade, utilizou-se a faixa  1 10 . O 

horizonte de planejamento é denotado por 
   
 
   

 
 em que   é o número de embarcações. 

A dificuldade do problema depende do fator RDD (Relative Range of Due Dates) e do 

TF (tardiness factor). Os valores de RDD e TF são  0 2 0 4 0   0   1 0 . O instante de 

liberação é calculado em duas etapas: 

                              
 
   

 
                 

                    
                       

Na expressão       tem-se o cálculo do fator     (instante de liberação 

preliminar) e, na equação       o instante de liberação efetivo. A data de finalização da 

tarefa (due date) é dada por          . Cada fator TF é combinado com todos os 

RDDs e feito 5 replicações, ou seja, 5 x 25 = 125 instâncias teste. Foram geradas, 



57 
 

portanto, 125 instâncias testes para 4 embarcações e 30 tarefas (      ), 5 

embarcações e 40 tarefas (      ) e 6 embarcações e 50 tarefas (      ). 

 

4.2 Análise dos Resultados 

 

Esta seção tem por objetivo apresentar os resultados dos métodos empregados 

para o problema de Programação da Frota de Navios PLVs. Os métodos identificados 

na tabela 4.1 foram implementados, usando as seguintes configurações de hardware: 

processador intel® Core™ i7 2. 0GHz e 1 374 MB de memória RAM DDR3 SDRAM, 

codificado em linguagem C++. 

 

Tabela 4.1 – Métodos de solução  

Método Legenda Método 

Heurística Construtiva  HEU_C 

Heurística Construtiva + Busca Local  HEU_C + BL 

GRASP GRASP 

GRASP Path Relinking Multithreading GRASP PR 

 

Para analisar o desempenho dos métodos, são comparadas as soluções obtidas 

com a versão linear do método de geração de colunas (Mendes et al., 2010). A tabela a 

seguir, mostra o gap médio, mínimo e máximo em relação ao geração de colunas.   

 

Tabela. 4.2 – Método x gap médio, mínimo e máximo 

nxm Método % Gap Médio % Gap Mínimo % Gap Máximo 

3
0
 x

 4
 HEU_C  13,22 1,33 51,55 

HEU_C + BL  5,31 0,48 22,77 

GRASP  1,86 0,03 12,59 

GRASP PR  1,54 0,00 9,69 

4
0
 x

 5
 HEU_C  15,68 1,65 60,62 

HEU_C + BL  6,12 0,29 26,01 

GRASP  1,96 0,00 9,96 

GRASP PR  1,57 0,00 7,66 

5
0
 x

 6
 HEU_C  18,93 1,36 97,61 

HEU_C + BL  6,14 0,24 94,30 

GRASP  1,59 0,01 8,43 

GRASP PR  1,35 0,02 6,23 

 



58 
 

Tabela. 4.3 – Método x tempo médio de processamento 

Tempo médio de processamento [Segundos] 

Método 
n;m 

30 x 4 40 x 5 50 x 6 

HEU_C  0,013 0,017 0,02 

HEU_C + BL  0,039 0,096 0,196 

GRASP  52,385 150,737 332,142 

GRASP PR  84,745 211,255 447,815 

 

Inicialmente, as instâncias foram avaliadas por meio da heurística construtiva 

HEU_C. Os resultados obtidos estão resumidos na tabela 4.2, na qual fica evidente a 

baixa qualidade da solução, expressa pelos gaps médios iguais a 13,22%, 15,68% e 

18,93%, respectivamente para 30, 40 e 50 tarefas. As figuras 4.1, 4.2 e 4.3 mostram a 

dispersão do gap, ressaltando que em poucas ocorrências a heurística gerou bons 

resultados. O tempo médio de processamento foi de 0,013 segundos para as instâncias 

de 30 tarefas, 0,017 para as instâncias com 40 tarefas e 0,020 para as instâncias com 50 

tarefas.      

 

 

Figura 4.1 – Distribuição dos gaps para HEU_C 30 x 4 

 

0 
2 

24 

39 

29 
31 

0 

5 

10 

15 

20 

25 

30 

35 

40 

45 

[0%, 1%] [1%, 2%] [2%, 5%] [5%, 10%] [10%, 20%] [&gt; 20%] 

Q
u

a
n

ti
d

a
d

e
 d

e
 I

n
st

â
n

ci
a

s 

Gap 

 HEU_C 30 X 4   



59 
 

 

Figura 4.2 – Distribuição dos gaps para HEU_C 40 x 5 

  

 

Figura 4.3 – Distribuição dos gaps para HEU_C 50 x 6 

 

Em seguida, combinou-se a heurística construtiva com a heurística de busca, 

descritas nas seções 3.2.5 e 3.2.6. Os resultados estão resumidos na tabela 4.2 e 

mostraram uma melhoria importante, reduzindo o gap médio para 5,31%, 6,12% e 

6,14%, respectivamente, para instâncias de 30, 40 e 50 tarefas. As figuras 4.4, 4.5 e 4.6 

mostram a dispersão do gap. No caso específico de 30 tarefas, apenas uma instância 

apresentou gap superior a 20%. O tempo médio de processamento foi de 0,039 

segundos para 30 tarefas, 0,096 para 40 tarefas e 0,196 segundos para 50 tarefas. 

0 1 

13 

39 
36 36 

0 

5 

10 

15 

20 

25 

30 

35 

40 

45 

[0%, 1%] [1%, 2%] [2%, 5%] [5%, 10%] [10%, 20%] [&gt; 20%] 

Q
u

a
n

ti
d

a
d

e
 d

e
 I

n
st

â
n

ci
a

s 

Gap 

 HEU_C 40 X 5   

0 
3 

22 

40 

35 

25 

0 

5 

10 

15 

20 

25 

30 

35 

40 

45 

[0%, 1%] [1%, 2%] [2%, 5%] [5%, 10%] [10%, 20%] [&gt; 20%] 

Q
u

a
n

ti
d

a
d

e
 d

e
 I

n
st

â
n

ci
a

s 

Gap 

HEU_C 50 X 6 



60 
 

Mesmo assim pode-se observar que 40%, 44,80% e 28,80% das instâncias, 

respectivamente, de 30, 40 e 50 tarefas, ficaram com gaps acima de 5%. 

 

 

Figura 4.4 – Distribuição dos gaps para HEU_C + BL 30 x 4 

 

 

 

Figura 4.5 – Distribuição dos gaps para HEU_C + BL 40 x 5 

 

 

11 

26 

38 

28 

21 

1 

0 

5 

10 

15 

20 

25 

30 

35 

40 

[0%, 1%] [1%, 2%] [2%, 5%] [5%, 10%] [10%, 20%] [&gt; 20%] 

Q
u

a
n

ti
d

a
d

e
 d

e
 I

n
st

â
n

ci
a

s 

Gap 

HEU_C + BL 30 X 4   

7 

21 

41 

30 

22 

4 

0 

5 

10 

15 

20 

25 

30 

35 

40 

45 

[0%, 1%] [1%, 2%] [2%, 5%] [5%, 10%] [10%, 20%] [&gt; 20%] 

Q
u

a
n

ti
d

a
d

e
 d

e
 I

n
st

â
n

ci
a

s 

Gap 

HEU_C + BL 40 X 5   



61 
 

 

Figura 4.6 – Distribuição dos gaps para HEU_C + BL 50 x 6 

 

Em continuidade, foi processado a metaheurística GRASP, a qual contempla, em 

sua estrutura, duas fases distintas: a fase construtiva e a fase de busca. Como o 

procedimento construtivo possui uma componente aleatória na escolha do elemento 

contido na lista restrita de candidatos, foram realizadas 5 replicações das 375 instâncias. 

São reportados os valores médios do tempo de processamento e do gap, nas tabelas 4.2 

e 4.3.      

 

 

Figura 4.7 – Distribuição dos gaps para GRASP 30 x 4 

13 

32 

44 

24 

9 

3 

0 

5 

10 

15 

20 

25 

30 

35 

40 

45 

50 

[0%, 1%] [1%, 2%] [2%, 5%] [5%, 10%] [10%, 20%] [&gt; 20%] 

Q
u

a
n

ti
d

a
d

e
 d

e
 I

n
st

â
n

ci
a

s 

Gap 

HEU_C + BL 50 X 6   

46 

39 

34 

5 
1 0 

0 

5 

10 

15 

20 

25 

30 

35 

40 

45 

50 

[0%, 1%] [1%, 2%] [2%, 5%] [5%, 10%] [10%, 20%] [&gt; 20%] 

Q
u

a
n

ti
d

a
d

e
 d

e
 I

n
st

â
n

ci
a

s 

Gap 

GRASP 30 X 4 



62 
 

 

Figura 4.8 – Distribuição dos gaps para GRASP 40 x 5 

 

 

 

Figura 4.9 – Distribuição dos gaps para GRASP 50 x 6 

 

Por último, foi processada a metaheurística GRASP PR, em que seis trajetórias 

foram exploradas, no caminho de aproximação entre a solução inicial e guia: path 

relinking forward, path relinking backward, path relinking mixed, path relinking 

randomized forward, path relinking randomized backward e path relinking randomized 

mixed. Os resultados indicados referem-se aos casos em que as 6 trajetórias foram 

exploradas ao mesmo tempo, com o suporte do recurso multi-threading de 

processamento. Os gaps médios que já eram bons na versão GRASP puro, foram 

40 

46 

33 

6 

0 0 
0 

5 

10 

15 

20 

25 

30 

35 

40 

45 

50 

[0%, 1%] [1%, 2%] [2%, 5%] [5%, 10%] [10%, 20%] [&gt; 20%] 

Q
u

a
n

ti
d

a
d

e
 d

e
 I

n
st

â
n

ci
a

s 

Gap 

GRASP 40 X 5 

46 47 

29 

3 
0 0 

0 

5 

10 

15 

20 

25 

30 

35 

40 

45 

50 

[0%, 1%] [1%, 2%] [2%, 5%] [5%, 10%] [10%, 20%] [&gt; 20%] 

Q
u

a
n

ti
d

a
d

e
 d

e
 I

n
st

â
n

ci
a

s 

Gap 

GRASP 50 X 6 



63 
 

melhorados, conforme a tabela 4.2. A distribuição dos gaps conforme as figuras 4.10, 

4.11 e 4.12 mostra que a maior parte das instâncias possuem gap inferior a 2%, sendo 

que apenas uma instância de 50 tarefas possui gap superior a 5%. O tempo médio de 

processamento foi de 84,745 segundos para as instâncias de 30 tarefas, 211,255 

segundos para as instâncias de 40 tarefas e 447,815 para as instâncias de 50 tarefas. 

 

 

Figura 4.10 – Distribuição dos gaps para GRASP PR 30 x 4 

 

 

Figura 4.11 – Distribuição dos gaps para GRASP PR 40 x 5 

 

 

52 

44 

26 

3 
0 0 

0 

10 

20 

30 

40 

50 

60 

[0%, 1%] [1%, 2%] [2%, 5%] [5%, 10%] [10%, 20%] [&gt; 20%] 

Q
u

a
n

ti
d

a
d

e
 d

e
 I

n
st

â
n

ci
a

s 

Gap 

GRASP PR 30 X 4   

47 
45 

29 

4 
0 0 

0 

5 

10 

15 

20 

25 

30 

35 

40 

45 

50 

[0%, 1%] [1%, 2%] [2%, 5%] [5%, 10%] [10%, 20%] [&gt; 20%] 

Q
u

a
n

ti
d

a
d

e
 d

e
 I

n
st

â
n

ci
a

s 

Gap 

GRASP PR 40 X 5   



64 
 

 

Figura 4.12 – Distribuição dos gaps para GRASP PR 50 x 6 

 

4.3 Discussão 

A estratégia de explorar múltiplas trajetórias simultaneamente possibilita atingir 

uma solução de qualidade em um tempo relativamente baixo. Esta abordagem pode ser 

ilustrada por meio do seguinte teste: foi selecionada uma instância e processada com as 

6 trajetórias individuais (path relinking forward, path relinking backward, path 

relinking mixed, path relinking randomized forward, path relinking randomized 

backward e path relinking randomized mixed). E logo após, utilizando o processamento 

multi-threading. Os resultados obtidos estão destacados na tabela 4.4. 

Tabela. 4.4 – Abordagem multi- threading x processamento individual 

Abordagem 
Valor da Função 

Objetivo ($) 

Tempo 

[Segundos] 

Multi-threading 9390 89,534 

Path relinking forward 9399 106,474 

Path relinking backward 9392 101,76 

Path relinking mixed 9401 110,894 

Path relinking randomized forward 9403 113,472 

Path relinking randomized backward 9398 108,862 

Path relinking randomized mixed 9411 122,09 

 

De acordo com a tabela 4.4, a estratégia multi-threading consegue obter 

solução melhor do que o processamento individual e também empregando um tempo 

54 

47 

23 

1 0 0 
0 

10 

20 

30 

40 

50 

60 

[0%, 1%] [1%, 2%] [2%, 5%] [5%, 10%] [10%, 20%] [&gt; 20%] 

Q
u

a
n

ti
d

a
d

e
 d

e
 I

n
st

â
n

ci
a

s 

Gap 

GRASP PR 50 X 6   



65 
 

inferior. Em relação à melhor regra de ordenação, as que obtiveram as melhores 

soluções foram respectivamente (1), (2) e (4). Isto mostra que é vantajoso utilizar várias 

regras de ordenação na fase de construção do GRASP ao invés de fixar apenas uma.  

 

A importância em mensurar o tempo que um determinado método emprega para 

alcançar uma dada solução é abordado em Resende; Ribeiro (2003a). Para medir o 

tempo que os algoritmos empregam para atingir uma solução (time-to-target value), é 

feita uma distribuição empírica em que é fixada uma solução a ser atingida (target 

value) e, em seguida, executa-se o algoritmo   vezes de maneira independente, 

registrando o tempo que o algoritmo levou para encontrar uma solução melhor ou igual 

à solução fixada. Para cada algoritmo é associado ao i-ésimo tempo ordenado    a 

probabilidade       
 

 
    e plotam-se os pontos            para        . A 

figura 4.13 exemplifica uma instância em que foi processada utilizando o GRASP puro 

e logo após o GRASP PR com a estratégia multi-threading. É fácil perceber que o 

GRASP PR com multi-threading consegue atingir uma solução de qualidade com tempo 

muito inferior do que o GRASP puro. 

 

 

       Figura 4.13 – Tempo para alcançar uma dada solução (GRASP PR x GRASP). 

 

0 

0,1 

0,2 

0,3 

0,4 

0,5 

0,6 

0,7 

0,8 

0,9 

1 

0 25 50 75 100 125 150 175 200 225 250 275 

P
ro

b
a

b
il

id
a

d
e

 A
cu

m
u

la
d

a
 

Time-to-target value (segundos) 

GRASP PR GRASP 



66 
 

Posteriormente, utilizou-se o conjunto de instâncias fornecido por Jouglet; 

Savourey (2011), o qual foi implementado com multi-threading e também sem multi-

threading. Para reforçar a eficácia do processamento multi-threading em relação ao 

processamento de uma única trajetória, foram realizados novos testes, envolvendo os 

seguintes portes de instâncias: 10 tarefas e 2 máquinas, 15 tarefas e 3 máquinas e 20 

tarefas e 3 máquinas, sendo que cada porte possui 120 instâncias, e para cada instância 

foram realizadas 10 replicações. Cada instância foi processada até que a solução ótima 

fornecida pelos autores fosse alcançada. O artigo dos autores também relata o tempo 

empregado para a solução ótima ser alcançada, e por meio da tabela 4.5, percebe-se que 

o GRASP com path relinking obtém a solução ótima empregando tempo computacional 

muito inferior ao Branch and Bound utilizado por Jouglet; Savourey (2011). 

 

Tabela 4.5 - Processamento multi-threading x Branch and Bound   

Método 

Tarefas x máquinas [Tempo em 

milissegundos] 

10 x 2 15 x 3 20 x 3 

Branch and Bound  (Jouglet e Savourey); 

Pentium 1.6 GHz 39,075 10.099,58 291.236,38 

GRASP com Path Relinking  (Backward); 

Pentium 2.8 GHz 31,549 54,005 52,782 

GRASP com Path Relinking 

(Processamento Multi-threading); 2.8 GHz 18,997 31,033 32,098 

 

Ainda em relação a tabela 4.5, a estratégia multi-threading é comparada com 

uma versão do GRASP path relinking sem multi-threading, utilizando a estratégia 

backward, sendo que a implementação com o multi-threading fornece soluções 

melhores que à versão backward. É importante destacar que 66,07%, 74,02% e 64,44% 

respectivamente, de 10, 15 e 20 tarefas, representam o quanto o GRASP com Path 

Relinking multi-threading é melhor que o GRASP com Path Relinking Backward. É 

importante ressaltar que, embora os hardwares sejam diferentes, o que impede que a 

comparação seja mais justa, os tempos de processamento possuem ordem de grandeza 

distinta, o que confirma a eficácia do método proposto. 

 

Por último, cabe destacar que os gaps obtidos poderão, eventualmente, ser 

melhorados se os resultados dos métodos desenvolvidos forem comparados com os 



67 
 

valores ótimos das funções objetivo, as invés dos limitantes obtidos pelo método de 

geração de colunas. Isto mostra que os resultados obtidos já são bastante satisfatórios. 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 



68 
 

5 CONCLUSÕES E RECOMENDAÇÕES 

 

A presente pesquisa estudou um problema real de programação de embarcações 

especializadas em operações de lançamento de risers e interligação submarina, que 

representa uma etapa importante do desenvolvimento de um campo petrolífero. As 

embarcações empregadas são as PLVs – pipe layer vessels e representam recursos 

críticos para as empresas petrolíferas.  

 

Cada tarefa a ser realizada possui um potencial de produção associado, que diz 

respeito ao volume diário de produção esperado ao longo da vida útil do poço que será 

interligado. Assim, quando uma tarefa é adiada para a realização de outra, significa 

adiar o retorno sobre o investimento. Existem algumas restrições operacionais que 

devem ser consideradas e com isso, o objetivo é encontrar a sequência de execução das 

tarefas, de forma a minimizar as perdas financeiras pelo atraso no início da execução 

das mesmas em relação as respectivas datas de liberação. 

 

O problema foi modelado e resolvido como um problema de máquinas paralelas 

não-relacionadas, empregando um modelo de programação linear inteira mista, baseado 

na formulação de van den Akker et al. (2000), em que a formulação utiliza uma escala 

de tempo discretizada. Para a geração dos limitantes inferiores, foi utilizada a técnica de 

geração de colunas, onde foi formulado empregando-se a decomposição de Dantzig-

Wolfe.   

 

Os métodos de solução propostos foram: heurística construtiva, heurística 

construtiva com busca local (busca local inserção e busca local troca), GRASP e 

GRASP com path relinking, sendo que no path relinking, foram utilizadas algumas 

variações como path relinking forward, backward, mixed, randomized forward, 

randomized backward e randomized mixed. Por último, uma versão do path relinking 

explorando as diversas trajetórias simultaneamente, por meio da abordagem multi-

threading. 

 

Os resultados destacam que as soluções fornecidas são de boa qualidade, tendo 

em vista que os gaps ficaram inferiores a 2% para a maioria das instâncias. A aplicação 

do path relinking contribuiu para a melhoraria da qualidade das soluções. Em todas as 



69 
 

instâncias, o GRASP com path relinking, implementado com multi-threading, em 

média, foi mais eficaz e com tempo de processamento competitivo conforme destaca a 

tabela 4.3.  

 

Apesar do bom desempenho das heurísticas propostas, principalmente o GRASP 

e o GRASP com path relinking, em que os gaps obtidos ficaram abaixo de 2% em 

média, é interessante testar novas abordagens, por exemplo, a combinação de uma 

solução inicial com múltiplas guias com processamento multi-threading. Novas 

estruturas de vizinhança para a busca local podem ser importantes, no caso de instâncias 

de maior porte por exemplo, a estratégia de vizinhança variável. Outras meta-heurísticas 

como a busca tabu, algoritmo genético, e a busca dispersa, estruturadas para ambiente 

multi-threading podem ser interessantes. Instâncias poderão ser desenvolvidas para 

cenários maiores; também é importante destacar a possível utilização de regras 

dinâmicas para a fase construtiva do GRASP (GRASP reativo) e também o processo 

evolucionário com as soluções de elite.  

 

 

 

 

 

 

 

 

 

 

 

 

 



70 
 

REFERÊNCIAS BIBLIOGRÁFICAS 

AARTS, E.; LENSTRA, J. K. Local Search in combinatorial optimization. Princeton 

University Press. New Jersey, 2003, 512 p. 

 

ABEAM. Associação Brasileira das Empresas de Apoio Marítimo. Disponível em: 

&lt;http://www.abeam.org.br&gt;. Acesso em 10 Jul. 2010.  

 

ALIDAEE, B.; ROSA, D. Scheduling parallel machines to minimize total weighted and 

unweighted tardiness, Computers &amp;amp; Operations Research, 24:8, p.775-788, 1997. 

 

ALLSEAS. Allseas’Equipment gallery. Disponível em&amp;lt;http://www.allseas.com/uk&gt;. 

Acesso em 10 Jul. 2010. 

 

AZIZOGLU, M.; KIRCA, O. Tardiness minimization on parallel machines. 

International Journal of Production Economics, 55, p.163-168, 1998.  

 

AZIZOGLU, M.; KIRCA, O. Scheduling jobs on unrelated parallel machines to 

minimize regular total cost functions. IIE Transactions, 31, p.153–159, 1999. 

 

BAKER, K. R. Introduction to Sequencing and Scheduling. New York: John Wiley 

&amp;amp; Sons, Inc., 1974. 305p. 

 

BAKER, K. R.; BERTRAND, J. W. M. A dynamic priority rule for scheduling against 

due-dates. Journal of Operations Management, 3:1, p.37-42, 1982. 

 

BEASLEY, J. E. OR-Library: distributing test problems by electronic mail. Journal of 

the Operational Research Society, 41:11, p.1069-1072, 1990. 

 

BERTRAND, J. W. M.; FRANSOO, J. C. Operations management research 

methodologies using quantitative modeling. International Journal of Operations &amp;amp; 

Production Management, 22:2, p.241-254, 2002. 

 

BISKUP, D.; HERRMANN, J. E GUPTA, J.N.D. Scheduling identical parallel 

machines to minimize total tardiness. International Journal of Production 

Economics, 115, 134-142, 2008. 

 

BLAZEWICZ, J.; DROR, M.; WEGLARZ, J. Mathematical programming formulations 

for machine scheduling: a survey. European Journal of Operational Research, 51, 

p.283–300, 1991. 

 

BLAZEWICZ, J.; DROZDOWSKI, M.; FORMANOWICZ, P.; KUBIAK, W.; 

SCHMIDT, G. Scheduling preemptable tasks on parallel processors with limited 

availability. Parallel Computing, 26, p.1195-1211, 2000. 

 

BOUDIA, M.; LOULY, M.A.O. E PRINS, C. A reactive GRASP and path relinking for 

a combined production-distribution problem. Computers &amp;amp; Operations Research, 34, 

3402-3419, 2007. 

 



71 
 

BRØNMO, G.; CHISTIANSEN, M.; FAGERHOLT, K.; NYGREEN, B. A multi-start 

local search heuristic for ship scheduling - a computational study. Computers &amp;amp; 

Operations Research, 34, p.900-917, 2007a. 

 

BRØNMO, G.; CHISTIANSEN, M.; NYGREEN, B. Ship routing and scheduling with 

flexible cargo sizes. Journal of the Operational Research Society, 58, p.1167-1177, 

2007b. 

 

BRØNMO, G.; NYGREEN, B.; LYSGAARD, J. Column generation approaches to ship 

scheduling with flexible cargo sizes. European Journal of Operational Research, 

200, p.139-150, 2010. 

 

BROWN, G.G.; GRAVES, G. W.; RONEN, D. Scheduling ocean transportation of 

crude oil. Management Science, 33:3, p.335-346, 1987. 

 

BRUCKER, P.; JURISCH, B; KRAMER, A. Complexity of scheduling problems with 

multi-purpose machines. Annals of Operations Research, 70, p.57–73, 1997. 

 

BRUCKER, P. Scheduling Algorithms. New York: Berlin: Springer, 2007. 371p. 

 

BRUNO, J.; COFFMAN, J.; SETHI, R. Scheduling independent tasks to reduce mean 

finishing time. Communications of the ACM, 17:7, p.382-387, 1974. 

 

CARROLL, D. C. Heuristic sequencing of jobs with single and multiple components. 

Ph.D. Thesis. SIoan School of Management, MIT, 1965. 

 

CAO, D.; CHEN, M.; WAN, G. Parallel machine selection and job scheduling to 

minimize machine cost and job tardiness. Computers &amp;amp; Operations Research, 32, 

p.1995-2012, 2005.  

 

CHEN, Z. L.; POWELL, W. B. A column generation based decomposition algorithm 

for a parallel machine just-in-time scheduling problem. European Journal of 

Operational Research, 116, p.220–232, 1999. 

 

CHENG, T. C. E.; SIN, C. C. S. A state-of-the-art review of parallel-machine 

scheduling research. European Journal of Operational Research, 47, p.271–292, 

1990. 

 

CRAUWELS, H. A. J.; POTTS, C. N.; VAN WASSENHOVE, L. N. Local search 

heuristics for the single machine total weighted tardiness scheduling problem. Informs 

Journal on Computing, 10, p.341-350, 1998.  

 

DAVIS, E.; JAFFE, J. M. Algorithms for scheduling tasks on unrelated processors. 

Journal of the Association for Computing Machinery, 28, p.721-736, 1981. 

 

DEMEULEMEESTER, E. L.; HERROELEN, W, S. Project scheduling: a research 

handbook. Norwell, Massachusetts: Kluwer Academic, 2002, 685 p.  

 



72 
 

FAGERHOLT, K. A computer-based decision support system for vessel fleet 

scheduling-experience and future research. Decision Support Systems, 37, p.35-47, 

2004. 

 

FEO, T.A. E RESENDE, M.G.C. A probabilistic heuristic for a computationally 

difficult set covering problem. Operations Research Letter, 8, 67-71, 1989. 

 

FEO, T. A.; RESENDE, M. G. C. Greedy randomized adaptive search procedures. 

Journal of Global Optimization, 6, p.109-133, 1995. 

 

FULLER, J. A. Optimal solutions versus 'good' solutions: an analysis of heuristic 

decision making. Omega The International Journal of Management Science, 6:6, 

p.479-484, 1978. 

 

GLASS, C. A.; POTTS, C. N.; SHADE, P. Unrelated parallel machine scheduling using 

local search. Mathematical and Computer Modeling, 20:2, p.41–52, 1994. 

 

GLOVER, F. Tabu search and adaptive memory programming – advances, applications 

and challenges, em Barr, R. S.; Helgason, R.V. e Kennington, J. L. (Eds.), Interfaces in 

Computer Science and Operations Research. Kluwer Academic Publishers, Boston, 

1-75, 1996. 

 

GLOVER, F.; LAGUNA, M.; MARTÍ, R.; Fundamentals of Scatter Search and Path 

Relinking. Control and Cybernetics, 29:3, p.653-684, 2000. 

 

GRAHAM, R. L. Bounds on multiprocessing timing anomalies. Siam Journal on 

Applied Mathematics, 17:2, p.416-429, 1969. 

 

GRAHAM, R. L.; LAWLER, E. L.; LENSTRA, J. K.; RINNOOY, K. A. H. G. 

Optimization and approximation in deterministic sequencing and scheduling: a survey. 

Annals of Discrete Mathematics, 5, p.287–326, 1979. 

 

HARIRI, A. M. A.; POTTS, C. N. Heuristics for scheduling unrelated parallel 

machines. Computers &amp;amp; Operations Research, 18: 3, p.323–331, 1991. 

 

HO, S.C. E GENDREAU, M. Path relinking for the vehicle routing problem. Journal 

of Heuristics, 12, 55-72, 2006 

 

HOROWITZ, E.; SAHNI, S. Exact and approximate algorithms for scheduling 

nonidentical processors. Journal of the Association for Computing Machinery, 23:2, 

p.317–327, 1976. 

 

IBARRA, O.H.; KIM, C.E. Heuristic algorithms for scheduling independent tasks on 

nonidentical processors. Journal of the Association for Computing Machinery, 24:2, 

p.280-289, 1977. 

 

JANSEN, K.; PORKOLAB, L. Improved approximation schemes for scheduling 

unrelated parallel machines. Mathematics of Operations Research, 26:2, 324–338, 

2001. 

 



73 
 

JOUGLET, A.; SAVOUREY, D. Dominance rules for the parallel machine total 

weighted tardiness scheduling problem with release dates. Computers &amp;amp; Operations 

Research, 38, p.1259-1266, 2011. 

 

KOULAMAS, C. Decomposition and hybrid simulated annealing heuristics for the 

parallel-machine total tardiness problem. Naval Research Logistics, 44, p.109-125, 

1997. 

 

LAWLER, E. L.; LABETOULLE, J. On preemptive scheduling of unrelated parallel 

processors by linear programming. Journal of the Association for Computing 

Machinery, 25:4, 612–619, 1978. 

 

LEE, C.Y. Parallel machines scheduling with nonsimultaneous machine available time. 

Discrete Applied Mathematics, 30, 53-61, 1991. 

 

LENSTRA, J. K.; SHMOYS, D. B.; TARDOS, E. Approximation algorithms for 

scheduling unrelated parallel machines. Mathematical Programming, 46, p.259-271, 

1990. 

 

LIAW, C-F; LIN, Y-K; CHENG, C-Y; CHEN, M. Scheduling unrelated parallel 

machines to minimize total weighted tardiness. Computers &amp;amp; Operations Research, 

30, p.1777-1789, 2003. 

 

LIN, Y. K.; PFUND, M. E.; FOWLER, J. W. Heuristics for minimizing regular 

performance measures in unrelated parallel machine scheduling problems. Computers 

&amp;amp; Operations Research, 38, p.901-916, 2011. 

 

McNAUGHTON, R. Scheduling with deadlines and loss functions. Management 

Science, 6, p.1-12, 1959. 

 

MENDES, A. B. Programação de frota de apoio a operações “offshore” sujeita à 

requisição de múltiplas embarcações para uma mesma tarefa. 2007. 224 p. Tese 

(Doutorado). Escola Politécnica, Universidade de São Paulo. São Paulo, 2007. 

 

MENDES, A. B.; QUEIROZ, M. M.; MOURA, V. C. Scheduling pipe layer vessels 

using tabu search. Alio-Informs Joint International Meeting, Book of abstracts, 1, 

p.66-66, 2010. 

 

MILLER, D. M. An interactive, computer-aided ship scheduling system. European 

Journal of Operational Research, 32, p.363-379, 1987. 

 

MORTON, T. E.; RACHAMADUGU, R. M.; VEPSALAINEN, A. Accurate mayopic 

heuristics for tardiness scheduling. GSIA Working Paper No, 36-83-84, Carnegie-

Mellon University, PA, 1984. 

 

MORTON, T. E.; PENTICO, D. W. Heuristic Scheduling Systems: with applications 

to production systems and project management. New York: John Wiley &amp;amp; Sons, 

Inc., 1993. 695p. 

 



74 
 

OR-LIBRARY. Disponível em:&amp;lt;http://people.brunel.ac.uk/~mastjjb/jeb/info.html&gt; 

Acesso em 14 Nov. 2009. 

 

OU, J.; LEUNG, J. Y.-T. Scheduling parallel machines with inclusive processing set 

restrictions. Naval Research Logistics, 55, p.328-338, 2008. 

 

PANWALKAR, S.S.; SMITH, M.L.; KOULAMAS, C. A heuristic for the single 

machine tardiness problem. European Journal of Operational Research, 70, 304-310, 

1993. 

 

PIERSMA, N.; VAN DIJK, W. A local search heuristic for unrelated parallel machine 

scheduling with efficient neighborhood search. Mathematical and Computer 

Modeling, 24:9, p.11–19, 1996. 

 

PINEDO, M. Scheduling: theory, algorithms, and systems. New Jersey: Prentice-

Hall; 2002. 

 

POTTS, C. N. Analysis of a linear-programming heuristic for scheduling unrelated 

parallel machines. Discrete Applied Mathematics, 10, p.155–164, 1985. 

 

PRAIS, M.; RIBEIRO, C. C. Reactive GRASP: an application to a matrix 

decomposition problem in TDMA traffic assignment, Informs Journal on Computing, 

12, p.164-176, 2000. 

 

RESENDE, M. G. C.; RIBEIRO, C. C. Greedy randomized adaptive search procedures. 

In: Glover, F.; Kochenberger, G. (eds). Handbook of Metaheuristics. Kluwer, 219-

249, 2003a. 

 

RESENDE, M.G.C.; RIBEIRO, C.C. Grasp with path relinking: recent advances and 

applications. AT &amp;amp; T Labs Technical Report TD-5TU726, 1-24, 2003b. 

 

RESENDE, M.G.C.; WERNECK, R.F. A hybrid heuristic for the p-median problem. 

Journal of Heuristics, 10, 59-88, 2004. 

 

RESENDE, M.G.C.; MARTÍ, R.; GALLEGO, M.; DUARTE, A. Grasp and path 

relinking for the max-min diversity problem. Computers &amp;amp; Operations Research, 37, 

498-508, 2010a. 

 

RESENDE, M.G.C.; RIBEIRO, C.C.; GLOVER, F. E R. MARTÍ. Scatter search and 

path-relinking: Fundamentals, advances, and applications, em Gendreau, M. e Potvin, 

J.-Y. (Eds.). Handbook of Metaheuristics, Springer, New York, 87-107, 2010b. 

 

RIBEIRO, C.C.; ROSSETI, I. Efficient parallel cooperative implementations of GRASP 

heuristics. Parallel Computing, 33, 21-35, 2007. 

 

RIBEIRO, C.C.; ROSSETI, I.; VALLEJOS, R. On the use of run time distributions 

to evaluate and compare stochastic local search algorithms em Stützle, T.; Birattari, M. 

e Hoos, H.H. (Eds.). Lecture Notes in Computer Science, Springer-Verlag, Berlin 

Heidelberg, 16-30, 2009. 

 



75 
 

RONEN, D. Ship scheduling: the last decade. European Journal of Operational 

Research, 71, p.325-333, 1993. 

 

SHIM, S-O. E KIM, Y-D. Scheduling on parallel identical machines to minimize total 

tardiness. European Journal of Operational Research, 177, 135-146, 2007. 

 

UNLU, Y.; MASON, S. J. Evaluation of mixed integer formulations for non-preemptive 

parallel machine scheduling problems.  Computers &amp;amp; Industrial Engineering, 58, 

p.785-800, 2010. 

 

VAN DEN AKKER, J.M.; HURKENS, C.A.J. E SAVELSBERGH, M.W.P. Time-

indexed formulations for machine scheduling problem: column generation.  INFORMS 

Journal on Computing, 12, 111-124, 2000. 

 

VOß, S. Metaheuristics: the state of the art. In: Nareyek, A. (ed). Local search for 

planning and scheduling, LNAI. 2148, Berlin, p.1-23, 2001. 

 

ZANAKIS, S. H.; EVANS, J. R.; VAZACOPOULOS, A. A. Heuristic methods and 

applications: a categorized survey. European Journal of Operational Research, 43, 

p.88-110, 1989. 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 



76 
 

APÊNDICE A – Gap Médio 30 x 4, 40 x 5 e 50 x 6 

 

  

 

 

 

 

 

 

 

13,22% 

5,31% 

1,86% 

1,54% 

0,00% 5,00% 10,00% 15,00% 

 HEU_C 30 x 4   

HEU_C + BL 30 x 4   

Grasp 30 x 4 

PR 30 x 4   

Gap 

Gap Médio 30 x 4 

15,68% 

6,12% 

1,96% 

1,57% 

0,00% 5,00% 10,00% 15,00% 20,00% 

 HEU_C 40 x 5   

HEU_C + BL 40 x 5   

Grasp 40 x 5 

PR 40 x 5   

Gap 

Gap Médio 40 x 5 

18,93% 

6,14% 

1,59% 

1,35% 

0,00% 5,00% 10,00% 15,00% 20,00% 

HEU_C 50 x 6 

HEU_C + BL 50 x 6    

Grasp 50 x 6 

PR 50 x 6   

Gap 

Gap Médio 50 x 6 



77 
 

APÊNDICE B – Tempo médio de processamento 30x4, 40x5 e 50x6 

 

 

 

 

 

 

 

 

 

 

 

 

 

84,745 

52,385 

1,392 0,039 0,013 
0 

20 

40 

60 

80 

100 

PR 30 x 4   Grasp 30 x 4 GC 30 x 4 HEU_C+ BL 30 x 4    HEU_C 30 x 4   

T
e

m
p

o
 M

é
d

io
 

Método 

Tempo Médio [Seg] 30 x 4  

211,255 

150,737 

2,480 0,096 0,017 
0 

50 
100 
150 
200 
250 

PR 40 x 5   Grasp 40 x 5 GC 40 x 5 HEU_C + BL 40 x 
5   

 HEU_C 40 x 5   

T
e

m
p

o
 M

é
d

io
 

Método 

Tempo Médio [Seg] 40 x 5  

447,815 

332,142 

3,824 0,196 0,020 
0 

100 
200 
300 
400 
500 

PR 50 x 6   Grasp 50 x 6 GC 50 x 6 HEU_C + BL 50 x 
6    

HEU_C 50 x 6 

T
e

m
p

o
 M

é
d

io
 

Método 

Tempo Médio [Seg] 40 x 5  



78 
 

APÊNDICE C – Resultados GC x GRASP 30 x 4 

Instância GC Tempo [Seg] Grasp 30 x 4 Tempo [Seg] Gap % 

1 15.417 1,000 15.546 50,434 0,83 

2 7.433 2,000 7.457 55,894 0,32 

3 16.530 2,000 16.649 57,236 0,71 

4 16.053 1,000 16.097 47,205 0,27 

5 6.992 1,000 7.054 49,264 0,88 

6 9.059 1,000 9.217 45,848 1,71 

7 6.447 1,000 6.519 53,398 1,10 

8 6.773 2,000 6.868 51,682 1,38 

9 10.539 2,000 10.589 58,110 0,47 

10 9.324 1,000 9.397 57,158 0,78 

11 9.430 2,000 9.525 64,381 1,00 

12 6.694 2,000 6.871 65,005 2,58 

13 4.835 1,000 4.936 60,512 2,05 

14 8.968 2,000 9.056 56,550 0,97 

15 4.257 1,000 4.330 56,612 1,69 

16 2.107 1,000 2.253 39,826 6,48 

17 1.999 2,000 2.083 63,226 4,03 

18 2.109 1,000 2.119 49,545 0,47 

19 3.706 1,000 3.838 59,670 3,44 

20 1.875 1,000 1.903 39,561 1,47 

21 1.958 1,000 2.015 42,229 2,83 

22 2.310 2,000 2.385 48,937 3,14 

23 2.456 1,000 2.494 43,680 1,52 

24 1.372 1,000 1.409 47,782 2,63 

25 1.798 1,000 2.057 43,336 12,59 

26 6.326 2,000 6.351 54,178 0,39 

27 9.809 2,000 9.816 54,459 0,07 

28 16.150 1,000 16.225 55,551 0,46 

29 14.081 2,000 14.135 46,971 0,38 

30 12.761 2,000 12.765 51,948 0,03 

31 8.187 2,000 8.273 70,262 1,04 

32 8.684 2,000 8.835 48,422 1,71 

33 6.440 1,000 6.471 57,486 0,48 

34 4.939 1,000 4.969 39,702 0,60 

35 4.366 2,000 4.478 57,844 2,50 

36 6.741 2,000 6.848 50,637 1,56 

37 7.648 1,000 7.792 54,288 1,85 

38 2.309 1,000 2.400 54,303 3,79 

39 4.830 1,000 4.975 48,188 2,91 

40 5.007 1,000 5.115 44,803 2,11 

41 3.922 2,000 3.928 49,311 0,15 

42 2.672 2,000 2.735 47,158 2,30 

43 1.755 1,000 1.765 34,834 0,57 

44 1.449 2,000 1.532 30,872 5,42 

45 3.542 2,000 3.651 56,128 2,99 

46 2.037 1,000 2.055 43,586 0,88 

47 2.577 2,000 2.599 35,224 0,85 

48 1.602 1,000 1.646 52,322 2,67 

49 1.711 1,000 1.827 46,472 6,35 

50 2.219 1,000 2.248 34,834 1,29 

51 9.481 2,000 9.543 49,046 0,65 

52 15.342 1,000 15.439 56,144 0,63 

53 7.480 2,000 7.512 58,780 0,43 

54 11.144 2,000 11.204 55,021 0,54 

55 10.736 1,000 10.821 51,729 0,79 

56 7.115 1,000 7.149 65,613 0,48 

57 7.484 1,000 7.546 56,503 0,82 

58 5.353 2,000 5.369 57,033 0,30 

59 7.662 2,000 7.700 60,075 0,49 

60 8.908 1,000 8.984 64,818 0,85 

61 6.398 1,000 6.507 60,496 1,68 

62 4.820 1,000 5.032 52,728 4,21 

63 5.546 2,000 5.631 54,178 1,51 

64 5.634 1,000 5.876 59,467 4,12 

65 6.809 2,000 6.995 56,674 2,66 

 
 
 

     



79 
 

Continuação 

66 4.388 2,000 4.665 52,369 5,94 

67 3.618 1,000 3.705 65,426 2,35 

68 3.437 1,000 3.586 56,269 4,16 

69 4.024 1,000 4.223 43,071 4,71 

70 5.092 1,000 5.241 53,508 2,84 

71 3.032 2,000 3.145 58,375 3,59 

72 1.391 2,000 1.435 48,890 3,07 

73 3.016 1,000 3.208 49,639 5,99 

74 2.718 1,000 2.790 44,350 2,58 

75 2.888 1,000 2.948 41,667 2,04 

76 10.469 1,000 10.528 48,734 0,56 

77 8.745 2,000 8.810 45,879 0,74 

78 8.652 1,000 8.751 45,942 1,13 

79 9.831 2,000 9.968 53,102 1,37 

80 7.737 1,000 7.815 48,453 1,00 

81 7.408 1,000 7.502 53,913 1,25 

82 9.421 1,000 9.531 65,582 1,15 

83 10.549 2,000 10.634 50,263 0,80 

84 11.406 1,000 11.506 54,194 0,87 

85 8.122 1,000 8.191 61,120 0,84 

86 7.484 1,000 7.692 49,810 2,70 

87 6.185 1,000 6.319 58,515 2,12 

88 7.909 2,000 8.023 50,185 1,42 

89 10.978 1,000 11.183 55,411 1,83 

90 8.826 2,000 8.943 56,269 1,31 

91 8.260 1,000 8.493 40,965 2,74 

92 5.554 1,000 5.744 48,328 3,31 

93 6.461 1,000 6.625 53,757 2,48 

94 7.778 1,000 7.925 68,998 1,85 

95 7.850 1,000 7.982 54,272 1,65 

96 3.676 2,000 3.847 41,901 4,45 

97 4.906 1,000 5.059 43,492 3,02 

98 1.601 1,000 1.676 53,352 4,47 

99 5.282 1,000 5.377 42,385 1,77 

100 7.419 1,000 7.610 40,591 2,51 

101 17.076 2,000 17.192 51,854 0,67 

102 8.986 1,000 9.120 41,074 1,47 

103 8.737 1,000 8.802 53,461 0,74 

104 12.099 1,000 12.268 57,798 1,38 

105 9.911 1,000 10.053 49,108 1,41 

106 11.008 2,000 11.202 32,931 1,73 

107 13.667 2,000 13.823 52,946 1,13 

108 12.375 2,000 12.529 57,891 1,23 

109 14.597 1,000 14.755 51,526 1,07 

110 10.668 1,000 10.781 51,012 1,05 

111 11.353 1,000 11.449 52,213 0,84 

112 16.857 2,000 17.017 55,348 0,94 

113 14.871 1,000 14.951 57,439 0,54 

114 14.882 2,000 15.039 56,674 1,04 

115 17.117 1,000 17.245 62,602 0,74 

116 7.988 2,000 8.119 55,894 1,61 

117 6.272 1,000 6.367 58,125 1,49 

118 11.147 2,000 11.251 56,643 0,92 

119 9.748 2,000 9.835 56,238 0,88 

120 8.002 1,000 8.121 44,990 1,47 

121 9.620 1,000 9.768 62,197 1,52 

122 16.018 2,000 16.158 70,262 0,87 

123 8.466 1,000 8.634 51,573 1,95 

124 9.410 2,000 9.546 60,918 1,42 

125 15.361 1,000 15.540 63,211 1,15 



80 
 

APÊNDICE D – Resultados GC x GRASP 40 X 5 
Instância GC Tempo [Seg] Grasp 40 x 5 Tempo [Seg] Gap % 

1 16.268 2,000 16.373 160,472 0,64 

2 12.354 3,000 12.465 146,609 0,89 

3 14.262 3,000 14.397 164,564 0,94 

4 18.806 2,000 18.927 180,164 0,64 

5 16.559 3,000 16.693 138,403 0,80 

6 11.196 2,000 11.355 135,501 1,40 

7 15.934 2,000 16.164 134,877 1,42 

8 15.577 2,000 15.763 167,169 1,18 

9 12.100 3,000 12.194 161,865 0,77 

10 10.656 2,000 10.728 156,889 0,67 

11 7.910 2,000 8.091 165,485 2,24 

12 5.238 2,000 5.346 145,726 2,02 

13 6.130 4,000 6.357 148,293 3,57 

14 10.998 3,000 11.155 179,718 1,41 

15 6.830 2,000 7.028 131,397 2,82 

16 2.257 3,000 2.286 117,858 1,27 

17 2.074 2,000 2.159 139,060 3,94 

18 2.698 2,000 2.889 159,469 6,61 

19 3.300 2,000 3.420 166,315 3,51 

20 2.395 2,000 2.488 133,020 3,74 

21 2.291 2,000 2.327 178,594 1,55 

22 891 3,000 924 148,600 3,57 

23 2.175 2,000 2.261 120,548 3,80 

24 2.079 2,000 2.214 144,636 6,10 

25 789 2,000 848 156,613 6,96 

26 13.673 2,000 13.680 192,675 0,05 

27 11.241 3,000 11.256 178,893 0,13 

28 9.602 2,000 9.651 197,503 0,51 

29 12.161 3,000 12.232 158,571 0,58 

30 13.194 3,000 13.236 154,015 0,32 

31 13.273 2,000 13.406 161,514 0,99 

32 5.918 1,000 6.034 153,270 1,92 

33 9.530 3,000 9.621 163,526 0,95 

34 10.353 3,000 10.439 163,247 0,82 

35 12.314 2,000 12.412 158,695 0,79 

36 6.470 2,000 6.515 163,930 0,69 

37 4.759 3,000 4.818 178,676 1,22 

38 5.565 2,000 5.634 167,428 1,22 

39 4.538 2,000 4.583 171,277 0,98 

40 6.867 2,000 6.978 146,634 1,59 

41 3.111 1,000 3.194 150,705 2,60 

42 3.012 1,000 3.048 144,772 1,18 

43 3.370 2,000 3.501 158,845 3,74 

44 3.829 3,000 4.022 144,902 4,80 

45 7.552 3,000 7.687 132,888 1,76 

46 1.035 3,000 1.056 132,197 1,99 

47 1.350 2,000 1.482 132,884 8,91 

48 1.703 2,000 1.762 135,981 3,35 

49 3.614 2,000 3.653 126,563 1,07 

50 2.169 2,000 2.409 142,981 9,96 

51 17.568 2,000 17.626 153,052 0,33 

52 16.600 3,000 16.702 131,920 0,61 

53 14.099 2,000 14.180 145,485 0,57 

54 16.217 4,000 16.285 139,105 0,42 

55 21.364 2,000 21.363 165,843 0,00 

56 8.516 2,000 8.577 134,160 0,71 

57 8.735 3,000 8.870 143,411 1,52 

58 10.568 3,000 10.673 150,977 0,98 

59 13.446 2,000 13.660 111,696 1,57 

60 15.392 4,000 15.462 144,569 0,45 

61 6.801 3,000 7.047 151,632 3,49 

62 11.354 3,000 11.488 151,195 1,17 

63 5.282 2,000 5.422 143,083 2,58 

64 6.746 2,000 6.918 149,058 2,49 

65 7.881 2,000 7.922 151,148 0,52 
 



81 
 

Continuação 
66 5.043 3,000 5.268 141,273 4,27 

67 8.324 3,000 8.648 118,607 3,75 

68 4.918 2,000 5.133 167,013 4,19 

69 4.314 2,000 4.404 121,503 2,04 

70 8.994 3,000 9.220 161,959 2,45 

71 4.768 3,000 4.937 153,285 3,42 

72 2.412 2,000 2.507 134,441 3,79 

73 3.328 4,000 3.448 144,971 3,48 

74 5.220 3,000 5.413 162,489 3,57 

75 5.939 2,000 6.235 177,855 4,75 

76 16.710 3,000 16.823 162,723 0,67 

77 17.545 2,000 17.667 163,316 0,69 

78 20.522 4,000 20.590 189,930 0,33 

79 16.139 2,000 16.350 167,279 1,29 

80 13.118 3,000 13.210 177,949 0,70 

81 10.847 3,000 11.034 174,720 1,69 

82 11.506 3,000 11.642 140,025 1,17 

83 12.304 3,000 12.460 164,018 1,25 

84 11.744 2,000 11.917 126,438 1,45 

85 10.649 2,000 10.825 140,556 1,63 

86 9.919 2,000 10.035 137,342 1,16 

87 11.926 3,000 12.162 138,013 1,94 

88 9.962 2,000 10.138 126,319 1,74 

89 10.901 4,000 11.098 156,047 1,78 

90 9.623 2,000 9.853 144,409 2,33 

91 13.182 2,000 13.383 150,914 1,50 

92 9.152 3,000 9.333 164,439 1,94 

93 7.381 2,000 7.404 149,963 0,31 

94 6.712 2,000 6.838 151,975 1,84 

95 6.392 3,000 6.531 136,359 2,13 

96 5.114 2,000 5.375 134,565 4,86 

97 4.379 2,000 4.665 132,803 6,13 

98 5.725 3,000 5.854 149,432 2,20 

99 8.494 3,000 8.773 156,437 3,18 

100 10.313 2,000 10.528 145,298 2,04 

101 13.236 3,000 13.409 146,593 1,29 

102 10.728 2,000 10.920 126,329 1,76 

103 18.927 2,000 19.125 149,370 1,04 

104 15.636 2,000 15.783 111,399 0,93 

105 17.608 2,000 17.762 130,603 0,87 

106 28.965 2,000 29.197 146,219 0,79 

107 24.379 3,000 24.622 147,981 0,99 

108 16.233 3,000 16.336 129,199 0,63 

109 16.520 4,000 16.717 144,534 1,18 

110 13.275 2,000 13.465 132,444 1,41 

111 13.592 2,000 13.760 163,753 1,22 

112 15.088 2,000 15.259 148,808 1,12 

113 18.774 3,000 18.959 174,626 0,98 

114 12.237 2,000 12.385 130,416 1,19 

115 21.701 2,000 21.914 170,009 0,97 

116 10.947 3,000 11.091 152,973 1,30 

117 14.926 2,000 15.016 156,203 0,60 

118 10.941 3,000 11.119 146,203 1,60 

119 15.538 5,000 15.705 150,774 1,06 

120 9.776 3,000 9.932 142,927 1,57 

121 9.086 2,000 9.224 185,219 1,50 

122 10.350 3,000 10.665 150,555 2,95 

123 15.316 3,000 15.498 161,663 1,17 

124 12.080 2,000 12.312 161,694 1,88 

125 14.363 3,000 14.560 156,171 1,35 

 



82 
 

APÊNDICE E – Resultados GC x GRASP 50 X 6  
Instância GC Tempo [Seg] Grasp 50 x 6 Tempo [Seg] Gap % 

1 23.300 5,000 23.461 346,343 0,69 
2 27.230 4,000 27.427 299,325 0,72 

3 20.964 5,000 21.077 370,344 0,54 

4 19.685 6,000 19.869 385,498 0,93 

5 18.169 5,000 18.170 335,755 0,01 

6 17.818 4,000 17.897 383,005 0,44 

7 16.788 7,000 16.816 404,185 0,17 

8 15.875 4,000 16.058 343,753 1,14 

9 11.768 4,000 11.952 345,837 1,54 

10 12.633 4,000 12.791 350,627 1,24 

11 15.054 3,000 15.210 303,592 1,03 

12 13.361 3,000 13.459 364,057 0,73 

13 10.604 3,000 10.763 258,149 1,48 

14 13.885 4,000 14.049 362,140 1,17 

15 12.450 4,000 12.652 314,012 1,60 

16 8.732 3,000 8.933 353,730 2,25 

17 12.989 4,000 13.188 342,061 1,51 

18 7.817 3,000 8.065 380,827 3,08 

19 5.246 3,000 5.397 345,385 2,80 

20 11.428 4,000 11.686 376,506 2,21 

21 4.304 3,000 4.527 287,524 4,93 

22 3.328 3,000 3.509 300,877 5,16 

23 4.485 3,000 4.638 309,599 3,30 

24 2.498 3,000 2.728 295,199 8,43 

25 6.081 2,000 6.257 348,723 2,81 

26 18.528 2,000 18.613 318,318 0,46 

27 22.599 5,000 22.769 354,323 0,75 

28 21.794 4,000 21.921 350,034 0,58 

29 18.824 4,000 18.894 340,470 0,37 

30 18.964 4,000 19.037 326,617 0,38 

31 16.037 3,000 16.191 284,045 0,95 

32 9.205 3,000 9.254 272,705 0,53 

33 15.720 6,000 15.831 382,637 0,70 

34 12.796 4,000 12.886 400,031 0,70 

35 14.131 5,000 14.168 315,463 0,26 

36 11.894 4,000 12.090 337,273 1,62 

37 10.907 3,000 10.952 359,518 0,41 

38 12.976 3,000 13.139 282,937 1,24 

39 11.165 3,000 11.365 291,814 1,76 

40 9.345 3,000 9.503 307,741 1,66 

41 12.929 3,000 13.108 330,471 1,37 

42 8.023 4,000 8.115 327,194 1,13 

43 5.928 3,000 6.113 338,146 3,03 

44 8.743 3,000 9.045 241,067 3,34 

45 9.334 4,000 9.733 351,422 4,10 

46 5.634 3,000 5.876 362,513 4,12 

47 2.802 4,000 2.978 337,085 5,91 

48 4.126 2,000 4.268 382,902 3,33 

49 5.948 3,000 6.103 281,533 2,54 

50 6.728 3,000 6.967 342,952 3,43 

51 16.507 3,000 16.561 339,409 0,33 

52 20.136 4,000 20.198 363,917 0,31 

53 18.094 4,000 18.160 337,568 0,36 

54 20.168 3,000 20.213 295,668 0,22 

55 23.157 4,000 23.238 315,806 0,35 

56 14.703 4,000 14.751 342,451 0,33 

57 15.734 4,000 15.859 342,919 0,79 

58 16.464 4,000 16.525 384,900 0,37 

59 15.565 3,000 15.682 283,982 0,75 

60 14.488 6,000 14.565 363,340 0,53 

61 11.345 3,000 11.505 328,708 1,39 

62 13.058 4,000 13.324 293,966 2,00 

63 11.511 4,000 11.715 383,574 1,74 

64 8.976 4,000 9.137 322,639 1,76 

65 9.318 4,000 9.539 378,768 2,32 
 
 
 



83 
 

Continuação 
66 14.299 3,000 14.632 393,729 2,28 

67 8.108 3,000 8.353 269,444 2,93 

68 13.424 3,000 13.768 368,769 2,50 

69 9.777 5,000 10.026 324,059 2,48 

70 11.600 3,000 11.880 324,886 2,36 

71 13.959 2,000 14.377 327,008 2,91 

72 16.575 4,000 16.896 356,413 1,90 

73 7.345 4,000 7.627 289,708 3,70 

74 7.972 5,000 8.176 327,428 2,50 

75 7.874 3,000 8.155 286,338 3,45 

76 23.774 5,000 23.940 336,867 0,69 

77 32.450 5,000 32.610 429,297 0,49 

78 31.574 4,000 31.761 314,512 0,59 

79 24.191 4,000 24.404 316,228 0,87 

80 21.434 5,000 21.561 289,178 0,59 

81 21.033 3,000 21.272 306,197 1,12 

82 19.407 4,000 19.644 388,830 1,21 

83 18.571 4,000 18.887 331,250 1,67 

84 17.673 5,000 17.907 340,253 1,31 

85 20.675 4,000 20.887 352,045 1,01 

86 23.996 5,000 24.251 379,330 1,05 

87 18.892 5,000 19.130 395,928 1,24 

88 18.138 4,000 18.312 336,072 0,95 

89 17.025 3,000 17.304 353,371 1,61 

90 20.835 4,000 21.086 367,396 1,19 

91 18.049 4,000 18.300 315,385 1,37 

92 14.912 5,000 15.105 331,110 1,28 

93 16.367 5,000 16.716 327,305 2,09 

94 11.286 4,000 11.637 256,012 3,02 

95 13.989 4,000 14.328 347,475 2,37 

96 11.832 4,000 12.133 343,029 2,48 

97 17.277 3,000 17.574 334,949 1,69 

98 22.669 4,000 23.026 373,932 1,55 

99 13.740 3,000 14.074 290,597 2,37 

100 12.885 3,000 13.107 381,904 1,69 

101 29.384 3,000 29.659 281,954 0,93 

102 24.716 5,000 24.980 289,334 1,06 

103 28.295 4,000 28.541 300,690 0,86 

104 28.594 5,000 28.796 310,752 0,70 

105 21.524 5,000 21.777 283,078 1,16 

106 24.259 4,000 24.528 334,214 1,10 

107 18.114 4,000 18.372 332,094 1,40 

108 26.604 4,000 26.871 309,535 0,99 

109 29.050 3,000 29.290 275,964 0,82 

110 19.312 4,000 19.540 291,595 1,17 

111 19.603 4,000 19.779 326,041 0,89 

112 21.292 4,000 21.471 330,408 0,83 

113 25.006 5,000 25.209 324,059 0,81 

114 22.318 3,000 22.560 329,066 1,07 

115 20.472 4,000 20.771 307,398 1,44 

116 16.656 4,000 16.912 330,986 1,51 

117 21.944 4,000 22.176 371,577 1,05 

118 20.639 3,000 20.892 339,082 1,21 

119 27.295 5,000 27.544 308,896 0,90 

120 20.005 4,000 20.182 298,320 0,88 

121 19.029 3,000 19.298 296,759 1,39 

122 14.864 3,000 15.140 293,108 1,82 

123 21.302 4,000 21.486 369,018 0,86 

124 16.005 4,000 16.271 322,468 1,63 

125 21.452 3,000 21.733 351,220 1,29 

 



84 
 

 

APÊNDICE F – Resultados GC x HEU_C + BL 30 x 4 
Instância GC Tempo [Seg] HEU_C + BL 

30   
Tempo [Seg] Gap % 

1 15.417 1,000 15.560 0,046 0,92 
2 7.433 2,000 7.501 0,046 0,91 

3 16.530 2,000 16.848 0,062 1,89 

4 16.053 1,000 16.147 0,062 0,58 

5 6.992 1,000 7.150 0,046 2,21 

6 9.059 1,000 9.477 0,015 4,41 

7 6.447 1,000 6.580 0,031 2,02 

8 6.773 2,000 7.305 0,046 7,28 

9 10.539 2,000 10.763 0,031 2,08 

10 9.324 1,000 9.597 0,031 2,84 

11 9.430 2,000 9.750 0,046 3,28 

12 6.694 2,000 6.929 0,031 3,39 

13 4.835 1,000 5.261 0,046 8,10 

14 8.968 2,000 9.148 0,046 1,97 

15 4.257 1,000 4.403 0,031 3,32 

16 2.107 1,000 2.370 0,046 11,10 

17 1.999 2,000 2.140 0,031 6,59 

18 2.109 1,000 2.393 0,046 11,87 

19 3.706 1,000 3.911 0,046 5,24 

20 1.875 1,000 2.240 0,031 16,29 

21 1.958 1,000 2.087 0,046 6,18 

22 2.310 2,000 2.650 0,031 12,83 

23 2.456 1,000 2.624 0,046 6,40 

24 1.372 1,000 1.665 0,031 17,60 

25 1.798 1,000 2.328 0,046 22,77 

26 6.326 2,000 6.466 0,046 2,17 

27 9.809 2,000 9.938 0,046 1,30 

28 16.150 1,000 16.295 0,062 0,89 

29 14.081 2,000 14.205 0,031 0,87 

30 12.761 2,000 12.831 0,046 0,55 

31 8.187 2,000 8.414 0,046 2,70 

32 8.684 2,000 9.056 0,031 4,11 

33 6.440 1,000 6.553 0,062 1,72 

34 4.939 1,000 5.327 0,031 7,28 

35 4.366 2,000 4.728 0,046 7,66 

36 6.741 2,000 7.107 0,031 5,15 

37 7.648 1,000 8.150 0,046 6,16 

38 2.309 1,000 2.503 0,031 7,75 

39 4.830 1,000 5.015 0,046 3,69 

40 5.007 1,000 5.322 0,046 5,92 

41 3.922 2,000 4.109 0,046 4,55 

42 2.672 2,000 2.795 0,046 4,40 

43 1.755 1,000 1.986 0,031 11,63 

44 1.449 2,000 1.690 0,031 14,26 

45 3.542 2,000 4.052 0,031 12,59 

46 2.037 1,000 2.316 0,031 12,05 

47 2.577 2,000 2.934 0,046 12,17 

48 1.602 1,000 1.718 0,046 6,75 

49 1.711 1,000 2.006 0,031 14,71 

50 2.219 1,000 2.364 0,046 6,13 

51 9.481 2,000 9.647 0,046 1,72 

52 15.342 1,000 15.444 0,046 0,66 

53 7.480 2,000 7.720 0,015 3,11 

54 11.144 2,000 11.370 0,046 1,99 

55 10.736 1,000 10.854 0,046 1,09 

56 7.115 1,000 7.149 0,046 0,48 

57 7.484 1,000 7.826 0,031 4,37 

58 5.353 2,000 5.738 0,031 6,71 

59 7.662 2,000 7.929 0,046 3,37 

60 8.908 1,000 9.097 0,046 2,08 

61 6.398 1,000 7.294 0,031 12,28 

62 4.820 1,000 6.006 0,031 19,75 

63 5.546 2,000 5.977 0,031 7,21 

64 5.634 1,000 6.153 0,046 8,43 

65 6.809 2,000 7.181 0,062 5,18 
 



85 
 

Continuação 
66 4.388 2,000 4.974 0,031 11,78 

67 3.618 1,000 3.860 0,062 6,27 

68 3.437 1,000 4.149 0,031 17,16 

69 4.024 1,000 4.383 0,031 8,19 

70 5.092 1,000 5.804 0,031 12,27 

71 3.032 2,000 3.391 0,046 10,59 

72 1.391 2,000 1.490 0,031 6,64 

73 3.016 1,000 3.213 0,062 6,13 

74 2.718 1,000 3.281 0,031 17,16 

75 2.888 1,000 3.307 0,031 12,67 

76 10.469 1,000 10.778 0,015 2,87 

77 8.745 2,000 8.874 0,046 1,45 

78 8.652 1,000 8.781 0,031 1,47 

79 9.831 2,000 10.229 0,046 3,89 

80 7.737 1,000 7.886 0,031 1,89 

81 7.408 1,000 7.872 0,046 5,89 

82 9.421 1,000 9.619 0,046 2,06 

83 10.549 2,000 10.916 0,046 3,36 

84 11.406 1,000 11.551 0,046 1,26 

85 8.122 1,000 8.245 0,046 1,49 

86 7.484 1,000 7.741 0,031 3,32 

87 6.185 1,000 6.362 0,031 2,78 

88 7.909 2,000 8.112 0,031 2,50 

89 10.978 1,000 11.489 0,031 4,45 

90 8.826 2,000 9.113 0,031 3,15 

91 8.260 1,000 8.727 0,031 5,35 

92 5.554 1,000 6.218 0,031 10,68 

93 6.461 1,000 6.758 0,062 4,39 

94 7.778 1,000 8.113 0,046 4,13 

95 7.850 1,000 7.991 0,046 1,76 

96 3.676 2,000 4.120 0,031 10,78 

97 4.906 1,000 5.285 0,046 7,17 

98 1.601 1,000 1.758 0,062 8,93 

99 5.282 1,000 5.487 0,031 3,74 

100 7.419 1,000 7.976 0,046 6,98 

101 17.076 2,000 17.234 0,015 0,92 

102 8.986 1,000 9.134 0,031 1,62 

103 8.737 1,000 8.826 0,031 1,01 

104 12.099 1,000 12.301 0,062 1,64 

105 9.911 1,000 10.087 0,031 1,74 

106 11.008 2,000 11.294 0,031 2,53 

107 13.667 2,000 13.851 0,031 1,33 

108 12.375 2,000 12.582 0,046 1,65 

109 14.597 1,000 14.853 0,031 1,72 

110 10.668 1,000 10.827 0,031 1,47 

111 11.353 1,000 11.474 0,031 1,05 

112 16.857 2,000 17.041 0,031 1,08 

113 14.871 1,000 14.974 0,031 0,69 

114 14.882 2,000 15.093 0,037 1,40 

115 17.117 1,000 17.278 0,051 0,93 

116 7.988 2,000 8.188 0,021 2,44 

117 6.272 1,000 6.540 0,031 4,10 

118 11.147 2,000 11.323 0,042 1,55 

119 9.748 2,000 10.143 0,046 3,89 

120 8.002 1,000 8.434 0,030 5,12 

121 9.620 1,000 9.848 0,046 2,32 

122 16.018 2,000 16.648 0,051 3,78 

123 8.466 1,000 8.720 0,035 2,91 

124 9.410 2,000 9.670 0,046 2,69 

125 15.361 1,000 15.642 0,031 1,80 

 



86 
 

APÊNDICE G - Resultados HEU_C + BL 40 x 5 
Instância GC Tempo [Seg] HEU_C + BL 

40   
Tempo [Seg] Gap % 

1 16.268 2,000 16.528 0,062 1,57 
2 12.354 3,000 12.589 0,093 1,87 

3 14.262 3,000 14.514 0,124 1,74 

4 18.806 2,000 18.972 0,124 0,87 

5 16.559 3,000 17.229 0,109 3,89 

6 11.196 2,000 11.640 0,124 3,81 

7 15.934 2,000 16.443 0,109 3,10 

8 15.577 2,000 15.844 0,140 1,69 

9 12.100 3,000 12.433 0,078 2,68 

10 10.656 2,000 11.000 0,109 3,13 

11 7.910 2,000 8.529 0,078 7,26 

12 5.238 2,000 5.615 0,109 6,71 

13 6.130 4,000 6.708 0,093 8,62 

14 10.998 3,000 11.487 0,109 4,26 

15 6.830 2,000 7.655 0,078 10,78 

16 2.257 3,000 2.989 0,078 24,49 

17 2.074 2,000 2.366 0,109 12,34 

18 2.698 2,000 3.058 0,140 11,77 

19 3.300 2,000 3.508 0,093 5,93 

20 2.395 2,000 2.866 0,078 16,43 

21 2.291 2,000 2.453 0,109 6,60 

22 891 3,000 994 0,078 10,36 

23 2.175 2,000 2.566 0,078 15,24 

24 2.079 2,000 2.810 0,078 26,01 

25 789 2,000 920 0,093 14,24 

26 13.673 2,000 13.752 0,109 0,57 

27 11.241 3,000 11.659 0,109 3,59 

28 9.602 2,000 9.909 0,109 3,10 

29 12.161 3,000 12.318 0,109 1,27 

30 13.194 3,000 13.285 0,093 0,68 

31 13.273 2,000 13.803 0,109 3,84 

32 5.918 1,000 6.307 0,093 6,17 

33 9.530 3,000 9.929 0,078 4,02 

34 10.353 3,000 10.529 0,093 1,67 

35 12.314 2,000 12.837 0,078 4,07 

36 6.470 2,000 6.604 0,124 2,03 

37 4.759 3,000 4.935 0,140 3,57 

38 5.565 2,000 5.872 0,093 5,23 

39 4.538 2,000 5.060 0,078 10,32 

40 6.867 2,000 7.312 0,062 6,09 

41 3.111 1,000 3.596 0,078 13,49 

42 3.012 1,000 3.460 0,093 12,95 

43 3.370 2,000 3.912 0,078 13,85 

44 3.829 3,000 4.174 0,109 8,27 

45 7.552 3,000 8.022 0,093 5,86 

46 1.035 3,000 1.214 0,078 14,74 

47 1.350 2,000 1.733 0,124 22,10 

48 1.703 2,000 2.129 0,109 20,01 

49 3.614 2,000 3.863 0,046 6,45 

50 2.169 2,000 2.672 0,109 18,82 

51 17.568 2,000 17.890 0,093 1,80 

52 16.600 3,000 16.880 0,109 1,66 

53 14.099 2,000 14.600 0,062 3,43 

54 16.217 4,000 16.806 0,062 3,50 

55 21.364 2,000 21.426 0,124 0,29 

56 8.516 2,000 8.780 0,109 3,01 

57 8.735 3,000 9.046 0,078 3,44 

58 10.568 3,000 11.150 0,093 5,22 

59 13.446 2,000 14.144 0,093 4,93 

60 15.392 4,000 15.933 0,078 3,40 

61 6.801 3,000 7.146 0,093 4,83 

62 11.354 3,000 11.625 0,109 2,33 

63 5.282 2,000 5.587 0,078 5,46 

64 6.746 2,000 7.549 0,078 10,64 

65 7.881 2,000 8.196 0,109 3,84 
 

 



87 
 

Continuação 
66 5.043 3,000 5.477 0,124 7,92 

67 8.324 3,000 9.029 0,078 7,81 

68 4.918 2,000 5.544 0,078 11,29 

69 4.314 2,000 5.130 0,062 15,91 

70 8.994 3,000 9.478 0,124 5,11 

71 4.768 3,000 5.161 0,156 7,61 

72 2.412 2,000 2.860 0,124 15,66 

73 3.328 4,000 3.698 0,124 10,01 

74 5.220 3,000 5.903 0,078 11,57 

75 5.939 2,000 7.098 0,078 16,33 

76 16.710 3,000 17.037 0,124 1,92 

77 17.545 2,000 17.748 0,124 1,14 

78 20.522 4,000 20.929 0,124 1,94 

79 16.139 2,000 16.363 0,124 1,37 

80 13.118 3,000 13.210 0,140 0,70 

81 10.847 3,000 11.245 0,093 3,54 

82 11.506 3,000 12.081 0,109 4,76 

83 12.304 3,000 12.996 0,093 5,32 

84 11.744 2,000 12.343 0,093 4,85 

85 10.649 2,000 11.361 0,109 6,27 

86 9.919 2,000 10.378 0,078 4,42 

87 11.926 3,000 12.455 0,109 4,25 

88 9.962 2,000 10.628 0,078 6,27 

89 10.901 4,000 11.546 0,062 5,59 

90 9.623 2,000 10.191 0,093 5,57 

91 13.182 2,000 13.752 0,093 4,14 

92 9.152 3,000 9.464 0,093 3,30 

93 7.381 2,000 7.634 0,093 3,31 

94 6.712 2,000 7.129 0,093 5,85 

95 6.392 3,000 6.862 0,093 6,85 

96 5.114 2,000 5.546 0,093 7,79 

97 4.379 2,000 5.213 0,046 16,00 

98 5.725 3,000 6.590 0,124 13,13 

99 8.494 3,000 9.217 0,109 7,84 

100 10.313 2,000 11.036 0,062 6,55 

101 13.236 3,000 13.420 0,093 1,37 

102 10.728 2,000 10.944 0,093 1,97 

103 18.927 2,000 19.178 0,078 1,31 

104 15.636 2,000 15.856 0,031 1,39 

105 17.608 2,000 17.866 0,062 1,44 

106 28.965 2,000 29.425 0,109 1,56 

107 24.379 3,000 24.917 0,078 2,16 

108 16.233 3,000 16.380 0,062 0,90 

109 16.520 4,000 16.892 0,078 2,20 

110 13.275 2,000 13.522 0,124 1,83 

111 13.592 2,000 13.966 0,093 2,68 

112 15.088 2,000 15.495 0,093 2,63 

113 18.774 3,000 19.035 0,124 1,37 

114 12.237 2,000 12.651 0,078 3,27 

115 21.701 2,000 22.107 0,078 1,84 

116 10.947 3,000 11.254 0,093 2,73 

117 14.926 2,000 15.055 0,062 0,86 

118 10.941 3,000 11.567 0,062 5,41 

119 15.538 5,000 15.972 0,124 2,72 

120 9.776 3,000 10.651 0,109 8,22 

121 9.086 2,000 9.511 0,140 4,47 

122 10.350 3,000 10.969 0,093 5,64 

123 15.316 3,000 15.783 0,093 2,96 

124 12.080 2,000 12.362 0,124 2,28 

125 14.363 3,000 14.931 0,078 3,80 

 



88 
 

APÊNDICE H – Resultados  HEU_C + BL 50 X 6 
Instância GC Tempo [Seg] HEU_C + BL 

50   
Tempo [Seg] Gap % 

1 23.300 5,000 23.556 0,234 1,09 

2 27.230 4,000 27.488 0,249 0,94 

3 20.964 5,000 21.199 0,265 1,11 

4 19.685 6,000 19.997 0,171 1,56 

5 18.169 5,000 18.248 0,234 0,43 

6 17.818 4,000 18.051 0,234 1,29 

7 16.788 7,000 16.829 0,218 0,24 

8 15.875 4,000 16.281 0,156 2,49 

9 11.768 4,000 12.128 0,234 2,97 

10 12.633 4,000 12.978 0,171 2,66 

11 15.054 3,000 15.726 0,171 4,27 

12 13.361 3,000 13.680 0,234 2,33 

13 10.604 3,000 10.963 0,140 3,27 

14 13.885 4,000 14.299 0,327 2,90 

15 12.450 4,000 12.979 0,171 4,08 

16 8.732 3,000 9.219 0,218 5,28 

17 12.989 4,000 14.006 0,140 7,26 

18 7.817 3,000 8.723 0,202 10,39 

19 5.246 3,000 5.772 0,202 9,11 

20 11.428 4,000 12.267 0,218 6,84 

21 4.304 3,000 4.743 0,171 9,26 

22 3.328 3,000 3.640 0,249 8,57 

23 4.485 3,000 5.554 0,093 19,25 

24 2.498 3,000 3.005 0,202 16,87 

25 6.081 2,000 106.704 0,187 94,30 

26 18.528 2,000 18.899 0,218 1,96 

27 22.599 5,000 22.868 0,280 1,18 

28 21.794 4,000 22.210 0,327 1,87 

29 18.824 4,000 18.967 0,234 0,75 

30 18.964 4,000 19.141 0,171 0,92 

31 16.037 3,000 16.229 0,171 1,18 

32 9.205 3,000 9.521 0,171 3,32 

33 15.720 6,000 16.206 0,249 3,00 

34 12.796 4,000 13.130 0,218 2,54 

35 14.131 5,000 14.374 0,218 1,69 

36 11.894 4,000 12.304 0,202 3,33 

37 10.907 3,000 11.278 0,218 3,29 

38 12.976 3,000 13.575 0,187 4,41 

39 11.165 3,000 111.770 0,218 90,01 

40 9.345 3,000 10.055 0,124 7,06 

41 12.929 3,000 13.646 0,171 5,25 

42 8.023 4,000 108.782 0,140 92,62 

43 5.928 3,000 6.263 0,312 5,35 

44 8.743 3,000 9.777 0,109 10,58 

45 9.334 4,000 9.989 0,218 6,56 

46 5.634 3,000 6.248 0,280 9,83 

47 2.802 4,000 3.273 0,312 14,39 

48 4.126 2,000 4.571 0,202 9,74 

49 5.948 3,000 6.751 0,109 11,89 

50 6.728 3,000 7.546 0,202 10,84 

51 16.507 3,000 16.854 0,202 2,06 

52 20.136 4,000 20.316 0,249 0,89 

53 18.094 4,000 18.266 0,296 0,94 

54 20.168 3,000 20.266 0,187 0,48 

55 23.157 4,000 23.339 0,265 0,78 

56 14.703 4,000 14.978 0,234 1,84 

57 15.734 4,000 16.117 0,218 2,38 

58 16.464 4,000 16.799 0,187 1,99 

59 15.565 3,000 15.873 0,109 1,94 

60 14.488 6,000 14.720 0,156 1,58 

61 11.345 3,000 12.070 0,171 6,01 

62 13.058 4,000 13.923 0,218 6,21 

63 11.511 4,000 12.336 0,187 6,69 

64 8.976 4,000 9.713 0,109 7,59 

65 9.318 4,000 9.583 0,249 2,77 
 



89 
 

Continuação 
66 14.299 3,000 15.025 0,187 4,83 

67 8.108 3,000 8.807 0,109 7,94 

68 13.424 3,000 14.344 0,171 6,41 

69 9.777 5,000 10.224 0,078 4,37 

70 11.600 3,000 12.349 0,140 6,07 

71 13.959 2,000 15.143 0,140 7,82 

72 16.575 4,000 17.376 0,249 4,61 

73 7.345 4,000 8.775 0,109 16,30 

74 7.972 5,000 9.042 0,156 11,83 

75 7.874 3,000 8.337 0,202 5,55 

76 23.774 5,000 24.111 0,265 1,40 

77 32.450 5,000 32.693 0,218 0,74 

78 31.574 4,000 31.880 0,156 0,96 

79 24.191 4,000 24.819 0,187 2,53 

80 21.434 5,000 21.704 0,140 1,24 

81 21.033 3,000 21.376 0,171 1,60 

82 19.407 4,000 19.932 0,171 2,63 

83 18.571 4,000 18.950 0,187 2,00 

84 17.673 5,000 18.071 0,140 2,20 

85 20.675 4,000 21.046 0,218 1,76 

86 23.996 5,000 24.456 0,187 1,88 

87 18.892 5,000 19.652 0,187 3,87 

88 18.138 4,000 18.529 0,156 2,11 

89 17.025 3,000 17.685 0,187 3,73 

90 20.835 4,000 21.622 0,156 3,64 

91 18.049 4,000 18.608 0,218 3,00 

92 14.912 5,000 15.752 0,156 5,33 

93 16.367 5,000 16.970 0,249 3,55 

94 11.286 4,000 11.798 0,078 4,34 

95 13.989 4,000 14.738 0,202 5,08 

96 11.832 4,000 12.294 0,187 3,76 

97 17.277 3,000 17.797 0,202 2,92 

98 22.669 4,000 23.934 0,296 5,29 

99 13.740 3,000 14.326 0,156 4,09 

100 12.885 3,000 13.410 0,202 3,91 

101 29.384 3,000 29.698 0,171 1,06 

102 24.716 5,000 25.098 0,171 1,52 

103 28.295 4,000 28.603 0,124 1,08 

104 28.594 5,000 28.869 0,124 0,95 

105 21.524 5,000 21.834 0,140 1,42 

106 24.259 4,000 24.580 0,187 1,31 

107 18.114 4,000 18.401 0,218 1,56 

108 26.604 4,000 26.950 0,202 1,28 

109 29.050 3,000 29.339 0,124 0,99 

110 19.312 4,000 19.652 0,202 1,73 

111 19.603 4,000 19.942 0,156 1,70 

112 21.292 4,000 21.854 0,187 2,57 

113 25.006 5,000 25.421 0,218 1,63 

114 22.318 3,000 22.624 0,202 1,35 

115 20.472 4,000 21.040 0,249 2,70 

116 16.656 4,000 17.270 0,187 3,56 

117 21.944 4,000 22.337 0,265 1,76 

118 20.639 3,000 21.085 0,171 2,12 

119 27.295 5,000 27.924 0,187 2,25 

120 20.005 4,000 20.502 0,187 2,42 

121 19.029 3,000 19.771 0,171 3,75 

122 14.864 3,000 15.545 0,234 4,38 

123 21.302 4,000 21.555 0,202 1,17 

124 16.005 4,000 16.845 0,280 4,99 

125 21.452 3,000 22.067 0,296 2,79 

 



90 
 

APÊNDICE I – Resultados HEU_C 30 x 4 
Instância GC Tempo [Seg]  HEU_C 30   Tempo [Seg] Gap % 

1 15.417 1,000 15.923 0,000 3,18 

2 7.433 2,000 7.865 0,015 5,49 

3 16.530 2,000 18.042 0,000 8,38 

4 16.053 1,000 16.498 0,015 2,70 

5 6.992 1,000 7.613 0,015 8,16 

6 9.059 1,000 9.568 0,015 5,32 

7 6.447 1,000 6.674 0,000 3,40 

8 6.773 2,000 7.615 0,015 11,06 

9 10.539 2,000 12.256 0,015 14,01 

10 9.324 1,000 9.647 0,015 3,35 

11 9.430 2,000 10.046 0,015 6,13 

12 6.694 2,000 7.281 0,015 8,06 

13 4.835 1,000 5.820 0,000 16,92 

14 8.968 2,000 10.167 0,015 11,79 

15 4.257 1,000 5.366 0,015 20,67 

16 2.107 1,000 2.943 0,015 28,41 

17 1.999 2,000 2.749 0,031 27,28 

18 2.109 1,000 2.488 0,031 15,23 

19 3.706 1,000 5.185 0,015 28,52 

20 1.875 1,000 2.508 0,015 25,24 

21 1.958 1,000 2.696 0,015 27,37 

22 2.310 2,000 2.703 0,015 14,54 

23 2.456 1,000 3.140 0,015 21,78 

24 1.372 1,000 2.047 0,015 32,98 

25 1.798 1,000 3.711 0,015 51,55 

26 6.326 2,000 7.076 0,015 10,60 

27 9.809 2,000 10.196 0,015 3,80 

28 16.150 1,000 17.270 0,015 6,49 

29 14.081 2,000 14.918 0,015 5,61 

30 12.761 2,000 13.325 0,015 4,23 

31 8.187 2,000 8.940 0,015 8,42 

32 8.684 2,000 9.291 0,015 6,53 

33 6.440 1,000 7.509 0,015 14,24 

34 4.939 1,000 5.774 0,015 14,46 

35 4.366 2,000 4.818 0,015 9,38 

36 6.741 2,000 7.612 0,015 11,44 

37 7.648 1,000 8.435 0,015 9,33 

38 2.309 1,000 2.704 0,015 14,61 

39 4.830 1,000 5.521 0,000 12,52 

40 5.007 1,000 6.067 0,015 17,47 

41 3.922 2,000 4.973 0,000 21,13 

42 2.672 2,000 3.697 0,015 27,73 

43 1.755 1,000 2.623 0,015 33,09 

44 1.449 2,000 2.053 0,015 29,42 

45 3.542 2,000 4.774 0,015 25,81 

46 2.037 1,000 2.779 0,015 26,70 

47 2.577 2,000 3.177 0,000 18,89 

48 1.602 1,000 2.915 0,015 45,04 

49 1.711 1,000 2.416 0,015 29,18 

50 2.219 1,000 2.624 0,000 15,43 

51 9.481 2,000 9.969 0,015 4,90 

52 15.342 1,000 15.971 0,015 3,94 

53 7.480 2,000 7.720 0,015 3,11 

54 11.144 2,000 11.661 0,015 4,43 

55 10.736 1,000 11.133 0,015 3,57 

56 7.115 1,000 7.626 0,000 6,70 

57 7.484 1,000 7.924 0,015 5,55 

58 5.353 2,000 5.926 0,000 9,67 

59 7.662 2,000 8.135 0,015 5,81 

60 8.908 1,000 9.526 0,000 6,49 

61 6.398 1,000 8.162 0,015 21,61 

62 4.820 1,000 6.786 0,015 28,97 

63 5.546 2,000 6.472 0,015 14,31 

64 5.634 1,000 7.071 0,015 20,32 

65 6.809 2,000 9.021 0,015 24,52 
 



91 
 

Continuação 
66 4.388 2,000 6.185 0,015 29,05 

67 3.618 1,000 4.789 0,015 24,45 

68 3.437 1,000 4.878 0,015 29,54 

69 4.024 1,000 4.755 0,015 15,37 

70 5.092 1,000 6.696 0,000 23,95 

71 3.032 2,000 4.250 0,015 28,66 

72 1.391 2,000 1.867 0,015 25,50 

73 3.016 1,000 4.458 0,000 32,35 

74 2.718 1,000 4.125 0,015 34,11 

75 2.888 1,000 3.571 0,015 19,13 

76 10.469 1,000 10.866 0,000 3,65 

77 8.745 2,000 8.994 0,015 2,77 

78 8.652 1,000 9.303 0,015 7,00 

79 9.831 2,000 10.534 0,015 6,67 

80 7.737 1,000 8.151 0,015 5,08 

81 7.408 1,000 8.377 0,000 11,57 

82 9.421 1,000 10.370 0,015 9,15 

83 10.549 2,000 11.796 0,015 10,57 

84 11.406 1,000 12.631 0,015 9,70 

85 8.122 1,000 8.852 0,015 8,25 

86 7.484 1,000 8.006 0,015 6,52 

87 6.185 1,000 6.557 0,015 5,67 

88 7.909 2,000 8.488 0,015 6,82 

89 10.978 1,000 12.727 0,015 13,74 

90 8.826 2,000 10.031 0,015 12,01 

91 8.260 1,000 8.893 0,015 7,12 

92 5.554 1,000 6.935 0,015 19,91 

93 6.461 1,000 7.764 0,015 16,78 

94 7.778 1,000 8.570 0,015 9,24 

95 7.850 1,000 9.002 0,015 12,80 

96 3.676 2,000 5.080 0,015 27,64 

97 4.906 1,000 5.664 0,015 13,38 

98 1.601 1,000 2.043 0,015 21,63 

99 5.282 1,000 5.902 0,000 10,50 

100 7.419 1,000 8.376 0,015 11,43 

101 17.076 2,000 17.414 0,015 1,94 

102 8.986 1,000 9.206 0,015 2,39 

103 8.737 1,000 8.855 0,015 1,33 

104 12.099 1,000 12.603 0,015 4,00 

105 9.911 1,000 10.237 0,015 3,18 

106 11.008 2,000 11.957 0,015 7,94 

107 13.667 2,000 14.425 0,000 5,25 

108 12.375 2,000 12.955 0,015 4,48 

109 14.597 1,000 15.079 0,015 3,20 

110 10.668 1,000 11.416 0,000 6,55 

111 11.353 1,000 11.724 0,015 3,16 

112 16.857 2,000 17.585 0,015 4,14 

113 14.871 1,000 15.541 0,015 4,31 

114 14.882 2,000 15.231 0,015 2,29 

115 17.117 1,000 17.918 0,015 4,47 

116 7.988 2,000 8.454 0,000 5,51 

117 6.272 1,000 6.759 0,015 7,21 

118 11.147 2,000 12.076 0,015 7,69 

119 9.748 2,000 10.611 0,015 8,13 

120 8.002 1,000 8.771 0,031 8,77 

121 9.620 1,000 10.129 0,015 5,03 

122 16.018 2,000 18.309 0,015 12,51 

123 8.466 1,000 9.193 0,015 7,91 

124 9.410 2,000 10.434 0,015 9,81 

125 15.361 1,000 15.763 0,015 2,55 

 



92 
 

APÊNDICE J – HEU_C 40 x 5 
Instância GC Tempo [Seg]  HEU_C 40   Tempo [Seg] Gap % 

1 16.268 2,000 16.958 0,015 4,07 
2 12.354 3,000 13.287 0,000 7,02 

3 14.262 3,000 15.070 0,015 5,36 

4 18.806 2,000 19.511 0,031 3,61 

5 16.559 3,000 18.108 0,031 8,55 

6 11.196 2,000 12.239 0,031 8,52 

7 15.934 2,000 17.122 0,015 6,94 

8 15.577 2,000 17.471 0,031 10,84 

9 12.100 3,000 13.200 0,015 8,33 

10 10.656 2,000 11.877 0,015 10,28 

11 7.910 2,000 9.055 0,031 12,64 

12 5.238 2,000 6.717 0,015 22,02 

13 6.130 4,000 7.708 0,031 20,47 

14 10.998 3,000 12.722 0,015 13,55 

15 6.830 2,000 8.543 0,015 20,05 

16 2.257 3,000 4.267 0,015 47,11 

17 2.074 2,000 3.096 0,031 33,01 

18 2.698 2,000 4.406 0,031 38,77 

19 3.300 2,000 4.335 0,015 23,88 

20 2.395 2,000 3.691 0,015 35,11 

21 2.291 2,000 3.040 0,031 24,64 

22 891 3,000 1.847 0,031 51,76 

23 2.175 2,000 2.937 0,015 25,94 

24 2.079 2,000 3.027 0,015 31,32 

25 789 2,000 1.364 0,015 42,16 

26 13.673 2,000 14.141 0,031 3,31 

27 11.241 3,000 12.714 0,015 11,59 

28 9.602 2,000 11.130 0,031 13,73 

29 12.161 3,000 13.714 0,015 11,32 

30 13.194 3,000 13.735 0,015 3,94 

31 13.273 2,000 14.915 0,031 11,01 

32 5.918 1,000 6.886 0,015 14,06 

33 9.530 3,000 10.704 0,015 10,97 

34 10.353 3,000 10.945 0,015 5,41 

35 12.314 2,000 13.639 0,015 9,71 

36 6.470 2,000 7.833 0,031 17,40 

37 4.759 3,000 6.186 0,015 23,07 

38 5.565 2,000 6.913 0,015 19,50 

39 4.538 2,000 5.748 0,015 21,05 

40 6.867 2,000 7.611 0,015 9,78 

41 3.111 1,000 4.177 0,015 25,52 

42 3.012 1,000 4.333 0,015 30,49 

43 3.370 2,000 4.211 0,015 19,97 

44 3.829 3,000 5.391 0,015 28,97 

45 7.552 3,000 8.601 0,015 12,20 

46 1.035 3,000 1.773 0,015 41,62 

47 1.350 2,000 3.428 0,015 60,62 

48 1.703 2,000 3.132 0,015 45,63 

49 3.614 2,000 3.904 0,015 7,43 

50 2.169 2,000 4.476 0,015 51,54 

51 17.568 2,000 18.248 0,000 3,73 

52 16.600 3,000 17.720 0,015 6,32 

53 14.099 2,000 14.960 0,015 5,76 

54 16.217 4,000 17.239 0,015 5,93 

55 21.364 2,000 22.857 0,015 6,53 

56 8.516 2,000 10.072 0,015 15,45 

57 8.735 3,000 9.829 0,015 11,13 

58 10.568 3,000 11.415 0,015 7,42 

59 13.446 2,000 15.088 0,015 10,88 

60 15.392 4,000 16.262 0,031 5,35 

61 6.801 3,000 7.554 0,031 9,97 

62 11.354 3,000 13.198 0,015 13,97 

63 5.282 2,000 6.552 0,015 19,38 

64 6.746 2,000 7.978 0,015 15,44 

65 7.881 2,000 9.732 0,015 19,02 
 

 



93 
 

Continuação 
66 5.043 3,000 6.481 0,015 22,19 

67 8.324 3,000 10.145 0,015 17,95 

68 4.918 2,000 6.640 0,015 25,93 

69 4.314 2,000 5.535 0,015 22,06 

70 8.994 3,000 9.758 0,015 7,83 

71 4.768 3,000 6.575 0,015 27,48 

72 2.412 2,000 3.720 0,015 35,16 

73 3.328 4,000 5.162 0,015 35,53 

74 5.220 3,000 6.896 0,015 24,30 

75 5.939 2,000 9.070 0,015 34,52 

76 16.710 3,000 17.411 0,015 4,03 

77 17.545 2,000 18.476 0,015 5,04 

78 20.522 4,000 22.170 0,015 7,43 

79 16.139 2,000 17.105 0,015 5,65 

80 13.118 3,000 14.349 0,015 8,58 

81 10.847 3,000 11.742 0,015 7,62 

82 11.506 3,000 12.865 0,015 10,56 

83 12.304 3,000 13.654 0,015 9,89 

84 11.744 2,000 13.896 0,015 15,49 

85 10.649 2,000 12.311 0,015 13,50 

86 9.919 2,000 11.184 0,015 11,31 

87 11.926 3,000 14.464 0,015 17,55 

88 9.962 2,000 10.804 0,015 7,79 

89 10.901 4,000 12.437 0,015 12,35 

90 9.623 2,000 10.668 0,015 9,80 

91 13.182 2,000 14.674 0,015 10,17 

92 9.152 3,000 11.591 0,015 21,04 

93 7.381 2,000 8.693 0,000 15,09 

94 6.712 2,000 8.059 0,015 16,71 

95 6.392 3,000 8.339 0,015 23,35 

96 5.114 2,000 6.496 0,031 21,27 

97 4.379 2,000 6.180 0,015 29,14 

98 5.725 3,000 7.738 0,015 26,01 

99 8.494 3,000 10.770 0,015 21,13 

100 10.313 2,000 11.365 0,015 9,26 

101 13.236 3,000 13.711 0,015 3,46 

102 10.728 2,000 11.171 0,015 3,97 

103 18.927 2,000 19.766 0,015 4,24 

104 15.636 2,000 15.899 0,015 1,65 

105 17.608 2,000 17.998 0,031 2,17 

106 28.965 2,000 29.968 0,031 3,35 

107 24.379 3,000 26.328 0,015 7,40 

108 16.233 3,000 16.793 0,015 3,33 

109 16.520 4,000 17.465 0,031 5,41 

110 13.275 2,000 14.321 0,015 7,30 

111 13.592 2,000 14.337 0,015 5,20 

112 15.088 2,000 15.957 0,015 5,45 

113 18.774 3,000 19.813 0,015 5,24 

114 12.237 2,000 13.113 0,031 6,68 

115 21.701 2,000 22.410 0,031 3,16 

116 10.947 3,000 12.179 0,015 10,12 

117 14.926 2,000 15.833 0,015 5,73 

118 10.941 3,000 11.914 0,015 8,17 

119 15.538 5,000 17.098 0,015 9,12 

120 9.776 3,000 11.799 0,015 17,15 

121 9.086 2,000 11.260 0,015 19,31 

122 10.350 3,000 12.130 0,015 14,67 

123 15.316 3,000 16.844 0,015 9,07 

124 12.080 2,000 14.348 0,015 15,81 

125 14.363 3,000 15.636 0,015 8,14 

 



94 
 

APÊNDICE K – Resultados HEU_C 50 x 6 
Instância GC Tempo [Seg] HEU_C 50 Tempo [Seg] Gap % 

1 23.300 5,000 24.601 0,000 5,29 

2 27.230 4,000 28.626 0,015 4,88 

3 20.964 5,000 22.098 0,031 5,13 

4 19.685 6,000 20.493 0,015 3,94 

5 18.169 5,000 19.634 0,031 7,46 

6 17.818 4,000 18.805 0,015 5,25 

7 16.788 7,000 17.320 0,031 3,07 

8 15.875 4,000 17.187 0,031 7,63 

9 11.768 4,000 12.561 0,015 6,31 

10 12.633 4,000 13.580 0,015 6,97 

11 15.054 3,000 16.996 0,031 11,43 

12 13.361 3,000 14.855 0,031 10,06 

13 10.604 3,000 11.576 0,015 8,40 

14 13.885 4,000 16.447 0,031 15,58 

15 12.450 4,000 13.888 0,031 10,35 

16 8.732 3,000 12.721 0,015 31,36 

17 12.989 4,000 16.167 0,031 19,66 

18 7.817 3,000 9.419 0,031 17,01 

19 5.246 3,000 7.240 0,031 27,54 

20 11.428 4,000 13.062 0,031 12,51 

21 4.304 3,000 6.121 0,031 29,68 

22 3.328 3,000 4.546 0,015 26,79 

23 4.485 3,000 6.049 0,015 25,86 

24 2.498 3,000 104.507 0,031 97,61 

25 6.081 2,000 107.746 0,015 94,36 

26 18.528 2,000 122.977 0,031 84,93 

27 22.599 5,000 23.944 0,015 5,62 

28 21.794 4,000 23.468 0,015 7,13 

29 18.824 4,000 19.899 0,015 5,40 

30 18.964 4,000 19.572 0,015 3,11 

31 16.037 3,000 17.270 0,015 7,14 

32 9.205 3,000 10.410 0,031 11,58 

33 15.720 6,000 18.404 0,015 14,58 

34 12.796 4,000 14.507 0,015 11,79 

35 14.131 5,000 15.676 0,031 9,86 

36 11.894 4,000 13.830 0,015 14,00 

37 10.907 3,000 12.108 0,015 9,92 

38 12.976 3,000 114.484 0,015 88,67 

39 11.165 3,000 112.851 0,015 90,11 

40 9.345 3,000 110.605 0,015 91,55 

41 12.929 3,000 14.845 0,015 12,91 

42 8.023 4,000 109.259 0,015 92,66 

43 5.928 3,000 7.359 0,031 19,45 

44 8.743 3,000 11.132 0,031 21,46 

45 9.334 4,000 11.590 0,015 19,47 

46 5.634 3,000 8.396 0,015 32,90 

47 2.802 4,000 5.954 0,015 52,94 

48 4.126 2,000 5.805 0,015 28,92 

49 5.948 3,000 7.839 0,031 24,12 

50 6.728 3,000 108.701 0,031 93,81 

51 16.507 3,000 18.357 0,015 10,08 

52 20.136 4,000 123.942 0,015 83,75 

53 18.094 4,000 19.665 0,031 7,99 

54 20.168 3,000 120.897 0,015 83,32 

55 23.157 4,000 24.423 0,015 5,18 

56 14.703 4,000 20.001 0,015 26,49 

57 15.734 4,000 17.646 0,015 10,84 

58 16.464 4,000 17.307 0,015 4,87 

59 15.565 3,000 17.027 0,015 8,59 

60 14.488 6,000 14.998 0,015 3,40 

61 11.345 3,000 13.569 0,015 16,39 

62 13.058 4,000 14.794 0,015 11,73 

63 11.511 4,000 13.692 0,015 15,93 

64 8.976 4,000 10.114 0,015 11,25 

65 9.318 4,000 10.858 0,031 14,18 
 



95 
 

Continuação 
66 14.299 3,000 17.167 0,031 16,71 

67 8.108 3,000 9.626 0,031 15,77 

68 13.424 3,000 14.972 0,031 10,34 

69 9.777 5,000 10.639 0,015 8,10 

70 11.600 3,000 12.949 0,015 10,42 

71 13.959 2,000 16.545 0,031 15,63 

72 16.575 4,000 18.891 0,015 12,26 

73 7.345 4,000 9.645 0,015 23,85 

74 7.972 5,000 9.736 0,015 18,12 

75 7.874 3,000 9.419 0,015 16,40 

76 23.774 5,000 25.805 0,015 7,87 

77 32.450 5,000 33.843 0,015 4,12 

78 31.574 4,000 32.432 0,015 2,65 

79 24.191 4,000 26.024 0,031 7,04 

80 21.434 5,000 22.560 0,031 4,99 

81 21.033 3,000 22.130 0,015 4,96 

82 19.407 4,000 20.903 0,015 7,16 

83 18.571 4,000 19.925 0,015 6,80 

84 17.673 5,000 18.386 0,015 3,88 

85 20.675 4,000 21.526 0,031 3,95 

86 23.996 5,000 26.269 0,015 8,65 

87 18.892 5,000 21.077 0,015 10,37 

88 18.138 4,000 19.179 0,015 5,43 

89 17.025 3,000 118.793 0,015 85,67 

90 20.835 4,000 22.560 0,015 7,65 

91 18.049 4,000 20.200 0,015 10,65 

92 14.912 5,000 17.163 0,015 13,12 

93 16.367 5,000 18.367 0,015 10,89 

94 11.286 4,000 13.027 0,015 13,36 

95 13.989 4,000 15.440 0,015 9,40 

96 11.832 4,000 12.838 0,015 7,84 

97 17.277 3,000 18.778 0,015 7,99 

98 22.669 4,000 26.069 0,015 13,04 

99 13.740 3,000 115.318 0,031 88,09 

100 12.885 3,000 13.994 0,015 7,92 

101 29.384 3,000 30.021 0,031 2,12 

102 24.716 5,000 25.358 0,031 2,53 

103 28.295 4,000 28.826 0,015 1,84 

104 28.594 5,000 28.988 0,015 1,36 

105 21.524 5,000 22.161 0,015 2,87 

106 24.259 4,000 24.946 0,015 2,75 

107 18.114 4,000 19.008 0,031 4,70 

108 26.604 4,000 27.497 0,031 3,25 

109 29.050 3,000 29.486 0,015 1,48 

110 19.312 4,000 20.229 0,015 4,53 

111 19.603 4,000 20.606 0,015 4,87 

112 21.292 4,000 22.214 0,015 4,15 

113 25.006 5,000 26.330 0,015 5,03 

114 22.318 3,000 23.372 0,031 4,51 

115 20.472 4,000 21.834 0,031 6,24 

116 16.656 4,000 17.880 0,031 6,85 

117 21.944 4,000 23.921 0,015 8,26 

118 20.639 3,000 21.921 0,015 5,85 

119 27.295 5,000 28.969 0,015 5,78 

120 20.005 4,000 21.222 0,031 5,73 

121 19.029 3,000 20.882 0,031 8,87 

122 14.864 3,000 116.079 0,015 87,19 

123 21.302 4,000 22.864 0,015 6,83 

124 16.005 4,000 17.434 0,015 8,20 

125 21.452 3,000 23.166 0,015 7,40 

 



96 
 

APÊNDICE L – Resultados GRASP PR 30 X 4 
Instância GC Tempo [Seg] PR 30   Tempo [Seg] Gap % 

1 15.417 1,000 15.531 80,074 0,73 
2 7.433 2,000 7.456 86,829 0,31 

3 16.530 2,000 16.646 91,010 0,70 

4 16.053 1,000 16.089 77,844 0,22 

5 6.992 1,000 7.049 80,870 0,81 

6 9.059 1,000 9.212 76,096 1,66 

7 6.447 1,000 6.488 87,812 0,63 

8 6.773 2,000 6.855 82,305 1,20 

9 10.539 2,000 10.568 91,977 0,27 

10 9.324 1,000 9.390 90,136 0,70 

11 9.430 2,000 9.525 99,559 1,00 

12 6.694 2,000 6.841 98,404 2,15 

13 4.835 1,000 4.931 96,610 1,95 

14 8.968 2,000 8.984 90,604 0,18 

15 4.257 1,000 4.320 90,916 1,46 

16 2.107 1,000 2.163 70,980 2,59 

17 1.999 2,000 2.083 96,002 4,03 

18 2.109 1,000 2.119 82,914 0,47 

19 3.706 1,000 3.813 93,069 2,81 

20 1.875 1,000 1.903 72,181 1,47 

21 1.958 1,000 1.989 73,678 1,56 

22 2.310 2,000 2.388 81,354 3,27 

23 2.456 1,000 2.484 74,739 1,13 

24 1.372 1,000 1.397 80,620 1,79 

25 1.798 1,000 1.991 77,220 9,69 

26 6.326 2,000 6.341 86,486 0,24 

27 9.809 2,000 9.813 87,469 0,04 

28 16.150 1,000 16.207 88,592 0,35 

29 14.081 2,000 14.126 77,812 0,32 

30 12.761 2,000 12.764 84,084 0,02 

31 8.187 2,000 8.273 102,055 1,04 

32 8.684 2,000 8.820 80,230 1,54 

33 6.440 1,000 6.469 88,327 0,45 

34 4.939 1,000 4.961 71,448 0,44 

35 4.366 2,000 4.478 92,352 2,50 

36 6.741 2,000 6.833 81,822 1,35 

37 7.648 1,000 7.702 87,235 0,70 

38 2.309 1,000 2.388 89,824 3,31 

39 4.830 1,000 4.911 82,898 1,65 

40 5.007 1,000 5.044 77,469 0,73 

41 3.922 2,000 3.928 81,088 0,15 

42 2.672 2,000 2.727 79,029 2,02 

43 1.755 1,000 1.755 64,740 0,00 

44 1.449 2,000 1.459 59,077 0,69 

45 3.542 2,000 3.649 89,934 2,93 

46 2.037 1,000 2.044 73,710 0,34 

47 2.577 2,000 2.588 66,877 0,43 

48 1.602 1,000 1.628 84,052 1,60 

49 1.711 1,000 1.793 78,249 4,57 

50 2.219 1,000 2.248 65,457 1,29 

51 9.481 2,000 9.526 80,605 0,47 

52 15.342 1,000 15.439 87,235 0,63 

53 7.480 2,000 7.508 93,693 0,37 

54 11.144 2,000 11.202 84,442 0,52 

55 10.736 1,000 10.813 83,538 0,71 

56 7.115 1,000 7.149 100,058 0,48 

57 7.484 1,000 7.520 89,902 0,48 

58 5.353 2,000 5.360 90,994 0,13 

59 7.662 2,000 7.691 94,598 0,38 

60 8.908 1,000 8.970 99,606 0,69 

61 6.398 1,000 6.492 93,927 1,45 

62 4.820 1,000 4.993 83,928 3,46 

63 5.546 2,000 5.631 90,183 1,51 

64 5.634 1,000 5.851 95,160 3,71 

65 6.809 2,000 6.942 89,200 1,92 
 

 



97 
 

Continuação 
66 4.388 2,000 4.629 85,503 5,21 

67 3.618 1,000 3.705 102,507 2,35 

68 3.437 1,000 3.548 91,650 3,13 

69 4.024 1,000 4.213 75,051 4,49 

70 5.092 1,000 5.236 88,608 2,75 

71 3.032 2,000 3.143 92,866 3,53 

72 1.391 2,000 1.435 79,778 3,07 

73 3.016 1,000 3.180 82,867 5,16 

74 2.718 1,000 2.785 73,273 2,41 

75 2.888 1,000 2.902 71,791 0,48 

76 10.469 1,000 10.523 78,546 0,51 

77 8.745 2,000 8.810 73,616 0,74 

78 8.652 1,000 8.745 79,918 1,06 

79 9.831 2,000 9.968 82,430 1,37 

80 7.737 1,000 7.808 78,078 0,91 

81 7.408 1,000 7.503 87,921 1,27 

82 9.421 1,000 9.525 97,656 1,09 

83 10.549 2,000 10.625 82,867 0,72 

84 11.406 1,000 11.500 84,661 0,82 

85 8.122 1,000 8.186 95,082 0,78 

86 7.484 1,000 7.661 82,492 2,31 

87 6.185 1,000 6.293 92,102 1,72 

88 7.909 2,000 8.015 85,924 1,32 

89 10.978 1,000 11.171 86,798 1,73 

90 8.826 2,000 8.940 88,732 1,28 

91 8.260 1,000 8.397 72,274 1,63 

92 5.554 1,000 5.730 84,708 3,07 

93 6.461 1,000 6.602 88,842 2,14 

94 7.778 1,000 7.925 103,521 1,85 

95 7.850 1,000 7.961 88,296 1,39 

96 3.676 2,000 3.847 72,274 4,45 

97 4.906 1,000 5.043 75,207 2,72 

98 1.601 1,000 1.669 88,202 4,07 

99 5.282 1,000 5.372 70,980 1,68 

100 7.419 1,000 7.607 71,494 2,47 

101 17.076 2,000 17.186 81,697 0,64 

102 8.986 1,000 9.120 71,229 1,47 

103 8.737 1,000 8.801 86,921 0,73 

104 12.099 1,000 12.265 88,623 1,35 

105 9.911 1,000 10.053 79,232 1,41 

106 11.008 2,000 11.189 59,108 1,62 

107 13.667 2,000 13.823 87,172 1,13 

108 12.375 2,000 12.529 86,439 1,23 

109 14.597 1,000 14.754 83,319 1,06 

110 10.668 1,000 10.781 82,352 1,05 

111 11.353 1,000 11.447 83,054 0,82 

112 16.857 2,000 17.013 86,704 0,92 

113 14.871 1,000 14.950 86,611 0,53 

114 14.882 2,000 15.039 89,154 1,04 

115 17.117 1,000 17.245 95,082 0,74 

116 7.988 2,000 8.119 89,403 1,61 

117 6.272 1,000 6.363 90,604 1,43 

118 11.147 2,000 11.251 86,018 0,92 

119 9.748 2,000 9.832 87,950 0,85 

120 8.002 1,000 8.117 77,033 1,42 

121 9.620 1,000 9.767 96,393 1,51 

122 16.018 2,000 16.148 104,166 0,81 

123 8.466 1,000 8.620 83,460 1,79 

124 9.410 2,000 9.492 97,000 0,86 

125 15.361 1,000 15.540 96,751 1,15 



98 
 

APÊNDICE M – Resultados GRASP PR 40 X 5 
Instância GC Tempo [Seg] PR 40   Tempo [Seg] Gap % 

1 16.268 2,000 16.358 223,995 0,55 
2 12.354 3,000 12.461 205,319 0,86 

3 14.262 3,000 14.398 227,231 0,94 

4 18.806 2,000 18.924 245,045 0,62 

5 16.559 3,000 16.677 201,224 0,71 

6 11.196 2,000 11.291 199,196 0,84 

7 15.934 2,000 16.148 194,220 1,33 

8 15.577 2,000 15.738 230,381 1,02 

9 12.100 3,000 12.150 224,453 0,41 

10 10.656 2,000 10.709 220,007 0,49 

11 7.910 2,000 8.062 236,699 1,89 

12 5.238 2,000 5.344 206,731 1,98 

13 6.130 4,000 6.304 206,918 2,76 

14 10.998 3,000 11.167 236,215 1,51 

15 6.830 2,000 7.000 194,017 2,43 

16 2.257 3,000 2.274 175,328 0,75 

17 2.074 2,000 2.121 198,479 2,22 

18 2.698 2,000 2.869 219,570 5,96 

19 3.300 2,000 3.356 219,383 1,67 

20 2.395 2,000 2.453 192,363 2,36 

21 2.291 2,000 2.324 236,012 1,42 

22 891 3,000 918 205,623 2,94 

23 2.175 2,000 2.226 171,413 2,29 

24 2.079 2,000 2.175 204,001 4,41 

25 789 2,000 840 210,397 6,07 

26 13.673 2,000 13.673 245,794 0,00 

27 11.241 3,000 11.246 226,871 0,04 

28 9.602 2,000 9.643 254,436 0,43 

29 12.161 3,000 12.228 214,250 0,55 

30 13.194 3,000 13.229 203,892 0,26 

31 13.273 2,000 13.387 213,751 0,85 

32 5.918 1,000 5.994 207,246 1,27 

33 9.530 3,000 9.616 221,879 0,89 

34 10.353 3,000 10.431 218,057 0,75 

35 12.314 2,000 12.456 217,105 1,14 

36 6.470 2,000 6.504 220,709 0,52 

37 4.759 3,000 4.778 233,142 0,40 

38 5.565 2,000 5.604 229,648 0,70 

39 4.538 2,000 4.573 229,258 0,77 

40 6.867 2,000 6.958 208,899 1,31 

41 3.111 1,000 3.187 204,859 2,38 

42 3.012 1,000 3.016 200,694 0,13 

43 3.370 2,000 3.466 218,400 2,77 

44 3.829 3,000 3.999 198,501 4,25 

45 7.552 3,000 7.660 194,469 1,41 

46 1.035 3,000 1.046 185,281 1,05 

47 1.350 2,000 1.426 190,023 5,33 

48 1.703 2,000 1.727 194,906 1,39 

49 3.614 2,000 3.651 187,247 1,01 

50 2.169 2,000 2.349 203,377 7,66 

51 17.568 2,000 17.620 209,180 0,30 

52 16.600 3,000 16.683 187,481 0,50 

53 14.099 2,000 14.162 209,165 0,44 

54 16.217 4,000 16.277 204,734 0,37 

55 21.364 2,000 21.364 222,752 0,00 

56 8.516 2,000 8.571 195,733 0,64 

57 8.735 3,000 8.840 204,656 1,19 

58 10.568 3,000 10.651 214,079 0,78 

59 13.446 2,000 13.592 173,503 1,07 

60 15.392 4,000 15.441 204,329 0,32 

61 6.801 3,000 6.999 212,019 2,83 

62 11.354 3,000 11.437 219,117 0,73 

63 5.282 2,000 5.420 207,527 2,55 

64 6.746 2,000 6.887 216,013 2,05 

65 7.881 2,000 7.891 214,547 0,13 
 

 



99 
 

Continuação 
66 5.043 3,000 5.201 207,121 3,04 

67 8.324 3,000 8.612 179,696 3,34 

68 4.918 2,000 5.112 234,203 3,79 

69 4.314 2,000 4.341 184,766 0,62 

70 8.994 3,000 9.135 230,896 1,54 

71 4.768 3,000 4.886 218,696 2,42 

72 2.412 2,000 2.483 196,373 2,86 

73 3.328 4,000 3.401 202,269 2,15 

74 5.220 3,000 5.369 224,999 2,78 

75 5.939 2,000 6.154 237,884 3,49 

76 16.710 3,000 16.812 222,315 0,61 

77 17.545 2,000 17.660 225,763 0,65 

78 20.522 4,000 20.590 253,625 0,33 

79 16.139 2,000 16.332 229,460 1,18 

80 13.118 3,000 13.205 241,082 0,66 

81 10.847 3,000 11.028 243,797 1,64 

82 11.506 3,000 11.640 203,049 1,15 

83 12.304 3,000 12.438 223,376 1,08 

84 11.744 2,000 11.873 186,061 1,09 

85 10.649 2,000 10.821 200,475 1,59 

86 9.919 2,000 10.028 199,633 1,09 

87 11.926 3,000 12.091 200,631 1,36 

88 9.962 2,000 10.128 184,298 1,64 

89 10.901 4,000 11.062 222,237 1,46 

90 9.623 2,000 9.854 203,736 2,34 

91 13.182 2,000 13.359 212,737 1,32 

92 9.152 3,000 9.351 230,116 2,13 

93 7.381 2,000 7.395 215,186 0,19 

94 6.712 2,000 6.832 218,649 1,76 

95 6.392 3,000 6.523 199,961 2,01 

96 5.114 2,000 5.337 199,586 4,18 

97 4.379 2,000 4.584 194,984 4,47 

98 5.725 3,000 5.855 212,597 2,22 

99 8.494 3,000 8.761 224,827 3,05 

100 10.313 2,000 10.501 207,714 1,79 

101 13.236 3,000 13.407 203,720 1,28 

102 10.728 2,000 10.913 185,952 1,70 

103 18.927 2,000 19.121 204,719 1,01 

104 15.636 2,000 15.779 168,230 0,91 

105 17.608 2,000 17.757 190,023 0,84 

106 28.965 2,000 29.193 201,536 0,78 

107 24.379 3,000 24.622 205,483 0,99 

108 16.233 3,000 16.326 185,109 0,57 

109 16.520 4,000 16.703 204,953 1,10 

110 13.275 2,000 13.446 195,437 1,27 

111 13.592 2,000 13.756 223,907 1,19 

112 15.088 2,000 15.251 205,467 1,07 

113 18.774 3,000 18.955 236,402 0,95 

114 12.237 2,000 12.372 192,207 1,09 

115 21.701 2,000 21.900 232,892 0,91 

116 10.947 3,000 11.085 214,859 1,24 

117 14.926 2,000 15.014 212,706 0,59 

118 10.941 3,000 11.125 209,867 1,65 

119 15.538 5,000 15.678 211,271 0,89 

120 9.776 3,000 9.921 209,352 1,46 

121 9.086 2,000 9.215 251,082 1,40 

122 10.350 3,000 10.624 213,767 2,58 

123 15.316 3,000 15.485 224,952 1,09 

124 12.080 2,000 12.309 225,701 1,86 

125 14.363 3,000 14.533 222,737 1,17 

 



100 
 

APÊNDICE N – Resultados GRASP PR 50 x 6 
Instância GC Tempo [Seg] PR 50   Tempo [Seg] Gap % 

1 23.300 5,000 23.458 445,327 0,67 
2 27.230 4,000 27.401 398,721 0,62 

3 20.964 5,000 21.071 472,446 0,51 

4 19.685 6,000 19.858 478,374 0,87 

5 18.169 5,000 18.172 429,515 0,02 

6 17.818 4,000 17.881 477,626 0,35 

7 16.788 7,000 16.807 495,098 0,11 

8 15.875 4,000 16.062 458,375 1,16 

9 11.768 4,000 11.946 464,428 1,49 

10 12.633 4,000 12.753 469,358 0,94 

11 15.054 3,000 15.190 409,734 0,90 

12 13.361 3,000 13.466 488,982 0,78 

13 10.604 3,000 10.733 368,425 1,20 

14 13.885 4,000 14.032 481,292 1,05 

15 12.450 4,000 12.603 429,889 1,21 

16 8.732 3,000 8.867 470,216 1,52 

17 12.989 4,000 13.184 458,968 1,48 

18 7.817 3,000 7.993 500,074 2,20 

19 5.246 3,000 5.335 470,512 1,67 

20 11.428 4,000 11.618 499,029 1,64 

21 4.304 3,000 4.501 405,694 4,38 

22 3.328 3,000 3.490 419,609 4,64 

23 4.485 3,000 4.626 423,915 3,05 

24 2.498 3,000 2.664 411,949 6,23 

25 6.081 2,000 6.304 467,111 3,54 

26 18.528 2,000 18.607 440,575 0,42 

27 22.599 5,000 22.765 469,857 0,73 

28 21.794 4,000 21.917 465,738 0,56 

29 18.824 4,000 18.888 454,116 0,34 

30 18.964 4,000 19.024 439,655 0,32 

31 16.037 3,000 16.152 396,490 0,71 

32 9.205 3,000 9.249 385,585 0,48 

33 15.720 6,000 15.809 505,924 0,56 

34 12.796 4,000 12.887 517,265 0,71 

35 14.131 5,000 14.145 431,559 0,10 

36 11.894 4,000 12.070 453,492 1,46 

37 10.907 3,000 10.935 470,730 0,26 

38 12.976 3,000 13.089 397,379 0,86 

39 11.165 3,000 11.317 410,140 1,34 

40 9.345 3,000 9.477 422,199 1,39 

41 12.929 3,000 13.091 450,793 1,24 

42 8.023 4,000 8.086 444,257 0,78 

43 5.928 3,000 6.017 466,815 1,48 

44 8.743 3,000 8.974 352,451 2,57 

45 9.334 4,000 9.621 472,712 2,98 

46 5.634 3,000 5.812 482,930 3,06 

47 2.802 4,000 2.927 457,954 4,27 

48 4.126 2,000 4.222 509,122 2,27 

49 5.948 3,000 6.055 396,053 1,77 

50 6.728 3,000 6.937 467,595 3,01 

51 16.507 3,000 16.558 455,926 0,31 

52 20.136 4,000 20.190 473,960 0,27 

53 18.094 4,000 18.153 453,773 0,33 

54 20.168 3,000 20.212 401,217 0,22 

55 23.157 4,000 23.226 429,936 0,30 

56 14.703 4,000 14.742 457,486 0,26 

57 15.734 4,000 15.838 457,221 0,66 

58 16.464 4,000 16.490 505,628 0,16 

59 15.565 3,000 15.636 390,125 0,45 

60 14.488 6,000 14.557 476,939 0,47 

61 11.345 3,000 11.498 447,081 1,33 

62 13.058 4,000 13.249 411,871 1,44 

63 11.511 4,000 11.661 505,784 1,29 

64 8.976 4,000 9.125 443,929 1,63 

65 9.318 4,000 9.515 497,188 2,07 
 
 
 



101 
 

Continuação 
66 14.299 3,000 14.649 519,387 2,39 

67 8.108 3,000 8.335 379,065 2,72 

68 13.424 3,000 13.743 493,756 2,32 

69 9.777 5,000 10.010 442,026 2,33 

70 11.600 3,000 11.869 439,561 2,27 

71 13.959 2,000 14.282 443,976 2,26 

72 16.575 4,000 16.859 479,638 1,68 

73 7.345 4,000 7.555 400,593 2,78 

74 7.972 5,000 8.154 445,521 2,23 

75 7.874 3,000 8.105 408,985 2,85 

76 23.774 5,000 23.926 454,147 0,64 

77 32.450 5,000 32.612 548,528 0,50 

78 31.574 4,000 31.748 432,885 0,55 

79 24.191 4,000 24.393 428,251 0,83 

80 21.434 5,000 21.554 400,998 0,56 

81 21.033 3,000 21.265 410,374 1,09 

82 19.407 4,000 19.643 507,110 1,20 

83 18.571 4,000 18.847 447,424 1,46 

84 17.673 5,000 17.879 452,541 1,15 

85 20.675 4,000 20.875 470,996 0,96 

86 23.996 5,000 24.232 496,907 0,97 

87 18.892 5,000 19.120 521,852 1,19 

88 18.138 4,000 18.317 455,957 0,98 

89 17.025 3,000 17.258 470,060 1,35 

90 20.835 4,000 21.082 482,633 1,17 

91 18.049 4,000 18.280 438,766 1,26 

92 14.912 5,000 15.054 442,338 0,94 

93 16.367 5,000 16.693 441,090 1,95 

94 11.286 4,000 11.577 372,216 2,51 

95 13.989 4,000 14.265 462,930 1,93 

96 11.832 4,000 12.085 464,334 2,09 

97 17.277 3,000 17.588 448,672 1,77 

98 22.669 4,000 23.014 486,003 1,50 

99 13.740 3,000 13.929 408,627 1,36 

100 12.885 3,000 13.093 495,534 1,59 

101 29.384 3,000 29.655 389,891 0,91 

102 24.716 5,000 24.975 399,813 1,04 

103 28.295 4,000 28.537 410,639 0,85 

104 28.594 5,000 28.791 418,002 0,68 

105 21.524 5,000 21.770 392,652 1,13 

106 24.259 4,000 24.515 449,249 1,04 

107 18.114 4,000 18.362 447,829 1,35 

108 26.604 4,000 26.878 414,149 1,02 

109 29.050 3,000 29.292 377,785 0,83 

110 19.312 4,000 19.527 414,029 1,10 

111 19.603 4,000 19.773 436,833 0,86 

112 21.292 4,000 21.462 454,162 0,79 

113 25.006 5,000 25.198 444,865 0,76 

114 22.318 3,000 22.516 442,929 0,88 

115 20.472 4,000 20.774 425,178 1,45 

116 16.656 4,000 16.910 452,587 1,50 

117 21.944 4,000 22.164 497,250 0,99 

118 20.639 3,000 20.876 457,517 1,14 

119 27.295 5,000 27.520 428,086 0,82 

120 20.005 4,000 20.180 426,216 0,87 

121 19.029 3,000 19.257 421,378 1,18 

122 14.864 3,000 15.041 424,944 1,18 

123 21.302 4,000 21.478 485,839 0,82 

124 16.005 4,000 16.222 443,111 1,34 

125 21.452 3,000 21.713 464,147 1,20 

 


</field>
	</doc>
</add>