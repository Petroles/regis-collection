<?xml version="1.0" encoding="utf-8"?>
<add>
	<doc>
		<field name="docid">BR-TU.09048</field>
		<field name="filename">13994_Andr%c3%a9%20Luis%20Reys%20de%20Mattos.pdf</field>
		<field name="filetype">PDF</field>
		<field name="text">UNIVERSIDADE FEDERAL FLUMINENSE CENTRO TÉCNOLÓGICO
ESCOLA DE ENGENHARIA DEPARTAMENTO DE ENGENHARIA QUIMICA E DE PETROLEO
André Luis Reys de Mattos
Aplicação de programação matemática na estruturação e construção de simulador de reservatórios.
André Luis Reys de Mattos
Aplicação de programação matemática na estruturação e construção de simulador de reservatórios.
Trabalho de Conclusão de Curso apresentado ao Curso de Graduação em Engenharia de Petróleo da Escola de Engenharia da Universidade Federal Fluminense, como requisito parcial para obtenção do Grau de Bacharel em Engenharia de Petróleo.
Orientadores:	Arturo Rodrigo Ferreira Pardo João Felipe Mitre de Araujo
M444 Mattos, André Luis Reys de
Aplicação de programação matemática na estruturação e construção de simulador de reservatórios / André Luis Reys de Mattos. - Niterói, RJ : [s.n.], 2017.
70 f.
Projeto Final (Bacharelado em Engenharia de Petróleo) -Universidade Federal Fluminense, 2017.
Orientadores: Arturo Rodrigo Ferreira Pardo, João Felipe Mitre de Araujo.
1. Engenharia de reservatório. 2. Fortran (Linguagem de programação). 3. Programação matemática. I. Título.
CDD 622.3382
André Luis Reys de Mattos
Aplicação de programação matemática na estruturação e construção de simulador de reservatórios.
Trabalho de Conclusão de Curso apresentado ao Curso de Graduação em Engenharia de Petróleo da Escola de Engenharia da Universidade Federal Fluminense, como requisito parcial para obtenção do Grau de Bacharel em Engenharia de Petróleo
Aprovado em Niterói - RJ, Brasil, 13 de julho de 2017:
Arturo Rodrigo Ferreira Pardo, D. SC.
Orientador
João Felipe Mitre de Araujo, D. SC.
Orientador
Elson Antonio do Nascimento, D. SC.
João Crisósthomo de Queiroz Neto, D. SC.
Niterói - RJ, Brasil
2017
A João Pedro, Cláudia e Sérgio Mattos, a melhor família que qualquer filho poderia desejar
Agradecimentos
Os agradecimentos principais são direcionados a minha família, que sempre esteve ao meu lado nos momentos mais difíceis, me encorajando e não me deixando ser levado por pensamentos ruins, a Julia Rocha, por todos os momentos de desespero nos quais me acolheu e me trouxe uma luz e a todos os meus amigos companheiros de jornada, dentre os quais se destacam Melissa, Mayara, Allicia, Pedro e Arnaldo.
Agradecimentos especiais são direcionados a todo o Departamento de Engenharia de Petróleo da Universidade Federal Fluminense, assim como o Petroleum Engineering Department da Montana Tech of The University of Montana, cuja maior contribuição foi o conhecimento e inspiração necessários para a realização deste.
Agradeço ainda a meus orientadores, Dr. Arturo Rodrigo Ferreira Pardo e Dr., por todo o suporte e orientação sem os quais o presente trabalho não passariam de notas perdidas em um caderno.
"Trabalhe até que não precise mais se apresentar." Autor Desconhecido
Resumo
Este trabalho visa o desenvolvimento e construção de um simulador de reservatórios Black-Oil, totalmente a partir de códigos abertos ao público e de livre utilização. Primeiro faz-se um breve resumo de Engenharia de Reservatórios, passando pelos tópicos mais relevantes. Uma vez concluído, segue para desenvolvimento da equação da continuidade, adaptando-a a meios porosos e discretizando-a entre coordenadas espaciais e temporais. Ao final, é realizada a construção de uma subrotina em FORTRAN, capaz de executar estes cálculos em repetição e chegar a um resultado efetivo.
Palavras-chaves: Simulação de Reservatórios. FORTRAN. Continuidade. Engenharia de Reservatórios.
Abstract
This study aims to deduce and develop a Black Oil Reservoir Simulator, directly from opensource codes. It begins with a short recapitulation of Reservoir Engineering, from the main definitions to the most relevant topics. Once concluded, the next step is the development of the continuity equation, discretizing it between spacial end time coordinates. Finnaly, a FORTRAN subroutine capable of apply the model in loops and achieve an effective result is written .
Key-words: Reservoir Simulation. FORTRAN. Continuity Equation. Reservoir Engineering.
Lista de ilustrações
Figura 2.6 - Fluxo mássico entre um bloco e seu entorno......................... 26
Figura 3.7 - Organização dos blocos no modelo estudado.......................... 31
Figura 4.8 - Modelo de output contendo informações de cada bloco	do reservatório	...	39
Figura 4.9 - Modelo de output contendo informações do reservatório	como um todo	...	39
Figura 4.10-Interpretação das informações extraídas do programa. Pressão de óleo. ...	40
Figura 4.11-Interpretação das informações extraídas do programa. Saturação de óleo. . .	41
Figura 4.12-Interpretação das informações extraídas do programa. Pressão de óleo. Reservatório convencional................................................................. 42
Figura 4.13-Interpretação das informações extraídas do programa. Saturação de óleo. Reservatório convencional............................................................ 43
Figura 4.14-Interpretação das informações extraídas do programa. Pressão de óleo. Reservatório com ausência de capa de gás.................................................. 44
Figura 4.15-Interpretação das informações extraídas do programa. Saturação de óleo. Reservatório com ausência de capa de gás............................................. 45
Figura 4.16-Interpretação das informações extraídas do programa. Pressão de óleo. Reservatório com quantidade reduzida de água de formação.................................. 46
Figura 4.17-Interpretação das informações extraídas do programa. Saturação de óleo.
Reservatório com quantidade reduzida de água de formação. ............... 47
Sumário
1	INTRODUÇÃO ........................................... 11
Introdução..................................................... 11
1.1	Objetivo.............................................. 11
2	CONCEITOS BÁSICOS DE ENGENHARIA DE RESERVATÓRIOS .	12
2.1	Propriedades da Rocha Reservatório ................... 12
2.2	Propriedades dos Fluidos de Reservatório.............. 13
2.3	Interações Fluido-Rocha e Fluido-Fluido .............. 20
2.4	Comportamento dos Fluidos no Reservatório............. 23
3	DESENVOLVIMENTO TEÓRICO............................... 28
3.1	Equações de Fluxo..................................... 28
3.2	Influência da Pressão Capilar......................... 29
3.3	Discretizando as Equações............................. 31
3.4	Representação dos Poços............................... 34
4	FUNCIONAMENTO DO SIMULADOR............................ 36
4.1	A Linguagem FORTRAN................................... 36
4.2	Mecanismo de Resolução................................ 37
4.3	Funcionamento Básico do Programa...................... 37
4.4	Estudos de Caso....................................... 42
4.4.1	Caso 1 - Reservatório convencional.................... 42
4.4.2	Caso 2 - Reservatório com ausência de capa de gás..... 44
4.4.3	Caso 3 - Reservatório com quantidade reduzida de água de formação 44
5	CONCLUSÃO E SUGESTÕES PARA TRABALHOS FUTUROS ...	48
REFERÊNCIAS........................................... 49
APÊNDICES	50
APÊNDICE A - CÓDIGO DESENVOLVIDO...................... 51
APÊNDICE B - INPUT UTILIZADO	NOS ESTUDOS DE CASO . .	69
1	Introdução
Com o advento da revolução digital, a simulação de reservatório vem continuamente ganhando espaço no mercado de óleo e gás. Simular não é mais uma questão de previsão, mas cada vez mais uma questão de estratégia. Novas descobertas de reservatórios podem envolver condições cada vez pior de escoabilidade, com permeabilidades baixas, grandes falhamentos, produções exageradas de água, entre outros. Um método de simulação corretamente efetuado pode (e geralmente consegue) propiciar estratégias de desenvolvimento respeitando cada vez mais limites econômicos e ambientais.
Graças a essa importância, empresas vêm desenvolvendo dia a dia softwares cada vez mais potentes e eficientes, chegando em questão de minutos a resultados que, sem o uso da tecnologia, nunca seriam alcançados. Por questões comerciais, entretanto, esses softwares são invioláveis, atuando como caixas obscuras de processamento, onde entram os dados, saem os resultados.
1.1	Objetivo
Este estudo tem o intuito de retornar às origens e deduzir, a partir das definições mais básicas, equações funcionais para o desenho de um simulador de reservatórios eficiente e de código aberto. O programa desenvolvido terá uma estrutura modular, permitindo sua fácil adaptação às mais diversas situações e assim criando um ambiente um pouco mais amigável para aqueles que queiram entender o funcionamento de suas versões comerciais.
Antes do desenvolvimento, entretanto, é necessário uma breve revisão de conceitos básicos da engenharia de reservatórios, como propriedades das rochas, propriedades dos fluidos, interações entre o fluido e a rocha e seu comportamento em um reservatório. Após, será realizado um desenvolvimento intensivo de equações de fluxo, levando em conta aspectos como posicionamento espacial e temporal, condições de contorno e assunções.
2	Conceitos Básicos de Engenharia de Reservatórios
Como o próprio nome propõe, a Simulação de Reservatórios é um estudo da como se comporta um reservatório sujeito às varias alterações que podem ser feitas pelo homem ou pela natureza ao longo de sua vida. Uma vez que este trabalho se dedica principalmente a simulações onde não há reação química, não há troca de energia entre as diferentes fases e todas as propriedades são contínuas e descritíveis, o estudo se restringirá apenas aos conceitos essenciais para o desenvolvimento de uma solução.
2.1	Propriedades da Rocha Reservatório
Porosidade
Principalmente utilizada na medição do volume de fluido no reservatório, a porosidade é uma das mais importantes propriedades a serem estudadas. Segundo Rosa (2006), a porosidade é definida como sendo a relação entre o volume de vazios de uma rocha e o volume total da mesma, ou seja:
(2.1)
Onde:
representa a porosidade
Vv representa o volume de vazios
V representa o volume total
Permeabilidade
Enquanto a porosidade mede a capacidade de armazenamento da rocha, outra informação de vital importância é a Permeabilidade. Análoga ao inverso da resistência de um circuito elétrico, Rosa (2006) define permeabilidade como uma medida da capacidade de um meio poroso de se deixar atravessar por fluidos. Os estudos mais conclusivos sobre permeabilidade foram feitos por Henry Darcy em 1856 e serão abordados na seção 2.4.
2.2	Propriedades dos Fluidos de Reservatório
Tipos de fluidos
Fluidos em geral podem ser considerados como incompressíveis, compressíveis e levemente compressíveis, a depender em como se comportam com o variar da pressão. Um fluido incompressível, como sugerido pelo nome, não sofre alterações com o variar da pressão, mantendo sempre o mesmo volume. Fluidos compressíveis, por sua vez, sofrem altas variações de volume, como demonstrado na Figura (2.1) (ERTEKIN, 2001).
Geralmente, a água é considerada como incompressível, o gás como compressível e o óleo negro1 como levemente compressível. Existe ainda o óleo com gás em solução (óleo cru ou óleo vivo), cujo comportamento é distinto devido a solubilização do gás com o aumentar da pressão.
Pressão de bolha
Segundo Ahmed (2010), a pressão de bolha de um sistema de hidrocarbonetos é definida como a mais alta pressão na qual uma bolha de gás é liberada do óleo. Essa importante propriedade pode ser medida experimentalmente através de um teste PVT flash ou estimada com o uso de correlações. Neste trabalho será considerada como um valor conhecido do sistema.
Compressibilidade isotérmica
De acordo com Ertekin (2001), a compressibilidade isotérmica de um fluido é definida como a mudança volumétrica relativa de uma determinada massa sujeita a uma alteração de pressão em condições de temperatura constante. A compressibilidade pode, matematicamente, ser definida como:
Ci =
1 dVi V dp
(2.2)
Em termos de massa específica, sabendo que p = m, a expressão resultante então é:
Ci =
1 dp pdp T
(2.3)
Fator z de compressibilidade do gás
Gás ideal
Segundo Rosa (2006), um gás ideal é um fluido hipotético que obedece a 3 condições específicas:
-	O volume ocupado pelas moléculas é insignificante se comparado ao volume total do fluido.
-	Não existem quaisquer forças intermoleculares atrativas ou repulsivas, seja com o próprio fluido, seja com as paredes do recipiente.
-	As colisões entre as moléculas são perfeitamente elásticas.
Uma vez seguidas essas condições, o gás pode ser considerado ideal e seu comportamento pode ser previsto, em unidades absolutas, pela Equação (2.4), também conhecida como Equação de Estado ou Lei dos Gases Ideais.
Gás real
Ainda que a grande maioria dos gases não siga as condições específicas dos gases ideais, quando em baixa temperatura e baixa pressão são fiéis a essa relação. Para os que não seguem esse modelo, existe um fator de correção chamado fator z de compressibilidade do gás ou, em inglês, z-factor. A equação (2.5) mostra a inserção deste fator.
PV = znRT
(2.5)
Dependente de variáveis como temperatura e pressão, associadas a propriedades da substância, como temperatura e pressão críticas, esse fator tem comportamento anômalo. Apesar da existência de correlações bem precisas, como Peng-Robinson, até hoje, o método do Gráfico de Standing-Katz (Figura 2.2) é ainda muito utilizado.
Razão gás-óleo
Também conhecida como Razão de Solubilidade do Gás, a Razão gás-óleo (Rs) ou Gas-Oil Ratio (GOR) representa a quantidade de gás que se desprende do óleo no caminho do mesmo entre o reservatório e a superfície (MCCAIN, 1990). Essa razão então é definida em termos das quantidades de gás e óleo que surgem durante a produção.
Rs
volume de gás produzido sob condições padrão volume de óleo produzido sob condições padrão
(2.6)
Na ausência de dados de laboratório, Terry e Rogers (2014) sugerem a utilização de correlações. Standing, em seus estudos, concluiu que poderia estimar a Razão gás-óleo a partir da temperatura e da pressão do reservatório, juntamente a gravidade específica do gás e da graduação API do óleo. Beggs apresenta a correlação de Standing em formato de equação e válida para pressões abaixo da pressão de bolha como (BRADLEY, 1987):
p	1.204
s 18 * 10 )
(2.7)
Onde:
ya = 0.00091T - 0.125pAPi
Fator volume-formação
Compressibility factor
Compressibility foctor
Figura 2.2 - Gráfico de Standing-Katz
Fonte: Katz (1959)
ocupa em condições padrão. Portanto, para uma fase genérica n pode-se escrever a equação (2.8)
Bn
Vn
V0.n
(2.8)
Fator volume-formação de gás
Substituindo a equação (2.5) na equação (2.8) e assumindo que, para condições padrão, z = 1 pode-se então escrever a equação (2.9).
Bg
PoZT
T0P
(2.9)
Fator volume-formação de óleo
Como visto na seção Razão gás-óleo, até atingir o ponto de bolha, o gás se dissolve no óleo. Essa dissolução faz com que o óleo, entre a pressão padrão e o ponto de bolha, aumente de volume com o aumentar da pressão. Acima da pressão de bolha, o aumento da pressão faz com que o óleo e o gás nele dissolvido se comprimam, uma vez que não há mais dissolução. Como podemos notar na figura (2.3), entre a pressão de bolha e a pressão inicial, o Bo possui comportamento linear.
Figura 2.3 - Fator Volume-Formação vs Pressão
Fonte: Rosa (2006)
Viscosidade
Segundo Ertekin (2001), viscosidade de um fluido é a medida da facilidade de um fluido de escoar como resultado de um gradiente de pressão aplicado. Para fluidos com gás diluído, as moléculas se encontram afastadas e não oferecem muita resistência. Em contraste, um fluido mais denso oferece uma alta resistência ao escoamento. A viscosidade é geralmente estimada em função de temperatura e pressão. Neste estudo porém, serão desconsideradas quaisquer influências de variação de temperatura, visto que o modelo utilizado somente é válido para processos isotérmicos.
Viscosidade de um óleo
Em casos onde não é possível a análise laboratorial, existem inúmeras maneiras para estimar a viscosidade de um óleo. Um dos métodos mais utilizados é :
Passo 1 - Estimar a viscosidade do óleo morto através da correlação de Beggs-Robinson.
^od = I0A /	|6°'	- 1.0	(2.10)
Onde:
A = 103.0324-0.202023API
Passo 2 - Estimar a viscosidade para pressões menores que a pressão de bolha através da correlação de Beggs-Robinson.
^ob	a(^od)	(2.11)
Onde:
a = 10.715(Rs + 100)-0.515
b = 5.44(Rs + 150)-0.338
Passo 3 - Corrigir a viscosidade do óleo para pressões maiores que a pressão de bolha através da correlação de Khan.
^o = ^ob exp [9.6 x 10-6(P - Pb)]	(2.12)
Temos então, para o óleo, comportamento análogo ao representado na Figura 2.4
Figura 2.4 - Viscosidade e Razão Gás-óleo vs Pressão
Fonte: Rosa (2006)
Viscosidade de um gás
Assim como para estimar a viscosidade do óleo, existem inúmeras maneiras de se estimar a viscosidade de um gás. Um dos métodos mais utilizados, graças a sua simplicidade, é o método de Lee-Gonzales-Eakin.
Em seus estudos, Lee et al. apresentou uma relação semi-empírica para a viscosidade de gases naturais, propondo a seguinte equação (AHMED, 2016):
= 10 4K exp
X
(2.13)
Onde:
(9.4+0.02Ma)T 1-B
209+19Ma+T
X = 3.5 +	+ 0.01M
Y = 2A- X
2.3	Interações Fluido-Rocha e Fluido-Fluido
Além dos fenômenos comportamentais intrínsecos dos fluidos e das rochas, devemos também estudar como estes se relacionam entre si. Fatores como saturação, pressão capilar, permeabilidade relativa entre outros, podem não aparentar, mas possuem um papel decisivo na precisão de uma simulação.
Saturação
Um dos fatores determinantes do comportamento de um certo fluido na presença de outras fazes é a saturação. De acordo com Ertekin (2001), saturação de um determinado fluido representa a fração do poro ocupada pelo mesmo. Por representar uma fração do fluido, geralmente a saturação é representada como um valor entre 0 e 1, onde 0 representa a ausência do fluido em questão e 1 a total ocupação do poro pelo mesmo. Também pode se considerar que em um sistema, a soma da saturação de todas as fases se igualará a 1. Tem-se então, para n fases:
n
Si = 1	(2.14)
i=1
Conclui-se então que, para um sistema gás-óleo:
Sg + So =1	(2.15)
Para um sistema água óleo:
So + Sw = 1	(2.16)
Finalmente, para um sistema trifásico:
So + Sg + Sw = 1	(2.17)
Pressão Capilar
Quando duas ou mais fases imiscíveis são colocadas em um recipiente, em estado estático, as fases mais pesadas tendem a se concentrar no fundo da mistura, assim como as mais leves no topo, se formando assim uma superfície de separação entre as fases. Segundo Rosa (2006), em meios porosos, porém, não ocorre a formação desta superfície, mas sim de uma zona de transição devido aos fenômenos capilares.
dos fenômenos capilares ou, principalmente, a tensão superficial, gerando um diferencial de pressão entre fases submetidas às mesmas condições externas. Numericamente pode ser definida como a diferença de pressão entre a fase não-molhante e a fase molhante, como demonstrado nas equações 2.18 e 2.19. A figura 2.5 exemplifica o comportamento da pressão capilar com o variar das saturações de óleo e água.
P
cow
(2.18)
Para rocha preferencialmente molhável pela água, e
cgo
(2.19)
Para sistema óleo-gás.
Figura 2.5 - Pressão Capilar vs Saturação
Fonte: Ertekin (2001)
Permeabilidade Relativa
Originalmente a lei de Darcy foi derivada para fluxo monofásico, onde a permeabilidade do meio poroso representa a permeabilidade absoluta do meio. Quando dois ou mais fluidos fluem simultaneamente, a lei de Darcy pode ser modificada através da inserção do termo de permeabilidade relativa. Definido como a razão entre permeabilidade do sistema a um determinado fluido pela permeabilidade absoluta do meio, a permeabilidade relativa possui dimensão nula e é função do meio e dos fluidos envolvidos e suas respectivas saturações (ERTEKIN, 2001).
k
rx
kx ~k
(2.20)
Modelo de Corey
O modelo bifásico de Corey é um modelo válido principalmente para o processo de drenagem em rochas consolidadas. O modelo baseia-se principalmente numa normalização da saturação da fase molhante.
S
wn
Sw — Siw
1 — Sw
(2.21)
A permeabilidade relativa da fase molhante é, então:
k
rw
S4
Swn
(2.22)
E, para a fase não-molhante:
k —
rnw
(1 — Swn)2(1 — Swn)
(2.23)
Modelo trifásico de Naar, Henderson e Wygal
Já no modelo trifásico de Naar, Henderson e Wygal, as permeabilidades relativas de cada fase individual do reservatório são expressas por:
k
rw
Sw — Siw
1 — Siw
(2.24)
k
ro
So3(1 — Sg + 2Sw — 3Siw) (1 — Siw)4
(2.25)
k
rg
Sg3(2 — Sg — 2Siw) (1 — Siw)4
(1 — Siw)4
(2.26)
Este modelo, porém, não incorpora Sor e Sgc e, para que o modelo funcione adequadamente, devem ser impostas duas condições para as previsões do modelo:
kro = 0	(2.27)
Para So	Sor, e
krg = 0	(2.28)
Para Sg	Sgc.
2.4	Comportamento dos Fluidos no Reservatório
Potencial de fluido
Uma informação frequentemente obtida em estudos de mecânica dos fluidos é a carga. Quando em unidades usuais de engenharia, essa carga frequentemente se apresenta em m.c.a (metros de coluna de água), podendo ser interpretada como a coluna de água necessária para atingir o mesmo nível de potencial de um certo ponto em estudo. Para fluidos incompressíveis, pode ser matematicamente representada por:
hf = - + z	(2.29)
f Y
Onde:
-	z representa a altura em relação a uma origem determinada arbitrariamente.
-	p representa a pressão no ponto em estudo
-	Y = Ycpg sendo yc um fator de conversão de gravidade, p a massa específica do fluido
em estudo e g a constante de gravidade local.
Multiplicando-se os dois lados da equação (2.29) por y, é possível obter:
Yhf = p + pz	(2.30)
Nota-se, por análise dimensional, que o termo Yhf possui então dimensão semelhante a pressão e pode ser representado pela letra grega $, tendo então:
$ = p + pz	(2.31)
D relativo a Profundidade Vertical Real - TVD. Colocando-se como referencial comum o Kelly Bushing (KB) e levando-se em conta a diferença de sentido, assume-se:
D = -z	(2.32)
E, portanto, a a equação (2.31) torna-se:
$ = p - yD	(2.33)
Lei de Darcy
Engenheiro responsável pelo sistema de distribuição de águas de Dijon, na França, Henry Darcy designou uma das equações mais utilizadas para o estudo do fluxo de fluidos em meios porosos. Em 1856, ao estudar problemas de tratamento de água através de filtros de areia, Darcy concluiu que "a vazão através de um meio poroso é proporcional à área aberta ao fluxo e ao diferencial de pressão, e inversamente proporcional ao comprimento e à viscosidade."A fim de adequar e generalizar a equação, Darcy inseriu uma constante de proporcionalidade k que, após vários experimentos, concluiu ser função apenas do meio poroso e batizou esta constante como permeabilidade absoluta do meio. A equação obtida pr Darcy foi:
P, - P2
q = kA 1 - 2	(2.34)
pL
A equação de Darcy, em seu formato original, foi formulada sobre algumas condições como:
•	Estado estacionário,
•	Fluxo isotérmico,
•	Propriedades constantes do fluido e do meio em todo o trecho em estudo,
•	Não há interação entre o fluido e o meio e
•	Fluxo laminar.
Essas condições, porém, podem ser facilmente sobrepostas com a integração de outras funções ou equações.
Estado estacionário e transiente
e até dias para que esta onda seja sentida pelas áreas limítrofes do reservatório. Este fenômeno ocorre graças a compressibilidade existente nos componentes do reservatório
De acordo com Ertekin (2001), para um fluido incompressível, a resposta à perturbação seria imediatamente sentida na borda, supondo que a rocha reservatório é também incompressível ou, matematicamente:
P = f (P)
(2.35)
Para Cf = 0 ou p constante, e
E, consequentemente,
Em termos de velocidade:
Problemas de fluxo envolvendo fluidos incompressíveis e meios porosos possuem soluções independentes do tempo, uma vez que todos os derivativos em relação ao tempo são nulos, dependendo apenas da posição s. Tal comportamento é chamado de estado estacionário.
Para fluidos levemente compressíveis e compressíveis, a perturbação é amortecida inicialmente pela compressibilidade do fluido, até que o fluido não consiga mais armazenar esta energia. A energia remanescente é então transferida para o próximo ponto no espaço e assim por diante. A energia armazenada será posteriormente transferida de um ponto para o outro. Após um certo tempo, a perturbação será transferida até as regiões limítrofes e será então percebida em qualquer ponto de observação. Pode-se então dizer que há no meio poroso um comportamento em função do tempo, ou estado transiente. Para este caso teríamos:
P = f (P)
Para Cf &gt; 0 e
ta-
(2.39)
(2.40)
E, consequentemente,
(í). =0
(2.41)
Em termos de velocidade:
du
d)
(2.42)
= 0
Equação da continuidade
Segundo Welty et al. (2007), a equação da continuidade é uma forma diferencial da lei da conservação de massa. Por se tratar de uma forma diferencial, deve-se então partir da consideração de um volume de controle de dimensões Ax, Ay e Az. Considerar então a todo o fluxo mássico presente entre este bloco e seu entorno, como mostrado na figura 2.6.
Figura 2.6 - Fluxo mássico entre um bloco e seu entorno.
Fonte: Welty et al. (2007)
A expressão para a conservação de massa do volume de controle é então:
d
p (v n) dA + —
pdV = 0
(2.43)
Que pode ser interpretado como:
Fluxo de massa para | í Taxa de acumulação |
dentro ou para fora &gt; + &amp;lt;de massa no interior &gt; = 0 do volume de controle	do volume de controle
(2.44)
O fluxo mássico p (v- n) em cada face do volume de controle está representado na figura 2.6. A massa contida dentro do volume de controle pode ser representada por pAxAyAz e, portanto, a mudança de massa dentro do volume de controle é
d
(rhoAxAyAz)
(2.45)
A densidade, porém, pode variar ponto a ponto, ou seja, p = p(x, y, z, t). Sendo assim, o fluxo mássico pelas faces do volume de controle pode ser representado, respectivamente para as direções x, y e z por:
(pvx |x+Ax	pvx |x) dz/A'-
(2.46)
(pvy |y+Ay pvy |y) AxAz	(2.47)
(pvz |z+Az - pvz ) AxAy	(2.48)
Substituindo as equações 2.45 até 2.48 na equação 2.43, temos:
(pvx|x+Ax - pvx|x) AyAz + (pvy |y+Ay - pVy |y) AxAz
d
+ (pVz|z+Az - pVz) AxAy + — (rhoAxAyAz) = 0 (2.49)
Uma vez que, nos estudos em geral, o volume não se altera como tempo, torna-se possível dividir a equação por AxAyAz. No limite, com Ax,Ay e Az tendendo a um valor infinitesimal, obtém-se a forma extensa da equação da continuidade:
d	d	d dp
dxpvx + dypvy + õ~zpvz + dt
= 0
(2.50)
Aplicando a função matemática divergente, é possível obter a forma compacta da equação da continuidade:
_	dp
V p„ + -d = 0
(2.51)
3	Desenvolvimento Teórico
3.1	Equações de Fluxo
Seguindo o método proposto por Koederitz (2005), é possível, baseando-se na equação da continuidade, escrever uma expressão geral para o balanço de massa de um problema de fluxo como
{fluxo de entrada} — {fluxo de saída} — {produção} = {acúmulo}.	(3.1)
Onde:
{fluxo de entrada} = Qx + Qy + Qz
{fluxo de saída} = {fluxo de entrada} + Ax
dQx dx
+ Ay
dQy
9y
+ Az
dQz dz
(3.2)
(3.3)
Como citado na seção 2.4, a equação proposta por Darcy pode ser facilmente adaptada para se adequar às condições do problema. Aplicando-se, por exemplo, as propriedades de fator volume-formação sobre a equação 2.34, é possível obter
kA(Pí - P2)
^BL
(3.4)
Para que a equação seja valida não só para fluxo horizontal, mas também para vertical, é interessante substituir os termos de pressão por termos de potencial de fluido. Da mesma maneira, a equação pode ser convertida para suportar fluxo multifásico através da inserção do termo de permeabilidade relativa, obtendo:
kkrA($1 - $2) p,BL
(3.5)
Definindo um fluxo na direção x, assumindo dimensões infinitesimais e considerando
Ax = AyAz:
kkr Ay Az d $
p,B	dx
(3.6)
Substituindo a equação 3.6 na equação 3.3 e rearranjando os termos:
q =
q =
{fluxo de entrada} — {fluxo de saída} =
AxAyAz
"A
dx
kkr d$\ yB dx
d kkr
+ dy yB dy
d kkr
+ dz yB dz
(3.7)
Considerando um volume total Vb = AxAyAz,que o volume disponível para o fluido é V = 0V&gt;, que a porção desse volume ocupada por este seja igual a sua saturação e que o termo de acúmulo representa a mudança de massa armazenada em uma célula no tempo,
{acúmulo} = d (jVt) .	(3.8)
Substituindo as equações 3.7 e 3.8 na equação 3.1, adequando todos os termos para fase óleo e considerando uma produção de óleo igual a qo,
_d	kkro d $	d	kkro dtA
dx yoBo dx	dy yBo dy
d kkro d $ + dz yoBo dz
— Qo
d	SoVb^
dt Bo
(3.9)
De forma análoga, para a água,
Vb
"A
dx
kkrw d $ yw Bw dx
d	kkrw
dy yw Bw dy
d kkrw dz yw Bw dz
— Qw
d	Sw Vb0
dt	Bw
(3.10)
Visto a existência do gás em solução, o gás não pode ser modelado da mesma maneira que a água. Uma modelagem adequada para o gás seria primeiramente modelar o gás livre e somar com o gás em solução. Assim obtendo:
kkroRs	d $ d	kkroRs d $ d	kkroRs d $
dx yoBo	dx	+ dy	yoBo dy	+ dz	k yoBo dzj
d í kkrg d$ \	d í kkrg d $ \	d í kkrg d $ \
dx yg Bg dx + dy yg Bg dy + dz yg Bg dz
= - ( dt	Bo
— (Qg + QoRs)
SoRsVZ , SgVb&lt;A (311)
+	Bg
vd A
3.2	Influência da Pressão Capilar
Para o óleo temos então:
í = Po - YoD	(3.12)
De forma análoga, temos para a água:
íw = Pw - Ywd	(3.13)
Aplicando-se a equação 2.18, temos portanto:
íw = Po - Pcow - YwD	(3.14)
Utilizando-se dos mesmos princípios, temos para o gás:
= Po + Pcgo - YwD	(3.15)
Substituindo as equações 3.12,3.14 e 3.15 nas equações 3.9, 3.10 e 3.11, respectivamente, obtemos
d	kkro d (Po - YoD) + d	kkro d (Po - YoD)
dx\yoBo	dx ) 8y\^opo	dy
d	kkro d (Po - YoD)
dz yoBo	dz
- qo
d	SoVbi
dt Bo
(3.16)
Para o óleo,
Vb
"A
dx
kkrw 8 (Pw	YwD^
yw Bw	dx
d dy
kkrw d (Pw YwD^ yw Bw	dy
d	kkrw d (Pw - YwD)
dz \ywBw	dz
- Qw =
d	Sw Vb0
dt	Bw
(3.17)
Para a água, e
kkroRs d (Po	-	YoD)	+ d	kkroRs	d (Po - YoD)	,	kkroRs d	(Po	-	YoD)
yoBo	dx ) dy \ yoBo	dy )	dz )
d / kkrg d (Po + Pcgo - YwD) \ dx yg Bg	dx
d / kkrg d (Po + Pcgo - YwD) \
dz yg Bg	dz
dy	dz \ yoBo
/ kkrg d (Po + Pcgo - YwD) \ + yg Bg	dy
SoRsVb^ , SgVb^	(3 18)
yoBo
d_
9y\yg Bg
d í
- (qg + qoRS) = dt
Bo
+	B„
dz
vj 4-
Para o gás.
3.3	Discretizando as Equações
O modelo encontrado, entretanto, assume condições continuas dentro do reservatório e, consequentemente, existem infinitas soluções, para infinitos pontos diferentes no reservatório. Desta maneira, o sistema de equações seria complexo demais para ser calculado através de qualquer método. Faz-se, portanto, necessário a discretização e a consequente adaptação para um sistema representado por blocos homogêneos, usualmente referidos como "gridblocks".
Durante o processo de simulação, o usuário assume que o reservatório pode ser dividido em um número n de blocos. Estes não necessariamente necessitam ter o mesmo formato ou dimensões, porém devem ser pequenos o suficiente para que sejam verdadeiras considerações como propriedades constantes dentro de cada bloco e, ao mesmo tempo, grandes o suficiente para reduzir o número de cálculos. É válido lembrar que, para cada bloco, em um sistema trifásico, são atribuídas 3 equações, uma para cada fase, além das equações respectivas às saturações, que equilibram o sistema. Um sistema possui, então, para n gridblocks, um total de 6n equações.
Para os fins deste estudo, a sssunção de que cada bloco possui formato de paralelepípedo, com dimensões semelhantes Ax, Ay e Az e posicionam-se como apresentado na Figura 3.7. Este modelo, porém, assume a individualidade de cada bloco que, apesar de compartilhar suas dimensões com seus blocos irmãos, possuem propriedades diferentes e, portanto, comportamentos diferentes no decorrer do estudo.
Figura 3.7 - Organização dos blocos no modelo estudado
Fonte: Koederitz (2005)
Para simplificar os cálculos, pode-se definir um termo M, chamado de Mobilidade e definido por:
M =
k.kr
p,.B
E, utilizando-se da aproximação da diferencial parcial como diferença finita
dA	A2 - A1
	 	 dx-----x2 — x1
obtendo então, para o óleo:
(3.19)
(3.20)
Vb
d(Po-Yo D)
x
d(Po-yoD)
x
Ax
d(Po-yoD) dz
d(Po-yoD) dy
i,j+1 ,k
d(Po-yoD) dy
i,j-1 ,k
Az
Ay
) i,j,k+1
d(Po—yoD) dz
- qo
d ÍSoV4\
dt\Bo)
(3.21)
1
+
Utilizando-se da mesma aproximação para o tempo:
Vb
d(Po-yo D) dx
d(Po-yoD) dx
Ax
d(Po-yoD) dy
i,j+1 ,k
d(Po-YoD) dy
i,j-1 ,k
Ay
d(Po-yoD) dz
i,j,k+1
d(Po-yoD) dz
i,j,k-1
1
1
Az
- qo
k SoVbA	_ kSoVb&lt;A
\ Bo ) t+At	\ Bo / t
At
(3.22)
Discretizando ainda os termos de diferencial de potencial, chega-se a:
Ax
Moi+1 jk
Ay
Vb_
Az
Poi+1jk	YoDi+1,j,k)	(Poi.j.k	YoDi,j,k
AX
Poi.j.k — YoDi,j,k^ — (Poi-ijk — YoDi—1,j,k
Ax
M	Poi.j+1.k — YoDi,j+1,k) — (Poijk — YoDi,j,k
oij+1 k	Ay
Poi,j,k — YoDi,j,k^ — {Poi,j-i,k — Yío Di,j—1,k
V	Ay	)
,	, Oijk	YoPi,j,k)
Ay
M	oi,j,k	!o~i,J,k)	oi,j-1,k	Yo Di,j—1,k
oi . j-1. k	Ay
M	Poi,j,k+1 — YoDi,j,k+1) — (Poijk — YoDi,j,k)
oijk+iy	Az
Poi.j.k — Yo Di,j,k} — (Poi.j.k-1 — YoDi,j,k—1 y	AZ
)■
1-
SoVbó	S \b,
q _	(3 23)
qo _	At	(3.23)
Moi-1 jk
' j k-1
+
+
Retornando o volume total às suas condições originais Vb = AxAyAz e simplificando os termos em que os mesmos estão presentes, obtém-se:
AyAz
Ax
M	.j.k (^Poi+1,j,k	YoPi+1,j,^	U’,...:	YoDi,j,^}				+
Moi i-	1 ,j,Á (Poi,j,k	Y°Di,j,k)	ÇPoi 1,j,k	YoDi—1,j,k) }	
AxAz	Moi,j+1 .k ( {Poi,j+1,k	'	Di,j+1,k)	{Poi.j.k — Yo Di	j,kS} —
Ay				
Mo, i,j	-1 .k ( ^Poi,j,k — YoDi,j,k)	1.k	YoDi,j—1,k)')	+
AxAy	Moi,j,k+1^ (Poi,j’k+1 —	!	Di,j,k+1^	ÇPoi.j.k — YoDi,	j,kS} —
Az				
Moi.j.k- 1 ( {Poi,j,k	YoDi,j,k)		Poi.j.k-1	YoDi,j,k—1)')	—
SoVbó
_ V Bo Jt+At qo _	At
SoVb¿
—	- (3.24)
De forma análoga, as mesmas operações podem ser realizadas nas equações 3.17 e 3.18, que modelam a água e o gás, respectivamente.
O termo Mo 1 . , entretanto, assume uma permeabilidade média entre os centros dos
i+ 1 ,j,k
média harmônica ponderada, ou seja,
, AxiAxi+1
kavg = Axi , Axi+1	(3.25)
ki	ki+1
3.4	Representação dos Poços
Ainda que o modelo contemple a movimentação dos fluidos em um reservatório de maneira completa, principal objetivo de uma simulação é "imitar"os efeitos gerados pelas diversas perturbações em um reservatório. Estas, por sua vez, são geradas através de poços, sejam eles de injeção ou de produção. Modelar os poços, portanto, se mostra uma tarefa essencial para o desenvolvimento de um modelo eficiente.
Um dos modelos mais simples, porém mais eficientes, é o modelo de Peaceman. Este modelo parte da equação de Darcy e considera o fluido saindo da rocha como um todo, não levando em conta, por exemplo, mudanças de estado físico decorrente da alteração brusca de pressão entre a rocha-reservatório e o poço. Propriedades essenciais ao modelo, como o fluxo simultâneo de várias fases com propriedades diferentes e adaptação ao modelo de grid-blocks são facilmente adaptáveis, uma vez que a equação de Darcy pode ser facilmente manipulada.
O modelo inicialmente proposto por Peaceman (1978) é a proposição de Schwabe e Brand:
q=
2nkh Pe — Pwf p in rw + s
(3.26)
Onde Pe representa a pressão média volumétrica não só do bloco em estudo, mas também dos blocos ao entorno deste e s representa o fator de skin do poço, isto é, representa o dano (ou melhoramento) decorrente dos processos de perfuração e completação.
Peaceman (1978) então assume que as dimensões do bloco são muito superiores ao raio do poço (re &gt;&gt;&gt; rw), obtendo:
(3.27)
Ertekin (2001) continua estes estudos e encontra, para fluxo em estado estacionário, à seguinte equação:
2nkh (Pi,j,k	Pwf )
qSc
PB [ln (£) — 0.5 + s
(3.28)
Para condições anisotrópicas, Peaceman (1978) ainda define:
re ~ req = 0, 28 •
fe (Ax)2 +
fc (Ay)2
(3.29)
E, consequentemente, para condições isotrópicas:
re ~ req = 0,14^(Ax)2 + (Ay)2	(3.30)
A adequação para modelo multifásico é feita pela simples inserção do termo de permeabilidade relativa, multiplicando o numerador do lado esquerdo da equação, resultando em, para o óleo:
qo
2nkrokh (A, ...	Pwf')
PoBo ln (- 0-5 + s
(3.31)
4	Funcionamento do Simulador
Uma vez deduzidos todos os modelos necessários, foi iniciada a montagem do simulador. Este, baseado em FORTRAN 90, utiliza em seu código apenas componentes de uso livre, não necessitando de licenças adicionais nem citações. A própria linguagem FORTRAN possui licença de uso livre e, sendo um dos códigos mais eficientes para cálculos matemáticos simples, aliado com um código de fácil aprendizado devido a sua semântica simples, foi escolhida como linguagem de uso neste trabalho.
4.1 A Linguagem FORTRAN
Definida como uma linguagem de nível alto, FORTRAN tem seu nome graças a contração de "FORmula TRANslated"(inglês para fórmula traduzida). Muito utilizada para processos extensivos de cálculo, essa linguagem teve inicio nos anos 1950 e se dedicava principalmente a cientistas e engenheiros.
Em suas primeiras versões, era inserida através de cartões perfurados, Hoje em dia, porém, por ser uma linguagem versátil e bem adequada para operações matemáticas, existem vários compiladores e infinitas IDE’s. Por esta mesma razão, esta linguagem foi, por muito tempo, a preferida pelas universidades para pesquisadores e engenheiros.
Hoje em dia no Brasil, a maioria das instituições federais ainda utiliza o FORTRAN para os cursos de engenharias Química e de Petróleo. Outros cursos, entretanto, substituem essa linguagem por C, Pascal, Java e, recentemente, Phyton.
Semântica Básica da Linguagem
A linguagem FORTRAN 90, versão utilizada neste estudo, surgiu como uma tentativa de modernizar a antiga versão 77, que, apesar de já incluir várias estruturas lógicas, apresentava-se obsoleta em relação às outras linguagens. A modernização foi bem aceita, uma vez que ambas utilizavam de um modelo de sintaxe parecido, porém com grandes diferenças quanto ao desempenho. Dentre a semântica básica desta linguagem, pode-se destacar:
1	O FORTRAN 90, ao contrário do 77, não possui uma regra explicita quanto as colunas (alguns compiladores mais arcaicos, no entanto, necessitam de flags para que esta regra seja quebrada).
2	O ponto de exclamação (!) define o início e um comentário e instrui o compilador a ignorar todo o conteúdo desta linha após o mesmo.
3	Ainda que a linguagem seja compatível com comandos em letras minúsculas, a boa prática e a praticidade na leitura sugerem que todos os comandos estejam na capitalização maiúscula. O mesmo ocorre com a identação, porém devido a incompatibilidade de alguns compiladores mais antigos, a boa prática recomenda também só utilizar os 8 primeiros caracteres de cada linha para os comandos, sendo utilizados na maioria das vezes apenas para referências.
4.2 Mecanismo de Resolução
As equações desenvolvidas durante os capítulos 2 e 3 podem ser reunidas, formando um sistema de, para n gridblock, 6 x n equações. Uma maneira de solucionar esse tipo de sistema, é encará-lo como uma multiplicação de matrizes, no formato A x x — b = 0, onde A é uma matriz quadrada de ordem 6n, que recebe os termos quem multiplicam as pressões e saturações nas equações, x é o vetor cujo valor será manipulado durante a solução, contendo os valores das variáveis e b é um vetor coluna que recebe todas as informações independentes das variáveis representadas em x.
Uma vez que sistemas como esse podem alcançar números incrivelmente altos de equações e soluções diretas iriam exigir muito cálculo computacional, com o incidente risco de não convergir, a solução adotada, graça a sua simplicidade e eficiência, é o Método de Newton-Raphson. Esse método iterativo baseia-se na utilização da iteração anterior, somado o resquício (ou diferença) dividido pela derivada das equações que compõe o sistema.
O Método de Newton-Raphson é, então, representado por:
xn+1 — xn
f (xn) f (xn)
(4.1)
4.3	Funcionamento Básico do Programa
O programa encontra-se no formato de sub-rotina, a fim de melhor se adequar a uma estrutura modular, de fácil adaptação para diferentes situações. Esta, com o nome de "Newton Solver"utiliza como entrada informações como estado anterior do reservatório(Representado pela matriz R), informações relativas aos poços (WELLS), informações relativas ao passo de tempo (tstep), dimensões dos blocos (GB), número total de blocos em cada direção (x,y e z), número total de equações do sistema (n), informações sobre o comportamento das bordas do reservatório (BOUNDARY), informações sobre a rocha-reservatório (ROCK), informações sobre o fluido a ser estudado pré processadas de acordo com as condições anteriores (PVT), Informações sobre o fluido estáticas ao tempo (SPVT) e configurações relativas à precisão e ao limite de iterações (SETUP). Suas informações de saída constituem no novo estado do reservatório (sobrescrito sobre a matriz R) e informações quantitativas como óleo, água e gás "in-place".
Para construir as matrizes utilizadas para a resolução, o programa segue um algoritmo específico, onde ele trata cada fase por sua vez, compondo as matrizes linha por linha de acordo com as equações. As equações são inseridas no modelo na seguinte ordem:
1o - Equações relativas ao fluxo do óleo na fase líquida
2o - Equações relativas ao fluxo de água
3o - Equações relativas ao fluxo de gás livre e gás em solução
4o - Equações relativas ao correto somatório das saturações, certificando-se que as mesmas atinjam o todo da célula
5o - Equações relativas à pressão capilar óleo-água
6o - Equações relativas à pressão capilar gás-óleo
O algoritmo utilizado segue um padrão onde, através de uma sequência de caracteres, reconhece o tipo de equação a ser tratado. Uma vez reconhecido, ele segue preenchendo as linhas com as informações tridimensionais das células, mantendo sempre a ordem de preenchimento seguindo primeiramente o eixo x, após oye, finalmente o z. Uma vez atingido o final de um eixo, o programa da um passo no eixo seguinte e reinicia o anterior, fazendo assim com que todas as células sejam cobertas. Após o término de todos os eixos, o programa se encarrega de trocar a variável que armazena a sessão a ser trabalhada.
Devido a esta organização, é possível garantir que a matriz A gerada não possuirá determinante nulo e, portanto, o sistema possui uma solução única, além de transformar com excelência uma informação tridimensional em uma informação bidimensional facilmente mapeável com garantias de que nenhum dado será perdido no processo.
Uma vez montada a matriz A e o vetor b, o programa calcula a função derivada e, através do Método de Newton-Raphson, entra em loop até que o critério de parada seja atingido. O critério de parada geralmente é representado por um fator aceitável de diferença entre duas iterações consecutivas ou um número limite de iterações que evita uma eventual sobrecarga do sistema.
Atingido esse critério de parada, o programa interpreta as informações e as gera no formado de saída necessário, gerando um vetor de resultado com 4 dimensões, sendo a primeira a informação armazenada, e as outras três as coordenadas a que se referem. O programa calcula também, ao final de todos os cálculos deste espaço de tempo, as informações qualitativas e as exporta em seu respectivo vetor.
Ao final so cálculo, a subrotina se encerra e retorna ao programa principal criado pelo usuário, que pode armazenar as informações e iniciar um novo passo de tempo ou encerrar os cálculos e iniciar sua interpretação.
cálculo. O programa ainda exibe como saída um segundo arquivo, representando, em sequência, as condições médias de pressão do reservatório, a quantidade de óleo e gás ainda armazenados e a vazão total dos poços, como representado na nas figuras 4.8 e 4.9.
iTirr	estepl ,c Editar	w- Bloco de Formatar	Exibir Ajuda							- □	X
Timestep 1											
x		y	&gt;		Poil	Pwat	Pgas	Soil	Swat	Sgas	,		
1		i	,	1 ,	2424.100665	2433.797068	2421.191744	0.455828978	0.273497387	0.270673635	,		
2		1 ,	1 ,	2202.396267	2211.205852	2199.753391	0.401566416	0.240939849	0.357493735	,		
3		i	,	1 ,	2110.3022	2118.743408	2107.769837	0.384774758	0.230864855	0.384360387	,		
4		1 ,	1 ,	2046.233986	2054.418922	2043.778506	0.373093099	0.223855859	0.403051042	,		
5		i	,	1 ,	2022.975285	2031.067186	2020.547715	0.368852303	0.221311382	0.409836316	,		
6		1 ,	1 ,	2046.233986	2054.418922	2043.778506	0.373093099	0.223855859	0.403051042	,		
7		i	,	1 ,	2110.3022	2118.743408	2107.769837	0.384774758	0.230864855	0.384360387	,		
8		1 ,	1 ,	2202.396267	2211.205852	2199.753391	0.401566416	0.240939849	0.357493735	,		
9		i	,	1 ,	2309.955325	2319.195146	2307.183379	0.42117783	0.252706698	0.326115472	,		
10		1 ,	1 ,	2424.100665	2433.797068	2421.191744	0.441990131	0.265194079	0.29281579	,		
1		2 ,	1 ,	2202.396267	2211.205852	2199.753391	0.401566416	0.240939849	0.357493735	,		
2		2 ,	1 ,	2068.48089	2076.754813	2065.998712	0.377149412	0.226289647	0.396560941	,		
3		2 ,	1 ,	1945.926354	1953.710059	1943.591242	0.354803848	0.212882309	0.432313843	,		
4		2 ,	1 ,	1854.297145	1861.714334	1852.071989	0.338096949	0.202858169	0.459044882	,		
5		2 ,	1 ,	1819.285226	1826.562367	1817.102083	0.33171317	0.199027902	0.469258928	,		
6		2 ,	1 ,	1854.297145	1861.714334	1852.071989	0.338096949	0.202858169	0.459044882	,		
7		2 ,	1 ,	1945.926354	1953.710059	1943.591242	0.354803848	0.212882309	0.432313843	,		
8		2 ,	1 ,	2068.48089	2076.754813	2065.998712	0.377149412	0.226289647	0.396560941	,		
9		2 ,	1 ,	2202.396267	2211.205852	2199.753391	0.401566416	0.240939849	0.357493735	,		
10		2 ,	1 ,	2337.29969	2346.648889	2334.494931	0.426163571	0.255698143	0.318138286	,		
1		3	,	1 ,	2110.3022	2118.743408	2107.769837	0.384774758	0.230864855	0.384360387	,		
2		3	,	1 ,	1945.926354	1953.710059	1943.591242	0.354803848	0.212882309	0.432313843	,		
3		3	,	1 ,	1781.350149	1788.47555	1779.212529	0.324796407	0.194877844	0.480325749	,		
4		3	,	1 ,	1642.597066	1649.167454	1640.625949	0.299497337	0.179698402	0.520804261	,		
5		3	,	1 ,	1583.779778	1590.114897	1581.879242	0.288773087	0.173263852	0.537963061	,		
6		3	,	1 ,	1642.597066	1649.167454	1640.625949	0.299497337	0.179698402	0.520804261	,		
7		3	,	1 ,	1781.350149	1788.47555	1779.212529	0.324796407	0.194877844	0.480325749	,		
8		3	,	1 ,	1945.926354	1953.710059	1943.591242	0.354803848	0.212882309	0.432313843	,		
9		3	,	1 ,	2110.3022	2118.743408	2107.769837	0.384774758	0.230864855	0.384360387	,		
10		3	,	1 ,	2266.339894	2275.405253	2263.620286	0.413225359	0.247935215	0.338839426	,		
1		4	,	1 ,	2046.233986	2054.418922	2043.778506	0.373093099	0.223855859	0.403051042	,		
2		4	,	1 ,	1854.297145	1861.714334	1852.071989	0.338096949	0.202858169	0.459044882	,		
3		4	,	1 ,	1642.597066	1649.167454	1640.625949	0.299497337	0.179698402	0.520804261	,		
4		4	,	1 ,	1429.963801	1435.683656	1428.247844	0.260727575	0.156436545	0.58283588	,		
5		4	,	1 ,	1318.580934	1323.855258	1316.998637	0.24041896	0.144251376	0.615329664	,		v
Figura 4.8 - Modelo de output contendo informações de cada bloco do reservatório
Figura 4.9 - Modelo de output contendo informações do reservatório como um todo
Eixo x
ce
-
W
2520.0823
2245.6446
2108,4254
13T1.2063
1833,3871
1636.T680
1553.5488
1422.3237
1285.1105
1147.8314
Figura 4.10 - Interpretação das informações extraídas do programa. Pressão de óleo.
Eixo x
									
■									
0.4558	0.4016	0.3848	0.3731	0.3683	0.3731	0.3848	0.4016	0.4212	0.4420
0,4016	0,3771	0,3548	0.3381	0.3317	0,3381	0.3548	0.3771	0,4016	0.4262
0.3848	0.3548	0,3248	0.2335	0,2888	0.2335	0.3248	0,3548	0.3848	0.4132
0.3731	0.3381	0.2335	0.2607	0.2404	0.2607	0.2335	0.3381	0.3731	0.4046
0.3683	0.3317	0,2888	0.2404	0,2033	0.2404	0.2888	0.3317	0.3683	0.4016
0.3731	0.3381	0.2335	0.2607	0.2404	0.2607	0.2335	0.3381	0.3731	0.4046
0.3848	0.3548	0,3248	0.2335	0,2888	0.2335	0.3248	0,3548	0.3848	0.4132
0,4016	0,3771	0,3548	0.3381	0.3317	0,3381	0.3548	0.3771	0,4016	0.4262
0.4212	0.4016	0.3848	0.3731	0.3683	0.3731	0.3848	0.4016	0.4212	0.4420
0.4420	0.4262	0.4132	0.4046	0.4016	0.4046	0.4132	0,4262	0.4420	0.4535
Figura 4.11 - Interpretação das informações extraídas do programa. Saturação de óleo.
Mais detalhes podem ser encontrados no Apêndice A, que apresenta o código em FORTRAN utilizado na confecção do programa.
4.4	Estudos de Caso
A fins de teste da capacidade e das limitações do programa, foram executados estudos de caso sobre situações de potencial uso do programa, incluindo:
4.4.1	Caso 1 - Reservatório convencional
Utilizando-se os inputs presentes no apêndice B, chegou-se ao resultado apresentado nas figuras 4.12 e 4.13, mostrando que o simulador resolveu o problema com propriedade. A queda de pressão no entorno do bloco de posição 5, 5 é devida a presença de poço produtor na região.
											
	■	■									
	■	2424.1007	2202.3363	2110.3022	2046.2340	2022.3753	2046.2340	2110.3022	2202.3363	2303.3553	2424.1007
		2202.3363	2068,4803	1345,3264	1854.2371	1813.2852	1854.2371	1345.3264	2068.4803	2202.3363	2337,2337
		2110.3022	1345.3264	1781.3501	1642.5371	1583.7738	1642.5571	1781.3501	1345,3264	2110.3022	2266,3333
		2046.2340	1854.2371	1642.5371	1423.3638	1318.5803	1423.3638	1642.5371	1854.2371	2046.2340	2213.0830
		2022.3753	1813.2852	1583.7738	1318.5803	1147.8314	1318.5803	1583.7738	1813,2852	2022.3753	2202,3363
		2046.2340	1854.2371	1642.5371	1423.3638	1318.5803	1423.3638	1642.5371	1854.2371	2046.2340	2213.0830
		2110.3022	1345.3264	1781.3501	1642.5371	1583.7738	1642.5371	1781.3501	1345,3264	2110.3022	2266,3333
		2202.3363	2068,4803	1345,3264	1854.2371	1813.2852	1854.2371	1345.3264	2068.4803	2202.3363	2337,2337
		2303.3553	2202.3363	2110.3022	2046.2340	2022.3753	2046.2340	2110.3022	2202.3363	2303.3553	2424.1007
		2424.1007	2337,2337	2266.3333	2213,0830	2202,3363	2213,0830	2266,3333	2337.2337	2424.1007	2520.0823
2520.0823
2245.6446
2108,4254
1371.2063
1833,3871
lS
-
W
1636.T680
1553.5488
1422.3237
1285.1105
1147.8314


















0.3248
0.3546
0.4132
0.3543
0.3381
0.3317
0.3381
0.3548
0.3771
0,4016
0.4262
0.3848
0.3731
0.3731
0.3848
0.4016
0.4212
0.4420
0.4132
0.4046
0.4016
0.4046
0.4132
0,4262
0.4420
0.4535
0.2033















4.4.2	Caso 2 - Reservatório com ausência de capa de gás
O caso 2, em contrapartida, apresentou resultados inconclusivos. Acredita-se que a principal razão seja a rápida variação de pressão causada pela ausência do gás. Uma vez que o método utilizado é o método implícito de cálculo, o coeficiente de expansão do óleo não se mostra suficiente, gerando distúrbios e assim resultados irreais, como pode ser conferido nas figuras 4.14 e 4.15.
Figura 4.14 - Interpretação das informações extraídas do programa. Pressão de óleo. Reservatório com ausência de capa de gás.
4.4.3	Caso 3 - Reservatório com quantidade reduzida de água de formação
Figura 4.15 - Interpretação das informações extraídas do programa. Saturação de óleo. Reservatório com ausência de capa de gás.
geram, no método implícito, situações onde erros de arredondamento, problema comum ao se tratar de métodos numéricos, se tornem relevantes e prejudiquem o cálculo do resultado. Os resultados encontram-se nas figuras 4.16 e 4.17.
														
		■										■		
		48825	48676	51581	54237	56232	58462	60577	62472	63773	63332	■		63332
		48032	45455	50361	54234	56522	58396	60504	62137	63366	63460	1		60237
		48618	43624	52145	54634	56867	58478	53376	61643	62378	62673	1		58383
		51024	51345	52940	55096	56535	58089	53476	60478	61209	61237	1		56541
		51587	52145	53296	54627	56122	57462	58319	59113	59823	60129			54694
												■		
		51625	52134	53037	54275	55463	56312	57021	57617	58200	58863	■		52846
		51028	51842	52845	53890	54788	55715	55623	55078	56833	57562			50998
		50775	51235	52488	53832	54801	55063	54023	50139	54886	56639			49151
		50055	50332	52224	53835	54T55	55050	54814	54160	55706	56543			47303
		50038	50721	52158	53643	54793	55266	55104	55548	56322	56697	1		45455
Figura 4.16 - Interpretação das informações extraídas do programa. Pressão de óleo. Reservatório com quantidade reduzida de água de formação.
-0,6828
-0,6835
-0,6835
-0.682*
-0.6828
-0.6830
-0,6823
-0.6823









Eixo x











-0.6833
5	Conclusão e Sugestões para Trabalhos Futuros
A simulação de reservatórios é uma técnica em constante desenvolvimento que, a cada dia, se torna mais importante seu conhecimento. A revolução digital faz com que computadores consigam executar modelos cada vez mais complexos e confiáveis em tempo economicamente viáveis. Em contrapartida, essa disponibilidade de softwares, juntamente ao patenteamento de metodologias utilizado por várias empresas, fazem com que estes métodos caiam no esquecimento.
Com o intuito de reunir estas informações em um formato consolidado e didático, este trabalho apresentou o estudo e o desenvolvimento de uma metodologia de previsão de comportamento de um reservatório trifásico através da modelagem Black Oil, utilizando apenas linguagens e códigos abertos ao público. Dentre todas as características do código implementado, pode-se destacar sua facilidade em ser transformado. Uma vez que todas suas entradas são manipuláveis e suscetíveis a implantação de modelos diferentes. Sua resolução pelo método de Newton-Raphson, apesar de demorada, apresenta convergência em condições mais amenas.
A metodologia adotada para a reorganização das informações provou-se efetiva e capaz de lidar com o desafio proposto pelo programa. Posteriores revisões das deduções e discretizações confirmaram a eficiência destas equações na representação da realidade quando atendidas condições amenas de reservatório, estando limitadas a resolução do estudo, que não pode ser alta demais a fim de comprometer a performance, nem baixa demais a ponto de comprometer a eficiência e a presença de todas as fases modeladas.
Resta ainda, porém, estudos de como melhor lidar com gerenciamento de memória durante a criação das matrizes solução, assim como a pesquisa por métodos de solução mais eficientes, como método de gradiente conjugado, ORTHOMIN, entre outros. Sugere-se também estudos comparativos entre resultados obtidos através deste programa e simuladores comerciais, a fim de se realizar ajustes, assim como a criação de módulos adicionais para o programa, adicionando novas metodologias para o cálculo de propriedades.
Referências
AHMED, T. Reservoir engineering handbook. Amsterdam Boston: Gulf Professional Pub, 2010. ISBN 978-1-85617-803-7. Citado na página 14.
AHMED, T. Equations of State and PVT Analysis, Second Edition: Applications for Improved Reservoir Modeling. Estados Unidos da América: Gulf Professional Publishing, 2016. ISBN 978-0-12801-570-5. Citado na página 19.
BRADLEY, H. B. Petroleum Engineering Handbook. Estados Unidos da América: Society of Petroleum, 1987. ISBN 978-1-55563-010-3. Citado na página 15.
ERTEKIN, T. Basic Applied Reservoir Simulation. Estados Unidos da América: Society of Petroleum Engineers, 2001. ISBN 978-1-55563-089-8. Citado 8 vezes nas páginas 13, 14, 18, 20, 21, 22, 25 e 34.
KATZ, D. L. V. Handbook of natural gas engineering. New York: McGraw-Hill, 1959. ISBN 978-0-07033-384-0. Citado na página 16.
KOEDERITZ, L. F. Lecture Notes On Applied Reservoir Simulation. University of Missouri - Rolla, Estados Unidos da América: World Scientific Publishing Company, 2005. ISBN 978-9-81256-198-6. Citado 3 vezes nas páginas 28, 29 e 31.
MCCAIN, W. D. The properties of petroleum fluids. Tulsa - OK, Estados Unidos da América: PennWell Books, 1990. ISBN 978-0-87814-335-1. Citado na página 15.
PEACEMAN, D. Interpretation of well-block pressures in numerical reservoir simula-tion(includes associated paper 6988 ). Society of Petroleum Engineers Journal, Society of Petroleum Engineers (SPE), v. 18, n. 03, p. 183-194, jun 1978. Disponível em:&amp;lt;https://doi.org/10.2118/6893-pa&gt;. Citado 2 vezes nas páginas 34 e 35.
ROSA, A. J. Engenharia de Reservatório de Petróleo. Rio de Janeiro: Interciência, 2006. ISBN 978-8-57193-135-6. Citado 7 vezes nas páginas 12, 14, 15, 17, 19, 20 e 33.
TERRY, R. E.; ROGERS, J. B. Applied Petroleum Reservoir Engineering. Estados Unidos da América: Prentice Hall, 2014. ISBN 978-0-13315-558-7. Citado na página 15.
WELTY, J. et al. Fundamentals of Momentum, Heat and Mass Transfer. Hoboken - NJ, Estados Unidos da América: Wiley, 2007. ISBN 978-0-47012-868-8. Citado na página 26.
Apêndices
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
APÊNDICE A - Código Desenvolvido
Nas páginas a seguir, encontra-se todo o código desenvolvido durante o estudo deste trabalho. Existe no início uma seção de comentários em inglês que explicam o conteúdo de cada variável, fazendo, assim, um mapeamento detalhado da localização de cada informação.
SUBROUTINE Newton_Solver(R,WELLS,tstep,GB,x,y,z,n,BOUNDARY,ROCK ,PVT,SPVT,WRES,RRES,SETUP)
INTEGER x, y, z, i, j, k, l, m, n, counter,ipvt(n),info REAL R(6,x,y,z),GUESS(n),GUESSold(n), WELLS(x,y,z,7), tstep, GB(3),
ROCK(3,x,y,z), PVT(10,x,y,z), SPVT(4), WRES(3,x,y,z), RRES(4), B(n ), Pi, A(n,n), BOUNDARY(6), SETUP(2),work(n), det(2), RT(n), dA(n, n)
CHARACTER(3) var ! This subroutine organize and solve the system for a determined timestep.
#########################################################################
!	# ATTENTION:
#
!	# FOR THIS SUBROUTINE BE ABLE TO RUN, YOU NEED TO ADD THE
#
!	# -ffixed-line-length-0 AND -ffree-line-length-0 FLAGS TO THE
COMPILLER #
!	#	( GFORTRAN &amp;amp; GCC )
#
!	# STILL NEED SOME TESTING, BUT I THINK INTEL FORTRAN DOESN'T
NEED FLAGS #
!	#	TO COMPILE THIS SUBROUTINE IF IT'S ON F90 FILE FORMAT
#
#########################################################################
19	!	*R is a 4 dimensional matrix that stores data from previous
runs, like pressures and saturations. This variable will store the new data. It has the following structure: R(data,X_position,
Y_position,Z_position). The data is organized in: 1 - Oil Pressure ; 2 - Water Pressure; 3 - Gas Pressure; 4 - Oil Saturation; 5 -Water Saturation; 6 - Gas Saturation
20	!	*WELLS is a 4 dimensional that stores the data from producing
and injecting wells. It has the following structure: WELLS( X_position,Y_position,Z_position,stored_data) Stored data is organized in: 1 - Number of the Well(0 for no well); 2 - Type of well (0 for productor, 1 for water injector, 2 for gas injector);
3 - Type of Constraint (0 for Fluid Rate, 1 for Pressure); 4 -Constraint as determined on 3; 5 - Pwf, 6 - Well diameter; 7 -Skin Effect
21	!	*tstep defines the size of the timestep to be calculated. The
distance in time between the information that will be stored.
22	!	*GB stores information about the dimensions of each gridblock
of the model. It's organized as a single vector with the following structure: GB(1) stores the X dimension of the gridblocks; GB(2) stores the Y dimension of the gridblocks; GB(3)stores the Z dimension of the gridblocks.
23	!	*BOUNDARY is a size 6 vector that stores the boundary
conditions for each of the reservoir boundaries. (0 for no flow, otherwise it stores the flow pressure)
24	!	*ROCK is a 4 dimensional matrix that stores information about
Porosity and Permeability. It has the following structure: ROCK( data,X_position,Y_position,Z_position). The data is organized in: 1 - Vertical Permeability; 2 - Horizontal Permeability; 3 -Porosity
25	!	*PVT stores data that relates to the fluid. It has the
following structure: PVT(data,X_position,Y_position,Z_position).
The data is organized in: 1 -Oil Viscosity; 2 -Oil FVF; 3 - Kro; 4 - Pcow; 5 - Pcog; 6 - Rso; 7 - Gas FVF; 8 - Gas Viscosity; 9 -Krw; 10 - Krg
26	!	*SPVT stores PVT data that doesn't change with time or position
. It's a one dimension vector with the following structure: 1 -Water Brine density; 2 - Gas specific gravity; 3 - Oil Sp.Gr.; 4 -Reservoir Temperature.
27	!	*WRES store the output data, like the production or the
pressure on each well.
28	!	*RRES store the output data of the reservoir, like the average
pressure, the FOIP, the FGIP and the FWIP
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
!	*SETUP stores the parameters for the Newton solver: 1 - Maximum
number of iterations before break the timestep; 2 - Decimal order of precision for the Newton solver.
i=1
j = 1
k=1
Pi =	3.1415265358979323846264338327950288419716939937510
A=0
B=0
var='OIL'
DO l=1,n,1 !this section creates the A matrix
IF (var.eq.'OIL') THEN !Generates the section of the matrix that relates with oil equations.
IF (i.eq.1) THEN
A(l,l + 1) = 0.006328*(2/(1/ROCK(2,i,j,k)+1/ROCK(2,i+1,j,k)))*GB(2)*GB (3) *PVT(3,i,j,k)/(GB(1) *PVT(2,i,j,k) *PVT(1,i,j,k))
IF (BOUNDARY(1).ne.0) THEN
B(l) = B(l) -	0.006328*ROCK(2,i,j,k)*GB(2)*GB(3)*PVT(3,i,j,k)/(GB(1)
*PVT(2,i,j,k) *PVT(1,i,j,k)) *BOUNDARY(1)
A(l,l) = A(l,l)-0.006328*ROCK(2,i,j,k) *GB(2) *GB(3) *PVT(3,i,j,k)/(GB
(1)	*PVT(2,i,j,k) *PVT(1,i,j,k))
END IF
A(l,l) = A(l,l)-A(l,l + 1)
ELSE IF (i.eq.x) THEN
A(l,l-1) = 0.006328*(2/(1/ROCK(2,i,j,k)+1/ROCK(2,i-1,j,k)))*GB(2)*GB (3) *PVT(3,i,j,k)/(GB(1) *PVT(2,i,j,k) *PVT(1,i,j,k))
IF (BOUNDARY(2).ne.0) THEN
B(l) = B(l) -	0.006328*ROCK(2,i,j,k)*GB(2)*GB(3)*PVT(3,i,j,k)/(GB(1)
*PVT(2,i,j,k) *PVT(1,i,j,k)) *BOUNDARY(2)
A(l,l) =A(l,l)-0.00 6328*ROCK(2,i,j,k) *GB(2) *GB(3) *PVT(3,i,j,k)/(GB
(1)	*PVT(2,i,j,k) *PVT(1,i,j,k))
END IF
A(l,l) = A(l,l)-A(l,l-1)
ELSE
END IF
IF (j.eq.1) THEN
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
A(l,l+x) = 0.006328*(2/(1/ROCK(2,i,j,k)+1/ROCK(2,i,j+1,k)))*GB(1)*GB
(3) *PVT(3,i,j,k)/(GB(2) *PVT(2,i,j,k) *PVT(1,i,j,k))
IF (BOUNDARY(3).ne.0) THEN
B(l) = B(l) -	0.006328*ROCK(2,i,j,k)*GB(1)*GB(3)*PVT(3,i,j,k)/(GB(2)
*PVT(2,i,j,k) *PVT(1,i,j,k)) *BOUNDARY(3)
A(l,l) = A(l,l)-0.006328*ROCK(2,i,j,k) *GB(1) *GB(3) *PVT(3,i,j,k)/(GB
(2)	*PVT(2,i,j,k) *PVT(1,i,j,k))
END IF
A(l,l) = A(l,l)-A(l,l+x)
ELSE IF (j.eq.y) THEN
A(l,l-x) = 0.006328*(2/(1/ROCK(2,i,j,k)+1/ROCK(2,i,j-1,k)))*GB(1)*GB
(3)	*PVT(3,i,j,k)/(GB(2) *PVT(2,i,j,k) *PVT(1,i,j,k))
IF (BOUNDARY(4).ne.0) THEN
B(l) = B(l) -	0.006328*ROCK(2,i,j,k)*GB(1)*GB(3)*PVT(3,i,j,k)/(GB(2)
*PVT(2,i,j,k) *PVT(1,i,j,k)) *BOUNDARY(4)
A(l,l) = A(l,l)-0.006328*ROCK(2,i,j,k) *GB(1) *GB(3) *PVT(3,i,j,k)/(GB
(2)	*PVT(2,i,j,k) *PVT(1,i,j,k))
END IF
A(l,l) = A(l,l)-A(l,l-x)
ELSE
A(l,l+x) = 0.006328*(2/(1/ROCK(2,i,j,k)+1/ROCK(2,i,j+1,k)))*GB(1)*GB
(3)	*PVT(3,i,j,k)/(GB(2) *PVT(2,i,j,k) *PVT(1,i,j,k))
A(l,l-x) = 0.006328*(2/(1/ROCK(2,i,j,k)+1/ROCK(2,i,j-1,k)))*GB(1)*GB
(3) *PVT(3,i,j,k)/(GB(2) *PVT(2,i,j,k) *PVT(1,i,j,k))
A(l,l) = A(l,l)-A(l,l-x)-A(l,l+x)
END IF
IF (k.eq.1) THEN
A(l,l+x*y) = 0.00 6328*(2/(1/ROCK(1,i,j,k)+1/ROCK(1,i,j,k+1))) *GB(2) *
GB(1) *PVT(3,i,j,k)/(GB(3) *PVT(2,i,j,k) *PVT(1,i,j,k))
B(l) = B(l) + 0.006328*(2/(1/ROCK(1,i,j,k)+1/ROCK(1,i,j,k + 1)))*GB(2)*
GB(1) *PVT(3,i,j,k) *SPVT(3) *GB(3)/(GB(3) *PVT(2,i,j,k) *PVT(1,i,j,k)) IF (BOUNDARY(5).ne.0) THEN
B(l) = B(l) -	0.006328*ROCK(1,i,j,k)*GB(2)*GB(1)*PVT(3,i,j,k)/(GB(3)
*PVT(2,i,j,k) *PVT(1,i,j,k)) *BOUNDARY(5)
A(l,l) = A(l,l)-0.006328*ROCK(1,i,j,k) *GB(2) *GB(1) *PVT(3,i,j,k)/(GB
(3) *PVT(2,i,j,k) *PVT(1,i,j,k))
END IF
A(l,l) = A(l,l)-A(l,l+x*y)
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
B(l) = B(l) - 0.006328*(2/(1/ROCK(1,i,j,k)+1/ROCK(1,i,j,k-1)))*GB(2)*
GB(1) *PVT(3,i,j,k) *SPVT(3) *GB(3)/(GB(3) *PVT(2,i,j,k) *PVT(1,i,j,k))
IF (BOUNDARY(6).ne.0) THEN
B(l) = B(l) -	0.006328*ROCK(1,i,j,k)*GB(2)*GB(3)*PVT(3,i,j,k)/(GB(1)
*PVT(2,i,j,k)*PVT(1,i,j,k))*BOUNDARY(6)
A(l,l) = A(l,l)-0.006328*ROCK(1,i,j,k)*GB(2)*GB(3)*PVT(3,i,j,k)/(GB
(1)*PVT(2,i,j,k)*PVT(1,i,j,k))
END IF
A(l,l) = A(l,l)-A(l,l-x*y)
ELSE
A(l,l+x*y) = 0.00 6328*(2/(1/ROCK(1,i,j,k)+1/ROCK(1,i,j,k+1))) *GB(2) * GB(1) *PVT(3,i,j,k)/(GB(3) *PVT(2,i,j,k) *PVT(1,i,j,k))
A(l,l-x*y) = 0.00 6328*(2/(1/ROCK(1,i,j,k)+1/ROCK(1,i,j,k-1))) *GB(2) * GB(1) *PVT(3,i,j,k)/(GB(3) *PVT(2,i,j,k) *PVT(1,i,j,k))
B(l) = B(l) + 0.006328*(2/(1/ROCK(1,i,j,k)+1/ROCK(1,i,j,k + 1)))*GB(2)* GB(1)*PVT(3,i,j,k)*SPVT(3)*GB(3)/(GB(3)*PVT(2,i,j,k)*PVT(1,i,j,k))
- 0.006328*(2/(1/ROCK(1,i,j,k)+1/ROCK(1,i,j,k-1)))*GB(2)*GB(1)* PVT(3,i,j,k) *SPVT(3) *GB(3)/(GB(3) *PVT(2,i,j,k) *PVT(1,i,j,k))
A(l,l) = A(l,l)-A(l,l-x*y)-A(l,l+x*y)
END IF
IF (WELLS(i,j,k,1).ne.0) THEN
IF (WELLS(i,j,k,2).eq.0) THEN
B(l) = B(l)+0.00708*ROCK(2,i,j,k) *PVT(3,i,j,k) *GB(3) *(R(1,i,j,k)/2-WELLS(i,j,k,5))/(PVT(2,i,j,k) *PVT(1,i,j,k)* (LOG(SQRT (GB(1) *GB(2)/ Pi)/WELLS(i,j,k,6))-0.75+WELLS(i,j,k,7)))
A(l,l) = A(l,l)-0.00708*ROCK(2,i,j,k) *PVT(3,i,j,k) *GB(3)/(PVT(2,i,j,k ) *PVT(1,i,j,k)* (LOG(SQRT (GB(1) *GB(2)/Pi)/WELLS(i,j,k,6))-0.75 + WELLS(i,j,k,7)))
END IF
END IF
A(l,l+3*x*y*z) = GB(1) *GB(2) *GB(3)/tstep*ROCK(3,i,j,k)/PVT(2,i,j,k)
B(l) = B(l) + GB(1)*GB(2)*GB(3)/tstep*ROCK(3,i,j,k)/PVT(2,i,j,k)*R(4, i,j,k)
i=i+1
IF (i.gt.x) THEN
i=1
j=j+1
END IF
IF (j.gt.y) THEN
j=1
k=k+1
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
IF (k.gt.z) THEN
k=1
var='WAT'
END IF
ELSE IF (var.eq.'WAT') THEN !Generates the section of the matrix that relates with water equations.
IF (i.eq.1) THEN
A(l,l + 1) = 0.006328*(2/(1/ROCK(2,i,j,k)+1/ROCK(2,i+1,j,k)))*GB(2)*GB (3) *PVT(9,i,j,k)/(GB(1))
IF (BOUNDARY(1).ne.0) THEN
B(l) = B(l) -	0.006328*ROCK(2,i,j,k)*GB(2)*GB(3)*PVT(9,i,j,k)/(GB(1)
)*BOUNDARY(1)
A(l,l) = A(l,l)-0.006328*ROCK(2,i,j,k) *GB(2) *GB(3) *PVT(9,i,j,k)/(GB
(1))
END IF
A(l,l) = A(l,l)-A(l,l + 1)
ELSE IF (i.eq.x) THEN
A(l,l-1) = 0.006328*(2/(1/ROCK(2,i,j,k)+1/ROCK(2,i-1,j,k)))*GB(2)*GB (3) *PVT(9,i,j,k)/(GB(1))
IF (BOUNDARY(2).ne.0) THEN
B(l) = B(l) -	0.006328*ROCK(2,i,j,k)*GB(2)*GB(3)*PVT(9,i,j,k)/(GB(1)
)*BOUNDARY(2)
A(l,l) =A(l,l)-0.00 6328*ROCK(2,i,j,k) *GB(2) *GB(3) *PVT(9,i,j,k)/(GB
(1))
END IF
A(l,l) = A(l,l)-A(l,l-1)
ELSE
A(l,l+1) = 0.006328*(2/(1/ROCK(2,i,j,k)+1/ROCK(2,i+1,j,k)))*GB(2)*GB (3) *PVT(9,i,j,k)/(GB(1))
A(l,l-1) = 0.006328*(2/(1/ROCK(2,i,j,k)+1/ROCK(2,i-1,j,k)))*GB(2)*GB (3) *PVT(9,i,j,k)/(GB(1))
A(l,l) = A(l,l)-A(l,l-1)-A(l,l + 1)
END IF
IF (j.eq.1) THEN
A(l,l+x) = 0.006328*(2/(1/ROCK(2,i,j,k)+1/ROCK(2,i,j+1,k)))*GB(1)*GB (3) *PVT(9,i,j,k)/(GB(2))
IF (BOUNDARY(3).ne.0) THEN
B(l) = B(l) -	0.006328*ROCK(2,i,j,k)*GB(1)*GB(3)*PVT(9,i,j,k)/(GB(2)
)*BOUNDARY(3)
A(l,l) =A(l,l)-0.00 6328*ROCK(2,i,j,k) *GB(1) *GB(3) *PVT(9,i,j,k)/(GB
(2))
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
A(l,l) = A(l,l)-A(l,l+x)
ELSE IF (j.eq.y) THEN
A(l,l-x) = 0.006328*(2/(1/ROCK(2,i,j,k)+1/ROCK(2,i,j-1,k)))*GB(1)*GB
(3)	*PVT(9,i,j,k)/(GB(2))
IF (BOUNDARY(4).ne.0) THEN
B(l) = B(l) -	0.006328*ROCK(2,i,j,k)*GB(1)*GB(3)*PVT(9,i,j,k)/(GB(2)
)*BOUNDARY(4)
A(l,l) =A(l,l)-0.00 6328*ROCK(2,i,j,k) *GB(1) *GB(3) *PVT(9,i,j,k)/(GB
(1))
END IF
A(l,l) = A(l,l)-A(l,l-x)
ELSE
A(l,l+x) = 0.006328*(2/(1/ROCK(2,i,j,k)+1/ROCK(2,i,j+1,k)))*GB(1)*GB
(3) *PVT(9,i,j,k)/(GB(2))
A(l,l-x) = 0.006328*(2/(1/ROCK(2,i,j,k)+1/ROCK(2,i,j-1,k)))*GB(1)*GB
(3) *PVT(9,i,j,k)/(GB(2))
A(l,l) = A(l,l)-A(l,l-x)-A(l,l+x)
END IF
IF (k.eq.1) THEN
A(l,l+x*y) = 0.006328*(2/(1/ROCK(1,i,j,k)+1/ROCK(1,i,j,k + 1))) *GB(2) * GB(1)*PVT(9,i,j,k)/(GB(3))
B(l) = B(l) + 0.006328*(2/(1/ROCK(1,i,j,k)+1/ROCK(1,i,j,k+1)))*GB(2)*
GB(1) *PVT(9,i,j,k) *SPVT(1) *GB(3)/(GB(3))
IF (BOUNDARY(5).ne.0) THEN
B(l) = B(l) -	0.006328*ROCK(1,i,j,k)*GB(2)*GB(3)*PVT(9,i,j,k)/(GB(1)
)*BOUNDARY(5)
A(l,l) =A(l,l)-0.00 6328*ROCK(1,i,j,k) *GB(2) *GB(3) *PVT(9,i,j,k)/(GB
(1))
END IF
A(l,l) = A(l,l)-A(l,l+x*y)
ELSE IF (k.eq.z) THEN
A(l,l-x*y) = 0.00632 8*(2/(1/ROCK(1,i,j,k)+1/ROCK(1,i,j,k-1))) *GB(2) * GB(1)*PVT(9,i,j,k)/(GB(3))
B(l) = B(l) - 0.006328*(2/(1/ROCK(1,i,j,k)+1/ROCK(1,i,j,k-1)))*GB(2)*
GB(1) *PVT(9,i,j,k) *SPVT(1) *GB(3)/(GB(3))
IF (BOUNDARY(6).ne.0) THEN
B(l) = B(l) -	0.006328*ROCK(1,i,j,k)*GB(2)*GB(1)*PVT(9,i,j,k)/(GB(3)
)*BOUNDARY(6)
A(l,l) =A(l,l)-0.00 6328*ROCK(1,i,j,k) *GB(2) *GB(1) *PVT(9,i,j,k)/(GB
(3))
END IF
A(l,l) = A(l,l)-A(l,l-x*y)
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
ELSE
A(l,l+x*y) = 0.00 6328*(2/(1/ROCK(1,i,j,k)+1/ROCK(1,i,j,k+1))) *GB(2) * GB(1)*PVT(9,i,j,k)/(GB(3))
A(l,l-x*y) = 0.00 6328*(2/(1/ROCK(1,i,j,k)+1/ROCK(1,i,j,k-1))) *GB(2) * GB(1)*PVT(9,i,j,k)/(GB(3))
B(l) = B(l) + 0.006328*(2/(1/ROCK(1,i,j,k)+1/ROCK(1,i,j,k + 1)))*GB(2)* GB(1) *PVT(9,i,j,k) *SPVT(1) *GB(3)/(GB(3)) - 0.006328*(2/(1/ROCK(1,i ,j,k)+1/ROCK(1,i,j,k-1))) *GB(2) *GB(1) *PVT(9,i,j,k) *SPVT(1) *GB(3)/( GB(3))
A(l,l) = A(l,l)-A(l,l-x*y)-A(l,l+x*y)
END IF
IF (WELLS(i,j,k,1).ne.0) THEN
IF (WELLS(i,j,k,2).eq.0) THEN
B(l) = B(l)+0.00708*ROCK(2,i,j,k) *PVT(9,i,j,k) *GB(3) *(R(2,i,j,k)/2-WELLS(i,j,k,5))/((LOG(SQRT (GB(1) *GB(2)/Pi)/WELLS(i,j,k,6))-0.75 + WELLS(i,j,k,7)))
A(l,l) = A(l,l)-0.00708*ROCK(2,i,j,k) *PVT(9,i,j,k) *GB(3)/((LOG(SQRT (
GB(1) *GB(2)/Pi)/WELLS(i,j,k,6))-0.7 5+WELLS(i,j,k,7)))
ELSE IF (WELLS(i,j,k,2).eq.1) THEN
B(l) = B(l)-0.00708*ROCK(2,i,j,k) *PVT(9,i,j,k) *GB(3) *(R(2,i,j,k)/2-WELLS(i,j,k,5))/(PVT(2,i,j,k) *PVT(1,i,j,k)* (LOG(SQRT (GB(1) *GB(2)/ Pi)/WELLS(i,j,k,6))-0.75+WELLS(i,j,k,7)))
A(l,l) = A(l,l)+0.00708*ROCK(2,i,j,k) *PVT(9,i,j,k) *GB(3)/(PVT(2,i,j,k ) *PVT(1,i,j,k)* (LOG(SQRT (GB(1) *GB(2)/Pi)/WELLS(i,j,k,6))-0.75 + WELLS(i,j,k,7)))
END IF
END IF
A(l,l + 3*x*y*z) = GB(1)*GB(2)*GB(3)/tstep*ROCK(3,i,j,k)
B(l) = B(l) + GB(1)*GB(2)*GB(3)/tstep*ROCK(3,i,j,k)*R(5,i,j,k)
i=i+1
IF (i.gt.x) THEN
i=1
j=j+1
END IF
IF (j.gt.y) THEN j=1
k=k+1
END IF
IF (k.gt.z) THEN
k=1
var='GAS'
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
ELSE IF (var.eq.'GAS') THEN !Generates the section of the matrix that relates with gas equations.
! Here starts the gas equations. Those equations doesn't consider the Dissolved Gas.
IF (i.eq.1) THEN
A(l,l + 1) = 0.006328*(2/(1/ROCK(2,i,j,k)+1/ROCK(2,i+1,j,k)))*GB(2)*GB (3) *PVT(10,i,j,k)/(GB(1) *PVT(7,i,j,k) *PVT(8,i,j,k))
IF (BOUNDARY(1).ne.0) THEN
B(l) = B(l) -	0.006328*ROCK(2,i,j,k)*GB(2)*GB(3)*PVT(10,i,j,k)/(GB
(1) *PVT(7,i,j,k) *PVT(8,i,j,k)) *BOUNDARY(1)
A(l,l) =A(l,l)-0.00 6328*ROCK(2,i,j,k) *GB(2) *GB(3) *PVT(10,i,j,k)/(GB (1) *PVT(7,i,j,k) *PVT(8,i,j,k))
END IF
A(l,l) = A(l,l)-A(l,l + 1)
ELSE IF (i.eq.x) THEN
A(l,l-1) = 0.006328*(2/(1/ROCK(2,i,j,k)+1/ROCK(2,i-1,j,k)))*GB(2)*GB (3) *PVT(10,i,j,k)/(GB(1) *PVT(7,i,j,k) *PVT(8,i,j,k))
IF (BOUNDARY(2).ne.0) THEN
B(l) = B(l) -	0.006328*ROCK(2,i,j,k)*GB(2)*GB(3)*PVT(10,i,j,k)/(GB
(1) *PVT(7,i,j,k) *PVT(8,i,j,k)) *BOUNDARY(2)
A(l,l) =A(l,l)-0.00 6328*ROCK(2,i,j,k) *GB(2) *GB(3) *PVT(10,i,j,k)/(GB
(1)	*PVT(7,i,j,k) *PVT(8,i,j,k))
END IF
A(l,l) = A(l,l)-A(l,l-1)
ELSE
A(l,l+1) = 0.006328*(2/(1/ROCK(2,i,j,k)+1/ROCK(2,i+1,j,k)))*GB(2)*GB (3) *PVT(10,i,j,k)/(GB(1) *PVT(7,i,j,k) *PVT(8,i,j,k))
A(l,l-1) = 0.006328*(2/(1/ROCK(2,i,j,k)+1/ROCK(2,i-1,j,k)))*GB(2)*GB
(3) *PVT(10,i,j,k)/(GB(1) *PVT(7,i,j,k) *PVT(8,i,j,k))
A(l,l) = A(l,l)-A(l,l-1)-A(l,l + 1)
END IF
IF (j.eq.1) THEN
A(l,l+x) = 0.006328*(2/(1/ROCK(2,i,j,k)+1/ROCK(2,i,j+1,k)))*GB(1)*GB (3) *PVT(10,i,j,k)/(GB(2) *PVT(7,i,j,k) *PVT(8,i,j,k))
IF (BOUNDARY(3).ne.0) THEN
B(l) = B(l) -	0.006328*ROCK(2,i,j,k)*GB(1)*GB(3)*PVT(10,i,j,k)/(GB
(2)	*PVT(7,i,j,k) *PVT(8,i,j,k)) *BOUNDARY(3)
A(l,l) =A(l,l)-0.00 6328*ROCK(2,i,j,k) *GB(1) *GB(3) *PVT(10,i,j,k)/(GB
(2)	*PVT(7,i,j,k) *PVT(8,i,j,k))
END IF
A(l,l) = A(l,l)-A(l,l+x)
ELSE IF (j.eq.y) THEN
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
A(l,l-x) = 0.006328*(2/(1/ROCK(2,i,j,k)+1/ROCK(2,i,j-1,k)))*GB(1)*GB
(3)	*PVT(10,i,j,k)/(GB(2) *PVT(7,i,j,k) *PVT(8,i,j,k))
IF (BOUNDARY(4).ne.0) THEN
B(l) = B(l) -	0.006328*ROCK(2,i,j,k)*GB(1)*GB(3)*PVT(10,i,j,k)/(GB
(2)	*PVT(7,i,j,k) *PVT(8,i,j,k)) *BOUNDARY(4)
A(l,l) = A(l,l)-0.006328*ROCK(2,i,j,k) *GB(1) *GB(3) *PVT(10,i,j,k)/(GB
(2)	*PVT(7,i,j,k) *PVT(8,i,j,k))
END IF
A(l,l) = A(l,l)-A(l,l-x)
ELSE
A(l,l+x) = 0.006328*(2/(1/ROCK(2,i,j,k)+1/ROCK(2,i,j+1,k)))*GB(1)*GB
(3)	*PVT(10,i,j,k)/(GB(2) *PVT(7,i,j,k) *PVT(8,i,j,k))
A(l,l-x) = 0.006328*(2/(1/ROCK(2,i,j,k)+1/ROCK(2,i,j-1,k)))*GB(1)*GB
(3)	*PVT(10,i,j,k)/(GB(2) *PVT(7,i,j,k) *PVT(8,i,j,k))
A(l,l) = A(l,l)-A(l,l-x)-A(l,l+x)
END IF
IF (k.eq.1) THEN
A(l,l+x*y) = 0.00 6328*(2/(1/ROCK(1,i,j,k)+1/ROCK(1,i,j,k+1))) *GB(2) *
GB(1) *PVT(10,i,j,k)/(GB(3) *PVT(7,i,j,k) *PVT(8,i,j,k))
B(l) = B(l) + 0.006328*(2/(1/ROCK(1,i,j,k)+1/ROCK(1,i,j,k + 1)))*GB(2)* GB(1) *PVT(10,i,j,k) *SPVT(2) *GB(3)/(GB(3) *PVT(7,i,j,k) *PVT(8,i,j,k) )
IF (BOUNDARY(5).ne.0) THEN
B(l) = B(l) -	0.006328*ROCK(1,i,j,k)*GB(2)*GB(1)*PVT(10,i,j,k)/(GB
(3)	*PVT(7,i,j,k) *PVT(8,i,j,k)) *BOUNDARY(5)
A(l,l) =A(l,l)-0.00 6328*ROCK(1,i,j,k) *GB(2) *GB(1) *PVT(10,i,j,k)/(GB
(3) *PVT(7,i,j,k) *PVT(8,i,j,k))
END IF
A(l,l) = A(l,l)-A(l,l+x*y)
ELSE IF (k.eq.z) THEN
A(l,l-x*y) = 0.00 6328*(2/(1/ROCK(1,i,j,k)+1/ROCK(1,i,j,k-1))) *GB(2) *
GB(1) *PVT(10,i,j,k)/(GB(3) *PVT(7,i,j,k) *PVT(8,i,j,k))
B(l) = B(l) - 0.006328*(2/(1/ROCK(1,i,j,k)+1/ROCK(1,i,j,k-1)))*GB(2)*
GB(1) *PVT(10,i,j,k) *SPVT(2) *GB(3)/(GB(3) *PVT(7,i,j,k) *PVT(8,i,j,k) )
IF (BOUNDARY(6).ne.0) THEN
B(l) = B(l) -	0.006328*ROCK(1,i,j,k)*GB(2)*GB(3)*PVT(10,i,j,k)/(GB
(1) *PVT(7,i,j,k) *PVT(8,i,j,k)) *BOUNDARY(6)
A(l,l) = A(l,l)-0.006328*ROCK(1,i,j,k) *GB(2) *GB(3) *PVT(10,i,j,k)/(GB (1) *PVT(7,i,j,k) *PVT(8,i,j,k))
END IF
A(l,l) = A(l,l)-A(l,l-x*y)
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
ELSE
A(l,l+x*y) = 0.006328*(2/(1/ROCK(1,i,j,k)+1/ROCK(1,i,j,k + 1))) *GB(2) *
GB(1) *PVT(10,i,j,k)/(GB(3) *PVT(7,i,j,k) *PVT(8,i,j,k))
A(l,l-x*y) = 0.00632 8*(2/(1/ROCK(1,i,j,k)+1/ROCK(1,i,j,k-1))) *GB(2) *
GB(1) *PVT(10,i,j,k)/(GB(3) *PVT(7,i,j,k) *PVT(8,i,j,k))
B(l) = B(l) + 0.006328*(2/(1/ROCK(1,i,j,k)+1/ROCK(1,i,j,k+1)))*GB(2)*
GB(1) *PVT(10,i,j,k) *SPVT(2) *GB(3)/(GB(3) *PVT(7,i,j,k) *PVT(8,i,j,k) ) - 0.006328*(2/(1/ROCK(1,i,j,k)+1/ROCK(1,i,j,k-1))) *GB(2) *GB(1) * PVT(10,i,j,k) *SPVT(2) *GB(3)/(GB(3) *PVT(7,i,j,k) *PVT(8,i,j,k))
A(l,l) = A(l,l)-A(l,l-x*y)-A(l,l+x*y)
END IF
! Here starts the Dissolved Gas equations.
IF (i.eq.1) THEN
A(l,-2*x*y*z+l+1) = 0.006328*(2/(1/ROCK(2,i,j,k)+1/ROCK(2,i+1,j,k)))*
GB(2) *GB(3) *PVT(3,i,j,k)/(GB(1) *PVT(2,i,j,k) *PVT(1,i,j,k))* (PVT(6, i,j,k)+PVT(6,i + 1,j,k))/2
IF (BOUNDARY(1).ne.0) THEN
B(l) = B(l) -	0.006328*ROCK(2,i,j,k)*GB(2)*GB(3)*PVT(3,i,j,k)/(GB(1)
*PVT(2,i,j,k)*PVT(1,i,j,k))*BOUNDARY(1)*(PVT(6,i,j,k))
A(l,-2*x*y*z+l) = A(l,-2*x*y*z+l)-0.006328 *ROCK(2,i,j,k)*GB(2)*GB(3)*
PVT(3,i,j,k)/(GB(1) *PVT(2,i,j,k) *PVT(1,i,j,k)) *(PVT(6,i,j,k))
END IF
A(l,-2*x*y*z+l) = A(l,-2*x*y*z+l)-A(l,-2*x*y*z+l+1)
ELSE IF (i.eq.x) THEN
A(l,-2*x*y*z+l-1) = 0.006328*(2/(1/ROCK(2,i,j,k)+1/ROCK(2,i-1,j,k)))*
GB(2) *GB(3) *PVT(3,i,j,k)/(GB(1) *PVT(2,i,j,k) *PVT(1,i,j,k))* (PVT(6, i,j,k)+PVT(6,i-1,j,k))/2
IF (BOUNDARY(2).ne.0) THEN
B(l) = B(l) -	0.006328*ROCK(2,i,j,k)*GB(2)*GB(3)*PVT(3,i,j,k)/(GB(1)
*PVT(2,i,j,k)*PVT(1,i,j,k))*BOUNDARY(2)*(PVT(6,i,j,k))
A(l,-2*x*y*z+l) = A(l,-2*x*y*z+l)-0.006328 *ROCK(2,i,j,k)*GB(2)*GB(3)*
PVT(3,i,j,k)/(GB(1) *PVT(2,i,j,k) *PVT(1,i,j,k)) *(PVT(6,i,j,k))
END IF
A(l,-2*x*y*z+l) = A(l,-2*x*y*z+l)-A(l,-2*x*y*z+l-1)
ELSE
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
END IF
IF (j.eq.1) THEN
A(l,-2 *x*y*z+l+x) = 0.006328*(2/(1/ROCK(2,i,j,k)+1/ROCK(2,i,j+1,k))) * GB(1) *GB(3) *PVT(3,i,j,k)/(GB(2) *PVT(2,i,j,k) *PVT(1,i,j,k))* (PVT(6, i,j,k)+PVT(6,i,j + 1,k))/2
IF (BOUNDARY(3).ne.0) THEN
B(l) = B(l) -	0.006328*ROCK(2,i,j,k)*GB(1)*GB(3)*PVT(3,i,j,k)/(GB(2)
*PVT(2,i,j,k) *PVT(1,i,j,k)) *BOUNDARY(3) * (PVT(6,i,j,k))
A(l,-2*x*y*z+l) = A(l,-2*x*y*z+l)-0.006328 *ROCK(2,i,j,k)*GB(1)*GB(3)* PVT(3,i,j,k)/(GB(2) *PVT(2,i,j,k) *PVT(1,i,j,k)) *(PVT(6,i,j,k))
END IF
A(l,-2*x*y*z+l) = A(l,-2*x*y*z+l)-A(l,-2*x*y*z+l+x)
ELSE IF (j.eq.y) THEN
A(l,-2 *x*y*z+l-x) = 0.006328*(2/(1/ROCK(2,i,j,k)+1/ROCK(2,i,j-1,k))) * GB(1) *GB(3) *PVT(3,i,j,k)/(GB(2) *PVT(2,i,j,k) *PVT(1,i,j,k))* (PVT(6, i,j,k)+PVT(6,i,j-1,k))/2
IF (BOUNDARY(4).ne.0) THEN
B(l) = B(l) -	0.006328*ROCK(2,i,j,k)*GB(1)*GB(3)*PVT(3,i,j,k)/(GB(2)
*PVT(2,i,j,k) *PVT(1,i,j,k)) *BOUNDARY(4) * (PVT(6,i,j,k))
A(l,-2*x*y*z+l) = A(l,-2*x*y*z+l)-0.006328 *ROCK(2,i,j,k)*GB(1)*GB(3)* PVT(3,i,j,k)/(GB(2) *PVT(2,i,j,k) *PVT(1,i,j,k)) *(PVT(6,i,j,k))
END IF
A(l,-2*x*y*z+l) = A(l,-2*x*y*z+l)-A(l,-2*x*y*z+l-x)
ELSE
A(l,-2 *x*y*z+l+x) = 0.006328*(2/(1/ROCK(2,i,j,k)+1/ROCK(2,i,j+1,k))) * GB(1) *GB(3) *PVT(3,i,j,k)/(GB(2) *PVT(2,i,j,k) *PVT(1,i,j,k))* (PVT(6, i,j,k)+PVT(6,i,j + 1,k))/2
A(l,-2 *x*y*z+l-x) = 0.006328*(2/(1/ROCK(2,i,j,k)+1/ROCK(2,i,j-1,k))) * GB(1) *GB(3) *PVT(3,i,j,k)/(GB(2) *PVT(2,i,j,k) *PVT(1,i,j,k))* (PVT(6, i,j,k)+PVT(6,i,j-1,k))/2
A(l,-2*x*y*z+l) = A(l,-2*x*y*z+l)-A(l,-2*x*y*z+l-x)-A(l,-2*x*y*z+l+x) END IF
IF (k.eq.1) THEN
A(l,-2 *x*y*z+l+x*y) = 0.006328*(2/(1/ROCK(1,i,j,k)+1/ROCK(1,i,j,k+1)) ) *GB(2) *GB(1) *PVT(3,i,j,k)/(GB(3) *PVT(2,i,j,k) *PVT(1,i,j,k))* (PVT (6,i,j,k)+PVT(6,i,j,k + 1))/2
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
A(l,-2*x*y*z+l) = A(l,-2*x*y*z+l)-0.006328*ROCK(1,i,j,k)*GB(2)*GB(1)*
PVT(3,i,j,k)/(GB(3) *PVT(2,i,j,k) *PVT(1,i,j,k)) *(PVT(6,i,j,k))
END IF
A(l,-2*x*y*z+l) = A(l,-2*x*y*z+l)-A(l,-2*x*y*z+l+x*y)
ELSE IF (k.eq.z) THEN
A(l,-2*x*y*z+l-x*y) = 0.006328*(2/(1/ROCK(1,i,j,k)+1/ROCK(1,i,j,k-1)) ) *GB(2) *GB(1) *PVT(3,i,j,k)/(GB(3) *PVT(2,i,j,k) *PVT(1,i,j,k))* (PVT (6,i,j,k)+PVT(6,i,j,k-1))/2
B(l) = B(l) - 0.006328*(2/(1/ROCK(1,i,j,k)+1/ROCK(1,i,j,k-1)))*GB(2)* GB(1)*PVT(3,i,j,k)*SPVT(3)*GB(3)/(GB(3)*PVT(2,i,j,k)*PVT(1,i,j,k)) * (PVT(6,i,j,k)+PVT(6,i,j,k-1))/2
IF (BOUNDARY(6).ne.0) THEN
B(l) = B(l) -	0.006328*ROCK(1,i,j,k)*GB(2)*GB(3)*PVT(3,i,j,k)/(GB(1)
*PVT(2,i,j,k)*PVT(1,i,j,k))*BOUNDARY(6)*(PVT(6,i,j,k))
A(l,-2*x*y*z+l) = A(l,-2*x*y*z+l)-0.006328*ROCK(1,i,j,k)*GB(2)*GB(3)*
PVT(3,i,j,k)/(GB(1)*PVT(2,i,j,k)*PVT(1,i,j,k))*(PVT(6,i,j,k))
END IF
A(l,-2*x*y*z+l) = A(l,-2*x*y*z+l)-A(l,-2*x*y*z+l-x*y)
ELSE
A(l,-2*x*y*z+l+x*y) = 0.006328*(2/(1/ROCK(1,i,j,k)+1/ROCK(1,i,j,k+1)) )*GB(2)*GB(1)*PVT(3,i,j,k)/(GB(3)*PVT(2,i,j,k)*PVT(1,i,j,k))*(PVT (6,i,j,k)+PVT(6,i,j,k+1))/2
A(l,-2*x*y*z+l-x*y) = 0.006328*(2/(1/ROCK(1,i,j,k)+1/ROCK(1,i,j,k-1)) )*GB(2)*GB(1)*PVT(3,i,j,k)/(GB(3)*PVT(2,i,j,k)*PVT(1,i,j,k))*(PVT (6,i,j,k)+PVT(6,i,j,k-1))/2
B(l) = B(l) + 0.006328*(2/(1/ROCK(1,i,j,k)+1/ROCK(1,i,j,k+1)))*GB(2)* GB(1)*PVT(3,i,j,k)*SPVT(3)*GB(3)/(GB(3)*PVT(2,i,j,k)*PVT(1,i,j,k)) *(PVT(6,i,j,k)+PVT(6,i,j,k+1))/2 - 0.006328*(2/(1/ROCK(1,i,j,k)+1/ ROCK(1,i,j,k-1)))*GB(2)*GB(1)*PVT(3,i,j,k)*SPVT(3)*GB(3)/(GB(3)* PVT(2,i,j,k)*PVT(1,i,j,k))*(PVT(6,i,j,k)+PVT(6,i,j,k-1))/2
A(l,-2*x*y*z+l) = A(l,-2*x*y*z+l)-A(l,-2*x*y*z+l-x*y)-A(l,-2*x*y*z+l+ x*y)
END IF
IF (WELLS(i,j,k,1).ne.0) THEN
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
B(l) = B(l)+0.00708*ROCK(2,i,j,k) *PVT(3,i,j,k) *GB(3) *(R(1,i,j,k)/2-
WELLS(i,j,k,5))/(PVT(2,i,j,k) *PVT(1,i,j,k)* (LOG(SQRT (GB(1) *GB(2)/ Pi)/WELLS(i,j,k,6))-0.75+WELLS(i,j,k,7)))* (PVT(6,i,j,k))
A(l,-2*x*y*z+l) = A(l,-2*x*y*z+l)-0.00708 *ROCK(2,i,j,k)*PVT(3,i,j,k)* GB(3)/(PVT(2,i,j,k) *PVT(1,i,j,k) * (LOG(SQRT (GB(1) *GB(2)/Pi)/WELLS(i ,j,k,6))-0.7 5+WELLS(i,j,k,7)))* (PVT(6,i,j,k))
ELSE IF (WELLS(i,j,k,2).eq.1) THEN
B(l) = B(l)-0.00708*ROCK(2,i,j,k) *PVT(10,i,j,k) *GB(3) *(R(2,i,j,k)/2-WELLS(i,j,k,5))/(PVT(7,i,j,k) *PVT(8,i,j,k)* (LOG(SQRT (GB(1) *GB(2)/ Pi)/WELLS(i,j,k,6))-0.75+WELLS(i,j,k,7)))
A(l,l) = A(l,l)+0.00708*ROCK(2,i,j,k) *PVT(10,i,j,k) *GB(3)/(PVT(7,i,j, k) *PVT(8,i,j,k) * (LOG(SQRT (GB(1) *GB(2)/Pi)/WELLS(i,j,k,6))-0.75 + WELLS(i,j,k,7)))
END IF
END IF
A(l,l+3*x*y*z) = GB(1)*GB(2)*GB(3)/tstep*ROCK(3,i,j,k)
B(l) = B(l) + GB(1)*GB(2)*GB(3)/tstep*ROCK(3,i,j,k)*R(5,i,j,k)
A(l,l+x*y*z) = GB(1) *GB(2) *GB(3)/tstep*ROCK(3,i,j,k)/PVT(2,i,j,k)*( PVT(6,i,j,k))
B(l) = B(l) + GB(1)*GB(2)*GB(3)/tstep*ROCK(3,i,j,k)/PVT(2,i,j,k)*R(4, i,j,k)* (PVT(6,i,j,k))
i=i + 1
IF (i.gt.x) THEN
i=1
j = j + 1
END IF
IF (j.gt.y) THEN
j=1
k=k + 1
END IF
IF (k.gt.z) THEN
k=1
var='SAT'
END IF
ELSE IF (var.eq.'SAT') THEN
A(l,l) =	1
A(l,x*y*z+l) = 1
A(l,2*x*y*z+l) = 1
B(l) = 1
i=i + 1
IF (i.gt.x) THEN
i=1
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
j = j + 1
END IF
IF (j.gt.y) THEN j = 1
k=k + 1
END IF
IF (k.gt.z) THEN
k=1
var='COW'
END IF
ELSE IF (var.eq.'COW')
A(l,l-4*x*y*z) = 1
A(l,l-3*x*y*z) = -1
B(l) = PVT(4,i,j,k) i=i + 1
IF (i.gt.x) THEN
i=1
j = j + 1
END IF
IF (j.gt.y) THEN j=1
k=k + 1
END IF
IF (k.gt.z) THEN
k=1
var='COG'
END IF
ELSE IF (var.eq.'COG')
A(l,l-5*x*y*z) = 1
A(l,l-3*x*y*z) = -1
B(l) = PVT(5,i,j,k) i=i + 1
IF (i.gt.x) THEN
i=1
j = j + 1
END IF
IF (j.gt.y) THEN j=1
k=k + 1
END IF
IF (k.gt.z) THEN
k=1
THEN
THEN
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
var='END'
END IF
END IF
END DO
i=1
j = 1
k=1
counter=1
DO l=1,n,1 !this section creates the initial guess
GUESS(l) = R(counter,i,j,k)
i=i + 1
IF (i.gt.x) THEN
i=1
j = j + 1
END IF
IF (j.gt.y) THEN
j=1
k=k + 1
END IF
IF (k.gt.z) THEN
k=1
counter = counter + 1
END IF
END DO
dA = A
call sgefa(dA,n,n,ipvt,info)
call sgedi(dA,n,n,ipvt,det,work,01)
GUESSold = GUESS
counter = 1
DO WHILE (test.eq.0)
counter = counter + 1
RT = (MATMUL(A,GUESS)-B)
GUESS = GUESS + MATMUL(dA,RT)
DO l=1,n,1
diff = diff + abs(GUESS(l)-GUESSold(l))
END DO
IF (diff.le.SETUP(2)) THEN
test=1
END if
IF (counter.gt.setup(1)) then
test=2
PRINT*
The process didn't converge after
counter
iterations
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
486
487
PRINT*, "In order to proceed, it will be used the call system ('pause')
END IF
END DO
CALL exportar(x, y, z, n,GUESS, RRES, R, GB, ROCK,
END SUBROUTINE
SUBROUTINE exportar(x, y, z, n,GUESS, RRES, R, GB, INTEGER i, j, k, l, m, n, x, y, z
REAL GUESS(n), RRES(6), R(6,x,y,z), GB(3), ROCK(3, z)
i = 1
j = 1
k = 1
m = 1
RRES = 0
DO l=1,n,1
R(m,i,j,k) = GUESS(l)
i=i + 1
IF (i .gt. x) THEN
i=1
j = j + 1
END IF
IF (j .gt. y) THEN
j=1
k=k + 1
END IF
IF (k .gt. z) THEN
k=1
m=m+1
END IF
END DO
DO i=1,x,1
DO j=1,y,1
DO k=1,z,1
RRES(1) = RREES(1) + GB(1)*GB(2)*GB(3)*ROCK(3,i,j,
(2,x,y,z)
RRES(2) = RREES(2) + GB(1)*GB(2)*GB(3)*ROCK(3,i,j,
last guess"
PVT)
ROCK, PVT)
x,y,z), PVT(10,x,y,
k) *R(4,i,j,k)/PVT
k) *R(5,i,j,k)
488 RRES(3) = RREES(3) + GB(1)*GB(2)*GB(3)*ROCK(3,i,j,k)*R(4,i,j,k)*PVT (6,i,j,k)/PVT(2,x,y,z) + GB(1) *GB(2) *GB(3) *ROCK(3,i,j,k)*R(6,i,j,k )/PVT(7,x,y,z)
489	END	DO
490	END	DO
491	END	DO
492	END	SUBROUTINE
APÊNDICE B - Input utilizado nos estudos de caso
Tabela 1 - Caso 1 - Reservatório convencional
Propriedade
Pressão inicial no Datum Vazão do poço
Permeabilidade
Porosidade
Saturação de óleo
Saturação de água
Saturação de gás
Número de blocos
Dimensões
Ax
Ay
Az
P
1 cow
P
1 cog
Valor utilizado 2500 psi
Restrito a 1500 BBL/dia
70 mD
20%
50%
30%
20%
500 10x10x5 blocos
100 ft
100 ft
10 ft
0.9 psi
0.3 psi
Tabela 2 - Caso 2 - Reservatório com ausência de capa de gás
Propriedade
Pressão inicial no Datum Vazão do poço
Permeabilidade
Porosidade
Saturação de óleo
Saturação de água
Saturação de gás
Número de blocos
Dimensões
Ax
Ay
Az
P
1 cow
P
Pcog
Valor utilizado 2500 psi
Restrito a 1500 BBL/dia
70 mD
20%
65%
35%
00%
500 10x10x5 blocos
100 ft
100 ft
10 ft
0.7 psi
0.3 psi
Tabela 3 - Reservatório quantidade reduzida de água de formação
Propriedade
Pressão inicial no Datum Vazão do poço Permeabilidade
Porosidade
Saturação de óleo
Saturação de água
Saturação de gás
Número de blocos
Dimensões
Ax
Ay
Az
P
1 cow
P
1 cog
Valor utilizado 2500 psi
Restrito a 1500 BBL/dia
70 mD
20%
75%
05%
20%
500 10x10x5 blocos
100 ft
100 ft
10 ft
2.3	psi
0.3 psi</field>
	</doc>
</add>