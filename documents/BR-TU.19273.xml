<?xml version="1.0" encoding="utf-8"?>
<add>
	<doc>
		<field name="docid">BR-TU.19273</field>
		<field name="filename">2641_Nogueira_JoseRoberto_D.pdf</field>
		<field name="filetype">PDF</field>
		<field name="text">
Simulação da injeção de bancos 
de água com polimeros na 
recuperação de petróleo. 

José Roberto Nogueira 

"" --

" i4 I c .'. f" L UOB.IOr'fC.\ e'I!JIIT'IItM,. t 



Simulação da injeção de bancos de água com 
polímeros na recuperação de petróleo. 

Banca Examinadora: 

Este exempbr corresponde a redação final da 
tese de doutorado devidamente corrigida e 
defendida por José Roberto Nogueira e 
aprovada pela comissão julgadora. 

Campinas, 28 de Janeiro de 2000 

Profa. Dra. Maria Cristina de Castro Cunha 
Orientadora 

1- Prof. Dr. Antonio Claudio de França Corrêa 
2- Prof. Dr. Dan Marchesin 
3- Pro f. Dr. José Luiz Bold.rini 
4- Prof. Dr. :Milton da Costa Lopes Filho 

Tese apresentada ao Instituto de Matemática, 
Estatística e Computação Cientifica, 
UNICAMP, como requisito necessário para 
obtenção do Título de Doutor em Matemática 
Aplicada 



---········· 

i --···········-· . ··-:·o 
I 1-J __ / o 

---'-·~·J.Jo 'N , 
--·--...:'~0"?.""' . 

N689s 

FICHA CATALOGRÁFICA ELABORADA PELA 
BIBLIOTECA CENTRAL DA UNICAMP 

Nogueira, José Roberto 
Simulação da injeção de bancos de água com 

polímeros na recuperação do petróleo I José Roberto 
Nogueira. - Campinas, SP : [s.n.], 2000. 

Orientador : Maria Cristina Cunha. 
Tese (doutorado) -Universidade Estadual de 

Campinas, Instituto de Matemática, Estatística e Ciência 
da Computação. 

1. Riemann-Hilbert, Problemas de. 2. Recuperação 
secundária do petróleo. 3. Métodos de simulação. 
I. Cunha, Maria Cristina. 11. Universidade Estadual de 
Campinas. Instituto de Matemática, Estatística e Ciência da 
Computação. 111. Título. 



Tese de Doutorado defendida e aprovada em 10 de dezembro de 1999 

Pela Banca Examinadora composta pelos Profs. Drs. 

Prof (a). Dr (a). MARIA CRISTINA DE CASTRO CUNHA 

Prof (a). Dr (a). JOSÉ LUIZ BOLDRINI 

Prof(a). Dr (a). MILTON DA COSTA LOPES FILHO 
I 

Prof (a). Dr (a). DAN MARCHESIN 



Dedicatória 

Dedico este trabalho à meus pais, 
minha esposa 
e meu filho. 



Agradecimentos 

Agradeço inicialmente a DEUS, pelo dia, pela noite~ pelas flores e, enfim pela vida. 
Agradeço a todos os amigos do dep-artamento de matemática da FCT ~UNESP que 

sempre torceram pelo meu sucesso. Em especial aos Profs. A ylton, Suetonio e Ga.bcid. 
Agradeço a todos os amigos que fiz no IMECC, alguns dos quais convivi muito. Em 

especial à Fátima, secretária da matemática aplicada, pelo carinho com que sempre me 
tratou. 

Agradeço ao amigos Sidinei, Maria, Cris e Thiago que me deram acolhida e 
participaram de muitos momentos dificeis desta caminhada. 

Agradeço aos amigos das quintas-feiras pela força, pelo incentivo e pela amizade, 
especialmente a Elza, V era e Orlando. 

Agradeço ao amigo Prof. Messias, pelo incentivo e por ter acreditado no meu 
trabalho. 

Agradeço especialmente a minha orientadora, Cristina, pela orientação, pela amizade 
e pela paciência que teve durante estes anos para comigo. 

Agradeço a meus pais, José e Cida pela formação e educação que me deram, por eles 
serem pessoas lindas e serem meus pais. Agradeço também a meus irmãos que sempre 
torceram por mim.. 

Agradeço também a Zélia e Braulio que mesmo estando longe estavam torcendo e 
rezando por mim. Agradeço também ao amigo " véio " vulgo Jorge Luis por ter participado 
e nos ajudado em alguns momentos difíceis. 

Agradeço a minha mulher Socorro e ao meu filho Bruno por serem marav.ilhosos, 
por terem. aturado nllnb.as neuras durante este tempo todo e pelo grande amor que sinto por 
eles. 

Este trabalho teve o apoio financeiro da CAPES-PICO 



Resumo 

Neste trabalho abordamos o problema da injeção de bancos de água com polímeros 
na recuperação de petróleo. O modelo matemático consiste num sistema de leis 
de conservação com condições iniciais e de fronteira apropriadas. Utilizamos as 
soluções do problema de Riemann ( [ISA] e [JOH] ) associado a este sistema 
para propor um algoritmo que calcula os perfis de saturação de água s(x, t). As 
condições de contorno são ditadas pelo tamanho dos bancos de água (ou água 
com polímero) e a concentração de polímero usada no poço de injeção. As difi-
culdades encontradas se devem ao tratamento das descontinuidades que surgem 
devido as interações entre rarefações e choques que se formam devido a solução do 
problema de Riemann e as descontinuidades nas condições de contorno. L7m pro-
grama computacional foi elaborado para calcular as interações entre os choques, 
a solução do problema de Riemann e a solução do problema da injeção de bancos. 
Foram considerados os casos com e sem adsorção do polímero pelo meio poroso. 
Simulamos a recuperação de óleo em alguns casos onde variamos o tamanho dos 
bancos, a concentração de polímero além das condições iniciais nos reservatórios. 
Fizemos comparações entre o algoritmo proposto e um esquema numérico do tipo 
upwind. 



Abstract 

In this presentation we work on the problem of the injection of water banks with 
polymers in enhanced oil recove:ry. The mathematical model consists of a system of 
conservation laws with appropriate initial conditions and of boundaries. We have 
used the solutions of the Riemann problem ( [ISA] and [JOH] ) associated to this 
system to propose an algorithm which calculates the profiles of saturation of water 
s(x,t). The outlining conditions are given through the size of the water banks ( 
or water whit polymers ) and the polymer concentration used in the injector well. 
The difficulties found are due to the treatment of the discontinuities that appear 
due to the interaction among rarefaction and shocks that are formed because 
of the solution o f the Riemann problem and the discontinuities in the outlining 
conditions. We have made program computer which calculates the interaction 
among the shocks, the solution of the Riemann problem and the solution of the 
banks injection problem. Cases with or without polymer adsorption by the porous 
environment have been considered. Some cases of recuperation of oil have been 
simulated whereas the size of the banks and polymer was varied, as well as the 
initial conditions of the reservoir. The proposed algorithm and numerical scheme 
have been compareci. 



CONTEÚDO 

1 Introdução 
1.1 Revisão Bibliográfica: ............ . 

1.1.1 O Trabalho de Isaacson . . . . . . . . 
1.1.2 O Trabalho de Johansen &amp;amp; Winther . 
1.1.3 Os Trabalhos de Barenblat &amp;amp; outros e Bedrikovetsky 

1.2 Objetivos: . . . . . ... 
1.3 Organização do Trabalho: 

2 O Problema de Riemann 

2.1 A injeção de água . . . . . . . . . . . . ..... . 
2.2 A injeção de polímero ( polymer-flooding ) ..... . 
2.3 A solução do Problema de Riemann: sem adsorção. 

2.3.1 CASO A : c,~ c,. . ......... . 
2.3.2 CASO R u, E L e u, E L 1 U L 2 U L3 ... . 
2.3.3 CASO C : u, E R e u, E R1 u R2 u R 3 .. . 

2.4 A solução do Problema de Riemann: com adsorção. 
2.4.1 CASO D : c, ~c, . 
2.4.2 CASO E : c, &amp;lt;c, . . . . . . . 
2.4.3 CASO F : c, &gt; c, ... 

2.5 Algoritmo e experimentos numéricos 

3 A Injeção de bancos 
3.1 Adimensionalização e cálculos preliminares ....... . 
3.2 Algoritmo para a solução: . . . . . . . . . . . . . . . .. 

3.2.1 t &amp;lt;t 0 (solução da equação de Buckley-Leverett):. 
3.2.2 t ~ t 0 ( Interação entre s-onda e c-choque ) 

3.3 A injeção de três bancos . . . . . . . . . . . . . 
3.4 Modelo com Adsorção - Injeção de dois bancos. . 

1 

4 

" 
o 
5 
6 
6 
6 

8 

9 
10 
11 
14 
16 
17 
17 
19 
19 
22 
23 

30 
31 
33 
33 
34 
43 
44 



4 Testes Numéricos 

4.1 Simulações no caso sem adsorção. 
4.2 Simulações no caso com adsorção. 
4.3 Simulações no caso da injeção de bancos. 
4.4 O método numérico e o semi-analítico . 

5 Conclusões 
5.1 Trabalhos Futuros . 

6 Apêndice A 
6.1 A descrição do modelo 
6.2 Solução fraca . 
6.3 Ondas simples . 

7 Apêndice B 
7.1 O Problema de Riemann- Modelo sem adsorção. 

7.1.1 Dados.m . 
7.1.2 Buck.M .. 
7.1.3 Isacmtd.m . 
7.1.4 Prodisac.m 
7.1.5 Upwisac.m . 

7.2 O Problema de Riemann- Modelo com adsorção. 
7.2.1 Dados.m .. 
7.2.2 Joha.m . . . 
7.2.3 Prodjoh.m . 
7.2.4 Intstar.m 
7.2.5 Interl.m 
7.2.6 Interk.m . 
7.2.7 Rotst.m . 
7.2.8 Upwjoha.m 

7.3 O Problema da Injeção de Bancos- Caso sem adsorção. 
7.3.1 Dados.m .. 
7.3.2 
7.3.3 
7.3.4 
7.3.5 
7.3.6 

Curvalg.m . 
Curvayl.m. 
Curvay2.m. 
Curvay3.m. 
Prodbanc.m 

2 

46 

46 
49 
50 
56 

60 
61 

63 
63 
65 
65 

68 
68 
69 
69 
70 
70 
71 
71 
71 
71 
72 
73 
73 
74 
74 
75 
75 
76 
76 
76 
77 
77 
78 



7.3.7 Upwalg.m . . . . . . . . . . . . ..... . 
7.4 O Problema da Injeção de Bancos- com adsorção .. 

7.4.1 Dados.m .. 
7.4.2 Curvas.m . 
7.4.3 Twobanc.m 
7.4.4 Prodads.m . 
7.4.5 Upwads.m . 

3 

79 
79 
80 
80 
80 
80 
81 



1. INTRODUÇÃO 

O estudo de processos que incrementam a extração de petróleo tem merecido 
atenção nas últimas décadas. A essência destes processos está na alteração de 
propriedades da água, do óleo e do meio poroso, de modo que o deslocamento do 
óleo seja mais eficiente e a sua recuperação seja melhorada. Uma possibilidade 
importante consiste em adicionar aditivos dinamicamente ativos no processo de 
injeção de água em reservatórios petrolíferos. 

As simulações destes processos repousam na teoria utilizada para descrever 
fenômenos hidrodinâmicos acompanhados de reações químicas e transferência de 
massa. Neste caso considera-se o fluxo bifásico, água e óleo, no qual a água contém 
uma substância, chamada aditivo ativo 1 capaz de alterar a hidrodinâmica do fluxo. 
O efeito hidrodinâmico do aditivo, está na sua influência nos componentes básicos 
que caracterizam a dinâmica do fluxo em meios porosos, isto é, nas permeabili-
dades, nas viscosidades e na pressão capilar. No caso unidimensional é crucial que 
saibamos como o aditivo influencia a função fluxo fracionário, que neste caso é 
função não apenas da saturação de água, mas também da concentração do aditivo. 
A influência na função de fluxo fracionário se deve à modificação da viscosidade 
na presença do aditivo. 

A obtenção do modelo matemático que simula o processo de recuperação se-
cundária de petróleo por meio de aditivos é baseada nas equações de balanço de 
material. Assumindo que fluido e rocha são incompressíveis, que os volumes não 
mudam quando o polímero é dissolvido na água, o principio da conservação de 
massa de água, óleo e aditivo num escoamento bifásico unidimensional, verili-
camos que tais processos são modelados por meio de um sistema de equações de 
diferenciais parciais hiperbólico de leis de conservação. 

Urna das técnicas utilizadas na recuperação do petróleo em reservatórios é a 
injeção de bancos de água e água com polímeros. Consiste em injetarmos água no 
reservatório durante um certo período de tempo e em seguida injetar a mistura 
de água com polímero. Neste caso dois bancos são injetados, mas de um modo 
geral, podemos injetar mais bancos de água, com ou sem polímero. Este processo 

4 



melhora a eficiência da recuperação em comparação com o da injeção somente de 
água, como mostraremos no decorrer do nosso trabalho. A injeção de bancos é 
uma alternativa economicamente viável, já que na pratica a injeção de água com 
polímeros simplesmente, encarece muito o processo. 

1.1. Revisão Bibliográfica: 

Dentre os trabalhos publicados sobre o assunto cabe destacar alguns que são 
importantes. São os trabalhos de Isaacson (ver [ISA]), Johansen (ver [JOH]), 
Barenblatt (ver [BRB]) e Bedrikovetsky (ver [BED]) que tratam a parte teórica. 
Uma leitura interessante é o livro deLe Veque (ver [LVQ]) que faz um estudo tanto 
da parte numérica quanto da parte analítica da solução de problemas associados 
à leis de conservação. Passamos a um breve comentário sobre cada um deles. 

1.1.1. O Trabalho de Isaacson 

Neste trabalho, é apresentada uma solução global ( fraca ) do Problema de Rie-
mann associado ao sistema não estritamente hiperbólico de leis conservação. Tal 
sistema é dado pelas equações: 

{ 
s, + f(s, c)x ~O 
(s.c)t + (c.f(s, c)h ~O (I) 

A não hiperbolicidade vem do fato que existe uma curva no espaço de estados 
em que velocidades características coincidem. A interpretação física da solução e 
o problema da entropia são também destacados neste trabalho. 

1.1.2. O Trabalho de Johansen &amp;amp; Winther 

Neste trabalho os autores apresentam uma solução (fraca) do problema de Rie-
mann para um modelo que é uma generalização do proposto por Isaacson, uma 
vez que introduzem o efeito da adsorção do polímero pela rocha. Considerando o 
fator adsorção, o sistema de equações fica da forma: 

{ 
s, + f(s, c). ~O 
(s.c +a( c)),+ (c.f(s, c)). ~O 

(II) 

A adsorção do polimero pela rocha é modelada pelo termo a( c) que aparece 
no sistema acima. O modelo (II) é portanto mais realístico que o modelo (I). 

5 



Matematicamente, o efeito é que campo característico linearmente degenerado que 
aparece na análise dada em Isaacson( ver {ISA]), é trocado por um campo não-
degenerado. As descontinuidades de contato na solução apresentada por Isaacson 
são trocadas por ondas de rarefação e ondas de choque. 

1.1.3. Os Trabalhos de Barenblat &amp;amp; outros e Bedrikovetsky 

Os trabalhos de Barenblatt &amp;amp; outros (ver [BRB]) e Bedrikovetsky (ver [BED]) 
tratam do método da injeção de bancos na recuperação do petróleo. O problema 
fica caracterizado matematicamente pelo sistema de equações hiperbólicas de leis 
de conservação ( I ) ou ( II ) com condições iniciais e de fronteira apropriadas. 
Neste trabalho as soluções são apresentadas apenas gráficamente. Elas servirão 
de base para o desenvolvimento do algoritmo para a solução semi-analítica que 
vamos apresentar. 

1.2. Objetivos: 

Nosso objetivo é desenvolver e analisar algoritmos que possam ser usados na 
simulação do processo de recuperação de petróleo. As soluções do Problema de 
Riemann apresentadas por Isaacson ( ~SA] ) para o caso sem adsorção e por 
Johansen&amp;amp;Whinter ( [JOH] ) para o caso com adsorção são de fundamental im-
portância para o desenvolvimento deste trabalho. Para o caso da injeção de ban-
cos, além das descontinuidades descritas pela solução do problema de Riemann, 
novas descontinuidades se formam com a interação entre ondas de rarefação e de 
choque que aparecem na solução global do problema. 

Vamos apresentar os procedimentos de cálculo utilizados na construção de uma 
solução semi-analítica, bem como a implementação numérica visando simulações 
deste processo de recuperação. 

1.3. Organização do Trabalho: 

No capítulo 2 apresentamos um resumo das soluções globais para o problema de 
Riemann associados aos modelos ( I ) e ( II ) que são apresentadas nos trabalhos 
de Isaacson (ver [ISA)) e de Johansen (ver [JOH]). 

Testes numéricos são apresentados para ilustrar a solução do problema de 
Riemann, através da utilização de um programa computacional desenvolvido para 
implementa-la. 

6 



No capítulo 3 tratamos do problema da injeção de bancos como método de re-
cuperação do petróleo, apresentando a técnica utilizada para obtenção da solução, 
bem como sua implementação numérica. Trabalharemos com no máximo três ban-
cos alternados para o caso sem adsorção e dois bancos para o caso com adsorção. 

No capítulo 4 apresentamos resultados numéricos para o problema através 
do programa desenvolvido para simular a solução obtida, fazendo comparações 
entre os modelos apresentados no que diz respeito à produção de óleo e condições 
iniciais no reservatório. Também comparamos a título de ilustração o método 
semi-analítico com o método de diferenças finitas tipo upwind para mostrar as 
vantagens de um em relação ao outro no que diz respeito a tempo computacional. 

No capítulo 5 apresentamos as conclusões do trabalho e o que ainda pode ser 
desenvolvido em pesquisas futuras. 

No apêndice A mostramos a modelagem do problema da recuperação de petróleo 
através da injeção de água com polímeros. 

No apêndice B fazemos a documentação dos programas numéricos utilizados 
para a simulação das soluções semi-analíticas desenvolvidas. 

7 



2. Ü PROBLEMA DE RrEMANN 

Consideremos os sistemas de equações diferenciais parciais: 

{ 
s,+J(s,c)x~O 
(s.c), + (c.f(s, c))x ~O (2.1) 

{ 

St + f(s,c)x ~O 
(s.c +a( c)),+ (c.f(s,c))x ~O 

(2.2) 

O sistemas (2.1) e (2.2) são sistemas de leis de conservação não estritamente 
hiperbólicos e modelam o processo de recuperação de óleo por meio da injeção 
de polímeros misturados a água [Apêndice A]. Este processo é conhecido também 
por polymer-fl.ooding e trata-se de um método terciário de recuperação de óleo 
em reservatórios. A diferença entre (2.1) e (2.2) está no fato de que o sistema 
(2.2) leva em conta o efeito da adsorção do polímero pela rocha, ao contrário do 
sistema (2.1). Ambos generalizam a equação de Buckley-Leverett (ver [ISA]), que 
modela a injeção de água como processo de recuperação, também conhecido como 
water-flooding. 

Consideremos as seguintes condições iniciais: 

{ 
s(x, O) ~ s, c(x, O) ~c, O &amp;lt;x (

2
.
3

) 
s(x,O) ~ s, c(x,O) ~c, x&amp;lt;O 

Resolver o sistema (2.1) (ou (2.2)) associado a condições do tipo (2.3) significa 
resolver um problema de Riemann. 

Em seu trabalho Isaacson ([ISAJ) mostra a existência de uma solução analítica 
fraca para o problema de Riemann (2.1)-(2.3). Com hipóteses feitas sobre a função 
a(c) que modela o efeito da adsorção, Johansen([JOHJ) mostra a existência de uma 
solução do problema de Riemmm (2.2)-(2.3). 

Nosso objetivo neste capítulo será mostrar um resumo da soluç ão para ambos 
os casos e realizarmos testes numéricos utilizando o programa computacional em 
que implementamos estas soluções para alguns casos. Faremos inicialmente alguns 
comentários a respeito dos processos de recuperação citados. 

8 



2.1. A injeção de água 

Este processo consiste da injeção de água no poço chamado de injetor que desloca 
o óleo para o poço chamado produtor. Tal processo é modelado pela equação de 
Buckley-Leverett. Com as hipóteses que os fluidos são incompressíveis e unidi-
mensionais esta equação na forma adimensional é dada por: 

s,+f(s)x~O (2.4) 

onde, sé saturação de água (O :S s :S 1) e f(s), conhecida como função de fluxo 
fracionário representa a parcela de água no volume do fluxo em deslocamento. 

A função f(s) é dada pela expressão: 

(2.5) 

onde Kw(s) é a permeabilidade relativa do meio poroso em função da saturação 
de águas; flw mede a viscosidade da água e K 0 (s), f-Lo medem respectivamente a 
permeabilidade e a viscosidade do óleo. Para efeito de cálculo vamos considerar 
que Kw e Ka dependem de s da seguinte forma: 

K,(s) ~ (1- s) 2 

Com estas considerações e supondo que f.Lwf.L-;; 1 = cte mostramos na Figura 2.1 
como seria uma curva típica do fluxo fracionário . 

• 
f 

' 
Figura 2.1 : Curva típica do fluxo fracionário 

9 



A forma da função de fluxo fracionário, exerce influência na solução da equação 
2.1 ( Buckley-Leverett). Por exemplo, consideremos duas curvas do fluxo fra-
cionário h(s) e h(s) como a da Figura 2.2. 

Na Figura 2.3 mostramos como ficam os perfis da solução de saturação s 1 (x, t) 
e s2(x, t) correspondente à estas duas curvas, depois de um certo período de injeção 
de água no reservatório. Podemos dizer que a recuperação de óleo está associada à 
área sob o gráfico do perfil s(x, _), Uma área maior significa que temos mais água 
do que óleo no reservatório e portanto a quantidade de óleo produzida é maior 
para a curva de área maior. A recuperação associada a h(s) é portanto menor 
que a associada a h(s) durante o perído de injeção de água no reservatório. 

f 
s 

o o 
X 

Figura 2.2 Figura 2.3 

2.2. A injeção de polímero ( polymer-flooding ). 

O método da injeção de polímeros adicionados à água em reservatórios, conhecido 
como polymer-flooding é uma etapa posterior ao water-flooding. Ele tem como 
objetivo melhorar a eficiência do processo de recuperação. 

Alguns fatores responsáveis pelo aumento da eficiência da recuperação são, 
por exemplo, o aumento da viscosidade da água que faz com que os dois fluidos 
fiquem mais parecidos: ou ainda o fato de o polímero preencher alguns espaços 
por onde a água escoa, inibindo seu escoamento ali. 

No presente modelo vamos assumir que somente o aumento da viscosidade 
esteja agindo. Além disso vamos supor que o polímero seja totalmente miscível 
na água. A equação de conservação de água neste caso é dada por: 

10 



s1 + f(s, c)x ~O (2.6) 
uma vez que o fluxo fracionário depende também da concentração de polímero c 
na água. Neste caso a função de fluxo fracionário é dada pela expressão: 

(2 7) 

O termo J.Lw(c) mede a viscosidade da mistura água-polímero (este último com 
concentração c ) e fL

0 
é a viscosidade do óleo. Os termos Kw,Ko são respectiva-

mente as permeabilidades relativas da água e do óleo. Corno J.Lw(c) é urna função 
crescente de c, então f(s,c) decresce quando c cresce como vemos na Figura 2.4. 

Figura 2.4; Gráficos da função f(s, c) para dois valores de c ( c1 &gt; c0 ). 

Para efeito de cálculo onsideraramos a dependência de c, pela expressão (ver 
[ISA] ): 

f"w(c).f"~ 1 ~ (0.5 + lOO.c) 

2.3. A solução do Problema de Riemann: sem adsorção. 

Como definimos anteriomente, resolver o problema de Riemann associado à (2.1) 
consiste em encontrar urna solução fraca que satisfaça as condições iniciais e de 
contorno: 

11 



{ 
s(x,O) = s, 
s(x, O) = s, 

c(x, O) =c, O &amp;lt;x 
c(x, O) =c, O&gt; x 

(2.8) 

Chamamos Ue = (se,ce) e ud = (sd,cd) de estado à esquerda e à direita 
respectivamente do problema de Riemann. 

Vamos descrever a solução apresentada por Isaacson ( [ISA]) para o Problema 
de Riemann. Veremos que tal solução consiste da composição de ondas centradas 
simples: ondas de choque e descontinuidades de contato1 dependendo da lo-
calização dos estados à direita e à esquerda no plano ( s, c). Algumas hipóteses 
são feitas sobre a função de fluxo fracionário. Matematicamente consideramos a 
função f(s,c) suave em I X I (I= [0, 1]) e satisfazendo as condições: 

o f(O,c) =O e f(1,c) = 1; 

o J,(s, c) &gt;O para O&amp;lt;s &amp;lt;1 e OS c S 1; 

• fc(s, c)&amp;lt;O para O&amp;lt;s &amp;lt;1 e O:::; c:::; 1; 

• Para cada c E I= [0, 1] a função f(s,c) tem um único ponto de inflexão 

s1 (c) E (0,1) tal que J,(s,c) &gt;O para O&amp;lt;s &amp;lt;s1 e J,(s,c) &gt;O para 
s1 &amp;lt;s &amp;lt;1. 

Vamos agora ao cálculo das velocidades características do sistema de equações 
2.1. 

Desenvolvendo formalmente as derivadas da segunda equação do sistema (2.1) 
temos agrupando termos: 

c.(s, + f(s, c)x) + s.c, + c.f(s, c)= O 

A primeira parcela é eliminada utilizando a primeira equação de ( 2.1) e obte-
mos: 

(2.9) 

Desenvolvendo as derivadas da primeira equação do sistema (2.1) juntando 
com (2.9) temos 

12 



ou ainda, 

{ 

s, + /,(s, c)sx + f,(s, c)cx =O 
f(s, c) 

Ct + Cx. = Ü 
8 

u, + A(u).ux =O 

onde eu= [~]e A(u) é a matriz dada por: 

[ 
f,(s,c) fJs,c) l 

A(u) = 
0 

f(s, c) 
8 

(2.10) 

(2.11) 

(2.12) 

Os autovalores da matriz A( u) são chamados de velocidades características do 
sistema e são dados por: 

s c f(s,c) 
À (s,c) = f 8 (s,c) , À (s,c) = == 

s 
Aos autovalores )..3 e À c estão associados os autovetores 

c ( f, ) 
e = Àc-Às 

respectivamente. 

(2.13) 

O sistema não é estritamente hiperbólico já que as velocidades características 
coincidem sobre uma curva, que será denotada por T = T(s,c) no plano fases 
(s, c). Esta curva divide o plano em duas regiões L e R que são definidas por: 

T = { (s, c) IÃ'(s, c) = ).'(s, c)) (2.14) 

L= {(s,c) IÃ'(s,c) &amp;lt;Ã'(s,c)} (2.15) 

R= {(s,c) IÃ"(s,c) &gt; ).'(s,c)} (2.16) 

A Figura 2.5 mostra um esboço da curva de transição Te das regiões L e R 

13 



' 

L 

T\. 

R 

o 1 ' 

Figura 2.5 : Curva de Coincidência T e as Regiões L e R 

Para descrever composição de ondas na construção da solução final vamos 
utilizar a seguinte notação: 

Ue ~ ud, significa que o estado à esquerda Ue está conectado ao estado à 
direita ud por uma c-onda no plano das fases. 

Ue ~ ud significa que o estado à esquerda Ue está conectado ao estado à 
direita ud por uma s-onda que é a solução da equação de Buckley-Leverett. 

Ue ~ Ui ___!:_.,. ud significa uma composição de ondas, onde a ou b podem ser s 
ou c e Ui é chamado de estado intermediário. 

Dizemos que a composição é compatível se a velocidade final da onda a é 
menor que a velocidade inicial da onda b. 

Dados dois estados para o problema de Riemann, Ue e ud, a solução é dividida 
em três casos A, B e C, que passamos a descrever. 

2.3.1. CASO A : c, = c,. 

Este caso é o mais simples, pois a solução é uma s-onda dada pela resolução da 
equação de Buckley-Leverett e será representada por: 

(A) 

Lembremos que neste caso a solução pode ser um s-choque, umas-rarefação ou 
ainda uma composição destas duas. Como ilustração a Figura 2.6 mostra perfis da 
saturação da água para três valores de tempo t, quando consideramos a saturação 
à esquerda Se = 1 e a saturação à direita sd = O e Ce = cd. 

14 



s(x,t) 

X 

Figura 2.6 : Perfis da solução para três valores de t 

Antes de passarmos ao próximo caso vamos apresentar a construção de alguns 
subconjuntos de I x I (I= [O, 1] )que aparecem na solução. 

Considere Ue. E L e a curva integralr(t) = (11 (t),f2 (t)) associada ao campo e
0 

(a partir de agora será chamada de c-curva integral ) que passa por Ue. e intersecta 
a curva de transição Tem um ponto (sT, cr). Utilizando esta curva integral vamos 
definir três regiões que dependem do estado u 6 = (se.,ce): 

• L1 = L1(ue.) é a região dos pontos (s, c) tais que Ce. :S c :S CT e o :S 8 :S rr(t). 
( fR(t) é a parte da curva integral contida na região R ). 

• L2 = L2(ue.) é a região dos pontos (s,c) tais (s,c) E R com Ce. :S c :S 1 e 
l'l'(t) &amp;lt;s :S 1 

• L3 = L3 (ue.) é a região dos pontos {s, c) tais (s, c) E L com cT :$_c :S 1. 

A Figura 2. 7 mostra um esboço das regiões L1, L2 e La definidas acima. 
Se Ue. E R, consideramos o estado uT = ( sT ( ce.), ce.) E T e a c-curva integral 

1(t) = (/1 (t),')'2 (t)) associada ao campo e
0

. Definimos então as regiões R1 
R 1 (u,), R,= R 2 (u,) e R 3 = R3 (u,) da seguinte maneira: 

• R 1 = R 1(ue.) é a região dos pontos (s,c) do plano das fases s X c tais que 
O :S c :S c, e O :S s :S l'f(t). 

• R 2 = R 2(ue.) é a região dos pontos (s,c) do plano das fases tais (s,c) E R 
com O :S c :S 1 e l'f(t) &amp;lt;s :S 1 

15 



• R3 = R3(ue) é a região dos pontos (s, c) do plano das fases tais (s, c) E L 
com Ce &amp;lt;c ::; l. 

A Figura 2.8 mostra um esboço destas regiões. 

' ' 
1 

L; "\ L, 
,' 

' 
' 

c-Clr\IG rntegral I 
y' 

y '(t) I r--L, 
j 

c, 
Ue~, 

I I I ' 

(1) 

1 

R; "\ 
R; 

u. 
c' 

/ 
-·-

c-curV&lt;J rntegr&lt;ll I i Ir f-Y' yL(t) I ' 
R, I ' I I 

I r/ I 
I ' I 
' I ' 

I / 
I 

' ' ' ' I 

(t) 

Figura 2. 7 : As regiões L1 , L2 e L3. Figura 2.8: As regiões R 1 , R2 e R 3 . 

2.3.2. CASO B: u, E L e u, E L1 U L, U Ls 

Teremos então três composições de ondas compatíveis formando a solução. Elas 
dependem da localização de ud em L 1 , L 2 ou L 3 (Figura 2.7) 

Se ud E L 1 . A solução é dada pela composição de ondas compatíveis: 

onde u 1 é dado pela interseção da curva integral do campo ec ( neste caso as 
curvas integrais associadas são descontinuidades de contato ) que passa por Ue 
comaretac=cd. 

Se ud E L 2 , temos a seguinte composição: 

(B.ii) 

onde o estado intermediário u1 é calculado como a interseção da c-curva integral 
que passa por ud com a reta c = Ce 

Se ud E L3, temos a seguinte composição: 

16 



(B.iii) 

onde u 1 é calculado como no caso anterior e u 2 é a interseção da reta c = cd com 
a curva de transição T. 

2.3.3. CASO C : u, E R e u, E R 1 U R 2 U R 3 

Suponhamos que ud E R1 , então teremos a seguinte composição de ondas: 

' ' ' Ue _____... U1 _____... 'lq ---+ Ud (C .i) 

onde u 1 é a interseção da reta c = Ce com a curva de transição T e u 2 é interseção 
da c-curva curva integral que passa por u 1 com a reta c = cd. 

Se Ud E Rz, então teremos a seguinte composição de ondas: 

(C.ii) 

onde u 1 é a interseção da c-curva curva integral que passa por ud com a reta 
C= Ce. 

Suponhamos que ud E R 3 , então temos a seguinte composição de ondas: 

(C.iii) 

onde u 2 é a interseção da reta c = cd com a curva de transição T e u 1 é interseção 
da c-curva curva integral que passa por u 2 com a reta c = Ce. 

Do exposto vemos que o caso sem adsorção admite sete tipos de solução que 
dependem da localização dos estados à direita e à esquerda no plano das fases. A 
seguir passamos a examinar a solução para o problema com adsorção. 

2.4. A solução do Problema de Riemann: com adsorção. 

Como vimos no início do capítulo o Problema de Riemann associado ao modelo 
com adsorção é dado pelo sistema de leis de conservação hiperbólicas (2.2) com 
condições iniciais e de contorno da forma (2.3). 

Este foi o modelo estudado por Johansen(ver [JOHJ)
1 

sendo o efeito da ad-
sorção, representada pela função a( c), que deve satisfazer algumas hipóteses adi-
cionais enunciadas no referido artigo. 

Como no caso anterior a solução do problema de Riemann consistirá da com-
posição de uma sequência compatível de s-ondas e c-ondas. Porém observamos 

17 



que neste caso as c-ondas podem ser c-rarefações, o que não acontece no modelo 
sem adsorção. 

O sistema (2.2) pode ser reescrito também na forma matricial, ou forma não 
conservativa: 

Ut + A(u).ux =O 

onde u = [ :] e h( c)= a'(c) e 

[ 

J,(s, c) 
A(u) = O 

f,(s,c) l 
f(s, c) 

s+h(c) 

Os auto-valores da matriz A são dados neste caso por : 

,\'(s,c) = fs(s,c) N(s.c) = f(s,c) 
· s+h(c) 

com autovetores associados dados por: 

(2.17) 

(2.18) 

(2.19) 

Além dos três conjuntos L, R e T (este sistema também não é estritamente 
hiperbólico), definidos de maneira análoga aqueles definidos em (2.14), (2.15) e 
(2.16), veremos que outros três conjuntos desempenharão também papel impor-
tante na caracterização da solução do problema de Riemann. 

Vamos apresentar um resumo da solução analítica do problema de Riemann, 
mostrando todas as possíveis seqüências compatíveis de composições de ondas que 
dependem dos valores das concentrações e saturações à esquerda e à direita, do 
problema de Riemann. 

Temos também três casos a considerar: D, E ou F, que passamos a descrever. 

18 



2.4.1. CASO D : c, = c, 

Supondo Ce = cd, a solução neste é a mesma dada em (A) 1 ou seja: 

(D) 

Antes de passarmos ao caso E vejamos a seguinte definição: 
Definição: Dado u. = ( s, c) E R U T, definimos sk ( u), como sendo o único 

valor s = sk, com uk = (sk,c) E LUT (ver Figura 2.9) tal que: 

A'(sk. c)= A'(s, c) (2.20) 

Analogamente seu= (s,c) E L, sk =sk(u) é tal que (sk,c) E R e que (2.20) 
é verdadeiro ou se tal sk não existe, tomamos sk como sendo uma constante 
suficientemente grande. 

f 

f(s,c) 

s 
s 

Figura 2.9: Cálculo de uk = (sk(u),c) 

2.4.2. CASO E : c, &amp;lt;ea 
Neste caso a solução dependerá das localizações de Ue e ud 

19 



E.l) u, E RuT 

A solução depende da localização do ponto ud 

1. Se ud E RUT, então tomamos u 1 = (s 1, ce) E R determinado pela interseção 
da c-curva integral que passa por ud com a reta c = Ce. A solução única neste 
caso é dada pela composição: 

(E.l.i) 

2. Se ud E L, verificamos se sT(cd) existe. Se não exitir tomamos a composição: 

(E.l.ii) 

3. Se sT(cd) existe tomamos a composição: 

(E.l.iii) 

E.2) u, E L 

Aqui também a solução é construida a partir da localização do estado ud. Deno-
taremos então por f d E LU T, a c-curva integral que começa em Ue E L e termina 
em uT = ( sT, cT) interseção da c-curva integral com a curva de transição T. Caso 
não exista esta interseção, tomamos uT = ( sT, 1) que seria o ponto onde a curva 
r d intercepta a reta c = 1 no espaço I X I. 

Denotemos por rk E RUT (Ver Fig. 2.10) como sendo a curva crítica associada 
à r d definida por: 

r,= {(s", c) E R u T, s' = s'(s,c), \l(s, c) E r,) (2.21) 

• nl = nl(ue)conjunto dos pontos (s,c) E I X I delimitados pelas retas s = 
O,c = Ce,C = CT e pela curva rk. 

• S12 = !12 (ue) conjunto dos pontos (s,c) E R delimitados pelas retas s -
1, C= Ce, C= 1 e a curva f~;:. 

20 



• fh = fh(ue) conjunto dos pontos (s, c) E L delimitados pelas retas s 
O, c= cT,c= 1. 

üm esboço destas regiões está ilustrado na Figura 2.10 

c 
1 

{}; tl n, 
I 

c-cmva intew~() I ! 
n, l / I ~ r 

, I 

~~! 1 ' ! c;, i 
r I s 

1 

Figura 2.10 : As regiões 0 1, fl2 e fl 3 

A solução é dada em função da localização de ud nas três regiões acima que 
passamos a descrever: 

1. Suponha que ud E nl.Neste caso tomamos U} = (sl,cd) E rd como sendo 
a interseção de r d com a reta c = cd e consideramos a seguinte composição 
compátivel: 

(E.2.i) 

2. Suponha agora que ud E n2. Considere o estado U2 (s2,c2) dado pela 
interseção da c-rarefação que passa pôr ud, com a curva rd u {c= Ce}.Teroos 
aqui duas hipóteses a considerar. Se c2 = Ce, temos a seguinte composição 
compatível: 

Caso contrário, se c2 &gt; Ce, então tomamos ul = (sl,c2) E rd tal 
que sk(u2) = s 1 e a composição compatível é dada por: 

21 



onde uy = (sr(cd), cd) e a onda Ue _____,. U7' é da forma (E.2.iii), é compatível. 

Pôr outro lado se sT(cd) não existe, a composição compatível é dada por: 

(E.2.v) 

Verifica-se também que estas composições compatíveis: são únicas. 

2.4.3. CASO F : c, &gt; c, 

Aqui dois caso são considerados: À
8 (ue);::: ó(ue) e À 8 (ue) &amp;lt;ó(ue)· 

Observamos que as c-ondas neste caso serão sempre ondas de choque, de acordo 
com a ánalise apresentada por [JOH] e com velocidade de choque ó(u) dada por: 

ó(u) ~ f(s,c) 
s +h L( c,) 

(2.22) 

Dado u = ( s, c) com Às ( u) ::; 6 ( u), definimos sk ( u) como sendo o único estado 
u, ~ (s'(u), c) tal que A'(s', c)&gt; ó(u) e 

(2.23) 

Se A'(u) &gt; ó(u) então s' ~ s'(u), caso exista é o único estado tal que (2.23) é 
verdadeiro; caso tal sk não exista então tomamos sk um constante suficientemente 
grande. 

F.l) &gt;.'(u,) &gt; ó(u,) 

Consideremos u 1 = (slrcd) o único estado tal que b(ui) = b(ue) &amp;lt;Às(u1). Neste 
caso três possíveis soluções aparecem conforme sd &gt; sk(u1),sd &amp;lt;sk(u1) ou sd = 
s'(u,). 

1. Se O::; sd &amp;lt;sk(u1) a solução é dada por: 

(F.l.i) 

22 



2. No caso sd &gt; sk(u1), seja u 2 = (s 2 ,ce) o estado intermediário onde vale 
ó(u,) = ó(u2 ) = .\'(u2 ) e a solução é dada pela composição, 

(F.l.ii) 

3. Se sd = sk(u1) temos um choque dado pela composição: 

(F.l.iii) 

com velocidade ó(u,) = ó(u,) = ó. 

Seja u*(s*, ce) o único estado, tal que À8(u*) = b(u*) e seja u 1 = (s 1 , cd) deter-
minado por ó(ui) = b(u*) &amp;lt;À8(u 1) e seja sk = sk(u1). Aqui as soluções possíveis 
dependerão do fato de sd 2: sk ou sd &amp;lt;sk. 

1. Se sd 2: sk, tome U2 = ( 82, ce) o único estado tal que À 8 (u2) ::;: 6( u2) = 6( ud), 
e então temos a composição compátivel única dada por: 

(F.2.i) 

2. Se sd &amp;lt;sk a solução é dada pela composição: 

(F.2.ii) 

Sendo assim, apresentamos todas as 14 composições de ondas compatíveis pos-
síveis que representam as soluções do Problema de Riemann. No artigo referente 
a este trabalho, os autores mostram que todas estas soluções são fisicamente cor-
retas, através da demonstração de alguns teoremas e lemasl além de detalhar a 
geometria envolvida no problema. 

2.5. Algoritmo e experimentos numéricos 

Baseado nas seções anteriores, elaboramos algoritmos para implementar numeri-
camente a solução analítica do problema de Riemann para o modelo sem adsorção 
[ISA] e o modelo com adsorção [JOH] para o caso em que Ce &gt; cd. O algoritmo foi 

23 



desenvolvido dentro do ambiente MATLAB que possui linguagem própria. Ex-
ploramos a potencialidade deste pacote, nos vários passos executados no calculo 
da solução. 

Lembramos que nos experimentos numéricos vamos utilizar as expressões al-
gébricas citadas nos parágrafos anteriores e tomar a função: 

s' 
f(s, c)~ s2 + (0.5 + lOO.c).(l- s) 2 

para modelar a função de fluxo fracionário e 

a( c) ~ (0.2).c 
1 + lOO.c 

para modelar o efeito da adsorção. 

(2.24) 

(2.25) 

A seguir simulamos alguns experimentos com o objetivo de ilustrar soluções 
associadas a estados, à esquerda e à direita, pré-estabelecidos. Os gráficos apre-
sentados resultam dos cálculos realizados pelo programa computacional que im-
plementamos. 

Experimento 1: 

Vamos supor que estamos injetando água no reservatório contendo 2% de polímero. 
Isto corresponde a tomar Ue = (1, 0.02). Admite-se que inicialmente não exista 
água e nem polímero no reservatório, o que corresponde a tomar ud = (0, 0). 
O perfil de saturação de água depois de termos injetado ! do volume poroso 
(t "" 0.33) é apresentado na Figura 2.11. Tal gráfico corresponde a uma solução 
do tipo (F.2.ii) para o caso com adsorção. 

No gráfico plotamos o perfil da concentração multiplicada por 5 para uma 
melhor visualização do mesmo. Observamos que a solução apresenta duas descon-
tinuidades na saturação s(x, t) e uma descontinuidade na concentração c(x, t). 

Os dados para os seguintes experimentos correspondem a situações de pouco 
interesse prático. Neles a saturação de injeção é menor que 1 e admite-se que 
a saturação inicial no reservatório é grande. Apresentamos estes exemplos como 
ilustrações de soluções analíticas do problema de Riemann. Observamos que eles 
podem corresponder a outras situaçOOs práticas que não sejam injeção de água 
com aditivos na recuperação terciária do petróleo. 

24 



0.9 &gt;(&lt;,t) .. 
••• 
o.õ ,, 
... 
'·' 
'·'~=:·:c•::"LL_~-~~-c-··.L 0o o_~ o.4 M o_e 1 "' 

Figura 2.11 Perfil da saturação e da concentração 

Experimento 2: 

Aqui vamos considerar o caso com adsorção para um poço com saturação de água 
dada por, sd = O, 7 e que não exista polímero no reservatório. Injetamos então 
uma mistura de água, polímero e gás por exemplo, que deverá ter uma saturação 
de água da ordem de 30% e uma concentração de polímero da ordem de 1%. O 
perfil de saturação de água depois de termos injetado metade do volume poroso 
é apresentado na Figura 2.12. 

'" 
O.õ 

••• 
'' 
o; 

OA 

'·' 
'·' 
0.1 c(x,t) 

s(x.l) 

Figura 2.12 : Perfil da saturação e da concentração 

25 



Experimento 3: 

Consideremos a injeção de uma mistura com saturação de água da ordem 98% com 
uma concentração de polímero em torno de 1% e que o reservatório já contenha 
90% de água e que não estamos considerando o efeito da adsorção do polímero 
pela rocha. 

O gráfico da Figura 2.13 mostra os perfis da saturação e da concentração. 

s(X,t) 
0.9 

0.8 

0.7 

0.6 

0.5 

0.4 

0.3 

0.2 

0.1 c(x,t) 

o 0.2 0.4 0.6 0.8 1 ' 

Figura 2.13 : Perfil da saturação e da concentração 

Experimento 4 : 

Consideremos o caso sem adsorção onde estamos injetando uma mistura com 
uma saturação de água da ordem de 50% sem polímero em um reservatório com 
saturação de água da ordem de 20% e com 1% de concentração de polímero. A 
solução neste caso dada pela composição: 

A Figura 2.14 mostra os perfis de saturação de água s(x, t) e da concentração 
de polímero c(x, t) para este caso. 

26 



0.5 

clx,t) 

o 
X 

Figura 2.14 : Perfil da saturação e da concentração 

No gráfico observamos que a concentração de polímero está multiplicada por 
5 para uma melhor visualização. 

Experimento 5 : 

Consideremos uma saturação de injeção de água da ordem de 45% sem polímero 
em reservatório com saturação da ordem de 79% com 1% de concentração de 
polímero. Os perfis estão mostrados na Figura 2.15. 

0.9 

0.8 

0.7 

06 

0.5 s ó:.t) 
0.4 

0.3 

0.2 

0,~-c~--~_l='~&amp;amp;~.t==~~==~~ 0
o 0.2 0.4 0.6 0.8 

X 

Figura 2.15 : Perfil da saturação e da concentração 

27 



Experimento 6 : 

Neste experimento fazemos a comparação entre a solução analítica do problema 
de Riemann e a solução dada por um esquema de diferença finitas de primeira 
ordem tipo upwind conforme Tveito [TVT]. 

Observamos que o método numérico não representa muito bem a solução em 
alguns casos. Considerando os dados apresentados no experimento 5, calculamos 
a solução numérica para dois valores de i::J.t. Neste caso para !::J.t da ordem de 10-4 

temos um tempo computacional muito grande para o cálculo da solução numérica 
e esta não captura o choque que aparece na solução. Este fato está ilustrado na 
Figura 2.16 que apresenta os gráficos dos perfis de saturação s(x, t) para os casos 
numérico e o analítico. 

Os testes mostram ainda que as soluções obtidas pelo esquema numérico con-
vergem para a solução semi analítica. Isto fica evidenciado na Figura 2.17 1 onde 
comparamos o caminho da solução numérica ( no plano das fases s X c ) para 
alguns valores de i::J.t. 

Lembramos que na figura a solução correspondente à concentração esta mul-
tiplicada por 50 para uma melhor visualização. 

1 

o 

analítica 
numérica 

Figura 2.16 

28 

M=O.OOOl 

ôt"O.OOl 

1 X 



0.5 

c 
1~--------~--------------, 

u' 
Ud 

o u, u' 1 s 

Figura 2.17 

29 



3. A INJEÇÃO DE BANCOS 

Uma das técnicas utilizadas na recuperação do petróleo em reservatórios é a in-
jeção alternada de bancos de água e água com polímeros. Consiste em injetarmos 
água no reservatório durante um certo período de teropo e em seguida injetar 
a mistura de água com polímero. Neste caso dois bancos são injetados, mas de 
um modo geral, podemos injetar mais bancos alternando bancos de água com ou 
sem polímero. Este processo melhora a eficiência da recuperação em comparação 
com o da injeção somente de água, como mostraremos no decorrer do nosso tra-
balho. A injeção de bancos alternados é uma alternativa economicamente viável, 
já que na pratica a injeção de água com polímeros simplesmente, encarece muito 
o processo. 

Nosso objetivo é descrever e analisar algoritmos que possam ser usados na 
simulação deste processo para os modelos com ou sem adsorção. 

Matematicamente o processo de injeção alternada (por exemplo três bancos), 
fica caracterizado pelo sistema de equações: 

{ 
s, + f(s, c),= O 
(s.c), + (c.f(s, c))x =O (3.1) 

para o caso sem adsorção e 

{ 
s, + f(s,c)x =O 
(s.c +a( c)),+ (c.f(s, c))x =O 

(3.2) 

com adsorção associado a condições iniciais ( c.i.) e de contorno (c. c.) do tipo: 

{ 

c.i.{s(x,O) = s0 ;c(x,O) = C 0 OS x S 1 

{ 

s(O,t) = s1 ;c(O,t) = CJ OS t &amp;lt;t 0 
c.c. s(O, t) = s,; c( O, t) = c, to S t &amp;lt;t1 

s(O, t) = s3 ; c( O, t) = c3 t 1 S t 

(3.3) 

Resolver o problema (3.1)-(3.3) ou (3.2)-(3.3) significa neste caso resolver um 
Problema de Goursatt, já que tornamos as condições iniciais sobre a característica 
X= Ü. 

30 



Para a solução do problema utilizaremos as soluções do Problema de Rie-
mann apresentadas no capítulo anterior para os casos com adsorção ([JOH]) e 
sem adsorção ([ISA]). Para o caso da injeção de bancos alternados, além das 
descontinuidades descritas anteriormente, novas descontinuidades se formam com 
a interação entre as s-ondas e as c-ondas que aparecem na solução global do 
problema. 

Neste capítulo vamos apresentar os procedimentos de cálculo utilizados na 
construção de uma solução semi-analítica, bem como a implementação numérica 
visando simulações deste processo de recuperação. 

3.1. Adimensionalização e cálculos preliminares 

Nas aplicações práticas vimos que a saturação de água varia entre uma saturação 
mínima Bwi e uma saturação máxima dada pela diferença 1 - San onde Ba-r é a 
saturação de óleo residuaL Para uma maior facilidade de nossos cálculos é conve-
niente uma mudança de variável que faça a saturação s(x, t) variar no intervalo 
unitário I= [0, 1]. 

A primeira equação dos sistemas, (3.1) e (3.2) modela a conservação da água 
no fluxo bifásico e é conhecida como equação de Buckley-Leverett: 

Bsw+BJ,(sw,c) -O ·&amp;lt;&amp;lt;1 -
8 a - 1 Swl _ Sw _ Sw tn xv 

onde as variáveis independentes foram adimensionalizadas por: 

X 
xv=-

L 

(3.4) 

(3.5) 

Para simplificar anotação vamos omitir D na equação (3.4) isto é, daqui para 
frente x e t representam as variáveis adimensionalizadas. 

Podemos verificar facilmente que a mudança de variáveis Sw = Sn.S + Swi 
com Bn = 1 - Bwi - Ba-r transforma o intervalo Bwi $ Sw $ 1 - Ba-r no intervalo 
O ~ s ~ 1. A a variável s será chamada de saturação normalizada. 

Observando que: 
8sw 8s 
&amp;amp;t =Sn&amp;amp;\ 

a equação da conservação da água (3.4) fica reescrita como: 

&amp;amp;s &amp;amp;f(s, c) 
Sn&amp;amp;t + 8x =0 

31 

(3.6) 



onde O :S s :S 1 e f(s,c) ~ j,(sw(s),c). 
Com as mesmas mudanças de variáveis sendo aplicadas na equação da conser-

vação do polímero para o sistema (3.1) ou (3.2), esta fica reescrita da forma: 

( 
Bwi) &amp;amp;c ( ) &amp;amp;c 

s+- sn~EJ +f s,c .-&amp;amp; ~o 
8 11 t X 

(3.7) 

Por conveniência vamos tomar uma nova mudança de variável em t, dada por: 

Assim ficamos com a seguinte equação: 

Bwi 8c 8c 
(s + -)~ + f(s,c).- ~O 

Sn 8t 8x 
(3.8) 

O sistema (3.1) adimensionalizado fica escrito então na seguinte forma matri-
cial: 

r &amp;amp;s l I EJ f ; I r &amp;amp;s 1 l~ + ~s s+~ l~! 
Sn 

~ [ ~ l (3.9) 
Os autovalores deste sistema são: 

&gt;!(s, c)~ fs(s, c) , Àc(s, c)~ :~·;;}, 
&gt;n 

(3.10) 

Analogamente aplicamos as mudanças de variável no sistema (3.2) e obtemos: 

onde 

l
&amp;amp;s]f&amp;amp;f &amp;amp;f ]f&amp;amp;sl ~ + :s 7ij ~ ~[~] 
fJt s + h'(c) &amp;amp;x 

( 
Bwi+a'(c) 

h' c)~-=-~'-' 
Sn 

Neste caso os autovalores são: 

.\
8 (s,c) ~ fs(s,c) 

32 

Àc(s c)~ f(s, c) 
's+h'(c) 

(3.11) 

(3.12) 



3.2. Algoritmo para a solução: 

A maior dificuldade em se obter uma solução para o caso da injeção de bancos é 
como tratar as novas descontinuidades que surgem na solução global. No trabalho 
de Isaacson [ISA] são tratadas as descontinuidades inerentes a solução do problema 
de Riemann associados a leis de conservação não convexa, (equação de Buckley-
Leverett ) devido ao formato em S da função de fluxo fracionário. 

A proposta é desenvolver uma sistemática para o cálculo da solução semi 
analítica que estará fundamentado nas soluções básicas do problema de Riemann 
dadas por Isaccson. Na realidade a estratégia é trabalhar com problemas de 
Riemann locais. 

Para um melhor entendimento do procedimento consideremos inicialmente o 
modelo com injeção de dois bancos sendo o primeiro de água seguido de outro de 
água com polímero. 

Vamos supor que um reservatório inicialmente não contenha água e nem polímero. 
Durante um período de tempo, t = t 0 , injetamos água sem polímero e a partir daí 
passamos a injetar a mistura de água e polímero com concentração cinj 2 ~ O. 

As condições iniciais (c.i.) e de contorno (c. c.) neste caso são: 

{ 

c. i. {s(x, O) = 80 , c(x, O) = c, O&amp;lt;:X&lt;: 1 

{ 
s(O,t) = 1,c(O,t) = 0,0&amp;lt;: t&amp;lt;:to 

c. c. s(O, t) = 1, c(O, t) = C;n;,, to&amp;lt;: t 
(3.13) 

Vamos fazer uma análise da solução em duas etapas: a injeção do primeiro 
banco (t &amp;lt;to) e em seguida a injeção do segundo banco ( t ~ t 0 ). 

3.2.1. t &amp;lt;t 0 (50lução da equação de Buckley-Leverett): 

Para t &amp;lt;t 0 a solução está bem caracterizada, pois trata-se da solução da equação 
de Buckley-Leverett e portanto consiste da composição de umas-rarefação e um 
s-choque. 

A Figura 3.1, mostra a configuração das características no espaço x x t quando 
t &amp;lt;t 0 • 

33 



t 

to 

_ choque 

X 

Figura 3.1 : Retas características 

3.2.2. t ~ to ( Interação entre s-onda e c-choque ) 

Quando t = to paramos de injetar água e começamos a injetar água com polímero. 
Temos portanto uma descontinuidade na concentração c(O, t) no ponto de injeção, 
pois passamos de Cinjl = O para Cinjl &gt; O. Esta descontinuidade se propagará no 
interior do espaço x X t corno mostraremos logo mais. De acordo com Isaacson 
([ISA]) a solução do problema de Riemann dependerá da localização dos estados 
à direita ud = (sd, cd) e estados à esquerda Ue =(se, ce) no plano das fases. 

As seqüências de ondas compatíveis para o caso em que o valor da concentração 
à direita cd seja menor que o da esquerda Ce e que o estado Ue pertence à região 
R é dada por: 

(3.14) 

(3.15) 

As Figuras 3.2 e 3.3 mostram a estrutura das ondas para as composições 3.14 
e 3.15 respectivamente. 

Como ilustrado na Figura 3.1 vamos considerar n retas características perten-
centes ao leque leque de rarefação que compõe a solução da equação de Buckley-
Leverett. De acordo com nossos testes o valor n = 200 é satisfatório. Segundo o 
método das características cada reta carrega um valor s (saturação) e um valor 
c (concentração). A inclinação da característica é dada por À 8 (s,c) = f 8 (s,c). 
A reta que tem inclinação maior, no caso o eixo t, carrega o valor s = 1 e a 

34 



característica de inclinação menor carrega o valor s = Sm. Vamos associar a estas 
retas um vetor sd, com n coordenadas, sendo sd(1) = 1 e sd(n) = Sm e considerar 
no plano das fases os estados uj = (sd(j), Cinj1 ), j = 1, ... , n. Para apresentarmos 
a solução é necessário que calculemos as curvas de descontinuidades decorrentes 
da injeção do segundo banco. Tais descontinuiudades surgem a partir da in-
teração entre ondas de rarefação e de choque. Passamos portanto descrever o 
algoritmo para a construção destas curvas, o que será feito em três etapas. Nas 
duas primeiras etapas descrevemos os procedimentos de cálculo dos dois primeiros 
pontos

1 
a generalização do procedimento e o cálculo do último ponto. Na terceira 

etapa descrevemos as outras curvas de descontinuidades que surgem no problema. 

c--&lt;:hoque 

X 

Figura 3.2 : Estrutura da onda para sd 2: Sk 

I u* 

X 

Figura 3.3 : Estrutura da onda para sd &amp;lt;sk· 

35 



Etapa 1: Construção de y11 . 

(l.A) : Cálculo do primeiro e segundo ponto Denotemos por P 1 o ponto 
inicial da curva de descontinuidade associada a mudança de bancos. Estas curva 
está será denotada pelo par (yn, t11). Assim o ponto P 1 é definido pelas coorde-
nadas (y11 (1),t11 (1)) que no nosso caso será (O,t0 ). 

Consideremos o problema de Riemann associado a P1 com estados à direita e 
à esquerda dados respectivamente por: 

u, ~ uâ ~ (s,(2),0) e 
Ue = Uinj2 = (sinj2, Cinj2) · 
Como vimos a solução para o Problema de Riemann neste caso é do tipo (3.14). 

Na notação introduzida acima teremos: 

(3.16) 

f 

Figura 3.4: Cálculo do estado intermediário u~ = (s1 (2),~n12 ). 

O estado intermediário ui tem coordenadas ( s1 (2), cinJ2 ) onde o valor s 1 (2) é 
a solução da equação: 

(3.17) 

sujeita a restrição À8 (x, CinJ2) ~ À c (x, Cin12 ) 
Consideremos r a reta com inclinação dada por , que passa por A= ( -k, O) e 

B ~ (s,(2),J(s,(2),0)),onde k ~ Swi. Geometricamente, s 1 (2) é a ordenada 
Bn 

do ponto de interseção da reta r com o gráfico da função de fluxo fracionário 
f(s, Cin12 ), como mostra a Figura 3.4. 

36 



O ponto P 2 é tornado corno sendo a interseção da característica que carrega o 
estado u~ 1 com o c-choque dado em (3.15) que tem estado a esquerda uL como 
mostra a Figura 3.5. 

Denotamos as coordenadas do ponto P2 pelo par (y11 (2),tn(2)). 
A solução final s(x, t) e c(x, t) para t0 &amp;lt;t &amp;lt;tu(2) é dada pela composição: 

(3.18) 

(LB): Cálculo do terceiro ponto Consideremos o problema de Riemann em 
P2, com estado a esquerda Ue =ui e estado a direita ud = u~. Se ainda tivermos 
que sd(3} &gt; sk a solução do problema ainda é do tipo (3.14) 1 ou seja, é dada pela 
compos1çao: 

2 s 3 c 3 
ul - ui ----Jo ud 

onde uf é o estado intermediário calculado de maneira análoga à ui. 
(3.19) 

O ponto P3 é tomado como a interseção da reta característica com inclinação 
com o c-choque que aparece na composição (3.19) 1 como ilustra a Figura 3.6. 

t 

X X 

Figura 3.5 : Cálculo do ponto P2. Figura 3.6 : Cálculo do ponto P3. 

A solução s(x, t) e c(x, t) para tu (2) &amp;lt;t S tu (3) é dada pela composição: 

(3.20) 

Observação: Lembramos que a primeira s-onda que aparece é umas-rarefação 
que liga os estados Uinj 2 ao estado ui. A diferença entre (3.18) e (3.20) está no 

37 



valor da saturação de ui ser menor que a deu~. De maneira análoga, construimos 
os demais pontos da curva e paramos quando sd(j) = sk (podemos supor que 
existe um índice j 0 E {1, ... ,n} tal que sd(jo) = sk ). De acordo com (3.14) 
este seria o caso limite, ou seja, o último ponto da curva y 11 . A partir daí a 
composição da solução passa a ser do tipo (3.15), Sendo assim vamos calcular este 
ponto separadamente. 

(l.C): Cálculo do último ponto Como sd(jo) = sk, o problema de Riemann 
é tomado em Pia- 1 com estado a esquerda U 8 = u{o-

1 
e estado a direita ud 

(sk, Cinjl)- A solução ainda é do tipo (3.14) e neste caso: 

(3.2l) 

onde o estado intermedário u{" = u* é calculado de maneira análoga ao detalhado 
quando calculamos ui. 

I t 

k:_ leque de rarefaçtlo 
~ Loque de rarefaç&lt;io 

_ choques 
_ choque yu 

X X 

Figura 3.7 Figura 3.8 

Calculamos então o ponto Pj" = (y11 (ja), tn(io)) de maneira análoga aos ante-
riores como mostra a Figura 3. 7. A poligonal que liga os pontos H,P2, ... , Pj"' aqui 
denotada por Yn, é portanto uma curva de choque com estados à direita dados 
por u~, j = l, ... ,Ja e estados à esquerda u~(= u{), estes calculados de maneira 
análoga à ui conforme Figura 3.4. 

A solução para t 11 (j0 -1) &amp;lt;t::; t11(jo) ê dada pela composição: 

(3.22) 

38 



Observamos aqui que a primeira s-onda é uma rarefação começando em U.Znj2 
e terminando em u{" (esta rarefação sempre fará parte da composição da solução 
a partir de t ~ ln(Jo)). 

A Figura 3.8 mostra a configuração parcial das características enquanto sd(j) 2: 

Etapa 2: Construção da curva Y12 

(2.A) : Cálculo do primeiro e segundo ponto: Tomemos Q 1 com coorde-
nadas (Yt2(1), t12(l)) como sendo igual ao ultimo ponto da curva Yn· Portanto 
Q1 = Pia· Consideremos então o problema de Riemann em Q1 com estado a 
esquerda Ue = u{c e estado a direita ud = u~"+l. Como sd(jo + 1) &amp;lt;sk, a solução 
agora é do tipo (3.15), ou seja: 

u* _E__, u 2 ~ u~a+l (3.23) 

Lembramos como foi descrito em (3.15) que a s-onda que liga u 2 a u~o+l é 
um choque na saturação e que u 2 = (s2,Cinj1 ), sendo s 2 tal que, Àc(s2,cinjd = 
&gt;.s(s*,cinj2), s2 &amp;lt;s*. Geometricamente, é dado pela abcissa do ponto de inter-
seção da reta que passa por A= (s*,J(s*,cinj 2 ) e B = (-k,O), k = Swi, com o 

Sn 
gráfico da função de fluxo fracionário f(s, Cinjl) conforme Figura 3.9. 

\ 

/'' 
' 

Figura 3.9 : Cálculo de u2 = (s 2 , Cinjl)· 

O segundo ponto da curva y12 , Q2 = (y12(2), t 12 (2)) é obtido pela interseção 
da reta característica com inclinação À 8 ( u~o+ 1) com o s-choque de inclinação dada 

. +1 
por m(S.," ) onde m(x)é dada por: 

39 



( ) 
~/-"( xec,,_c.,,n'éjl")_---'-f;i-( s_'c_• c_,in::,J':-él) m x =-

x- s 2 
(3.24) 

Na Figura 3.10 apresentamos a construção do ponto Q 2 geométricamente. 
A solução global s(x, t) e c(x, t) para t 12 (1) &amp;lt;t &amp;lt;t 12 (2) é dada pela com-

posiçao: 

(3.25) 

(2.B): Cálculo do terceiro ponto: Consideramos o problema de Riemann 
sobre Q3 com estado à esquerda Ue = u 2 e estado a direita ud = u~o+

2 . A solução 
é dada pelo s-choque: 

(3.26) 

Calculamos então o valor de Q3 = (YI2(3), t12(3)) como sendo a interseção 
da reta característica com inclinação ,\ 8 ( u:+ ) com o s-choque com inclinação 
m{u~0 +1). A Figura 3.11 ilustra esta situação. 

t 

yn "' 

k_ leque de r&lt;&gt;refaçiio 

_ choque 

X 

Figura 3.10 : O cálculo de Q2 • 

t 

º' 

~ leque de rarefação 

choque 

X 

Figura 3.11 : O cálculo de Q 3 

(2.C) : Cálculo do último ponto Continuamos com o procedimento anterior 
até j = n. Neste caso teremos sd = sm. Consideramos o problema de Riemann 
em Qn-1 = (YI2(n- 1), t12(n- 1)) com estados à esquerda e à direita dados por 
Ue = (82, Cinjl) e Ud = (sd, Cinji)· 

40 



I 

"' 

_ choque 

X 

Figura 3.12 : Cálculo de Q, 

O ponto Qn é obtido pela interseção da reta característica com inclinação com 
inclinação ,\5 (u~) com a reta( curva de choque) com inclinação dada por m(ud) 
como podemos ver na figura 3.12. 

Observamos que a poligonal que une os pontos Q1,Q 2 , ..• , Q, é um s-choque 
e de acordo com a solução dada em (3.15) o estado à esquerda desta curva em 
qualquer ponto será u 2 = (s 2 ,cinjd· Pela própria construção ela será denotada 
por Y1z· 

Etapa 3: Construção da curva y13, y 14 e Yo 

a) curva yl3: Consideremos o problema de Riemann em Qn com estado a 
esquerda Ue = Uz e estado a direita ud = u 0. A solução é dada por um s-choque, 
neste caso: 

(3.27) 

Este choque é urna reta que se propaga a partir de Q, e será denotada por y13 
( ver Figura 3.13). 

b) curva yl4 A solução está bem definida acima das curvas Yn e Y12 pelas 
características do leque de rarefação que se formam a partir delas. Dentre elas um 
outro choque aparece naturalmente na solução final, já que a partir de t = tn (jo) 
o c-choque: 

(3.28) 

41 



sempre faz parte da composição da solução, como vemos em (3.24) e (3.25). Este 
choque é uma reta que se propaga a partir de Pjo, com inclinação dada por &gt;.8 ( u 2 ) 
e será denotado por Y14· 

Para os dados iniciais propostos podemos mostrar que a velocidade de y 13 é 
menor que a velocidade de Y14 e sendo assim estes dois choques não vão interagir 
( ver Figura 3.13). 

Com isto descrevemos o algoritmo da construção das curvas de choque para o 
problema da injeção de bancos. Para completar vamos denotar por y0 o choque 
formado pela equação de Buckley-Leverett. 

t 

- choques 

X 

Figura 3.13 : Configuração final das características para o problema da injeção 
de 2 bancos. 

A Figura 3.13 mostra a configuração das características e curvas de descon-
tinuidade para o problema da injeção de dois bancos, para o caso sem adsorção. 
Usando esta configuração podemos calcular o valor da saturação e da concentração 
em cada ponto (x, t) com t &gt; O e O :s; x :s; 1 

Observação: Se refinamos o vetor sd, ou seja, aumentamos a quantidade de 
características na rarefação correspondente ao banco de água, as curvas y11 e Y12 
tendem á uma configuração mais suavizada. 

As Figuras 3.14, 3.15, 3.16 e 3.17 ilustram os perfis de saturação e concentração 
para os seguintes valores de t : 

aJO&amp;lt;t &amp;lt;t, b)t, &amp;lt;t &amp;lt;tu(j,) c)tu(jo) &amp;lt;t &amp;lt;tl2(n) d) t,(n) &amp;lt;t 

42 



0.8 0.0 

0.0 

0.6 
0., 

0.0 
s(x,t) 

o.; 
0.4 

o .• 
O.&gt; 

0.2 
O.&gt; c(x,t) 

0., 

o, 
'·' O.&gt; " "' 

Figura 3.14 Figura 3.15 

08 
sÇ&lt;,I) 

" 
sP,,t) 

0.0 0.0 

O. o 0.0 

O.&gt;&amp;lt;i%.1) 0.2 c(r.I)~O 

I 
o, O&gt; OA ••• '·' 'o 

• 
0.2 OA 0.0 0.0 

Figura 3.16 Figura 3.17 

3.3. A injeção de três bancos 

O modelo matemático da injeção de um terceiro banco, consiste em alterarmos a 
condição de contorno, que agora fica da seguinte forma: 

{ 

s(O,t) = 1 
s(O,t)=l 
s(O,t)=l 

c( O, t) = Cinjl O :S t &amp;lt;t, 
c( O, t) :::;;: Cinj2 to ~ t &amp;lt;tl 
c( O, t) = Cinj3, t1 ::; t::; 1 

43 

(3.29) 



t 

Yn 
Yo 

2_ leque de ,.arejaçao 

- choques 

X 

Figura 3.18 : Configuração final das características para o caso de três bancos. 

Supondo que a partir de t = t 11 paramos de injetar água com polímero e 
voltamos a injetar água sem polímero, devemos ter Cznjl =O, C;.nj2 &gt; O e Ctnj3 = O. 
Olhando a configuração final das características para o caso em que dois bancos 
são injetados (ver Figura 3.13), observamos que se injetamos um terceiro banco 
à partir de t = t 1 uma nova curva de choque se forma pela interação entre as 
características já existentes na configuração associado a t &amp;lt;t 1 e as caratcerísticas 
associadas a injeção do novo banco. Esta nova curva será denotada por Y2l e sua 
construção é feita de maneira análoga a curva y11 , ou seja, considerando problemas 
de Riemann locais. A Figura 3.18 mostra uma configuração para as rarefações e 
choques no caso da injeção de três bancos. 

Se injetarmos novos bancos, novas curvas de descontinuidades aparecerão e o 
tratamento será análogo. Sendo assim a solução semi-analítica para o caso sem 
adsorção fica bem definida. Esta solução depende exclusivamente do tratamento 
dado as descontinuidades do problema. 

3.4. Modelo com Adsorção - Injeção de dois bancos. 

O caso da injeção de dois bancos considerando o fator adsorção consiste em resolver 
o sistema (3.2) com condições iniciais e de fronteira do tipo (3.13) 

Supondo que o primeiro banco injetado seja de água e o segundo seja de água 
com polímero, teremos Cinjl = O e Cinj2 &gt; O. As descontinuidades são calculadas 
de maneira análoga ao caso sem adsorção, pois as c-ondas quando Cinjl &amp;lt;CinjZ 
serão sempre c-choques e as s-ondas soluções da equação de Buckley-Leverett. 

44 



O caso em que a concentração do segundo banco é menor que a concentração 
do primeiro banco torna-se complicado quando tentamos aplicar a mesma técnica 
utilizada nos casos anteriores. Tal complicação surge da dificuldade de analisarmos 
a interação entre uma s-rarefação e uma c-rarefação que aparece na solução do 
problema de Riemann apresentado no capítulo 2. Este é um problema interessante 
para ser estudado futuramente. 

Com base nestes algoritmos elaboramos um programa que calcula estas curvas 
de choque e as saturações e concentrações para cada tempo t. Além disso o 
programa calcula a produção de óleo durante qualquer período de injeção de 
fluidos no reservatório. 

Nosso objetivo no próximo capítulo será utilizar este programa para fazermos 
comparações entre os processo de recuperação citados até aqui e também analisar 
as vantagens do método semi-analítico descrito (na simulação do processo) em 
relação a métodos numéricos padrões para problemas deste tipo. 

Lembramos também que se tomarmos a saturação de injeção no segundo banco 
Sinj 2 &amp;lt;1 outra descontinuidade aparece e pode ser calculada utilizando a mesma 
técnica utilizada no cálculo de Yn· O programa desenvolvido não leva em conta 
esta possibilidade. Ele foi desenvolvido tomando saturações de injeção dos bancos 
sempre iguais à 1. 

45 



4. TESTES NUMÉRICOS 

Neste capítulo vamos apresentar os resultados obtidos da analise dos experimentos 
numéricos fornecidos pelo programa computacional desenvolvido. Este programa 

simula a solução para o problema da recuperação de petróleo usando aditivos 
ativos à água injetada no reservatório. 

Nos nossos programas utilizaremos a seguinte expressão algébrica para simular 
a função de fluxo fracionário: 

s' 
f(s, c)~ s 2 + (0.5 + 100.c).(1- s)' ( 4.1) 

para o caso da injeção de polímeros ( polymer-flooding). No caso da injeção de 
água sem polímeros, tomamos c = O nesta expressão e temos: 

s' 
f(s) ~ s 2 + 0.5(1- s)' ( 4.1) 

De acordo com Lake ( [LAK} ) o fenômeno da adsorção será simulado pela 
expressao: 

( ) ----'k!.,.-·C_ a c = :-
1 + k2.C 

que dependerá dos parâmetros k 1 e k2 que também serão fixados. 
tomaremos k1 = 0.2 e k2 = 100. 

4.1. Simulações no caso sem adsorção. 

( 4.2) 

No nosso caso 

Na simulação do processo de recuperação de óleo o que nos interessa é calcular o 
valor da saturação de óleo em x = 1, que de acordo com nossa adimensionalização 
representa a localização do poço produtor, ou seja, onde mediremos a quantidade 
de óleo que está sendo produzida pelo processo. 

46 



Como nossos programas foram elaborados tendo como incógnita a saturação 
de água, s(x, t), o cálculo da quantidade de óleo produzida como função do tempo 
é medida, de acordo com Marle ([MAR]) pela integral: 

Q,(t) ~ J,\1- f(s(1,r),c(1,r)))dr (4.3) 
que representa o acumulado de óleo recuperado expresso como uma fração do 
volume poroso. 

Para os testes que apresentaremos nos experimentos a seguir, vamos considerar 
um reservatório com as seguintes características: saturação de água inicial Swi = 
0.1 (correspondendo a 10% do volume total); saturação de óleo residual Sor = 0.1 
e concentração de polímero c = O 

Experimento 1: Injeção de água com polúnero - sem adsorção. 

Vamos injetar a mistura água com polúneros no reservatório com saturação de 
injeção s = 1 e com concentração de polímeros c= 0.01. 

O problema de Riemann neste caso é dado pelo sistema de equações (3.1) com 
estados à esquerda e à direita dados por: 

{ 
s(x, O) ~ s, ~O, 
s(O,t) ~ s, ~ 1, 

'·' 
'·' 
'·' 
'·' 

'" '·' &amp;amp; 0,5 
OA 

'·' 
'·' 
'·' 
o. o 

o 

c(x, O)~ c,~ O (estado à direita) 
c(O,t) ~c,~ 0.01 (estado à esquerda) 

. .o· .. .a· .. o--- .a 
p· 

ci 

- - o - -lnje.;ão da 
poli mero; 

o; ' ' ' ; t 

Figura 4.1: Evolução da produção de óleo Q0 (t) para o processo de injeção de 
ág1.1a com polímeros. 

47 



O programa desenvolvido calcula o valor da saturação s(x, t) baseado na 
solução analítica do problema de Riemann, apresentada por Isaacson (ver [ISA])) 
e consiste da composição c-ondas e s-ondas (capítulo 2 ). A Figura 4.1 mostra que 
a quantidade de óleo recuperado quando um volume poroso é injetado, tn = 1, é 
da ordem de 90 %. Para tn = 5 a recuperação é da ordem de 97%. 

Igualmente ao caso anterior temos uma convergência assintótica do gráfico da 
produção para o valor máximo, que no caso será Qo = 1. Observamos porém que 
esta convergência é mais rápida quando comparada com a injeção de água (water-
flooding ). A vantagem da injeção de polímero está no fato de que recuperamos 
uma quantidade de óleo maior num espaço de tempo menor. Esta conclusão 
está ilustrada no gráfico da Figura 4.2 na qual apresetamos os resultados da 
recuperação nos casos da injeção de água ( water-flooding) ou água com polímeros 
(polymer-flooding). 

'-' 

'·' 
'·' 
'·' 
'-' 

~ 0.5 
o.• 

.o··_:;:::.:~:: :i::·:!&amp;amp; 
.· .. 

---&lt;&gt; -lryoçliodo 
0.3 á~· 

0,2 -o -·~~·· 
0.1 ""''""'""' 
,o·---------~ 

'·' • 

Figura 4.2 : Comparação dos gráficos de evolução da produção para a injeção de 
água e a injeção de polímeros. 

Experimento 2: Influ~ncia da concentração de polímero na produção 

Aqui vamos variar a concentração de polímero c misturado à água no caso sem 
adsorção.De acordo com a literatura (ver [LAK] ) um valor máximo para a con-
centração está próximo de c = 0.05. A título de ilustração calculamos até o valor 
c= 0.1. 

48 



Figura 4.3 : Infiuéncia da concentração de polímero c na água durante o 
processo de injeção. 

Nesta simulação observamos um aumento da ordem de 18% na produção 
quando um volume poroso de fluido é injetado, se passamos da concentração c = O 
para a concentração c= 0.1, ou seja neste mesmo período de tempo (tn = 1) esta-
mos recuperando uma quantidade de óleo 18% maior. Novamente observamos que 
o gráfico tende a convergir para o valor máximo (100% que corresponde à Q0 = 1), 
quando t cresce. Uma quantidade maior de polímero acarretará portanto em uma 
recuperação mais rápida. Isto está evidenciado na figura 4.3 onde apresentamos 
as recuperações obtidas nos tempos 1 :S t ::S 5, em volumes porosos. A título de 
comparação usamos, nesta figura, c= O, c= 0.02, c= 0.05 e c= 0.1. 

Lembramos que estes resultados foram obtidos utilizando-se a função de fluxo 
fracionário dada pela expressão (4.1) no inicio do capítulo. Entretanto, como ob-
servado por Isaacson ([ISA]) a eficiência da recuperação depende das propriedades 
da função de fiuxo fracionário e das características iniciais do reservatório. 

4.2. Simulações no caso com adsorção. 

Neste caso, no sistema de equações diferenciais parciais que modela o deslocamento 
do óleo, aparece a função a( c) dada em (4.3) que modela a adsorção. O sistema 
neste caso é dado por: 

{ 
s, + f(s,c)x =O 
(s.c + a(c))t + (c.f(s,c))x =O 

49 



Experimento 3 : Injeção de água com polímeros - com adsorção 

Com os dados dos experimentos anteriores calculamos a produção de óleo quando 
injetamos água com polímeros1 utilizando o modelo que leva em conta o efeito da 
adsorção. 

O gráfico da Figura 4.4 mostra a evolução da produção de óleo durante o 
período de injeção de fluidos 1 quando injetamos água e quando injetamos água 
com polímeros no caso com adsorção. 

Nota-se que a partir de tn = 2 a produção tende ao valor máximo em Qo = 1 
( corresponde a 100% do óleo recuperável) e que a recuperação é mais rápida para 
o caso da injeção de água com polímeros. 

'o 
0.0 

'·' 
'·' •• g 0,5 
" '·' 
'·' 
••• 
0,0 

• 0.0 

.·· 
o --[]··· -[] 

J;l: 0::: ~= •: • : ... • • • ·0• • • • •O 

• ·&lt;&gt; ··a(c) »O 

· o · ·lnJeçilio de água 

' 

Figura 4.4 : Evolução da produção de óleo Q0 (t) para o caso da injeção de 
polímeros com adsorção. 

4.3. Simulações no caso da injeção de bancos. 

Com o auxilio do algoritmo apresentado no capítulo anterior elaboramos um pro-
grama computacional que calcula a solução para o problema da injeção de ban-
cos. Através deste programa vamos fazer alguns experimentos que nos mostrem 
as vantagens deste processo sobre os processos de injeção de um banco de água 
(waterfiooding) ou da injeção de água com polímeros ( polimer-fiooding ). 

Para nossas simulações iniciais vamos ainda considerar que o reservatório tem 
saturação de água inicial Swi = 0.1 e saturação de óleo residual sor = 0.1 e 
concentração de polímero c = O. 

50 



Experimento 4: Injeção de 2 bancos - Caso sem adsorção 

Vamos considerar a situação em que injetamos 20% de um volume poroso de água 
no reservatório e a partir daí injetamos a mistura de água com polímero com uma 
concentração c= 0.01. De acordo com os nossos cálculos, injetar 20% do volume 

poroso de água corresponde à tomarmos t0 = 
0

·
2 

(s 11 = 1- Swi- sor) na solução 
Sn 

do sistema de equações parciais adimensional. 
Assim as seguintes condições iniciais e de contorno para o sistema são dadas 

por: 

{ 

s(x,O) ~O 
s(O,t)~l 

s(x,O) ~ 1 

c(x,O) ~O O&amp;lt;o;&lt;: 1 
c(O,t)~o O&lt;t&lt;:t, 
c(x, O) ~ 0,01 t, &amp;lt;t 

Na Figura 4.5 mostramos os perfis da saturação calculada no programa com-
putacional para os valores de t = t2 e t =ta, sendo que t2 &amp;lt;t3. 

s(x, ts) 

o x . cgmpro~Mntc 

Figura 4.5 : Perfil da saturação s(x, t) para dois valores de t. 

Utilizando o programa computacional calculamos a evolução da produção de 
óleo até que 5 volumes porosos de fluido sejam injetados, ou seja até tn = 5. Os 
cálculos mostram (ver Figura 4.6) que a produção converge para a quantidade de 
óleo máxima Q 0 = 1. 

51 



o·····l:l· ··C·· ··CJ 
[] .... 

·O· ·lnjoç6odo2-• 

Figura 4.6 : Evolução da produção de óleo Q0 (t) durante o perído de injeção dos 
bancos de água e água com polímeros. 

Na Figura 4. 7 comparamos a evolução da produção, quando injetamos somente 
água com polímeros e quando injetamos um banco de água seguido de água com 
polímeros. Observamos que a produção é um pouco maior no inicio (tv = 1), 
mas no final é praticamente a mesma. Matematicamente poderíamos dizer que 
temos uma vantagem com relação a custo de produção, já que gastamos menos 
polímeros para recuperar a mesma quantidade de óleo em um mesmo espaço de 
tempo. 

..o 
0.0 

o .• 
o.• 

e o.a 
8 0.5 

o.• 
O.&gt; 
O.&gt; 
o' 
0.0 . 

o 00 

. ·li· ... ·li· ... ·li 

• • O • ·lnjoçllo de 2 bancos 

• • 'O • •lnJeç:llo de pollmoro• 

Figura 4. 7 : Evolução da produção de óleo por meio da injeção de polímeros e a 
injeção de bancos. 

52 



Experimento 5: Influência do valor de t 0 na produção 

No caso da injeção de bancos1 o valor de t 0 (tamanho do primeiro banco) desem-
penha papel importante para uma análise da produção de óleo. Vamos destacar 
este fato neste experimento, analisando a produção de óleo depois que um volume 
poroso de fluido foi injetado (tv = l) para o caso sem adsorção. Para o caso com 
adsorção os resultados serão análogos. 

0,95 

0,90 

0,85 

0,80 

0,75 

s 0,70 
o o 0,65 

0,60 

0,55 

0,50 
o 

~ {; ~ 

Figura 4.8: A produção Q0 (1) em função da variação do valor de t 0 • 

Fazendo variar o valor de t 0 , verificamos que a quantidade de óleo produzida 
é para t 0 = 0.1 é maior que a quantidade produzida para to = 0.8. O fato é que 
quando t 0 = 0.1 estamos injetando pouca água e bastante polímero e a produção é 
dominada pela injeção de polímero. Para t 0 = 0.8, o processo está sendo dominado 
pela injeção de água que recupera uma quantidade menor. A Figura 4.8 mostra 
o gráfico da produção de óleo Q 0 (1) (um volume poroso injetado) para diversos 
valores de t 0 • 

Observamos através do gráfico, que durante o processo de recuperação, se 
já tivermos injetado 50% do volume poroso de água no reservatório não seria 
interessante injetarmos a mistura de água com polímero, pois isso não acarretará 
em um aumento da produção de óleo quando tn = 1. 

Experimento 6: A injeção de 2 bancos para o caso com adsorção. 

Considerando os dados do Experimento 4 calculamos a produção de óleo quando 
injetamos dois bancos, sendo o primeiro de água e o segundo de água com polímeros, 
no caso em que o fator adsorção é considerado. 

53 



'·' 
'·' 
'·' 

_ . .o- ... o·--· o-·- -o 
o·· 

_.o----o----o----o----o 

O} 

0,0 p' 

gO,S 
o 
Q0,4 

. 0,3 · · -o- · ·Com adsorção 

'·' - - O - Sem adsorção 
'·' 
0,0 

o 0,0 ' 
tempo adimesional 

Figura 4.9 : A evolução da produção de óleo Q0 (t) quando injetamos 2 bancos 
para os modelos com adsorção e sem adsorção. 

No gráfico da Figura 4.9 apresentamos a comparação da evolução produção 
nos casos da injeção de dois bancos para os modelos com e sem adsorção. Nele 
podemos concluir que a produção para o caso com adsorção é mais lenta quando 
comparada com o caso sem adsorção. 

Experimento 7: A injeção de 3 bancos para o caso sem adsorção 

Vamos considerar agora o processo de recuperação que consiste da injeção de 
três bancos, sendo o primeiro de água, o segundo de água com polímero e o 
terceiro novamente de água. Vamos considerar o modelo sem adsorção proposto 
por Isaacson. Como ilustração consideremos a injeção de fluidos no reservatório 
distribuídos da seguinte maneira: 20% de água no primeiro banco, seguida de 
mais 10% da mistura de água e polímero, este com concentração c= 0.01 e depois 
volta-se a injetar água. Para efeito de cálculo estamos supondo que o reservatório 
tenha saturação de água inicial Swi = 0.1 e saturação de óleo residual Sor = 0.1. 
Esta situação corresponde a tomarmos as seguintes condições iniciais e de contorno 
para o modelo matemático: 

{
s(x,O)~O 

s(O,t) ~ 1 
s(O,t)~1 

s(O,t)~l 

c(x,O) ~O 
c(O,t)~o 
c( O, t) ~ 0.01 
c(O,t)~O 

54 

O&lt;x:Sl 
Ü&lt;t:s;to 
t 0 &amp;lt;t :::; t1 

tl &amp;lt;t 



,,, 
,,, 
'" O} 
O,ó 

g 0.5 
"" 0,, 
0,, 

OJ 
0,0 

" 1 2 .1 4. 5 {i t: tempo adimensional 

Figura 4.10 : Evolução da produção quando injetamos 3 bancos. 

Notamos através do gráfico da Figura 4.10 que a produção associada à injeção 
de um volume poroso no reservatório é de aproximadamente 89% da quantidade 
total. Quando tv = 5 o gráfico mostra que a produção tende a se estabilizar e a 
recuperação é mais lenta. 

&gt;,O 

•&gt; 

" ,,, 
0,0 

o 
&amp;amp;o,&gt; 

0,0 

" 
" O,&gt; 
0,0 

ó 

--6--lnJ•Ç!Ode 
banco• 

• • O··!njoçii.odo 
bl!rtOOi 

-tempo adimens1o 
Figura 4.11 : Comparação da evolução da produção de óleo Qa(t) quando 

injetamos 2 e 3 bancos. 

O programa desenvolvido calcula o valor da saturação s(x, t) baseado na 
solução analítica do problema de Riemann, apresentada por Isaacson (ver [ISA])) 
e consiste da composição c-ondas e s-ondas (capítulo 2 ). A Figura 4.1 mostra que 

55 



a quantidade de óleo recuperado quando um volume poroso é injetado, tv = 1, é 
da ordem de 90 %. Para t 0 = 5 a recuperação é da ordem de 97%. 

Lembramos mais uma vez, que como usamos a teoria do fluxo fracionário o 
comportamento da função fluxo fracionário é crucial. 

4.4. O método numérico e o semi-analítico 

Consideremos o seguinte esquema numérico (ver [TVT]) para a solução do sistema 
de equações diferenciais parciais associados aos modelos sem adsorção : 

Nesta notação, 

sj+ 1 = sj- a(fj- !j) 
c~+ I =c"':- agn(c~- c"!) 

J J J J J 

(sj,cj) = (s(j.l;x,n.b,t),c(j.b,x,n.b,t)) '&lt;l(j,n) E z+ X z+ 

denota a solução aproximada do modelo em questão e 

b,x 

" - b,t 
r; f(sj, cj) 
gj g(sj,cj) 

(4.4) 

A função g(s,c)é dada por: g(s,c) = f(s,c) para o modelo sem adsorção e 
s 

g(s, c)= f(s, ~\ para o modelo com adsorção. 
s+hc 

Assumimos que os parâmetros da malha satisfazem a condição CFL (Condição 
b,x 8! 

de Courant-Friedrichs-Lewy) dada por CFL = A sup {c,--,g} ~ 1. Para a 
~t (.s,c)EJ:xJ us 

função de fluxo fracionário que estamos utilizando ela é dada pelo valor C F L = ~~. 
Utilizando o esquema numérico dado acima e o programa computacional que 

implementa a solução analítica do problema, vamos comparar as soluções nos 
casos citados anteriormente. 

A) Injeção de água com polímeros sem adsorção 

Consideremos o caso da injeção de água com polímeros sem adsorção. 

56 



Na Figura 4.12 apresentamos os perfis da solução calculada utilizando o método 
numérico citado e o método semi-analítico descrito nos capítulos anteriores. No-
tamos que a solução numérica descreve bem a parte contínua da solução analítica. 
Nas descontinuidades porém observamos que a solução numérica apresenta dis-
persão, suavizando a solução naquele ponto. Na figura o valor da concentração 
está multiplicado por 10 para que possamos ter uma melhor visualização. 

B) Injeção de 2 bancos - Caso sem adsorção 

Neste caso o problema apresenta três descontinuidades. Verificamos que a solução 
numérica também suaviza as descontinuidades. A Figura 4.13 mostra os perfis de 
saturação e concentração das soluções calculadas através dos esquemas numérico 
e semi-analítico. 

Figura 4.12 

soUçfio ....,.rir:a 
soluçao analillca 

' ' 
···,+-----, 

soluça~ munérica 

soluçao lllf(1./Uico 

Figura 4.13 

C) Injeção de 3 bancos - Caso sem adsorção 

Neste caso a solução apresenta quatro descontinuidades na solução mostradas 
na Figura 4.14. Como nos casos anteriores a solução numérica suaviza estas 
descontinuidades deixando de mostrar certas particularidades da solução. 

57 



solução analítica 

solução numirica 

Figura 4.14 

"' D.009 
"" 
"" 
0.0116 

0.01)5 

0.004 

0.003 

0.002 

0.001 

, , 
'·' 

,, 

Figura 4.15 : Convergência da solução numérica para a solução semi-analítica no 
plano das 8 x c. 

Na Figura 4.15 apresentamos os caminhos da solução obtida no espaço de 
estados. Podemos notar que as soluções numéricas em 8 X c, converge para a 
solução semi-analítica apresentada. De acordo com Le Veque ([LEV]) e Crandall 
( ver [CRA]) podemos afirmar que a solução semi-analítica obtida é a solução 
fisicamente (ou solução de entropia) correta uma vez que o método numérico 
utilizado é um método de primeira ordem monótono e convergente. Este teste 
serve como validação da solução que apresentamos no capítulo 3. 

58 



E) Métodos semi-analítico e numérico quanto ao tempo computacional 

O fato importante a ser destacado é o tempo computacional gasto para a simulação 
do processo. Observamos que apesar de o método semi-analítico ter uma imple-
mentação computacional mais elaborada, o tempo computacional gasto para apre-
sentarmos a solução é muito menor que o gasto pelo esquema numérico proposto, 
além disso a solução semi-analítica descreve as descontinuidades da solução com 
mais precisão (já que as descontinuidades são suavizadas no método numérico). 

A Tabela abaixo compara os dados obtidos para a solução do Problema de 
Riemann associado a injeção de polímeros, caso sem adsorção. Ela mostra que o 
tempo gasto pelo método semi-analítico para obtenção da solução é bem inferior 
ao do método numérico. Por exemplo se tomamos uma malha com 100 pontos, 
observamos que o método numérico gasta mais que o dobro do tempo para a 
obtenção da solução. Para o caso de 1000 pontos, o método numérico chega a 
gastar mais de 150 vezes o tempo gasto pelo método semi-analítico. Tais medidas 
de tempo foram realizadas utilizando recursos do programa MATLAB. 

n° de pontos 
tempo gasto pelo tempo gasto pelo 

Método semi-analítico Método Numérico 
100 3 8 
200 4 34 
300 4 77 
400 4 136 

( 4.5) 
500 4 214 
600 4 312 
700 5 416 
800 5 546 
900 5 693 
1000 5 854 

Podemos dizer que o método semi-analítico é mais vantajoso em vários aspectos 
como o tempo gasto para obtenção da solução (conforme tabela ) sendo portanto 
recomendável para problemas que exijam repetidos cálculos da solução como por 
exemplo no cálculo da injeção de bancos 2D configuração 5-spot no reservatório 
usando a teoria dos canais de fluxo. Outro aspecto importante é uma melhor 
reprodução das frentes de descontinuidades que aparecem no problema. 

59 



5. CONCLUSÕES 

O propósito deste trabalho foi a implementação e elaboração de algoritmos para 
a solução numérica do sitema de equações que modela o problema da recu-
peração de petróleo através da injeção de água 1 injeção de água com polímeros e 
principlamente o da injeção de bancos. 

Para o problema da injeção de bancos, que é caracterizado por um sistema de 
equações diferenciais parciais com condições iniciais e de contorno dadas, desen-
volvemos um método, onde utilizamos as soluções do problema de Riemann para 
a localização das curvas de descontinuidades que aparecem no problema. Esta 
também é a idéia dos métodos Front-Tracking. A diferença é que nas regiões de 
suavidade utilizamos também o método das características. 

Para a elaboração a apresentação dos algoritmos utilizamos as soluções ap-
resentadas por Isaacson [ISA], Johansen [JOH] e também as idéias lançadas por 
Barenblatt [BRB] e Bedrikovetsky [BED]. Os algoritmos localizam as descon-
tinuidades da solução no plano x X t, como ilustrado na Figura 5.1 através do 
estudo da interação entre ondas de choque e de rarefação que aparecem na solução 
do problema de Riemann. 

Com a implementação deste algoritmo, fizemos simulações de situações práti-
cas associadas à injeção de bancos. Ilustramos através de exemplos que é possível 
analisar as vantagens dos processos de recuperação quando comparamos a pro-
dução de óleo. Alguns resultados já conhecidos são confirmadosl como a melhora 
da eficiência da recuperação quando utilizamos o processos da injeção de bancos. 
Observanmos porém que vários fatores influenciam esta melhora, como por exem-
plo o tamanho dos bancos (valor de t 0 ), as condições iniciais do reservatório (swi 
e sor) e a quantidade de polímero (concentração c) adicionada a água. A função 
fluxo fracionário também exerce influência no processo de recuperação, uma vez 
que para fluidos com características diferentes os resultados podem ser outros. 

Comparamos o método semi-analítico estudado com um método numérico 
de primeira ordem ([TVT]). Nesta comparação analisamos o comportamento da 
solução no plano das fases s X c e vimos através de exemplos que a solução obtida 

60 



pelo método numérico converge para a solução semi-analítica. De acordo com 
Crandall [ CRA] e Le Veque [LEV] esta convergência garante que a solução dada 
pelo algoritmo é a solução de entropia ou solução fisiscamente correta. 

t 

yu 

X 

Figura 5.1 : As descontinuidades da solução para o problema da injeção de dois 
bancos 

A implementação da solução utilizando o método semi-analítico é elaborada, 
pois envolve o estudo da solução do Problema de Rieman associado. Usamos a 
comparação com o método de primeira ordem citado para ilustrar que a solução 
semi-analítica é obtida com um tempo computacional bem inferior. Este fato está 
explicitado no capítulo 4, seção 4.4 resumido na tabela (4.5). Entretanto neste 
trabalho não fizemos comparações com métodos numéricos mais eficientes como 
por exemplo os métodos de alta resolução. 

Os programas computacionais foram elaborados dentro do ambiente MAT-
LAB, o qual possui uma linguagem própria próxima da linguagem C. V árias roti-
nas do MATLAB facilitaram a implementação do nosso algoritmo. Destaque tam-
bém para a parte gráfica que nos permitiu uma melhor visualização das soluções 
calculadas. 

5.1. Trabalhos Futuros 

Pretendemos continuar o estudo do caso com adsorção. De fato, neste trabalho 
não conseguimos aplicar as técnicas apresentadas no capítulo 3, para estabelecer 
a solução do problema da injeção de bancos quando a concentração de polúnero 

61 



injetada no segundo banco é menor que a concentração injetada no primeiro banco. 
Neste caso a dificuldade se deve à solução do problema de Riemann que apresenta 
c-rarefações o que não acontece no caso sem adsorção. 

Podemos ainda aplicar a técnica apresentada no capítulo 3 para outros proces-
sos relacionados com a produção de petróleo. 

Numa próxima fase de nossos estudos pretendemos aplicar métodos numéricos 
de alta resolução no problema da injeção de bancos e compara-los com o método 
semi-analítico estudado. 

Vamos aprimorar o programa computacional desenvolvido de modo que pos-
samos varrer todas as possibilidades: uma vez que neste trabalho elaboramos os 
programas para alguns caso particulares. 

Outra possibilidade é abordar o caso bi-dirnensional, de maior interesse do 
ponto de vista prático. Cabe destacar aqui que a solução semi-analítica apresen-
tada neste trabalho poderá ser usada neste caso utilizando a teoria dos chamados 
canais de fluxo. 

62 



6. APÊNDICE A 

6.1. A descrição do modelo 

A obtenção do modelo matemático para a injeção de água com aditivos é baseada 
sobre considerações de balanço de material ([ISA],[BRB]]. Assumindo que fluido 
e rocha são incompreensíveis, que os volumes não mudam quando o polímero é 
dissolvido na água, o princípio de conservação de massa de água, óleo e aditivo 
num escoamento bifasico unidimensional nos conduz às seguintes equações: 

(6.1) 

cjJ.s~ +v~ =O (6.2) 

&lt;j;.(s.c), + (v.c)x =O (6.3) 
Nestas equações, s (respectivamente 8°) representa a saturação de água (sat-

urção do óleo), v (respectivamente v 0 ) a taxa de escoamento volumétrico da fase 
água ( óleo ) ,c/J é a porosidade da rocha ( toarnda constante ) e c denota a con-
centração de aditivo na água. Ignorando os efeitos de gravidade, capilaridade e 
dispersão, temos pela Lei de Darcy: 

v= -À.prr; (6.4) 

o ,\" V=- ·Px (6.5) 

onde 

À= K.k (6.6) 
fl-

)..O= K.ko 
(6.7) 

fl-" 

63 



Nas equações acima pé a pressão do fluido, K é a permeabilidade absoluta da 
rocha, k = k(s, c) e ko = k 0 (s) são as permeabilidades relativas da fase água e óleo 
respectivamente, f..L: f..L 0 Sâo as correspondentes viscosidades. 

Somando (6.1) com (6.2) temos: 

rj;.(s, + s;) + (vx +v~)= O 
corno, s + s 0 = 1, segue que: 

St + s~ = ( s + s 0 )t = O 
e portanto: 

(v+ v')x =O 

Assim a taxa de escoamento volumétrico total 

é constante. Eliminando a pressão nas relações de Darcy obtemos: 

À 
V=VTÀ+Ào=VT.f 

onde f= f(s, c) é a conhecida função de fluxo fracionário: 

(6.8) 

(6.9) 

(6.10) 

(6.11) 

(6.12) 

(6.13) 

Nesta função a dependência de sé inerente as permeabilidades relativas k e k 0 

enquanto que a dependência de c é introduzida através da viscosidade f..L = p(c) 
da fase aquosa. 

Usando vT e . f, o modelo se rescreve na forma: 

(6.14) 

rj;.(s.c), + vT(c .. f)x =O (6.15) 
Na adimensionalização usamos o comprimento da região considerada que é 

denotado por L e outras variáveis já definidas. Introduzimos portanto um novo 
sistema de coordenadas.Aqui cjJ é a porosidade da rocha que é tomada constante. 

64 



~ = !r.t 
{ 

t X 

t =-
,P.L 

(6.16) 

onde o sistema se rescreve na forma: 

{ 
s, + f(s, c)x =O 
(s.c), + (c.f(s,c))x =O (6.17) 

para o caso sem adsorção e 

{ 

St + f(s,c)x =O 
(s.c +a( c)),+ (c.f(s,c))x =O 

(6.18) 

para o caso com adsorção, onde pôr simplicidade, usaremos (x, t) para denotar 
as variáveis adirnensionalizadas. Para maiores detalhes ver [JOH] ou [ISA]. 

6.2. Solução fraca 

Consideremos o problema de Riemann para um sistema de equações da forma: 

u1 +F(u)x=O (6.19) 

com condições iniciais: 

u(x D) = { u, se x&amp;lt;O 
' udsex&gt;O 

(6.20) 

Em geral as soluções de problemas do tipo (6.19)-(6.20) são descontínuas. As-
sim nós procuramos solução no sentido fraco, ou seja, u(x, t) é solução se satisfaz: 

1,00 1: (u(x,t).'f',(x, t) + F(u).'f'x(x, t))dx.dt + 1: u(x,O).'f'(X, O)dx (6.21) 
para toda função 'P com suporte compacto. 

6.3. Ondas simples 

As ondas simples são soluções no sentido fraco e podem ser descontínuas, chamadas 
de ondas de choque e as soluções continuas chamadas de ondas de rarefação. 

65 



A) Ondas de rarefação 

São soluções continuas do problema (6.19)-(6.20) da forma: 

{ 

u, se Ç &amp;lt;.\( u,) 
u(x, t) ~ v(Ç) se Ç ~À( v) 

u, se Ç &gt; .\(u,) 
(6.22) 

X 
onde Ç = t e À é um autovalor associado a um autovetor e!, e v é a curva integral 
do campo vetorial que conecta os estados Ue à ud juntamente com propriedade 
que v seja crescente de Ue para ud 

B) Ondas de choque 

Uma onda de choque conectando dois estados Ue = (se,ce) e Ud = (sd,cd) é urna 
solução fraca do problema de Riemann (6.19)-(6.20) da forma: 

u(x t) ~ { u, se Ç &amp;lt;6 
' u,seÇ&gt;6 

(6.23) 

onde á é a velocidade do choque. Para dar significado físico a estas soluções, 
u(x, t) deve satisfazer uma condição chamada de "Condição de Entropia" (ver 
[LEV], [JOH],[LAX]). Esta condição requer que as ondas de choque sejam evolu-
cionárias, isto é, qualquer onda de choque deve ser limite de soluções de ondas 
associadas a sistemas de viscosidades. 

A solução fraca da forma (6.23) deve satisfazer a condição de Rankine-Hugoniott 
(ver [LEV], [JOH] ,[ISA]) aplicadas as equações do sistema. Elas definem como deve 
ser as velocidades dos choques que formam a solução. Para o modelo de Isaacson, 
conclui-se que os choques devem ter velocidades dadas por: 

J(sd, c,) ~ J(s, ce) ~ 6 (6
_24) 

sd se. 

se C6 =f- cd· Os choques com estas velocidades serão chamados de c-choques. 
Se c, = cd, os choques são os que aparecem na solução da equação de Buckley-

Leverett e serão chamados de s-choques. Suas velocidades são dadas por: 

f(s,, c,)- f(s,, c,)~ 6(s,- s,) (6.25) 

Assim (6.24) e (6.25) definem explicitamente a velocidade de choque ó, para 
um c-choque e para um s-choque respectivamente para o caso sem adsorção. 

66 



Para o modelo com adsorção a condição de Rankine-Hugoniot fica nos dá: 

f(s,,c,) = f(s,,c,) =Ó (
6

_26 ) 
Sd + hLR Se + hLR 

como a velocidade dos c-choques ( '\Ter [JOH].). Os s-choques terão velocidades 
dadas também por (6.25). 

67 

;;; " ' '' r 
~ ~.-;o,:;;_, ;óT«:&lt;..!-;. ,;;;!J!il'i\&gt;..._, 
'C,..----·~··~--.,-·------"""" __ ; 



7. APÊNDICE B 

Apresentamos aqui a documentação dos programas desenvolvidos para a simulação 
dos processos de recuperação citados nos capítulos 3 e 4. 

Nossos programas foram todos desenvolvidos no ambiente MATLAB que pos-
sui uma linguagem de programação própria. Em vários momentos utilizamos 
rotinas pertencentes ao MATLAB, principalmente as rotinas que trabalham a 
parte de interpolação e a parte de geração de gráficos.Apresentamos também as 
listagens dos programas desenvolvidos. 

Vamos descrever os quatro programas principais associados aos quatro casos 
estudados que são: 

1. Solução do Problema de Riemann associado à injeção de água com polímeros 
sem adsorção ( Isaacson ) . 

2. Solução do Problema de Riemann associado à injeção de água com polímeros 
com adsorção ( Johansen &amp;amp; Whinter ). 

3. Solução do Problema da injeção de bancos de água e água com polúneros -
Caso sem adsorção. 

4. Solução do Problema da injeção de bancos de água e água com polímeros -
Caso com adsorção. 

7.1. O Problema de Riemann - Modelo sem adsorção. 

Utilizando a solução analítica do problema de Riemann apresentada por lsaacson 
([ISA]) desenvolvemos um programa computacional para a simulação dos perfis 
de solução para todas as possíveis situações e um outro programa que cálcula a 
produção de óleo pelo processo. 

O programa consiste de quatro rotinas principais para o cálculo da solução 
semi-analítica que são: dados.m, buck.m, isacmtd.m e prodisac.m. Além disso 

68 



temos a rotina upwisac.m que calcula a solução utilizando o esquema numérico 
proposto no capítulo 4. Estas rotinas estão contidas no diretório a: \isaacson. 

7.1.1. Dados.m 

Objetivos: 
Entrada de dados para o programa principal e cálculo de outros dados essen-

ciais. 
Dados de entrada: 
SL = saturação à esquerda 
SR = saturação à direita 
CL = concentração à esquerda 
CR = concentração à direita 
swi = saturação de ~aua inicial 
sor = saturação de óleo residual 
t =tempo 
Dados de saída: 
s = vetor saturação 
c = vetor concentração 
fi = fluxo fracionário associado à CL 
fr = fluxo fracionário associado à CR 
dfl = derivada de fi 
dfr = derivada de fr 

7.1.2. Buck.M 

Objetivos: 
Calcular a solução para a equação de Buckley-Leverett 
Dados de entrada: 
x = maLha na direção x 
s = vetor saturação 
cw = parâmetro para a função de fluxo fracionário 
f = função de fluxo fracionário 
df = derivada da função f. 
sd = saturação à direita 
se = saturação à esquerda 
t =tempo 
Algoritmo: 

69 



Realizado de acordo com a solução apresentada em [ISA]. 
Dados de saída: 
satura : vetor solução dado em termos da saturação 

7.1.3. Isacmtd.m 

Objetivos: 
Calcula a saturação s(x, t) e a concentração c(x, t) para valores de t. 
Dados de entrada: 
x = malha na direção x 
SL = valor da saturação à esquerda 
SR = valor da saturação à direita. 
CL =valor da concentração à esquerda. 
CR = valor da concentração à direita. 
t = tempo 
Algoritmo: 
Realizado de acordo com apresentado no capítulo 2. É composto por se1s 

subrotinas: casoll.m, casol2.m, casol3.m, casorl.m, casor2.m e casor3.m 
Dados de saída: 
satu = saturação s(x, t) 
cone = concentração c(x, t) 

7.1.4. Prodisac.m 

Objetivos: 
Calculo da evolução da produção de óleo com o tempo. 
Dados de entrada: 
x = malha na direção x 
tdmax = tempo adimensional 
Algoritmo: 
Resolvemos numericamente a integral dada no capítulo 4 que mede a produção 

de óleo com o tempo, utilizando a rotina TRAPZ.M que é uma rotinas do pacote 
MATLAB. 

Dados de saída: 
A(i,j) = s(x(i), tempo(j)) .. 
B(i,j) = c(x(i), tempo(j)). 
Produção =produção no instante TM(j). 

70 



7.1.5. Upwisac.m 

Objetivos: 
Implementar o esquema upwind para o sistema de equações. 
Dados de entrada: 
dx = incremento na direção x 
t = tempo para o cáculo 
SL= saturação a esquerda 
SR= saturação à direita 
CL= concentração à esquerda. 
CR= concentração à direita. 
Algoritmo: 
Dado pelo esquema numérico convergente apresentadono capítulo 4. 
Dados de saída: 
Sl =vetor saturação 
Cl = vetor concentração 

7.2. O Problema de Riemann- Modelo com adsorção. 

Utilizando a solução analítica apresentada no capítulo 2 para o caso da injeção de 
água com polímeros considerando o efeito da adsorção, elaboramos um programa 
para que calcula a solução quando CL &gt; CR 

Para obtermos a solução s(x, t) e c(x, t) são utilizadas três rotinas principais 
que são: dados.ro, joha.m e produjoh.m. Para a solução numérica dada pelo 
esquema numérico do tipo upwind ternos a rotina upwjoha.rn. Estas rotinas estão 
contidas no diretório a: \johansen. 

Passemos então a descreve-los um a um. 

7.2.1. Dados.m 

A rotina dados.m que utilizamos é a mesma dada em 1. 

7.2.2. Joha.rn 

Objetivos: 
Calcula a solução para o problema da injeção de água com polúneros associado 

ao sistema de equações com o termo adsorção. 
Dados de entrada: 

71 



x = malha na direção x 
SL = valor da saturação à esquerda. 
SR = valor da saturação à direita 
CL =valor da concentração à esquerda 
CR = valor da concentração à direita. 
sstar = estado intermediário s* da literatura calculado pela rotina intstar.m 
sl =estado intermediário calculado pela rotina interl.m 
sk = estado intermediário calculado pela rotina interk.m 
s = vetor saturação inicial 
fi= funçÍÍD de fluxo fracionário f(s, CL) 
fr =função de fluxo fracionário f(s, CR) 
dfi = derivada da função fi 
dfr = derivada da funçÍÍD fr 
t =tempo 
Algoritmo: 
O algortimo é construido de acordo com a solução apresentada em [JOH]. 
Dados de saída : 
satu =vetor saturação que dá a solução s(x(i), t) 
cone= vetor concentração que dá a solução c(x(i), t). 

7.2.3. Prodjoh.m 

Objetivos: 
Calculo da evolução da produção de óleo com o tempo. 
Dados de entrada: 
x = malha na direção x 
tdmax = tempo adimensional 
TM = vetor tempo 
Algoritmo: 
Resolvemos numericamente a integral apresentada no capítulo 4 que calcula a 

produção de óleo com o tempo, utilizando a rotina TRAPZ.M do pacote MAT-
LAB. 

Dados de saída: 
A(i,j) =valor da saturação s(x(i),tempo(j)) .. 
B(i,j) =valor da concentração c(x(i), tempo(j)). 
Produção = produção quando t = tdmax 

72 



Outras quatro rotinas calculam os estados intermediários que aparecem na 
construção da solução. São elas, Intstar.m,futerl.m)nterk.m e Rotst.m'· 

7.2.4. Intstar.m 

Objetivos: 

Calcular o estado intermediário s* que é o valor que satisfaz a equação:~~ ( s, C L) = 
f(s, c) i d' · al d · l 

h 
na arma a 1mens1on da a no cap1tu o 3. 

S + L[( 
Dados de entrada: 
s = vetor saturação 
CR =valor da concentração c(x, O) 
CL =valor da concentração c(O, t) 
swi = valor da saturação de água inicial. 
sor = valor da saturação de óleo residual. 
fi= vetor f(s, CL) 
fr =vetor f(s, CR) 
n = número de coordenadas do vetor s. 
Algoritmo: 
Resolvemos utilizando o método da bisseção. 
Dados de saida: 
sstar = estado intermediário s* 

7.2.5. Interl.m 

Objetivos: 

C l la valo . d" . l . f _ .__f('-cs--',' ',-'CL"-) a cu o r mterme 1ano s que satls az a equaçao --" 
s* + hLR 

· d' - 8f( ) f(sl. cR) com a segumte con 1çao, -
8 

sl, c R &gt; ' 
8 sl + hLR 

Dados de entrada: 
s = vetor saturação 
CR = valor da concentração c( x , O ) 
CL = valor da concentração c( O : t ) 
swi = valor da saturação de água inicial 
sor = valor da saturação de óleo residual 
fi =vetor f(s,CL) 
fr = vetor f(s,CR) 

73 



n = número de coordenadas do vetor s 
sstar= valor do estado intermediário s* 
Algoritmo: 
Resolvemos utilizando o método da bisseção. 
Dados de saída: 
sl =: estado intermediário sl 

7.2.6. Interk.m 

Objetivos: 
Calcula o valor intermediário sk que satisfaz a equação 
f(s'.cL) f(sk.cR) . . _ 8!( ) f(x,cR) * 

, , com a segumte cond1çao -
8 

x, c R &amp;lt;, onde s 
s* + hLR sk + hLR S X + hLR 

é calculado em Intstar.m 
Dados de entrada: 
s = vetor saturação 
CR =valor da concentração c(x, O) 
CL ~ valor da concentração c( O, t) 
swi = valor da saturação de água inicial 
sor = valor da saturação de óleo residual 
fi~ vetor f(s, CL) 
fr ~vetor f(s, CR) 
n = número de coordenadas do vetor s 
sstar= valor do estado intermediário s* 
Algoritmo: 
Resolvemos utilizamos o método da bisseção. 
Dados de saída: 
sk = estado intermediário sk 

7.2. 7. Rotst.m 

Objetivos: 
Resolver a equação A8 (x,c) ~ A0 (x,c) para cada valor de c intervalo [0,1], 

dando origem a curva de transição T 
Dados de entrada: 
s = vetor saturação 
c = vetor concentração 
df = derivada da função de fluxo fracionário 

74 



swi= saturação de água inicial 
sor= saturação de óleo residual 
Algoritmo: 
Resolvemos utilizando o método da bisseção. 
Dados de saída: 
stc = vetor que depende de c . 

7.2.8. Upwjoha.m 

Objetivos: 
Implementar o esquema upwind para o sistema de equações que modela o 

problema. 
Dados de entrada: 
dx = incremento na direção x 
t = tempo para o cáculo 
SL= saturação a esquerda 
SR= saturação à direita 
CL= concentração à esquerda. 
CR= concentração à direita. 
Algoritmo: 
Dado pelo esquema numérico convergente apresentado no capítulo 4. 
Dados de saída: 
Sl = vetor saturação 
Cl = vetor concentração 

7.3. O Problema da Injeção de Bancos- Caso sem adsorção. 

Corno vimos no capítulo 3 para explicitarmos a solução para o caso da injeção 
de dois ou mais bancos de água e de água com polúneros devemos inicialmente 
construir as curvas de descontinuidade associadas. O algoritmo principal portanto 
consiste em construir estas curvas. Para o cálculo da solução, dividimos o nosso 
trabalho em três rotinas principais que são: dados.m1 durvalg.m e prodbanc.m . 
A rotina dados.rn é uma rotina de entrada e cálculo de dados, a rotina curvalg.m 
composta de três subrotinas curvayl.rn, curvay2.m e curvay3.m que calculam as 
curvas de descontinuidades do problema. Por final a rotina Prodbanc.rn que além 
de explicitar a solução para um valor de t fixado ( perfil ) também calcula a 
evolução da produção com o passar do tempo. 

75 



Para encontrarmos o valor da produção de óleo devemos rodar as rotinas Da-
dos.m, Curvalg.m e Prodbanc.m nesta ordem. Alguns valores podem ser alterados 
na execução do programa e são eles: cinj2, TO, Tl, swi e sor. Outra rotina impor-
tante é a rotina Upwalg.m que calcula a solução numérica, utilizando o esquema 
numérico do tipo upwind dado no capítulo 4. Estas rotinas estão contidas no 
diretório a: \isacbanc. 

Passamos então a descrever cada uma destas rotinas citadas acima. 

7.3.1. Dados.m 

Objetivos: 
Manipular dados essenciais ao problema. Calcula estados intermediários que 

aparecem na solução do problema de Riemann, através das subrotinas intstar.m, 
inter l.m e interk.m que já forma apresentadas anteriormente. 

Dados de entrada: 
Entre com valores de : 
TO, Tl, so, co, sinjl, sinj2, sinj3, cinjl, sinj2, sinj3, swi, sor, n, dx, dt. 
Algoritmo: 
E uma rotina de entrada e manipulação de dados 
Dados de saída: 
Vetores : s, f, fr, x 
Estados intermediários: sl, sk, sm e sstar. 

7.3.2. Curvalg.m 

Objetivos: 
Calcular as curvas de descontinuidades da solução 
Dados de entrada: 
TO, Tl, valor da rarefação do primeiro leque. 
Algoritmo: 
Composto pelas três subrotinas curvayl.m, curvay2.m e curvay3.m 
Dados de saída: 
yl, y2, y3, y4, y5, yo, to, tl, t2, t3, t4, t5 

7.3.3. Curvayl.m 

Objetivos: 
Calcular a curva de descontinuidade Y1 definida no capítulo 3. 

76 



Dados de entrada: 
s = vetor saturação 
nt = número natural 
sk = estado intermediário que aparece na solução 
sstar = estado intermediário que aparece na solução. 
swi = saturação de água inicial 
sor = saturação de óleo residual 
TO = tamanho do primeiro banco 
Algoritmo: 
Dado no capítulo 3 que trata da solução do problema da injeção de bancos. 
Dados de saída: 
y 1 = ordenada da curva y 1 
t 1 = abcissa da curva y 1 

7.3.4. Curvay2.m 

Objetivos: 
Calcular a curva de descontinuidade y2 definida no capítulo 3. 
Dados de entrada: 
s =vetor saturação 
nt = número natural 
sl = estado intermediário que aparece na solução 
sk = estado intermediário que aparece na solução 
sstar = estado intermediário que aparece na solução. 
swi = saturação de água inicial 
sor = saturação de óleo residual 
TO = tamanho do primeiro banco 
Algoritmo: 
Dado no capítulo 3,que trata da solução do problema da injeção de bancos. 
Dados de saída: 
y2 =: ordenada da curva y2 
t2 = abcissa da curva y2 

7.3.5. Curvay3.m 

Objetivos: 
Calcular a curva de descontinuidade y3 definida no capítulo 3. 
Dados de entrada: 

77 



s = vetor saturação 
nt = número natural 
sl = estado intermediário que aparece na solução 
sk = estado intermediário que aparece na solução 
sstar = estado intermediário que aparece na solução. 
swi = saturação de água inicial 
sor = saturação de óleo residual 
TO = tamanho do primeiro banco 
Tl = tamanho do segundo banco 
y 1 = ordenada da curva y 1 
t 1 = abcissa da curva y 1 
Algoritmo: 
Dado no capítulo 3 1 que trata da solução do problema da injeção de bancos. 
Dados de saída: 
y3 ; ordenada da curva y3 
t3 : abcissa da curva y3 

7.3.6. Prodbanc.m 

Objetivos: 
Calcular o valor da produção de óleo em função do tempo t. 
Dados de entrada; 
tdmax = tempo máximo relativo ao ultimo perfil de saturação a ser calculado. 
x = malha na direção x 
TO = tamanho do primeiro banco 
T1 = tamanho do segundo banco 
y 1 = ordenada da curva y 1 
t 1 = abcissa da curva y 1 
y2 = ordenada da curva y2 
t2 = abcissa da curva y2 
y3 = ordenada da curva y3 
t3 = abcissa da curva y3 
sinjl= saturação de injeção de água no primeiro banco 
sinj2= saturação de injeção de água no segundo banco 
sinj3= saturação de injeção de água no terceiro banco 
cinjl= concentração de injeção de polímero no primeiro banco 
cínj2= concentração de injeção de polímero no segundo banco 

78 



cinjl= concentração de injeção de polímero no terceiro banco 
Algoritmo: 
Calculamos o valor da saturação e da concentração em x = 1 e em seguida 

utilizamos a regra do trapézio para resolver a integral apresentada no capítulo 4 
que calcula a produção de óleo. 

Dados de saída: 
A(i,j) = s(x(i), tempo(j)) .. 
B(i,j) = c(x(i), tempo(j)). 
Produção: valor da produção de óleo quando t = tdmax. 

7.3.7. Upwalg.m 

Objetivos: 
Implementar o esquema upwind para o sistema de equaçoes que modela o 

problema. 
Dados de entrada: 
dx = incremento na direção x 
t = tempo para o cáculo 
TO = tempo em começamos a injeção do segundo banco. 
Tl = tempo em que começamos a injeção do terceiro banco. 
sinjl= saturação de injeção no primeiro banco 
sinj2= saturação de injeção no segundo banco 
sinj3= saturação de injeção no terceiro banco 
cinjl= concentração no primeiro banco. 
cinj2= concentração no segundo banco. 
cinj3= concentração no terceiro banco. 
Algoritmo: 
Dado pelo esquema numérico convergente apresentado no capítulo 4. 
Dados de saída: 
Sl = vetor saturação 
Cl = vetor concentração 

7.4. O Problema da Injeção de Bancos- com adsorção. 

Como observamos no capítulo anterior o caso da injeção de bancos com adsorção 
foi desenvolvido apenas para dois bancos. Sendo o primeiro de água seguido de um 
outro de água com polímero. Neste caso são quatro as rotinas a saber: dados.m, 

79 



curvas.m, twobanc.m e prodads.m que devem ser rodados nesta ordem. A rotina 
upwads.m implementa o método numérico (tipo upwind). Estas rotinas estão 
contidas no diretório a; \johabanc. 

7.4.1. Dados.m 

Esta rotina é análoga à dada no parágrafo anterior. 

7.4.2. Curvas.m 

Objetivos: 
Calcular as descontinuidades do problema. 
Dados de entrada: 
Todos os dados obtidos e manipulados na rotina Dados.m 
Algoritmo: 
O descrito no capítulo 3 . 
Dados de saída: 
y11, y12, y13, y14,y15, 111,112,113, t14, 115 

7 .4.3. Twobanc.m 

Objetivos: 
Calcula os perfis de saturação s(x, t) e concentração c(x, t) 
Dados de entrada: 
Obtidos nas duas rotinas anteriores. 
Algoritmo: 
Através do cálculo das descontinuidades e das características calculamos os 

vetor solução. 
Dados de saída: 
A(i,j) ~ s(x(i), tempo(j)) .. 
B(i,j) ~ c(x(i), tempo(j)). 

7.4.4. Prodads.m 

Objetivos: 
Calcular a produção no tempo t dado. 
Dados de entrada: 
Obtidos nas duas rotinas anteriores. 

80 



Algoritmo: 
Resolvemos numericamente a integral apresentada no capítulo 4 que mede a 

produção de óleo com o tempo, utilizando a rotina TRAPZ.M do pacote MAT-
LAB. 

Dados de saída: 
prodadsor: produção no tempo t. 

7.4.5. Upwads.m 

Objetivos: 
Implementar o esquema upwind para o sistema de equações que modela o 

problema. 
Dados de entrada: 
dx = incremento na direção x 
t = tempo para o cáculo 
TO = tempo em começamos a injeção do segundo banco. 
Tl = tempo em que começamos a injeção do terceiro banco. 
sinjl= saturação de injeção no primeiro banco. 
sinj2= saturação de injeção no segundo banco. 
sinj3= saturação de injeção no terceiro banco. 
cinjl= concentração no primeiro banco. 
cinj2= concentração no segundo banco. 
cinj3= concentração no terceiro banco. 
Algoritmo: 
Dado pelo esquema numérico convergente apresentado no capítulo 4 
Dados de saída: 
S 1 = vetor saturação 
Cl = vetor concentração 

81 



BIBLIOGRAFIA 

[BED] BEDRIKOVETSKY, P.- Matemathical Theory of Oi! and Gas Recovery-
Kluwer Academic Publishers- 1993. 

[BRB] BARENBLATT, G.I. E V.M. ENTOV, V.M. RYZHIK - Theory of fluid 
flows through natural rocks- Kluwer Academic Publishers- 1990. 

[CRA] CRANDALL,M.G.&amp;amp; A. MAJDA - Monotone difference approximations 
for scalar conservation laws. - Mathematics of Computation - 1980- Vol. 
24- n" 149- pp 1-21. 

[ISA] ISAACSON, E.L. -Global solution of a llieman Problem for a non strictly 
hyperbolic systern of conservation laws arising in enhanced oil recovery 
-1980- Rockefeller University preprints . 

[JOH] JOHANSEN, T. &amp;amp; R. WINTHER - The solution of lliemann Problem 
for a hyperbolic system of conservation laws modeling polymer fiooding -
SIAM- J.Math.Anal.,19, 1988- pp. 541 - 566. 

[LAKJ LAKE, L.W. - Enhanced oil recovery- Prentice Hall- New Jersey- 1989. 

[LAX] LAX., P.D.- Hyperbolic systems of conservation laws and the mathematical 
theory of shock waves -1973- SIAM Regional Conference Series in Applied 
Mathematics. 

[LEV] LE VEQUE, R.J. - Numerical methods for conservation laws - Birkhaüser 
Verlag-1990 . 

[MAR] MARLE, CHARLES M. - Multiphase Flow in Porous Media - 1981 -
Editions Technip, Paris. 

[ODE] ODEH, AZIZ S. - On overview of mathematical modeling of behavior of 
hydrocarbon reservoirs- SIAM Review- 1982- Vol. 24- pp 265-273. 

82 



[TVT] TVEITO, A. &amp;amp; R, WINTHER - Convergence of a non conservative fi-
nite difference scheme for a system of hyperbolic conservation laws - Dif. 
Integral Equations- Vol. 3- n" 5- 1990- pp. 979-1000. 

[WSH] WALSH, M. &amp;amp; L.W.LAKE - Applying fractional flow theory to solvent 
flooding and chase fiuids - Journal of Petroleun Science and Engineering-
2 -1989- pp 281-303. 

83 



Listagem dos programas computacionais 

1 • Rotina Buck.m 
%Buck.m 
%Esta rotina calcula o perfil da Solução da equação de Buckley - Leverett 
f = fract(s,cw); 
df = derfract(s,cw); 
fd = interpl(s,f,sd); 
[ maxi,il]=max( df); 
sinflex=s(il); 
if se&gt;sd 

if sd &gt;= sinflex 
clear al ;clear a2; 
clear sra; clear xra; 
vi=interp I (s,df,se ); 
vf=interp I (s,df,sd); 
sra=se:(sd-se )/nt:sd; 
xra=interp 1 (s,df,sra)*t; 

for i=l:nx; 
if x(i) &amp;lt;vi*t 

satura(i)= se; 
elseif x(i) &gt;= vi*t &amp;amp; x(i) &amp;lt;vf*t 

satura(i)=interp I ( xra,sra,x(i)); 
else 

satura(i}:::::sd; 
end; 

end; 
else 

intersm; 
ifse&gt;sm 

clear al ;clear a2; 
clear sra; clear xra; 
sra=se:( sm-se )/nt:srn; 
xra=interp 1 ( s,df,sra)*t; 
vi=interpl(s,df,se) ; 
vf=interpl(s,df,sm) ; 

for i=l:nx; 
if x(i) &amp;lt;vi*t 

satura(i)= se; 

84 



elseif x(i) &gt;= vi*t &amp;amp; x(i) &amp;lt;vf*t 
satura( i)=interp 1 ( xra,sra,x( i)) ; 

else 
satura(i)=sd; 

end; 
end; 

else 
fse=interpl (s,f,se ); 
fsd=interp I (s,f,sd); 
vi=(fse-fsd)/(se-sd); 
vf=( fse- fsd )/( se-sd); 

for i=l:nx; 
if x(i) &amp;lt;vi*t; 

satura(i)= se; 
else 

satura(i)= sd; 
end; 

end; 
end; 

end; 
else 

if sd&amp;lt;= sinflex ; 
clear al ;clear a2; 
clear sra; clear xra; 
vi=interp I (s,df,se ); 
vf=interpl (s,df,sd); 
sra;;;se;( sd -se )/nt:sd; 
xra::::interpl ( s,df,sra)*t; 

for i=l:nx; 
if x(i) &amp;lt;vi*t 

satura(i)= se; 
elseif x(i) &gt;= vi*t &amp;amp; x(i) &amp;lt;vf*t 

satura( i)=interp I ( xra,sra,x(i)); 
else 

satura(i)=sd; 
end; 

end; 

85 



else 
intersrn; 
ifse&lt;sm 

clear ai ;clear a2; 
clear sra; clear xra; 
sra=se:(sm-se )/nt:sm; 
xra=interp I (s,df,sra)*t; 
vi=interpl (s,df,se ); 
vf=interp I ( s,df,sd); 

for i=l:nx; 
if x(i) &amp;lt;vi*t 

satura(i)= se; 
elseif x(i) &gt;= vi*t &amp;amp; x(i) &amp;lt;vf*t 

satura(i)=interp I ( xra,sra,x(i)); 
else 

satura(i)=sd; 
end; 

end; 
else 

fse=interp I (s,f,se ); 
fsd=interpl ( s,f,sd); 
vi=( fse- fsd )/( se-sd); 
vf=(fse-fsd)/( se-sd); 
for i=l:nx; 

if x(i) &amp;lt;vi*t; 
satura(i)= se; 

else 
satura(i)= sd; 

end; 
end; 

end; 
end; 

end; 

86 



2 - Rotina casoll.m 
% UR pertence a LI 
% Cálculo do estado intermediário sl 
ifCR&lt;CL 

clear SC; 
clear CS; 
SC(l)=SL; 
CS(1)=CL; 
DS=-0.001; 
i=l; 
while CS(i) &gt; CR 

dc=dfc 1 (SC(i).CS(i) ); 
ls=derfract(SC(i).CS(i)); 
lc=fract(SC(i).CS(i))./(SC(i)+swi!snom); 
SC(i+ l)=SC(i)+DS; 
CS(i+l)=CS(i) + DS*( (lc-ls)./dc ); 
i=i+l; 

end; 
CS(i)=CR; 
sl=(SC(i)+SC(i-1 ))/2; 

else 
clear SC; 
clear CS; 
SC(1)=SL; 
CS(l)=CL; 
DS=O.OOl; 
i=l; 
while CS(i) &amp;lt;CR 

dc=dfc1 (SC(i).CS(i) ); 
1s=derfract(SC(i).CS(i)); 
1c=fract(SC(i).CS(i))./(SC(i)+swilsnom); 
SC(i+ 1)=SC(i)+DS; 
CS(i+l)=CS(i) + DS*( (lc-ls)./dc ); 
i=i+l; 

end; 
CS(i)=CR; 
s1=(SC(i)+SC(i-1))/2; 

end; 
% Descrevendo a solução 

87 



se=sl; 
sd=SR; 
cw=CR; 
fd=interp 1 (s,fr,sd); 
buck; 
v2i=vi;v2f=vf; 
vl i=lampcl (sl ,CR,swi,sor); 
vlf=vli; 

for i=l:nx; 
if x(i) &amp;lt;vli*t 

satu(i)=SL; 
conc(i)=CL; 

elseif x(i) &gt;= vli*t &amp;amp; x(i) &amp;lt;v2i*t 
satu(i)=sl; 
conc(i)=CR; 

elseif x(i) &gt;= v2i*t &amp;amp; x(i) &amp;lt;v2f*t 
satu(i)=satura(i); 
conc(i)=CR; 

else 
satu(i)=SR; 
conc(i)=CR; 

end; 
end; 

66 



3 · Rotina caso12.m 
% UR pertence à L2 
ifCL&lt;CR 

clear CS; 
clear SC; 
CS(J);{:R; 
SC(l)=SR; 
DS=O.OOI; 
i;;;; I; 
while CS(i) &gt; CL 

dc=dfcl (SC(i),CS(i)); 
ls=derfract(SC(i),CS(i)); 
lc=fracr(SC(i),CS(i))./(SC(i)+swi/snom); 
SC(i+ I )=SC(i)+DS; 
CS(i+l)=CS(i) + DS*( (lc-ls)./dc ); 
i=i+l; 

end; 
CS(i);{:L; 
sl=interpl(CS,SC,CL); 

else 
clear CS; 
clear SC; 
CS(l)=CR; 
SC(l)=SR; 
DS=-0.001; 
i;;;; I; 
while CS(i) &amp;lt;CL 

dc=dfcl (SC(i),CS(i) ); 
ls=derfract( SC( i), CS( i)) ; 
lc=fract( SC( i ),CS (i))./( SC(i )+swi/snom); 
SC(i+ l)=SC(i)+DS; 
CS(i+l)=CS(i) + DS*( (lc-ls)./dc ); 
i=i+l; 

end; 

CS(i);{:L; 
sl=interpl(CS,SC,CL); 

end; 

89 



% Descrevendo a solução 
se=SL; 
sd=sl; 
cw=CL; 
fd=interp I (s,fl,sd); 
buck; 
vl::::vi; 
v2=vf; 
v3=lampcl(sl,CL,swi,sor); 

for i=l:nx; 
if x(i) &amp;lt;vi *t 

satu(i)=SL; 
conc(i)=CL; 

elseif x(i) &gt;= vl *t &amp;amp; x(i) &amp;lt;v2*t 
satu( i )=satura( i); 
conc(i)=CL; 

elseif x(i) &gt;= v2*t &amp;amp; x(i) &amp;lt;v3*t 
satu(i)=sl; 
conc(i)=CL; 

else 
satu(i)=SR; 
conc(i)=CR; 

end; 
end; 

90 



4 · Rotina casol3.m 

% UR=(SR,CR) pertence à L3 
STR=interpl(c,st,CR); 
s2=STR; 
clear CS; 
clear SC; 
CS(l)=CR; 
SC(l)=s2; 
DS=O.OOI; 
i=l; 

while CS(i) &gt; CL 
dc=dfcl(SC(i),CS(i)); 
ls=derfract( SC(i),CS(i)); 
lc=fract( SC(i\ CS( i))./( SC(i )+swilsnom); 
SC(i+l)=SC(i)+DS; 
CS(i+i)=CS(i) + DS*( (lc-ls)./dc ); 
i=i+l; 

end; 
CS(i)=CL; 
sl=SC(i); 

% Descrevendo a solução 
se=SL; 
sd=sl; 
cw=CL; 
fd=interp 1 (s,fl,sd); 
buck; 
satural=satura; 
vli=vi; 
vlf=vf; 

se=s2; 
sd=SR, 
cw=CR; 
fd=interp I (s,fr,sd); 
buck; 
satura2=satura; 

91 



v3i;:;vi; 
v3f=vf; 
v2i=lampcl(sl,CL,swi,sor); 
v2f=v2i; 

for i=l:nx; 
if x(i) &amp;lt;vli*t 

satu(i)=SL; 
conc(i)=CL; 

elseif x(i) &gt;= vli*t &amp;amp; x(i) &amp;lt;v2i*t 
satu(i)=satural (i); 
conc(i)=CL; 

elseif x(i) &gt;= v2i*t &amp;amp; x(i) &amp;lt;v3i*t 
satu(i)=sl; 
conc(i)=CL; 

elseif x(i) &gt;= v3i*t &amp;amp; x(i) &amp;lt;v3f*t 
satu(i)=satura2(i); 
conc(i)=CR; 

else 
satu(i)=SR; 
conc(i)=CR; 

end; 
end; 

92 



5 - Rotina casorl.m 
o/o Caso em UR pertence a RI 

o/o cálculo do estado intermediário 
clear SC; 
clear CS; 
SC(1)=S1L; 
CS(1)=CL; 
DS=-0.001; 
i=l; 

while CS(i) &gt; CR 
dc=dfcl(SC(i),CS(i)); 
1s=derfract(SC(i),CS(i)); 
lc=fract(SC(i),CS(i))./(SC(i)+swifsnom); 
SC(i+1)=SC(i)+DS; 
CS(i+1)=CS(i) + DS*( (lc-ls)./dc ); 
i=i+l; 

end; 

CS(i)=CR; 
s2=(SC(i)+SC(i-1))/2; 

o/o fim do cálculo intermediário s2 

%Descrevendo a solução 

se=SL; 
sd=S1L; 
cw=CL; 
fd=interp 1 (s,fl,sd); 
buck; 
satural=satura; 
vli:;:;;vi;vlf=vf; 

se=s2; 
sd=SR; 
cw=CR; 
fd=interp 1 (s,fr,sd); 

93 



buck; 
satura2=satura; 
v3i=vi; 
v3f=vf; 
v2i=vlf; 
v2f=v2i; 

for i=l:nx; 
if x(i) &amp;lt;vli"'t 

satu(i)=SL; 
conc(i)=CL; 

elseif x(i) &gt;= vli*t &amp;amp; x(i) &amp;lt;v2i*t 
satu(i)=satural (i); 
conc(i)=CL; 

elseif x(i) &gt;;;::: v2i*t &amp;amp; x(i) &amp;lt;v3i*t 
satu(i)=s2; 
conc(i)=CR; 

elseif x(i) &gt;= v3i*t &amp;amp; x(i) &amp;lt;v3f*t 
satu(i)=satura2(i); 
conc(i)=CR; 

else 
satu(i)=SR; 
conc(i)=CR; 

end; 

end; 

94 



6· Rotina casor2.m 

% Se UR=(SR,CR) pertence à R2 

ifCR&gt;CL 
clear CS; 
clear SC; 

CS(1)=CR; 
SC(1)=SR; 
DS=0.001; 
i=1; 
whi1e CS(i) &gt; CL 

dc=dfc1 (SC(i),CS(i) ); 
1s=derfract(SC(i),CS(i)); 
1c=fract(SC(i),CS(i))./(SC(i)+swi/snom); 
SC(i+1)=SC(i)+DS; 
CS(i+ l)=CS(i) + DS*( (lc-1s)./dc ); 
i=i+l; 

end; 
CS(i)=CL; 
s1=(SC(i)+SC(i-1 ))/2; 

e !se 
clear CS; 
clear SC; 
CS(l)=CR; 
SC(1)=SR; 
DS=-0.001; 

i=l; 
while CS(i) &amp;lt;CL 

dc=dfc1 (SC(i),CS(i) ); 
ls=derfract(SC(i),CS(i)); 
lc=fract( SC(i), CS(i) )./( SC(i)+swi/snom); 
SC(i+1)=SC(i)+DS; 
CS(i+l)=CS(i) + DS*( (lc-ls)./dc ); 
i=i+ 1; 

end; 
CS(i)=CL; 
s1=(SC(i)+SC(i-1 ))12; 

end; 

95 



%Calculo do perfil s(x,t) e c(x,t) 
se=SL; 
sd=sl; 
cw=CL; 
fd=interp! ( s,fl,sd); 
buck; 
vli=vi; 
vlf=vf; 
v2i=lampcl (si ,CL,swi,sor); 
v2f=v2i; 

for i=l:nx; 
if x(i) &amp;lt;vli*t 

satu(i)=SL; 
conc(i)=CL; 

elseif x(i) &gt;= vli*t &amp;amp; x(i) &amp;lt;vlf*t 
satu(i)=satura(i); 

conc(i)=CL; 
elseif x(i) &gt;= vlf*t &amp;amp; x(i) &amp;lt;v2i*t 

satu(i)=sl; 
conc(i)=CL; 

else 
satu(i)=SR; 
conc(i)=CR; 

end; 
end; 

96 



7 · Rotina casor3.m 

% UR=(SR,CR) pertence à L3 

s2=STR; 
clear CS; 
clear SC; 
CS(l)=CR; 
SC(l)=s2; 
DS=O.OOl; 
i=1; 

while CS(i) &gt; CL 
dc=dfc1 (SC(i),CS(i) ); 
1s=derfract(SC(i),CS(i)); 
1c=fract(SC(i),CS(i))./(SC(i)+swilsnom); 
SC(i+1)=SC(i)+DS; 
CS(i+1)=CS(i) + DS*( (1c-1s)./dc ); 
i=i+ 1; 

end; 

CS(i)=CL; 
s1=(SC(i)+SC(i-1))/2; 

% Cálculo do perfil s(x,t) e c(x,t) 

se=SL; 
sd=sl; 
cw=CL; 
fd=interp 1 ( s,fl,sd); 
buck; 
satural =satura; 
vli=vi; 
vlf=vf; 

se=s2; 
sd=SR; 
cw=CR; 
fd=interp 1 (s,fr,sd); 

97 



buck; 
satura2=satura; 
v3i=vi; 
v3f=vf; 
v2i=lampcl ( sl ,CL,swi,sor); 
v2f=v2i; 

for i=l:nx; 
if x(i) &amp;lt;vli*t 

satu(i)=SL; 
conc(i)=CL; 

elseif x(i) &gt;= v!i*t &amp;amp; x(i) &amp;lt;v2i*t 
satu(i)=satural (i); 
conc(i)=CL; 

elseif x(i) &gt;= v2i*t &amp;amp; x(i) &amp;lt;v3i*t 
satu(i)=sl; 
conc(i)=CL; 

elseif x(i) &gt;= v3i*t &amp;amp; x(i) &amp;lt;v3f*t 
satu(i)=satura2(i); 
conc(i)=CR; 

else 
satu(i)=SR; 
conc(i)=CR; 

end; 
end; 

98 



8 - Rotina dados.m 

% Manipula dados do problema e fixa alguns valores. 
xmax=!.OO!; 
dx=.001; 
x=O:dx:xrnax; 
nx=size(x,2); 
n=3000; 
s=0:1/n:1; 
c=O: 1/200:1 ;nc=size( c,2 ); 

SL=input('SL='); 
SR=input('SR='); 
CL=input('CL='); 
CR=input('CR='); 
swi=input('swi='); 
sor-input('sor='); 
t=input('t='); 
snorn= 1-swi-sor; 

for j=l:nc; 
yc=cG); 
rotstl; 
stU)=stc; 

end; 

fl=fract(s,CL); 
dfl=derfract(s,CL); 
fr=fract(s,CR); 
dfr=derfract(s,CR); 
nt=200; 

99 



9 · Rotina intersm.m 

o/o Cálculo do estado intermediário sm, que é a abcissa 
o/o do ponto de tangência entre a reta que passa por (sd,f(sd,cw)) 
% e o gráfico de f(s,cw). 

if sd &amp;lt;sinflex 
exp=2; 

else 
exp=l; 

end· , 

rl=l;r2=n; 
k=r2-rl; 

while k &gt; 1; 
=ound((rl+r2)/2); 
G = ((-J)A(exp))* ( df(r) - (f(r)-fd)/(s(r)-sd) ); 
if G &gt;O 

ri :::r; 
else 

r2=r; 
end; 
k= r2-rl; 

end; 

sm=(s(r I )+s(r2) )/2; 
fsm==interp 1 (s,f,sm); 
dfsm=interpl(s,df,sm); 

100 



10 - Rotina isacmtd.m 
% Calcula a solução do Problema de Riemann - Isaacson 
fl;fract(s,CL); 
f!=fract(s,CR); 
dfr=derfract(s,CR); 
dfl;Jerfract(s,CL); 
STL=interp 1( c,st,CL); 
clear satu; 
clear cone; 
clear satura; 
clear sl; 
clear s2; 

ifCL=CR 
se=SL; 
sd;SR; 
cw:oCL; 
buck; 
satu:::satura; 

for j:::l :nx; 
ccnc(j);CL; 

end; 
else 

if SL &amp;lt;STL 
xl~; 
yl;SL; 
na:::2; 
rar; 
CSL:oCS; 
SCL;SC; 
lcr;lampcl(SR,CR,swi,sor); 
lcl;lampcl(SL,CL,swi,sor); 
STR=interpl(c,st,CR); 

if SR &gt;; STR ; 
if ler &amp;lt;lcl 

casol2; 
else 

101 



casoll; 
end; 

else 
if CR &gt; max(CSL) 

casol3; 
else 

casoll; 
end; 

end; 
else 

xl=CL; 
yl=S1L; 
na=2; 
rar; 
CSL=CS; 
SCL=SC; 
lcr=lampcl(SR,CR,swi,sor); 
lcl=lampc!(SL,CL,swi,sor); 
STR=interpl(c,st,CR); 
lctl=lampc!(S1L,CL,swi,sor); 

if SR &gt;= STR ; 
if ler&amp;lt;= lctl 

casor2; 
else 

casorl; 
end; 

else 
ifCR&gt;CL 

casor3; 
else 

casorl; 
end; 

end; 
end; 

end; 

102 



11 - Rotina prodbuck.m 

% Cálculo da Produção de óleo 
% Entre com o valor de tdrnax tempo t em que se calcula o 
% perfil ou a produção. 

clear Al 
if tdmax&amp;lt;= 1 

jt=lO; 
else 

jt=fix(tdmax); 
end; 

% jt refina a partição para o cálculo da integral que 
% define a produção. 

tmax=tdmaxlsnom; 
ntmax::::jt* 1 O; 
dt=trnax/ntmax; 

if trnax = O; 
producao=O; 

else 
tempo=O:dt:tmax; 
for jl=l:ntrnax+l; 

t=tempo(jl); 
buck; 
Al(jl_:)=satura; 

end; 
Fbuck=l-fract(Al ( :.nx).cw); 
producao=trapz(tempo,Fbuck); 

end; 

103 



12 ~ Rotina prodisac.m 

% Cálculo da Produção de óleo para o caso da injeção de polímero 
% Entre com o valor de tdmax : tempo t em que se calcula o 
% perfil ou a produção. 

clear A;clear B; 

if tdmax &amp;lt;1 
jt=IO; 

else 
jt=fix(tdmax); 

end; 

snom=l-swi-sor; 
fl=fract(s,CL); 
df!=derfract(s,CL); 
fr=fract(s,CR); 
dfr=derfract(s,CR); 
tmax=tdmax/snom; 
ntmax=jt* 1 00; 
dt=tmax/ntmax; 

if tmax =O; 
producao=O; 

else 
tempo=O:dt:tmax; 
for jl=l:ntmax+l; 

t=tempo(j I ) ; 
isacmtd; 
A(jl,:)=satu; 
B(jl,:)=conc; 

end; 
Fisac=l-fract(A( :,nx),B( :,nx)); 
producao=trapz(tempo,Fisac); 

end; 

104 



13 - Rotina rotstl.m 

% Cálculo da curva de transição T 
% entre com o vetor yc e o vetor s. 

df=derfract( s,yc ); 
ri=!; 
r2=n; 
k=r2-rl; 
while k &gt; I; 

=ound((rl+r2)/2); 
G = df(r) - fract(s(r),yc)./(s(r)+swilsnom); 
ifG&gt;O; 

rl=r; 
elseif G &amp;lt;O; 

r2=r; 
else 

saida=s(r); 
break; 

end; 
k= r2-rl; 

end; 

st= (s(rl)+s(r2))./2; 

105 



14 - Rotina upwisac.m 
% Cálculo da solução utilizando método de diferenças finitas 
% Utilizamos o método do tipo upwind 

ds=.OO!; 
xmax=l.Ol; 
dxl=xrnaxlnxmax; 

processo=input('caso queira modelo de Buckley=Leverett faça processo=() , caso 
queira modelo de Isaacson faça processo=! , processo=') 
snom=l-swi-sor; 
cfl=l2./25; 
Tf=t; 
dt=dxl. *cfl; 
Tf./dt; 
clear xl;clear Sl;clear Cl; 
xl=O:dxl:xmax; 
delta = dt./dxl; 
Tp I =O:dt:Tf; 
i= I; 
nTpl=size(Tpl,2), 
nxl=size(xl,2); 

% Condição Inicial 
for i=2:nxl; 

S(i)=SR; 
C(i)=CR; 

end; 
S(l)=SL; 
C(l)=CL; 
% Fim da condição inicial 

if processo = 1 
for j=l :nTpl ;j; 

Sl(l)=SL; 
Cl(l)=CL; 
for i=2:nxl; 

Sl(i) = S(i) - delta*(fract(S(i),C(i))-fract(S(i-l),C(i-1))); 
g = fract(Sl(i),C(i)) .I ( S!(i) + swi/snom ); 

106 



Cl(i) = C(i) - delta *g.*(C(i)-C(i-1)); 
end; 
S=Sl;C=Cl; 

end; 
eis e 

for j=l:nTpl;j. 
Sl(l)=SL; 
for i=2:nxl; 

Sl(i) = S(i) - delta*(fract(S(i),cw)-fract(S(i-l),cw )); 
end; 
S=Sl;C=Cl; 

end; 
end; 

107 



15 - Rotina bancos.m 
o/o Calcula a solução para o caso da injeção de dois ou três bancos. 
o/o Devemos entrar com o valor de t 

Tül=tl(nt+l); 
T02=max(t2); 
t=tlsnom; 

if Tl &amp;lt;T02 
ift&lt;=TO; 

clear xrl; 
xrl=qsl *t; 
ao=min(xrl); 
al=max(xrl); 
for i=l:nx; 

if x(i) &gt;= ao &amp;amp; x(i)&amp;lt;= ai; 
satu(i)=interp 1 (xr 1 ,r ar 1 ,x(i)); 
conc(i)=co; 

else 
satu(i)=so; 
conc(i)=co; 

end; 
end; 

elseif TO &amp;lt;t &amp;amp; t&amp;lt;= TO! 
clear xrl; 
clear xr2k; 
clear rar2k; 
xrl=qsl *t; 
y lt=interp I (tl ,y I ,t); 
i=l; 
while t &gt;= tl(i); 

k=i; 
i=i+l; 

end; 
xr2k(l)=O; 
rar2k(l)=sinj2; 

for i=2:k; 
xr2k(i)=qs2(i)*(t-tl(i-l)) + yl(i-1); 

108 



rar2k(i)=rar2(i); 
end; 

ao=min(xr2k); 
ai =interp I (y I ,ti ,t); 
a2=max(xrl); 
for i=l:nx; 

if x(i)&amp;lt;= ao 
satu(i)=sinj2; 
conc(i)=cinj2; 

elseif x(i) &gt; ao &amp;amp; x(i)&amp;lt;= ai; 
satu( i )=interp I ( xr2k,rar2k,x( i)); 
conc(i)=cinj2; 

elseif x(i) &gt; a! &amp;amp; x(i)&amp;lt;= a2 
satu(i)=interp I (xr I ,rar l,x(i) ); 
conc(i)=cinj 1; 

else 
satu(i)=so; 
conc(i)=co; 

end; 
end; 

elseif TO! &amp;lt;t &amp;amp; t&amp;lt;= TI 
clear xrl; clear xr2 
xrl=qsl *t; 
xr2(1)=0; 
for i=2:nt+ 1; 

xr2(i)=qs2(i)*(t-tl(i)) + yl(i); 
end; 
y2t=interp I (t2,y2,t); 
a0=min(xr2); 
a!=max(xr2); 
a2=y2t; 
a3=max(xrl); 
for i=l:nx; 

if x(i)&amp;lt;= aO 
satu(i)=sinj2; 
conc(i)=cinj2; 

elseif x(i) &gt; aO &amp;amp; x(i)&amp;lt;= ai 
satu( i )=interp I ( xr2,rar2,x( i)); 

109 



conc(i)=cinj2; 
elseif x(i) &gt; al &amp;amp; x(i)&amp;lt;= a2 

satu(i)=sl; 
conc(i)=cinjl; 

elseif x(i) &gt; a2 &amp;amp; x(i)&amp;lt;= a3; 
satu(i)=interpl (xr I ,rar l ,x(i) ); 
conc(i)=cinjl; 

else 
satu(i)=so; 
conc(i)=co; 

end-, 
end; 

elseif TI &amp;lt;t &amp;amp; t&amp;lt;= T02 
clear xr 1 ;clear xr2; 
clear xr3k;clear rar3k; 
xr2(1)=0; 
for i=2:nt+ 1; 

xr2(i)=qs2(i)*(t-tl(i-l)) + yl(i-1); 
end; 

xrl=qsl *t; 
y3t=interp l (t3,y3,t); 
i=l; 
while t &gt;= t3(i); 

k=i; 
i=i+l; 

end; 
clear xr3k; 
clear rar3k; 

if k &amp;lt;size(t2,2)-l 
xr3k(l)=O; 
rar3k(l)=sinj3; 
for i=2:k; 

xr3k(i)=qs3(i)*(t-t3(i-l )) + y3(i-l); 
rar3k(i)=rar3(i); 

end; 
xr3k(k+ l )=qs3(k+ I )*(t -t3(k) )+y3(k); 
rar3k(k+ l)=rar3(k+ l); 

110 



else 
xr3k(1)=0; 
rar3k(1)=1; 
for i=2:k; 

xr3k(i)=qs3(i)*(t-t3(i-1 )) + y3(i-1); 
rar3k(i)=rar3(i); 

end; 
xr3k(k+ 1 )=qs3(k+ 1 )*(t-t3(k) )+y3(k); 
rar3k(k+ 1)=rar3(k+ 1 ); 

end; 
ao=min(xr3k); 
a1=max(xr3k); 
m=frsk/(sk+swi/snom); 
a2=m*(t-tl(nt+1)) + y1(nt+1); 
a3=interp 1 (t2,y2,t); 
a4=max(qs1)*t; 
for i=l:nx; 

if x(i)&amp;lt;= ao; 
satu(i)=sinj3; 
conc(i)=cinj3; 

elseif x(i) &gt;= ao &amp;amp; x(i)&amp;lt;= a1; 
satu( i )=interp 1 ( xr3k,rar3k, x(i) ); 
conc(i)=cinj3; 

elseif x(i) &gt; a1 &amp;amp; x(i)&amp;lt;= al; 
satu( i )=interp 1 ( xr2,rar2,x( i)); 
conc(i)=cinj2; 

elseif x(i) &gt; a2 &amp;amp; x(i)&amp;lt;= a3; 
satu(i)=sl; 
conc(i)=cinj 1; 

elseif x(i) &gt; a3 &amp;amp; x(i)&amp;lt;=a4 
satu(i)=interp 1 (xr 1,rar l,x(i) ); 
conc(i)=cinjl; 

else 
satu(i)=so; 
conc(i)=co; 

end; 

end; 
else 

clear xrl;clear xr2; 

111 



clear xr3k;clear rar3k; 
xr2(1)=0; 

for i::::2:nt+ 1; 
xr2(i)=qs2(i)*(t-tl(i-l)) + yl(i-1); 

end; 
xrl::::qsl *t; 
y3t=interp1 (t3,y3,t); 
i=l; 
while t &gt;= t3(i); 

k::::i; 
i::::i+l; 

end; 
clear xr3k;clear rar3k; 

if k &amp;lt;100 
xr3k(1)=0; 
rar3k(1)=sinj3; 
for i=2;k; 

xr3k(i)=qs3(i)*(t-t3(i-1)) + y3(i-1); 
rar3k(i)=rar3(i); 

end; 
xr3k(k+ I )=qs3(k+ 1 )*(t-t3(k))+y3(k); 
rar3k(k+ 1)=rar3(k+ 1); 

else 
xr3k(1)=0; 
rar3k(J)=I; 
for i::::2:k; 

xr3k(i)=qs3(i)*(t-t3(i-l)) + y3(i-l); 
rar3k(i)=rar3(i); 

end; 
xr3k(k +I )=qs3(k+ I )*(t-t3(k))+y3(k); 
rar3k(k+ 1)=rar3(k+ 1); 

end; 
foi=interp I (s,fr,so ); 
fl i=interp 1 ( s,fr,s I); 
ao=min(xr3k); 
a1=max(xr3k); 
a2=y3t; 

112 



m=frskl(sk+swilsnom); 
a3=m*(t-tl(nt+l)) + yl(nt+l); 
a4=( (f! i-foi)/(sl-so ))*(t-t2(nt + 1) )+y2(nt+ 1 ); 

for i=l:nx; 
if x(i)&amp;lt;= ao 

satu(i)=sinj3; 
conc(i)=cinj3; 

elseif x(i) &gt;ao &amp;amp; x(i)&amp;lt;= a!; 
satu( i )=interp 1 ( xr3k,rar3k,x( i)); 
conc(i)=cinj3; 

elseif x(i) &gt; a! &amp;amp; x(i)&amp;lt;= a2; 
satu(i)=rar3k(k+ !); 
conc(i)=cinj3; 

elseif x(i) &gt; a2 &amp;amp; x(i)&amp;lt;= a3; 
satu(i )=interp I ( xr2,rar2,x( i)); 
conc(i)=cinj2; 

elseif x(i) &gt; a3 &amp;amp; x(i)&amp;lt;= a4 
satu(i)=sl; 
conc(i)=cinj 1; 

else 
satu(i)=so; 
conc(i)=co; 

end; 
end; 

end; 

else 

ift&lt;=TO 
clear xrl; 
ao=O; 
xrl=qsl *t; 
al=rnax(xrl); 
for i==l :nx; 

if x(i) &amp;lt;ao 
satu(i)=sinjl; 
conc(i)=cinjl; 

elseif x(i) &gt;= ao &amp;amp; x(i)&amp;lt;= ai; 

113 



satu(i)=interpl (xr I ,rar I ,x(i) ); 
conc(i)=co; 

else 
satu(i)=so; 
conc(i)=co; 

end; 
end; 

elseif TO &amp;lt;t &amp;amp; t&amp;lt;= TO! 
clear xr 1 ;clear xr2k; 
clear rar2k; 
xrl=qsl *t; 
yl t=interpl (t!,yl,t); 
i=l; 
while t &gt;= t!(i); 

k;:::i; 
i=i+l; 

end; 
raref2t=interp I (ti ,rar2,t ); 
qs2k=interp I ( s,dfj2,raref2t) ; 
xr2k(l)=O; 
rar2k(l)=sinj2; 
for i=2:k; 

xr2k(i)=qs2(i)*(t-t!(i-l)) + yl(i-1); 
rar2k(i)=rar2(i); 

end; 
xr2k(k+ I )=qs2k*(t -ti (k) )+y I (k); 
rar2k(k+ I )=raref2t; 
ao=O; 
al=xr2k(k+l); 
a2=y!t; 
a3=max(qsl)*t; 
for i=l:nx; 

if x(i)&amp;lt;= ao 
satu(i)=sinj2; 
conc(i)=cinj2; 

dseif x(i) &gt; ao &amp;amp; x(i)&amp;lt;= al; 
satu( i)=interp I ( xr2k,rar2k,x(i)); 
conc(i)=cinj2; 

elseif x(i) &gt; ai &amp;amp; x(i)&amp;lt;= a2 

114 



satu(i)=raref2t; 
conc(i)=cinj I; 

e!seif x(i) &gt; a2 &amp;amp; x(i)&amp;lt;= a3 
satu(i)=interp I (xr I ,rar l,x(i) ); 
conc(i)=cinjl; 

else 
satu(i)=so; 
conc(i)=co; 

end; 
end; 

elseif TO! &amp;lt;t &amp;amp; t&amp;lt;= T02 
clear xrl; clear xr2 
xrl=qsl *t; 
xr2(1)=0; 
for i=2:nt+ 1; 

xr2(i)=qs2(i)*(t-tl(i)) + yl(i); 
end; 
y2t=interp I (t2,y2,t); 
a0=min(xr2); 
al=max(xr2); 
a2=y2t; 
a3=max(qsl)*t; 
for i:;::;l:nx; 

if x(i)&amp;lt;= aO 
satu(i)=sinj2; 
conc{i)=cinj2; 

elseif x(i) &gt; aO &amp;amp; x(i)&amp;lt;= ai 
satu(i )=interp I ( xr2,rar2,x(i)); 
conc(i)=cinj2; 

elseif x(i) &gt; ai &amp;amp; x(i)&amp;lt;= a2; 
satu(i)=sl; 
conc(i):::cinj 1; 

elseif x(i) &gt; a2 &amp;amp; x(i)&amp;lt;= a3; 
satu(i)=interp I (xr I ,rar I ,x(i) ); 
conc(i)=cinjl; 

else 
satu(i)=so; 
conc(i)=co; 

115 



end; 
end; 

elseif T02 &amp;lt;t &amp;amp; t = Tl 
clear xr2; 
xr2(l)=O; 
for i=2:nt+l; 

xr2(i)=qs2(i)*(t-tl(i)) + yl(i); 
end; 
frso=interp l (s,fr,so ); 
m=(frsl-frso)/(s1-so); 
all=min(xr2); 
a1=max(xr2); 
a2= m*(t-t2(nt+1)) + y2(nt+1); 
for i=l:nx; 

if x(i)&amp;lt;= aO 
satu(i)=sinj2; 
conc(i)=cinj2; 

elseif x(i) &gt; aO &amp;amp; x(i)&amp;lt;= a1 
satu(i)=interp1 (xr2,raref2,x(i)); 
conc(i)=cinj2; 

elseif x(i) &gt; al &amp;amp; x(i)&amp;lt;= a2; 
satu(i);:;:sl; 
conc(i);:;:cinjl; 

else 
satu(i)::so; 
conc(i)=co; 

end; 
end; 

else 
clear xr2;clear qs3k; 
xr2( 1 )=qs2( 1 )*t; 
for i=2:nt+ 1; 

xr2(i)=qs2(i)*(t-tl(i-1)) + y1(i-1); 
end; 
y3t=interp1 (t3,y3,t); 
i=l; 
while t &gt;= t3(i); 

k=i; 
i=i+l; 

116 



end; 

if k &amp;lt;100 
raref3 t=interp 1 ( t3 ,rar 3, t); 
qs3k=interp 1 ( s,dfj3 ,raref3t); 

else 
raref3t=rar3(k); 
qs3k=interp 1 ( s,dfj 3 ,raref3t); 

end; 
clear xr3k;clear rar3k; 
if k &amp;lt;100 

xr3k(l)=qs3(1); 
rar3k(1)=sinj3; 
for i=2:k; 

xr3k(i)=qs3(i)*(t-t3(i-1)) + y3(i-1); 
rar3k(i)=rar3(i); 

end; 
xr3k(k+ 1 )=qs3k*(t -t3(k) )+y3(k); 
rar3k(k+ 1 )=raref3t; 

else 
xr3k(1)=0; 
rar3k(1)=1; 
for i=2:k; 

xr3k(i)=qs3(i)*(t-t3(i-1)) + y3(i-1); 
rar3k(i)=rar3(i); 

end; 
xr3k(k + 1 )=qs3k*(t-t3(k) )+y3(k); 
rar3k(k+ 1)=raref3t; 

end; 
foi=interp 1 (s,fr,so); 
f1 i=interp1(s,fr ,s1 ); 
ao=xr3k(l)*t; 
a1=xr3k(k+1); 
a2=max(xr2); 
a3=( (fli-foi)/(s1-so ))*(t-t2(nt+ 1) )+y2(nt+ 1); 
for i=l:nx; 

if x(i)&amp;lt;= ao 
satu(i)=sinj3; 
conc(i)=cinj3; 

117 



elseif x(i) &gt; O &amp;amp; x(i)&amp;lt;= ai; 
satu(i)=interpl (xr3k,rar3k,x(i) ); 
conc(i)~inj3; 

elseif x(i) &gt; al &amp;amp; x(i)&amp;lt;= a2; 
satu(i )=interp I ( xr2,raref2,x( i)); 
conc(i)=cinj2; 

elseif x(i) &gt; a2 &amp;amp; x(i)&amp;lt;= a3; 
satu(i)=sl; 
conc(i):=cinjl; 

else 
satu(i)=so; 
conc(i)::co; 

end; 
end; 

end; 
end; 

118 



16 - Rotina curvalgJD 
% Cálculo das curvas de choque do problema 

clear yo;clear yl;clear y2; 
clear y3;clear y4;clear y5; 
clear to;clear tl;clear t2; 
clear t3;clear t4;clear t5; 

TO=TO/snom; 
Tl=Tlisnom; 
T2= T2/snom; 

curvayl; 
curvay2; 
curvay3; 

%curva yo 
if t2(nt+l) inf; 

to=O:.OI: 10; 
dfm=interp I ( s,dfr ,sm); 
yo=dfm*to; 

else 
to=O:.OI :max(t2): 
dfm=interpl(s,dfr,sm); 
yo=dfm*to; 

end; 

if t2(nt+l) &amp;lt;inf 
t5=t2(nt+ I ):.01 :t2(nt +I)+ I O; 
y5=(frsl./(sl + swilsnom))*(t5-t5(l))+y2(nt+l); 
t4=t2(1):.1 :max(t5); 
fsk=interp I (s,fr,sk); 
y4=(fsk./(sk + swilsnom))*(t4-t4(1))+y2(1); 

else 
t4=t2(1):.1 :20; 
fsk=interpl (s,fr,sk); 
y4=(fsk./(sk + swilsnom))*(t4-t4(1))+y2(1); 

end; 

119 



T01=Q1; 
ds~(sk-sm).lnt; 

sd2~sk:-ds:sm; 
for i=l:2*nt+l; 

if i &amp;lt;nt+l; 
rar1(i)~sd1(i); 

else 
rar 1 (i)~sd2(i-nt); 

end; 
end; 
rar2=sel; 
rar3=sdl; 
dfj1~dfr; 

dfj2~fl; 

dfj3~fr; 

qs1=interp 1 ( s,dfj 1,rar1 ); 
qs2~interp 1 ( s,dfj2,rar2); 
qs3~interp 1 (s,dfj3,rar3); 

120 



17 • Rotina curvaylJII 
% Algoritmo para o calculo da curva yl(t)~ 

yl(l)=O;tl(l)=TO; 
ds=(sinjl-sk)./nt; 
sdl=sinjl :-ds:sk; 
ndl=size(sdl,2); 
% Calculo de sel 
for j=l:ndl; 

xo=sd!GJ; 
if xo &gt;= I; 

se!G)=l; 
elseif xo &amp;lt;1 &amp;amp; xo &gt; sk 

auxi=sstar:(xo-sstar)./ndl :xo; 
nauxi=size( auxi,2 ); 
fo=interpl (s,fr ,xo ); 
Mo=fo./(xo + swilsnom); 
rl=l;r2=nauxi; 
k=r2-rl; 
while k &gt; I; 

=ound((rl +r2)./2); 
fauxi=interp 1 ( s,fl,auxi(r) ); 
if Mo*(auxi(r)-xo) + fo &gt; fauxi; 

r2=r; 
elseif Mo*(auxi(r)-xo) + fo &amp;lt;faux.i; 

rl=r; 
else 

se I UJ=auxi (r) ;break; 
end; 
k=r2-rl; 

end; 
sei (j)=( auxi(rl )+auxi(r2) )./2; 

else 
sel(j)=sstar; 

end; 
end; 
nd I =size(sdl ,2); 
for i=2:ndl; 

fo=interp I (s,fr,sdl (i)); 

121 



mo=fo./(sd1(i) + swifsnom); 
m1 =interp1 (s,dfr,sd1 (i)); 
t1 (i)=(y 1 (i-1 )-mo*t1 (i-1) )./(m1-mo ); 
y 1 (i)=mo*(tl (i)-t1(i-1) )+y 1 (i-1 ); 

end; 

P1=y1(nd1);Q1=t1(nd1 ); 

122 



18 - Rotina curvay2.m 
% Algoritmo para o cálculo da curva y2 

if sl &gt;= sm 
saux=sl; 

else 
saux=sm; 

end; 

clear y2;clear t2; 
clear sd2;clear mo; 
clear ml; 
y2(1)=Pl ;t2(1)=Ql; 
ds=(sk-saux)./nt; 
SD2=sk:-ds:saux; 
nd2=size(SD2,2); 

for i=2:nd2; 
fo=interp 1 (s,fr,SD2(i) ); 
fl=interp1 (s,fr,s1); 
if SD2(i) &gt; s1; 

mo(i)=(fo- f1 )./(SD2(i)-s1) 
m1 (i)=interp 1 (s,dfr,SD2(i) ); 
t2(i)=(y2(i-1 )-mo(i)*t2(i- 1) )./(m1 (i)-mo(i)); 
y2(i)=mo(i)*(t2(i)-t2(i-1)) + y2(i-1); 

else 
t2(i)=lnf; 
y2(i)=lnf; 

end; 
end; 

123 



19 - Rotina curvay3.m 
% cálculo da curva y3 

f=fl;df=dfl; 
y3(1 )=O;t3(1)=Tl; 

sd3=sel; 
se3=sdl; 
nd3=size(sd3,2); 

for i=2:nd3-l; 
fo=interp I (s,fr,se3(i)); 
mo(i)=fo./(se3(i) + swilsnom) ; 
ml (i)=interp I (s,df,sd3(i)); 
t3(i)=(y I (i-1 )-y3(i-l )-ml (i)*tl (i-1 )+mo(i)*t3(i-l ))./(mo(i)-ml (i)); 
y3(i)=mo(i)*(t3(i)-t3(i-l ))+y3(i-l ); 

end; 

i=nd3; 
mo(i)=fo./(se3(i) + swilsnom) ; 
ml (i)=mo(i); 
t3(i)=l O+t3(i-l); 
y3(i)=mo(i)*(t3(i)-t3(i-l ))+y3(i-l); 

for i=l :nd3; 
t3(i)=abs(t3(i)); 
y3(i)=abs(y3(i)); 

end; 

124 



20 - Rotina interl.rn 
% Calcula o estado intermediário sl 

M:::tlstar./(sstar + swi/snom); 
rl=l; 
r2:::a; 

RETA = M.*(s-sstar)+flstar; 
k=r2-rl; 
while k &gt; I; 

r = round((rl+r2)/2); 
if RETA(r) &gt; fr(r) 

rl:=r; 
else 

r2:=r; 
end; 
k=r2-rl; 

end; 
si= (s(rl)+s(r2))/2; 
frsl=interp I ( s,fr,sl ); 
dfrsl=interpl ( s,dfr,sl ); 

125 



21 - Rotina interk.m 
% Calcula o estado intermediário sk 

RETA = M.*(s-sstar)+flstar; 
rl==a;r2=n; 
k=r2-rl; 

while k &gt; 1; 
r = round((rl+r2)/2); 
if RETA(r) &amp;lt;fr(r) 

rl=r; 
else 

r2=r; 
end; 
k=r2-rl; 

end; 

sk=( s(r 1 )+s(r2) )/2; 
frsk=interp I (s,fr,sk); 
dfrsk=interp I (s,dfr,sk); 

126 



22 - Rotina intstar .m 
% Calcula o estado intermediário s* 

rl~l;r2:::n; 

k=r2-rl; 
snorn=l-swi-sor; 

while k &gt; I; 
=ound((rl +r2)/2); 
G = dfl(r)-fl(r)/( s(r) + swilsnom ); 
if G &gt; O 

rl=r; 
else 

r2=r; 
end; 
k= r2-rl; 

end; 

sstar=(s(rl )+s(r2) )/2; 
tlstar=interp 1 ( s,tl,sstar); 
dflstar=interp 1 ( s,dfl,sstar); 
a=rl; 
b=r2; 

127 



23 ~ Rotina intersm.m 
% Calcula o estado intermediário sm 

r1=1;r2=; 
k=r2-r1; 

while k &gt; 1; 
r=round((r1 +r2)/2); 
G = dfr(r) - fr(r)/s(r); 
if G &gt;O 

rl=r; 
else 

r2;;;r; 
end; 
k= r2-r1; 

end; 

sm=(s(r 1 )+s(r2) )/2; 
frsrn=interp 1 (s,fr ,sm); 
dfrsm=interp1(s,dfr,sm); 

128 



24 - Rotina prodbanc-m 
% Calcula o perfil de saturação s(x,t) e concentração c(x,t) 
% e a produção 
% Devemos entrar com os seguintes valor tdmax 

tmax=tdmax/(1-swi-sor); 

if trnax = O 
producao=O; 

eis e 
clear A; clear B;clear X; 
TO!=t!(nt+l);T02=max(t2); 
ntmax=!O*!O; 
dt=trnax/ntmax; 
tempo=O:dt:tmax;size(tempo,2); 
for j=2:size(tempo,2); 

t=tempoU); 
if TI &amp;lt;T02 

ift&lt;=TO; 
clear xrl; 
ao=O; 
xrl=qsl *t; 
al=max(xrl); 
for i=l:nx; 

if x(i) &gt;= ao &amp;amp; x(i)&amp;lt;= a!; 
satu(i)=interp I (xr I ,rar l,x(i) ); 
conc(i)=co; 

else 
satu(i)=so; 
conc(i)=co; 

end; 
end; 
AU.:)=satu;BU,:)=conc; 

elseif TO &amp;lt;t &amp;amp; t&amp;lt;= TO! 
clear xr 1 ;clear xr2k;clear rar2k; 
xr14]sl *t; 
y I t=interp I (ti ,y I ,t); 
i=l; 
while t &gt;= tl(i); 

129 



k=i; 
i=i+ 1; 

end; 
raref2t=interpl(tl,rar2,t); 
q s2k=interp 1 ( s,dfj2,raref2t); 
xr2k( 1 )=O; 
rar2k(1)=sinj2; 
for i=2:k; 

xr2k(i)=qs2(i)*(t-tl(i-1)) + y1(i-1); 
rar2k(i)=rar2(i); 

end; 
xr2k(k+ 1 )=qs2k*(t -t1 (k) )+y 1 (k); 
rar2k(k+ 1 )=raref2t; 
ao=Ü; 
a1=xr2k(k+1); 
a2=y1t; 
a3=max(qs1)*t; 
for i=l:nx; 

if x(i)&amp;lt;= ao 
satu(i)=sinj2; 
conc(i)=cinj2; 

e1seif x(i) &gt; ao &amp;amp; x(i)&amp;lt;.= ai; 
satu( i)=interp I (xr2k,rar2k,x( i)); 
conc(i)=cinj2; 

elseif x(i) &gt; ai &amp;amp; x(i)&amp;lt;= a2 
satu(i)=raref2t; 
conc(i)=cinjl; 

elseif x(i) &gt; a2 &amp;amp; x(i)&amp;lt;= a3 
satu(i)=interp 1 (xr 1 ,rar I ,x(i) ); 
conc(i)==cinj 1; 

else 
satu(i);;;:so; 
conc(i)=co; 

end; 
end; 
A(j,:)=satu;B(j,:)=conc; 

elseif TO! &amp;lt;t &amp;amp; t&amp;lt;= TI 
clear xrl; clear xr2 
xrl=qsl *t; 

130 



xr2(l)~O; 

for i=2:nt+ 1; 
xr2(i)~qs2(i)*(t-tl(i)) + yl(i); 

end; 
y2t~interp I (t2,y2,t); 
aO~min(xr2); 

al~max(xr2); 

a2~2t; 

a3~max(qsl)*t; 

for i=l:nx; 
if x(i) «= aO 

satu(i)~sinj2; 

conc(i)~cinj2; 

elseif x(i) &gt; aO &amp;amp; x(i) «= ai 
satu(i )=interp I ( xr2,rar2,x( i)); 
conc(i)=cinj2; 

elseif x(i) &gt; ai &amp;amp; x(i)&amp;lt;~ a2 
satu(i)~l; 

conc(i)=cinj 1; 
elseif x(i) &gt; a2 &amp;amp; x(i)&amp;lt;~ a3; 

satu(i)=interp I (xr I ,r ar I ,x(i) ); 
conc(i)~cinj I; 

else 
satu(i)~so; 

conc(i)=co; 
end; 

end; 
A(j,:)~satu;B(j,:)~onc; 

elseif TI &amp;lt;t &amp;amp; t&amp;lt;~ T02 
clear xrl;clear xr2; 
clear xr3k;clear rar3k; 
xr2(1)~qsl(l)*t; 

for i=2:nt+l; 
xr2(i)~qs2(i)*(t-tl(i-l)) + yl(i-1); 

end; 

xrl=qsl *t; 
y3t=interp I (t3,y3,t); 
se3t~interp I (t3,se3,t); 

131 



sd3t=interpl (t3,sd3,t); 
i=l; 
while t &gt;= t3(i); 

k=i; 
i=i+l; 

end; 
ifk&lt;IOO 

raref3 t=interp 1 ( t3,rar3, t ); 
qs3 k=interp I ( s,dfr ,raref3t); 

else 
raref3t=rar3(k) ; 
q s3k=interp I ( s,dfr ,raref3 t); 

end; 
clear xr3k;clear rar3k; 
ifk&lt;IOO 

xr3k(l)=0; 
rar3k(l)=sinj3; 
for i=2:k; 

xr3k(i)=qs3(i)*(t-t3(i)) + y3(i); 
rar3k(i)=rar3(i); 

end; 
xr3k(k+ I )=qs3k*(t -t3(k) )+y3(k); 
rar3k(k+ l)=raref3t; 

else 
xr3k(I)=O; 
rar3k(l)=l; 
for i=2:k; 

xr3k(i)=qs3(i)*(t-t3(i-l)) + y3(i-l); 
rar3k(i)=rar3(i); 

end; 
xr3k(k +I )=q s3k*( t-t3(k) )+y3(k); 
rar3k(k+ I )=raref3t; 

end; 
y2t=interp I (t2,y2,t); 
ao=xr3k(l ); 
al=xr3k(k+l); 
a2=y3t; 
a3=max(xr2); 
a4=y2t; 

132 



a5=max(qsl)*t; 
for i=l:nx; 

if x(i)&amp;lt;= ao; 
satu(i)=sinj3; 
conc(i)=cinj3; 

elseif x(i) &gt;= ao &amp;amp; x(i)&amp;lt;= a1; 
satu( i)=interp 1 ( xr 3k,rar3k,x(i)); 
conc(i)=cinj3; 

e1seif x(i) &gt; a1 &amp;amp; x(i)&amp;lt;= a2; 
satu(i)=se3t; 
conc(i)=cinj3; 

e1seif x(i) &gt; a2 &amp;amp; x(i)&amp;lt;= a3; 
satu( i )=interp 1 ( xr2,rar2,x( i)); 
conc(i)=cinj2; 

e1seif x(i) &gt; a3 &amp;amp; x(i)&amp;lt;=a4 
satu(i)=sl; 
conc(i)=cinj 1; 

e1seif x(i) &gt; a4 &amp;amp; x(i)&amp;lt;= a5; 
satu(i)=interp 1 (xr 1 ,rar 1 ,x(i) ); 
conc(i)=cinj 1; 

else 
satu(i)=so; 
conc(i)=co; 

end; 
end; 
A(j,:)=satu;B(j,:)=conc; 

else 
clear xr2;clear qs3k; 
xr2( 1 )=qs2( 1 )*t; 
for i=2:nt+ 1; 

xr2(i)=qs2(i)*(t-tl(i-1)) + y1(i-1); 
end; 
y3t=interp 1 (t3,y3,t); 
se3t=interp 1 (t3,se3,t); 
sd3t=interp 1 (t3,sd3,t); 
i=l; 
whi1e t &gt;= t3(i); 

k=i; 
i=i+ 1; 

133 



end; 
if k &amp;lt;100 

raref3 t=interp 1 ( t3,rar3, t ); 
qs3k=interp 1 ( s ,dfj 3 ,raref3t); 

else 
raref3t=rar3(k); 
qs3k=interp 1 ( s,dfj3,raref3 t); 

end; 
clear xr3k;clear rar3k; 
if k &amp;lt;100 

xr3k(l )=qs3(1)*t; 
rar3k(1)=sinj3; 
for i=2:k; 

xr3k(i)=qs3(i)*(t-t3(i-1)) + y3(i-1); 
rar3k(i)=rar3(i); 

end; 
xr3k(k + 1 )=qs3k*( t-t3(k) )+y3(k); 
rar3k(k + 1 )=raref3t; 

else 
xr3k(l)=O; 
rar3k(1)=1; 
for i=2:k; 

xr3k(i)=qs3(i)*(t-t3(i-1)) + y3(i-1); 
rar3k(i)=rar3(i); 

end; 
xr3k(k+ 1 )=qs3k*(t -t3(k) )+y3(k); 
rar3k(k+ 1 )=raref3t; 

end; 
foi=interp 1 ( s,fr,so ); 
fi i=interp l(s,fr,s 1 ); 
ao=xr3k(1); 
a1=xr3k(k+1); 
a2=y3t; 
a3=max(xr2); 
a4=( (fli-foi)/(s 1-so ))*(t-t2(nt+ 1 ))+y2(nt+ 1 ); 
for i""l:nx; 

if x(i)&amp;lt;= ao 
satu(i)=sinj3; 
conc(i)=cinj3; 

134 



e1seif x(i) &gt; ao &amp;amp; x(i)&amp;lt;= a1; 
satu( i )=interp 1 ( xr3k,rar3 k, x(i)); 
conc(i)=cinj3; 

elseif x(i) &gt; a1 &amp;amp; x(i)&amp;lt;= a2; 
satu(i):::se3t; 
conc(i)=cinj3; 

e1seif x(i) &gt; a2 &amp;amp; x(i)&amp;lt;= a3; 
satu( i )=interp 1 ( xr2,rar2,x( i)); 
conc(i)=cinj2; 

e1seif x(i) &gt; a3 &amp;amp; x(i)&amp;lt;= a4; 
satu(i)=s1; 
conc(i)=cinjl; 

else 
satu(i)=so; 
conc(i)=co; 

end; 
end; 
AU,:)=satu;BU,:)=conc; 

end; 
else 

ift&lt;=TO 
clear xrl; 
ao::::O; 
xrl~sl *t; 
a1=max(xr1); 
for i=l:nx; 

if x(i) &amp;lt;ao 
satu(i)=sinjl; 
conc(i)=cinjl; 

elseif x(i) &gt;::::: ao &amp;amp; x(i)&amp;lt;= al; 
satu(i)=interp 1 (xr 1,rar 1,x(i) ); 
conc(i)=co; 

else 
satu(i)=so; 
conc(i)=co; 

end; 
end; 
AU,:)=satu;BU,:)=conc; 

e1seif TO &amp;lt;t &amp;amp; t&amp;lt;= TO! 

135 



clear xrl;clear xr2k;clear rar2k; 
xrl=qsl *t; 
y 1 t=interp 1 (t1 ,y 1,t); 
i=l; 
while t &gt;= t1 (i); 

k=i; 
i =i+ 1; 

end; 
raref2t=interp 1 ( t1 ,rar2, t ); 
qs2k=interp 1 ( s,dfj2,raref2t); 
xr2k(l)=Ü; 
rar2k(1)=sinj2; 
for i=2:k; 

xr2k(i)=qs2(i)*(t-tl(i-1)) + yl(i-1); 
rar2k(i)=rar2(i); 

end; 
xr2k(k+ 1 )=qs2k*(t-tl(k) )+y I (k); 
rar2k(k+ 1 )=raref2t; 
ao=O; 
a1=xr2k(k+1); 
a2=y1t; 
a3=max(qs1)*t; 

for i=l:nx; 
if x(i) = ao 

satu(i)=sinj2; 
conc(i)=cinj2; 

elseif x(i) &gt; ao &amp;amp; x(i)&amp;lt;= al; 
satu(i )=interp 1 (xr2k,rar2k.x( i)); 
conc(i)=cinj2; 

e1seif x(i) &gt; a1 &amp;amp; x(i)&amp;lt;= a2 
satu(i)=raref2t; 
conc(i)=cinjl; 

elseif x(i) &gt; a2 &amp;amp; x(i)&amp;lt;= a3 
satu(i)=interp 1 (xrl,rar 1 ,x(i) ); 
conc(i)=cinjl; 

else 
satu(i)=so; 
conc(i)=co; 

136 



end; 
end; 
A(j,: )=satu;B (j,: )=cone; 

e!seif TO! &amp;lt;t &amp;amp; t&amp;lt;= T02 
clear xrl; clear xr2 
xrl=qsl *t; 
xr2(l)=Ü; 
for i=2:nt+ 1; 

xr2(i)=qs2(i)*(t-tl(i)) + yl(i); 
end; 
y2t=inteip I (t2,y2,t); 
a0=min(xr2); 
al=max(xr2); 
a2=y2t; 
a3=max(qsl)*t; 

for i=l:nx; 
if x(i)&amp;lt;= aO 

satu(i)=sinj2; 
conc(i)=cinj2; 

elseif x(i) &gt; aO &amp;amp; x(i)&amp;lt;= al 
satu(i)=interp I ( xr2,rar2,x(i)); 
conc(i)=cinj2; 

elseif x(i) &gt; a] &amp;amp; x(i)&amp;lt;= a2; 
satu(i)=sl; 
conc(i)=cinjl; 

e]seif x(i) &gt; a2 &amp;amp; x(i)&amp;lt;= a3; 
satu(i)=interp I (xr l,rar l,x(i) ); 
conc(i)=cinjl; 

else 
satu(i)=so; 
conc(i)=co; 

end; 
end; 
A(j,:)=satu;B(j,:)=conc; 

elseif T02 &amp;lt;t &amp;amp; t&amp;lt;= Tl 
clear xr2; 
xr2(1)=0; 
for i=2:nt+l; 

137 



xr2(i)=qs2(i)*(t-tl(i)) + yl(i); 
end; 
frso=interp 1 (s,fr,so ); 
m=(frsl-frso )/(si-so); 
aO=min(xr2); 
al=max(xr2); 
a2= m*(t-t2(nt+l)) + y2(nt+l); 

for i=l:nx; 
if x(i)&amp;lt;= aO 

satu(i)=sinj2; 
conc(i)=cinj2; 

elseif x(i) &gt; aO &amp;amp; x(i)&amp;lt;= a! 
satu( i )=interp I (xr2,rar2,x( i)) ; 
conc(i)=cinj2; 

elseif x(i) &gt; ai &amp;amp; x(i)&amp;lt;= a2; 
satu(i)=sl; 
conc(i)=cinj I; 

else 
satu(i)=so; 
conc(i)~o; 

end; 
end; 
A(j,: )=satu;B(j,: )=cone; 

else 
clear xr2;clear qs3k; 
xr2(1 )=qs2(1 )*t; 
for i=2:nt+l; 

xr2(i)=qs2(i)*(t-tl(i-1)) + yl(i-1); 
end; 
y3t=interp I (t3,y3,t); 
i=l; 
while t &gt;= t3(i); 

k=i; 
i=i+l; 

end; 
ifk&lt;!OO 

raref3t=interp I ( t3,rar3 ,t ); 
qs3k=interp 1 ( s,dfj3 ,raref3t); 

138 



else 
raref3t=rar3(k); 
q s3 k~interp 1 ( s ,dfj 3 ,raref3 t); 

end; 
clear xr3k;clear rar3k; 
ifk&lt;!OO 

xr3k(l )~qs3( 1 ); 
rar3k(1)~sinj3; 

for i~Z:k; 
xr3k(i)~s3(i)*(t-t3(i-1)) + y3(i-1); 
rar3k(i)=rar3(i); 

end; 
xr3k(k+ 1 )~s3k*(t-t3(k) )+y3(k); 
rar3k(k + l)=oraref3t; 

else 
xr3k(1)~0; 

rar3k(1)~1; 

for i~Z:k; 
xr3k(i)~qs3(i)*(t-t3(i-1)) + y3(i-1); 
rar3 k( i )=orar3 (i); 

end; 
xr3k(k+ 1 )~qs3k*(t -t3(k) )+y3(k); 
rar3k(k+ 1 )=raref3t; 

end; 
foi~interp 1 (s,fr,so ); 
fli~terp 1 ( s,fr,s1 ); 
ao~xr3k(l )*t; 
a1~xr3k(k+1); 

a2~max(xr2); 

a3~((fli-foi)/(s1-so ))*(t -t2(nl+ 1 ))+y2(nl+ 1 ); 
for i=l:nx; 

if x(i)&amp;lt;= ao 
satu(i)=sinj3; 
conc(i)=cinj3; 

elseif x(i) &gt; O &amp;amp; x(i)&amp;lt;~ ai; 
satu(i )=interp I ( xr3k,rar3k,x( i)) ; 
conc(i)~cinj3; 

e1seif x(i) &gt; a1 &amp;amp; x(i)&amp;lt;~ a2; 
satu(i)=interp 1 (xr2,rar2,x(i) ); 

139 



conc(i)=cinj2; 
elseif x(i) &gt; a2 &amp;amp; x(i)&amp;lt;= a3; 

satu(i)=sl; 

end 

conc(i)=cinjl; 
else 

satu(i)=so; 
conc(i)=co; 

end; 
end; 
AQ,:)=satu;BQ,:)=conc; 

end 

end 
nx=size(A,2); 
FO= 1-fract( A(: ,nx),B(: ,nx)); 
producao=trapz(tempo,FO); 

% Animação gráfica mostra a evolução dos perfis da solução com o tempo 
ANI=input('Para uma animação gráfica aperte 1 , caso contrário aperte O ' ); 
ANI=O; 
ifANI=l 

close;ntempo=size(ternpo,2); 
M=moviein(nternpo ); 
for j=l :ntempo;plot(x,AQ,:),x,BQ,:)); 

M(:,j)=getframe; 
end; 
pause; 
mesh(A); 

else 
end; 
end; 

140 



25 - Rotina curvas.m 

% TO : tempo onde termina a injeção do primeiro banco e começa a injeção 
% do segundo banco. 
% Tl : tempo onde termina a injeção do segundo banco e começa a injeção 
% do terceiro banco. 

TO=TO/snom; 
T1=Tlisnom; 

%cálculo da curva y 11 
clear y 11 ;ele ar tll; 
ur=size(leq11,2); 
y 11 ( 1 )=O;tll ( 1 )=TO; 

for j=2:nr; 
rn1 =interp 1 (s,dfr,1eq 11 (j) ); 
fO=interp1(s,fr,leq11(j)); 
m2=fü.i(leq11(j)+hlr); 
d=y11 (j-1 )-m2*t11(j-1); 
tll(j)=d.i(ml-m2); 
yll(j)=m1*tll(j); 

end; 

%cálculo da curva y12 
if sl&amp;lt;= sm 

clear y12;clear tl2; 
yl2(1)=yll(nr);t12(l)=tll(nr); 
for j=2:nr; 

ml=interp 1 ( s,dfr,leq 12(j) ); 
fO=interp 1 (s,fr,leq 12(j) ); 
m2=(frs1-f0)./(sl-leq 12(j)); 
d=y12(j-l)-m2*t12(j-1); 
tl2(j)=d./(ml-m2); 
yl2(j)=l *t12(j); 

end; 

else 
yl2(l)=y11(nr);t12(l)=t11(nr); 

141 



aux~sk:(s1-sk)./nt : s1; 
for j~2:nr-1; 

m1=interp1(s,dfr,auxG)); 
fO=interp1(s,fr,auxG))+(10)'( -1 0); 
m2~(frsl-fO)./(sl-auxG) ); 
ct~y12(j-1 )-m2*t12(j-1); 
t12(j)~./(ml-m2); 

y12(j)=l *t12(j); 
end; 
t12(nr)=inf; 
y12(nr)~inf; 

end; 
% a curva y13; 
if sl&amp;lt;= sm 

clear y13;clear tl3; 
frso=interp 1 (s,fr,so ); 
t13~t12(nr) :.1:1 0+t12(nr); 
m~(frs1-frso )./(sl-so); 
y 13~m*(t13-t12(nr) )+y 12(nr); 

% a curva y14; 
clear yl4;clear tl4; 
tl4~tll(nr):.Ol :t13(nr); 
rn=dflstar; 
y14=*(t14-tll(nr))+yll(nr); 
% a curva y15; 
clear yl5;clear tiS; 
tlS~O:.Ol :t12(nr); 
y15~dfrsm*t15; 

else 

% a curva y14; 
clear y14;clear t14; 
t14"'Íll (nr):.Ol :tl2(nr-1 ); 
hl~h(kl,k2,cinj2)+ swi./snom; 
m=dflstar; 
y14~m*(t14-tll(nr))+yll(nr); 

% a curva y15; 

142 



clear y15;clear t15; 
tl5~o:.Ol :tl2(m-l): 
yl5~dfrsm*t15; 

end; 

143 



26 - RotiDa prodads.m 
% Calcula a produção para o caso da injeção de bancos com 
% adsorção 

clear satu; 
clear cone; 
clear A; 
clear B; 

Tül=tll(nt+l); 
T11=tl2(nt+l); 

tmax=tdmax/snorn; 
ntrnax=50; 
dt=tmax/ntrnax; 

if tmax = O; 
producao=O; 

else 
tempo=O:dt:tmax; 
for k=l :ntrnax+ 1; 

t=tempo(k); 
twobanc; 
A(k,:)=satu; 
B(k,:)=conc; 

end; 

Fadsor=l. fract(A( :,nx),B( :,nx) ); 
producao=trapz(tempo,Fadsor); 

end; 

144 



27 ~ Rotina twobanc.m 
% Calcula a solução s{x,t) , c{x,t) para um valor de t 
% Devemos então entrar com o valor de t 

clear satu; 
clear cone; 

TOI=tll(nt+l); 
Tll=tl2(nt+ !); 

if t&amp;lt;=TO; 
c!ear leql; 
c!ear xleql; 
ds=(sinjl-srn)./nt; 
leql=sinj 1 :-ds:sm; 
qs=interp I (s,dfr,leq I); 
xleql=qs*t; 
al=max(xleql); 
ao=xleql(l); 
for i=l:nx; 

if x(i) &gt;~ao &amp;amp; x(i)&amp;lt;~ a!; 
satu(i)~interpl (xleq I ,leq I ,x(i)); 
conc(i)=cinj 1; 

else 
satu(i)=so; 
conc(i)=co; 

end; 
end; 
A(k,:)=satu;B(k,:)=conc; 

elseif t &gt; TO &amp;amp; t&amp;lt;= TO!; 
clear leq2t; 
clear xleq2t; 
j=l; 
while tl!U) &amp;lt;t 

nrt~j ; 
j=j+l; 

end; 
for j=l :nrt; 

leq2tU)=leq2U); 

145 



end; 
1eq2t(nrt+ 1 )=interp1(tl1,1eq2,t); 
for j=2:nrt; 

m(j)=interp 1 ( s,dfl,leq2t(j)); 
x1eq2t(j)=m(j)*(t-t11(j))+y11(j); 

end; 
xleq2t(nrt+ 1 )=interp1(t11,y11,t); 
x1eq2t( 1 )=0: 
ds=(sinj 1-sm)Jnt; 
leq=sinjl :-ds:sm; 
D=interp 1 ( s,dfr,1eq); 
xleq=D*t; 
a1=x1eq2t(1); 
a2=x1eq2t(nrt+ 1); 
a3=max(x1eq); 
for i=l:nx; 

if x(i) &amp;lt;a1; 
satu(i)=sinj2; 
conc(i)=cinj2; 

e1seif x(i) &gt;= a1 &amp;amp; x(i) &amp;lt;a2; 
satu( i )=interp 1 ( xleq2t,1eq2t,x( i)); 
conc(i)=cinj2; 

e1seif x(i) &gt;= a2 &amp;amp; x(i) &amp;lt;a3; 
satu( i )=interp 1 ( x1eq,leq,x(i)); 
conc(i)=cinjl; 

else 
satu(i)=so; 
conc(i)=co; 

end; 
end; 
A(k,:)=satu;B(k,:)=conc; 

else 
clear x1eq2; 
for j=1:nt+1; 

m(j )=interp 1 ( s,dfl,1eq2(j)); 
x1eq2(j)=m(j)*(t -til (j))+yll (j); 

end; 
ds=(sinjl-sm)Jnt; 
leq=sinjl :-ds:sm; 

146 



D=interp I (s,dfr,leq); 
xleq=D*t; 
al=xleq2(1); 
a2=max(xleq2); 
a3=interpl(tl2,y 12,t); 
a4=max(xleq); 
for i=l:nx; 

if x(i) &amp;lt;ai; 
satu(i)=sinj2; 
conc(i)=cinj2; 

elseif x(i) &gt;= a] &amp;amp; x(i) &amp;lt;a2; 
satu(i)=interp I ( xleq2,leq2,x( i)) ; 
conc(i)=cinj2; 

elseif x(i) &gt;= a2 &amp;amp; x(i) &amp;lt;a3; 
satu(i)=sl; 
conc(i)=cinj 1; 

elseif x(i) &gt;= a3 &amp;amp; x(i) &amp;lt;a4; 
satu(i )=interp I ( xleq ,leq,x(i)); 
conc(i)=co; 

else 
satu(i):;:::so; 
conc(i)=co; 

end; 
end; 
A(k,:)=satu;B(k,:)=conc; 

end; 

147 



28 - Rotina joha.m 
% Dá a solução s(x,t) e c(x,t) descrita por Johansen para o 
% caso cl &gt; cr 

clear satu;clear cone; 
intstar; 
interl; 
interk; 

if SL &amp;lt;sstar 
%cálculo de u!;(Sl,CR); 
fsl;interpl ( s,fl,SL); 
M;fsii(SL+hlr); 
rl;l; 
r2=nstar; 
RETA = M.*(s-SL)+fsl; 
k=r2-rl; 
while k &gt; I; 

r = round((rl+r2)/2); 
if RETA(r) &gt; fr(r) 

rl=r; 
else 

r2=r; 
end; 
k=r2-rl; 

end; 
SI= (s(ri)+S(r2))/2; 
xs=S I ;F=fr; 
rotsku;sk:ul =skxu; 
if SR &amp;lt;skul; 

se;:Sl; 
sd;SR; 
f=fr; 
df=dfr; 
buck; 
vl=fsl/(SI +hlr); 
v2=vi; 
v3=vf; 
for i=l:nx; 

148 



if x(i) &amp;lt;v! *t 
satu(i)=SL; 
conc(i)=CL; 

elseif x(i) &gt;= v! *t &amp;amp; x(i) &amp;lt;v2*t 
satu(i)=Sl; 
conc(i)=CR; 

elseif x(i) &gt;= v2*t &amp;amp; x(i) &amp;lt;v3*t 
satu( i )=satura( i); 
conc(i)=CR; 

else 
satu(i)=SR; 
conc(i)=CR; 

end; 
end; 

elseif SR &gt; skul 
%cálculo de u2=(S2,CL); 
fsr=interp I (s,fr,SR); 
M=fsr/(SR+hlr); 
rl=nstar; 
r2=n; RETA = M.*(s-SR)+fsr; 
k=r2-r!; 
while k &gt; I; 

r = round((rl+r2)!2); 
if RETA(r) &gt; fl(r) 

r2=r; 
else 

rl=r; 
end; 
k=r2-rl; 

end; 
S2= (s(rl)+s(r2))/2; 
se=SL; 
sd=S2; 
f=fl; 
df=dfl; 
buck; 
v3=M; 
vl=vi; 
v2=vf; 

149 



for i:::l :nx; 
if x(i) &amp;lt;vi *t 

satu(i)=SL; 
conc(i)=CL; 

elseif x(i) &gt;= vi *t &amp;amp; x(i) &amp;lt;v2*t 
satu(i)=satura(i); 
conc(i)=CL; 

elseif x(i) &gt;= v2*t &amp;amp; x(i) &amp;lt;v3*t 
satu(i)=S2; 
conc(i)=CL; 

else 
satu(i)=SR; 
conc(i)=CR; 

end; 
end; 

else 
fsr=interpl (s,fr,SR); 
vl=fsr/(SR+hlr); 
for i::: I :nx; 

if x(i) &amp;lt;vi *t 
satu(i)=SL; 
conc(i)=CL; 

else 
satu(i)=SR; 
conc(i)=CR; 

end; 
end; 

end; 
else 

if SR &gt;= sk 
fsr=interpl (s,fr,SR); 
M=fsr/(SR+hlr); 
r 1 :::nstar; 
r2:::n; 
RETA = M.*(s-SR)+fsr; 
k=r2-rl; 
while k &gt; I; 

r = round((rl+r2)/2); 
if RETA(r) &gt; fl(r) ; 

!50 



r2=r; 
else 

rl=r; 
end; 
k=r2-rl; 

end; 
S2= (s(rl)+s(r2))/2; 
se=SL; 
sd=S2; 
f=fl; 
df=dfl; 
buck; 
v3=M; 
vl=vi; 
v2=vf; 
for i=l:nx; 

if x(i) &amp;lt;vi *t 
satu(i)=SL; 
conc(i)=CL; 

elseif x(i) &gt;= vl *t &amp;amp; x(i) &amp;lt;v2*t 
satu( i )=satura( i) ; 
conc(i)=CL; 

elseif x(i) &gt;= v2*t &amp;amp; x(i) &amp;lt;v3*t 
satu(i)=S2; 
conc(i)=CL; 

else 
satu(i)=SR; 
conc(i)=CR; 

end; 
end; 

else 
se==SL; 
sd=sstar; 
f=fl; 
df=dfl; 
buck; 
vl=vi; 
v2=vf; 
satural=satura; 

151 



se=sl; 
sd""'R; 
f=fr; 
df=dfr; 
buck; 
satura2=satura; 
v3=vi; 
for i=l:nx; 

if x(i) &amp;lt;v! *t 
satu(i)=SL; 
conc(i)=CL: 

elseif x(i) &gt;= v! *t &amp;amp; x(i) &amp;lt;v2*t; 
satu(i)=satural (i); 
conc(i)=CL; 

elseif x(i) &gt;= v2*t x(i) &amp;lt;v3*t 
satu(i)=satura2(i); 
conc(i)=CR; 

else 
satu(i)=SR; 
conc(i)=CR; 

end; 
end; 

end; 
end; 

!52 



29 - Rotina produjoh.m 
% Calcula a produção para o caso da injeção de água com polímeros (Johansen) 
% Entre com o valor para a variável tdmax 
% Deve ser executado depois de executada a rotina dados.m 

clear A;clear B; 
if tdmax &amp;lt;1 

jt=!O; 
else 

jt=flx(tdmax); 
end: 
snom=l-swi-sor; 
tmax=tdmax/snom; 
ntrnax=jt* 1 00; 
dtm:::::tmax/ntmax; 

if tmax =O 
producao==Ü; 

else 
tempo=O:dtm:tmax; 
ntemp::::size(tempo,2); 
for jl=l:ntemp; 

t=tempo(jl); 
joha; 
A (i l,:)=satu;B(j !,:)=cone; 

end; 
Fjoha=l-fract(A( :,nx),B( :,nx) ); 
producao=trapz(tempo,Fjoha); 

end; 

153 



30 ~ Rotina rotsku.m 
% Calcula sk(u) dado na teoria. 
snom=l-swi-sor; 
cr=CR;cl=CL; 
ar= .2*cr./(1+100*cr); 
al= .2*cl./(1+100*cl); 
hlr=( ar-a!)./( cr-c1); 
hlr=(swi+hlr)./snom ; 
fsx=interp 1 (s,F ,xs ); 
Mx=fsxf(xs+hlr); 
N=1i(l +hlr); 
if Mx &amp;lt;N 

skxu=inf; 
% sk=inf significa que a reta com inclinação lampc(x,y) 
% corta o gráfico de f em um só ponto ,no caso u=(x,y) 

else 
RETA = Mx.*(s+hlr); 
if xs &amp;lt;sstar 

rl=nstar;r2=n; 
k=r2-rl; 
while k &gt; 1; 

r = round((r1+r2)/2); 
fsr=interp 1 (s,F,s(r)); 
G = fsr - RETA(r); 
ifG&gt;O; 

rl=r; 
else 

r2=r; 
end; 
k=r2-r1; 

end; 
skxu=(s(r 1 )+s(r2) )/2; 
fskxu=interp I (s,F,skxu); 

else 
r2=nstar;r 1 = 1 ; 

end; 
k=r2-rl; 
while k &gt; I; 

r = round((rl+r2)/2); 

!54 



fsr-interp 1 (s,F,s(r)); 
G = fsr - RETA(r); 
if G &gt;O 

rl=r; 
else 

r2=r; 
end; 
k=r2-rl; 

end; 
skxu=(s(rl )+s(r2) )12; 
fkxu=interp 1 (s,F,skxu); 

end; 

155 



31 - Definição das funções utilizadas. 

Function fract.m 
% A função de fluxo fracionário f(s,c) 
function f = fract(s,c); 
f= (s.A2)J(s.A2 + (0,5 + 100*c),*((l-s),A2)); 
end; 

Function derfract.m 
% Derivada parcial de f(s,c) com relação a s 
function z=dfract(x,y); 
z = (2.*x.*(l-x),*(0.5+100*y))J( ( x.A2 + (05+100*y),*(l-x),A2 ),A2) 
end; 

Function dfcl.m 
% Derivada parcial de f(s,c) com relação a c 
function f = dfc(s,c); 
f= -J00*((s,A2)*(J-s)A2 )J ( (s,A2 + (0,5 +J00*c),*((l-s),A2)),A2); 
end; 

Function lampcl.m 
% Velocidade do c-choque 
function yp = lampc(s,c,swi,sor); 
fi= (s.*s) ,/(s,*s + (0,5 + !OO*c),*((l-s),*(l-s)) ); 
snom=l-swi-sor; 
yp = f!J(s+swilsnom); 
end; 

Function h.m 
% h = h(c) : derivada de a(c) 
function yp= h(kl ,k2,x); 
yp=(kl)J(l +k2, *x). A2 
end; 

!56 




</field>
	</doc>
</add>