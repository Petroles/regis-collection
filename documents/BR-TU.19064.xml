<?xml version="1.0" encoding="utf-8"?>
<add>
	<doc>
		<field name="docid">BR-TU.19064</field>
		<field name="filename">26163_000787312.pdf</field>
		<field name="filetype">PDF</field>
		<field name="text">
 

 

 

 

 
 
 
 
 
 
 

JONAS FELIPE PEREIRA DE QUEIROZ 
 
 
 
 
 
 
 
 
 

UMA ARQUITETURA MULTIAGENTE PARA SISTEMAS DE 

SUPERVISÃO E CONTROLE DE PROCESSOS 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

São José do Rio Preto - SP 
2013 

 



 

 

 

 

 
 

Jonas Felipe Pereira de Queiroz 
 
 
 
 
 
 
 

UMA ARQUITETURA MULTIAGENTE PARA SISTEMAS DE 

SUPERVISÃO E CONTROLE DE PROCESSOS 

 
 
 
 
 
 

Dissertação apresentada como parte dos 

requisitos para obtenção do título de Mestre em 

Ciência da Computação, junto ao Programa de 

Pós-Graduação em Ciência da Computação, 

Área de Concentração - Matemática e 

Inteligência Computacional, do Instituto de 

Biociências, Letras e Ciências Exatas da 

Universidade Estadual Paulista “Júlio de 

Mesquita Filho”, Campus de São José do Rio 

Preto. 

 

Orientador: Prof. Dr. Ivan Rizzo Guilherme 

Co-orientador: Prof. Dr. Fabricio Aparecido Breve 

 
 
 
 
 

São José do Rio Preto - SP 
2013 

  



 

 

 

 

 

 
 
 

 

 

 

 

 

 

 

 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

 
Ficha catalográfica elaborada pela Biblioteca do IBILCE 
         UNESP - Campus de São José do Rio Preto  

 
Queiroz, Jonas Felipe Pereira de 

Uma arquitetura multiagente para sistemas de supervisão e 
controle de processos / Jonas Felipe Pereira de Queiroz. – São José 
do Rio Preto, 2013 

 165 f. : il., tabs. 
 

 Orientador: Ivan Rizzo Guilherme 
 Co-orientador: Fabricio Aparecido Breve 
 Dissertação (mestrado) – Universidade Estadual Paulista “Júlio de 

Mesquita Filho”, Instituto de Biociências, Letras e Ciências Exatas 
 

 1. Computação. 2. Sistemas multiagentes. 3.  
Agentes inteligentes (Software) 4. Ontologias (Recuperação da 
informação) I. Guilherme, Ivan Rizzo. II. Breve, Fabricio Aparecido  
III. Universidade Estadual Paulista “Júlio de Mesquita Filho”. Instituto de 
Biociências, Letras e Ciências Exatas. III. Título. 
 

     CDU – 518.72 
 



 

 

 

 

Jonas Felipe Pereira de Queiroz 
 
 
 
 
 

UMA ARQUITETURA MULTIAGENTE PARA SISTEMAS DE 

SUPERVISÃO E CONTROLE DE PROCESSOS 

 
 

Dissertação apresentada como parte dos 
requisitos para obtenção do título de Mestre em 
Ciência da Computação, junto ao Programa de 
Pós-Graduação em Ciência da Computação, 
Área de Concentração - Matemática e 
Inteligência Computacional, do Instituto de 
Biociências, Letras e Ciências Exatas da 
Universidade Estadual Paulista “Júlio de 
Mesquita Filho”, Campus de São José do Rio 
Preto. 

 

Comissão Examinadora 

 

Prof. Dr. Ivan Rizzo Guilherme 
IGCE-UNESP – Rio Claro 

Orientador 
 
 

Prof. Dr. Mário Luiz Tronco 
EESC-USP – São Carlos 

 
 

Prof. Dr. Wagner Tanaka Botelho 
CMCC-UFABC 

 
 
 

São José do Rio Preto - SP 
2013 

 



 

 

 

 

AGRADECIMENTOS 

 

Primeiramente, aos meus pais pelo incentivo e apoio dado durante todos esses anos e 

por oferecerem todo o suporte necessário para os meus estudos e para a realização dos meus 

sonhos. E também ao resto da família, por estarem sempre ao meu lado. 

Ao meu orientador, Prof. Ivan Rizzo Guilherme por ter dado a mim essa oportunidade e 

por todo o tempo investido em mim. E também por todo o suporte, conhecimento e 

experiências transmitidas durante o desenvolvimento desse trabalho, e que contribuíram muito 

tanto para minha formação acadêmica como intelectual. 

Ao engenheiro Kazuo Miura e ao Prof. José Ricardo Mendes que contribuíram com o 

conhecimento sobre o domínio de Perfuração de Poços de Petróleo que foi utilizados no 

desenvolvimento do estudo de caso realizado. 

E a todos os professores, colegas e amigos que contribuíram direta ou indiretamente 

para a realização desse trabalho. E também a todos que me apoiaram e estiveram ao meu lado 

durante essa jornada. 

  



 

 

 

 

RESUMO 

 

Os avanços tecnológicos ocorridos nos últimos anos, principalmente em relação aos softwares 

e hardwares têm contribuído para o aumento da utilização de sensores e controladores pelas 

indústrias. Nesses ambientes, o grande desafio é o desenvolvimento de sistemas 

computacionais cada vez mais complexos para a integração dos componentes heterogêneos, o 

gerenciamento e a análise da grande quantidade de dados gerados, com a finalidade de 

automatizar as atividades dos operadores na supervisão e no controle dos processos 

envolvidos. Nesse contexto, a abordagem de sistemas multiagentes oferece um caminho 

promissor e inovador para entender, desenvolver, gerenciar e manter sistemas complexos. 

Assim, o objetivo desse trabalho consiste em especificar uma arquitetura utilizando a 

abordagem de sistemas multiagentes, de forma que essa arquitetura possa ser utilizada como 

um modelo de referência para o desenvolvimento de sistemas computacionais voltados para a 

supervisão e controle de processos. A arquitetura foi especificada a partir dos aspectos e 

requisitos analisados em um conjunto de trabalhos correlatos que utilizam a abordagem de 

sistema multiagente em aplicações no domínio de supervisão e controle. Utilizando a 

arquitetura proposta foi desenvolvido o protótipo de um sistema para supervisionar as 

operações de perfuração de poços de petróleo. No desenvolvimento do protótipo foi definida 

uma ontologia para descrever o conhecimento do domínio de perfuração de poços de petróleo, 

representando as operações, as anormalidades e os agentes. O protótipo foi testado utilizando 

um conjunto de dados reais, onde foi possível validar alguns dos aspectos da arquitetura 

proposta. 

 

Palavras-chave: Sistema multiagente. Sistemas Inteligentes. Ontologias. 

 

  



 

 

 

 

ABSTRACT 

 

The technological advances occurred in last years have contributed to increase the use of 

sensors and controllers in industries. In these environments, the major challenge is the 

development of complex computer systems to integrate heterogeneous components, to manage 

and analyze the large amount of produced data, in order to automate the operators’ activities 

to supervise and control involved processes. In this context, multi-agent approach offers a 

promising and innovative way to understand, develop, manage and maintain complex 

systems. The objective of this work is to specify a reference architecture using the multi-agent 

approach. The architecture was proposed to be used as a reference model for the 

development of computational systems for processes monitoring and control. The architecture 

has been specified through an analysis of the aspects and requirements found in a set of 

related works that use the multi-agent approach in the development of applications in the 

field of supervision and control. Based on the proposed architecture was developed a system 

prototype to supervise oil well drilling operations. In this prototype, an ontology was defined 

to describe knowledge of oil well drilling domain, in order to represent operations, 

abnormalities and agents. This prototype was tested using a real data set, with the tests was 

possible to validate some aspects of the proposed architecture. 

 

Keywords:  Multi-agent System. Intelligent Systems. Ontology. 

 

 

 
  



 

 

 

 

LISTA DE FIGURAS 

 

FIGURA 1 – REPRESENTAÇÃO DE UM AGENTE INTERAGINDO COM O AMBIENTE. ...................................................................... 18 

FIGURA 2 – MODELO DE UM AGENTE REATIVO SIMPLES. .................................................................................................... 20 

FIGURA 3 – ALGORITMO QUE REPRESENTA O PROCESSO DE DELIBERAÇÃO DE UM AGENTE BDI. ................................................. 23 

FIGURA 4 – EXEMPLO DA ESTRUTURA DE UMA MENSAGEM FIPA-ACL. ................................................................................ 25 

FIGURA 5 – EXEMPLO DE UM PROTOCOLO DE INTERAÇÃO FIPA PARA UMA AÇÃO DE REQUISIÇÃO. ............................................. 26 

FIGURA 6 – MODELO DE REFERÊNCIA PLATAFORMAS DE AGENTES. ....................................................................................... 30 

FIGURA 7 – ESQUEMA DE SUPERVISÃO E CONTROLE DE PROCESSOS. ..................................................................................... 32 

FIGURA 8 – MODELO HIERÁRQUICO DA AUTOMAÇÃO DOS PROCESSOS INDUSTRIAIS. ................................................................ 34 

FIGURA 9 – FORMAS PARA A INTEGRAÇÃO DE COMPONENTES EXTERNOS. .............................................................................. 40 

FIGURA 10 – VISÃO GERAL DA ARQUITETURA PROPOSTA. ................................................................................................... 57 

FIGURA 11 – ESTRUTURA DA CAMADA DE APRESENTAÇÃO. ................................................................................................ 59 

FIGURA 12 – ESTRUTURA DA CAMADA SISTEMA MULTIAGENTE. .......................................................................................... 61 

FIGURA 13 – ESTRUTURA DA CAMADA DE DADOS E SERVIÇOS. ............................................................................................ 63 

FIGURA 14 – DIAGRAMA DE OBJETIVO DO PAPEL GERENCIADOR DE RECURSO. ....................................................................... 66 

FIGURA 15 – DIAGRAMA DE OBJETIVO DO PAPEL MONITOR. .............................................................................................. 68 

FIGURA 16 – DIAGRAMA DE OBJETIVO DO PAPEL SUPERVISOR. ........................................................................................... 71 

FIGURA 17 – DIAGRAMA DE OBJETIVO DO PAPEL GERENCIADOR DE INTERFACE COM O USUÁRIO. .............................................. 73 

FIGURA 18 – DIAGRAMA DE OBJETIVO DO PAPEL CONTROLADOR. ....................................................................................... 76 

FIGURA 19 – DIAGRAMA DE OBJETIVO DO PAPEL GERENCIADOR DE CONHECIMENTO. ............................................................. 77 

FIGURA 20 – DIAGRAMA DE OBJETIVOS DO PAPEL FACILITADOR. ......................................................................................... 79 

FIGURA 21 – RELACIONAMENTOS ENTRE OS PAPÉIS........................................................................................................... 81 

FIGURA 22 – ORGANIZAÇÃO SOCIAL DO SMA. ................................................................................................................ 82 

FIGURA 23 – DIAGRAMA DE SEQUÊNCIA – INICIALIZAÇÃO DO SMA. .................................................................................... 85 

FIGURA 24 – DIAGRAMA DE SEQUÊNCIA – INICIAR MONITORAMENTO. ................................................................................. 86 

FIGURA 25 – DIAGRAMA DE SEQUÊNCIA – MONITORAMENTO DOS PROCESSOS. ..................................................................... 87 

FIGURA 26 – DIAGRAMA DE SEQUÊNCIA – CONSOLIDAÇÃO E DIAGNÓSTICO. .......................................................................... 88 

FIGURA 27 – DIAGRAMA DE SEQUÊNCIA – CONTROLE DOS PROCESSOS. ................................................................................ 89 

FIGURA 28 – DIAGRAMA DE SEQUÊNCIA – ENTRADA DE UM USUÁRIO NO SISTEMA. ................................................................ 90 

FIGURA 29 – DIAGRAMA DE SEQUÊNCIA – PLANEJAMENTO E TOMADA DE DECISÃO. ................................................................ 91 

FIGURA 30 – DIAGRAMA DE SEQUÊNCIA – MUDANÇAS NAS ESTRATÉGIAS DE NEGÓCIO. ........................................................... 92 

FIGURA 31 – DIAGRAMA DE SEQUÊNCIA – GERENCIAR DADOS DA APLICAÇÃO. ....................................................................... 93 

FIGURA 32 – ESTRUTURA DA ONTOLOGIA DE PERFURAÇÃO. .............................................................................................. 106 

FIGURA 33 – DESCRIÇÃO DE UMA ANORMALIDADE UTILIZANDO A ONTOLOGIA. .................................................................... 108 

FIGURA 34 – DESCRIÇÃO DE UMA CAUSA E UM PARÂMETRO UTILIZANDO A ONTOLOGIA. ........................................................ 108 

FIGURA 35 – ESTRUTURA DA ONTOLOGIA DE AGENTES..................................................................................................... 109 

file:///C:/Users/Jonas/Google%20Drive/Estrutura/Dissertacao/Dissertacao%20Jonas%20v21%20%5breviews%5d.docx%23_Toc365374761
file:///C:/Users/Jonas/Google%20Drive/Estrutura/Dissertacao/Dissertacao%20Jonas%20v21%20%5breviews%5d.docx%23_Toc365374790
file:///C:/Users/Jonas/Google%20Drive/Estrutura/Dissertacao/Dissertacao%20Jonas%20v21%20%5breviews%5d.docx%23_Toc365374791


 

 

 

 

FIGURA 36 – DESCRIÇÃO DE UM AGENTE UTILIZANDO AS ONTOLOGIAS. .............................................................................. 111 

FIGURA 37 – EXEMPLO DO CONTEÚDO DE UMA MENSAGEM DESCRITO UTILIZANDO OS CONCEITOS DAS ONTOLOGIAS. .................. 113 

FIGURA 38 – EXEMPLO DA ESTRUTURA DE UMA MENSAGEM FIPA-ACL E CONTEÚDO DESCRITO PELAS ONTOLOGIAS. .................. 114 

FIGURA 39 – INTERFACE DE MONITORAMENTO DOS PARÂMETROS DE PERFURAÇÃO. .............................................................. 119 

FIGURA 40 – INTERFACE DE GERENCIAMENTO DOS AGENTES DA APLICAÇÃO. ........................................................................ 120 

FIGURA 41 – INTERFACE DE GERENCIAMENTO DAS ANORMALIDADES. ................................................................................. 121 

FIGURA 42 – REPRESENTAÇÃO GRÁFICA DOS PARÂMETROS MONITORADOS. ........................................................................ 122 

FIGURA 43 – APRESENTAÇÃO DAS TENDÊNCIAS DOS PARÂMETROS MONITORADOS E ETAPA REALIZADA. .................................... 122 

FIGURA 44 – APRESENTAÇÃO DOS DIAGNÓSTICOS DAS ANORMALIDADES............................................................................. 123 

FIGURA 45 – APRESENTAÇÃO DAS DESCRIÇÕES DOS AGENTES. .......................................................................................... 124 

FIGURA 46 – APRESENTAÇÃO DAS DESCRIÇÕES DAS ANORMALIDADES. ................................................................................ 124 

FIGURA 47 – RESULTADO DOS METODOS DE ANÁLISE. ..................................................................................................... 125 

 

  

file:///C:/Users/Jonas/Google%20Drive/Estrutura/Dissertacao/Dissertacao%20Jonas%20v21%20%5breviews%5d.docx%23_Toc365374793
file:///C:/Users/Jonas/Google%20Drive/Estrutura/Dissertacao/Dissertacao%20Jonas%20v21%20%5breviews%5d.docx%23_Toc365374794
file:///C:/Users/Jonas/Google%20Drive/Estrutura/Dissertacao/Dissertacao%20Jonas%20v21%20%5breviews%5d.docx%23_Toc365374795


 

 

 

 

LISTA DE TABELAS 

 

 

TABELA 1 – SÍNTESE DOS PAPEIS DEFINIDOS E A RELAÇÃO DE AGENTES. ................................................................................. 53 

TABELA 2 – CONJUNTO DE REGRAS PARA A CLASSIFICAÇÃO DAS ETAPAS DA PERFURAÇÃO. ........................................................ 99 

TABELA 3 – DIAGRAMA CAUSA-EFEITO PARA A DIFICULDADE DE AVANÇO. ........................................................................... 101 

TABELA 4 – LISTA DAS CLASSES DEFINIDAS NA ONTOLOGIA DE PERFURAÇÃO. ........................................................................ 106 

TABELA 5 – LISTA DAS RELAÇÕES ENTRE AS CLASSES DA ONTOLOGIA DE PERFURAÇÃO. ............................................................ 107 

TABELA 6 – LISTA DAS CLASSES DEFINIDAS NA ONTOLOGIA DE AGENTES. .............................................................................. 110 

TABELA 7 – LISTA DAS RELAÇÕES ENTRE AS CLASSES DA ONTOLOGIA DE AGENTES. ................................................................. 111 

TABELA 8 – RELAÇÃO ENTRE OS PAPÉIS DEFINIDOS E OS AGENTES PRESENTES NOS TRABALHOS ANALISADOS. .............................. 136 

TABELA 9 – ESPECIFICAÇÃO DETALHADA DO PAPEL GERENCIADOR DE RECURSO. ................................................................... 137 

TABELA 10 – ESPECIFICAÇÃO DETALHADA DO PAPEL MONITOR. ........................................................................................ 140 

TABELA 11 – ESPECIFICAÇÃO DETALHADA DO PAPEL GERENCIADOR DE INTERFACE COM O USUÁRIO. ........................................ 143 

TABELA 12 – ESPECIFICAÇÃO DETALHADA DO PAPEL SUPERVISOR. ..................................................................................... 148 

TABELA 13 – ESPECIFICAÇÃO DETALHADA DO PAPEL CONTROLADOR................................................................................... 152 

TABELA 14 – ESPECIFICAÇÃO DETALHADA DO PAPEL GERENCIADOR DE CONHECIMENTO. ....................................................... 154 

TABELA 15 – ESPECIFICAÇÃO DETALHADA DO PAPEL FACILITADOR. ..................................................................................... 156 

 

  



 

 

 

 

SUMÁRIO 

1 INTRODUÇÃO ...............................................................................................................................12 

1.1 MOTIVAÇÃO ................................................................................................................................. 13 

1.2 OBJETIVOS .................................................................................................................................... 14 

1.3 ORGANIZAÇÃO DO TRABALHO ........................................................................................................... 15 

2 ASPECTOS CONCEITUAIS ...............................................................................................................16 

2.1 SISTEMAS MULTIAGENTES ............................................................................................................... 16 

2.1.1 Agentes de software ............................................................................................................ 17 

2.1.2 Arquitetura interna dos Agentes .......................................................................................... 20 

2.1.3 Arquitetura BDI .................................................................................................................... 22 

2.1.4 Sistemas Multiagentes ......................................................................................................... 23 

2.1.5 Interação entre agentes ....................................................................................................... 24 

2.1.6 Desenvolvimento de SMA ..................................................................................................... 27 

2.1.6.1 Metodologias orientadas a agente ...............................................................................................27 

2.1.6.2 Frameworks e plataformas de agentes .........................................................................................28 

2.2 SUPERVISÃO E CONTROLE DE PROCESSOS ............................................................................................ 31 

2.2.1 Ambientes industriais ........................................................................................................... 32 

2.2.2 Automação dos processos industriais .................................................................................. 33 

2.2.3 Sistemas para a supervisão e controle de processos ........................................................... 34 

2.3 CONSIDERAÇÕES E DISCUSSÕES ......................................................................................................... 36 

3 TRABALHOS RELACIONADOS ........................................................................................................37 

3.1 ABORDAGEM DE SISTEMAS MULTIAGENTES PARA A SUPERVISÃO E CONTROLE DE PROCESSOS ......................... 37 

3.2 INTEGRAÇÃO DE COMPONENTES E SISTEMAS ........................................................................................ 38 

3.2.1 Implementação das interfaces dos componentes ................................................................ 39 

3.2.2 Utilização de serviços Web ................................................................................................... 43 

3.3 MONITORAMENTO E ANÁLISE DE DADOS ............................................................................................. 44 

3.4 COORDENAÇÃO, PLANEJAMENTO E CONTROLE ..................................................................................... 46 

3.5 INTERFACE COM O USUÁRIO ............................................................................................................. 48 

3.6 INTERAÇÃO ENTRE OS AGENTES ......................................................................................................... 49 

3.7 ORGANIZAÇÃO DOS AGENTES ........................................................................................................... 50 

3.8 SÍNTESE DOS TRABALHOS ESTUDADOS ................................................................................................ 51 

3.9 CONSIDERAÇÕES E DISCUSSÕES ......................................................................................................... 54 

4 ARQUITETURA MULTIAGENTE PARA SUPERVISÃO E CONTROLE ...................................................56 

4.1 VISÃO GERAL DA ARQUITETURA DE REFERÊNCIA .................................................................................... 56 

4.2 CAMADA DE APRESENTAÇÃO ............................................................................................................ 58 



 

 

 

 

4.3 CAMADA SISTEMA MULTIAGENTE ..................................................................................................... 61 

4.4 CAMADA DE DADOS E SERVIÇOS ....................................................................................................... 62 

4.5 ESPECIFICAÇÃO DOS AGENTES ........................................................................................................... 64 

4.5.1 Especificação dos papéis dos agentes .................................................................................. 64 

4.5.1.1 Papel Gerenciador de Recurso ......................................................................................................65 

4.5.1.2 Papel Monitor ...............................................................................................................................67 

4.5.1.3 Papel Supervisor ............................................................................................................................70 

4.5.1.4 Papel Gerenciador de Interface com o Usuário ............................................................................73 

4.5.1.5 Papel Controlador .........................................................................................................................75 

4.5.1.6 Papel Gerenciador de Conhecimento ...........................................................................................76 

4.5.1.7 Papel Facilitador ............................................................................................................................78 

4.5.2 Organização social do SMA. ................................................................................................. 80 

4.5.3 Interação entre os agentes .................................................................................................. 83 

4.6 CONSIDERAÇÕES E DISCUSSÕES ......................................................................................................... 94 

5 ESTUDO DE CASO ..........................................................................................................................96 

5.1 PERFURAÇÃO DE POÇOS DE PETRÓLEO ................................................................................................ 96 

5.1.1 Coleta de dados nas operações de perfuração .................................................................... 97 

5.1.2 Detecção automática de anormalidades ............................................................................. 97 

5.1.3 Método usado para a detecção da anormalidade ............................................................... 98 

5.1.4 Caracterização da anormalidade Dificuldade de avanço. .................................................. 100 

5.2 SISTEMA MULTIAGENTE PARA MONITORAR A OPERAÇÃO DE PERFURAÇÃO DE POÇOS DE PETRÓLEO ............... 102 

5.2.1 Implementação da camada de Dados e Serviços ............................................................... 103 

5.2.1.1 Repositório de dados ..................................................................................................................104 

5.2.1.2 Sistema de aquisição de dados – Mud-logging ...........................................................................104 

5.2.1.3 Repositório semântico ................................................................................................................104 

5.2.2 Implementação da camada Sistema Multiagente ............................................................. 114 

5.2.2.1 Agente Gerenciador de Recurso .................................................................................................115 

5.2.2.2 Agente Monitor ...........................................................................................................................115 

5.2.2.3 Agente Supervisor .......................................................................................................................116 

5.2.2.4 Agente Gerenciador de Conhecimento .......................................................................................116 

5.2.2.5 Agente Gerenciador de Interface com o Usuário ........................................................................117 

5.2.2.6 Agente Facilitador .......................................................................................................................117 

5.2.3 Implementação da camada de Apresentação .................................................................... 118 

5.3 TESTE DO PROTÓTIPO ................................................................................................................... 120 

5.4 CONSIDERAÇÕES E DISCUSSÕES ....................................................................................................... 126 

6 CONSIDERAÇÕES FINAIS E TRABALHOS FUTUROS ....................................................................... 127 

6.1 PRINCIPAIS CONTRIBUIÇÕES ........................................................................................................... 128 

6.2 TRABALHOS FUTUROS ................................................................................................................... 129 



 

 

 

 

REFERÊNCIAS BIBLIOGRAFICAS .......................................................................................................... 130 

APÊNDICE A – RELAÇÃO DOS TRABALHOS ANALISADOS .................................................................... 135 

APÊNDICE B – ESPECIFICAÇÃO DETALHADA DA ESTRUTURA INTERNA DOS PAPÉIS ............................ 136 

APÊNDICE C – DESCRIÇÃO DOS OBJETIVOS DOS AGENTES IMPLEMETADOS ....................................... 158 

APÊNDICE D – EXEMPLO DE UM ARQUIVO ADF ................................................................................. 163 

 

  



12 

 

 

 

1 INTRODUÇÃO 

 

Nas ultimas décadas, especialmente devido ao desenvolvimento das novas tecnologias, 

aumentou-se a utilização dos controladores e dos sensores pelas indústrias principalmente nos 

setores de produção, gerando ambientes complexos caracterizados pelo grande número de 

componentes heterogêneos e a alta conectividade entre eles. Esses componentes 

correspondem a sensores, controladores e outros sistemas instalados nos ambientes 

industriais, e são responsáveis pela medição de parâmetros, controle de equipamentos, 

máquinas e o gerenciamento dos processos envolvidos. Nesses ambientes é gerado um grande 

volume de dados em diversos formatos, provenientes dos vários componentes, gerando 

demanda pela integração e análise desses dados a fim de melhorar o gerenciamento dos 

processos e o controle das operações. O grande número de componentes heterogêneos e a alta 

comunicação entre eles, assim como a grande quantidade de informações produzidas formam 

ambientes complexos, onde as pessoas não são mais capazes de administrar, supervisionar e 

controlar todas as atividades envolvidas (BRAZIER et al., 2009). 

A fim de automatizar o gerenciamento, a execução dos diversos processos e tarefas 

nesses ambientes, há a necessidade de abordagens que suportem o projeto e desenvolvimento 

de sistemas computacionais para a integração e o controle dos vários componentes, e também 

forneçam ferramentas para auxiliar os profissionais no monitoramento dos processos e nas 

tomadas de decisão. Nesse sentido, a abordagem de Sistemas Multiagentes (SMA) é uma 

tecnologia que vem sendo utilizada, não só nas pesquisas acadêmicas, mas em alguns projetos 

industriais (PECHOU?EK; MARÍK, 2008). Os SMA vêm sendo apontados como uma das 

mais promissoras técnicas para o desenvolvimento de sistemas complexos. Essa abordagem 

oferece um caminho promissor e inovador para entender, desenvolver, gerenciar e manter 

sistemas computacionais distribuídos, em larga escala, dinâmicos, abertos e heterogêneos 

(JENNINGS; WOOLDRIDGE, 1998). 

Sendo assim, neste trabalho é apresentada uma arquitetura de software proposta para 

servir como modelo de referência para o desenvolvimento de sistemas de supervisão e 

controle de processos. Essa arquitetura é baseada na abordagem de SMA, onde foram 

especificados um conjunto de agentes responsáveis pela integração de componentes 



13 

 

 

 

heterogêneos e pelo monitoramento e análise de dados a fim de gerenciar e automatizar as 

atividades de supervisão e controle de processos. 

A arquitetura foi definida e especificada a partir do estudo e da análise de um conjunto 

de trabalhos correlatos, onde foram levantados os principais requisitos e os aspectos 

relacionados à utilização da abordagem de SMA para o projeto e desenvolvimento de sistemas 

de supervisão e controle. Para a especificação dos agentes que compõem a arquitetura foi 

utilizado a metodologia de desenvolvimento de software orientado a agentes Tropos 

(BRESCIANI et al., 2004). 

Ao final desse trabalho é apresentado um protótipo que foi desenvolvido seguindo a 

arquitetura de referência proposta. Esse protótipo consiste em uma aplicação Web voltada 

para monitorar as operações de perfuração de poços de petróleo, a fim de identificar a 

ocorrência de anormalidades e determinar as causas dessa ocorrência. O desenvolvimento 

desse protótipo teve como objetivo principal ilustrar a utilização da arquitetura proposta e 

seus componentes. Nesse protótipo os agentes foram desenvolvidos e testados utilizando a 

plataforma de agentes Jadex. Para os testes do sistema foi utilizado um conjunto de dados 

reais de poços já perfurados. 

 

1.1 Motivação 

 

No setor industrial há sistemas computacionais que são utilizados para detectar e 

monitorar possíveis problemas que podem prejudicar a qualidade dos processos industriais e a 

segurança das operações. Esses sistemas auxiliam, por exemplo, através de alarmes a 

identificar e prevenir possíveis problemas que podem causar prejuízos e até mesmo danos 

ambientais. Com isso, contribuindo nas tomadas de decisão e completando a habilidade dos 

usuários na identificação de situações relevantes, para a prevenção e/ou solução de problemas. 

Sistemas dessa natureza vêm ganhando cada vez mais importância devido à necessidade 

de manipulação, armazenamento e também análise da grande quantidade de dados gerados 

pelos processos. Entretanto, em muitos casos esses sistemas precisam lidar com a 

complexidade envolvida nesses ambientes, caracterizada principalmente pela distribuição e 

quantidade de componentes heterogêneos. Por isso, a integração e automação dos processos e 



14 

 

 

 

dos componentes é um requisito essencial que deve estar presentes em sistemas dessa 

natureza. Outras características como a flexibilidade e a escalabilidade são importantes, pois 

esses ambientes costumam requerer mudanças constantes, através da remoção ou da 

agregação de novos recursos, como equipamentos e módulos de software (HOSSACK et al., 

2003). 

Para conseguir isso, esses sistemas precisam estar fundamentados sobre arquiteturas 

robustas e ao mesmo tempo flexíveis o bastante para suportar a evolução do sistema junto 

com o ambiente. Essas arquiteturas precisam suportar a integração e gerenciamento de 

grandes volumes de dados, assim como dispor de conhecimento e mecanismos para minimizar 

a necessidade de interação com os usuários, reduzindo a sobrecarga para a realização de 

algumas tarefas. 

A especificação e projeto dessas arquiteturas utilizando abordagens convencionais 

geralmente não são tarefas simples e exigem muita experiência e conhecimento dos 

desenvolvedores. Nesse sentido, a abordagem de SMA visa simplificar o projeto e 

desenvolvimento de sistemas complexos, estendendo as abordagens convencionais através da 

introdução de uma camada de abstração natural, caracterizada por componentes autônomos e 

interativos, denominados agentes (JENNINGS; BUSSMANN, 2003; BRAUBACH; 

POKAHR; LAMERSDORF, 2005; PECHOU?EK; MARÍK, 2008; WOOLDRIDGE, 1998; 

WOOLDRIDGE, 2002; PARUNAK, 2000). 

 

1.2 Objetivos 

 

O principal objetivo desse trabalho é especificar uma arquitetura de referência, 

utilizando a abordagem de SMA, para ser utilizada como um modelo para o desenvolvimento 

de sistemas de supervisão e controle de processo para diferentes domínios. 

Por meio de um levantamento bibliográfico serão identificadas a utilização da 

abordagem de SMA relacionados a supervisão e controle de processos industriais. Nesse 

estudo são identificados os requisitos e os aspectos utilizados como base para a definição e 

especificação dos agentes e de seus comportamentos, assim como a infraestrutura que 

fundamenta a arquitetura multiagente proposta. 



15 

 

 

 

Ao final, utilizando a arquitetura proposta é desenvolvido um protótipo de um sistema 

para a supervisão das operações durante a perfuração de poços de petróleo. Esse protótipo tem 

como objetivo apresentar como a arquitetura pode ser utilizada e como cada um dos seus 

componentes podem ser implementados para solucionar um problema em um domínio de 

aplicação. 

Com isso, esse trabalho busca dar uma visão completa sobre o projeto e 

desenvolvimento de sistemas utilizando a abordagem de SMA. 

 

1.3 Organização do trabalho 

 

No Capítulo 2 é apresentada uma visão geral dos conceitos envolvidos no 

desenvolvimento do trabalho, como agentes de software e sistemas de supervisão e controle. 

No Capítulo 3 é apresentado e discutido os resultados do estudo de um conjunto de trabalhos 

correlatos, onde foram identificados e analisados os aspectos relacionados a abordagem de 

SMA e sistemas de supervisão e controle. No Capítulo 4 é apresentado o projeto e a 

especificação da arquitetura multiagente proposta, dando ênfase aos agentes que compõem a 

arquitetura. No Capítulo 5 é apresentado o estudo de caso onde foi desenvolvido um protótipo 

de um sistema utilizando a arquitetura proposta. E finalmente, no Capítulo 6 são apresentadas 

as considerações finais, contribuições e trabalhos futuros. 

  



16 

 

 

 

2 ASPECTOS CONCEITUAIS 

 

Nesse capítulo é apresentada uma visão geral de alguns dos conceitos e tecnologias 

envolvidas no desenvolvimento desse trabalho. O principal conceito abordado são os agentes 

de software que, por simplicidade, no resto do texto são tratados apenas como agentes. Além 

disso, também são contextualizados os sistemas de supervisão e controle de processos, onde é 

dado ênfase à parte computacional. 

 

2.1 Sistemas Multiagentes 

 

A resolução de problemas complexos na computação tem requerido o desenvolvimento 

de soluções algorítmicas que utilizam as técnicas de distribuição de processos e a 

programação paralela, potencializando a utilização das novas arquiteturas de computadores. 

No contexto da Inteligência Artificial, a Inteligência Artificial Distribuída (IAD) foi proposta 

visando o desenvolvimento de soluções distribuídas para sistemas complexos. A IAD é 

dividida em duas disciplinas: Resolução Distribuída de Problemas (RDP) e Sistemas 

Multiagentes (SMA). A RDP consiste em solucionar um problema que pode ser decomposto 

em vários subproblemas, não inteiramente independentes, com um objetivo comum e que 

dividem e compartilham conhecimento. Além disso, a RDP dá ênfase à decomposição de 

tarefas para a síntese da solução. Os SMA foram propostos para a solução de problemas 

complexos, na qual vários componentes independentes, os agentes, com objetivos e interesses 

próprios, coordenam suas atividades e conhecimento. Essa disciplina dá ênfase ao 

gerenciamento da interação e do comportamento dos componentes (WEISS, 1999; STONE; 

VELOSO, 2000). 

A abordagem de SMA tem sido considerada como um novo paradigma para o 

desenvolvimento de software que proporciona um conjunto de abstrações apropriadas para a 

solução de problemas complexos e distribuídos (JENNINGS; BUSSMANN, 2003). Essa 

abordagem oferece uma forma promissora e inovadora de entender, gerenciar e usar sistemas 

computacionais e de informação distribuídos, em larga-escala, dinâmicos, abertos, e 

heterogêneos (WEISS, 1999). 



17 

 

 

 

O crescimento de ambientes com essas características contribuiu para o aumento da 

investigação e utilização dessa abordagem em diferentes domínios que variam desde 

aplicações comerciais (gerenciamento de informações, comércio eletrônico, gerência de 

processos de negócio, etc.), a aplicações industriais (otimização de processos de manufatura e 

produção industrial, controle de processos, controle de trafego aéreo, telecomunicações, etc.) 

(WEISS, 1999; JENNINGS; WOOLDRIDGE, 1998).  

 

2.1.1 Agentes de software 

 

Também chamados de agentes inteligentes ou agentes autônomos. Na literatura não 

existe uma definição consensual para o termo “Agente”, mas entre as diversas definições 

algumas se destacam por considerar características que são amplamente adotadas para definir 

um agente. Uma dessas definições é dada por Jennings (2000) e Wooldridge (2002): 

 “Um agente é um sistema de computador encapsulado que está situado em algum 

ambiente e que é capaz de agir de forma flexível e autônoma neste ambiente, a fim de 

alcançar seus objetivos de projeto”. 

Um sistema de computador encapsulado significa um componente de software (que é 

executado em um dispositivo computacional) com interfaces bem definidas (sensores e 

atuadores), que está situado em algum ambiente no qual, através de suas interfaces, é capaz de 

perceber as mudanças e estados do ambiente e também agir nesse ambiente para modificá-lo. 

Tem a capacidade de agir de forma flexível para a execução de uma tarefa, agindo 

reativamente as mudanças ocorridas no ambiente e também proativamente visando alcançar 

estados desejados ou otimizar medidas de satisfação. Tem autonomia para tomar decisões, de 

forma que possui controle sobre seus estados internos e comportamentos, independente da 

intervenção humana ou de outros sistemas. São projetados para cumprir um propósito 

específico determinado pelos seus objetivos. 

Na Figura 1 é apresentado como um agente pode ser representado de forma abstrata. 

Nessa representação o agente é dotado de sensores e atuadores, os quais são responsáveis por 

perceber os estados e realizar ações no ambiente, respectivamente. O agente também possui 

um mecanismo de raciocínio ou deliberação, que é responsável por determinar quais ações o 



18 

 

 

 

agente deve executar de acordo com os estados percebidos. Esse mecanismo funciona baseado 

nas percepções do agente e em seus estados internos. Ele define o comportamento do agente e 

varia de acordo com o tipo de agente e também sua finalidade. 

 

Figura 1 – Representação de um agente interagindo com o ambiente. 

Fonte: Adaptado de Russel e Norvig (1995). 

 

Propriedades 

Os agentes são caracterizados por um conjunto de propriedades que determinam seus 

comportamentos dentro do ambiente. A seguir as principais propriedades que um agente deve 

apresentar (WOOLDRIDGE; JENNINGS, 1995; WOOLDRIDGE, 2002): 

? Autonomia – os agentes operam sem a intervenção direta de humanos, outros agentes 

ou sistemas e possuem algum tipo de controle sobre as suas ações e estados internos; 

? Habilidade social – capacidade de interagir com outros agentes (e com humanos) para 

alcançar seus objetivos, utilizando para isso uma linguagem e protocolos de 

comunicação, o que permite aos agentes negociarem e cooperarem ao invés de 

simplesmente trocarem informações; 

? Reatividade – capacidade de observar o ambiente em que se encontra e responder de 

forma oportuna às mudanças que ocorrem nele; 

? Pró-atividade – capacidade de exibir comportamento direcionado a objetivos, tomando 

iniciativa para satisfazer seus objetivos, ao invés de simplesmente agir em resposta ao 

ambiente. 

 

 



19 

 

 

 

Ambiente 

O ambiente representa basicamente tudo externo ao agente. Para que um agente 

realmente esteja situado em um ambiente, pelo menos parte desse ambiente tem que ser 

observável e/ou modificável pelo agente (MCARTHUR et al., 2007). Os ambientes podem ser 

de dois tipos: ambientes reais ou ambientes virtuais. 

Um ambiente real é representado por um meio físico (por exemplo, um robô controlado 

por um agente, ou um sistema de controle de tráfego de veículos) que é observado por 

sensores e modificado por controladores e atuadores. Por exemplo, um robô possui câmeras 

como sensores para perceber o ambiente em que está e pode modificar esse ambiente se 

movendo por ele ou alterando objetos nesse ambiente; já em um sistema de controle de 

tráfego os sensores podem ser câmeras ou outros sensores responsáveis por identificar a 

quantidade de veículos e dessa forma percebem o estado do ambiente, e seus atuadores podem 

ser dispositivos controladores que modificam a sinalização. 

Os ambientes virtuais podem ser representados por um ambiente computacional. Por 

exemplo, sistemas para a simulação do comportamento de insetos, onde um conjunto de 

agentes representa uma comunidade de insetos que vivem em um ambiente virtual. Esses 

agentes observam e modificam esse ambiente através da execução de procedimentos e troca 

de mensagens. Nesses ambientes as interfaces de comunicação dos agentes representam seus 

sensores e atuadores. 

Os ambientes também possuem algumas propriedades como (RUSSELL; NORVIG, 

1995): acessível ou inacessível; determinístico ou não determinístico; estático ou dinâmico; 

discreto ou contínuo. Os ambientes mais complexos, como os ambientes reais e também a 

internet, costumam ser dinâmicos, não determinísticos e também contínuos, de forma que o 

estado desses ambientes pode mudar a qualquer momento, podendo haver situações 

desconhecidas, e também a execução de uma mesma ação no ambiente pode apresentar 

resultados diferentes.  

No desenvolvimento de agentes é fundamental determinar o tipo e as propriedades do 

ambiente em que o agente vai atuar. Essas características devem ser levadas em consideração 

para determinar como será feita a representação do ambiente, assim como a forma como os 

agentes vão perceber e agir nesse ambiente. 



20 

 

 

 

2.1.2 Arquitetura interna dos Agentes 

 

Segundo Wooldridge e Jennings (1995) os agentes podem ser classificados de acordo 

com três classes de arquiteturas: deliberativa – baseada no paradigma da IA simbólica que vê 

um agente como um tipo de sistema baseado em conhecimento; reativa – ao contrário da 

anterior, não inclui uma representação centrada em símbolos para descrever o ambiente e os 

estados do agente, e também não conta com raciocínios complexos baseados em símbolos; e 

híbrida – que busca juntar essas duas abordagens. Assim, essas arquiteturas definem como é 

representada a estrutura interna dos agentes, as quais determinam a forma como o agente 

percebe e atua em um ambiente. 

Nas arquiteturas reativas o comportamento dos agentes é caracterizado por um 

mecanismo simples que faz o mapeamento direto entre as percepções e as ações do agente. 

Esse comportamento, geralmente, é baseado em modelos biológicos como o comportamento 

de formigas e peixes. Esses mecanismos consistem na aplicação de regras do tipo condição-

ação ou se-então (RUSSELL; NORVIG, 1995). Assim, para cada condição ou situação 

representada por um estado do ambiente percebido, existe uma ação correspondente. Dessa 

forma, o mecanismo de tomada de decisão desses agentes é bem simples: ao perceber uma 

mudança no ambiente o agente verifica (por exemplo, em uma tabela interna) se existe uma 

ação a ser tomada para essa situação e, se houver, executa essa ação. Na Figura 2 é 

apresentado um esquema com o mecanismo de funcionamento desse agente.   

 

Figura 2 – Modelo de um agente reativo simples. 

Fonte: Traduzido de Russell e Norvig (1995). 

 



21 

 

 

 

Já nas arquiteturas deliberativas, também conhecidas como simbólicas ou cognitivas, os 

agentes mantém uma representação simbólica e explicita de seu ambiente e de suas ações, as 

quais especificam as circunstâncias em que devem ser executadas e os efeitos 

correspondentes. Nessa arquitetura os agentes apresentam um modelo mais complexo para 

tomada de decisão que busca imitar aspectos do comportamento humano (como crenças, 

desejos, intenções e emoções). Nesse modelo, baseado nas informações do ambiente e suas 

intenções os agentes são capazes de escolher e traçar planos de ações para atingir um objetivo 

pretendido. Um modelo bastante conhecido usado para desenvolver agentes baseados em 

arquiteturas deliberativas é o modelo BDI (RAO; GEORGEFF, 1995), explicado com mais 

detalhes a seguir.  

A principal diferença entre os agentes reativos e os cognitivos está relacionada ao 

processo de tomada de decisão, ou seja, a forma como os agentes determinam suas ações 

também conhecido como mecanismo de deliberação. Os agentes reativos trabalham com 

tempos de resposta/reação rápidos, por isso apresentam mecanismos de tomada de decisão 

simples. Já os agentes cognitivos possuem uma representação mais detalhada do ambiente, o 

que permite a esses agentes executar procedimentos de planejamento baseado no modelo do 

mundo e em seus objetivos, e assim escolher qual é a ação mais conveniente na situação que 

se encontra e que poderá proporcionar maiores benefícios ao ser executada. 

Os agentes cognitivos, além das características apresentadas na seção anterior, também 

podem apresentar características como: 

? Racionalidade – capacidade de agir sempre em busca dos próprios objetivos. 

Capacidade de escolher as ações mais convenientes que melhor satisfazem seu 

objetivo ou que proporcionem mais benefícios, em determinadas situações; 

? Aprendizagem – capacidade de utilizar suas experiências prévias para aprender e 

adaptar-se a mudanças no ambiente; 

? Adaptabilidade – capacidade de se adaptar a situações novas, para as quais não foi 

fornecido todo o conhecimento necessário com antecedência. 

 

 



22 

 

 

 

2.1.3 Arquitetura BDI 

 

A arquitetura Belief-Desire-Intention (BDI) (RAO; GEORGEFF, 1995) é um modelo 

arquitetural para o desenvolvimento de agentes racionais. Esse modelo foi introduzido 

inicialmente como um modelo filosófico para a modelagem do raciocínio humano, mas depois 

estendido e transformado em um modelo de execução para agentes de software. Nesse modelo 

o estado interno de um agente é descrito através de um conjunto de “estados mentais” 

correspondentes a: crenças (Beliefs), desejos (Desires) e intenções (Intentions). 

A seguir é descrito cada uma dessas estruturas que constituem a arquitetura BDI 

(BRAUBACH; POKAHR; LAMERSDORF, 2005): 

? Crenças: representam o estado informacional do agente, em outras palavras, suas 

crenças sobre o mundo (incluindo a si próprio e aos outros agentes, o seu 

conhecimento sobre o ambiente). Isto introduz uma visão de mundo pessoal dentro do 

agente podendo influenciar na maneira como o agente percebe e age sobre o mundo; 

? Desejos: representam o estado motivacional do agente, definidos por objetivos ou 

situações que o agente gostaria de satisfazer ou alcançar. São eles que determinam o 

curso de suas ações; 

? Intenções: representam o estado deliberativo do agente – o que o agente tenha optado 

por fazer. As intenções são uma forma que os agentes têm para alcançar seus desejos. 

Geralmente, representadas por um conjunto de planos que definem as ações que o 

agente pode executar. 

 

Alguns frameworks e ferramentas suportam o desenvolvimento de agentes de acordo 

com o modelo BDI. Nessas ferramentas, o modelo BDI é utilizado como um mecanismo de 

raciocínio (deliberação) para os agentes, voltado principalmente para gerenciar a ocorrência 

de eventos e a escolha dos planos para tratar esses eventos. Esse mecanismo de deliberação é 

baseado no algoritmo apresentado na Figura 3, que representa a execução de um agente. 

Seguindo os passos desse algoritmo (Figura 3), quando o agente é inicializado (linha 

1) seus estados internos (ex. crenças, objetivos e planos) são carregados e em seguida o agente 

entra no laço de execução que basicamente consiste em decidir o que fazer de acordo com os 

eventos ocorridos (percepções) e também seus estados internos. Assim, (linha 3) a partir da 

lista de eventos (percepções) é determinado um conjunto de objetivos relacionados aos 

eventos, (linha 4) baseado no conhecimento do agente, é decidido quais objetivos devem ser 



23 

 

 

 

ativados, (linha 5) esses objetivos são convertidos nos planos e ações, executadas (linha 6) 

para alcançar os objetivos escolhidos. Essas ações podem modificar o ambiente, gerando 

novos eventos que são capturados (linha 7), e ao final (linhas 8 e 9) a estrutura de intenções 

(ações ou planos) e desejos (objetivos) é atualizada a partir dos objetivos satisfeitos ou que 

não podem ser alcançados.  

 

 

Figura 3 – Algoritmo que representa o processo de deliberação de um agente BDI. 

Fonte: Adaptado de Rao e Georgeff (1995). 

 

2.1.4 Sistemas Multiagentes 

 

Em alguns sistemas um único agente é suficiente para a realização de algumas tarefas, 

mas na maioria das vezes são necessários mais de um agente, dessa forma caracterizando um 

SMA. Um SMA pode ser definido como (WOOLDRIDGE, 2002): um conjunto de agentes, 

que interagem uns com os outros para alcançar seus objetivos. Cada agente possui seus 

próprios objetivos e motivações e podem agir em favor de diferentes usuários ou realizar 

tarefas para atender as finalidades de uma aplicação. No caso mais geral, os agentes vão agir 

em favor de usuários com diferentes objetivos e motivações. Para terem sucesso nas 

interações, eles vão requerer habilidades de cooperação, coordenação e negociação. 

Nos SMA os agentes exibem um comportamento autônomo e ao mesmo tempo 

interagem ou trabalham em conjunto de forma a desempenhar determinadas tarefas ou 

satisfazer um conjunto de objetivos. Nos SMA os agentes podem apresentar as seguintes 

características (WOOLDRIDGE; JENNINGS, 1995): 



24 

 

 

 

? Cooperação – capacidade dos agentes de trabalharem juntos para alcançarem objetivos 

comuns, pelo fato de que um único agente não conseguiria alcançá-lo sozinho ou 

porque junto o resultado seria melhor; 

? Coordenação – capacidade de gerir as interdependências entre as atividades, por 

exemplo, para a utilização de recursos não compartilháveis; 

? Negociação – capacidade de chegar a acordos sobre assuntos de interesse comum, por 

exemplo, por meio de uma oferta e uma contra oferta das partes envolvidas. 

 

2.1.5 Interação entre agentes 

 

Em um SMA os agentes interagem através de mensagens para obter e trocar as 

informações e os conhecimentos necessários para executar suas tarefas. Essa capacidade de 

comunicação que os agentes apresentam é essencial para garantir a interação entre eles. Assim 

como, os sensores e atuadores que representam as interfaces físicas dos agentes, usadas para 

perceber e agir no ambiente, a comunicação representa suas interfaces comunicativas, onde os 

sensores são responsáveis pela recepção e os atuadores pelo envio das mensagens. 

Linguagem de comunicação de agentes 

Para a representação das mensagens, várias linguagens de comunicação de agentes 

foram propostas (WEISS, 2001), sendo que duas dessas, bastante conhecidas e utilizadas, são 

KQML
1
 (Knowledge Query and Manipulation Language) e FIPA-ACL

2
 (FIPA - Agent 

Communication Language). Essas linguagens utilizam a teoria dos atos de fala para dar 

semântica às mensagens. Baseado nessa teoria são definidas performativas ou atos de 

comunicação usados para expressar nas mensagens as intenções e ações dos agentes 

(WOOLDRIDGE, 1998; WOOLDRIDGE, 2002).  

As performativas são utilizadas pelos agentes para representar ou interpretar suas 

vontades ou intenções, de forma que ao receber uma mensagem um agente é capaz de 

compreender a intenção do agente que enviou essa mensagem e com isso decidir o que fazer. 

Por exemplo, alguns dos atos de comunicação especificados pela linguagem FIPA-ACL são: 

                                                 

1
 http://www.csee.umbc.edu/kqml/ 

2
 http://fipa.org/specs/fipa00061/SC00061G.html 



25 

 

 

 

Inform – usado para indicar que o agente está comunicando uma informação ou um fato; 

Request – usado para indicar que o agente está requisitando um serviço ou informação; Agree 

– indica que o agente concorda com um pedido de outro agente; Not Understood – usado para 

indicar que o agente não entendeu uma mensagem recebida. 

Além da performativa, uma linguagem de comunicação de agentes também define a 

estrutura das mensagens. Por exemplo, na Figura 4 é apresentada a estrutura de uma 

mensagem na linguagem FIPA-ACL. Esta é definida por pares de parâmetros formados por 

uma palavra-chave e um valor. Nesse exemplo, a performativa é representada no cabeçalho da 

mensagem (request), seguida pelos outros parâmetros. A quantidade de parâmetros que 

uma mensagem pode apresentar varia de acordo com a situação, sendo que os mais comuns 

são: o sender – identifica quem enviou a mensagem, o receiver – identifica para quem é a 

mensagem, e o content – armazena o conteúdo da mensagem. 

 

Outros parâmetros importantes que ajudam na interoperabilidade entre os agentes, de 

forma que os mesmos sejam capazes de entender o conteúdo das mensagens uns dos outros 

são: o language – indica a linguagem em que o conteúdo da mensagem está expresso, e o 

ontology – indica a ontologia que dá significado aos símbolos expressos no conteúdo da 

mensagem. Muitas vezes esses parâmetros são omitidos, assumindo-se que os agentes já 

conheçam a linguagem e a ontologia adotadas pela aplicação. 

Em um SMA, os agentes precisam compartilhar um vocabulário comum que descreve o 

domínio da aplicação. Por exemplo, em um ambiente de comércio eletrônico, os agentes 

precisam concordar com termos como “produto”, “preço”, “compra”, “venda”, etc. Nesse 

(request 

:sender (agent-identifier :name joao@mac21) 

:receiver (agent-identifier :name bookseller@storedomain) 

:language fipa-sl 

:protocol fipa-request 

:ontology bookstore-ontology 

:content 

   “((action (agent-identifier :name bookseller@storedomain) 

     (buy-book :book-code 1587) 

   ))” 

) 

Figura 4 – Exemplo da estrutura de uma mensagem FIPA-ACL. 



26 

 

 

 

sentido, especialmente em aplicações grandes e/ou abertas, é necessário especificar uma 

ontologia comum, que apresente uma descrição formal e explicita dos conceitos do domínio e 

as relações entre eles (WEISS, 2001). Essa ontologia serve como base para a troca e 

compartilhamento de conhecimento entre os agentes (SINGH; HUHNS, 2005). 

Protocolos de interação 

Enquanto a linguagem de comunicação de agentes especifica as mensagens dos agentes, 

os protolocos de interação especificam os comportamentos entre dois ou mais agentes em um 

dado cenário. Esses cenários representam a comunicação entre os agentes para a realização de 

uma ação, por exemplo, para a requisição de um serviço ou consulta de informações, como 

também estratégias de negociação e cooperação. Assim, um protocolo de interação define a 

sequência de mensagens trocadas entre um agente que inicializa a ação e as respostas 

esperadas dos outros agentes participantes. 

Na Figura 5 é apresentado um exemplo de um protocolo de interação, onde é 

especificado o cenário de uma requisição. Esse protocolo faz parte das especificações da 

FIPA
3
 e por isso é baseado nas mensagens da FIPA-ACL, discutidas anteriormente. 

 

Figura 5 – Exemplo de um protocolo de interação FIPA para uma ação de requisição. 

Fonte: FIPA Request Interaction Protocol Specification
4
. 

                                                 

3
 http://fipa.org/ 

4
 http://fipa.org/specs/fipa00026/SC00026H.html 



27 

 

 

 

2.1.6 Desenvolvimento de SMA 

 

A adoção da abordagem de SMA para a resolução de problemas tem sido um assunto 

muito explorado nos últimos anos. Isso tem acontecido pelo fato da abordagem de SMA 

possuir algumas características que viabilizam a resolução de problemas de uma forma 

diferente da tradicional. O projeto e o desenvolvimento de SMAs permite a abstração da 

solução de um problema utilizando conceitos como: agentes, comportamentos, objetivos, 

ambiente, etc. As tecnologias e metodologias tradicionais não foram projetadas para dar 

suporte a esses conceitos (JENNINGS, 2000; WEISS, 2001).  

Nesse sentido, a engenharia de software orientada a agentes tem como propósito 

principal o desenvolvimento de metodologias e ferramentas para dar suporte ao 

desenvolvimento e manutenção de software baseado em agentes. Essas ferramentas e 

metodologias fornecem um framework conceitual que suporta as principais abstrações do 

paradigma de agente, apoiando os desenvolvedores na elaboração, especificação e gestão do 

ciclo de vida do software. 

 

2.1.6.1 Metodologias orientadas a agente 

As metodologias de software orientadas a agentes são utilizadas para auxiliar os 

desenvolvedores a projetar e desenvolver SMAs através de um processo de engenharia de 

software. Essas metodologias estendem as metodologias tradicionais, oferecendo uma 

linguagem de modelagem, notações, métodos e ferramentas para suportar as fases de 

desenvolvimento de software orientado a agentes, como a análise de requisitos, projeto, 

desenvolvimento e implantação. Nesse contexto, várias metodologias têm sido desenvolvidas, 

como por exemplo, Gaia, MaSE, Prometheus, Tropos, Message, Passi e Adelfe. No entanto, 

ainda não existe uma padronizada e amplamente adotada pela comunidade (HENDERSON-

SELLERS; GIORGINI, 2005; BERGENTI; GLEIZES; ZAMBONELLI, 2008). 

 Metodologia Tropos 

A metodologia Tropos (CASTRO; KOLP; MYLOPOULOS, 2002; BRESCIANI et al., 

2004) oferece um framework que engloba todas as fases de desenvolvimento de software, dos 

requisitos iniciais até a implementação. Nesse trabalho ela foi utilizada para a modelagem e 

especificação da arquitetura proposta. 



28 

 

 

 

Essa metodologia adota uma abordagem orientada a modelos, ou seja, orienta o 

engenheiro de software na construção de um modelo conceitual, que é refinado e 

progressivamente estendido, a partir de um modelo de Requisitos Iniciais para o projeto do 

sistema e, em seguida, para o código.  

A metodologia Tropos possui cinco fases de desenvolvimento (BRESCIANI et al., 

2004): (1) Requisitos Iniciais – onde é realizada uma análise para a compreensão do domínio 

do problema no qual o sistema será introduzido, para identificar as partes envolvidas e seus 

relacionamentos; (2) Requisitos Finais – o sistema é introduzido como um novo ator no 

modelo e sua interação com as partes envolvidas é especificada; (3) Projeto Arquitetural – 

define a arquitetura global do sistema em termos de subsistemas, representado pelos agentes e 

seus papéis dentro do SMA; (4) Projeto Detalhado – os agentes são especificados em função 

de seus papéis, que define suas capacidades e interações; e (5) Implementação – envolve a 

escolha da linguagem e plataforma de agentes e o desenvolvimento dos mesmos de acordo 

com a especificação do Projeto Detalhado. 

Para apoiar o desenvolvimento das fases da metodologia Tropos foi desenvolvida uma 

ferramenta de modelagem gráfica chamada TAOM4E
5
. Essa ferramenta auxilia os 

desenvolvedores na construção e na modelagem de um conjunto de diagramas. A ferramenta 

t2x tool
6
 está integrada ao TAOM4E e permite a geração automática do esqueleto do código 

dos agentes a partir dos diagramas produzidos no TAOM4E. O código gerado segue o modelo 

de agentes BDI, e é compatível com a plataforma de agentes Jadex, apresentada na próxima 

seção. Nesse trabalho, essas ferramentas foram utilizadas para a especificação dos agentes que 

compõem a arquitetura proposta e também para a implementação do protótipo desenvolvido. 

 

2.1.6.2 Frameworks e plataformas de agentes 

Nos últimos anos várias plataformas e frameworks baseados em agentes foram 

desenvolvidos (WEISS, 2001; BORDINI et al., 2006). O objetivo dessas ferramentas é 

simplificar o desenvolvimento de agentes, de forma que os desenvolvedores não precisem se 

preocupar com a estrutura básica para a execução dos agentes como, por exemplo, a 

infraestrutura de comunicação entre eles e também outras características definidas pela 

                                                 

5
 http://selab.fbk.eu/taom/ 

6
 http://selab.fbk.eu/morandini/home.html 



29 

 

 

 

abordagem de SMA. Geralmente, as plataformas de agentes oferecem toda a infraestrutura 

para o desenvolvimento e execução dos mesmos. 

Com o objetivo de garantir a interoperabilidade entre agentes heterogêneos, 

desenvolvidos em plataformas diferentes, muitos padrões e especificações para as tecnologias 

de agentes foram desenvolvidos. Nesse contexto, a FIPA (Foundation for Intelligent Physical 

Agents) é uma organização que define e mantém especificações de um conjunto de padrões 

desenvolvidos com a intenção de promover a interoperabilidade entre agentes heterogêneos. 

Os padrões da FIPA são amplamente aceitos pela comunidade e existem várias plataformas e 

frameworks compatíveis, como: FIPA-OS
7
, JADE

8
, Jason

9
 e Jadex

10
. 

Especificações FIPA para plataformas de agentes 

As principais especificações da FIPA consistem na linguagem de comunicação FIPA-

ACL que já foi discutida em seções anteriores, e uma arquitetura abstrata que define um 

modelo de referência para plataformas de agentes. Na Figura 6 é apresentado esse modelo de 

referência.  

Segundo as especificações da FIPA, as plataformas de agentes devem possuir quatro 

componentes principais (Figura 6): MTS (Message Transport Service), AMS (Agent 

Management System), DF (Directory Facilitator) e Agent. O MTS é o sistema de transporte 

de mensagens que fornece o serviço de comunicação entre os agentes, tanto para os que estão 

na mesma plataforma como entre agentes residentes em plataformas remotas. O AMS é um 

agente responsável por gerenciar o ciclo de vida dos agentes que estão sendo executados na 

plataforma e também o acesso e uso da plataforma por esses agentes. O DF é um agente que 

fornece os serviços de páginas amarelas aos outros agentes. Esse serviço consiste em um 

repositório central, onde são armazenadas as informações sobre os serviços oferecidos pelos 

agentes, e mecanismos para o registro e busca desses serviços. O componente Agent 

representa os processos computacionais (os agentes) que desempenham as tarefas e serviços 

da aplicação. 

                                                 

7
 http://fipa-os.sourceforge.net/index.htm 

8
 http://jade.tilab.com/ 

9
 http://jason.sourceforge.net/ 

10
 http://www.activecomponents.org/ 



30 

 

 

 

 

Figura 6 – Modelo de referência plataformas de agentes. 

Fonte: Adaptado de FIPA Agent Management Specification
11

. 

 

Plataforma Jadex 

O Jadex é uma plataforma para o desenvolvimento, execução e gerenciamento de 

agentes baseados na arquitetura BDI (BRAUBACH; POKAHR; LAMERSDORF, 2005). 

Essa plataforma oferece um conjunto completo de ferramentas para gerenciar, testar e depurar 

os agentes. Além disso, as estruturas internas dos agentes são definidas em termos de 

objetivos, planos, crenças e eventos. 

Um agente Jadex é representado por um arquivo no formato XML, denominado Agent 

Definition File (ADF), e um conjunto de classes Java. O ADF é utilizado para representar a 

estrutura interna do agente em termos das crenças do agente, os objetivos, os planos para 

alcançar os objetivos e os eventos e mensagens tratadas pelo agente. As classes Java 

representam a concretização dos planos do agente, de forma que quando um plano é ativado o 

código Java correspondente é executado. 

No estudo de caso apresentado no Capítulo 5 é utilizado a plataforma Jadex para o 

desenvolvimento e execução dos agentes. Nesse estudo, utilizando a ferramenta t2x tool 

(Seção 2.1.6.1), os modelos dos agentes definidos com a ferramenta TAOM4E (Seção 2.1.6.1) 

foram mapeados para o ADF do agente.  

 

 

                                                 

11
 http://fipa.org/specs/fipa00023/SC00023J.html 



31 

 

 

 

2.2 Supervisão e controle de processos 

 

As atividades de supervisão e o controle de processos são aspectos fundamentais na 

indústria (CERRADA et al., 2007), tendo como objetivos principais assegurar o 

funcionamento correto, o desempenho e a segurança dos processos e dos equipamentos, e 

também garantir a qualidade dos produtos. Essas atividades envolvem o monitoramento 

contínuo dos equipamentos e das operações, o que exige muita atenção, conhecimento técnico 

e especializado dos operadores (HOSSACK et al., 2003). Nesse sentido, sistemas 

computacionais para a automação dessas atividades são essenciais para diminuir a 

necessidade de interação humana, apoiar os operadores no monitoramento e no controle dos 

processos e aliviar os operadores das tarefas consideradas repetitivas e cansativas. Esses 

sistemas auxiliam os operadores e os profissionais nas tomadas de decisão e na identificação 

das situações relevantes para a prevenção dos problemas que podem causar prejuízos 

financeiros e até mesmo danos ambientais.  

Dessa forma, os sistemas de supervisão e controle são responsáveis pelo monitoramento 

e controle dos processos, atuando em um nível mais alto que o controle direto dos processos 

(Figura 7). Os dispositivos e os equipamentos que realizam o controle direto dos processos 

são capazes de executar ações em intervalos de tempo muito curtos, abaixo de um segundo, 

enquanto os sistemas de supervisão e controle atuam em intervalos de tempos mais longos 

(GROOVER, 2000). 

Na Figura 7 é apresentado um esquema de controle de processos composto de dois 

níveis: o de controle direto; e o de supervisão e controle. No controle direto os sistemas 

controladores interagem diretamente com os processos. Na supervisão e controle os sistemas 

atuam sobre os controladores a fim de coordenar os diversos processos envolvidos. Nesse 

esquema, as variáveis de saída representam os dados do processo, coletados por meio de 

dispositivos como sensores. Esses dados alimentam os sistemas controladores, que produzem 

ações de controle que são executadas pelos dispositivos atuadores para modificar as condições 

e os estados dos processos. Já os sistemas de supervisão e controle utilizam os dados 

coletados para monitorar os estados, as condições dos processos e ajustar os controladores. 

Esses sistemas também apresentam interfaces com os usuários, através das quais os 

operadores podem visualizar as condições e os estados dos processos e também atuar nesses 



32 

 

 

 

processos. Dessa forma a responsabilidade sobre o controle dos processos é compartilhada 

entre os sistemas e os operadores. 

 

Figura 7 – Esquema de supervisão e controle de processos. 

Fonte: Adaptado de Groover (2000). 

 

2.2.1 Ambientes industriais 

 

Os ambientes industriais são caracterizados por um conjunto de máquinas e 

equipamentos de diferentes tipos agrupados para a produção de bens ou serviços a partir do 

processamento de matéria-prima (CHRYSSOLOURIS, 2006). Segundo Groover (2000) as 

indústrias podem ser divididas em duas categorias, de acordo com os processos envolvidos: 

indústria de processos contínuos e indústria de manufatura. Na indústria de processos 

contínuos os materiais tendem a ser líquidos, gases, pó, entre outros materiais semelhantes. 

Nessa indústria os bens produzidos não podem ser identificados individualmente. Exemplos 

de indústrias de processos contínuos são as indústrias de produtos químicos, petróleo, e 

energia elétrica. Nas indústrias de manufatura os materiais produzidos são unidades ou peças. 

Esses bens podem ser isolados, em lotes ou unidades o que permite a distinção entre eles. 

Alguns exemplos de indústrias de manufatura discreta são as indústrias de automóvel, 

eletrodomésticos, e produtos cerâmicos. 

Tanto nas indústrias de processo como na de manufatura os processos de fabricação são 

relativamente complexos, caracterizados pela integração de vários equipamentos e sistemas 



33 

 

 

 

(BUNCH et al., 2005). Esses correspondem principalmente a sensores, atuadores e sistemas 

controladores, como PLC (Programmable Logic Controllers) e DCS (Distributed Control 

Systems). Os sensores representam equipamentos e instrumentos de medição, responsáveis 

por fornecer medidas como: pressão, nível, temperatura, fluxo, posição, velocidade, etc.. Já os 

atuadores representam dispositivos e equipamentos mecânicos, pneumáticos ou eletrônicos 

que exercem influência direta nos processos, como válvulas, motores elétricos, bombas, etc. 

(DUNN, 2006). 

Neste contexto, os ambientes industriais constituem um ambiente computacional 

complexo. Geralmente constituídos por um grande número de componentes heterogêneos, 

legados e que podem estar distribuídos ao longo das instalações. Esses componentes podem 

ser tanto hardware (ex: máquinas, sensores e atuadores) como software (sistemas de 

aquisição de dados, sistemas de supervisão e controle). Outros fatores que contribuem para a 

complexidade desses ambientes estão relacionados ao grande volume de dados gerados por 

esses componentes e a conectividade existente entre eles. 

  

2.2.2 Automação dos processos industriais 

 

A automação dos processos industriais consiste na utilização de tecnologias (hardware 

e software) que permitam a realização dos processos ou procedimentos sem ou com a mínima 

intervenção humana (GROOVER, 2000). Para isso, são necessários sistemas computacionais 

(software) que definem as sequências de instruções necessárias para operar os processos, e 

também dispositivos controladores (hardware) para atuar no controle dos equipamentos e das 

máquinas. Em geral, a automação visa aumentar o desempenho e a segurança na realização 

dos processos. Consequentemente, também diminui ou remove os operadores dos ambientes 

ou situações potencialmente perigosas. Por outro lado, o operador assume outro papel, de 

responsável pelo monitoramento das informações geradas pelos sistemas de automação, 

verificando o funcionamento e o desempenho dos processos (GROOVER, 2000). Dessa 

forma, além de atuar diretamente nos processos, os sistemas de automação também podem 

apresentar relatórios para os usuários sobre as operações, ou ativar alarmes quando detectado 

situações indesejadas. 



34 

 

 

 

Na Figura 8 é apresentado um modelo hierárquico com quatro diferentes níveis de 

automação e controle de processos na indústria. No nível mais baixo, associados diretamente 

aos processos físicos estão os sensores, atuadores e outros componentes de hardware. Acima 

desse, no nível de controle, a automação ocorre através dos sistemas controladores, como 

PLCs e microcontroladores, que integram diversos sensores e atuadores e coordenam esses 

dispositivos através de programas de controle, aplicando as instruções necessárias para a 

execução do controle dos processos. Acima desse nível estão os sistemas de supervisão e 

controle que são responsáveis por monitorar e gerenciar os diversos processos envolvidos. No 

nível mais alto, correspondente ao nível empresarial, estão os sistemas responsáveis por 

gerenciar as informações da empresa que envolve os processos de planejamento de produção, 

o controle dos recursos e materiais, a logística, a avaliação e a análise dos resultados para a 

otimização dos processos (GROOVER, 2000; WAGNER, 2003; SAUTER, 2005; 

METZGER; POLAKÓW, 2011). 

 

Figura 8 – Modelo hierárquico da automação dos processos industriais. 

 

2.2.3 Sistemas para a supervisão e controle de processos 

 

Os avanços tecnológicos ocorridos nos últimos anos, principalmente em relação aos 

softwares e hardwares, levou à diminuição dos custos e consequentemente ao aumento da 

automatização e informatização na indústria. Nesse contexto, ocorreu um aumento no uso de 



35 

 

 

 

controladores e de instrumentos de medição, responsáveis pelo controle e monitoramento das 

condições dos equipamentos e dos processos. 

Com o aumento da adoção desses dispositivos e tecnologias na indústria ocorreu 

também o aumento da quantidade, assim como da confiabilidade e qualidade dos dados e das 

informações geradas. Muitos desses dados são simplesmente armazenados e subutilizados, 

principalmente por exigir um grande esforço, tempo e conhecimento especializado para a 

integração e a análise. Esses dados muitas vezes representam uma importante fonte de 

informação que pode ser utilizada para melhorar o desempenho dos processos. 

Aliado ao aumento nas capacidades de processamento dos computadores surgiram 

novas abordagens e ferramentas computacionais para não apenas analisar e monitorar o 

grande volume de dados produzidos, mas também para a automação de outras tarefas voltadas 

para o monitoramento e controle dos processos. Essas ferramentas correspondem a sistemas 

de supervisão e controle de processos e tem como objetivos a recuperação, a integração, o 

processamento e o gerenciamento dos dados dos equipamentos e sistemas, a fim de gerar 

informações que auxiliem os operadores e os especialistas nas tomadas de decisões. 

Esses sistemas são essenciais para as indústrias, podendo ser utilizados para diversas 

finalidades, como por exemplo: identificar e/ou prever a ocorrência de anormalidades nos 

processos; monitorar as condições dos equipamentos, indicando problemas de mau 

funcionamento e degradação; monitorar e analisar o desempenho das operações, assim como 

realizar o planejamento e o controle das operações para otimizar o desempenho do processo. 

Através das interfaces gráficas dos sistemas de supervisão e controle, os operadores 

podem visualizar as informações dos processos, monitorar os parâmetros operacionais, 

realizar o controle das operações, acompanhar alarmes e notificações sobre situações e 

eventos que requerem a atenção, além de dar suporte no diagnóstico e na solução de 

problemas. Para isso esses sistemas dispõem de ferramentas e métodos para a recuperação e o 

acesso a dados, para a análise e a detecção de problemas, e também para o planejamento e 

controle. 

Nesse cenário, o grande desafio no desenvolvimento de sistemas de supervisão e 

controle de processos industriais é: dar suporte a integração dos diversos componentes e 

sistemas envolvidos, visto que muitas vezes os elementos envolvidos são baseados em 

plataformas, possuem interfaces de comunicação e utilizam tecnologias diferentes; 



36 

 

 

 

ferramentas baseadas em conhecimento para gerenciar todo o ciclo de vida do processo e para 

gerenciar a grande quantidade de dados produzidos para que possam ser devidamente 

processados e melhor aproveitados pelos operadores e especialistas. 

 

2.3 Considerações e discussões 

 

Entre os aspectos conceituais apresentados nesse capítulo estão os SMA, que consiste 

em uma subárea de pesquisa da IA distribuída e tem como objetivo principal estudar e 

desenvolver técnicas e ferramentas para a solução de problemas complexos e distribuídos. 

Para a solução desses problemas a abordagem de SMA propõe a utilização de agentes de 

software. Os agentes são componentes de software autônomos capazes de perceber e atuar em 

um ambiente, apresentando um comportamento flexível, agindo reativamente ou 

proativamente e interagindo com outros agentes para alcançar objetivos ou estados desejados. 

Nesse sentido, existem diversas abordagens, ferramentas e metodologias para o 

desenvolvimento de componentes de software com essas características. 

Outro aspecto apresentado nesse capítulo está relacionado à supervisão e controle de 

processos no setor industrial. Na indústria, a supervisão e o controle dos processos é uma 

atividade importante para assegurar o bom funcionamento e a segurança das operações, 

completando as habilidades dos operadores na detecção e solução de problemas. Neste 

contexto, o grande desafio é o desenvolvimento de sistemas computacionais cada vez mais 

complexos para integrar a grande quantidade de componentes presentes nesses ambientes, 

analisar os dados produzidos e automatizar as atividades de supervisão e controle dos 

processos. 

Neste contexto, no próximo capítulo é analisada a utilização da abordagem de SMA 

para o desenvolvimento de sistemas de supervisão e controle de processos. 

 

 

 

  



37 

 

 

 

3 TRABALHOS RELACIONADOS 

 

Neste capítulo são apresentados e analisados alguns aspectos referentes a um conjunto 

de trabalhos encontrados na literatura. Esses trabalhos apresentam abordagens onde foram 

utilizados a abordagem orientada a agentes para o desenvolvimento de sistemas para a 

supervisão e controle de ambientes e processos. Nesse sentido, essa revisão bibliográfica teve 

como objetivo principal o estudo da organização arquitetural desses sistemas, assim como a 

identificação e análise dos agentes empregados. Os aspectos levantados nesse estudo foram 

utilizados como base para a especificação e desenvolvimento da arquitetura multiagente 

proposta no Capítulo 4. 

 

3.1 Abordagem de sistemas multiagentes para a supervisão e controle de 

processos 

 

Para o desenvolvimento desse trabalho foi realizado um levantamento bibliográfico no 

qual foi analisado um conjunto de SMAs, a fim de identificar a organização arquitetural 

desses sistemas, em termos dos agentes utilizados, suas funções, comportamentos e 

relacionamentos. Esses SMAs estão voltados para a solução de uma variedade de problemas, 

que vão desde a integração de componentes, sistemas heterogêneos e bases de informações 

distribuídas (CAPRETZ; HRYB, 2005; PURVIS; CRANEFIELD; NOWOSTAWSKI, 2000), 

até sistemas mais complexos para o monitoramento e controle de ambientes e processos a fim 

de prever e identificar a ocorrência de anormalidades (BUNCH et al., 2005; CERRADA et al., 

2007; NG; SRINIVASAN, 2010). 

Os SMAs analisados estão voltados principalmente para o setor industrial, destinados a 

atividades de monitoramento de equipamentos e sensores e nas atividades de supervisão e 

controle de processos. Essas atividades envolvem a integração, monitoramento e análise dos 

dados e informações geradas, assim como o planejamento e o controle dos processos e das 

operações.  

A ideia da utilização de agentes no desenvolvimento de sistemas computacionais para 

tratar o problema da complexidade presente nos ambientes e nos processos industriais não é 



38 

 

 

 

nova. Uma das primeiras abordagens, propostas na área de IA distribuída, foi o framework 

ARCHON (JENNINGS, 1994), que oferece uma arquitetura de propósito geral para o 

desenvolvimento de sistemas distribuídos, e também uma metodologia para suportar o projeto 

e o desenvolvimento de aplicações de supervisão e controle para diferentes domínios 

industriais. Nessa abordagem, os agentes são tratados como entidades individuais 

solucionadoras de problemas, capazes de integrar diferentes sistemas legados por meio de 

uma infraestrutura que combina uma variedade de ferramentas e métodos heterogêneos, e são 

responsáveis por garantir a comunicação e a coordenação entre esses componentes para a 

execução de tarefas e a solução de problemas. 

A análise dos SMAs realizada nesse capítulo foi feita como parte da análise de 

requisitos necessária para a especificação da arquitetura multiagente proposta. Com isso, 

foram identificados e analisados alguns aspectos relacionados à utilização da abordagem de 

SMA voltada para o desenvolvimento de sistemas de supervisão e controle de processos. 

Dentre esses aspectos estão: a integração de componentes e sistemas; o monitoramento e 

análise de dados; a coordenação, o planejamento e controle; a interface com o usuário; a 

interação entre os agentes; e a organização dos agentes. A seguir são apresentados e 

discutidos como cada um desses aspectos são tratados nos trabalhos analisados. 

 

3.2 Integração de componentes e sistemas 

 

A utilização de abordagens para a integração de componentes e sistemas são essenciais, 

principalmente em ambientes complexos e distribuídos, formados por vários componentes e 

sistemas heterogêneos. Nesses cenários, os componentes representam equipamentos e outros 

dispositivos, como por exemplo, sensores, medidores, controladores e atuadores. Esses 

componentes produzem dados e informações, realizam operações e controlam processos. Já os 

sistemas representam sistemas já existentes ou legados que apresentam funcionalidades, 

serviços ou recursos, como por exemplo, sistemas gerenciadores de banco de dados, sistemas 

de diagnóstico, entre outros. Nesses ambientes, a maioria dos componentes e sistemas 

possuem suas próprias interfaces que geralmente são incompatíveis e trabalham com padrões 

diferentes. Com isso surge a necessidade de formas mais flexíveis e menos complexas para 

integrar e gerenciar esses componentes. Nesse sentido, várias abordagens têm sido propostas, 



39 

 

 

 

incluindo algumas onde a tecnologia de agentes é utilizada. Nessas abordagens os agentes 

funcionam como entidades integradoras, responsáveis por integrar e gerenciar os diversos 

componentes na execução das tarefas e na solução dos problemas. 

Alguns dos motivos que contribuem para o uso da tecnologia de agentes como uma 

solução para a integração de componentes e sistemas heterogêneos estão relacionados a 

algumas das propriedades oferecidas pela abordagem de SMA como (WOOLDRIDGE, 1998; 

HOSSACK et al., 2003; MCARTHUR et al., 2007): natureza aberta – permite que os agentes 

entrem ou saiam do sistema dinamicamente, facilitando a evolução do sistema através da 

adição de novos componentes e funcionalidades; distribuídos – os agentes podem estar 

espalhados pela rede; modular e flexível – os agentes podem ser facilmente reorganizados 

para a solução de diferentes problemas; interação social – os agentes se comunicam e trocam 

informações através de uma linguagem de comunicação comum. 

A seguir são apresentados e discutidos alguns dos trabalhos que utilizam a abordagem 

de agentes para a integração de componentes e sistemas. Nesses trabalhos foram identificadas 

duas formas para realizar a integração: através da implementação das interfaces dos 

componentes, onde os agentes implementam as interfaces de comunicação, necessárias para 

acessar os recursos e serviços desses componentes; ou através do uso de serviços Web, onde 

os componentes têm suas funcionalidades encapsuladas como serviços Web, que podem ser 

utilizados pelos agentes. 

 

3.2.1 Implementação das interfaces dos componentes 

 

Nessa abordagem, os agentes responsáveis pela integração devem implementar as 

interfaces necessárias para ter acesso às funcionalidades e aos recursos dos componentes 

externos ao SMA, como fontes de dados, sistemas legados, equipamentos e outros 

dispositivos. Esses agentes são responsáveis por esconder a complexidade da comunicação 

com os componentes externos do resto do SMA, de forma que os recursos e serviços desses 

componentes sejam disponibilizados aos outros agentes do SMA através de uma linguagem 

de comunicação comum e conhecida pelos agentes. 



40 

 

 

 

Nos trabalhos analisados, os agentes responsáveis pela integração implementam 

diretamente as interfaces dos equipamentos (como sensores e dispositivos de medição), como 

também dos sistemas legados. Esses correspondem aos módulos de processamento, de 

análise, de diagnóstico, sistemas provedores e de coleta de dados, e também outros sistemas 

envolvidos na supervisão e controle de processos. 

Assim, nos trabalhos analisados foram identificadas duas formas para os agentes 

utilizarem esses sistemas (Figura 9). A primeira forma consiste em utilizar um único agente 

que implementa todas as interfaces para a comunicação com os vários componentes externos, 

Figura 9 (a). A segunda forma consiste em utilizar vários agentes, onde cada um deles 

implementa a interface de acesso para seu respectivo componente, Figura 9 (b). Na Figura 9 

(c) é apresentada uma variação da primeira forma, na qual ao invés de implementar 

diretamente as interfaces desses sistemas, os agentes utilizam interfaces de serviços Web para 

acessá-los. Essa abordagem é discutida na próxima seção.  

 

Figura 9 – Formas para a integração de componentes externos. 

 

Nesse contexto, Capretz e colegas (2005) apresentam uma abordagem onde um único 

agente, denominado Wrapper Agent, é utilizado para “empacotar” vários sistemas legados. 

Esse agente faz a mediação entre o SMA e os sistemas legados envolvidos, sendo capaz de 

criar conexões dinâmicas para vários sistemas legados e fornecer acesso aos serviços e 

recursos desses sistemas. O Wrapper Agent faz uso das descrições que especificam os 

recursos disponíveis nos sistemas legados e as formas de acesso e comunicação, permitindo 

acessar e invocar os recursos desses sistemas. 



41 

 

 

 

A outra forma de integração consiste em utilizar vários agentes, um para gerenciar cada 

componente externo. Com essa abordagem, para cada novo recurso externo, como fontes de 

informações ou outros sistemas existentes, um novo agente deve ser implementado para 

acessar esse recurso e fazer a integração com o resto do SMA. Essa abordagem é utilizada 

pela maioria das aplicações estudadas, que são discutidas a seguir. 

Hossack e colegas (2003) apresentam uma abordagem que ilustra como SMAs podem 

ser usados para integrar sistemas inteligentes heterogêneos desenvolvidos no passado, mas 

que ainda operam de forma independente devido a problemas de integração. Usando SMAs 

como uma alternativa flexível e escalável em relação às abordagens de integração existentes. 

Nessa abordagem, cada um dos agentes são implementados para empacotar os sistemas 

legados, de forma que seus recursos e funcionalidades são encapsulados e apresentados como 

tarefas do agente, e com isso permitindo que sistemas legados sejam integrados de forma 

simples e eficiente a um novo sistema. No protótipo apresentado, um dos agentes é 

responsável pela integração de um sistema SCADA (Supervisory Control and Data 

Acquisition), e de um outro sistema de registro de perturbações. Para acessar esses sistemas 

foi desenvolvida uma função em Java, como tarefa do agente. Posteriormente, as informações 

obtidas são enviadas aos outros agentes do SMA, para serem interpretadas e analisadas. 

Voltado para a integração de componentes como sensores e fontes de dados, Rudd e 

colegas (2007) apresentam agentes do tipo Data Formatting Agent. Cada um desses agentes é 

encarregado de coletar os dados de sensores específicos e colocá-los em um formato padrão 

para serem utilizados pelos outros agentes do SMA. Em outros trabalhos, agentes com essas 

mesmas responsabilidades são chamados de Device Agents (YAO et al., 2009), Data 

Management Agent (NG; SRINIVASAN, 2010), e Measuring Agent (CERRADA et al., 

2007). No trabalho de Athanasiadis e colegas (2004), agentes desse tipo são chamados de 

Diagnosis Agent. Ainda nesse trabalho, um outro tipo de agente, denominado DataBase 

Agent, é responsável por estabelecer uma conexão com uma base de dados e armazenar as 

medidas dos sensores de campo no formato apropriado. 

No trabalho de Bunch e colegas (2005) são apresentados agentes chamados Sensor 

Agent, que acessam os dados operacionais em tempo real de dispositivos como sensores e 

controladores, provendo esses dados para os outros agentes do SMA processá-los. Cristaldi e 

colegas (2003) apresentam um agente chamado Data Acquisition and Monitoring Agent, 

responsável por recuperar os dados de um sensor presente em um dispositivo monitorado.  



42 

 

 

 

Alguns trabalhos apresentam agentes responsáveis por encapsular sensores e fontes de 

dados e também sistemas legados. Purvis e colegas (2000) apresentam uma arquitetura 

multiagente para integrar recursos de informações distribuídos. Para a integração desses 

recursos na arquitetura foi definido uma classe de agentes, chamada Resource Agent, que é 

representada pelos Data Source Agents e Computational Module Agents. Os agentes Data 

Source fazem a comunicação com as bases de dados do sistema, sendo implementados como 

um wrapper das fontes de dados, enquanto os agentes Computational Module fornecem uma 

interface similar a dos Data Source só que para os módulos de análise de dados. Assim esses 

dois agentes fornecem, para os outros agentes do SMA, os dados e os recursos de 

processamento necessários para a execução do sistema. 

No trabalho de Sheremetov e colegas (2004) são apresentados vários agentes 

responsáveis pela integração dos recursos utilizados por um sistema para a simulação e 

gerenciamento de situações de contingência relacionadas a desastres ambientais. Nesse 

sistema, agentes chamados Source Agents são responsáveis pela recuperação das informações 

climáticas das várias fontes, e um conjunto de agentes, denominados Wrapper Agents, os 

quais são responsáveis pelo acesso aos recursos de sistemas externos, como base de dados e 

sistemas de análise. 

Jacke e colegas (2006) também utilizaram a abordagem de SMA como uma plataforma 

para integrar os diversos sistemas existentes, para o controle e gerenciamento de um sistema 

de produção. Para a integração dos sensores, agentes chamados I/O-agent acessam diferentes 

canais de comunicação para recuperar os dados dos sensores e controladores. Esses agentes 

implementam as várias interfaces de acesso para os diferentes padrões de comunicação que 

podem ser encontrados nas plantas. Para a integração com os sistemas existentes são 

apresentados dois agentes: os Web-Server agent que fornecem uma interface para os sistemas 

de análise estatística, e os Archive-Server agent que lidam com as informações relevantes da 

produção para armazenar em uma base de dados para utilizações futuras. 

 

 

 



43 

 

 

 

3.2.2 Utilização de serviços Web 

 

Uma outra forma para a integração de componentes é através da utilização da tecnologia 

de serviços Web
12

. Esta consiste em um padrão definido pelo W3C para a implementação de 

arquiteturas orientadas a serviços (SOA – Service-Oriented Architecture). Esse padrão utiliza 

serviços como módulos funcionais (sistemas de softwares), os quais podem estar sob o 

controle de diferentes organizações, em diferentes domínios (MENDES et al., 2009; 

BRAZIER et al., 2009). Seu objetivo principal é suportar a interoperabilidade entre sistemas 

de softwares distintos, através da utilização de uma linguagem de comunicação baseada no 

padrão XML, o que garante a independência de plataforma e da linguagem de programação 

em que esses sistemas foram escritos. Uma arquitetura orientada a serviços oferece uma 

infraestrutura na qual as interfaces para o uso dos serviços são descritas em um formato 

processável por máquinas (que podem ser agentes de software e outros sistemas). Também 

oferece padrões para o registro e publicação dos serviços para que assim possam ser 

encontrados e usados por outros sistemas. 

Uma extensão dos serviços Web são os serviços Web Semânticos
13

 que aperfeiçoam as 

formas de descoberta de serviços. Nesse caso, os serviços são anotados semanticamente o que 

permite que agentes de software encontrem e consumam esses serviços dinamicamente e de 

forma automática. 

A integração das abordagens de agentes e serviços Web têm sido discutidas em diversos 

trabalhos (HUHNS, 2003; GREENWOOD et al., 2007; HEMAYATI et al., 2010; MENDES 

et al., 2010). Em alguns desses trabalhos são implementados agentes especiais para fazer a 

comunicação entre os serviços Web e os agentes do SMA (SHEREMETOV; CONTRERAS; 

SMIRNOV, 2004; SCHLESINGER; ERRECALDE; AGUIRRE, 2010; ZHOU et al., 2010). 

Nessas abordagens esses agentes são chamados Gateway ou Proxy Agent, e normalmente 

fazem a tradução das requisições dos agentes para o protocolo utilizado pelos serviços e 

também convertendo as respostas (MENDES et al., 2009). Nessa abordagem também pode 

haver um outro agente responsável por gerenciar as descrições e as informações sobre os 

serviços, chamados de Ontology Agent (SHEREMETOV; CONTRERAS; SMIRNOV, 2004). 

                                                 

12
 http://www.w3.org/TR/ws-arch/ 

13
 http://www.w3.org/2002/ws/swsig/ 



44 

 

 

 

Em uma outra abordagem, os agentes tem seus recursos encapsulados como serviços 

Web, e assim esses recursos podem ser utilizados por sistemas externos através de interfaces 

de serviços (MENDES et al., 2009; MENDES et al., 2010). Com isso, sistemas que não são 

baseados em agentes podem acessar os recursos e serviços do SMA através de um protocolo 

de comunicação baseado em serviços. 

 

3.3 Monitoramento e análise de dados 

 

O monitoramento e análise de dados também é um aspecto importante em sistemas de 

supervisão e controle. Esse aspecto abrange capacidades para detectar, encontrar, diagnosticar 

e prever a ocorrência de anormalidades, a partir do monitoramento e da análise dos diversos 

dados e variáveis produzidos pelos processos. Nas abordagens estudadas foram identificadas 

três atividades relacionadas a esse aspecto e que são desempenhadas por um conjunto de 

agentes. Essas atividades envolvem o monitoramento contínuo das variáveis medidas, o pré-

processamento e a análise dos dados. 

As atividades de monitoramento contínuo das variáveis, geralmente, são realizadas por 

meio de algoritmos e métodos para a comparação dos valores medidos para checar se as 

variáveis monitoradas estão apresentando o comportamento desejado. Caso alguma variável 

saia do intervalo estabelecido, um evento deve ser gerado para notificar esse comportamento. 

Já as atividades de pré-processamento utilizam algoritmos e métodos estatísticos para filtrar, 

eliminar ruídos e estimar valores perdidos. Nas atividades de análise podem ser utilizados 

métodos de Inteligência Artificial como Sistemas Nebulosos, Sistemas Baseados em Regras, e 

outros métodos de aprendizagem de máquina e classificadores (por exemplo, Redes Neurais 

Artificiais). 

Os algoritmos, métodos e sistemas envolvidos nas atividades de monitoramento, pré-

processamento e análise podem ser implementados diretamente pelos agentes ou utilizados 

através de módulos ou sistemas externos já existentes, acessíveis diretamente por esses 

agentes ou através de outros agentes que lidam com a integração desses componentes. Em 

relação às atividades de análise, alguns dos trabalhos estudados apresentam abordagens que 

suportam a utilização de vários métodos para o diagnóstico de determinada anormalidade, 



45 

 

 

 

onde os resultados obtidos são confrontados para alcançar uma maior confiabilidade no 

diagnóstico. 

Nesse contexto, no trabalho de Rudd e colegas (2007) são utilizados dois agentes para o 

processo de análise e diagnóstico de falhas. Para esse processo, primeiramente, agentes 

chamados Feature Extraction Agent extraem um conjunto de características, dos dados 

medidos, que são usadas na identificação das anormalidades. Em seguida essas características 

são informadas para os Interpretation Agent, que implementam métodos de análise baseados 

em técnicas de Inteligência Artificial, como Redes Neurais Artificiais. Esses agentes fazem a 

análise dessas informações para identificar alguma possível anormalidade. A abordagem 

apresentada por Yao e colegas (2009) também utiliza vários métodos para identificar as 

anormalidades. Nessa abordagem, agentes chamados Signal Processing Agent e Feature 

Extraction Agent fazem a eliminação de ruídos e extração das características, enquanto 

agentes do tipo Analysis Agent utilizam métodos, como Sistemas Nebulosos, para analisar 

esses dados e diagnosticar possíveis ocorrências de falhas.  

Ng e colegas (2010) apresentam uma classe de agentes chamada Supervision Agent 

formada por: Monitoring Agents – responsáveis por monitorar os estados dos processos e 

detectar anormalidades, e Diagnostic Agents – responsáveis pela identificação das causas que 

levaram a ocorrência da anormalidade. Para desempenhar essas tarefas esses agentes podem 

incorporar vários métodos como Redes Neurais Artificiais e Sistemas Baseados em Regras. 

No trabalho de Sheremetov e colegas (2004) agentes chamados Predictor Agents suportam a 

implementação de vários classificadores (K-means, Fuzzy) para a análise dos dados. 

No trabalho de Athanasiadis e colegas (2004) os agentes de análise são chamados de 

Alarm Agent e são responsáveis por analisar os dados, identificar as anormalidades e gerar os 

alarmes correspondentes. Já no trabalho de Bunch e colegas (2005) esses agentes são 

chamados de Monitor Agent e avaliam continuamente um conjunto de condições de um ou 

mais processos. No trabalho de Cerrada e colegas (2007) esses agentes são tratados como 

Specialized Agents. Já no trabalho de Cristaldi e colegas (2003) um Fuzzy Unit Agent é 

responsável por analisar os dados e detectar situações de anormalidades utilizando lógica 

nebulosa. 

 



46 

 

 

 

3.4 Coordenação, planejamento e controle 

 

Um outro aspecto identificado consiste nas atividades relacionadas à coordenação dos 

agentes na execução de suas tarefas para alcançar os objetivos do sistema, a definição dos 

planos de ações e das medidas que devem ser tomadas, e o controle dos processos e das 

operações. Essas atividades são desempenhadas por um conjunto de agentes que devem 

possuir conhecimento dos processos, dos agentes envolvidos e suas capacidades. Na 

supervisão e no controle dos processos essas atividades envolvem a coordenação dos agentes 

na realização de tarefas como a coleta, o monitoramento e a análise de dados, para obter as 

informações necessárias para as tomadas de decisões e planejamento das operações e dos 

processos que estão sendo monitorados e controlados.  

A partir das informações obtidas através do monitoramento, da análise dos dados e do 

conhecimento sobre os processos, os sistemas de supervisão e controle devem ser capazes de 

tomar decisões a respeito das ações ou das medidas a serem executadas, tendo como objetivo 

principal garantir o funcionamento e a segurança dos processos. Além disso, esses sistemas 

devem prover, para os operadores e engenheiros, as informações referentes aos alertas, às 

anormalidades e as condições dos processos.  

Nesse contexto, no trabalho de Purvis e colegas (2000) são apresentados agentes 

chamados Query Processing Agent, que são responsáveis pela coordenação de outros agentes 

para a integração e a busca de informações. Esses agentes tratam as requisições, dividindo as 

consultas em sub-tarefas a serem executadas por um conjunto de agentes responsáveis por 

encontrar as informações pesquisadas. Nesse trabalho também é apresentado um agente, 

chamado Ontology Agent, que lida com o conhecimento da aplicação. Esse agente é 

responsável por gerenciar o dicionário de termos, que é definido utilizando metadados e uma 

ontologia de domínio usada na descrição das bases de informações. Através do uso de 

ontologias e do padrão de metadados, quando for realizada uma consulta, o Ontology Agent 

irá fazer uma tradução, caso necessário para encontrar os termos e atributos relacionados ao 

que está sendo consultado. Isto é feito porque o mesmo tipo de informação pode estar definida 

usando termos diferentes em fontes diferentes. 

No trabalho de Bunch e colegas (2005), ontologias também são utilizadas para gerenciar 

o conhecimento necessário para a coordenação e planejamento. Nessa abordagem, ontologias 



47 

 

 

 

são usadas para organizar e classificar os componentes e as variáveis dos processos, definir os 

estados e as condições de monitoramento, os modos de notificação e as regras 

organizacionais. Nesse sentido, as ontologias são utilizadas para definir um conjunto de 

diretrizes que especificam a forma como os agentes agem, usam os recursos e notificam os 

usuários. Dessa forma os usuários podem estabelecer essas diretrizes que descrevem as 

condições de monitoramento.  

Assim como coordenar os agentes da aplicação na execução de suas tarefas, outro papel 

desses agentes é a integração e a consolidação dos resultados gerados nas atividades de 

monitoramento e análise, para serem apresentados aos usuários. Nesse contexto, nos trabalhos 

de Rudd e colegas (2007) e Yao e colegas (2009) foi proposto um agente chamado Diagnosis 

Agent que é responsável por coordenar os agentes de análise e, a partir dos resultados obtidos 

por esses agentes, chegar a um diagnóstico mais confiável. Para isso esses agentes se baseiam 

no histórico dos resultados e na precisão de cada um dos métodos utilizados. No trabalho de 

Sheremetov e colegas (2004) é apresentado um agente com as mesmas funções, chamado 

Integrator Agent. Ainda nessa abordagem também são apresentados agentes responsáveis pelo 

planejamento das atividades, chamados Coalition Agents, que utilizam as informações dos 

agentes de predição e um conjunto de regras armazenadas em uma base de conhecimento. 

Na abordagem apresentada por Cerrada e colegas (2007), um conjunto de agentes são 

responsáveis pela coordenação, planejamento e controle. Para isso os seguintes tipos de 

agentes são definidos: os Coordinator Agent que além de coordenar os agentes de 

monitoramento e análise, fazem o planejamento e determinam as tarefas e os planos de 

manutenção; os Controller Agent escolhem as ações a serem tomadas, de acordo com o estado 

do sistema, dos recursos disponíveis, dos planos de manutenção e das ações corretivas 

definidas pelos agentes Coordinator; e os Actuator Agent responsáveis por executar essas 

ações. 

Em Guilherme e colegas (2008), dois agentes são responsáveis pela supervisão e 

controle dos processos de uma planta de produção de petróleo. Um agente, chamado Control 

Agent, é responsável pelo controle dos sistemas e dos componentes de uma planta de 

produção, sendo o controlador implementado utilizando os conceitos de um controlador 

nebuloso. E um agente chamado Supervisor Agent, é responsável por integrar, utilizando 

ontologias, o conhecimento e os dados dos diferentes repositórios, para a solução de 



48 

 

 

 

problemas de diagnóstico de anormalidade, de segurança operacional e para coordenar os 

Control Agent.  

No trabalho de Cristaldi e colegas (2003) são apresentados agentes de planejamento e 

controle. Nesse trabalho um agente de planejamento, chamado System Manager Agent, 

analisa as informações obtidas de um agente de análise e determina qual é a melhor 

configuração para o dispositivo monitorado. Então este agente envia comandos para um 

agente de controle, chamado Drive Control Agent, que realiza o controle do fluxo de corrente 

do dispositivo elétrico monitorado. 

No trabalho de Ng e colegas (2010) são apresentados agentes do tipo Operation and 

Control Agent que auxiliam os operadores na execução e no controle das diversas tarefas. 

Essas tarefas envolvem a reconfiguração dos controladores, coordenar a ordem de execução 

das operações e auxiliar na reconfiguração do sistema de gerenciamento de alarmes. 

Apresentam também, agentes do tipo Consolidator Agents que confrontam os resultados 

obtidos pelos agentes de análise para chegar a um diagnóstico consolidado, e agentes do tipo 

Fault Tolerance and Recovery Agent, que baseados nas causas das anormalidades 

identificadas e em conhecimentos e experiências anteriores, utilizam planos pré-estabelecidos 

para gerar planos e medidas corretivas. Esses planos e medidas podem ser executados pelos 

Operation and Control Agent ou informadas aos operadores, a fim de executar as operações 

para guiar os processos para um estado seguro. 

 

3.5 Interface com o usuário 

 

Esse aspecto está relacionado à forma como esses sistemas tratam as requisições e 

apresentam as informações para os usuários. Em grande parte das abordagens é utilizado um 

agente específico para essa finalidade, o qual faz a interface entre os usuários e os outros 

agentes do SMA. Dessa forma, esses agentes são responsáveis por gerenciar as interfaces 

gráficas, recebendo as requisições e apresentando as informações para os usuários. As 

informações podem ser apresentadas através de gráficos, e correspondem a informações dos 

equipamentos de medição, os status dos processos e das operações, as informações referentes 

aos diagnósticos das anormalidades, os eventos de alertas, os planos de manutenção e as ações 

corretivas. 



49 

 

 

 

Nas abordagens estudadas, esses agentes são chamados de User Agent (PURVIS; 

CRANEFIELD; NOWOSTAWSKI, 2000), Engineering Assistant Agent (RUDD; 

CATTERSON; MCARTHUR, 2007), e Interaction Agent (YAO et al., 2009). Em algumas 

das abordagens esses agentes agem de forma personalizada, apresentando as informações e os 

alarmes de acordo com o perfil dos usuários e também por meio de diferentes fontes (como e-

mail, SMS, etc.). Entre essas abordagens estão os Distribution Agent (ATHANASIADIS; 

MITKAS, 2004), User Notify Agent (BUNCH et al., 2005), User Interface Agents (NG; 

SRINIVASAN, 2010), Visualization agent e Operating agent (JACKE; SAUER; 

SUTSCHET, 2006). 

 

3.6 Interação entre os agentes 

 

Outro aspecto identificado é a interação entre os agentes, que consiste na definição das 

formas de comunicação entre eles para a troca de recursos e serviços. Dentro desse aspecto, a 

linguagem de comunicação de agentes (discutidas no Capítulo 2, Seção 2.1.5) é responsável 

por garantir a integração dos agentes. Essas linguagens apresentam protocolos comuns para a 

comunicação entre os agentes, e também um vocabulário compartilhado para representar o 

domínio da aplicação. Esse vocabulário, geralmente, é definido com a utilização de uma 

ontologia que é compartilhada entre os agentes da aplicação. Outra característica garantida 

pela linguagem de comunicação é a independência entre os agentes, ou seja, os agentes não 

estão ligados uns aos outros, e assim eles podem encontrar dinamicamente os agentes que 

oferecem os recursos necessários para a realização de suas tarefas. Com isso, a maioria dos 

trabalhos empregam ontologias para definir o vocabulário utilizado na comunicação entres os 

agentes. No trabalho de Athanasiadis e colegas (2004) é definido uma ontologia de domínio 

para a comunicação entre os agentes. Dessa forma, o conteúdo das mensagens trocadas pelos 

agentes é estruturado de acordo com os conceitos do sistema definidos na ontologia. Também, 

no trabalho de Hossack e colegas (2003) é utilizado uma ontologia para definir o conteúdo das 

mensagens, onde essa ontologia define todos os termos envolvidos no sistema, como os 

dispositivos, os eventos, as falhas, entre outros.  

Em aplicações que trabalham com fluxos de dados em tempo real são utilizados 

estratégias para reduzir e otimizar a comunicação entre os agentes. Uma dessas estratégias, 



50 

 

 

 

que é utilizada por algumas abordagens (HOSSACK et al., 2003; BUNCH et al., 2004), 

consiste na utilização do paradigma de comunicação publish-subscribe (EUGSTER et al., 

2003). Nesse paradigma os agentes que utilizam os dados para análise e interpretação 

(subscribers) registram seu interesse, por essas informações, nos agentes publicadores 

(publishers), que a partir daí passam a enviar essas informações para os agentes subscribers, 

sempre que novas informações são coletadas. Dessa forma, os agentes subscribers não 

precisam requisitar constantemente as informação necessárias para os outros agentes, ao invés 

disso sempre que as informações de seu interesse estiverem disponíveis ele será notificado. 

 

3.7 Organização dos agentes 

 

Outro aspecto que foi analisado trata da organização dos agentes que compõem os 

SMAs. Essa organização reflete na arquitetura do SMA, ou seja, a forma como os agentes 

estão distribuídos, a interação entre eles e também entre os componentes externos. Nas 

abordagens analisadas foram identificados três tipos de estruturas usadas para a organização 

dos agentes: SMAs onde os agentes não apresentavam uma organização, SMAs onde os 

agentes estavam organizados em camadas, e SMAs formados por subsistemas. 

Na primeira forma, os agentes apresentam papéis específicos e estão relacionados de 

acordo com suas funcionalidades. Nessas abordagens os agentes não estão ligados 

diretamente, assim os recursos e serviços oferecidos por eles precisam de um meio para serem 

encontrados pelos outros agentes do SMA. Nesse sentido, um recurso muito utilizado por 

essas abordagens consiste em um agente facilitador, também conhecido como Broker, para 

que os agentes do SMA possam registrar e encontrar outros agentes que ofereçam os recursos 

e serviços necessários. Esse agente é responsável por manter um registro dos agentes 

presentes no SMA e a descrição dos recursos e serviços oferecidos por eles. Assim, nessas 

abordagens os agentes da aplicação só precisam conhecer os agentes Broker, e quando 

precisam de algum recurso ou serviço, eles procuram, através do Broker, os agentes 

disponíveis. Esses agentes são conhecidos como agentes utilitários ou corretores (HOSSACK 

et al., 2003; PURVIS; CRANEFIELD; NOWOSTAWSKI, 2000; CAPRETZ; HRYB, 2005). 

Várias plataformas de agentes já apresentam um agente com essas funcionalidades, como as 

plataformas JADE e Jadex, onde são chamados de DF (Directory Facilitator). 



51 

 

 

 

Já em algumas abordagens, os agentes estão organizados em camadas (YAO et al., 

2009; ATHANASIADIS; MITKAS, 2004), onde cada uma determina os papéis 

desempenhados pelos agentes, e a hierarquia que existe entre eles. Com essa organização os 

agentes das camadas inferiores sempre fornecem serviços aos agentes das camadas superiores, 

sendo que na camada mais baixa é realizada a aquisição dos dados. Nas camadas 

intermediarias é realizado o processamento e análise dos dados. E na camada superior é 

realizada a apresentação dos resultados para os usuários.  

A outra forma de organização consiste na divisão do sistema em subsistemas, como 

apresentado no trabalho de Sheremetov e colegas (2004), onde os agentes estão divididos em 

três subsistemas: monitoramento – formado por agentes responsáveis pelo monitoramento das 

situações em tempo real e notificação das situações de emergência; predição – agentes 

responsáveis pelas atividades de prever e diagnosticar a ocorrência de eventos climáticos 

utilizando modelos matemáticos; e, planejamento logístico – agentes responsáveis por gerar 

os planos necessários para a evacuação durante eventos de riscos. 

 

3.8 Síntese dos trabalhos estudados 

 

Na análise desses trabalhos foi possível identificar os principais aspectos encontrados 

em SMAs voltados para a supervisão e controle de processos. Com isso, foi observado que 

alguns sistemas apresentam várias características em comum, e outras que são específicas do 

domínio da aplicação para a qual foram propostos. Nas abordagens que os sistemas 

apresentam características comuns foram identificados agentes que desempenham as mesmas 

funções, embora apareçam com nomes diferentes. 

Nesse sentido, baseado nos aspectos analisados e nas tarefas desempenhadas por cada 

um dos agentes foi definido um conjunto de papéis com o objetivo de classificar os agentes de 

acordo com suas principais funções e capacidades dentro do SMA. Esses papéis separam os 

agentes de acordo com as atividades relacionadas à supervisão e controle dos processos. Esses 

papéis são utilizados na especificação da arquitetura proposta, apresentada no Capítulo 4, 

onde são descritos com mais detalhes. A seguir é apresentado cada um desses papéis e suas 

principais características. 



52 

 

 

 

? Gerenciador de Recurso – representa os agentes responsáveis pela integração de 

componentes. Os agentes com esse papel têm como principal função fornecer 

acesso aos recursos externos para os outros agentes do SMA; 

? Gerenciador de Interface com o Usuário – representa os agentes responsáveis por 

fazer a interação com os usuários. A principal função dos agentes com esse papel 

consiste em realizar a interface entre o SMA e os usuários, tratando as requisições, 

apresentando as informações e gerenciando as interfaces gráficas; 

? Monitor – representa os agentes responsáveis pelas atividades de monitoramento, 

processamento e análise de dados. As funções dos agentes com esse papel envolve 

monitorar os processos e analisar os dados e informações, a fim de identificar e 

prever a ocorrência de anormalidades; 

? Supervisor – representa os agentes encarregados da coordenação e planejamento 

das tarefas. As atividades dos agentes com esse papel envolvem a coordenação dos 

outros agentes na realização de suas atividades, consolidação dos resultados 

obtidos, e também a geração dos planos e das medidas necessárias para o 

gerenciamento e o controle dos processos; 

? Controlador – representa os agentes responsáveis pelo controle dos processos. Os 

agentes com esse papel têm como atividades realizar o controle dos processos, 

através da execução de operações e ações de comando em dispositivos como 

controladores, válvulas, atuadores, e outros sistemas controladores; 

? Gerenciador de Conhecimento – representa os agentes responsáveis por gerenciar 

o conhecimento utilizado pelo SMA. Os agentes com esse papel devem ser capazes 

de lidar com as bases e as fontes de conhecimento utilizadas para o gerenciamento 

dos processos e dos componentes envolvidos, assim como para a interação entre os 

agentes da aplicação; 

? Facilitador – representa os agentes responsáveis por manter o registro dos agentes 

e dos serviços presentes no SMA. Os agentes com esse papel possuem mecanismos 

para gerenciar o registro e a descoberta dos agentes, assim como os recursos e os 

serviços oferecidos; 

Na Tabela 1 é apresentada uma síntese com a relação dos agentes dos principais 

trabalhos estudados com o conjunto de papéis definidos. Uma versão mais detalhadas desse 

relacionamento pode ser encontrada no Apêndice A. 



53 

 

 

 

Tabela 1 – Síntese dos papeis definidos e a relação de agentes. 

Papéis Relação de agentes classificados com o papel 

Gerenciador de Recurso 13 

Monitor 10 

Gerenciador de Interface com o Usuário 8 

Controlador 4 

Supervisor 9 

Facilitador 3 

Gerenciador de Conhecimento 3 

 

Analisando a Tabela 1 é possível notar que agentes com o papel Gerenciador de 

Recurso estão presentes na maioria das abordagens. Isso se deve ao fato de que todos os 

trabalhos apresentam a necessidade de integração de componentes e sistemas legados, onde a 

abordagem de SMA tem sido muito utilizada. Com a utilização desses agentes, os outros 

agentes do SMA podem acessar facilmente os recursos externos. 

A grande presença de agentes com o papel Monitor se deve ao fato da maioria dos 

trabalhos analisados tratarem dos aspectos de monitoramento e de análise de dados, sendo que 

em várias dessas abordagens são utilizados mais de um método para a análise dos dados. 

Os agentes com o papel Gerenciador de Interface com o Usuário, também estão 

presentes na maioria das aplicações. Esses agentes estão presentes nos sistemas que possuem 

interfaces gráficas e são utilizados principalmente para o gerenciamento dessas interfaces e 

para interação com os usuários. Assim como os agentes com o papel Gerenciador de Recurso 

Resource, esses agentes também fazem a interface entre os agentes do SMA e os componentes 

externos, que nesse caso podem ser sistemas e dispositivos de visualização. Entretanto, eles 

são representados por papéis diferentes pelo fato desses agentes apresentarem características 

de assistentes pessoais, como a personalização de conteúdo. 

Os agentes com o papel Supervisor também estão presentes na maioria das abordagens, 

onde são responsáveis pelas atividades de coordenação e supervisão. Esses agentes tem um 

papel importante nesses sistemas, sendo responsáveis por coordenar os agentes de 

monitoramento e de análise na obtenção dos diagnósticos e posteriormente na consolidação 

dos resultados obtidos. Em outras abordagens que também lidam com o controle dos 

processos, estes agentes são responsáveis pela supervisão dos processos, gerando os planos de 

ações e as medidas corretivas. 



54 

 

 

 

Já os agentes responsáveis por executar as ações de controle, representados pelo papel 

Controlador, estão presentes em apenas alguns sistemas. Isso se deve ao fato de que apenas 

algumas das aplicações analisadas executam o controle automático dos processos, sendo que 

na maioria das abordagens os usuários tomam as ações necessárias, manualmente. 

Os agentes com o papel de Facilitador são citados apenas em algumas abordagens. Em 

algumas abordagens esses agentes são implementados, enquanto em outras são utilizadas as 

implementações fornecidas pelas plataformas de agentes utilizadas para o desenvolvimento do 

SMA. Os serviços oferecidos por esses agentes aumentam a interoperabilidade, flexibilidade e 

escalabilidade do sistema, permitindo que agentes entrem ou saiam do SMA sem afetar a 

estrutura de toda a aplicação. 

Os agentes com o papel Gerenciador de Conhecimento estão presentes em apenas três 

trabalhos. Nesses trabalhos esses agentes são responsáveis por gerenciar as bases de 

conhecimento e as regras que podem ser utilizadas para especificar os componentes 

envolvidos, comportamentos dos processos, também na coordenação dos agentes, 

gerenciamento dos processos e no planejamento. Na maioria das outras abordagens é comum 

encontrar apenas a utilização de ontologias para descrever o domínio da aplicação, usadas 

principalmente para a comunicação entre os agentes. Nessas abordagens não há um agente 

específico para gerenciar o conhecimento. 

 

3.9 Considerações e discussões 

 

Na academia a abordagem de SMA já está bem difundida, existindo várias propostas e 

estudos de casos. Entretanto, em aplicações reais o uso dos agentes ainda é muito limitado, 

principalmente pela falta de exemplos da sua utilização. Nos trabalhos analisados foi possível 

identificar algumas abordagens que relatam a utilização de SMAs para o desenvolvimento de 

sistemas em vários domínios diferentes. Geralmente, essas aplicações são usadas para 

gerenciar grandes quantidades de informações, monitorar e/ou controlar processos, detectar 

anormalidades, auxiliar profissionais em situações de tomada de decisões, automatizar a 

execução de tarefas, entre outras atividades. 



55 

 

 

 

Um outro aspecto interessante identificado na análise dos trabalhos é que a grande 

maioria das arquiteturas são desenvolvidas de uma forma ad-hoc, ou seja, sem a utilização de 

uma metodologia de engenharia de software para determinar os agentes e seus papéis no 

sistema. Isso ocorre principalmente devido ao fato de não existir metodologias consolidadas e 

amplamente aceitas pela comunidade, como também não fornecerem um suporte completo 

para o desenvolvimento de SMAs (LUCK et al., 2005; BORDINI et al., 2006; WEYNS; 

PARUNAK; SHEHORY, 2008). 

Em relação à organização dos SMAs analisados, principalmente nas abordagens onde os 

agentes são organizados em camadas, é possível notar que os agentes que interagem com os 

componentes físicos, principalmente com dispositivos de entrada e saída, demandam um 

tempo de resposta mais rápido, e por isso costumam apresentar um comportamento mais 

reativo. Por outro lado, quanto mais informações de alto nível o agente trabalha, mais são 

exigidas características cognitivas para o planejamento e a tomadas de decisões. 

Considerando os aspectos analisados foi possível concluir que os principais motivos que 

levam à utilização da tecnologia de agentes, nesses trabalhos, estão relacionados à 

infraestrutura flexível, escalável, distribuída e aberta que os SMAs proporcionam. Essa 

infraestrutura permite a integração de sistemas de software existentes, heterogêneos, assim 

como, com novos sistemas e também a adição de novas funcionalidades, sem a necessidade 

da reconstrução do sistema utilizando novas tecnologias, e fazendo isso com o mínimo de 

invasão a integridade desses sistemas (CAPRETZ; HRYB, 2005). Também, a autonomia 

apresentada pelos agentes permite um melhor gerenciamento, controle e integração dos 

diversos componentes envolvidos nesses ambientes. 

Com esse estudo foi possível identificar os principais aspectos e requisitos de aplicações 

voltadas para o domínio de supervisão e controle de processos. Esse estudo também levou à 

identificação das capacidades, responsabilidades e comportamentos dos agentes na realização 

das tarefas de supervisão e controle, os quais foram organizados em um conjunto de papéis. 

Esses papéis foram utilizados como base para a definição da arquitetura de referência 

proposta, que é apresentada no próximo capítulo. 

  



56 

 

 

 

4 ARQUITETURA MULTIAGENTE PARA SUPERVISÃO E 

CONTROLE 

 

Neste capítulo é apresentada a arquitetura de referência, proposta para servir como base 

para o desenvolvimento de sistemas para a supervisão e controle de processos. Essa 

arquitetura de referência foi definida com base nos resultados da análise dos trabalhos 

estudados no Capítulo 3, e divide a aplicação em três camadas, as quais separam os 

componentes responsáveis pelas interfaces gráficas na camada de Apresentação, os 

componentes responsáveis pela lógica de negócio na camada Sistema Multiagente, e os 

recursos na camada de Dados e Serviços. 

As próximas seções apresentam a organização de cada uma dessas camadas em relação 

a seus componentes e a interação entre eles. Uma atenção especial é dada a camada Sistema 

Multiagente, onde é definido um conjunto de agentes responsáveis por desempenhar as tarefas 

de supervisão e controle dos processos. Cada um desses agentes é especificado em função do 

papel que desempenha na aplicação, suas responsabilidades e relacionamentos. 

 

4.1 Visão geral da arquitetura de referência 

 

A arquitetura de referência foi definida com base nos resultados da análise dos trabalhos 

estudados no Capítulo 3. Na Figura 10 é apresentada uma visão geral da arquitetura proposta, 

que está dividida em três camadas: 

? Camada de Apresentação – constituída pelas interfaces gráficas e pelos 

componentes que tratam a lógica de apresentação, responsáveis por apresentar aos 

usuários as funcionalidades e os recursos da aplicação. Através das interfaces 

gráficas os usuários podem interagir com a aplicação a fim de supervisionar e 

controlar os diversos processos envolvidos. Essas interfaces podem ser 

personalizadas e também visualizadas por meio de diferentes dispositivos de 

visualização;  

? Camada Sistema Multiagente – formada por um conjunto de agentes que 

implementam a lógica de negócio da aplicação. Os agentes desempenham 



57 

 

 

 

diferentes papéis dentro da aplicação, onde cada um é responsável por executar 

tarefas específicas que contribuem para a automação da supervisão e do controle 

dos processos. Na arquitetura foram definidos sete papéis que podem ser 

desempenhados por um ou mais agentes (Figura 10). Esses papéis definem os 

comportamentos dos agentes e seus relacionamentos para realizar tarefas como a 

integração, o monitoramento e a análise de dados, a fim de identificar situações 

indesejadas e com isso emitir alarmes e notificações para que as medidas 

necessárias possam ser tomadas; 

? Camada de Dados e Serviços – representa os recursos utilizados pela aplicação. 

Esses recursos podem ser desde bases de dados, até sistemas provedores de dados 

de terceiros, como também bases de conhecimento e outros sistemas legados que 

fornecem algum serviço utilizado na aplicação. Esses recursos são utilizados pelos 

agentes através da implementação das interfaces de acesso aos sistemas que 

gerenciam esses recursos. 

 

 

Figura 10 – Visão geral da arquitetura proposta. 

 



58 

 

 

 

Na Figura 10, na camada Sistema Multiagente são apresentados os papéis que os 

agentes podem desempenhar na aplicação e também sua organização. Esses papéis foram 

definidos de acordo com o estudo apresentado no Capítulo 3. Dependendo da necessidade e 

da complexidade da aplicação pode haver vários agentes desempenhando o mesmo papel, 

onde cada um é responsável por atividades específicas de acordo com o papel assumido. Por 

exemplo, podem existir vários agentes com o papel de Gerenciador de Recurso, onde cada um 

é responsável por oferecer acesso aos recursos de diferentes fontes. Da mesma forma, pode 

haver mais de um agente desempenhando o papel Monitor, onde cada um é responsável pelo 

monitoramento de um processo. Cada um desses papéis e seus comportamentos são 

apresentados em detalhes na Seção 4.5. 

Na arquitetura proposta, os agentes também são responsáveis por integrar os 

componentes das outras camadas, a fim de obter as informações necessárias para executar a 

lógica de negócio da aplicação. Com isso, os agentes Gerenciadores de Interface com o 

Usuário são responsáveis por fazer a interface com os componentes da camada de 

Apresentação, atendendo as requisições e fornecendo as informações a serem apresentadas 

aos usuários. Enquanto os agentes Gerenciadores de Recurso, Controladores e Gerenciadores 

de Conhecimento acessam os recursos externos, presentes na camada de Dados e Serviços, 

recuperando e disponibilizando esses recursos aos outros agentes do SMA. 

A seguir é detalhada a estrutura de cada uma das camadas da arquitetura. 

 

4.2 Camada de Apresentação 

 

Na camada de Apresentação são implementados os componentes necessários para 

gerenciar as interações entre os usuários e a aplicação, os quais são responsáveis por controlar 

toda a parte visual da aplicação. Assim, os componentes presentes nessa camada são: as 

interfaces gráficas (GUIs – Graphical User Interfaces) que expõem as funcionalidades da 

aplicação aos usuários; os componentes de controle que gerenciam essas interfaces e a 

interação com o usuário; e os componentes necessários para fazer a comunicação com os 

agentes, na camada Sistema Multiagente. 



59 

 

 

 

Na arquitetura proposta, essa camada é especificada seguindo a estrutura de uma 

aplicação Web. Aplicações desse tipo têm ganhado cada vez mais espaço entre os sistemas de 

software, principalmente, devido ao aumento nas facilidades e velocidades de acesso a 

internet, e também aos avanços nos dispositivos como notebooks, tablets, smartphones, etc. 

Essas aplicações são executadas em um servidor Web e têm suas funcionalidades expostas por 

meio de um conjunto de interfaces Web que podem ser visualizadas utilizando um navegador. 

Para a organização dos componentes dessa camada é adotado o padrão arquitetural 

MVC (Model-View-Controller) (BUSCHMANN et al., 1996). Esse padrão é usado em muitas 

aplicações Web para melhorar a organização da aplicação, separando a lógica de apresentação 

da lógica de negócio, permitindo que ambas possam ser desenvolvidas e mantidas de forma 

independente. Na Figura 11 é apresentada a estrutura da camada de Apresentação, baseada no 

padrão MVC. 

 

Figura 11 – Estrutura da camada de Apresentação. 

 

Utilizando o padrão MVC, os componentes dessa camada são organizados em: 

? Modelo – formado pelos componentes que gerenciam a representação das informações e 

as operações sobre elas; 

? Visão – formada pelas interfaces gráficas e pelos componentes que gerenciam as 

informações dessas interfaces; 

? Controlador – formado pelos componentes responsáveis por receber e interpretar as 

requisições do usuário, e tomar as ações necessárias para responder essas requisições. 



60 

 

 

 

Assim, em uma aplicação Web organizada segundo o padrão MVC, o Controlador 

recebe como entrada as requisições do usuário e determina como tratá-las, invocando os 

componentes do Modelo para aplicar as regras de negócio. Ao final, o Controlador seleciona 

uma visão onde esses resultados são apresentados ao usuário. 

Nessa arquitetura, o Modelo é formado pelos componentes responsáveis por fazer a 

comunicação com a camada Sistema Multiagente. Esses componentes delegam as requisições 

dos usuários para os agentes do SMA, os agentes processam essas requisições e enviam os 

resultados de volta para esses componentes. Com esses resultados, os componentes do 

Modelo atualizam as informações da aplicação e notificam o Controlador que carrega as 

interfaces gráficas para apresentar a resposta ao usuário. Na camada Sistema Multiagente, os 

agentes com o papel Gerenciador de Interface com o Usuário são os responsáveis por fazer a 

comunicação com esses componentes. 

Dado que os componentes da camada de Apresentação e os agentes da camada Sistema 

Multiagente são desenvolvidos de forma separada e independente é preciso à definição e o 

desenvolvimento de interfaces para realizar a comunicação entre os componentes dessas 

camadas. Enquanto a camada de Apresentação é executada diretamente em um servidor de 

aplicação, os agentes são executados em uma plataforma de agentes. Nesse trabalho, a 

abordagem proposta para a comunicação entre os componentes da camada de Apresentação e 

os agentes do SMA é baseada no modelo apresentado no trabalho de Pokahr e Braubach 

(2008), onde é proposta uma forma para a integração de uma aplicação Web, baseada no 

padrão MVC, com um SMA executado na plataforma de agentes Jadex. Nessa abordagem a 

comunicação é feita através de mensagens codificadas no formato XML que são transmitidas 

sobre uma conexão TCP/IP.  

Para garantir a interoperabilidade entre os diferentes componentes, nessa arquitetura é 

proposta a utilização de ontologias para descrever o conteúdo das mensagens trocadas tanto 

entre os agentes como também entre um agente e outro componente. Nesse caso, as 

ontologias devem ser compartilhadas, ou seja, todos os componentes devem ter acesso a elas. 

Um exemplo de uma ontologia é apresentado no estudo de caso, no Capítulo 5. 

 

 



61 

 

 

 

4.3 Camada Sistema Multiagente 

 

Na camada Sistema Multiagente são implementados os componentes responsáveis por 

toda a lógica de negócio da aplicação. Esses componentes correspondem a um conjunto de 

agentes que podem desempenhar sete papéis diferentes dentro da aplicação, esses papéis são 

especificados na Seção 4.5. Os agentes, além de implementar e executar as funcionalidades da 

aplicação, são responsáveis por integrar os componentes das outras camadas, atendendo as 

requisições dos usuários e integrando os dados, serviços e sistemas necessários para 

desempenhar suas tarefas. 

Na arquitetura proposta, assume-se que os agentes são executados sobre uma plataforma 

de agentes (apresentada na seção 2.1.6.2) a qual dispõe de toda a infraestrutura e recursos 

necessários para sua execução. Na Figura 12 é apresentada a estrutura da camada Sistema 

Multiagente, onde os principais componentes são a plataforma e os agentes. 

 

Figura 12 – Estrutura da camada Sistema Multiagente. 

 

Na Figura 12, os componentes chamados AMS e DF representam agentes que fazem 

parte das plataformas de agentes e oferecem os serviços básicos para o gerenciamento do 

SMA, enquanto os componentes, chamados Agente, representam os agentes da aplicação. 

Em geral, os agentes podem ser executados em mais de uma plataforma de agentes, as 

quais podem estar localizadas em diferentes máquinas distribuídas pela rede. Com isso os 

agentes do SMA podem estar localizados em um servidor de aplicação junto com a camada de 



62 

 

 

 

Apresentação, como também podem estar distribuídos em diferentes servidores. Na Figura 12 

as setas tracejadas indicam a interação que pode existir entre os agentes, de forma que a 

comunicação para a troca de informação entre eles é feita através do serviço de transporte de 

mensagens (MTS) oferecido pelas plataformas de agentes. 

Para se comunicar com os componentes das outras camadas, os agentes devem 

implementar as interfaces de comunicações necessárias. Com essas interfaces os agentes têm 

acesso às bases de dados da aplicação, aos serviços e sistemas legados, e também fazem a 

comunicação com os componentes da camada de Apresentação. 

Na Seção 4.5 são especificados os papéis que os agentes podem desempenhar e a 

organização do SMA em termos das interações existentes entre os agentes. 

 

4.4 Camada de Dados e Serviços 

 

Na camada de Dados e Serviços estão os recursos internos e externos da aplicação. 

Esses recursos representam desde repositórios de dados e de conhecimento, até serviços e 

outros sistemas legados utilizados pela aplicação. Todos esses recursos podem estar 

disponíveis localmente ou distribuídos e para acessá-los, os agentes devem implementar as 

interfaces de comunicação necessárias. Na Figura 13 é apresentada a estrutura da camada de 

Dados e Serviços e a organização dos componentes.  

Nessa camada, o componente Sistemas legados representa os sistemas existentes, 

externos à aplicação, mas que oferecem recursos e serviços úteis. No contexto dessa 

arquitetura, esses sistemas correspondem principalmente aos sistemas de aquisição ou 

provedores de dados que fornecem os dados dos processos, sistemas de controle, 

equipamentos de instrumentação como sensores, e também outros sistemas que implementam 

os métodos usados para o processamento e análise dos dados. 

O componente Repositórios de dados representa as bases de dados da aplicação, que 

mantém os dados e as informações utilizados na aplicação, fornecendo os serviços de 

armazenamento e consulta. Nessa aplicação, esses dados vão desde informações do usuário, 

até os registros gerados pelos agentes durante a supervisão dos processos. 



63 

 

 

 

 

Figura 13 – Estrutura da camada de Dados e Serviços. 

 

O componente Repositório semântico representa um recurso interno da aplicação e é 

responsável por manter todo o conhecimento envolvido, isto é, as informações sobre os 

processos que abrangem desde os parâmetros operacionais até as anormalidades que podem 

ocorrer, e também as informações sobre os agentes e os serviços prestados por eles. Todo esse 

conhecimento é mantido na base de conhecimento da aplicação e são utilizados pelos agentes 

do SMA na execução de suas tarefas. 

Nessa arquitetura, é proposta a utilização de ontologias para dar suporte ao 

compartilhamento e representação formal do conhecimento utilizado na aplicação. As 

ontologias são utilizadas para descrever as informações dando significado a elas através de 

um vocabulário comum, definido por um conjunto de conceitos e relacionamentos. Assim, é 

necessário o desenvolvimento ou a reutilização de ontologias já existentes para descrever os 

conceitos, os processos, as anormalidades supervisionadas e também os agentes. Como já 

discutido na camada de Apresentação (Seção 4.2), as ontologias também são utilizadas como 

um vocabulário para descrever o conteúdo das mensagens trocadas entre os agentes, sendo 

compartilhada entre eles. No estudo de caso, apresentado no Capítulo 5, foram desenvolvidas 

duas ontologias para representar o conhecimento do domínio que é tratado pela aplicação 

desenvolvida. 



64 

 

 

 

Todos os recursos representados nessa camada podem ser acessados diretamente pelos 

agentes através da implementação das interfaces necessárias, ou também utilizando interfaces 

padronizadas, como as definidas pelos serviços Web. Nesse sentido, o componente Serviços 

Web representa os recursos que foram encapsulados como serviços Web, que abstraem a 

lógica necessária para o acesso a esses recursos e expõem suas informações e funcionalidades 

através de interfaces padronizadas, que garantem a independência da linguagem e da 

plataforma utilizada, assim como facilita a reusabilidade. Os serviços ficam registrados em 

um Registro de serviços, o qual mantém a descrição das operações oferecidas, o endereço e o 

protocolo de acesso ao serviço. Esse registro pode ser local ou remoto e através das 

informações mantidas por ele, os agentes podem encontrar e executar esses serviços. 

As ontologias também podem ser utilizadas para fazer a descrição semântica dos 

serviços Web, de forma que se tornem compreensíveis às máquinas, permitindo que agentes 

localizem e utilizem esses serviços de forma automática, minimizando a intervenção humana. 

 

4.5 Especificação dos agentes 

 

Nessa seção são especificados os agentes em função de seus papéis e da sua organização 

dentro da aplicação. Na arquitetura proposta, os agentes podem desempenhar sete papéis, os 

quais definem os comportamentos e os aspectos funcionais que são exibidos por eles, assim 

como a interação entre eles. A seguir são especificados cada um dos papéis e a organização 

social do SMA. 

 

4.5.1 Especificação dos papéis dos agentes 

 

Um papel representa as características e o comportamento social esperados de um 

indivíduo que ocupa uma dada posição dentro de uma organização
14

. Assim, dentro de um 

SMA os papéis determinam as funções e comportamentos que cada agente pode apresentar, 

                                                 

14
 Definição da palavra “role” retirada e traduzida da enciclopédia Britannica. 

http://global.britannica.com/EBchecked/topic/507038/role 



65 

 

 

 

sendo que um agente pode desempenhar um ou mais papéis e que o mesmo papel pode ser 

desempenhado por um ou mais agentes. 

De acordo com o estudo realizado no Capítulo 3, os seguintes papéis foram definidos: 

1) Gerenciador de Recurso 

2) Monitor 

3) Supervisor 

4) Gerenciador de Interface com o Usuário 

5) Controlador 

6) Gerenciador de Conhecimento 

7) Facilitador  

Os nomes escolhidos para cada um deles tenta expressar de forma genérica quais são 

suas funções e capacidades dentro da aplicação. 

Nesse trabalho, os comportamentos e funções dos papéis foram especificados de acordo 

com o modelo de agentes BDI, apresentado no Capítulo 2. Nesse modelo o comportamento 

dos agentes é definido em termos de objetivos, planos e crenças. Para auxiliar na 

especificação e na representação dos papéis foram utilizados alguns conceitos e diagramas 

definidos pela metodologia de desenvolvimento de software orientado a agentes Tropos, que 

suporta o projeto e especificação de agentes BDI. 

 

4.5.1.1 Papel Gerenciador de Recurso 

 

A principal função que caracteriza esse papel é a capacidade de gerenciar o acesso aos 

recursos internos e externos à aplicação e disponibilizá-los para os agentes do SMA utilizando 

um vocabulário comum, compartilhado entre os agentes. Dessa forma, esses agentes são 

responsáveis pela recuperação e integração dos diversos recursos utilizados na aplicação. Os 

recursos internos correspondem aos dados e as informações mantidas nos repositórios de 

dados da aplicação, enquanto os recursos externos correspondem aos dados fornecidos por 

sistemas externos, como sistemas de aquisição ou provedores de dados, e também diretamente 

de dispositivos como sensores e outros equipamentos de medição. Para recuperar esses 

recursos, os agentes que assumirem esse papel devem implementar as interfaces necessárias 



66 

 

 

 

para acessar os sistemas que fornecem esses recursos. Assim, na aplicação pode haver vários 

agentes desempenhando esse papel, onde cada um é responsável por dar acesso a um 

determinado recurso. 

Na arquitetura proposta, os agentes que assumirem esse papel devem apresentar 

capacidades para gerenciar e manter os dados da aplicação, oferecendo serviços para 

armazenar e buscar esses dados. E também, gerenciar os dados dos processos, oferecendo 

serviços para recuperar esses dados e informá-los continuamente aos agentes interessados. 

Uma outra capacidade relacionada as anteriores, envolve registrar os serviços oferecidos, por 

meio de um agente Facilitador, para que os outros agentes do SMA possam encontrar esses 

agentes dinamicamente e utilizar esses serviços. 

Na Figura 14 é apresentado, através do Diagrama de Objetivo da metodologia Tropos, o 

comportamento desse papel em termos dos objetivos, dos planos para alcançá-los e dos 

recursos utilizados. 

 

Figura 14 – Diagrama de Objetivo do papel Gerenciador de Recurso. 

 

No diagrama da Figura 14 é representado os principais objetivos que determinam os 

comportamentos que os agentes devem apresentar: 



67 

 

 

 

? Registrar serv. de dados – determina os planos para registrar e manter 

registrado, em um agente Facilitador, os serviços oferecidos pelo agente; 

? Gerenciar dados app. – determina os planos para atender as requisições de 

outros agentes para consultar e armazenar informações nas bases de dados da 

aplicação; 

? Gerenciar dados dos processos – determina os planos para estabelecer a 

conexão e recuperar os dados dos sistemas que fornecem os dados do processo; 

? Informar dados RT – determina os planos para formatar os dados recuperados, 

de acordo com o vocabulário usado para a comunicação dos agentes, e informá-

los aos agentes assinantes desses serviços; 

? Gerenciar lista assinantes serv. – determina os planos para manter a lista dos 

agentes assinantes do serviço de dados do processo, atendendo as requisições de 

outros agentes para assinar ou cancelar a assinatura desses serviços; 

Uma especificação mais detalhada desses objetivos, assim como dos planos e das outras 

características que definem o comportamento desse papel são apresentados na Tabela 9, que 

pode ser encontrada no Apêndice B.1. 

 

4.5.1.2 Papel Monitor 

 

A principal função que caracteriza esse papel é a capacidade de analisar continuamente 

os dados de um processo, visando determinar os estados e as condições do processo e/ou dos 

equipamentos, identificando e/ou prevendo a ocorrência de anormalidades. Os agentes que 

assumirem o papel de Monitor, também devem emitir alarmes e notificar outros agentes, 

quando forem detectadas condições indesejadas que podem levar o processo para uma 

situação crítica e que precisa ser tratada. 

A atividade de monitoramento consiste na análise dos parâmetros dos processos. Esses 

parâmetros são coletados e fornecidos por diferentes sistemas e dispositivos e são recuperados 

pelos agentes Gerenciadores de Recurso. A análise desses parâmetros abrange desde a simples 

verificação da variação dos valores medidos até a utilização de métodos mais complexos, 

como os de aprendizagem de máquina voltados para o reconhecimento de padrões no 

comportamento desses parâmetros. Esses métodos consistem em algoritmos e rotinas que 



68 

 

 

 

podem ser implementados pelo próprio agente, através da utilização de bibliotecas de código 

existentes, ou por outros sistemas externos que podem ser utilizados pelo agente. Para a 

análise dos dados, também pode ser necessário o pré-processamento dos mesmos para a 

eliminação de ruídos e/ou a extração de características. 

Na aplicação pode haver vários agentes desempenhando esse papel, onde cada um é 

responsável por monitorar parte do processo. Assim, cada operação e/ou equipamento pode 

ser monitorado por um agente Monitor específico, responsável por analisar os parâmetros 

relacionados, a fim de identificar determinadas anormalidades que podem ocorrer nessa 

operação. Por exemplo, um agente Monitor para o sistema de compressão, um para o 

separador e outro para a bomba. Na Figura 15 é apresentado os objetivos que determinam o 

comportamento desse papel de acordo com o modelo BDI. 

 

Figura 15 – Diagrama de Objetivo do papel Monitor. 

 

O comportamento desse papel, apresentada no diagrama da Figura 15, é definido pelos 

seguintes objetivos:  



69 

 

 

 

? Monitorar processo – é responsável por atender as requisições de outros agentes 

para monitorar um processo. Para isso, esse objetivo dispara três sub-objetivos: 

Analisar infos. de monitoramento, Obter dados para analise e Analisar dados 

do processo; 

? Analisar infos. de monitoramento – determina os planos para analisar as 

informações do processo a ser monitorado para determinar os parâmetros e as 

condições de monitoramento;  

? Obter dados para analise – determina os planos para encontrar os agentes 

Gerenciadores de Recurso que fornecem os parâmetros a serem monitorados e 

assinar o serviço de dados desses agentes;  

? Analisar dados do processo – determina os planos para receber os dados do 

processo dos agentes Gerenciadores de Recurso, aplicar o método de análise e 

determinar as condições do processo monitorado; 

? Informar conds. processo – determina os planos para informar as condições do 

processo obtidas como resultado da aplicação do método de análise aos agentes 

assinantes do serviço de monitoramento. E também salvar o registro desses 

resultados na base de dados da aplicação, por meio de requisições ao agente 

Gerenciador de Recurso responsável; 

? Informar Detecção anorm. – determina os planos para notificar a detecção da 

ocorrência de uma anormalidade para o agente Supervisor que requisitou o 

monitoramento do processo. Assim como o objetivo anterior, o registro dessa 

ocorrência deve ser salvo na base de dados da aplicação para consultas 

posteriores; 

? Gerenciar lista assinantes serv. – determina os planos para manter a lista dos 

agentes assinantes do serviço de monitoramento, atendendo as requisições de 

outros agentes para assinar ou cancelar a assinatura desses serviços; 

? Registrar serv. monitoramento – determina os planos para registrar e manter 

registrado, em um agente Facilitador, os serviços oferecidos pelo agente. 

Mais informações sobre os objetivos e as outras características que definem o 

comportamento desse papel são apresentados na Tabela 10, encontrada no Apêndice B.2. 

 



70 

 

 

 

4.5.1.3 Papel Supervisor 

 

A principal função que caracteriza esse papel é a capacidade de coordenar os agentes 

Monitores e Controladores na realização das tarefas de supervisão e controle dos processos. 

Assim, o agente que assumir o papel de Supervisor deve ser capaz de seguir as estratégias de 

negócio da aplicação, executando as tarefas necessárias para inicializar e manter o SMA 

funcionando. Dependendo da complexidade da aplicação, um único agente, com o papel de 

Supervisor, é suficiente para gerenciar todo o SMA, mas em outros casos a aplicação pode ser 

dividida, onde cada agente Supervisor fica responsável por gerenciar um conjunto de 

processos. 

A função de coordenação, desempenhada pelo agente Supervisor, envolve as tarefas 

necessárias para coordenar os agentes com o papel Monitor, no monitoramento dos processos 

e na identificação das anormalidades, e os agentes com o papel Controlador, na execução dos 

planos e ações de controle. Outro comportamento definido por esse papel envolve integrar as 

informações parciais sobre a ocorrência de anormalidades, geradas pelos agentes Monitores. 

Desta forma podem existir dois agentes Monitores monitorando o mesmo processo, mas 

utilizando métodos de análise diferentes. Nessas condições é responsabilidade do agente 

Supervisor consolidar as informações desses agentes para gerar os diagnósticos das 

anormalidades. Os diagnósticos devem ser notificados aos agentes assinantes do serviço de 

supervisão, e devem apresentar informações como as possíveis causas, consequências e 

medidas corretivas. 

Além do diagnóstico, o agente Supervisor deve apresentar capacidades para determinar 

e executar os planos de recuperação e medidas corretivas, através de requisições aos agentes 

Controladores. Os agentes Supervisores também devem possuir mecanismos para se adaptar a 

mudanças nas condições de supervisão dos processos que podem ser realizadas pelos 

usuários. Todas as informações sobre os processos são mantidas na base de conhecimento da 

aplicação, assim alterações nesse conhecimento devem ser notificadas pelo agente 

Gerenciador de Conhecimento responsável. 

Na Figura 16 é apresentado o Diagrama de Objetivo do papel Supervisor. 



71 

 

 

 

 

Figura 16 – Diagrama de Objetivo do papel Supervisor. 

 

O comportamento desse papel, apresentado no diagrama da Figura 16, é definido pelos 

seguintes objetivos: 

? Supervisionar processos – é responsável pela inicialização e manutenção das 

atividades de monitoramento e controle dos processos. Para isso, esse objetivo 

dispara cinco sub-objetivos: Obter infos. dos processos, Analisar infos. dos 

processos, Gerenciar Recursos, Gerenciar monitoramento e Gerenciar controle. 

Esse objetivo também é responsável por tratar as notificações do agente 

Gerenciador de Conhecimento, responsável pela base de conhecimento da 

aplicação, sobre mudanças nas informações do processo, a fim de tratar essas 

mudanças, realizando as adaptações necessárias; 

? Obter infos. dos processos – determina os planos para obter as informações 

sobre os processos, as anormalidades e os agentes, necessárias para a realização 

da supervisão e controle. Essas informações são obtidas através de consultas na 

base de conhecimento, por meio de requisições ao agente Gerenciador de 

Conhecimento responsável; 

? Analisar infos. dos processos – determina os planos para analisar as informações 

relacionadas ao processo para determinar os agentes Gerenciadores de Recurso, 



72 

 

 

 

Monitores e Controladores que devem ser inicializados para desempenhar as 

atividades necessárias;  

? Gerenciar Recursos – determina os planos para inicializar os agentes 

Gerenciadores de Recurso que fornecem os dados dos processos envolvidos;  

? Gerenciar monitoramento – determina os planos para inicializar e coordenar os 

agentes Monitores necessários para monitorar os processos envolvidos;  

? Gerenciar controle – determina os planos para inicializar e coordenar os agentes 

Controladores necessários para controlar os processos envolvidos;  

? Notificar assinantes supervisão – determina os planos para enviar aos agentes 

assinantes do serviço de supervisão as informações relacionadas à supervisão e 

controle dos processos, como por exemplo, informar quais os agentes 

Gerenciadores de Recurso, Monitores e Controladores envolvidos;  

? Tratar anormalidades – é responsável pelo tratamento das anormalidades 

identificadas, gerando o diagnóstico, os planos de recuperação e tomando as 

ações necessárias para tratar esses eventos. Para isso, esse objetivo dispara três 

sub-objetivos: Consolidar anormalidade, Diagnosticar e Obter planos de 

recuperação; 

? Consolidar anormalidade – determina os planos para integrar e consolidar as 

informações sobre as anormalidades detectadas pelos agentes Monitores;  

? Diagnosticar – determina os planos para gerar o diagnóstico da anormalidade 

identificada e informá-lo aos agentes assinantes do serviço de supervisão, para 

isso são utilizadas as informações mantidas na base de conhecimento da 

aplicação;  

? Obter planos de recuperação – determina os planos para obter os planos de 

recuperação que podem ser aplicados para resolver determinada anormalidade. 

Esses planos podem ser informados aos agentes assinantes do serviço de 

supervisão e/ou aplicados através de requisições aos agentes Controladores; 

? Gerenciar lista assinantes serv. – determina os planos para manter a lista dos 

agentes assinantes do serviço de supervisão, atendendo as requisições de outros 

agentes para assinar ou cancelar a assinatura a esses serviços; 

? Registrar serv. supervisão – determina os planos para registrar e manter 

registrado, em um agente Facilitador, os serviços oferecidos pelo agente. 



73 

 

 

 

Mais informações sobre os objetivos e outras características que definem o 

comportamento desse papel são apresentadas na Tabela 12, encontrada no Apêndice B.4. 

 

4.5.1.4 Papel Gerenciador de Interface com o Usuário 

 

A principal função que caracteriza esse papel é a capacidade de fazer a interface entre 

os componentes da camada de Apresentação e o SMA, recebendo as requisições dessa 

camada e interagindo com os outros agentes para obter as informações de interesse do usuário 

e atender suas requisições. 

Para cada novo usuário na aplicação um agente com esse papel deve ser criado com seu 

respectivo perfil, esse perfil está relacionado às atividades de supervisão e controle dos 

processos. Assim, outra função desse papel envolve as capacidades para gerenciar o perfil e as 

preferências do usuário, apresentando as informações e notificando-o de acordo com seus 

interesses, agindo de forma personalizada e diminuindo a sobrecarga de informações. 

Na Figura 17 é apresentado o Diagrama de Objetivo do papel Gerenciador de Interface 

com o Usuário. 

 

Figura 17 – Diagrama de Objetivo do papel Gerenciador de Interface com o Usuário. 



74 

 

 

 

O comportamento desse papel, apresentado no diagrama da Figura 17, é definido pelos 

seguintes objetivos:  

? Gerenciar usuários – determina os planos para atender as requisições de acesso 

do usuário, validando as informações cadastrais e permitindo o acesso e a 

utilização do sistema; 

? Gerenciar infos. de interesse – é responsável por analisar o perfil do usuário 

para determinar seus interesses e com isso, encontrar e requisitar aos outros 

agentes da aplicação, os recursos e os serviços relacionados a supervisão e 

controle dos processos. Para isso, esse objetivo dispara quatro sub-objetivos: 

Analisar perfil, Obter infos. supervisão, Obter infos. de monitoramento e Obter 

dados do processo;  

? Analisar perfil – determina os planos para analisar o perfil do usuário e 

determinar os recursos e serviços de interesse; 

? Obter infos. supervisão – determina os planos para encontrar o agente 

Supervisor responsável pela supervisão dos processos de interesse do usuário e 

assinar os serviços desse agente para receber as informações sobre a supervisão; 

? Obter infos. de monitoramento – determina os planos para encontrar os agentes 

Monitores responsáveis pelo monitoramento dos processos e assinar os serviços 

de monitoramento para receber as informações sobre as condições dos 

processos; 

? Obter dados do processo – determina os planos para encontrar os agentes 

Gerenciadores de Recurso responsáveis pela recuperação dos dados dos 

processos e assinar os serviços de dados para receber os parâmetros operacionais 

coletado nos processos; 

? Apresentar params. monitoramento – determina os planos para receber os dados 

dos processos monitorados dos agentes Gerenciadores de Recurso e enviá-los 

para a camada de Apresentação para serem apresentados aos usuários; 

? Apresentar cond. processo – determina os planos para receber as informações, 

sobre as condições dos processos monitorados, dos agentes Monitores e enviá-

las para a camada de Apresentação para serem apresentadas aos usuários; 

? Apresentar alertas – determina os planos para receber os alertas e diagnósticos 

sobre as anormalidades identificadas durante o processo e enviar essas 



75 

 

 

 

informações para a camada de Apresentação para serem apresentadas aos 

usuários; 

? Atender requisições – determina os planos para atender as requisições dos 

usuários para a consulta de recursos e execução de tarefas, como por exemplo, 

requisições para consultar dados da aplicação, definir ou alterar as informações 

dos processos, solicitar ações de controle, entre outras. 

Outras informações sobre os objetivos e também outras características que definem o 

comportamento desse papel são apresentados na Tabela 11, encontrada no Apêndice B.3. 

 

4.5.1.5 Papel Controlador 

 

A principal função que caracteriza esse papel é a capacidade de atuar no funcionamento 

dos processos, através da execução de ações de controle para modificar as condições de 

operação dos equipamentos. Esses agentes podem realizar o controle agindo diretamente nos 

dispositivos e nos equipamentos controladores ou também por meio de sistemas 

controladores. Para isso, os agentes que assumirem esse papel devem implementar as 

interfaces de comunicação com esses dispositivos e sistemas. Com isso, em uma aplicação 

pode haver vários agentes desempenhando esse papel, onde cada um é responsável pelo 

controle de determinados dispositivos ou equipamentos. 

Agentes com esse papel podem agir como controladores de dispositivos, monitorando e 

mantendo os valores dos parâmetros de controle dentro dos intervalos estabelecidos, ou 

apenas realizar mudanças nas configurações dos parâmetros de controle ou então executar 

ações de controle específicas. Essas ações podem estar organizadas em planos de controle, 

onde cada plano é direcionado para determinadas situações, de forma que esses agentes sejam 

capazes de executar esses planos quando necessário ou mesmo a partir de requisições dos 

usuários. Esses planos de controle, assim como as informações dos processos e 

anormalidades, podem ser descritos através de uma ontologia. 

Na Figura 18 é apresentado o Diagrama de Objetivo do papel Controlador. 



76 

 

 

 

 

Figura 18 – Diagrama de Objetivo do papel Controlador. 

O comportamento desse papel, apresentado no diagrama da Figura 18, é definido pelos 

seguintes objetivos: 

? Controlar processo – determina os planos para estabelecer a comunicação com 

um dispositivo ou sistema de controle para executar um plano de controle, a fim 

de manter os processos dentro das condições definidas nesse plano; 

? Tratar requisições de controle – determina os planos para atender as requisições 

para definir ou modificar as configurações dos parâmetros de controle ou 

executar ações de controle específicas; 

? Registrar serv. controle – determina os planos para registrar e manter registrado, 

em um agente Facilitador, os serviços oferecidos pelo agente. 

Mais detalhes sobre os objetivos, planos, assim como as outras características que 

definem o comportamento desse papel são apresentados na Tabela 13, encontrada no 

Apêndice B.5. 

 

4.5.1.6 Papel Gerenciador de Conhecimento 

 

A principal função que caracteriza esse papel é a capacidade de gerenciar o 

conhecimento utilizado na aplicação. Esse conhecimento, mantido no Repositório Semântico, 

pode ser estruturado utilizando ontologias e definido por especialistas do domínio da 



77 

 

 

 

aplicação. No conhecimento estão descritos os conceitos relacionados ao ambiente da 

aplicação que é utilizado para a supervisão e controle dos processos, monitoramento dos 

parâmetros operacionais e identificação das anormalidades, além de descrever as interfaces de 

comunicação e expor as capacidades dos agentes. 

 O agente que assumir o papel de Gerenciador de Conhecimento é responsável por 

manter as bases de conhecimento da aplicação e manipular esse conhecimento para atender as 

requisições de outros agentes do SMA. Para isso, esse agente deve implementar as interfaces 

de acesso a esses repositórios semânticos e também os mecanismos necessários para 

manipular esse conhecimento. Esse agente também pode monitorar mudanças nesse 

conhecimento, as quais podem refletir diretamente na estrutura e funcionamento dos 

processos. Essas mudanças requerem a adequação do funcionamento da aplicação, por 

exemplo, mudanças ou mesmo a inclusão de informações sobre novas anormalidades, requer 

mudanças nas atividades de monitoramento. Essas mudanças são realizadas pelos usuários, 

através dos agentes Gerenciadores de Interface com o usuário, e devem ser informadas aos 

agentes Supervisores, para que esses executem as ações necessárias para adequar o 

funcionamento da aplicação às novas condições. 

Na Figura 19 é apresentado o Diagrama de Objetivo desse papel. 

 

Figura 19 – Diagrama de Objetivo do papel Gerenciador de Conhecimento. 

 



78 

 

 

 

O comportamento desse papel é determinado pelos seguintes objetivos, apresentado no 

diagrama da Figura 19: 

? Gerenciar conhecimento da app. – determina os planos para atender as 

requisições de outros agentes para consultar, adicionar ou alterar o 

conhecimento da aplicação; 

? Notificar alterações – determina os planos para notificar qualquer mudança no 

conhecimento da aplicação aos agentes assinantes do serviço de controle de 

alterações; 

? Manter serv. de ctrl. de alts. – determina os planos para manter a lista dos 

agentes assinantes do serviço de controle de alterações no conhecimento, 

atendendo as requisições de outros agentes para assinar ou cancelar a assinatura 

a esses serviços; 

? Registrar serv. controle – determina os planos para registrar e manter registrado, 

em um agente Facilitador, os serviços oferecidos pelo agente. 

Mais detalhes sobre os objetivos e outras características que definem o comportamento 

desse papel são apresentados na Tabela 14, presente no Apêndice B.6. 

 

4.5.1.7 Papel Facilitador 

 

A principal função que caracteriza esse papel é a capacidade de manter um registro dos 

serviços desempenhados pelos agentes presentes no SMA, de forma que possam ser 

encontrados dinamicamente por outros agentes. Assim, o agente que desempenha o papel de 

Facilitador deve gerenciar um repositório de serviços, fornecendo mecanismos para que os 

agentes do SMA possam registrar seus serviços e buscar os agentes que oferecem os serviços 

de interesse. 

A adoção de um agente Facilitador em um SMA requer que os outros agentes ao serem 

inicializados conheçam um agente Facilitador para registrar os serviços oferecidos. Dessa 

forma, os agentes do SMA podem encontrar e requisitar, em tempo de execução, um serviço 

oferecido por outro agente sem a necessidade de estar diretamente ligado a esse agente, 

tornando o sistema mais flexível e aberto. Agentes com esse papel são implementados e 



79 

 

 

 

oferecidos por algumas plataformas de agentes, onde são chamados de Directory Facilitator, 

como é o caso das plataformas Jade e Jadex. Nessas plataformas esses agentes fornecem o 

serviço de páginas amarelas que consiste basicamente de um registro e um mecanismo para 

registrar e buscar serviços nesse registro. As formas para registrar os serviços podem ser bem 

simples, usando apenas dois valores que descrevem nome e o tipo do serviço, como também 

mais robustas, utilizando protocolos e ontologias para descrever os serviços. 

Dependendo do tamanho do sistema e da distribuição dos agentes em várias 

plataformas, pode haver mais de um agente Facilitador. Nesses casos, esses agentes podem 

interagir para compartilhar seus registros de serviço, de forma que os agentes de uma 

plataforma podem encontrar serviços oferecidos por agentes que estão executando em outras 

plataformas, tendo que conhecer apenas um Facilitador. O Facilitador também pode 

apresentar um comportamento ativo, notificando outros agentes sobre atualizações nos 

serviços cadastrados e também sobre novos serviços presentes no SMA. Essa estrutura 

favorece a adaptação dos agentes as mudanças que podem ocorrer dentro do SMA. 

Na Figura 20 é apresentado o Diagrama de Objetivo desse papel. 

 

Figura 20 – Diagrama de Objetivos do papel Facilitador. 

 

Os objetivos que definem o comportamento desse papel, apresentando no diagrama da 

Figura 20, são: 



80 

 

 

 

? Gerenciar registro de serviço – determina os planos para atender as requisições 

de outros agentes para registrar ou excluir seus serviços no registro de serviço; 

? Buscar serviços – determina os planos para atender as requisições de outros 

agentes para encontrar os agentes registrados que oferecem os serviços 

procurados; 

? Manter registro – determina os planos para manter o registro de serviços 

atualizados, eliminando os registros antigos de tempos em tempos. 

Mais detalhes sobre os objetivos e as outras características que definem o 

comportamento desse papel são apresentados na Tabela 15, presente no Apêndice B.7. 

 

4.5.2 Organização social do SMA.  

 

Nessa seção é especificada a organização social do SMA, a qual determina os 

relacionamentos existentes entre os papéis especificados na seção anterior. Esses 

relacionamentos foram definidos a partir do estudo realizado no Capítulo 3 e representam 

como os agentes, que desempenham os diferentes papéis, interagem para desempenhar suas 

tarefas. Essas interações ocorrem através da troca de mensagens entre os agentes, para a troca 

de informações e de recursos. 

Na Figura 21, um esquema geral apresenta os relacionamentos entre os papéis, onde 

esses são representados pelos círculos e os relacionamentos pelas setas. Os códigos e as setas 

pequenas que aparecem no esquema, entre as relações, identificam algumas das mensagens 

trocadas entre os agentes e a direção em que são enviadas. Os detalhes dessas mensagens são 

apresentadas nas tabelas que descrevem os papéis, encontradas no Apêndice B.  

No grafo da Figura 21, o papel Facilitador não aparece relacionado com nenhum outro 

papel por questões de clareza, pois ele possui relacionamento com todos os outros papéis do 

SMA. Conforme apresentado na seção anterior, os agentes presentes no sistema podem 

registrar e buscar serviços através de um agente Facilitador. Logo, as mensagens trocadas 

entre o Facilitador e os outros papéis podem ser uma requisição para registrar ou buscar um 

serviço, ou uma resposta do Facilitador informando a lista dos agentes que oferecem o serviço 

buscado. 



81 

 

 

 

 

Figura 21 – Relacionamentos entre os papéis. 

 

O Gerenciador de Interface com o Usuário interage com todos os outros papéis, exceto 

o Controlador. A interação dele com o Gerenciador de Recurso é para consultar ou armazenar 

informações nas bases de dados utilizadas pela aplicação e obter os dados dos processos. A 

interação com o Monitor é para requisitar as informações sobre os processos monitorados e 

ser informado sobre as condições desses processos. A interação com o Supervisor é para 

requisitar as informações sobre os processos de interesse e receber as informações, como os 

diagnósticos das anormalidades e as possíveis ações e medidas que podem ser tomadas para 

se recuperar ou evitar a ocorrência dessas anormalidades. E com o Gerenciador de 

Conhecimento para consultar ou alterar as informações dos processos, das anormalidades e 

também dos agentes. 

O Supervisor também interage com todos os outros papéis. A interação com o 

Gerenciador de Recurso é para armazenar os registros dos diagnósticos, com o Monitor para 

requisitar o monitoramento de anormalidades nos processos e ser notificado quando situações 

de anormalidade forem identificadas. A interação com o Controlador envolve uma requisição 

para o controle dos processos através da execução de planos de controle e requisições para 

modificar os parâmetros de controle. A interação com o Gerenciador de Conhecimento é para 

consultar a base de conhecimento em busca das informações necessárias para a supervisão e 

controle dos processos, e também ser notificado quando ocorrem mudanças no conhecimento. 



82 

 

 

 

O Monitor interage com o Gerenciador de Recurso para requisitar os dados utilizados 

nas tarefas de monitoramento e também armazenar os registros, gerados durante o 

monitoramento, nas bases da aplicação. As relações com o Supervisor e Gerenciador de 

Interface com o Usuário que já foram apresentadas acima. 

O diagrama da Figura 22 apresenta a organização social do SMA em termos dos papéis 

e seus principais relacionamentos, especificados com base na metodologia Tropos. Nesse 

diagrama, os relacionamentos apresentados na Figura 21 são expressos em temos das 

dependências existentes entre os papéis para alcançar seus objetivos, executar os planos e 

fornecer os recursos. A direção da dependência indica qual o papel que possui o objetivo, 

executa o plano ou consome o recurso. 

 

Figura 22 – Organização social do SMA. 



83 

 

 

 

4.5.3 Interação entre os agentes 

 

A partir dos comportamentos dos papéis e relacionamentos especificados nas seções 

anteriores, nessa seção são apresentados alguns cenários que ilustram como os agentes 

interagem e se comportam para desempenhar as atividades de supervisão e controle dos 

processos. As interações ocorrem por meio de uma sequência de trocas de mensagens que são 

representadas com a utilização de Diagramas de sequência, especificados pela UML
15

 

(Unified Modeling Language). Nos Diagramas de sequência, para a representação das 

mensagens trocadas é utilizado a seguinte denotação: 

[performativa][nome da mensagem]([nome dos parâmetros]) 

onde, a performativa indica o ato de comunicação que define a ação expressa pela mensagem, 

enquanto o nome da mensagem e o nome dos parâmetros representam os nomes dados para 

identificar a mensagem e o seu conteúdo, respectivamente. 

As mensagens utilizadas pelos agentes para a comunicação seguem as performativas 

especificadas pela FIPA. As principais mensagens, utilizadas nos diagramas para a 

especificação das interações entre os agentes, representam os atos comunicativos: INFORM, 

REQUEST e SUBSCRIBE. Exemplos dessas mensagens são apresentados no estudo de caso 

descrito no Capítulo 5.  

Os seguintes cenários são utilizados para ilustrar as interações entre os agentes: 

a) Inicialização do SMA; 

b) Iniciar monitoramento; 

c) Monitoramento dos processos; 

d) Consolidação e diagnóstico; 

e) Controle dos processos; 

f) Entrada de um usuário no sistema; 

g) Planejamento e tomada de decisão; 

h) Mudanças nas estratégias de negócio; 

i) Gerenciar dados da aplicação. 

                                                 

15
 http://www.uml.org/ 



84 

 

 

 

a) Inicialização do SMA 

Para a inicialização do SMA são necessários pelo menos quatro agentes em operação, 

cada um desempenhando os papéis de Facilitador, Gerenciador de Interface com o Usuário, 

Gerenciador de Conhecimento e Supervisor. Os dois últimos precisam registrar os serviços 

oferecidos no agente Facilitador. Inicialmente um agente Facilitador é inicializado, em 

seguida o Gerenciador de Conhecimento, o Supervisor e o Gerenciador de Interface com o 

Usuário. Esse agente Gerenciador de Interface com o Usuário apresenta um comportamento 

específico que consiste em controlar o acesso dos usuários ao sistema e inicializar os outros 

agentes Gerenciadores de Interface com o Usuário, responsáveis pela interação com cada 

usuário. 

Além de inicializar os agentes do SMA, todo o conhecimento envolvido no domínio da 

aplicação deve ser representado através de um formalismo e uma linguagem que os agentes 

sejam capazes de entender e utilizar para desempenhar suas atividades. O conhecimento 

representa as informações que descrevem os processos, os parâmetros, as anormalidades e 

também outros elementos envolvidos na supervisão e no controle dos processos, como os 

agentes. Esse conhecimento deve ser mantido na base de conhecimento da aplicação, onde 

podem ser acessados pelos agentes do SMA através de um agente Gerenciador de 

Conhecimento. No estudo de caso apresentado no Capítulo 5, esse conhecimento foi descrito 

utilizando duas ontologias. 

O agente Supervisor tem um papel fundamental na inicialização do SMA, sendo o 

responsável por inicializar e coordenar os agentes que desempenham os papéis de 

Gerenciador de Recurso, Monitor e Controlador. Para isso, ao ser iniciado, o Supervisor deve 

encontrar um agente Gerenciador de Conhecimento para obter as informações sobre o 

processo a ser supervisionado. Ele também recupera informações sobre os agentes 

responsáveis por desempenhar as tarefas necessárias para recuperar os dados dos processos, 

monitorar as anormalidades e realizar o controle. 

Com essas informações, o Supervisor inicializa os agentes Gerenciadores de Recurso, 

Monitores e Controladores, e em seguida requisita a execução das tarefas de monitoramento e 

controle. Na Figura 23 é apresentado o Diagrama de sequência desse cenário. 



85 

 

 

 

 

Figura 23 – Diagrama de sequência – Inicialização do SMA. 

 

b) Iniciar monitoramento 

O início das tarefas de monitoramento ocorre quando um agente Supervisor requisita o 

monitoramento de determinados processos para os agentes Monitores. Nessa requisição o 

Supervisor envia as informações necessárias para realizar o monitoramento de determinado 

processo. O Monitor utiliza essas informações para determinar quais os parâmetros que 

devem ser monitorados e com isso, procura pelos agentes Gerenciadores de Recurso que 

fornecem esses dados. Então, o Monitor requisita aos Gerenciadores de Recurso à assinatura 

do serviço de fornecimento de dados para receber esses dados sempre que novos valores 

forem coletados. 

Antes de inicializar o processo de análise, caso o método de análise não seja 

implementado pelo próprio agente Monitor, e ao invés disso utilize um sistema de terceiros, é 

necessário encontrar e estabelecer a conexão com esse serviço. Na Figura 24 esse cenário é 

representado para um agente Monitor e um Gerenciador de Recurso. 



86 

 

 

 

 

Figura 24 – Diagrama de sequência – Iniciar monitoramento. 

 

c) Monitoramento dos processos 

O monitoramento consiste nos agentes Monitores ficarem, continuamente, realizando a 

análise dos parâmetros operacionais, que são informados pelos agentes Gerenciadores de 

Recurso. Para a análise desses dados são utilizados algoritmos que podem ser implementados 

pelo próprio agente ou por outros sistemas que o agente pode utilizar. Antes de realizar a 

análise, pode ser necessário fazer o pré-processamento dos dados para a eliminação de ruídos, 

formatação e/ou extração de características. 

Outra informação que deve ser considerada para o monitoramento se refere ao estado 

em que o processo se encontra, de forma que um processo pode ser constituído por uma 

sequência de operações distintas que são executadas para obter os resultados desejados. Por 

exemplo, em um processo simples de apenas uma operação, os estados podem ser parado ou 

funcionando. A identificação do estado do processo é importante, pois independente da 

operação que esteja sendo executada, os parâmetros operacionais podem continuar sendo 

coletados, porém não devem ser considerados para a análise. Dessa forma, a informação sobre 

esses estados devem ser conhecidas pelos agentes Monitores, para que os mesmos possam 

operar corretamente. Esses estados podem ser identificados pelos próprios Monitores, a partir 

da verificação dos dados, mas também podem ser informados pelos Gerenciadores de Recurso 

junto com os parâmetros operacionais, ou mesmo pelos Supervisores. Nessa última opção o 

agente Supervisor pode inicializar um agente Monitor dedicado para identificar o estado do 

processo. 



87 

 

 

 

Durante o monitoramento, o resultado da análise dos dados gera informações sobre as 

condições dos processos, as quais podem indicar desde a condição dos parâmetros 

monitorados até o nível de risco em que o processo se encontra em relação à ocorrência de 

uma anormalidade, como por exemplo, operação normal ou risco eminente. Assim, essas 

condições devem ser informadas continuamente aos agentes Gerenciadores de Interface com o 

Usuário, para que sejam apresentadas aos usuários. Caso seja identificada uma condição de 

anormalidade ou um estado indesejado, essas informações também devem ser notificadas para 

o agente Supervisor, para que este possa tomar as medidas necessárias para diagnosticar e 

tratar esse evento. Todos os resultados e registros produzidos nas atividades de análise devem 

ser salvos na base de dados da aplicação para consultas posteriores. 

Na Figura 25 é apresentado o Diagrama de sequência que ilustra a interação entre os 

agentes para desempenhar as tarefas de monitoramento. Nesse diagrama é apresentado apenas 

um agente Gerenciador de Interface com o Usuário, mas em uma aplicação pode haver mais 

de um usuário monitorando as condições dos processos. 

 

Figura 25 – Diagrama de sequência – Monitoramento dos processos. 

 

d) Consolidação e diagnóstico 

A consolidação e o diagnóstico são realizados após o agente Supervisor receber uma 

notificação de alerta de um agente Monitor, informando sobre a ocorrência de uma possível 

anormalidade que foi detectada nos processos monitorados. Ao receber essa notificação, 



88 

 

 

 

inicialmente, o Supervisor pode precisar consolidar essa notificação para verificar se a 

anormalidade detectada está dentro do contexto e dos estados do processo na qual ela pode 

ocorrer. Caso existam outros agentes Monitores no SMA que monitorem a mesma 

anormalidade identificada, porém utilizando outros métodos de análise, o Supervisor pode 

fazer a consolidação confrontando as informações desses agentes. 

Após a consolidação, o diagnóstico é realizado com a ajuda do agente Gerenciador de 

Conhecimento, que mantém o conhecimento sobre as anormalidades. Esse conhecimento é 

utilizado para determinar o que pode ter causado essa condição, como por exemplo, a falha de 

um equipamento, ou por causa do aumento ou da diminuição do valor de determinado 

parâmetro, ocorrido de forma inesperada. Além dessas informações, o diagnóstico também 

pode apresentar um conjunto de medidas corretivas ou mesmo preventivas dependendo do 

evento que está sendo diagnosticado. Com essas informações, o Supervisor gera um relatório 

que é informado aos agentes Gerenciadores de Interface com o Usuário para que este 

notifique os usuários. O Diagrama de sequência apresentado na Figura 26 ilustra esse cenário, 

onde são apresentados dois agentes com o papel Monitor (monitor X e monitor Y). 

 

Figura 26 – Diagrama de sequência – Consolidação e diagnóstico. 

 

 

 



89 

 

 

 

e) Controle dos processos 

O controle começa com uma requisição de controle de um agente Supervisor para um 

agente Controlador. Nessa requisição o Controlador recebe as informações necessárias para 

executar as operações de controle, ajustando os parâmetros de controle de determinado 

equipamento ou processo. 

O agente Controlador pode apresentar dois comportamentos de controle. O primeiro 

consiste em executar um plano de controle, que determina os parâmetros a serem controlados 

e seus valores. Nesse caso, o agente deve monitorar esses parâmetros para verificar se os 

mesmos estão dentro dos intervalos estabelecidos e caso não estejam, ele deve realizar os 

ajustes necessários. O segundo comportamento consiste na execução de uma ação específica 

para modificar as condições de um equipamento ou dispositivo, como por exemplo, fechar ou 

abrir uma válvula, ou ainda modificar o status de uma chave. Essa operação de controle pode 

ser requisitada por um usuário através de um agente Gerenciador de Interface com o Usuário, 

que deve delegar a requisição para o agente Supervisor, e este faz a requisição ao agente 

Controlador. 

Assim como os Monitores e Supervisores, os agentes Controladores também devem 

salvar os registros das ações realizadas nas bases de dados da aplicação para consultas 

posteriores. O Diagrama de sequência da Figura 27 apresenta a interação entre os agentes em 

um cenário de controle. 

 

Figura 27 – Diagrama de sequência – Controle dos processos. 



90 

 

 

 

f) Entrada de um usuário no sistema 

Quando um usuário entra no sistema, através da interface gráfica da aplicação, os 

componentes da camada de Apresentação requisitam o acesso do usuário ao sistema para o 

agente Gerenciador de Interface com o Usuário responsável pelo gerenciamento dos usuários. 

Esse agente verifica as informações de acesso do usuário e inicializa um agente Gerenciador 

de Interface com o Usuário com as informações do perfil desse usuário. Quando esse agente é 

inicializado, ele determina os processos de interesse do usuário e procura pelos agentes 

Supervisores que supervisionam e controlam esses processos.  

Após encontrar os Supervisores, o Gerenciador de Interface com o Usuário deve 

requisitar uma assinatura para receber as informações da supervisão e os diagnósticos das 

anormalidades identificadas. A partir dessa requisição, o Supervisor informa quais os agentes 

Monitores e Gerenciadores de Recurso que oferecem as informações dos processos de 

interesse. Aos agentes Monitores, é requisitada uma assinatura para receber as informações 

sobre as condições dos processos monitorados, e aos Gerenciadores de Recurso é requisitada 

uma assinatura para receber os dados dos processos. O diagrama da Figura 28 ilustra esse 

cenário. 

 

Figura 28 – Diagrama de sequência – Entrada de um usuário no sistema. 



91 

 

 

 

g) Planejamento e tomada de decisão 

Outra tarefa de responsabilidade do agente Supervisor envolve o planejamento e a 

tomada de decisão, realizados para determinar os planos de ações que devem ser aplicados 

para restabelecer o funcionamento normal dos processos, quando o Supervisor é notificado 

sobre a ocorrência de uma anormalidade ou um estado indesejado. Esses planos são 

determinados a partir do conhecimento sobre os processos e as anormalidades, mantido na 

base de conhecimento da aplicação.  

Os planos de ações, dependendo da sua prioridade, podem ser executados diretamente 

pelo Supervisor ou ser informados aos usuários para que esses possam autorizar a aplicação 

dessas ações. Para a execução dos planos, o Supervisor deve fazer uma requisição aos agentes 

Controladores. 

Na Figura 29 é apresentado esse cenário, onde o Supervisor, após ser notificado sobre a 

ocorrência de uma anormalidade, consulta a base de conhecimento para determinar os planos 

de recuperação, em seguida esses planos são apresentados ao usuário para que o mesmo 

concorde ou não com sua aplicação. Se o usuário concordar, o Supervisor requisita ao 

Controlador as mudanças necessárias. 

 

Figura 29 – Diagrama de sequência – Planejamento e tomada de decisão. 

 

 



92 

 

 

 

h) Mudanças nas estratégias de negócio 

As mudanças nas estratégias de negócio podem ser realizadas pelos usuários da 

aplicação a qualquer momento, de forma que essas mudanças podem envolver, por exemplo, 

modificações nas condições de operação dos processos e nos planos de monitoramento e 

controle, assim como a adição de novos recursos na aplicação. Essas mudanças podem afetar 

o funcionamento da aplicação, sendo necessário realizar alterações no comportamento dos 

componentes do sistema, para esses se adequarem a essas mudanças. 

No SMA, o agente Gerenciador de Conhecimento além de manter todo o conhecimento 

envolvido nos processos, também deve ser capaz de monitorar mudanças nessas informações 

e notificá-las aos agentes Supervisores, para que esses possam realizar as ações necessárias, a 

fim de adaptar as tarefas de supervisão e controle. Para isso, os Supervisores podem 

inicializar novos agentes ou requisitar novas tarefas aos agentes já inicializados. O Supervisor 

também deve notificar os agentes Gerenciadores de Interface com o Usuário sobre as 

mudanças nos processos, para que esses também possam se adaptar as mudanças para manter 

os usuários atualizados. 

O diagrama da Figura 30 ilustra esse cenário, onde ao iniciar o sistema o Supervisor 

assina um serviço do Gerenciador de Conhecimento para ser notificado sobre as mudanças 

nos processos de seu interesse.  

 

Figura 30 – Diagrama de sequência – Mudanças nas estratégias de negócio. 



93 

 

 

 

i) Gerenciar dados da aplicação 

A principal função do agente Gerenciador de Recurso, responsável por gerenciar as 

bases de dados da aplicação, é armazenar os registros das atividades de análise, de diagnóstico 

e de controle, com a finalidade de manter essas informações para consultas posteriores. Para 

isso os agentes Monitores, Supervisores e Controladores interagem com o agente Gerenciador 

de Recurso, através de requisições para o armazenamento desses dados. 

Enquanto isso, os agentes Gerenciadores de Interface com o Usuário interagem com 

esse Gerenciador de Recurso, através de requisições de consulta para recuperar esses dados, 

assim como outras informações da aplicação que são mantidas nessas bases, eles também 

podem requisitar o armazenamento de informações, como por exemplo, os registros das 

atividades dos usuários no sistema. 

O diagrama da Figura 31 ilustra esse cenário, onde um agente Gerenciador de Recurso é 

encarregado de gerenciar os dados da aplicação. 

 

Figura 31 – Diagrama de sequência – Gerenciar dados da aplicação. 

 



94 

 

 

 

4.6 Considerações e discussões 

 

Neste capítulo foi apresentada uma arquitetura multiagente, proposta a partir do estudo 

de um conjunto de trabalhos encontrados na literatura, que é apresentado no Capítulo 3. Essa 

arquitetura foi especificada para ser utilizada como um modelo de referência para o 

desenvolvimento de aplicações voltadas para automatizar as tarefas de supervisão e controle 

de processos. Para isso, foram especificados um conjunto de componentes e seus 

comportamentos gerais, que definem os requisitos básicos dessas aplicações. 

Os agentes são os principais componentes da arquitetura sendo responsáveis por 

executar a lógica de negócio da aplicação. Eles podem desempenhar um conjunto de sete 

papéis diferentes, que determinam seus comportamentos na aplicação. Esses papéis foram 

especificados de acordo com o modelo BDI, e utilizando a metodologia Tropos. O modelo 

BDI fornece um nível de abstração que permite a representação e especificação da estrutura 

interna e do comportamento dos agentes em função de objetivos, planos e crenças. 

Os agentes e seus papéis, assim como os outros componentes são especificados de 

forma geral, permitindo que a arquitetura de referência proposta possa ser utilizada para o 

desenvolvimento de uma variedade de soluções. Dessa forma, para a implementação dessa 

arquitetura, os componentes devem ser desenvolvidos de acordo com os requisitos do 

domínio e as regras de negócio da aplicação, por exemplo, as interfaces gráficas devem 

atender aos requisitos da aplicação, assim como os agentes podem apresentar comportamentos 

e características específicas, além das propostas na arquitetura. Nesse sentido, no Capítulo 5 

um estudo de caso é apresentado, onde um protótipo de um sistema é implementado seguindo 

essa arquitetura. 

Outra característica da arquitetura proposta está relacionada às tecnologias escolhidas 

para serem utilizadas no desenvolvimento dos componentes. Por exemplo, para o 

desenvolvimento dos componentes da camada de Apresentação é proposto à utilização da 

tecnologia Web, que permite o desenvolvimento das interfaces da aplicação através de um 

conjunto de páginas Web que podem ser acessíveis de qualquer dispositivo que possua acesso 

a rede e um navegador compatível. Essa estrutura garante a portabilidade da aplicação, de 

forma que esta é independente da plataforma utilizada pelos usuários. O uso da tecnologia de 

agentes para o desenvolvimento da lógica de negócio da aplicação garante a modularidade e 



95 

 

 

 

flexibilidade da aplicação, além da interoperabilidade com os sistemas externos, facilitando a 

integração dos dados e serviços utilizados. Já na camada de Dados e Serviços, a adoção da 

tecnologia de serviços Web, para encapsular alguns sistemas externos, além de aumentar a 

interoperabilidade entre o SMA e os outros sistemas também garante a reusabilidade desses 

sistemas, através das interfaces de serviços Web. A utilização de ontologias é proposta como 

uma forma para garantir a integração dos dados, a interoperabilidade dos componentes, e 

também fornecendo um vocabulário para a representação formal do conhecimento envolvido 

no domínio da aplicação. 

  



96 

 

 

 

5 ESTUDO DE CASO 

 

Neste capítulo é apresentado o estudo de caso realizado, onde foi desenvolvida uma 

aplicação utilizando a arquitetura proposta. Esta aplicação tem como objetivo validar a 

arquitetura proposta através do desenvolvimento de um sistema para a supervisão e 

monitoramento das operações de perfuração de poços de petróleo para a identificação de 

anormalidades. 

O protótipo desenvolvido é capaz de monitorar alguns parâmetros medidos durante a 

operação de perfuração para detectar a ocorrência da anormalidade “Dificuldade de avanço” e 

determinar as causas que levaram a ocorrência dessa anormalidade.  

No desenvolvimento do sistema foram implementados os agentes necessários, de acordo 

com o especificado na arquitetura, e o conhecimento utilizado para os diagnósticos. Para os 

testes do sistema foi utilizado um conjunto de dados reais, obtidos de um poço já perfurado. 

As próximas seções descrevem os problemas relacionados à operação de perfuração de 

poços de petróleo e também como o protótipo foi desenvolvido para tratar esse problema. 

 

5.1 Perfuração de poços de petróleo 

 

A perfuração de poços de petróleo offshore (em plataformas marítimas) é um processo 

que envolve operações complexas e dispendiosas que estão sujeitas a ocorrência de uma série 

de anormalidades. A evolução das técnicas e equipamentos de perfuração tem proporcionado 

uma redução na frequência de ocorrências de problemas durante essas operações, mas ainda 

assim, alguns problemas persistem (TAVARES, 2006). Os problemas que podem ocorrer 

durante a perfuração são altamente indesejáveis e causam muitos prejuízos que acabam 

elevando os custos da perfuração e até mesmo a perda do poço. Assim, prever e evitar a 

ocorrência desses problemas é imprescindível para garantir a continuidade do processo, 

minimizando os tempos não produtivos e consequentemente os custos de operação, além de 

aumentar a segurança operacional e até mesmo prevenir danos ambientais.  

 



97 

 

 

 

5.1.1 Coleta de dados nas operações de perfuração 

 

Durante as operações de perfuração no mar, muitos parâmetros são medidos de forma 

continua. Os dados coletados abrangem desde parâmetros operacionais da sonda até 

características geológicas da formação perfurada. Esses parâmetros são medidos por um 

conjunto de sensores instalados nos equipamentos de perfuração e são coletados pelos 

sistemas de Mud-logging, MWD (Measuring While Drilling), LWD (Logging While Drilling) 

e PWD (Pressure While Drilling) (TAVARES, 2006). 

A análise desses parâmetros é essencial para a detecção de possíveis anormalidades 

durante as operações de perfuração (MIURA et al., 2003; MIURA et al., 2006; TAVARES, 

2006; CHIPINDU, 2010). Esta análise requer o monitoramento contínuo dos parâmetros 

operacionais e conhecimento altamente especializado dos profissionais envolvidos. 

Nos últimos anos com os avanços nas tecnologias de instrumentação de poços, não só o 

volume de dados coletados aumentou, mas também a qualidade dos dados medidos 

(TAVARES, 2006). Com isso, os dados que antes não eram devidamente aproveitados, 

passaram a receber uma maior atenção, se tornando objeto de estudo para o desenvolvimento 

de técnicas e ferramentas para auxiliar na detecção e diagnóstico das diversas anormalidades 

que podem ocorrer durante as operações de perfuração.  

 

5.1.2 Detecção automática de anormalidades 

 

O desenvolvimento de sistemas computacionais capazes de identificar automaticamente 

a ocorrência de anormalidades e fornecer, aos operadores as informações necessárias para 

lidar com esse problema durante a perfuração é um importante desafio para a indústria do 

petróleo. Esses sistemas automatizam as tarefas de monitoramento, analisando, em tempo 

real, a grande quantidade de dados gerados durante as operações. A caracterização dessas 

anormalidades é realizada a partir da observação da ocorrência de padrões no comportamento 

dos parâmetros operacionais que são monitorados.  

Nesse sentido, o estudo dos problemas que ocorrem durante a perfuração tem sido 

objeto de investigação de vários trabalhos na literatura. Alguns desses trabalhos realizam uma 



98 

 

 

 

pós-análise dos dados de poços já perfurados para estudar os problemas que ocorrem durante 

a perfuração desses poços. Essa pós-análise visa identificar a assinatura das anormalidades, ou 

seja, determinar quais os parâmetros e quais os comportamentos apresentados por eles, que 

caracterizaram a ocorrência das anormalidades. A assinatura de uma anormalidade serve tanto 

para auxiliar os operadores a detectar a ocorrência de anormalidades durante as operações, 

como também para desenvolver métodos e ferramentas que podem ser utilizados para 

identificar e prever a ocorrência dessas anormalidades em tempo real, a partir do 

monitoramento dos dados gerados na operação de perfuração. 

Nesse estudo de caso, a análise das anormalidades consiste na realização de duas tarefas 

principais. A primeira tarefa consiste na identificação das etapas que são executadas nas 

operações de perfuração, onde foi utilizada a metodologia proposta no trabalho de Tavares 

(2006). A segunda tarefa consiste na análise e identificação das anormalidades que podem 

ocorrer durante a execução de cada uma dessas etapas, para o desenvolvimento dessa tarefa 

foi utilizada a metodologia proposta no trabalho de Chipindu (2010). Nesses estudos, os 

autores discutem as formas para a identificação das assinaturas de algumas etapas e 

anormalidades, isto é, determinar os parâmetros operacionais e seus comportamentos que 

caracterizam a execução de uma etapa e a ocorrência de uma anormalidade. 

 

5.1.3 Método usado para a detecção da anormalidade 

 

A operação de perfuração envolve a realização de um conjunto de atividades distintas, 

chamadas de etapas. Exemplos de etapas que são realizadas na operação de perfuração são: 

Perfurando rotativo, Perfurando não-rotativo, Repassando rotativo, Repassando não-rotativo, 

Manobrando e Circulando (TAVARES, 2006). 

Nesse sentido, Tavares (2006), propôs um método para classificar as etapas da 

perfuração. Esse método consiste em observar o comportamento de quatro parâmetros 

operacionais e, de acordo com esses comportamentos classificar seis etapas diferentes da 

perfuração. Os parâmetros utilizados são: SPP (Stand Pipe Pressure – Pressão de bombeio do 

fluido de perfuração medida na bomba), WOH (Weight on Hook – Carga no Gancho), RPM 

(Rotation per Minute – Rotação da Coluna) e Profundidade da Broca (Bit Depth). Na Tabela 2 



99 

 

 

 

é apresentado o comportamento dos parâmetros e as regras utilizadas para a classificação das 

etapas de perfuração. 

Tabela 2 – Conjunto de regras para a classificação das etapas da Perfuração. 

Configuração dos parâmetros 
Classificação 

Profundidade da Broca RPM WOH SPP 

Variação positiva e profundidade maior ou igual a 

máxima 
Alta Alta Alta 

Perfurando 

Rotativo (PR) 

Variação positiva, negativa ou nula e profundidade 

menor que a máxima e ainda dentro da seção 
Alta Alta Alta 

Repassando 

Rotativo (RR) 

Variação positiva e profundidade maior ou igual a 

máxima 
Nula Alta Alta 

Perfurando Não-

Rotativo (PNR) 

Variação positiva, negativa ou nula e profundidade 

menor que a máxima e ainda dentro da seção 
Nula Alta Alta 

Repassando Não-

Rotativo (RANR) 

Variação nula Nula Baixa Baixa Manobrando (M) 

Menor que a máxima Nula Alta Alta Circulando (C) 

 

Definição dos níveis 

RPM Alta Valor superior a 25 rpm 

WOH 
Alta Valor superior a 200 klbs 

Baixa Valor inferior a 200 klbs 

SPP 
Alta Valor superior a 1500 psi 

Baixa Valor inferior a 1500 psi 
 

Fonte: Adaptado de Tavares (2006). 

 

Baseado nas informações apresentadas na Tabela 2, para cada valor dos parâmetros 

medidos deve-se aplicar as regras para determinar qual o comportamento do parâmetro (Alta, 

Baixa, Nula), exceto para o parâmetro “Profundidade da Broca” onde a regra é um pouco 

mais complexa. Posteriormente, é verificada qual regra leva a determinação da etapa que está 

sendo realizada. Também pode existir uma combinação diferente das apresentadas, indicando 

uma etapa que não foi definida nesse método. 

Dado as regras para determinar qual a etapa da perfuração que está sendo realizada, o 

próximo passo consiste em definir as regras usadas para determinar o comportamento dos 

parâmetros associados às anormalidades. 

 

 

 



100 

 

 

 

5.1.4 Caracterização da anormalidade Dificuldade de avanço. 

 

As operações de perfuração de poços de petróleo estão sujeitas a ocorrência de vários 

problemas. Nesse contexto, Chipindu (2010), apresenta uma análise dos principais problemas 

que podem ocorrer durante essas operações e que são os responsáveis pela maior parte dos 

tempos não produtivos nas operações de perfuração. Entre esses problemas estão: a 

Dificuldade de avanço, a Dificuldade de manobra e a Prisão de coluna. 

Nesse estudo de caso, a anormalidade “Dificuldade de avanço” foi escolhida para ser 

utilizada no desenvolvimento e teste do protótipo. Essa anormalidade ocorre nas etapas 

Perfurando rotativo e Perfurando não-rotativo (TAVARES, 2006), essas etapas foram 

apresentadas na Tabela 2. Assim, é necessário primeiramente, identificar a etapa que está 

sendo realizada, e monitorar os parâmetros associados a essa anormalidade apenas durante as 

etapas em que ela pode ocorrer. A escolha dessa anormalidade deve-se, principalmente, ao 

conjunto de dados disponíveis, o qual possui algumas ocorrências de anormalidades que 

foram identificas e pré-classificadas por um especialista. Para o estudo dessa anormalidade foi 

considerado como referência o estudo realizado por Chipindu (2010). Nessa seção é 

apresentada uma visão geral dessa anormalidade, sendo que mais detalhes desta e também de 

outras anormalidades podem ser encontrados nos trabalhos de Chipindu (2010) e Tavares 

(2006).  

Segundo Chipindu (2010), a anormalidade “Dificuldade de avanço” ocorre durante as 

etapas de perfuração de um trecho do poço. Os eventos mais comuns que podem levar a 

ocorrência dessa anormalidade são: Enceramento da broca, Fechamento do poço, Formações 

abrasivas, Formações duras e Vibrações (Tabela 3). Mais detalhes sobre cada um desses 

eventos podem ser encontrados no trabalho de Chipindu (2010). 

Na análise dessa anormalidade são considerados os seguintes parâmetros (Tabela 3): 

Vazão, Pressão, Torque, Drag, Rotação da coluna (RPM), Taxa de penetração (ROP) e Peso 

sobre a broca (WOB). Essa anormalidade é caracterizada por apresentar uma taxa de 

penetração reduzida ou mesmo nula, indicando a diminuição ou a ausência de avanço na 

profundidade do poço. Assim, o principal parâmetro operacional que é usado como base para 

caracterizar essa anormalidade é a Taxa de penetração (ROP – Rate of Penetration). A 

diminuição ou um valor baixo desse parâmetro, durante a etapa em que o poço está sendo 



101 

 

 

 

perfurado, caracteriza a ocorrência dessa anormalidade. Na Tabela 3, Chipindu (2010) 

apresenta o comportamento desse e dos outros parâmetros usados para determinar as causas 

que levaram a ocorrência dessa anormalidade.  

Tabela 3 – Diagrama causa-efeito para a Dificuldade de avanço. 

Causas 

Parâmetros 

Enceramento 

da broca 

Formações 

abrasivas 

Formações 

duras 

Fechamento 

do poço 

Bit Bounce 

(vibração) 

Vazão ? – – ? – 

Pressão ? – – ? – 

Torque ? ? – ? ????? 

Drag ? ? – ? ? 

Rotação da coluna (RPM) ? ? – ? ????? 

Taxa de penetração (ROP) ? ? ? ? ? 

Peso sobre a broca (WOB) Excessivo – – – Baixo 

 

Legenda 

? - Redução ? - Aumento ????? - Oscilações 

 

Fonte: Adaptado de Chipindu (2010). 

 

Na Tabela 3, o parâmetro “Taxa de Penetração (ROP)” apresenta o mesmo 

comportamento para todas as causas, por isso, ele é chamado de parâmetro de controle, pois é 

ele que define se a perfuração está normal ou há alguma dificuldade de avanço. Assim, 

quando esse parâmetro apresentar o comportamento “Redução”, o comportamento dos outros 

parâmetros devem ser analisados para identificar qual a causa que levou a ocorrência da 

“Dificuldade de avanço” observada. 

O comportamento dos parâmetros apresentados na Tabela 3 é determinado a partir de 

uma análise de tendência dos valores medidos. Assim, cada novo valor medido deve ser 

comparado com os anteriores para determinar se houve um aumento, uma redução ou não 

houve mudanças. 

Para essa análise de tendência foi utilizado o método dos mínimos quadrados (Equação 

1). Esse método é utilizado para estimar uma reta que melhor se ajusta a um conjunto de 

pontos. Assim, a partir da inclinação dessa reta é possível determinar a tendência dos 

parâmetros, isto é, se o mesmo está aumentando, diminuindo ou estável. Para os testes, a 

tendência foi calculada em intervalos de três, cinco e sete minutos, com o objetivo de 

encontrar a melhor configuração para o diagnóstico. 



102 

 

 

 

 

Equação 1 – Método dos mínimos quadrados. 

 

Como pode ser observado nas duas tabelas anteriores, nesse trabalho foi utilizada uma 

abordagem baseada em conhecimento, na qual foram utilizadas regras simples definidas por 

especialistas, tanto para a identificação das etapas de perfuração, como também para a 

detecção da anormalidade e determinação de suas causas. 

 

5.2 Sistema multiagente para monitorar a operação de perfuração de 

poços de petróleo 

 

Nessa seção é apresentada como a arquitetura multiagente para sistemas de supervisão e 

controle de processo, proposta no Capítulo 4, foi utilizada no desenvolvimento do protótipo 

de um sistema de supervisão. Nesse estudo de caso, o processo a ser supervisionado é a 

operação de perfuração de poços de petróleo, mais especificamente no contexto marítimo 

(offshore). 

Baseado nessa arquitetura, um protótipo foi desenvolvido com a finalidade de monitorar 

a operação de perfuração de poços de petróleo para identificar as etapas realizadas e detectar 

as anormalidades que podem ocorrer. A aplicação desenvolvida consiste em um sistema Web 

que monitora e analisa o comportamento de alguns parâmetros operacionais, coletados pelo 

sistema de Mud-logging (TAVARES, 2006) durante a perfuração, a fim de detectar a 

ocorrência da anormalidade “Dificuldade de avanço” e determinar as causas que levaram a 

ocorrência dessa anormalidade.  

Nessa seção é apresentado como cada um dos componentes da arquitetura proposta 

foram desenvolvidos na implementação do protótipo. Na arquitetura esses componentes estão 

organizados em três camadas. Na Camada de Dados e Serviços foram desenvolvidas as 

ontologias usadas para estruturar a base de conhecimento, onde é mantido todo o 

conhecimento utilizado na aplicação. Além da base de conhecimento, nessa camada, também 



103 

 

 

 

estão a base de dados da aplicação e o sistemas de Mud-logging de onde são recuperados os 

dados coletados durante a perfuração. 

Na camada Sistema Multiagente foram implementados seis agentes, de acordo com os 

papéis especificados na arquitetura: um com o papel Gerenciador de Recurso para recuperar 

os dados do sistema de Mud-logging; dois com o papel de Monitor, um para analisar os 

parâmetros de perfuração e identificar a etapa que está sendo realizada, e outro para analisar 

os dados da etapa de perfuração a fim de detectar a “Dificuldade de avanço”; um Supervisor 

para gerenciar os agentes e diagnosticar as causas da anormalidade; um Gerenciador de 

Conhecimento para gerenciar a base de conhecimento; e um Gerenciador de Interface com o 

Usuário para fazer a interface entre a camada de Apresentação e os agentes do SMA. Nenhum 

agente com o papel Controlador foi desenvolvido, visto que o objetivo desse protótipo é 

apenas monitorar o processo. Embora não tenha sido implementado um agente com o papel 

Facilitador, foi utilizado o agente DF fornecido pela plataforma de agentes Jadex. 

Na camada de Apresentação foi desenvolvido um conjunto de interfaces gráficas 

(páginas Web), através das quais os usuários podem visualizar o comportamento dos 

parâmetros da perfuração em tempo real, assim como as condições da operação e as 

notificações sobre as anormalidades identificadas. 

 

5.2.1 Implementação da camada de Dados e Serviços 

 

A camada de Dados e Serviços (Seção 4.4) representa todos os recursos (dados e 

serviços) utilizados pelos agentes do SMA. No sistema desenvolvido, esses recursos 

correspondem a base de dados da aplicação (Repositórios de dados), ao sistema de Mud-

logging (Sistemas de aquisição de dados) e a base de conhecimento (Repositório semântico).  

A seguir, é apresentado como cada um desses componentes foi desenvolvido. 



104 

 

 

 

5.2.1.1 Repositório de dados 

A base de dados da aplicação foi desenvolvida utilizando o sistema de gerenciamento de 

banco de dados MySQL
16

. Nesse protótipo essa base mantém basicamente as informações 

sobre os usuários do sistema. 

 

5.2.1.2 Sistema de aquisição de dados – Mud-logging 

O sistema de Mud-logging é um sistema de terceiros responsável por coletar e fornecer 

em tempo real os parâmetros operacionais medidos durante a perfuração (TAVARES, 2006). 

Pelo fato do acesso a esses sistemas serem restritos e também devido a complexidade para 

implementar um sistema que siga as mesmas especificações, nesse experimento um programa 

em Java foi implementado para simular o fornecimento dos dados desse sistema. 

O programa implementado fornece os dados em um formato XML, mas que não segue o 

padrão de metadados WITSML
17

 que geralmente é utilizado pelos sistemas de Mud-logging. 

Os dados utilizados para o teste representam um conjunto de dados que foram coletados de 

um poço já perfurado. Esses dados estão armazenados em uma base de dados local de onde 

são extraídos. 

Esse programa foi implementado como uma aplicação cliente-servidor, onde o cliente 

estabelece uma conexão e passa a receber novos dados a cada 30 segundos, esse tempo 

representa o intervalo em que os dados são amostrados. Nesse caso, o cliente é um agente 

Gerenciador de Recurso responsável por recuperar os dados de perfuração e fornecer para os 

outros agentes do SMA. 

 

5.2.1.3 Repositório semântico 

Para o desenvolvimento desse sistema foram criadas duas ontologias: a ontologia de 

perfuração – usada para descrever o conhecimento sobre as operações e as anormalidades 

dentro do domínio do sistema; e a ontologia de agentes – usada para descrever os agentes e 

seus serviços. Essas ontologias são compartilhadas entre os agentes do sistema, e usadas para 

a troca de informações, servindo como um vocabulário comum para descrever o conteúdo das 

                                                 

16
 http://www.mysql.com/ 

17
 http://www.energistics.org/ 



105 

 

 

 

mensagens trocadas entre os agentes. Os frameworks Protégé
18

 e Jena
19

 foram utilizados para 

o desenvolvimento e manipulação das ontologias, as quais foram desenvolvidas utilizando a 

linguagem OWL
20

. 

 

Ontologia de perfuração 

Uma ontologia de perfuração de poços foi desenvolvida com a finalidade de descrever 

todo o conhecimento relacionado ao domínio da perfuração de poços de petróleo e as 

anormalidades que ocorrem. Essa ontologia foi desenvolvida com base nos trabalhos de Overä 

(2010) e Norheim e Fjellheim (2006), que apresentam ontologias para o domínio de 

perfuração de poços de petróleo. Além dos conceitos reutilizados dessas ontologias, novos 

conceitos foram definidos com a colaboração de um especialista da área de perfuração de 

poços de petróleo. Assim, essa ontologia define as classes, os relacionamentos e os atributos 

necessários para descrever o conhecimento associado às operações e anormalidades no 

domínio da perfuração de poços. As principais classes e relacionamentos definidos por essa 

ontologia estão representados na Figura 32. 

Na Figura 32, as classes são representadas pelas elipses enquanto as relações pelas 

setas. As relações de generalização – representadas pelas setas contínuas de ponta fechada e 

com o rotulo “is-a” – definem que uma classe é subclasse de outra, e com isso esta herda 

todos os atributos e relacionamentos da superclasse. Essa relação é utilizada para agrupar 

classes que possuem características em comum, enquanto as relações de dependência – 

representadas pelas setas tracejadas e de ponta aberta, com rótulos que tentam descrever a 

relação existente – definem que os indivíduos de uma classe (ou suas subclasses) estão 

associados a outros da outra classe por essa relação. 

Na Tabela 4 é apresentada uma descrição das principais classes da ontologia de 

perfuração. 

 

                                                 

18
 http://protege.stanford.edu/ 

19
 http://jena.apache.org/ 

20
 http://www.w3.org/TR/owl2-overview/ 



106 

 

 

 

 

Figura 32 – Estrutura da ontologia de perfuração. 

 

Tabela 4 – Lista das classes definidas na ontologia de perfuração. 

Classe Descrição 

Well 

(Poço) 

Usada para descrever as informações do poço onde são realizadas as 

operações e monitoradas as anormalidades. 

Operation 

(Operação) 

Define os tipos de operações que são realizadas para a construção de um 

poço. Em cada operação é realizado um conjunto de etapas (Step).  

Step 

(Etapa) 

Define os tipos de etapas que são realizadas nas operações, as quais estão 

sujeitas a ocorrência de anormalidades, por exemplo, a anormalidade 

“Dificuldade de avanço” pode ocorrer na etapa “Perfurando Rotativo”, 

sendo esta etapa do tipo MajorActivity. 

Abnormality 

(Anormalidade) 

Define os tipos de anormalidades, por exemplo, a anormalidade 

“Dificuldade de avanço”, do tipo DifficultiInDrilling é classificada como 

uma anormalidade que ocorre no poço (BottomholeAbnormality).  

AbnormalityCause 

(Causa de Anormalidade) 

Define os tipos de causas das anormalidades. Uma anormalidade pode ter 

várias causas, onde cada uma delas é caracterizada por um conjunto de 

parâmetros e seus comportamentos. 

Parameter 

(Parâmetro) 

Define os parâmetros operacionais. Os parâmetros são usados 

principalmente para caracterizar as anormalidades e suas causas. Por 

exemplo, a anormalidade “Dificuldade de avanço” é caracterizada 

quando a taxa de penetração (parâmetro ROP) apresenta um 

comportamento de redução (Status ? Decreasing). 

Status 

(Status) 

Define os comportamentos que os parâmetros podem apresentar. 

Juntamente com os parâmetros são utilizados para caracterizar as 

anormalidades e suas causas. 

 



107 

 

 

 

Na Tabela 5 são apresentados os relacionamentos entre as principais classes definidas 

na ontologia. Cada relacionamento possui um nome, definido na coluna Relação, que 

caracteriza a relação existente entre as duas classes, definidas nas colunas Domínio e Range.  

Tabela 5 – Lista das relações entre as classes da ontologia de perfuração. 

Domínio Relação Range Descrição 

Operation hasStep Well 
Usada para associar as operações com as etapas 

que são realizadas em cada operação. Operações 

diferentes podem ter etapas do mesmo tipo. 

Abnormality mayOccursIn Step 
Usada para associar as anormalidades com as 

etapas em que essa pode ocorrer. Uma mesma 

anormalidade pode ocorrer em diferentes etapas. 

Abnormality 
isCausedBy? 
mayCause ? 

Abnormality 

Cause 

Usada para associar as anormalidades e suas 

causas em ambos os sentidos. Assim é possível 

inferir que uma anormalidade é causada por uma 

ou mais causas e também que uma causa pode 

causar determinada anormalidade. 

Abnormality hasControlParam Parameter 

Usado para associar as anormalidades com os 

parâmetros operacionais a fim de permitir 

descrever qual parâmetro e seu comportamento 

deve ser monitorado para detectar a ocorrência 

da anormalidade. 

Abnormality 

Cause 
isDefinedBy Parameter 

Usado tanto para descrever os parâmetros e os 

comportamentos que caracterizam a causa de 

uma anormalidade, como também os usados 

para determinar a etapa que está sendo realizada. 
Step 

Parameter hasStatusValue Status Usado para descrever o status de um parâmetro. 

 

Na Figura 33 é apresentado um fragmento com a descrição de uma anormalidade 

utilizando a ontologia. Nesse fragmento, o nome de um indivíduo é representado entre aspas, 

em negrito e itálico. Entre parênteses estão representados as classes (e subclasses) da 

ontologia, apresentados nas tabelas anteriores. Entre colchetes estão representadas as relações 

entre os indivíduos. Dessa forma, uma anormalidade chamada “Dificuldade de avanço”, pode 

ocorrer (“mayOccursIn”) em uma etapa chamada “Perfurando Rotativo”. Essa anormalidade é 

causada por (“isCausedBy”) “Enceramento da Broca” e “Bit Bounce” e tem como parâmetro 

de controle (“hasControlParam”) “ROP_DA”.  

Na Figura 34 é apresentada a descrição da causa “Enceramento da Broca” associada à 

anormalidade “Dificuldade de avanço”. 



108 

 

 

 

 

 

 

 

Dessa forma, a anormalidade “Dificuldade de avanço”, que foi escolhida para ser usada 

no desenvolvimento do protótipo, foi descrita através dos conceitos definidos por essa 

ontologia. Além dessa anormalidade, também foram descritas as etapas da operação de 

perfuração que precisam ser identificadas para detectar essa anormalidade.  

O conhecimento sobre as anormalidades e as etapas, descritos com essa ontologia, são 

usados pelos agentes para a supervisão da operação e para a detecção e diagnóstico das 

anormalidades. 

  

Ontologia de agentes 

A ontologia de agentes foi desenvolvida com a finalidade de descrever os agentes e os 

serviços oferecidos; e servir como uma linguagem de conteúdo, fornecendo a estrutura básica 

para descrever as mensagens trocadas entre eles. A descrição dos agentes e seus serviços têm 

dois papéis no sistema. O primeiro é fornecer um padrão para o registro e descoberta dos 

serviços e recursos oferecidos pelos agentes. O segundo é manter uma descrição das 

interfaces dos agentes, de forma que conhecendo essas interfaces, novos agentes possam ser 

(BitBalling (AbnormalityCause)) “Enceramento da Broca” 

[mayCause] (DifficultInDrilling (BottomholeAbnormality (Abnormality))) 
“Dificuldade de avanço” 

[isDefinedBy] (ROP (Parameter)) “ROP_DA” 

[hasStatusValue] (Decreasing (Status)) “Reducao_ROP_DA” 

... 

[isDefinedBy] (RPM (Parameter)) “RPM_DA” 

      [hasStatusValue] (Increasing (Status)) “Aumento_RPM_DA” 

(DifficultInDrilling (BottomholeAbnormality (Abnormality))) “Dificuldade de avanço” 

 [mayOccursIn] (MajorActivity (Step)) “Perfurando Rotativo” 

 [isCausedBy] (BitBalling (AbnormalityCause)) “Enceramento da Broca” 

 ... 

 [isCausedBy] (Vibration (AbnormalityCause)) “Bit Bounce” 

 [hasControlParam] (ROP (Parameter)) “Rop_DA” 

Figura 33 – Descrição de uma anormalidade utilizando a ontologia. 

Figura 34 – Descrição de uma causa e um parâmetro utilizando a ontologia. 



109 

 

 

 

desenvolvidos para interagir com os agentes existentes, e assim permitir a incorporação de 

novos recursos e funcionalidades ao sistema de uma forma mais flexível, sem afetar a 

integridade do sistema atual. As principais classes e relacionamentos definidos por essa 

ontologia estão representados na Figura 35. 

 

Figura 35 – Estrutura da ontologia de agentes. 

 

Essa ontologia é bem simples e foi desenvolvida com base nas ontologias apresentadas 

no trabalho de Laclavík e colegas (2006), e no projeto TAGA
21

. Além desses dois trabalhos, 

também foi considerado uma recomendação da FIPA que específica uma linguagem de 

conteúdo para mensagens FIPA, baseada no framework RDF – FIPA RDF Content Language 

Specification
22

. Essas abordagens foram reutilizadas para o desenvolvimento da ontologia de 

agentes, sendo que classes como Agent e Action (Figura 35) definidas por essas abordagens 

foram estendidas para satisfazer os requisitos do sistema desenvolvido. A classe Agent foi 

                                                 

21
 http://taga.sourceforge.net/ 

22
 http://fipa.org/specs/fipa00011/XC00011B.html 



110 

 

 

 

estendida para representar os tipos de agentes que formam o SMA, assim como a classe 

Action para os tipos de ações implementadas pelos agentes do SMA. 

Assim, da mesma forma apresentada na ontologia de perfuração, na Figura 35, as 

elipses representam as classes definidas, as setas as relações entre essas classes, e os 

retângulos os atributos das classes.  

Na Tabela 6 é apresentada uma descrição das classes da ontologia de agentes. 

Tabela 6 – Lista das classes definidas na ontologia de agentes. 

Classe Descrição 

Agent 

(Agente) 

Usada para descrever os agentes e classifica-los de acordo com os papéis que eles 

desempenham no SMA. Eles são descritos por um nome (agentName), uma descrição 

(agentDescription) e um conjunto de serviços oferecidos. 

Service 

(Serviço) 

Usada para descrever os serviços oferecidos pelos agentes. Os serviços representam 

um conjunto de ações, implementadas pelos agentes, que caracterizam determinado 

serviço. Eles são descritos por um nome (serviceName), uma descrição (serviceDescr) 

e um conjunto de ações implementadas. 

Action 

(Ação) 

Usada para descrever as ações implementadas pelos agentes, ou seja, as interfaces 

para requisitar ou consumir os serviços. Por isso, essa classe é usada como base para 

representar o conteúdo de uma mensagem. As ações são representadas por um ato 

(act) que dá um nome a ação e por um conjunto de argumentos. 

Resource 

(Recurso) 

Usada para representar os argumentos de uma ação, os quais podem ser qualquer tipo 

de recurso, desde um agente como indivíduos de outras ontologias, nesse caso, da 

ontologia de anormalidade. Por exemplo, uma ação que informa os parâmetros 

operacionais vai ter como argumento recursos que correspondem a indivíduos 

descritos pela ontologia de anormalidade, mais especificamente da classe Parameter. 

 

Na Tabela 7 é apresentado os relacionamentos entre as classes definidas na ontologia de 

agentes. Assim como já explicado na seção anterior, na ontologia de anormalidades, os 

atributos e as relações das superclasses são herdados pelas subclasses. 

Utilizando essa ontologia, um agente, seus serviços e ações são descritos como o 

exemplo apresentado na Figura 36. Da mesma forma que foi descrita a ontologia de 

perfuração, o nome dos indivíduos estão representados entre aspas, em negrito e itálico, as 

classes desse indivíduo entre parênteses, suas relações entre colchetes e seus atributos entre os 

símbolos ‘&amp;lt;&gt;’. Nesse exemplo é descrito um agente que desempenha o papel de Gerenciador 

de Recurso, responsável por recuperar os dados do sistema de Mud-logging, chamado 

wellBoreXYZ_ResourceAgent. Esse agente fornece um serviço do tipo RTDataService, que 

representa os serviços de fornecimento de dados em tempo real. Esse serviço implementa 

duas ações (subscribeRTDataServ e informRTData), a primeira é responsável por registrar 



111 

 

 

 

um agente que deseja receber dados em tempo real, essa ação possui um argumento que deve 

conter a descrição do agente que será registrado. A segunda ação é responsável por informar 

os dados recuperados do sistema de Mud-logging aos agentes registrados, os argumentos 

dessa ação correspondem aos parâmetros operacionais descritos pelos conceitos da ontologia 

de perfuração. 

Tabela 7 – Lista das relações entre as classes da ontologia de agentes. 

Domínio Relação Range Descrição 

Agent 
providesService ? 
isProvidedBy ? 

Service 

Usada para associar os agentes com os serviços 

oferecidos por eles, em ambos os sentidos. Assim é 

possível inferir quais serviços são oferecidos por 

um agente e também quais agentes oferecem 

determinado serviço. 

Service implementsAction Action 

Usada para associar os serviços as ações que fazem 

parte desse serviço. Com essa relação é possível 

descrever os serviços oferecidos por cada agente, 

em termos das ações implementadas pelo agente. 

Action hasArgument Resource 
Usada para associar uma ação a seus argumentos. 

Essa relação é usada para descrever uma ação, 

definindo quais são os argumentos dessa ação. 

Action hasReply Action 

Usado para associar uma ação com outra ação, a 

qual é uma resposta a primeira ação. Por exemplo, 

uma ação que representa uma requisição de 

informação tem como resposta outra ação onde os 

argumentos são as informações requisitadas. 

 

 

 

(ResourceAgent (Agent (Resource))) “resourceAgent_R01” 

&lt;agentName&gt; (xsd:string) “wellBoreXYZ_ResourceAgent” 

&lt;agentDescription&gt; (xsd:string) “...descrição do agente...” 

[providesService] (RTDataService (Service)) “provideRTDataService_R01” 

       &amp;lt;serviceName&gt; (xsd:string) “provideMudLoggingDataServ” 

       &amp;lt;serviceDescr&gt; (xsd:string) “...descrição do servico...” 

[implementsAction] (ServiceSubscription (Action)) “subscribeRTDataServ_R01” 

       &amp;lt;act&gt; (xsd:string) ”subscribeRTDataServ” 

        [hasArgument] (Agent(Resource)) “anyAgent_” 

[implementsAction] ((Action)) “informRTData_WellXYZ_R01” 

       &amp;lt;act&gt; (xsd:string) “informRTData” 

        [hasArgument] (Torque (Parameter (Resource))) “torque_” 

        [hasArgument] (ROP (Parameter (Resource))) “rop_” 

        [hasArgument] (BlockHeight (Parameter (Resource))) “blockHeight_” 

        ... 

Figura 36 – Descrição de um agente utilizando as ontologias. 



112 

 

 

 

Além de descrever os agentes, serviços e ações implementadas, essa ontologia 

juntamente com a ontologia de perfuração é usada para descrever o conteúdo das mensagens 

trocadas entre os agentes, fornecendo um vocabulário comum. O conteúdo das mensagens é 

representado através de um RDF
23

. 

Na Figura 37 é apresentado um exemplo do conteúdo de uma mensagem enviada por 

um agente Gerenciador de Recursos, responsável por recuperar os dados do sistema de Mud-

logging, e informá-los para os agentes assinantes desse serviço. Nesse exemplo, as ontologias 

desenvolvidas são representadas pelos namespaces, presente no cabeçalho do RDF, aclo – 

ontologia de agentes e drab – ontologia de perfuração. Logo, todas as tags do RDF que 

possuem esses namespaces correspondem às classes, relações ou atributos dessas ontologias. 

Como pode ser observado, uma mensagem consiste de uma ação descrita pela classe Action 

da ontologia de agentes. Uma ação possui um atributo “act” que representa o nome da ação e 

um conjunto de argumentos. Essa mensagem se chama “informRTData” e os argumentos 

correspondem aos parâmetros operacionais medidos na perfuração pelo sistema de Mud-

logging. Nessa mensagem são representados os parâmetros “vazão” e “torque”, que possuem 

uma unidade de medida, representado pela relação “drab:hasUOM”, e um valor, representado 

pelo atributo “drab:hasValue”.  

No sistema desenvolvido todas as mensagens trocadas entre os agentes seguem a 

estrutura e os protocolos especificados pela FIPA para a linguagem de comunicação dos 

agentes (FIPA ACL Message Structure Specification
24

). Na Figura 38 é apresentado um 

exemplo de como é a estrutura da mensagem, cujo conteúdo foi apresentado na Figura 37. 

Nessa figura a performativa da mensagem, representada pela palavra “inform”, representa o 

ato comunicativo usado por essa mensagem, que nesse caso é informar. O parâmetro “sender” 

identifica o agente que enviou a mensagem, enquanto o parâmetro “receiver” identifica o 

agente pra quem a mensagem foi enviada. O parâmetro “content” define o conteúdo da 

mensagem, que nesse caso corresponde ao RDF do exemplo anterior. 

 

 

                                                 

23
 http://www.w3.org/RDF/ 

24
 http://fipa.org/specs/fipa00061/SC00061G.html 



113 

 

 

 

 

 

 

 

 

&lt;rdf:RDF 
xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" 
xmlns:xsd="http://www.w3.org/2001/XMLSchema#" 
xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" 
xmlns:owl="http://www.w3.org/2002/07/owl#" 
xmlns:aclo="http://project/multiagent/ontologies/AgentCommunication.owl#" 
xmlns:drab="http://project/multiagent/ontologies/wellDrillingAbnormality.owl#"&gt; 
     
&lt;aclo:Action rdf:about="http://.../AgentCommunication.owl#inform_process_data"&gt; 
     
   &amp;lt;aclo:act rdf:datatype="http://www.w3.org/2001/XMLSchema#string"&gt; 

informRTData 
   &amp;lt;/aclo:act&gt; 
 
   &amp;lt;aclo:argument&gt; 
         &amp;lt;drab:MudFlowIn rdf:about="http://.../wellDrillingAbnormality.owl#vazao"&gt; 
             &amp;lt;drab:hasUOM&gt; 
              &amp;lt;drab:FlowUOM rdf:about="http://.../wellDrillingAbnormality.owl#flow"&gt; 
                    &amp;lt;drab:uom rdf:datatype="http://www.w3.org/2001/XMLSchema#string"&gt; 

            gpm 
                     &amp;lt;/drab:uom&gt; 
                 &amp;lt;/drab:FlowUOM&gt; 
             &amp;lt;/drab:hasUOM&gt; 
             &amp;lt;drab:hasValue rdf:datatype="http://www.w3.org/2001/XMLSchema#double"&gt; 
                   797 
             &amp;lt;/drab:hasValue&gt; 
         &amp;lt;/drab:MudFlowIn&gt; 
   &amp;lt;/aclo:argument&gt; 
     
   &amp;lt;aclo:argument&gt; 
         &amp;lt;drab:Torque rdf:about="http://.../wellDrillingAbnormality.owl#torque"&gt; 
             &amp;lt;drab:hasUOM&gt; 
                &amp;lt;drab:TorqueUOM rdf:about=".../wellDrillingAbnormality.owl#torqueUOM"&gt; 
                     &amp;lt;drab:uom rdf:datatype="http://www.w3.org/2001/XMLSchema#string"&gt; 
                          lb*ft 
                     &amp;lt;/drab:uom&gt; 
                 &amp;lt;/drab:TorqueUOM&gt; 
             &amp;lt;/drab:hasUOM&gt; 
             &amp;lt;drab:hasValue rdf:datatype="http://www.w3.org/2001/XMLSchema#double"&gt; 
                  3459 
             &amp;lt;/drab:hasValue&gt; 
         &amp;lt;/drab:Torque&gt; 
   &amp;lt;/aclo:argument&gt; 
   
    ... outros argumentos ... 
 &amp;lt;/aclo:Action&gt; 

&lt;/rdf:RDF&gt; 

Figura 37 – Exemplo do conteúdo de uma mensagem descrito utilizando os conceitos das ontologias. 



114 

 

 

 

 

 

5.2.2 Implementação da camada Sistema Multiagente 

 

A camada Sistema Multiagente foi implementada de acordo com os papéis 

especificados no Capítulo 4, através dos diagramas que descrevem os comportamentos dos 

agentes. Esses diagramas fazem parte da metodologia de desenvolvimento de software 

orientada a agentes Tropos, e foram criados com a ferramenta de modelagem TAOM4E 

(Seção 2.1.6.1). Com base nesses diagramas, utilizando a ferramenta t2x tool (Seção 2.1.6.1), 

que é um plug-in do TAOM4E, foram gerados os códigos dos agentes.  

O código gerado é baseado na arquitetura de agentes BDI e é compatível com a 

plataforma de agentes Jadex
25

 (versão 2.3). Esse código consiste apenas no esqueleto dos 

                                                 

25
 http://www.activecomponents.org 

Figura 38 – Exemplo da estrutura de uma mensagem FIPA-ACL e conteúdo descrito pelas ontologias. 

 (inform 

     :sender GerenciadorRecurso@mac 

     :receiver Monitor@mac 

     :content “ 

         &amp;lt;?xml version="1.0"?&gt; 

&lt;rdf:RDF 
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns# 
    xmlns:xsd="http://www.w3.org/2001/XMLSchema#" 

       xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" 
       xmlns:owl="http://www.w3.org/2002/07/owl#" 
       xmlns:aclo="http://.../AgentCommunication.owl#" 
       xmlns:drab="http://.../wellDrillingAbnormality.owl#"&gt; 
     
      &amp;lt;aclo:Action rdf:about="http://.../AgentCommunication.owl#inform_process_data"&gt; 
     
          &amp;lt;aclo:act rdf:datatype="http://www.w3.org/2001/XMLSchema#string"&gt; 
                     informRTData 
          &amp;lt;/aclo:act&gt; 
 
          &amp;lt;aclo:argument&gt; ...&amp;lt;/aclo:argument&gt; 
             ...      
     &amp;lt;/aclo:Action&gt; 
&lt;/rdf:RDF&gt; 

     “ 

 ) 



115 

 

 

 

agentes e por isso, foram feitos os ajustes necessários para a implementação. Assim os 

agentes foram implementados em Java no ambiente de desenvolvimento Eclipse
26

, utilizando 

os frameworks Jadex para o desenvolvimento dos agentes e Jena para a manipulação das 

ontologias. 

Nas próximas seções são apresentados cada um dos agentes implementados. 

 

5.2.2.1 Agente Gerenciador de Recurso 

Na aplicação desenvolvida apenas um agente com o papel Gerenciador de Recurso foi 

implementado. Esse agente é responsável por recuperar os dados disponibilizados na camada 

de Dados e Serviços pelo sistema de Mud-logging. Os dados coletados correspondem aos 

parâmetros de perfuração e são anotados pelas ontologias de perfuração. Desta forma, esses 

dados são disponibilizados para os outros agentes em um formato que todos entendam. Nas 

seções anteriores (Figura 37 e Figura 38) foi apresentado um exemplo de como os dados são 

representados e enviados através de uma mensagem. O ADF que representa a estrutura interna 

desse agente baseado na plataforma Jadex é apresentado no Apêndice D. 

Uma descrição dos objetivos desse agente é apresentada no Apêndice C.1. 

 

5.2.2.2 Agente Monitor 

Na aplicação desenvolvida dois agentes com o papel Monitor foram implementados. O 

primeiro foi desenvolvido para identificar a etapa da operação de perfuração, enquanto o 

segundo agente foi desenvolvido para detectar a anormalidade “Dificuldade de avanço”. Para 

isso, são utilizados os métodos apresentados nas Seções 5.1.3 e 5.1.4, e o conhecimento das 

etapas, das anormalidades e das causas, descritos através dos conceitos definidos na ontologia 

de perfuração. 

Esses agentes, ao serem inicializados, buscam os agentes que fornecem os parâmetros 

de perfuração necessários para detectar a anormalidade “Dificuldade de avanço” e assinam o 

serviço desse agente para receber os dados. O agente Monitor responsável por identificar a 

etapa da operação analisa os parâmetros recebidos e informa o agente Supervisor quando está 

                                                 

26
 http://www.eclipse.org/ 



116 

 

 

 

sendo realizada a etapa de perfuração. O agente Supervisor notifica o outro agente Monitor 

que inicializa a análise dos parâmetros e informa as condições da operação para os agentes 

assinantes do serviço de monitoramento. Quando é detectada a “Dificuldade de avanço”, o 

agente Monitor informa ao agente Supervisor as condições na qual a anormalidade foi 

detectada. O Supervisor utiliza essas informações e também o conhecimento armazenado nas 

ontologias para diagnosticar e identificar as causas que levaram a essa ocorrência. O 

diagnóstico é informado aos agentes assinantes do serviço de supervisão. 

Uma descrição dos objetivos desses agentes é apresentada no Apêndice C.2. 

 

5.2.2.3 Agente Supervisor 

O agente implementado com o papel Supervisor é responsável por supervisionar as 

operações de perfuração. Para isso, é utilizado o conhecimento, sobre as operações, as 

anormalidades e os agentes, descritos pelas ontologias e mantido na base de conhecimento 

pelo agente Gerenciador de Conhecimento. Com base nesse conhecimento, esse agente 

inicializa o agente Gerenciador de Recurso que desempenha a tarefa necessária para recuperar 

os dados de Mud-logging, e os Monitores para identificar a etapa da perfuração e detectar as 

anormalidades que podem ocorrer nessa operação. 

Sempre que o Supervisor receber uma notificação de anormalidade de um agente 

Monitor, ele realiza uma consulta na base de conhecimento, através do agente Gerenciador de 

Conhecimento, a fim de diagnosticar essa anormalidade para identificar suas causas. O 

diagnóstico é informado ao usuário por meio de um agente Gerenciador de Interface com o 

Usuário, assinante do serviço de supervisão. 

Uma descrição dos objetivos desse agente é apresentada no Apêndice C.3. 

 

5.2.2.4 Agente Gerenciador de Conhecimento 

O agente implementado com o papel Gerenciador de Conhecimento é responsável por 

gerenciar o repositório Semântico da aplicação (apresentado na Seção 5.2.1.3), dando acesso 

aos outros agentes para o conhecimento armazenado nesse repositório. Todo o conhecimento 

está descrito na forma de ontologias utilizando a linguagem OWL. Assim todas as consultas 



117 

 

 

 

dos outros agentes são tratadas pelo agente Gerenciador de Conhecimento, que consulta o 

repositório Semântico, utilizando a linguagem SPARQL
27

. 

Uma descrição dos objetivos desse agente é apresentada no Apêndice C.4. 

 

5.2.2.5 Agente Gerenciador de Interface com o Usuário 

Na aplicação desenvolvida foi implementado um agente com o papel Gerenciador de 

Interface com o Usuário. Esse agente possui duas configurações as quais definem o tipo de 

comportamento que o agente vai apresentar. Na primeira configuração o agente funciona 

como um gerenciador de usuário, validando as informações de acesso do usuário quando esse 

entra no sistema e inicializando um novo agente Gerenciador de Interface com o Usuário 

(com a segunda configuração) para interagir e atender as requisições desse usuário. Assim, 

um agente com essa configuração é inicializado junto com o SMA e permanece ativo, 

aguardando a entrada de novos usuários. 

Na segunda configuração o agente funciona como um “assistente pessoal” atendendo as 

requisições do usuário, que ele representa, e fornecendo as informações de interesse do 

mesmo. Um agente, com essa configuração, é inicializado para cada usuário ao entrar no 

sistema e o mesmo permanece ativos até o encerramento da sessão do usuário. Nessa 

aplicação, esse agente permite ao usuário consultar as informações sobre as anormalidades e 

os agentes, mantidas na base de conhecimento da aplicação. Outra tarefa desempenhada por 

esse agente envolve obter os dados de perfuração, assim como as informações sobre o 

monitoramento da operação e diagnóstico da anormalidade. 

Uma descrição dos objetivos desse agente é apresentada no Apêndice C.5. 

 

5.2.2.6 Agente Facilitador 

Nessa aplicação não foi implementado um agente com o papel de Facilitador, pois foi 

utilizado o agente, chamado Directory Facilitator (DF) implementado e disponibilizado pela 

plataforma Jadex. Esse agente oferece as mesmas funcionalidades que o papel Facilitador 

propõe. Também por essa razão, a comunicação entre esse agente e os outros não utiliza as 

                                                 

27
 http://www.w3.org/TR/rdf-sparql-query/ 



118 

 

 

 

ontologias para descrever o conteúdo das mensagens, pois para isso são utilizados os recursos 

oferecidos pela plataforma. 

 

5.2.3 Implementação da camada de Apresentação 

 

Em um sistema Web, essa camada é formada pelas interfaces gráficas, que consistem 

em um conjunto de páginas Web, e pelos componentes que gerenciam essas interfaces, 

tratando as requisições do usuário e controlando como as informações são apresentadas. Essas 

interfaces apresentam para os usuários de forma visual as funcionalidades e os recursos do 

sistema. 

Nesse trabalho, essa camada foi implementada utilizando o framework Apache 

MyFaces 2.1.5
28

, que é uma implementação da especificação JSF 2.1
29

 
30

. O JSF consiste de 

uma especificação Java para aplicações Web, a qual estabelece padrões para a construção de 

interfaces de usuário baseadas em componentes. Essa especificação tem como base o modelo 

de projeto MVC e seu objetivo é estabelecer padrões para o desenvolvimento de ferramentas e 

APIs, usadas para simplificar e facilitar o desenvolvimento de aplicações Web. 

Com a utilização desse framework as interfaces gráficas foram desenvolvidas utilizando 

a tecnologia XHTML
31

, que podem ser visualizadas através de qualquer navegador Web 

(browser) e também por diferentes dispositivos que suportam essa tecnologia. 

Para auxiliar o desenvolvimento das interfaces em XHTML foi usada a biblioteca de 

componentes JSF, RichFaces
32

 (versão 4.3.1) que permite uma fácil integração de 

funcionalidades AJAX
33

 (Asynchronous Javascript and XML) a aplicação, permitindo o 

desenvolvimento de páginas Web com conteúdo dinâmico. A utilização de AJAX para o 

desenvolvimento das páginas Web permite o tratamento de requisições assíncronas e que 

partes específicas da página sejam atualizadas sem a necessidade de carregar toda a página. 

                                                 

28
 http://myfaces.apache.org/core21/ 

29
 https://javaserverfaces-spec-public.java.net/ 

30
 http://www.oracle.com/technetwork/java/javaee/javaserverfaces-139869.html 

31
 http://www.w3.org/TR/xhtml1/ 

32
 http://www.jboss.org/richfaces 

33
 http://www.adaptivepath.com/ideas/ajax-new-approach-web-applications 



119 

 

 

 

Esse recurso é importante nesse sistema para a atualização em tempo real dos gráficos de 

monitoramento e também outros componentes da interface. 

No sistema foram desenvolvidas três páginas Web, as quais são estruturadas por um 

conjunto de formulários, os quais apresentam as funcionalidades e os recursos da aplicação. 

Essas interfaces correspondem a: 

? Interface de entrada no sistema – apresenta os formulários para o usuário entrar no 

sistema, onde deve ser informado o nome de usuário e uma senha; 

? Interface de monitoramento de anormalidades – formada pelos formulários que 

apresentam os parâmetros monitorados e também as notificações sobre as anormalidades; 

? Interface de configuração da aplicação – formada pelos formulários que permitem ao 

usuário visualizar e manipular as informações que descrevem as operações, as 

anormalidades e também os agentes. 

Na Figura 39 é apresentada a interface de monitoramento de anormalidade. Esta 

interface consiste em um formulário que possui quatro abas. Na aba principal, chamada 

Monitoramento de Anormalidades, é possível acompanhar em tempo real os parâmetros 

operacionais da perfuração, através de um conjunto de gráficos e também as tendências dos 

parâmetros monitorados.  

 

Figura 39 – Interface de monitoramento dos parâmetros de perfuração. 



120 

 

 

 

Na Figura 40 é apresentada a interface de configuração da aplicação, que é formada por 

um conjunto de abas. Na aba Gerenciar Agentes, pode ser visualizado os agentes que estão 

cadastrados no sistema e suas descrições e funcionalidades. 

 

Figura 40 – Interface de gerenciamento dos agentes da aplicação. 

 

Na Figura 41 é apresentada a interface de configuração da aplicação, na aba Gerenciar 

Anormalidades pode ser visualizado todo o conhecimento utilizado na identificação das 

anormalidades que estão cadastradas no sistema. 

 

5.3 Teste do protótipo 

 

No teste do protótipo, a camada de Apresentação foi implantada e executada no servidor 

de aplicação Web Apache Tomcat
34

 (versão 7.0.37), enquanto os agentes foram executados na 

plataforma Jadex (versão 2.3). A comunicação entre os componentes da camada de 

Apresentação e o SMA é feita através dos agentes Gerenciadores de Interface com o Usuário. 

                                                 

34
 http://tomcat.apache.org/ 



121 

 

 

 

 

Figura 41 – Interface de gerenciamento das anormalidades. 

 

Os dados de perfuração, disponibilizados na camada de Dados e Serviços, usados no 

teste do protótipo correspondem a um conjunto de dados de um poço já perfurado, coletados 

pelo sistema de Mud-logging da sonda. Esse conjunto de dados foi coletado durante 10 dias 

de operações (do dia 15/09/2008 ao dia 25/09/2008). 

Na aplicação, o comportamento e a interação entre os agentes seguem os cenários que 

foram apresentados na Seção 4.5.3. Algumas dessas interações são inicializadas pelas ações 

dos usuários nas interfaces gráficas, como a entrada no sistema ou a requisição de uma 

informação. As informações produzidas pelos agentes nesses cenários são apresentadas aos 

usuários através das interfaces gráficas que são atualizadas dinamicamente. 

Assim, no cenário de inicialização da aplicação um agente Gerenciador de Interface 

com o Usuário é criado. Este agente encontra o agente Supervisor, os Monitores e o 

Gerenciador de Recurso e solicita as informações sobre a perfuração para apresentá-las aos 

usuários através das interfaces gráficas.  



122 

 

 

 

Os parâmetros operacionais fornecidos pelo agente Gerenciador de Recurso são 

apresentados na interface de monitoramento (Figura 39). Na Figura 42 são apresentados em 

detalhes os gráficos correspondentes aos parâmetros Torque, RPM, HookLoad, WOB e 

BlockHeight. Na interface de monitoramento esses gráficos correspondem as ultimas quatro 

horas e são atualizados continuamente a cada novo valor coletado. 

 

Figura 42 – Representação gráfica dos parâmetros monitorados. 

 

Uma outra informação importante apresentada na interface de monitoramento (Figura 

39) corresponde a etapa da perfuração e as condições dos parâmetros monitorados. Essas 

informações são fornecidas pelos agentes Monitores. Na Figura 43 é apresentado em detalhes 

o resultado da análise das tendências dos parâmetros monitorados, correspondentes aos 

últimos valores coletados, e também a etapa da perfuração identificada. 

 

Figura 43 – Apresentação das tendências dos parâmetros monitorados e etapa realizada. 

 



123 

 

 

 

Os diagnósticos das anormalidades fornecidos pelos agentes Supervisores também são 

apresentados na interface de monitoramento (Figura 39). Na Figura 44 é apresentado em 

detalhes os diagnósticos das anormalidades detectadas. No exemplo dessa figura, as 22:35:41 

horas foi identificado uma ocorrência da anormalidade “Dificuldade de avanço”, onde a causa 

identificada pelos sistemas para essa ocorrência corresponde a Formação Dura (Tabela 3). 

 

Figura 44 – Apresentação dos diagnósticos das anormalidades. 

 

A descrição dos agentes desenvolvidos pode ser visualizada pelos usuários através da 

interface de configuração (Figura 40). Quando o usuário navega nesta interface, uma 

requisição é enviada ao agente Gerenciador de Interface com o Usuário, que recupera essas 

informações na base de conhecimento, através de uma consulta ao agente Gerenciador de 

Conhecimento. Na Figura 45 é apresentada em detalhes os agentes de acordo com os tipos 

definidos pelas classes da ontologia de agentes. Para cada um dos agentes é apresentado os 

serviços, as ações implementadas por esses serviços, e os argumentos dessas ações.  

Da mesma forma, o conhecimento sobre as anormalidades e suas causas pode ser 

visualizado através da interface de configuração (Figura 41). Na Figura 46 é apresentada a 

anormalidades “Dificuldade de avanço” de acordo com a classificação definida na ontologia, 

que consiste no parâmetro de controle – “ROP”, a operação em que pode ocorrer – 

“perfurandoRotativo”, e a lista de eventos causadores.  

 



124 

 

 

 

 

Figura 45 – Apresentação das descrições dos agentes. 

 

 

Figura 46 – Apresentação das descrições das anormalidades. 

 

A identificação das etapas foi realizada utilizando o método apresentado no trabalho de 

Tavares (2006). No conjunto de dados utilizados para os testes foram identificados à 

realização de três etapas: Manobrando, Repassando Rotativo e Perfurando Rotativo. Na 



125 

 

 

 

Figura 47 é apresentado um intervalo do conjunto de dados utilizados, onde essas etapas 

foram identificadas. Nesse gráfico essas etapas estão representadas pelas linhas na horizontal 

(eixo-x), onde a etapa Manobrando corresponde aos valores onde y = 10, Perfurando Rotativo 

onde y = 20, e Repassando Rotativo onde y = 30. Essa figura apresenta de forma gráfica quais 

as etapas que são realizadas durante a operação de perfuração, assim a ordem da execução das 

etapas começa com Repassando Rotativo, seguido de Manobrando, depois outro Repassando 

Rotativo e enfim Perfurando Rotativo, e isso se repete para cada nova seção que é perfurada. 

Mais detalhes sobre essa operação podem ser encontrados nos trabalhos de Tavares (2006) e 

Chipindu (2010). 

Durante as etapas Perfurando Rotativo foi realizada a análise para a detecção da 

anormalidade “Dificuldade de avanço”. Na Figura 47 é apresentado um intervalo onde foram 

identificadas as ocorrências dessa anormalidade, descritas pela variável “dif-Avanço”. Nessa 

figura os picos no gráfico da variável “dif-Avanço” representam a ocorrência da anormalidade 

e sua duração, assim quanto maior o pico no gráfico significa que durou mais tempo. 

 

Figura 47 – Resultado dos metodos de análise. 

 

Conforme apresentado na Figura 44, para cada ocorrência dessa anormalidade foram 

diagnosticadas as causas de acordo com o conhecimento definido no trabalho de Chipindu 

(2010) e por um especialista da área. Entretanto não é possível afirmar que os resultados estão 

corretos, pois seria necessário checar as informações registradas nos boletins diários da sonda, 

os quais não estão disponíveis. Um outro aspecto a ser considerado é que os dados disponíveis 

já apresentam as intervenções realizadas pelos operadores para o tratamento desses 

problemas, o que pode afetar os diagnósticos. 



126 

 

 

 

Considerando que o principal objetivo do desenvolvimento desse protótipo foi mostrar a 

utilização da arquitetura proposta para uma aplicação de supervisão e controle, os resultados 

obtidos se apresentaram satisfatórios. 

 

5.4 Considerações e discussões 

 

Nesse estudo de caso foi selecionado um problema na área de perfuração de poços de 

petróleo relacionado à supervisão e controle de processos. Um protótipo de uma aplicação foi 

desenvolvido utilizando a arquitetura proposta no Capítulo 4. Para essa aplicação na camada 

de Apresentação foram desenvolvidas algumas interfaces Web para o acompanhamento das 

operações de perfuração para a identificação e diagnósticos de anormalidades. Um conjunto 

de agentes foi implementado para cumprir com os requisitos dessa aplicação. Duas 

ontologias, a de perfuração e a de agentes, foram criadas para representar o conhecimento 

utilizado nessa aplicação.  

Um teste foi realizado utilizando dados reais obtidos de um poço já perfurado, e o 

sistema foi capaz de detectar a ocorrência da anormalidade “Dificuldade de avanço” e 

determinar as causas dessa anormalidade. Nesse estudo de caso, apenas os aspectos 

relacionados ao monitoramento de processos foram considerados, sendo que os aspectos 

relacionados ao controle de processos, que também são apresentados na arquitetura proposta, 

não foram tratados.  

O principal objetivo desse estudo de caso foi alcançado mostrando como a arquitetura, 

que utiliza conceitos de agentes e ontologias, pode ser utilizada para o desenvolvimento de 

sistemas para automatizar as atividades de monitoramento de processo, e auxiliar os 

operadores na identificação de anormalidades e nas tomadas de decisões. 

  



127 

 

 

 

6 CONSIDERAÇÕES FINAIS E TRABALHOS FUTUROS 

 

A evolução e o desenvolvimento de novas tecnologias têm contribuído para o aumento 

da complexidade dos ambientes indústrias, gerando a necessidade de sistemas computacionais 

complexos que forneçam ferramentas para integrar os elementos, gerenciar e analisar a grande 

quantidade de dados produzida nesses ambientes, e automatizar as atividades desenvolvidas 

pelos operadores para a supervisão e controle dos processos e nas tomadas de decisões. 

Nesse sentido, a abordagem de SMA vem sendo utilizada para o desenvolvimento de 

sistemas complexos, fornecendo uma infraestrutura mais apropriada para lidar com esses 

ambientes, dando suporte ao desenvolvimento de sistemas mais flexível, escalável, distribuído 

e aberto. A modularidade e a autonomia apresentada pelos agentes permitem um melhor 

gerenciamento, controle e integração dos diversos componentes envolvidos nesses ambientes. 

Um outro aspecto fundamental, que permite aproveitar toda a potencialidade da 

abordagem baseada em agentes, é tornar o conhecimento do domínio disponível e processável 

pelas máquinas. Nesse sentido, a utilização de ontologias para descrever o domínio no qual os 

agentes atuam é essencial para garantir a flexibilidade e escalabilidade das aplicações. De 

forma que com a definição e o uso de uma ontologia aberta e compartilhada que descreva os 

conceitos de domínio e as interfaces dos agentes, novos agentes podem ser desenvolvidos por 

diferentes desenvolvedores e integrados ao sistema sem exigir grandes esforços. 

Baseado nos benefícios oferecidos pela abordagem de agentes juntamente com a de 

ontologias, nesse trabalho foi proposta uma arquitetura multiagentes de referência para ser 

usada como base para o desenvolvimento de sistemas de supervisão e controle de processos. 

Para a especificação da arquitetura de referência foi realizado um levantamento 

bibliográfico que teve como objetivo analisar os aspectos de um conjunto de soluções para o 

domínio de supervisão e controle de processos que exploram a abordagem de SMA. A partir 

desse estudo foram identificados e analisados as capacidades e funcionalidades apresentadas 

pelos agentes desses sistemas. Assim, na arquitetura proposta foram considerados os 

principais requisitos e características, identificadas nas arquiteturas apresentadas pelos SMAs 

analisados. 



128 

 

 

 

Considerando que a arquitetura proposta foi concebida abrangendo os diversos aspectos 

do domínio de supervisão e controle, o desenvolvimento de uma aplicação para validar todo o 

potencial da arquitetura, envolvendo todos os aspectos, era impossível de ser desenvolvido no 

tempo disponível, além de não ser o objetivo principal do trabalho. Portanto, para validar e 

mostrar a utilização da arquitetura proposta um protótipo de um sistema no domínio de 

petróleo foi desenvolvido para supervisionar as operações de perfuração de poços. Nesse 

protótipo uma instância dos componentes especificados na arquitetura foi implementada para 

o monitoramento e diagnóstico de uma anormalidade que pode ocorrer durante a perfuração. 

O objetivo desse trabalho não foi desenvolver nenhum método de análise para a identificação 

e diagnóstico da anormalidade, por isso foram utilizados métodos propostos em trabalhos 

nessa área de domínio. 

 

6.1 Principais contribuições 

 

A principal contribuição desse trabalho é a arquitetura de referência especificada. Nesse 

sentido se destaca a especificação das funcionalidades e dos comportamentos que definem os 

papéis dos agentes no domínio de supervisão e controle de processo. Esses papéis fazem a 

divisão das responsabilidades e tarefas dentro desse domínio. Embora tenham sido 

especificados em detalhes se apresentam de uma forma genérica para que possam ser 

abstraídos e utilizados para desenvolver os agentes de acordo com as necessidades do domínio 

da aplicação. 

Além disso, a organização da arquitetura permite separar a aplicação em três camadas, 

de forma que os componentes dessas camadas podem ser desenvolvidos de forma separada. 

Nesse sentido, a camada de Apresentação pode utilizar diferentes tecnologias para a 

apresentação das informações, como aplicações Web, Desktop ou para dispositivos móveis 

(ex. smartphones e tablets). A utilização de um agente com o papel Gerenciador de Interface 

com o usuário para cada usuário permite a personalização do conteúdo. 

Considerando que em muitas das abordagens estudadas as arquiteturas foram 

concebidas de forma ad-hoc, logo outra contribuição desse trabalho é a concepção da 

arquitetura utilizando uma metodologia de desenvolvimento orientada a agentes, a Tropos, 

além de utilizar o modelo arquitetural BDI. 



129 

 

 

 

Outra contribuição está relacionada ao estudo de caso que consiste de uma aplicação na 

área de perfuração de poços de petróleo offshore. Esta área é de grande importância 

econômica para o país em decorrência dos desafios apresentados pelas reservas do pré-sal. O 

desenvolvimento de tecnologias para tratar esses desafios podem produzir importantes 

resultados. Nesse contexto, o protótipo desenvolvido, além de apresentar como a abordagem 

de SMA pode ser utilizada para o desenvolvimento de sistemas de software, também 

apresenta o desenvolvimento de uma ontologia para o domínio de perfuração de poços de 

petróleo. 

Em relação à ontologia de agentes desenvolvida, esta apresenta uma estrutura genérica 

que pode ser reutilizada para o desenvolvimento de outras aplicações, sendo que as principais 

mudanças devem ocorrer nos tipos de agentes, serviços e ações que podem ser estendidas para 

se adequar a outros domínios ou ampliar as funcionalidades da aplicação. Já a ontologia de 

anormalidades é específica para o domínio de perfuração de poços e não se aplica a outros 

contextos, mas a estrutura apresentada pode ser utilizada para desenvolver ontologias para 

outros domínios. 

 

6.2 Trabalhos futuros 

 

Como trabalhos futuros, a arquitetura pode ser aprimorada, através do desenvolvimento 

de novos estudos de casos que podem contribuir para a identificação de novos requisitos. 

Principalmente, relacionados aos aspectos de controle, com a finalidade de aprimorar a 

especificação do papel Controlador que não foi considerada no estudo de caso apresentado. 

Diante da especificação geral da arquitetura torna-se possível o desenvolvimento de 

uma metodologia, como também de um framework para dar suporte ao projeto e a 

implementação de aplicações baseadas na arquitetura proposta. 

Já o protótipo, desenvolvido no estudo de caso, pode ser melhorado e estendido para 

outras anormalidades, visto que na indústria de petróleo existe uma carência de ferramentas 

como essa, para identificar e realizar o diagnóstico de anormalidades, oferecendo informações 

que os operadores podem utilizar para aplicar as ações mais adequadas para solucionar 

determinados problemas. 



130 

 

 

 

REFERÊNCIAS BIBLIOGRAFICAS 

 

ATHANASIADIS, I. N.; MITKAS, P. A. An agent-based intelligent environmental 

monitoring system. Management of Environmental Quality: An International Journal, 

15, n. 3, 2004. 238–249. 

BERGENTI, F.; GLEIZES, M.-P.; ZAMBONELLI, F. Methodologies and Software 

Engineering for Agent Systems - The Agent-Oriented Software Engineering Handbook. 

2004 edition. ed. [S.l.]: Springer, 2008. 505 p. 

BORDINI, R. H.; BRAUBACH, L.; DASTANI, M.; EL, A.; SEGHROUCHNI, F.; GOMEZ-

SANZ, J. J.; LEITE, J.; POKAHR, A.; RICCI, A. A Survey of Programming Languages and 

Platforms for Multi-Agent Systems. Informatica, v. 30, p. 33-44, 2006. 

BRAUBACH, L.; POKAHR, A.; LAMERSDORF, W. Jadex: A BDI-agent system combining 

middleware and reasoning. In Software Agent-Based Applications, Platforms and 

Development Kits, 2005. 143–168. 

BRAZIER, F. M. T.; KEPHART, J. O.; PARUNAK, H. V. D.; HUHNS, M. N. Agents and 

service-oriented computing for autonomic computing: A research agenda. Internet 

Computing, IEEE, 13, n. 3, 2009. 82–87. 

BRESCIANI, P.; GIORGINI, P.; GIUNCHIGLIA, F.; MYLOPOULOS, J.; PERINI, A. 

Tropos: An Agent-Oriented Software Development Methodology. Autonomous Agents and 

Multi-Agent Systems, v. 3, n. 8, p. 203–236, 2004. 

BUNCH, L.; BREEDY, M.; BRADSHAW, J. M.; CARVALHO, M.; SURI, N. KARMEN - 

Multi-agent monitoring and Notification for Complex Processes. In LNAI No. 3593. 

[S.l.]: Heidelberg: Springer Verlag. 2005. p. 197–206. 

BUNCH, L.; BREEDY, M.; BRADSHAW, J. M.; CARVALHO, M.; SURI, N.; USZOK, A.; 

HANSEN, J.; PECHOUCEK, M.; MARIK, V. Software agents for process monitoring and 

notification. Proceedings of the 2004 ACM symposium on Applied computing - SAC '04. 

[S.l.]: [s.n.]. 2004. p. 94-100. 

BUSCHMANN, F.; MEUNIER, R.; ROHNERT, H.; SOMMERLAD, P.; STAL, M. Pattern-

Oriented Software Architecture: A System of Patterns. [S.l.]: John Wiley and Sons, 1996. 

125-143 p. 

CAPRETZ, M. A. M.; HRYB, M. C. Software integration using a dynamic wrapper 

agent. WSEAS Conferences. [S.l.]: [s.n.]. 2005. p. 1-6. 

CASTRO, J.; KOLP, M.; MYLOPOULOS, J. Towards Requirements-Driven Information 

Systems Engineering: The Tropos Project. In Information Systems Journal, v. 6, n. 27, p. 

365-389, 2002. 

CERRADA, M.; CARDILLO, J.; AGUILAR, J.; FANEITE, R. Agents-based design for fault 

management systems in industrial processes. Computers in Industry, 58, n. 4, 2007. 313-

328. 



131 

 

 

 

CHIPINDU, N. S. C. Pós-análise em problemas de perfuração de poços marítimos de 

desenvolvimento. Dissertação de Mestrado, Universidade Estadual de Campinas. Faculdade 

de Engenharia Mecânica. Campinas,SP, p. 113. 2010. 

CHRYSSOLOURIS, G. Manufacturing Systems: Theory and Practice (Mechanical 

Engineering Series). 2nd. ed. New York: Springer, 2006. 602 p. 

CRISTALDI, L.; MONTI, A.; OTTOBONI, R.; PONCI, F. Multi-Agent Based Power 

Systems Monitoring Platform: A Prototype. 2003 IEEE Bologna Power Tech Conference, 

2003. 1-5. 

DUNN, W. C. Introduction to Instrumention, Sensors and Process Control. [S.l.]: Artech 

House Publishers , 2006. 354 p. 

EUGSTER, P. T.; FELBER, P. A.; GUERRAOUI, R.; KERMARREC, A.-M. The many 

faces of publish/subscribe. ACM Computing Surveys, v. 35, n. 2, p. 114-131, 2003. 

GREENWOOD, D.; LYELL, M.; MALLYA, A.; SUGURI, H. The IEEE FIPA approach to 

integrating software agents and web services. Proceedings of the 6th international joint 

conference on Autonomous agents and multiagent systems. Honolulu, Hawaii: [s.n.]. 2007. p. 

May 14-18. 

GROOVER, M. P. Automation, Production Systems, and Computer-Integrated 

Manufacturing. 2nd Edition. ed. Upper Saddle River, NJ, USA: Prentice Hall, 2000. 856 p. 

GUILHERME, I. R.; PEDROSANTO, R.; TEIXEIRA, A. F.; MOROOKA, C. K.; SIERRA, 

C. A Multiagent Architecture for Supervisory and Control System. In: International 

Conference on Computational Intelligence for Modelling, Control and Automation 

(CIMCA), Viena, v. 1, p. 98-103, 2008. 

HEMAYATI, S. M.; MOHSENZADEH, M.; SEYYEDI, M. A.; YOUSEFIPOUR, A. A 

framework for integrating web services and multi-agent systems. 2010 2nd International 

Conference on Software Technology and Engineering, 2010. 314-319. 

HENDERSON-SELLERS, B.; GIORGINI, P. Agent-Oriented Methodologies. [S.l.]: Idea 

Group Publishing, 2005. 428 p. 

HOSSACK, J. A.; MENAL, J.; MCARTHUR, S. D. J.; MCDONALD, J. R. A multiagent 

architecture for protection engineering diagnostic assistance. Power Systems, IEEE 

Transactions on power systems, 18, n. 2, 2003. 639–647. 

HUHNS, M. N. Software agents: The future of web services. Proceedings of the NODe 2002 

agent-related conference on Agent technologies, infrastructures, tools, and applications for E-

services. [S.l.]: [s.n.]. 2003. p. 1-18. 

JACKE, B.; SAUER, O.; SUTSCHET, G. ProVis.Agent - An Agent-Based Production 

Monitoring And Control System. in Proc. SAISA. [S.l.]: Fraunhofer IRB Verlag. 2006. p. 

75-82. 

JENNINGS, N. R. The ARCHON System and its Applications. In 2nd Int. Conf. on 

Cooperating Knowledge Based Systems (CKBS-94). Keele, UK: [s.n.]. 1994. p. 13-29. 

JENNINGS, N. R. On agent-based software engineering. Artificial intelligence, v. 117, n. 2, 

p. 277–296, 2000. 



132 

 

 

 

JENNINGS, N. R.; BUSSMANN, S. Agent-based control systems. IEEE control systems 

Magazine, v. 23, n. 3, p. 61-73, 2003. 

JENNINGS, N. R.; WOOLDRIDGE, M. Applications of Agent Technology. In: JENNINGS, 

N. R.; WOOLDRIDGE, M. Agent Technology - Foundations, Applications, and Markets. 

[S.l.]: Springer-Verlag, 1998. p. 3-27. 

LACLAVÍK, M.; BALOGH, Z.; BABÍK, M.; HLUCHý, L. AgentOWL - Semantic 

knowledge model and agent architecture. Computing and Informatics, v. 25, p. 419-437, 

2006. 

LUCK, M.; MCBURNEY, P.; SHEHORY, O.; WILLMOTT, S. Agent technology: 

computing as interaction (a roadmap for agent based computing). [S.l.]: AgentLink III, 2005. 

MCARTHUR, S. D. J.; DAVIDSON, E. M.; CATTERSON, V. M.; DIMEAS, A. L.; 

HATZIARGYRIOU, N. D.; PONCI, F.; FUNABASHI, T. Multi-Agent Systems for Power 

Engineering Applications - Part I: Concepts, Approaches, and Technical Challenges, 22, n. 4, 

2007. 1743-1752. 

MENDES, J. M.; LEITÃO, P.; RESTIVO, F.; COLOMBO, A. W. Service-oriented agents for 

collaborative industrial automation and production systems. Holonic and Multi-Agent 

Systems for Manufacturing, 2009. 13–24. 

MENDES, J. M.; RESTIVO, F.; LEITÃO, P.; COLOMBO, A. W. Injecting Service-

Orientation into Multi-Agent Systems in Industrial Automation. Artifical Intelligence and 

Soft Computing, p. 313–320, 2010. 

METZGER, M.; POLAKÓW, G. A Survey on Applications of Agent Technology in 

Industrial Process Control. IEEE TRANSACTIONS ON INDUSTRIAL INFORMATICS, 

7, n. 4, 09 Novembro 2011. 570-581. 

MIURA, K.; GUILHERME, I. R.; MOROOKA, C. K.; MENDES, J. R. P. Processing 

Technical Daily Report in Offshore Petroleum Engineering - An Experience. Journal of 

Advanced Computational Intelligence, v. 7, p. 223-228, 2003. 

MIURA, K.; MOROOKA, C. K.; MENDES, J. R. P.; GUILHERME, I. R. Characterization of 

Operational Safety in Offshore Oil Wells. Journal of Petroleum Science &amp;amp; Engineering, v. 

51, p. 111-126, 2006. 

NG, Y. S.; SRINIVASAN, R. Multi-agent based collaborative fault detection and 

identification in chemical processes. Engineering Applications of Artificial Intelligence, 

23, n. 6, 2010. 934-949. 

NORHEIM, D.; FJELLHEIM, R. AKSIO – Active Knowledge management in the petroleum 

industry. 3rd European Semantic Web Conference (ESWC) - Industry Forum, Junho 

2006. 

OVERÅ, L. Semantic technology in the oil and gas drilling domain. University of Oslo, 

Department of Informatics. [S.l.], p. 134. 2010. 

PARUNAK, H. V. D. A practitioners' review of industrial agent applications. Autonomous 

Agents and Multi-Agent Systems, v. 3, n. 4, p. 389-407, 2000. 



133 

 

 

 

PECHOU?EK, M.; MARÍK, V. Industrial deployment of multi-agent technologies: review 

and selected case studies. Autonomous Agents and Multi-Agent Systems, 17, n. 3, 2008. 

397–431. 

POKAHR, A.; BRAUBACH, L. The webbridge framework for building web-based agent 

applications. First International Workshop on Languages, methodologies and Development 

tools for multi-agent systems. [S.l.]: [s.n.]. 2008. p. 173–190. 

PURVIS, M.; CRANEFIELD, S.; NOWOSTAWSKI, M. A distributed architecture for 

environmental information systems. In Environmental Software Systems-Environmental 

Information and Decision Support. [S.l.]: [s.n.]. 2000. p. 49-56. 

RAO, A. S.; GEORGEFF, M. P. BDI agents: From theory to practice. Proceedings of the 

first international conference on multi-agent systems (ICMAS-95), 1995. 312–319. 

RUDD, S. E.; CATTERSON, V. M.; MCARTHUR, S. D. J. Agent-Based Technology For 

Data Management, Diagnostics And Learning Within Condition Monitoring Applications. 4th 

International Conference on Condition Monitoring, 2007. 1715-1724. 

RUSSELL, S.; NORVIG, P. Artificial Intelligence: A Modern Approach. [S.l.]: Prentice 

Hall, 1995. 932 p. 

SAUTER, T. Integration Aspects in Automation - a Technology Survey. 10th IEEE 

International Conference on Emerging Technologies and Factory Automation (ETFA). [S.l.]: 

[s.n.]. 2005. p. 255-263. 

SCHLESINGER, F.; ERRECALDE, M.; AGUIRRE, G. An approach to integrate web 

services and argumentation into a BDI system. Proceedings of the 9th International 

Conference on Autonomous Agents and Multiagent Systems (AAMAS '10). Toronto, Canada: 

[s.n.]. 2010. p. 1371-1372. 

SHEREMETOV, L.; CONTRERAS, M.; SMIRNOV, A. Implementation of an ontology 

sharing mechanism for multiagent systems based on web services. Advances in Web 

Intelligence, 2004. 54–63. 

SHEREMETOV, L.; CONTRERAS, M.; VALENCIA, C. Intelligent Multi-Agent Support for 

the Contingency Management System. Int. Journal of Expert Systems with Applications 

(Special Issue), 26, n. 1, 2004. 57-71. 

SINGH, M. P.; HUHNS, M. N. Service-Oriented Computing - Semantics, Processes, 

Agents. 1. ed. [S.l.]: Wiley, 2005. 596 p. 

STONE, P.; VELOSO, M. Multiagent systems - A survey from a machine learning 

perspective. Autonomous Robots, v. 8, n. 3, p. 345-383, 2000. 

TAVARES, R. M. Interpretação e Análise de Dados de Perfuração em Poços de Petróleo. 

Dissertação de Mestrado, Universidade Estadual de Campinas. Faculdade de Engenharia 

Mecânica. Campinas, p. 129. 2006. 

WAGNER, T. An Agent-Oriented Approach to Industrial Automation Systems. Agent 

Technologies, Infrastructures, Tools, and Applications for E-Services - Lecture Notes in 

Computer Science. [S.l.]: Springer Berlin Heidelberg. 2003. p. 314-328. 



134 

 

 

 

WEISS, G. Multiagent systems: A modern approach to Distributed Artificial Intelligence. 

[S.l.]: M.I.T. Press, 1999. 

WEISS, G. Agent orientation in software engineering. The Knowledge Engineering Review, 

v. 16, n. 4, p. 349-373, Dezembro 2001. 

WEYNS, D.; PARUNAK, H. V. D.; SHEHORY, O. The Future of Software Engineering and 

Multi-Agent Systems. Special issue on Future of Software Engineering and Multi-Agent 

Systems. International Journal of Agent-Oriented Software Engineering (IJAOSE), 

2008. 1-8. 

WOOLDRIDGE, M. Agent-based computing. In Interoperable Communication Networks, 

v. 1, n. 1, p. 71–97, 1998. 

WOOLDRIDGE, M. An Introduction to MultiAgent Systems. [S.l.]: John Wiley &amp;amp; Sons, 

2002. 

WOOLDRIDGE, M.; JENNINGS, N. R. Intelligent Agents: Theory and Practice. The 

Knowledge Engineering Review, v. 10, n. 2, p. 115-152, 1995. 

YAO, L.; HUANG, C.; ZHANG, L.; QIAN, Y.; WANG, H.; LIU, J.; GUO, C.; JIANG, X. 

Studies on multi-agent based partial discharge online monitoring system for high voltage 

apparatus. WSEAS Transactions on Circuits and Systems, 8, n. 7, 2009. 620–629. 

ZHOU, H. J.; CAO, J. Z.; GUO, C. X.; QIN, J. The architecture of intelligent distribution 

network based on MAS-SOA. Power and Energy Society General Meeting, 2010 IEEE, 

2010. 1–6. 

 

  



135 

 

 

 

APÊNDICE A – RELAÇÃO DOS TRABALHOS ANALISADOS 

 

A seguir são apresentados os principais trabalhos estudados e um resumo das 

finalidades para as quais essas abordagens foram desenvolvidas. 

1. Capretz e colegas (2005) – apresenta uma abordagem, onde agentes são utilizados como 

wrappers, empacotando os sistemas legados e fornecendo uma interface de acesso a 

seus recursos para os outros agentes do SMA; 

2. Hossack e colegas (2003) – apresenta um SMA para a integração de sistemas 

inteligentes heterogêneos, para o desenvolvimento de aplicações para auxiliar os 

engenheiros de proteção nas tarefas de diagnóstico de distúrbios em sistemas de energia 

elétrica; 

3. Purvis e colegas (2000) – apresenta uma arquitetura multiagente para integrar diversas 

fontes e bases de dados distribuídas e heterogêneas, utilizada em um sistema para 

consulta de informações; 

4. Rudd e colegas (2007) – apresenta um SMA para diagnosticar defeitos em 

transformadores de energia através do monitoramento de medidas de vários sensores; 

5. Yao e colegas (2009) – apresenta uma arquitetura multiagente para a detecção em 

tempo real de descargas parciais em sistemas de alta tensão, através do monitoramento e 

análise de dados de vários sensores; 

6. Athanasiadis e colegas (2004) – apresenta uma arquitetura multiagente para monitorar e 

avaliar as condições e a qualidade do ar, a partir de dados de uma estação 

meteorológica; 

7. Bunch e colegas(2005) – apresenta um SMA utilizado para monitorar continuamente os 

processos industriais e notificar de forma apropriada os operadores e engenheiros sobre 

as condições das operações; 

8. Cerrada e colegas (2007) – apresenta um SMA para o gerenciamento de falhas de 

processos industriais; 

9. Cristaldi e colegas (2003) – apresenta um SMA para o controle do fluxo de corrente de 

um dispositivo elétrico baseado no monitoramento e análise do sinal da rede; 

10. Ng e colegas (2010) – apresenta um sistema para o diagnóstico de falhas em processos 

químicos; 



136 

 

 

 

11. Sheremetov e colegas(2004) – apresenta um SMA para a simulação e gerenciamento de 

situações de contingência relacionadas a desastres naturais, a fim de prever o 

comportamento e consequências dessas situações e com isso gerar planos de evacuação; 

12. Jacke e colegas (2006) – apresenta um sistema baseado em agentes para o 

monitoramento e controle da produção em tempo real de uma linha de produção de 

automóveis. 

13. Guilherme e colegas (2008) – apresenta um sistema baseado em agentes para o controle 

e supervisão de um sistema de produção de petróleo no mar. 

Na Tabela 8 é apresentada uma síntese dos principais trabalhos estudados e os agentes 

identificados em cada uma dessas abordagens, de acordo com o conjunto de papéis definidos. 

Tabela 8 – Relação entre os papéis definidos e os agentes presentes nos trabalhos analisados. 

 1 2 3 4 5 6 7 8 9 10 11 12 13 

Gerenciador de Recurso ? ? ? ? ? ? ? ? ? ? ? ? ? 

Monitor  ?  ? ? ? ? ? ? ? ? ?  

Gerenciador de Interface com 

o Usuário 
  ? ? ? ? ?   ? ? ?  

Controlador        ? ? ?   ? 

Supervisor   ? ? ?   ? ? ? ? ? ? 

Facilitador ? ? ?           

Gerenciador de Conhecimento   ?       ?   ? 

 

APÊNDICE B – ESPECIFICAÇÃO DETALHADA DA ESTRUTURA 

INTERNA DOS PAPÉIS 

 

Os diagramas da metodologia Tropos suportam apenas a especificação dos objetivos, 

das crenças, dos planos e das relações entre os objetivos e os planos. Somente essas relações 

não são suficientes para especificar o comportamento dos agentes, de forma que também é 

necessário especificar as condições de ativação dos objetivos e dos planos, a sequência de 

realização dos planos, os recursos e crenças utilizadas para a execução dos planos e os 

eventos e as mensagens.  

Nas tabelas a seguir são especificados essas características para cada um dos papéis 

apresentados no Capítulo 4, elas devem ser utilizadas em conjunto com os diagramas 

apresentados nesse capítulo para um melhor entendimento do comportamento dos agentes.  



137 

 

 

 

Essas características são especificadas de forma genérica para que possam ser abstraídas e 

desenvolvidas de acordo com as necessidades e o domínio da aplicação para o qual os agentes 

estão sendo desenvolvidos. 

Cada um dos papéis é identificado por uma letra. Assim os elementos que compõem 

cada papel (como os objetivos, planos, e etc.) são identificados por:&amp;lt;letra do papel&gt;_&lt;letra 

do elemento&gt;&lt;índice do elemento&gt;. Assim os papéis estão associados às seguintes letras:  

R – Gerenciador de Recurso;  

M – Monitor;  

U – Gerenciador de Interface com o Usuário;  

S – Supervisor;  

C – Controlador;  

F – Facilitador;  

K – Gerenciador de Conhecimento. 

 

B.1 - Gerenciador de Recurso 

Tabela 9 – Especificação detalhada do papel Gerenciador de Recurso. 

Papel 

R 
Nome Gerenciador de Recurso 

Descrição 
Os agentes que assumirem esse papel têm como função fornecer acesso aos 

recursos (internos e externos) para os outros agentes do SMA. 

Objetivos 

R_G01 

Nome Gerenciar dados dos processos 

Descrição 

É criado ao iniciar o agente, sendo responsável por estabelecer a conexão 

com os sistemas ou dispositivos de aquisição de dados, a fim de obter os 

dados em tempo real. 

Condição de criação Quando o agente é iniciado. 

Meios para alcançar R_P01 – Recuperar parâmetros medidos 

R_G02 

Nome Informar dados RT 

Descrição 

Responsável por formatar os dados recuperados de acordo com o 

vocabulário usado para a comunicação dos agentes, e informá-los aos 

agentes assinantes desses serviços. 

Condição de criação Quando um novo dado é recuperado ou recebido (evento interno) 

Meios para alcançar R_P02 – Informar novos valores 

R_G03 

Nome Gerenciar lista assinantes serv. 

Descrição 
Gerenciar a lista de agentes assinantes dos serviços de dados oferecidos, 

através do cadastro ou exclusão do agente da lista. 

Condição de criação (evento – msg recebida) [M_M02 || U_M05] 

Meios para alcançar R_P03 – Cadastrar assinante || R_P04 – Excluir assinante 

R_G04 

Nome Gerenciar dados app. 

Descrição 
Responsável por gerenciar e manter os dados do histórico da aplicação, 

realizando tarefas de busca e armazenamento de dados. 



138 

 

 

 

Condição de criação (evento – msg recebida) [U_M06 || S_M09 || M_M04] 

Meios para alcançar R_P06 – Armazenar informações || R_P07 – Buscar informações 

R_G05 

Nome Registrar serv. de dados 

Descrição 
Responsável por manter os serviços do agente registrado em um Facilitador, 

para que outros agentes possam encontra-lo. 

Condição de criação Quando o agente é iniciado (evento interno) 

Meios para alcançar R_P05 – Registrar serviços 

Planos 

R_P01 

Nome Recuperar parâmetros medidos 

Descrição 
Consiste nas tarefas para estabelecer a conexão com o sistema de dados e 

iniciar a recuperação dos mesmos. 

Condição de ativação Criação do objetivo R_G01 – Gerenciar dados dos processos 

Parâmetros entrada 
R_B02 – Infos. sistemas provedores de dados; e R_B03 – Infos. variáveis 

monitoradas 

R_P02 

Nome Informar novos valores 

Descrição 
Consiste nas tarefas para receber os novos valores dos sistemas de dados e 

informá-los para os agentes assinantes. 

Condição de ativação R_G02 – Informar dados RT 

Parâmetros entrada R_B01 – Lista agentes assinantes; novos valores 

Eventos gerados R_M01 – InformDataRT 

Colaboradores Monitor 

R_P03 

Nome Cadastrar assinante 

Descrição 

Consiste nas tarefas para realizar o cadastro de um novo agente na Lista de 

assinantes (R_B01), quando houver uma requisição de cadastro. Esse agente 

pode ser um Monitor ou Gerenciador de interface com o usuário. 

Condição de ativação 
Criação do objetivo R_G03 – Gerenciar lista assinantes serv.; e ação da 

requisição seja “assinar”. 

Parâmetros entrada Conteúdo das msgs recebidas [M_M02 || U_M05] 

Parâmetros saída Atualização R_B01 – Lista agentes assinantes 

Colaboradores Gerenciador de interface com o usuário, Monitor 

R_P04 

Nome Excluir assinante 

Descrição 
Consiste nas tarefas para excluir um agente da lista de assinantes, quando 

houver uma requisição de exclusão.  

Condição de ativação 
Criação do objetivo R_G03 – Gerenciar lista assinantes serv.; e ação da 

requisição seja “excluir”. 

Parâmetros entrada Conteúdo das msgs recebidas [M_M02 || U_M05] 

Parâmetros saída Atualização R_B01 – Lista agentes assinantes 

Colaboradores Gerenciador de interface com o usuário, Monitor 

R_P05 

Nome Registrar serviços 

Descrição 
Consiste nas tarefas para registrar os serviços do agente em um agente 

Facilitador e manter esses serviços registrados e atualizados. 

Condição de ativação Criação do objetivo R_G05 – Registrar serv. de dados 

Parâmetros entrada R_B03 – Infos. variáveis monitoradas; R_B05 – Lista de Facilitadores; 

Eventos gerados R_M03 – RequestRegisterServ 

Colaboradores Facilitador 

R_P06 

Nome Armazenar informações 

Descrição 
Consiste nas tarefas para tratar as requisições para o armazenamento de 

informações nas bases da aplicação. 

Condição de ativação 
Criação do objetivo R_G04 – Gerenciar dados app. e ação da requisição seja 

“armazenar”. 

Parâmetros entrada Conteúdo das msgs recebidas [S_M09 || M_M04] 

Colaboradores Gerenciador de interface com o usuário; Monitor; Supervisor; Controlador 

R_P07 

Nome Buscar informações 

Descrição 

Consiste nas tarefas para tratar as requisições para a busca de informações 

nas bases da aplicação. O resultado da consulta será informado como 

resposta a requisição realizada. 

Condição de ativação 
Criação do objetivo R_G04 – Gerenciar dados app. e ação da requisição seja 

“consultar”. 

Parâmetros entrada Conteúdo das msgs recebidas [U_M06] 



139 

 

 

 

Eventos gerados R_M02 – InformResult 

Colaboradores Gerenciador de interface com o usuário; Supervisor. 

Crenças e Recursos 

R_B01 

Nome Lista agentes assinantes 

Descrição 

Representa uma lista com a identificação dos agentes e as informações de 

interesse de cada um dos registrados. Esses agentes podem ser Monitores ou 

Gerenciadores de interface com o usuário. 

R_B02 

Nome Infos. sistemas de aquisição de dados 

Descrição 
Representa as informações dos sistemas de aquisição de dados gerenciados 

pelo agente. 

R_B03 

Nome Infos. variáveis monitoradas 

Descrição 
Representa as informações sobre as variáveis que são monitoradas pelo 

agente. 

R_B04 

Nome Infos. bases de dados 

Descrição 
Representa as informações das bases de dados da aplicação gerenciadas pelo 

agente. 

R_B05 
Nome Lista Facilitadores 

Descrição Lista com a identificação dos agentes Facilitadores conhecidos. 

Evento (mensagens enviadas) 

R_M01 

Nome InformDataRT(dataRT) 

Descrição 
Representa a mensagem com os novos valores obtidos dos sistemas de dados 

que são enviados para os agentes assinantes. 

Destinatário Monitor; Gerenciador de interface com o usuário. 

R_M02 

Nome InformResult(queryResult) 

Descrição Representa a mensagem com os resultados de uma requisição de consulta. 

Destinatário Gerenciador de interface com o usuário 

R_M03 

Nome RequestRegisterServ(servDescript) 

Descrição 
Representa uma requisição para um agente Facilitador solicitando o registro 

dos serviços oferecidos. 

Destinatário Facilitador 

 

Nome Inform(inform-done) ou Failure(inform-failure) 

Descrição 

Mensagem enviada como resposta de uma requisição. A resposta pode ser 

sucesso ou falha dependendo de como foi a execução. No caso de sucesso na 

mensagem pode conter também os resultados da requisição e no caso de 

falha as razoes da falha. 

Destinatário Gerenciador de interface com o usuário, Monitor 

Normas 

  Este agente deve conhecer o padrão de metadados utilizado pelo SMA para a troca de recursos entre os 

agentes. Este padrão pode ser representado com a utilização de uma ontologia que deve ser 

compartilhada entre os agentes da aplicação. 

  O agente deve ter acesso as interfaces de outros sistemas. Devem ter capacidades para lidar com toda a 

lógica necessária para acessar os sistemas legados, e gerenciar os metadados; realizar a interface com 

os sistemas externos; 

  Se ao enviar uma mensagem de dados RT (R_M01) para um agente e for constatado que o mesmo não 

recebeu a mensagem por não estar mais presente no SMA, este deve ser retirado da lista de registro 

(R_B01) 

  Cada agente gerenciador de recurso é responsável por monitorar determinadas variáveis. As mesmas 

devem ser informadas no registro do serviço realizado através do agente Facilitador. 

 

 

 

 



140 

 

 

 

B.2 - Monitor 

Tabela 10 – Especificação detalhada do papel Monitor. 

Papel 

M 

Nome Monitor 

Descrição 

Esses agentes têm como função monitorar as variáveis e analisar os dados e 

informações dos processos a fim de identificar e/ou prever a ocorrência de 

anormalidades. 

Objetivos 

M_G01 

Nome Monitorar processo 

Descrição 
Responsável por iniciar o monitoramento dos dados dos processos a partir 

de uma requisição de monitoramento de um agente Supervisor. 

Condição de criação (evento – msg recebida) [S_M03] 

Meios para alcançar 
M_G02 – Analisar infos. de monitoramento &amp;amp;&amp;amp; M_G03 – Obter dados para 

análise &amp;amp;&amp;amp; M_G05 – Analisar dados do processo 

M_G02 

Nome Analisar infos. de monitoramento 

Descrição 
Responsável por analisar a requisição de monitoramento recebida e extrair 

as informações necessárias para iniciar o monitoramento dos dados. 

Condição de criação criação do objetivo M_G01 – Monitorar processo 

Meios para alcançar M_P01 – Estabelecer processo de monitoramento 

M_G03 

Nome Obter dados para análise 

Descrição 
Responsável por encontrar os agentes Gerenciadores de Recurso que 

fornecem os dados dos processos a serem monitorados. 

Condição de criação 
criação do objetivo M_G01 – Monitorar processo; e objetivo M_G02 

alcançado. 

Meios para alcançar M_P02 – Solicitar dados para análise 

M_G04 

Nome Obter métodos para análise 

Descrição 

Responsável por encontrar e estabelecer a conexão com os serviços ou 

sistemas que implementam os métodos de análise, caso sejam utilizados 

pelo agente. 

Condição de criação 
criação do objetivo M_G01 – Monitorar processo e objetivo M_G02 

alcançado. 

Meios para alcançar M_P03 – Encontrar serv. de análise 

M_G05 

Nome Analisar dados do processo 

Descrição 
Responsável por iniciar e realizar o processo de análise dos dados do 

processo. 

Condição de criação 
criação do objetivo M_G01 – Monitorar processo e objetivos M_G03  e 

M_G04 alcançados. 

Meios para alcançar M_P04 – Analisar dados 

M_G06 

Nome Gerenciar lista assinantes serv. 

Descrição 

Responsável por gerenciar a lista de agentes assinantes do serviço de 

monitoramento. Esses agentes correspondem aos Gerenciadores de interface 

com o usuário e Supervisores que desejam receber informações sobre as 

condições dos processos monitorados. 

Condição de criação (evento – msg recebida) [U_M04]  

Meios para alcançar M_P05 – Cadastrar assinante || M_P06 – Excluir assinante 

M_G07 

Nome Informar Detecção anorm. 

Descrição 

Responsável por notificar, para o agente Supervisor responsável, a 

identificação da ocorrência de uma anormalidade, para que essa possa ser 

tratada. 

Condição de criação Anormalidade identificada (evento interno)  

Meios para alcançar M_P07 – Notificar anorm. 

M_G08 

Nome Procurar agentes Recurso da app. 

Descrição 
Encontrar agentes Gerenciadores de recurso da aplicação usados para 

fornecer o serviço de armazenamento dos registros de análise. 

Condição de criação Inicialização do agente 

Meios para alcançar M_P08 – Encontrar agentes Recurso da app. 



141 

 

 

 

M_G09 

Nome Registrar serv. monitoramento 

Descrição 

Responsável por registrar e manter atualizado o registro dos serviços 

oferecidos, em um agente Facilitador para que outros agentes possam 

encontra-los. O registro deve ser atualizado sempre que houver mudanças 

nos planos de supervisão. 

Condição de criação inicialização do agente e objetivo M_G01 alcançado 

Meios para alcançar M_P09 – Registrar serviços 

M_G10 

Nome Informar conds. processo 

Descrição 
Responsável por informar as condições dos processos analisados para os 

agentes assinantes do serviço de monitoramento. 

Condição de criação Novas condições dos processos analisados disponíveis (evento interno) 

Meios para alcançar M_P10 – Notificar condições 

Planos 

M_P01 

Nome Estabelecer processo de monitoramento 

Descrição 

Consiste nas tarefas para analisar a requisição de monitoramento e definir as 

condições de monitoramento, anormalidades monitoradas, variáveis 

monitoradas, métodos de análise a serem utilizados e também cadastrar o 

agente Supervisor que requisitou o monitoramento para notifica-lo sobre as 

anormalidades identificadas. 

Condição de ativação Criação do objetivo M_G02 – Analisar infos. de monitoramento 

Parâmetros entrada 
Conteúdo das msgs recebidas [S_M03]; M_B01 – Informações de 

monitoramento; M_B02 – Infos. agente Supervisor 

Parâmetros saída 
Atualização M_B01 – Informações de monitoramento; atualização M_B02 

– Infos. agente Supervisor 

Colaboradores Supervisor 

M_P02 

Nome Solicitar dados para análise 

Descrição 

Consiste nas tarefas para encontrar os agentes Gerenciadores de Recurso 

que fornecem os dados necessários para o processo de monitoramento e 

requisitar a assinatura desses dados para esse agente. 

Condição de ativação Criação do objetivo M_G03 – Obter dados para análise 

Parâmetros entrada 
M_B01 – Informações de monitoramento; M_B03 – Lista agentes Recurso; 

M_B07 – Lista de Facilitadores 

Parâmetros saída Atualização M_B03 – Lista agentes Recurso 

Eventos gerados M_M01 – RequestSearch; M_M02 – SubscribeDataRT; 

Colaboradores Gerenciador de Recurso, Facilitador 

M_P03 

Nome Encontrar serv. de análise 

Descrição 

Consiste nas tarefas para encontrar e estabelecer a conexão com os serviços 

ou sistemas que implementam os métodos de análise utilizados para a 

análise dos dados. 

Condição de ativação Criação do objetivo M_G04 – Obter métodos para análise 

Parâmetros entrada 
M_B01 – Informações de monitoramento; M_B04 – Infos. métodos de 

análise; 

M_P04 

Nome Analisar dados 

Descrição 

Consiste nas tarefas para realizar o pré-processamento dos dados do 

processo monitorado, a fim de extrair as características, aplicar o método de 

análise, a fim de determinar as condições do processo e identificar possíveis 

anormalidades, salvar os registros da análise nas bases de dados da 

aplicação para consultas posteriores.  

Condição de ativação Criação do objetivo M_G05 – Analisar dados do processo 

Parâmetros entrada 
Dados do processo; M_B05 – Lista agentes assinantes; M_B06 – Lista 

agentes Recurso app. 

Parâmetros saída Logs de análise 

Eventos gerados 
(evento interno) Identificação anormalidade; (evento interno) Condições do 

processo; M_M04 – RequestSotreInfo;  

Colaboradores Gerenciador de Recurso 

M_P05 

Nome Cadastrar assinante 

Descrição 

Consiste nas tarefas para analisar a requisição de cadastro de um agente 

Gerenciador de interface com o usuário, e caso os processos de interesse 

correspondam aos processos monitorados, adicionar o agente a lista de 



142 

 

 

 

agentes assinantes. 

Condição de ativação 
Criação do objetivo M_G06 – Gerenciar lista assinantes serv.; e ação da 

requisição seja “cadastrar”. 

Parâmetros entrada 
Conteúdo das msgs recebidas [U_M04]; M_B05 – Lista agentes assinantes; 

M_B01 – Informações de monitoramento 

Parâmetros saída Atualização M_B05 – Lista agentes assinantes 

Colaboradores Gerenciador interface com o usuário; Supervisor 

M_P06 

Nome Excluir assinante 

Descrição Consiste nas tarefas para excluir um agente da lista de agentes assinantes 

Condição de ativação 
Criação do objetivo M_G06 – Gerenciar lista assinantes serv.; e ação da 

requisição seja “excluir”. 

Parâmetros entrada Conteúdo das msgs recebidas [U_M04]; M_B05 – Lista agentes assinantes; 

Parâmetros saída Atualização M_B05 – Lista agentes assinantes 

Colaboradores Gerenciador interface com o usuário; Supervisor 

M_P07 

Nome Notificar anorm. 

Descrição 
Consiste nas tarefas para informar a identificação da ocorrência de uma 

anormalidade ao agente Supervisor responsável. 

Condição de ativação Criação do objetivo M_G07 – Informar Detecção anorm. 

Parâmetros entrada M_B02 – Infos. agente Supervisor; 

Eventos gerados M_M05 – InformAnormFound 

Colaboradores Supervisor 

M_P08 

Nome Encontrar agentes Recurso da app. 

Descrição 

Consiste das tarefas para encontrar os agentes Gerenciadores de recurso da 

aplicação que fornecem os serviços de armazenamento dos registros de 

análise. 

Condição de ativação Criação do objetivo M_G08 – Procurar agentes Recurso da app. 

Parâmetros entrada 
Tipo de serviço de armazenamento para o registro de análise; M_B06 – 

Lista agentes Recurso app.; M_B07 – Lista de Facilitadores 

Parâmetros saída Atualização M_B06 – Lista agentes Recurso app. 

Eventos gerados M_M01 – RequestSearch; 

Colaboradores Facilitador 

M_P09 

Nome Requisitar serviços 

Descrição 
Consiste nas tarefas para registrar os serviços do agente e manter esses 

serviços registrados e atualizados. 

Condição de ativação Criação do objetivo M_G09 – Registrar serviços 

Parâmetros entrada M_B01 – Informações de monitoramento; M_B07 – Lista de Facilitadores; 

Eventos gerados M_M06 – RequestRegisterServ; 

Colaboradores Facilitador 

M_P10 

Nome Notificar condições 

Descrição 
Consiste nas tarefas para informar as condições dos processos analisados 

obtidas a partir da analise dos parâmetros operacionais. 

Condição de ativação Criação do objetivo M_G10 – Informar conds. processo 

Parâmetros entrada Informações das condições do processo; M_B05 – Lista agentes assinantes; 

Eventos gerados M_M03 – InformProcessCondition 

Colaboradores Gerenciador de interface com o usuário; Supervisor 

Crenças 

M_B01 

Nome Informações de monitoramento 

Descrição 

Mantém as informações sobre os processos de monitoramento e de análise 

para a identificação e classificação das condições dos processos e 

anormalidades. 

M_B02 

Nome Infos. agente Supervisor 

Descrição 
A identificação do agente Supervisor que requisitou o processo de 

monitoramento, o qual deve ser informado sobre os alertas de anormalidade. 

M_B03 

Nome Lista agentes Recurso 

Descrição 
Uma lista com a identificação dos agentes Gerenciadores de recurso que 

fornecem os dados do processo para a análise. 

M_B04 

Nome Infos. métodos de análise 

Descrição 
Mantém as informações sobre os serviços e métodos utilizados para a 

análise. A informação sobre a localização desses serviços, ou onde podem 



143 

 

 

 

ser encontrados e como acessá-los. 

M_B05 

Nome Lista agentes assinantes 

Descrição 

Uma lista com a identificação dos agentes Gerenciadores de interface do 

usuário para os quais as informações sobre as condições do processo devem 

ser informadas. 

M_B06 

Nome Lista agentes Recurso app. 

Descrição 

Uma lista dos agentes Gerenciadores de recursos que fornecem o serviço de 

armazenamento de dados da aplicação. Usados para armazenar os registros 

de análise. 

M_B07 

Nome Lista de Facilitadores 

Descrição 

Uma lista com a identificação dos agentes Facilitadores presentes no SMA, 

que são utilizados para encontrar outros agentes e os serviços oferecidos por 

eles no SMA. 

Evento (mensagens enviadas) 

M_M0

1 

Nome RequestSearch(serviceType) 

Descrição 

Representa uma requisição usada para a busca de agentes pelos seus 

serviços, através do cadastrado nos Facilitadores. O parâmetro dessa 

requisição deve conter as informações sobre os serviços de interesse. 

Destinatário Facilitador 

M_M0

2 

Nome SubscribeDataRT(dataReq) 

Descrição 

Representa uma requisição onde é solicitada a assinatura de um serviço do 

Gerenciador de recurso para ser informado sempre que houver novos 

valores dos dados do processo monitorado. 

Destinatário Gerenciador de recurso 

M_M0

3 

Nome InformProcessCondition(processCond) 

Descrição 
Representa uma mensagem onde é informado as condições atuais do 

processo que está sendo monitorado. 

Destinatário Gerenciador de interface com o usuário; Supervisor 

M_M0

4 

Nome RequestSotreInfo(logs) 

Descrição 

Representa uma requisição solicitando o armazenamento dos registros do 

monitoramento realizado para o agente Gerenciador de Recurso responsável 

pelos dados da aplicação. 

Destinatário Gerenciador de Recurso 

M_M0

5 

Nome InformAnormFound(AnormInfo) 

Descrição 
Representa uma mensagem onde é informado, para o agente Supervisor, as 

informações sobre uma anormalidade identificada. 

Destinatário Supervisor 

M_M0

6 

Nome RequestRegisterServ(servDescript) 

Descrição 
Representa uma requisição para um agente Facilitador solicitando o registro 

dos serviços oferecidos. 

Destinatário Facilitador 

Normas 

  
Deve notificar o Supervisor sobre todas as mudanças classificadas como anormalidade (eventos 

identificados) para que possam ser devidamente tratados; 

 
Conhecimento sobre o domínio; anormalidades; processos monitorados; dados; diagnóstico;  

 

B.3 - Gerenciador de Interface com o Usuário 

Tabela 11 – Especificação detalhada do papel Gerenciador de Interface com o Usuário. 

Papel 

U 

Nome Gerenciador de Interface com o Usuário 

Descrição 

Esses agentes são responsáveis por fazer a interface entre o SMA e os 

usuários, gerenciando a interação/comunicação com os usuários através de 

interfaces gráficas, tratando as requisições e apresentado as informações de 

forma apropriada.  



144 

 

 

 

Objetivos 

U_G01 

Nome Gerenciar infos. de interesse 

Descrição 

É criado na inicialização do agente, sendo responsável por determinar os 

interesses do usuário e obter as informações de supervisão correspondentes 

a esse interesse. 

Condição de criação 
Inicialização do agente || (evento – msg recebida) [K_M01] {notificação 

mudanças nos processos de interesse} 

Meios para alcançar 
U_G02 – Analisar perfil &amp;amp;&amp;amp; U_G03 – Obter infos. supervisão; U_G04 – 

Obter infos. de monitoramento; U_G05 – Obter dados do processo 

U_G02 

Nome Analisar perfil 

Descrição 
Responsável por analisar o perfil do usuário a fim de determinar seus 

processos de interesse. 

Condição de criação criação do objetivo U_G01 – Gerenciar infos. de interesse 

Meios para alcançar U_P01 – Determinar processos de interesse 

U_G03 

Nome Obter infos. supervisão 

Descrição 

Responsável por encontrar os agentes Supervisores que oferecem os 

serviços de supervisão de seus interesses, recuperar as informações sobre 

esses processos e assinar os serviços para ser notificado sobre os alertas de 

anormalidades. 

Condição de criação 
criação do objetivo U_G01 – Gerenciar infos. de interesse e objetivo 

U_G02 alcançado. 

Meios para alcançar U_P02 – Recuperar infos. dos processos 

U_G04 

Nome Obter infos. de monitoramento 

Descrição 
Responsável por encontrar os agentes Monitores que oferecem os serviços 

de monitoramento de interesse e assinar esses serviços. 

Condição de criação 
criação do objetivo U_G01 – Gerenciar infos. de interesse e objetivo 

U_G03 alcançado. 

Meios para alcançar U_P03 – Solicitar conds. do processo 

U_G05 

Nome Obter dados do processo 

Descrição 

Responsável por encontrar os agentes Gerenciadores de Recurso que 

oferecem os serviços de dados dos processos de interesse e assinar esses 

serviços. 

Condição de criação 
criação do objetivo U_G01 – Gerenciar infos. de interesse e objetivo 

U_G03 alcançado. 

Meios para alcançar U_P04 – Solicitar dados do processo. 

U_G06 

Nome Apresentar alertas 

Descrição 
Responsável por receber e apresentar para os usuários as notificações de 

alerta sobre anormalidades identificadas. 

Condição de criação (evento – msg recebida) [S_M07] {notificação de Anormalidade} 

Meios para alcançar U_P05 – Apresentar alerta anormalidade 

U_G07 

Nome Apresentar cond. processo 

Descrição 
Responsável por receber e apresentar para os usuários as condições dos 

processos de interesse monitorados. 

Condição de criação 
(evento – msg recebida) [M_M03] {informação sobre condição do 

processo} 

Meios para alcançar U_P06 – Apresentar conds. dos processo 

U_G08 

Nome Apresentar params monitoramento 

Descrição 
Responsável por receber e apresentar para os usuários os dados dos 

processos de interesse. 

Condição de criação (evento – msg recebida) [R_M01] {informação sobre os dados do processo} 

Meios para alcançar U_P07 – Apresentar dados dos processos 

U_G09 

Nome Procurar agentes Recurso da app. 

Descrição 

Encontrar agentes Gerenciadores de recurso da aplicação usados para 

fornecer o serviço de acesso aos dados da aplicação como os registros de 

diagnóstico e análise salvos. 

Condição de criação Inicialização do agente 

Meios para alcançar U_P08 – Encontrar agentes Recurso da app. 

U_G10 
Nome Atender requisições 

Descrição Responsável por tratar as requisições feitas pelos usuários através das 



145 

 

 

 

interfaces da aplicação, delegando essas requisições para os agentes do 

SMA. 

Condição de criação (evento – requisição camada de Apresentação) 

Meios para alcançar 
U_P09 – Consultar dados app. || U_P10 – Solicitação ação de controle || 

U_P11 – Consultar Conhecimento 

Planos 

U_P01 

Nome Determinar processos de interesse 

Descrição 

Consiste nas tarefas para carregar e analisar o perfil do usuário que o agente 

representa, e determinar os processos de interesse para que as informações 

desses processos possam ser solicitadas aos outros agentes do SMA. 

Condição de ativação Criação do objetivo U_G02 – Analisar perfil 

Parâmetros entrada U_B01 – Perfil; U_B02 – Info. processos de interesse. 

Parâmetros saída Atualização U_B02 – Info. processos de interesse. 

U_P02 

Nome Recuperar infos. dos processos 

Descrição 

Consiste nas tarefas para encontrar os agentes Supervisores que 

supervisionam os processos de interesse e requisitar as informações dos 

agentes Monitores e Gerenciadores de recurso envolvidos nesses processos. 

E também assinar o serviço de diagnóstico. 

Condição de ativação Criação do objetivo U_G03 – Obter infos. supervisão 

Parâmetros entrada 

U_B02 – Info. processos de interesse; U_B03 – Lista Supervisores; U_B04 

– Lista agentes Monitores; U_B05 – Lista agentes Recurso; U_B06 – Lista 

Facilitadores; 

Parâmetros saída Atualização U_B03, U_B04 e U_B05 

Eventos gerados 
U_M01 – RequestSearch; U_M02 – RequestInvolvedAgents; U_M03 – 

SubscribeSupervision; 

Colaboradores Supervisor; Facilitador 

U_P03 

Nome Solicitar conds. do processo 

Descrição 
Consiste nas tarefas para encontrar os agentes Monitores que monitoram os 

processos de interesse e assinar os serviços de monitoramento. 

Condição de ativação Criação do objetivo U_G04 – Obter infos. de monitoramento 

Parâmetros entrada 
U_B02 – Info. processos de interesse; U_B04 – Lista agentes Monitores; 

U_B06 – Lista Facilitadores; 

Parâmetros saída Atualização U_B04 

Eventos gerados U_M01 – RequestSearch; U_M04 – SubscribeMonitoringInfo. 

Colaboradores Facilitador, Monitor 

U_P04 

Nome Solicitar dados do processo 

Descrição 

Consiste nas tarefas para encontrar os agentes Gerenciadores de recurso que 

fornecem os dados dos processos de interesse e assinar os serviços de 

dados. 

Condição de ativação Criação do objetivo U_G05 – Obter dados do processo 

Parâmetros entrada 
U_B02 – Info. processos de interesse; U_B05 – Lista agentes Recurso;  

U_B06 – Lista Facilitadores; 

Parâmetros saída Atualização U_B05 

Eventos gerados U_M01 – RequestSearch; U_M05 – SubscribeProcessData. 

Colaboradores Gerenciador de recurso, Facilitador 

U_P05 

Nome Apresentar alerta anormalidade 

Descrição 

Consiste nas tarefas para receber as notificações de anormalidades dos 

agentes Supervisores e apresentar os relatórios com os diagnósticos para o 

usuário. 

Condição de ativação Criação do objetivo U_G06 – Apresentar alertas 

Parâmetros entrada 
Conteúdo das msgs recebidas [S_M07] – infos. das arnormalidades; U_B02 

– Info. processos de interesse. 

Colaboradores Supervisor 

U_P06 

Nome Apresentar conds. dos processos 

Descrição 

Consiste nas tarefas para receber as mensagens dos agentes Monitores 

informando as condições dos processos monitorados e apresentar essas 

informações para os usuários de acordo com seus interesses. 

Condição de ativação Criação do objetivo U_G07 – Apresentar cond. processo 

Parâmetros entrada Conteúdo das msgs recebidas [M_M03] - infos da conds. dos processos; 



146 

 

 

 

U_B02 – Info. processos de interesse. 

Colaboradores Monitor 

U_P07 

Nome Apresentar dados dos processos 

Descrição 

Consiste nas tarefas para receber as mensagens dos agentes Gerenciadores 

de recurso informando os dados dos processos e apresentar essas 

informações para os usuários de acordo com seus interesses. 

Condição de ativação Criação do objetivo U_G08 – Apresentar params monitoramento 

Parâmetros entrada 
Conteúdo das msgs recebidas [R_M01] - infos dos params. dos processos; 

U_B02 – Info. processos de interesse. 

Colaboradores Gerenciador de recurso 

U_P08 

Nome Encontrar agentes Recurso da app. 

Descrição 
Consiste das tarefas para encontrar os agentes Gerenciadores de recurso da 

aplicação que fornecem os serviços de consulta dos dados da aplicação. 

Condição de ativação Criação do objetivo U_G09 – Procurar agentes Recurso da app. 

Parâmetros entrada 
Tipo de serviço de armazenamento para o registro de análise; U_B07 – 

Lista agentes Recurso app.; U_B06 – Lista de Facilitadores 

Parâmetros saída Atualização U_B07 – Lista agentes Recurso app. 

Eventos gerados U_M01 – RequestSearch; 

Colaboradores Facilitador 

U_P09 

Nome Consultar dados app. 

Descrição 

Consiste nas tarefas para interpretar uma requisição do usuário para a 

consulta de dados da aplicação. Essa consulta deve ser requisitada para um 

agente Gerenciador de recurso responsável por manter as bases de dados da 

aplicação e os resultados devem ser informados ao usuário. 

Condição de ativação 
Criação do objetivo U_G10 – Atender requisições e ação da requisição seja 

“consultar” 

Parâmetros entrada 
parâmetros da requisição da camada de Apresentação; U_B07 – Lista 

agentes Recurso app. 

Eventos gerados 
U_M06 – RequestSearchInfo; resposta a camada de Apresentação com as 

informações requisitadas; 

Colaboradores Gerenciador de recurso 

 U_P10 

Nome Solicitar ação de controle 

Descrição 

Consiste nas tarefas para interpretar uma requisição do usuário para a 

execução de uma ação de controle nos processos. Essa requisição deve ser 

delegada ao agente Supervisor que devera tomar as medidas necessárias 

para aplicar as ações de controle. 

Condição de ativação 
Criação do objetivo U_G10 – Atender requisições e ação da requisição seja 

“controle” 

Parâmetros entrada 
parâmetros da requisição da camada de Apresentação; U_B03 – Lista 

Supervisores; 

Eventos gerados 
U_M07 – RequestControlActions; resposta a camada de Apresentação com 

as informações sobre a execução da ação; 

Colaboradores Supervisor 

U_P11 

Nome Consultar Conhecimento 

Descrição 

Consiste nas tarefas para interpretar uma requisição do usuário para realizar 

consultar o conhecimento sobre os processos, anormalidades e agentes, 

armazenadas no repositório de conhecimento e acessíveis através dos 

agentes Gerenciadores de conhecimento. 

Condição de ativação 
Criação do objetivo U_G10 – Tratar requisições e ação da requisição seja 

“alterar_processo” 

Parâmetros entrada 
parâmetros da requisição da camada de Apresentação; U_B06 – Lista de 

Facilitadores; U_B02 – Info. processos de interesse. 

Eventos gerados 
U_M08 – RequestKnowledgteQuery; resposta a camada de Apresentação 

com as informações requisitadas; 

Colaboradores Gerenciador de conhecimento, Facilitador 

Crenças e Recursos 

U_B01 

Nome Perfil 

Descrição 
Mantém as informações referentes ao perfil do usuário que são utilizadas na 

personalização do conteúdo a ser apresentado para o usuário. 



147 

 

 

 

U_B02 

Nome Info. processos de interesse 

Descrição 
Mantém as informações sobre os processos de interesse do usuário, 

extraídas do perfil. 

U_B03 

Nome Lista Supervisores 

Descrição 
Uma lista com a identificação dos agentes Supervisores que supervisionam 

os processos de interesse do usuário. 

U_B04 

Nome Lista agentes Monitores 

Descrição 
Uma lista com a identificação dos agentes Monitores que fornecem as 

informações sobre as condições dos processos de interesse. 

U_B05 

Nome Lista agentes Recurso 

Descrição 
Uma lista com a identificação dos agentes Gerenciadores de recurso que 

fornecem os dados dos processos de interesse do usuário. 

U_B06 

Nome Lista de Facilitadores 

Descrição 

Uma lista com a identificação dos agentes Facilitadores presentes no SMA, 

que são utilizados para encontrar outros agentes e os serviços oferecidos por 

eles no SMA. 

U_B07 

Nome Lista agentes Recurso app. 

Descrição 

Uma lista dos agentes Gerenciadores de recursos que fornecem o serviço de 

consulta de dados da aplicação. Usados para consultar os registros de 

análise e diagnósticos salvos. 

Evento (mensagens enviadas) 

U_M01 

Nome RequestSearch(serviceType) 

Descrição 

Representa uma requisição usada para a busca de agentes pelos seus 

serviços, através do cadastrado nos Facilitadores. O parâmetro dessa 

requisição deve conter as informações sobre os serviços de interesse. 

Destinatário Facilitador 

U_M02 

Nome RequestInvolvedAgents(interestedProcess) 

Descrição 

Representa uma requisição a um agente Supervisor para obter as 

informações sobre a lista dos agentes Monitores e Gerenciadores de recurso 

que estão envolvidos no processo supervisionado de interesse do usuário. 

Destinatário Supervisor 

U_M03 

Nome SubscribeSupervision(interestedProcess) 

Descrição 

Representa uma requisição onde é solicitada a assinatura de um serviço do 

Supervisor para ser notificado sobre as anormalidades identificadas nos 

processos de interesse. 

Destinatário Supervisor 

U_M04 

Nome SubscribeMonitoringInfo(interestedProcess) 

Descrição 
Representa uma requisição onde é solicitada a assinatura de um serviço do 

Monitor para ser informado sobre as condições dos processos de interesse. 

Destinatário Monitor 

U_M05 

Nome SubscribeProcessData(interestedProcess) 

Descrição 

Representa uma requisição onde é solicitada a assinatura de um serviço do 

Gerenciador de recurso para ser informado sobre os dados dos processos de 

interesse. 

Destinatário Gerenciador de recurso 

U_M06 

Nome RequestSearchInfo(infoQuery) 

Descrição 

Representa uma requisição a um agente Gerenciador de recurso, 

responsável pelos dados da aplicação, para a consulta de informações na 

base de dados. 

Destinatário Gerenciador de recurso 

U_M07 

Nome RequestControlActions(controlActions) 

Descrição 
Representa uma requisição a um agente Supervisor para a execução de 

ações de controle no processo. 

Destinatário Supervisor 

U_M08 

Nome RequestKnowledgeQuery(query) 

Descrição 

Representa uma requisição a um agente Gerenciador de conhecimento para 

consultar e alterar as informações sobre os processos armazenadas nos 

repositórios de conhecimento. 



148 

 

 

 

Destinatário Gerenciador de conhecimento 

Normas 

  

Deve conhecer sobre os dados do processo, monitoramento; habilidades para se adaptar as 

preferências dos usuários; devem notificar os usuários sobre todas as informações recebidas de acordo 

com as preferências dos usuários. 

 

B.4 - Supervisor 

Tabela 12 – Especificação detalhada do papel Supervisor. 

Papel 

S 

Nome Supervisor 

Descrição 

Esses agentes são encarregados da coordenação dos outros agentes do SMA 

na realização de suas tarefas, na consolidação das informações, diagnóstico 

de anormalidade e planejamento das atividades. 

Objetivos 

S_G01 

Nome Supervisionar processos 

Descrição 

É criado junto com a inicialização do agente, sendo responsável por 

inicializar os processos de monitoramento e controle. Também responsável 

por adaptar o processo de supervisão quando houver mudanças nos 

mesmos, redefinindo os planos de monitoramento e controle. 

Condição de criação 
(inicialização do agente) || (Notificação de mudanças no processo de 

supervisão recebida de um agente Gerenciador de conhecimento) 

Meios para alcançar 

S_G02 - Obter infos. dos processos &amp;amp;&amp;amp; S_G03 - Analisar infos. dos 

processos &amp;amp;&amp;amp; S_G04 - Gerenciar monitoramento &amp;amp;&amp;amp; SG_05 - Gerenciar 

controle &amp;amp;&amp;amp; S_G06 – Notificar assinantes supervisão 

S_G02 

Nome Obter infos. dos processos 

Descrição 
Responsável por recuperar as informações dos processos a serem 

supervisionados. 

Condição de criação criação do objetivo S_G01 – Inicializar supervisão 

Meios para alcançar  S_P01 – Solicitar info. dos processos 

 S_G03 

Nome Analisar infos. dos processos 

Descrição 

Responsável por analisar as informações dos processos recuperadas e gerar 

os planos de monitoramento e controle. Deve ser criado após o objetivo 

S_G02 ser alcançado. 

Condição de criação objetivo S_G01 ativado e objetivo S_G02 alcançado 

Meios para alcançar S_P02 – Identificar atividades 

S_G04 

Nome Gerenciar monitoramento 

Descrição Responsável por encontrar agentes Monitores e requisitar monitoramento. 

Condição de criação objetivo S_G01 ativado e objetivo S_G03 alcançado. 

Meios para alcançar S_P03 – Solicitar monitoramento 

S_G05 

Nome Gerenciar controle 

Descrição 
Responsável por encontrar agentes Controladores e requisitar execução dos 

planos de controle. 

Condição de criação objetivo S_G01 ativado e objetivo S_G03 alcançado. 

Meios para alcançar S_P04 – Solicitar controle 

S_G06 

Nome Notificar assinantes supervisão 

Descrição 
Informar agentes assinantes dos processos de supervisão sobre os agentes 

que fazem parte dos processos de seus interesses. 

Condição de criação objetivo S_G01 ativado e objetivos S_G05 e S_G04 alcançados 

Meios para alcançar S_P05 – Notificar infos. de supervisão 

S_G07 

Nome Registrar serviços 

Descrição 

Responsável por registrar e manter atualizado o registro dos serviços 

oferecidos, em um agente Facilitador para que outros agentes possam 

encontra-los. O registro deve ser atualizado sempre que houver mudanças 

nos planos de supervisão. 



149 

 

 

 

Condição de criação inicialização do agente e objetivo S_G01 alcançado 

Meios para alcançar S_P12 – Requisitar registro de serviço 

S_G08 

Nome Procurar agentes Recurso da app. 

Descrição 
Encontrar agentes Gerenciadores de recurso da aplicação usados para 

fornecer o serviço de armazenamento dos registros de diagnóstico. 

Condição de criação Inicialização do agente 

Meios para alcançar S_P06 – Buscar agentes Recurso 

S_G09 

Nome Tratar anormalidade 

Descrição Responsável por gerenciar as notificações de ocorrência de anormalidades. 

Condição de criação (evento – msg recebida) [M_M05] - notificação monitor 

Meios para alcançar 
S_G10 – Consolidar anormalidade &amp;amp;&amp;amp; S_G11 – Diagnosticar &amp;amp;&amp;amp; S_G12 – 

Obter planos de recuperação 

S_G10 

Nome Consolidar anormalidade 

Descrição Verificar se as informações da anormalidade identificada são consistentes. 

Condição de criação objetivo S_G09 criado 

Meios para alcançar S_P07 – Consolidar informações 

S_G11 

Nome Diagnosticar 

Descrição Responsável por obter o diagnóstico da anormalidade identificada. 

Condição de criação S_G09 ativado e S_G010 alcançado 

Meios para alcançar S_P08 – Gerar diagnóstico. 

S_G12 

Nome Obter planos de recuperação 

Descrição 
Responsável por determinar os planos necessários para se recuperar ou evita 

a ocorrência da anormalidade identificada. 

Condição de criação S_G09 ativado e S_G010 alcançado 

Meios para alcançar S_P09 – Determinar planos de recuperação 

S_G13 

Nome Gerenciar lista assinantes serv. 

Descrição Responsável por gerenciar a lista de assinantes do serviço de supervisão.  

Condição de criação (evento – msg recebida) [U_M03] 

Meios para alcançar S_P10 – Cadastrar assinante || S_P11 – Excluir assinante 

Planos 

S_P01 

Nome Solicitar info. dos processos 

Descrição 

Consiste nas tarefas para encontrar os agentes Gerenciadores de 

conhecimento através dos agentes Facilitadores e recuperar as informações 

do processo. Também deve assinar o servido do Gerenciador de 

conhecimento para ser notificado sobre as mudanças nos processos 

supervisionados. 

Condição de ativação Criação do objetivo S_G02 – Obter infos. dos processos 

Parâmetros entrada S_B01 – Lista de Facilitadores; S_B07 – Infos. processos 

Parâmetros saída 
Informações do processo (atualização S_B07); atualização S_B02 – Lista de 

Gerenciadores de conhecimento. 

Eventos gerados 
S_M01 – RequestSearch; S_M02 – RequestKnowledgeQuery; S_M12 – 

SubscribeProcessChanges. 

Colaboradores Gerenciador de conhecimento, Facilitador 

S_P02 

Nome Identificar atividades 

Descrição 
Consiste nas tarefas para analisar as informações dos processos, 

recuperadas, e determinar os planos de monitoramento e controle. 

Condição de ativação Criação do objetivo S_G03 – Analisar infos. dos processos 

Parâmetros entrada S_B07 – Infos. processos 

Parâmetros saída Planos de monitoramento e controle (atualização S_B07) 

S_P03 

Nome Solicitar monitoramento 

Descrição 
Consiste nas tarefas para encontrar os agentes Monitores e requisitar o 

monitoramento dos processos. 

Condição de ativação Criação do objetivo S_G04 – Gerenciar monitoramento 

Parâmetros entrada 
Planos de monitoramento (S_B07); S_B01 – Lista de Facilitadores; S_B03 

– Lista de Monitores. 

Parâmetros saída Atualização S_B03 

Eventos gerados S_M01 – RequestSearch; S_M03 – RequestMonitoring. 

Colaboradores Monitor; Facilitador 

S_P04 Nome Solicitar controle 



150 

 

 

 

Descrição 
Consiste nas tarefas para encontrar os agentes Controladores e requisitar a 

execução dos planos de controle. 

Condição de ativação Criação do objetivo S_G05 – Gerenciar controle 

Parâmetros entrada 
Planos de controle (S_B07); S_B01 – Lista de Facilitadores; S_B04 – Lista 

de Controladores. 

Parâmetros saída Atualização S_B04 

Eventos gerados S_M01 – RequestSearch; S_M04 – RequestControl. 

Colaboradores Controlador; Facilitador 

S_P05 

Nome Notificar infos. de supervisão 

Descrição 

Consiste das tarefas para informar aos agentes assinantes a lista dos agentes 

Gerenciadores de Recurso, Monitores e Controladores que fazem parte dos 

processos de supervisão de seus interesses. 

Condição de ativação Criação do objetivo S_G06 – Notificar assinantes supervisão 

Parâmetros entrada 
S_B03 – Lista de Monitores; S_B04 – Lista de Controladores; S_B05 – 

Lista agentes assinantes; S_B07 – Infos. processos. 

Eventos gerados S_M08 – InformSupervisionInfo 

Colaboradores Gerenciador de interface com o usuário 

S_P06 

Nome Buscar agentes Recurso 

Descrição 

Consiste das tarefas para encontrar os agentes Gerenciadores de recurso da 

aplicação que fornecem os serviços de armazenamento dos registros de 

diagnóstico. 

Condição de ativação Criação do objetivo S_G08 – Procurar agentes Recurso da app. 

Parâmetros entrada 
Tipo de serviço de armazenamento para o registro de diagnósticos; S_B06 – 

Lista agentes Recurso. 

Parâmetros saída Atualização S_B06 – Lista agentes Recurso 

Eventos gerados S_M01 – RequestSearch. 

Colaboradores Facilitador 

S_P07 

Nome Consolidar informações 

Descrição 
Consiste das tarefas para a consolidação das informações das possíveis 

anormalidades identificadas para verificar a consistência dos resultados. 

Condição de ativação Criação do objetivo S_G10 – Consolidar anormalidade 

Parâmetros entrada Conteúdo das msgs recebidas [M_M05] - Informações da anormalidade 

Parâmetros saída Resultados consolidados 

S_P08 

Nome Gerar diagnóstico 

Descrição 

Consiste das tarefas para realizar o diagnóstico através de consultas na base 

de conhecimento, através de um agente Gerenciador de conhecimento, 

informar esses diagnósticos aos agentes assinantes e salvar os registros de 

diagnóstico. 

Condição de ativação Criação do objetivo S_G11 – Diagnosticar 

Parâmetros entrada 
Conteúdo das msgs recebidas [M_M05]; S_B02 – Lista de Gerenciadores 

de conhecimento; S_B05 – Lista assinantes;  

Eventos gerados 
S_M02 – RequestKnowledgeQuery; S_M07 – InformAnormReport; S_M09 

– RequestStoreInfo; 

Colaboradores Gerenciador de conhecimento; Gerenciador interface com o usuário 

S_P09 

Nome Determinar planos de recuperação 

Descrição 

Consiste nas tarefas para buscar informações sobre os planos de 

recuperação através de requisições a um agente Gerenciador de 

conhecimento, informar esses planos e requisitar a permissão do usuário 

para aplica-los. 

Condição de ativação Criação do objetivo S_G12 – Obter planos de recuperação 

Parâmetros entrada 
Conteúdo das msgs recebidas [M_M05]; S_B02 – Lista de Gerenciadores 

de conhecimento; S_B05 – Lista agentes assinantes; 

Eventos gerados 
S_M05 – RequestControlChanges; S_M02 – RequestKnowlegeQuery; 

S_M11 – RequestPlanAgreement; S_M05 – RequestControlChanges 

Colaboradores Gerenciador de conhecimento; Gerenciador interface com o usuário 

S_P10 

Nome Cadastrar assinante 

Descrição 

Consiste nas tarefas para analisar a requisição de cadastro e caso os 

processos de interesse correspondam aos processos supervisionados, 

adicionar o agente a lista de agentes assinantes. 

Condição de ativação Criação do objetivo S_G13 – Gerenciar lista assinantes serv. e ação da 



151 

 

 

 

requisição seja “cadastrar”. 

Parâmetros entrada 
Conteúdo das msgs recebidas [U_M03]; S_B05 – Lista agentes assinantes; 

S_B07 – Infos. processos 

Parâmetros saída Atualização S_B05 – Lista agentes assinantes 

Colaboradores Gerenciador interface com o usuário 

S_P11 

Nome Excluir assinante 

Descrição Consiste nas tarefas para excluir um agente da lista de agentes assinantes 

Condição de ativação 
Criação do objetivo S_G13 – Gerenciar lista assinantes serv. e ação da 

requisição seja “excluir”. 

Parâmetros entrada Conteúdo das msgs recebidas [U_M03]; S_B05 – Lista agentes assinantes; 

Parâmetros saída Atualização S_B05 – Lista agentes assinantes 

Colaboradores Gerenciador interface com o usuário 

S_P12 

Nome Requisitar registro de serviço 

Descrição 
Consiste nas tarefas para registrar os serviços do agente e manter esses 

serviços registrados e atualizados.  

Condição de ativação Criação do objetivo S_G07 – Registrar serviços 

Parâmetros entrada S_B07 – Infos. processos; S_B01 – Lista de Facilitadores; 

Eventos gerados S_M13 – RequestRegisterServ; 

Colaboradores Facilitador 

Crenças e Recursos 

S_B01 

Nome Lista de Facilitadores 

Descrição 

Uma lista com a identificação dos agentes Facilitadores presentes no SMA, 

que são utilizados para encontrar os agentes que oferecem os serviços 

necessários para desempenhar suas tarefas. 

S_B02 

Nome Lista de Gerenciadores de conhecimento 

Descrição 

A identificação dos agentes Gerenciadores de conhecimento que possuem 

as informações necessárias, utilizadas para a supervisão e controle dos 

processos. 

S_B03 

Nome Lista de Monitores 

Descrição 
Uma lista com a identificação dos agentes Monitores que desempenham os 

serviços de monitoramento utilizado na supervisão dos processos. 

S_B04 

Nome Lista de Controladores 

Descrição 
Uma lista com a identificação dos agentes Controladores que desempenham 

os serviços de controle utilizado no controle dos processos. 

S_B05 

Nome Lista agentes assinantes 

Descrição 
Uma lista dos agentes Gerenciadores de interface com o usuário que tem 

interesse nos processos supervisionados. 

S_B06 

Nome Lista agentes Recursos 

Descrição 

Uma lista dos agentes Gerenciadores de recursos que fornecem o serviço de 

armazenamento de dados da aplicação. Usados para armazenar os registros 

de diagnóstico. 

S_B07 

Nome Infos. processos 

Descrição 

Mantém as informações sobre os processos pelos quais o agente Supervisor 

é responsável. Essas informações representam os planos de monitoramento 

e controle. 

Evento (mensagens enviadas) 

S_M01 

Nome RequestSearch(serviceType) 

Descrição 

Representa uma requisição usada para a busca de agentes pelos seus 

serviços, através do cadastrado nos Facilitadores. O parâmetro dessa 

requisição deve conter as informações sobre os serviços de interesse. 

Destinatários Facilitador 

S_M02 

Nome RequestKnowledgeQuery(query) 

Descrição 

Representa uma requisição a um agente Gerenciador de conhecimento para 

obter as informações referentes aos processos a serem monitorados. E 

também obter informações sobre uma anormalidade. 

Destinatários Gerenciador de conhecimento 

S_M03 
Nome RequestMonitoring(monitorPlan) 

Descrição Representa uma requisição usada para solicitar o serviço de monitoramento 



152 

 

 

 

a um agente Monitor. Nessa requisição devem ser passadas as informações 

necessárias para o processo de monitoramento. 

Destinatários Monitor 

S_M04 

Nome RequestControl(controlPlan) 

Descrição 
Representa uma requisição a um agente Controlador para solicitar a 

execução de um plano de controle. 

Destinatários Controlador 

S_M05 

Nome RequestControlChanges(controlParams) 

Descrição 
Representa uma requisição a um agente Controlador para solicitar 

mudanças nos parâmetros de controle. 

Destinatários Controlador 

S_M07 

Nome InformAnormReport(anormReport) 

Descrição 

Representa um relatório, com as informações de diagnóstico e possíveis 

medidas corretivas sobre determinada anormalidade identificada, enviado 

para todos os agentes da lista de assinantes que possuem interesse nessa 

anormalidade. 

Destinatários Gerenciador de interface com o usuário 

S_M08 

Nome InformSupervisionInfo(agentsInvolved) 

Descrição 

Representa a lista dos agentes (Monitores e Controladores) que fazem parte 

do processo de superviso. Enviada para os Gerenciadores de interface com o 

usuário para notifica-los sobre quais agentes que ele deve obter as 

informações relacionadas aos processos de supervisão de seu interesse. 

Destinatários Gerenciador de interface com o usuário 

S_M09 

Nome RequestStoreInfo(diagnosticLog) 

Descrição 

Representa uma requisição solicitando o armazenamento dos registros dos 

diagnósticos realizados para o agente Gerenciador de Recurso responsável 

pelos dados da aplicação. 

Destinatários Gerenciador de Recurso 

S_M11 

Nome RequestPlansAgreement(recoveryPlan) 

Descrição 
Representa uma requisição onde são informados os planos de recuperação, e 

é esperada uma resposta autorizando ou não a aplicação dos mesmos. 

Destinatários Agentes Gerenciadores de interface com o usuário 

S_M12 

Nome SubscribeProcessChanges(interestProcess) 

Descrição 

Representa uma requisição onde é solicitada a assinatura de um servido do 

Gerenciador de conhecimento para ser notificado quando houver mudanças 

nos processos de interesse supervisionados. 

Destinatários Gerenciador de conhecimento 

S_M13 

Nome RequestRegisterServ(servDescript) 

Descrição 
Representa uma requisição para um agente Facilitador solicitando o registro 

dos serviços oferecidos. 

Destinatários Facilitador 

S_M14 

Nome RequestControlActs(actions) 

Descrição Representa uma requisição a um agente Controlador  

Destinatários Controlador 

Normas 

  Conhecer a ontologia de domínio utilizada para a troca de mensagens entre os agentes; 
Conhecer os processos que devem ser supervisionados; as anormalidades, diagnósticos e agentes; 

 

B.5 - Controlador 

Tabela 13 – Especificação detalhada do papel Controlador. 

Papel 

C 
Nome Controlador 

Descrição 
Esses agentes tem a função de controlar os processos executando ações de 

controle. 



153 

 

 

 

Objetivos 

C_G01 

Nome Controlar processo 

Descrição 
Responsável por iniciar o controle dos processos, a partir de uma requisição 

de controle de um agente Supervisor. 

Condição de criação 
(evento – msg recebida) [S_M04] – requisição de controle do agente 

Supervisor, também no caso de atualização nos planos. 

Meios para alcançar C_P01 – Realizar controle dos processos 

C_G04 

Nome Tratar requisições de controle 

Descrição 

Responsável por tratar as requisições feitas pelos agentes Supervisores, a 

fim de modificar os parâmetros de controle ou executar ações de controles 

específicas. 

Condição de criação (evento – msg recebida) [S_M05] 

Meios para alcançar 
C_P03 – Modificar params. de controle || C_P04 – Executar ações de 

controle 

C_G05 

Nome Registrar serv. controle 

Descrição 

Responsável por registrar e manter atualizado o registro dos serviços 

oferecidos, em um agente Facilitador para que outros agentes possam 

encontra-los. O registro deve ser atualizado sempre que houver mudanças 

nos planos de supervisão. 

Condição de criação inicialização do agente e objetivo C_G01 alcançado 

Meios para alcançar C_P05 – Requisitar registro de serviço 

Planos 

C_P01 

Nome Realizar controle dos processos 

Descrição 
Consiste nas tarefas para iniciar e realizar o controle dos processos, através 

da execução das ações de controle determinadas. 
Condição de ativação Criação do objetivo C_G01 – Controlar processo 

Parâmetros entrada C_B01 – Plano de controle; C_B02 – Infos. agente Supervisor 

Parâmetros saída Atualização C_B01 – Plano de controle; C_B02 – Infos. agente Supervisor 

Colaboradores Supervisor 

C_P03 

Nome Modificar params. de controle 

Descrição 

Consiste nas tarefas para interpretar a requisição de um agente Supervisor 

para a modificação dos valores de alguns parâmetros do plano de controle e 

realizar as alterações requisitadas. 

Condição de ativação 
Criação do objetivo C_G04 – Tratar requisições de controle e ação da 

requisição seja “alterar”. 

Parâmetros entrada 
Conteúdo das msgs recebidas [S_M05] - lista com as alterações; C_B01 – 

Plano de controle 

Parâmetros saída Atualização C_B01 – Plano de controle 

Colaboradores Supervisor 

C_P04 

Nome Executar ações de controle 

Descrição 

Consiste nas tarefas para interpretar a requisição de um agente Supervisor 

para a execução de um conjunto de ações de controle em determinado 

processo e executar essas ações. 

Condição de ativação 
Criação do objetivo C_G04 – Tratar requisições de controle e ação da 

requisição seja “executar”. 

Parâmetros entrada 
Conteúdo das msgs recebidas [S_M04] - conjunto de ações a serem 

executadas 

Colaboradores Supervisor 

C_P05 

Nome Requisitar registro de serviço 

Descrição 
Consiste nas tarefas para registrar os serviços do agente e manter esses 

serviços registrados e atualizados.  

Condição de ativação Criação do objetivo C_G05 – Registrar serv. controle 

Parâmetros entrada C_B01 – Plano de controle; C_B03 – Lista de Facilitadores; 

Eventos gerados C_M01 – RequestRegisterServ; 

Colaboradores Facilitador 

Crenças e Recursos 

C_B01 
Nome Plano de controle 

Descrição Mantém as informações sobre os planos de controle que determinam as 



154 

 

 

 

variáveis monitoradas e valores desejados, assim como outras informações 

necessárias para as operações de controle. 

C_B02 
Nome Infos. agente Supervisor 

Descrição A identificação do agente Supervisor que requisitou o processo de controle. 

C_B03 

Nome Lista de Facilitadores 

Descrição 

Uma lista com a identificação dos agentes Facilitadores presentes no SMA, 

que são utilizados para encontrar os agentes que oferecem os serviços 

necessários para desempenhar suas tarefas. 

Evento (mensagens enviadas) 

C_M01 

Nome RequestRegisterServ(servDescript) 

Descrição 
Representa uma requisição para um agente Facilitador solicitando o registro 

dos serviços oferecidos. 

Destinatário Facilitador 

Normas 

  

Conhecer as ontologias do processo de controle/ dispositivos e sistemas de controle 

Devem possuir interfaces com os sistemas de controle, como PLCs e DCS. 

O controlador também pode armazenar os logs sobre as mudanças realizadas no controle/durante a 

operação de controle. 

 

B.6 - Gerenciador de Conhecimento 

Tabela 14 – Especificação detalhada do papel Gerenciador de Conhecimento. 

Papel 

K 

Nome Gerenciador de Conhecimento 

Descrição 

Esses agentes tem a função de gerenciar o conhecimento utilizado no SMA. 

Esse conhecimento envolve informações para a supervisão dos processos e 

também troca de informações entre os agentes. 

Objetivos 

K_G01 

Nome Gerenciar conhecimento da app. 

Descrição 
É responsável por atender as requisições de outros agentes para consultar, 

adicionar ou alterar o conhecimento da aplicação. 

Condição de criação (evento – msg recebida) [S_M02 || U_M08] 

Meios para alcançar 
K_P01 – Consultar conhecimento; || K_P02 – Adicionar conhecimento; || 

K_P04 – Modificar conhecimento; 

K_G02 

Nome Manter serv de ctrl. de alts. 

Descrição 

Responsável por manter a lista dos agentes assinantes do serviço de controle 

de alterações no conhecimento, atendendo as requisições de outros agentes 

para assinar ou cancelar a assinatura a esses serviços. 

Condição de criação (evento – msg recebida) [S_M12] 

Meios para alcançar K_P05 – Cadastrar Assinante; || K_P07 – Excluir Assinante; 

K_G04 

Nome Notificar alterações 

Descrição 
Responsável por notificar os agentes Supervisores assinantes sobre 

alterações ocorridas nos processos supervisionados pelos mesmos. 

Condição de criação (evento – interno) – alerta de mudanças identificadas... 

Meios para alcançar K_P03 – Informar mudanças no conhecimento 

K_G07 

Nome Registrar serv. conhecimento 

Descrição 

Responsável por registrar e manter atualizado o registro dos serviços 

oferecidos, em um agente Facilitador para que outros agentes possam 

encontra-los. O registro deve ser atualizado sempre que houver mudanças 

nos planos de supervisão. 

Condição de criação inicialização do agente e objetivo K_G02 alcançado 

Meios para alcançar K_P06 – Requisitar registro de serviço 

Planos 

K_P01 Nome Consultar conhecimento 



155 

 

 

 

Descrição 
Consiste nas tarefas para atender uma requisição de outro agente para a 

consulta do conhecimento armazenado na base de conhecimento. 

Condição de ativação Criação do objetivo K_G01 – Gerenciar conhecimento da app. 

Parâmetros entrada 
Conteúdo das msgs recebidas [S_M02 || U_M08] – informações de 

consulta; e K_B01 – Infos . repositórios de conhecimento. 

Eventos gerados K_M02 – InformQueryResult 

Colaboradores Gerenciador de interface com o usuário; Supervisor 

K_P02 

Nome Adicionar conhecimento 

Descrição 

Consiste nas tarefas para atender uma requisição de outro agente para a 

adição de informações ao conhecimento armazenado na base de 

conhecimento. 

Condição de ativação Criação do objetivo K_G01 – Gerenciar conhecimento da app. 

Parâmetros entrada 
Conteúdo das msgs recebidas [U_M08] – conteúdo para adicionar; e K_B01 

– Infos . repositórios de conhecimento. 

Colaboradores Gerenciador de interface com o usuário 

K_P03 

Nome Informar mudanças no conhecimento 

Descrição 

Consiste nas tarefas para tratar o evento gerado quando é identificada 

alguma alteração nos processos e notificar os agentes Supervisores, 

interessados nesses processos, presentes na lista de assinantes. 

Condição de ativação Criação do objetivo K_G04 – Notificar alterações 

Parâmetros entrada Informações evento interno; K_B04 – Lista agentes Supervisores 

Eventos gerados K_M01 – InformProcessChanges 

Colaboradores Supervisor 

K_P04 

Nome Modificar conhecimento 

Descrição 
Consiste nas tarefas para atender uma requisição de outro agente para a 

modificação do conhecimento armazenado na base de conhecimento. 

Condição de ativação Criação do objetivo K_G01 – Gerenciar conhecimento da app. 

Parâmetros entrada 
Conteúdo das msgs recebidas [U_M08] – conteúdo para alteração; e K_B01 

– Infos . repositórios de conhecimento. 

Colaboradores Gerenciador de interface com o usuário 

K_P05 

Nome Cadastrar Assinante 

Descrição 

Consiste nas tarefas para atender a requisição de um agente Supervisor e 

adicionar esse agente a lista de agentes assinantes para receber notificações 

sobre mudanças no conhecimento. 

Condição de ativação 
Criação do objetivo K_G02 – Gerenciar lista assinantes serv.; e ação da 

requisição seja “cadastrar”. 

Parâmetros entrada 
Conteúdo das msgs recebidas [S_M12]; K_B04 – Lista agentes 

Supervisores; 

Parâmetros saída Atualização K_B04 – Lista agentes assinantes 

Colaboradores Supervisor 

K_P06 

Nome Requisitar registro de serviço 

Descrição 
Consiste nas tarefas para registrar os serviços do agente e manter esses 

serviços registrados e atualizados.  

Condição de ativação Criação do objetivo K_G07 – Registrar serv. conhecimento 

Parâmetros entrada K_B03 – Lista dos processos; K_B05 – Lista de Facilitadores; 

Eventos gerados K_M01 – RequestRegisterServ; 

Colaboradores Facilitador 

K_P07 

Nome Excluir assinante 

Descrição Consiste nas tarefas para excluir um agente da lista de agentes assinantes 

Condição de ativação 
Criação do objetivo K_G02 – Gerenciar lista assinantes serv.; e ação da 

requisição seja “excluir”. 

Parâmetros entrada 
Conteúdo das msgs recebidas [S_M12]; K_B04 – Lista agentes 

Supervisores; 

Parâmetros saída Atualização K_B04 – Lista agentes assinantes 

Colaboradores Supervisor 

Crenças 

K_B01 
Nome Infos. repositórios de conhecimento 

Descrição 
Mantém as informações de acesso aos repositórios de conhecimento que são 

gerenciados pelo agente. 



156 

 

 

 

K_B04 
Nome Lista agentes Supervisores 

Descrição 
Uma lista com a identificação dos agentes Supervisores que serão 

notificados quando houver alterações nos processos de seus interesses. 

K_B05 

Nome Lista de Facilitadores 

Descrição 

Uma lista com a identificação dos agentes Facilitadores presentes no SMA, 

que são utilizados para encontrar os agentes que oferecem os serviços 

necessários para desempenhar suas tarefas. 

Evento (mensagens enviadas) 

K_M01 

Nome InformProcessChanges(processChanges) 

Descrição 
Representa uma mensagem onde é informado os processos que foram 

alterados e as mudanças realizadas. 

Destinatário Supervisor 

K_M02 

Nome InformQueryResult(queryResult) 

Descrição 
Representa uma mensagem onde é informado os resultados de uma consulta 

na base de conhecimento. 

Destinatário Supervisor; Gerenciador de interface com o usuário 

K_M04 

Nome RequestRegisterServ(servDescript) 

Descrição 
Representa uma requisição para um agente Facilitador solicitando o registro 

dos serviços oferecidos. 

Destinatário Facilitador 

Normas 

  Deve ter acesso a base de conhecimento, e implementar os mecanismos para a manipulação do 
conhecimento. 

 

B.7 - Facilitador 

Tabela 15 – Especificação detalhada do papel Facilitador. 

Papel 

F 

Nome Facilitador 

Descrição 

Esses agentes tem a função de manter um registro dos serviços dos agentes 

presentes no SMA. Eles devem apresentar interfaces para o registro e 

descoberta dos serviços e agentes. 

Objetivos 

F_G01 

Nome Gerenciar registro de serviços 

Descrição 

Responsável por gerenciar o registro dos serviços dos agentes do SMA, 

tratando as requisições para o registro de novos agentes e também a 

exclusão dos agentes cadastrados.  

Condição de criação 
(evento – msg recebida) [R_M03 || M_M06 || S_M13 || C_M01 || K_M04] – 

requisição de registro 

Meios para alcançar F_P01 – Registrar serviço || F_P02 – Excluir serviço 

F_G02 

Nome Buscar serviços 

Descrição 
Responsável por tratar as requisições de busca de serviços de outros agentes 

para encontrar os agentes que prestam os serviços buscados. 

Condição de criação (evento – msg recebida) [S_M01 || U_M01 || M_M01] – requisição de busca 

Meios para alcançar F_P03 – Encontrar serviço 

F_G03 

Nome Manter registro 

Descrição 

Responsável por manter o registro de serviços atualizado, de forma que os 

agentes precisem atualizar os registros de tempos em tempos e assim 

garantir que eles ainda estão no SMA. 

Condição de criação Inicialização do agente 

Meios para alcançar F_P04 – Atualizar registro 

Planos 

F_P01 
Nome Registrar serviço  

Descrição Consiste nas tarefas para interpretar a requisição de um agente para o 



157 

 

 

 

registro de seus serviços e cadastrar esse agente e seus serviços no registro 

de serviços. 

Condição de ativação 
Criação do objetivo F_G01 – Gerenciar registro de serviço e ação da 

requisição seja “registrar”. 

Parâmetros entrada 
Conteúdo das msgs recebidas [R_M03 || M_M06 || S_M13 || C_M01 || 

K_M04] – infos. serviço e agente; F_B01 – Registro de serviços 

Parâmetros saída Atualização F_B01 – Registro de serviços 

Colaboradores 
Supervisor, Monitor, Controlador, Gerenciador de recurso, Gerenciador de 

conhecimento 

F_P02 

Nome Excluir serviço 

Descrição 
Consiste nas tarefas para interpretar a requisição de um agente para retira-lo 

do registro de serviços e excluir suas informações do registro de serviços. 

Condição de ativação 
Criação do objetivo F_G01 – Gerenciar registro de serviço e ação da 

requisição seja “excluir”. 

Parâmetros entrada 
Conteúdo das msgs recebidas [R_M03 || M_M06 || S_M13 || C_M01 || 

K_M04]  – id agente; F_B01 – Registro de serviços 

Parâmetros saída Atualização F_B01 – Registro de serviços 

Colaboradores 
Supervisor, Monitor, Controlador, Gerenciador de recurso, Gerenciador de 

conhecimento 

F_P03 

Nome Encontrar serviço 

Descrição 

Consiste nas tarefas para interpretar a requisição de um agente para a busca 

de outro agente que oferece determinados serviços e encontrar esses agentes 

a partir do tipo de serviço que eles oferem. 

Condição de ativação Criação do objetivo F_G02 – Buscar serviços 

Parâmetros entrada 
Conteúdo das msgs recebidas [S_M01 || U_M01 || M_M01] –  tipo serviço 

procurado; F_B01 – Registro de serviços 

Eventos gerados F_M01 – InformAgentFound 

Colaboradores Gerenciador de interface com o usuário; Supervisor; Monitor 

F_P04 

Nome Atualizar registros 

Descrição 

Consiste nas tarefas para manter o registro de serviços atualizado, onde os 

agentes se registram por determinados intervalos de tempos e após isso o 

registro desses agentes é eliminado do registro de serviços. 

Condição de ativação Criação do objetivo F_G03 – Manter registro 

Parâmetros entrada F_B01 – Registro de serviços 

Parâmetros saída Atualização F_B01 – Registro de serviços 

Crenças 

F_B01 

Nome Registro de serviços 

Descrição 

Mantém uma lista com as informações dos agentes e serviços oferecidos. A 

estrutura da lista pode variar de acordo com a quantidade de informações 

que se deseja manter, o que pode contribuir para encontrar os agentes que 

oferecem os serviços buscados. 

Evento (mensagens enviadas) 

F_M01 

Nome InformAgentFound(agentList) 

Descrição 
Representa uma mensagem onde é informado a lista dos agentes presentes 

no registro de serviços que oferecem os serviços buscados. 

Destinatário Gerenciador de interface com o usuário; Supervisor; Monitor 

Normas 

  O repositório deve manter informações detalhadas sobre as capacidades dos agentes do sistema, as 
quais podem ser representadas de várias formas até mesmo utilizando descrições semânticas. 

Atualizar lista de agentes e serviços ativos de tempos em tempos; 

 

 



158 

 

 

 

APÊNDICE C – DESCRIÇÃO DOS OBJETIVOS DOS AGENTES 

IMPLEMETADOS 

 

Nessa seção é descrito com detalhes os objetivos dos agentes implementados, 

apresentados no Capítulo 5. 

 

C.1 - Agente Gerenciador de Recurso 

As funcionalidades desse agente foram implementadas através de quatro objetivos. 

Esses objetivos são representados no ADF do agente, assim como, os planos, as crenças e as 

mensagens. No Apêndice D, é apresentado partes do ADF desse agente. A seguir são 

descritos cada um dos objetivos desse agente: 

? GerenciarDadosProcesso – é criado quando o agente é inicializado. Ele é responsável 

por ativar um plano que estabelece uma conexão com o sistema de Mud-logging para 

recuperar os dados da perfuração em tempo real. Como descrito, na Seção 5.2.1.2, o 

sistema de Mud-logging foi simulado, assim esse plano estabelece uma conexão com o 

sistema que simula o serviço do Mud-logging;  

? RegistrarServDados – também é criado com a inicialização do agente. Ele é responsável 

por ativar um plano que registra no agente Facilitador o serviço oferecido por esse agente 

para o fornecimento de dados do sistema de Mud-logging. Esse objetivo é mantido 

enquanto o agente estiver sendo executado, pois o Facilitador mantém o registro desse 

serviço apenas por um tempo. Assim, esse agente tem como objetivo atualizar esse 

registro de tempos em tempos; 

? GerenciarListaAssinantes – é criado para atender uma requisição de outro agente para 

assinar ou cancelar a assinatura do serviço de dados de Mud-logging, oferecido por esse 

agente. Dependendo da requisição, um plano correspondente será ativado para incluir ou 

excluir o agente da lista de assinantes, respectivamente. A lista de assinantes é uma 

crença desse agente, que mantém uma lista com os identificadores dos agentes que 

desejam receber os dados da perfuração; 

? InformarDadosRT – é criado sempre que o agente recebe novos valores do sistema de 

Mud-logging. Ele é responsável por criar um plano para enviar esses dados, no formato 

apropriado para os agentes cadastrados na lista de assinantes. 



159 

 

 

 

C.2 - Agente Monitor 

O comportamento dos dois agentes Monitores é definido pelos seguintes objetivos: 

? RegistrarServMonitor – é criado quando o agente é inicializado e é responsável por ativar 

um plano que registra o serviço de monitoramento de anormalidades oferecido por esse 

agente. O comportamento desse objetivo é idêntico ao do objetivo do agente Gerenciador 

de Recurso, apresentado anteriormente (Seção 5.2.2.1); 

? MonitorarProcesso – é criado para atender uma requisição, de um agente Supervisor, 

para monitorar um processo. Nesse estudo de caso o processo monitorado corresponde a 

operação de perfuração. Esse objetivo é responsável por criar outros três objetivos que 

são responsáveis por inicializar o processo de monitoramento: 

AnalisarInfosMonitoramento, ObterDadosAnalise e AnalisarDadosProcesso; 

? AnalisarInfosMonitoramento – é criado pelo objetivo MonitorarProcesso para analisar as 

informações sobre a operação a ser monitorada. Essas informações são recebidas junto 

com a requisição do agente Supervisor, e contém os parâmetros e seus comportamentos 

que caracterizam as anormalidades, suas causas e também as etapas da perfuração. Essas 

informações são usadas para encontrar os agentes que fornecem os dados necessários e 

também pelo método usado para detectar a anormalidade e identificar suas causas; 

? ObterDadosAnalise – é criado pelo objetivo MonitorarProcesso após a realização do 

objetivo AnalisarInfosMonitoramento. Ele é responsável por ativar um plano para 

encontrar o agente Gerenciador de Recurso que fornece os dados de Mud-logging e 

assinar o serviço de dados desse agente; 

? AnalisarDadosProcesso – é criado pelo objetivo MonitorarProcesso após a realização do 

objetivo ObterDadosAnalise. Os dois agentes Monitores implementados são responsáveis 

por receber os parâmetros de perfuração do agente Gerenciador de Recurso, enquanto um 

deles aplica o método para a identificação da etapa de operação, o outro aplica o método 

de análise para determina as condições dos parâmetros operacionais; 

? InformarCondProcesso – é criado para informar as etapas da operação e as condições dos 

parâmetros operacionais, obtidas como resultado da aplicação do método de análise, aos 

agentes assinantes do serviço de monitoramento; 

? InformarDeteccaoAnorm – é criado quando uma anormalidade é detectada. Ele é 

responsável por ativar um plano para notificar o agente Supervisor sobre a anormalidade 

detectada e sua possível causa; 



160 

 

 

 

? GerenciarListaAssinantes – é criado para atender uma requisição de outro agente para 

assinar ou cancelar a assinatura do serviço de monitoramento oferecido por esse agente. 

O comportamento desse objetivo é idêntico ao do objetivo do agente Gerenciador de 

Recurso, apresentado anteriormente (Seção 5.2.2.1); 

 

C.3 - Agente Supervisor 

O comportamento desse agente é definido pelos seguintes objetivos: 

? RegistrarServSupervisao – apresenta o mesmo comportamento que os objetivos do 

agentes Gerenciador de Recurso e Monitor, exceto pelo fato do serviço registrado ser o 

serviço de supervisão da operação de perfuração; 

? GerenciarAssinantesServSupervisao – também apresenta o mesmo comportamento dos 

objetivos dos agentes Gerenciador de Recurso e Monitor, responsáveis por gerenciar a 

lista de agentes assinantes do serviço oferecido; 

? SupervisionarProcessos – é criado quando o agente é inicializado. Ele é responsável por 

inicializar as atividades de monitoramento das operações de perfuração. Para isso, são 

criados quatro sub objetivos: ObterInfosProcessos, AnalisarInfosProcessos, 

GerenciarRecursos e GerenciarMonitoramento; 

? ObterInfosProcessos – é criado pelo objetivo SupervisionarProcessos para obter as 

informações sobre as operações, as anormalidades e os agentes necessários para 

supervisionar a operação de perfuração. Assim, esse objetivo é responsável por ativar um 

plano para encontrar um agente Gerenciador de Conhecimento, através do Facilitador, e 

requisitar consultas na base de conhecimento para obter as informações necessárias; 

? AnalisarInfosProcessos – é criado pelo objetivo SupervisionarProcessos depois da 

realização do objetivo ObterInfosProcessos. Esse objetivo é responsável por ativar um 

plano para analisar as informações relacionadas a operação de perfuração para determinar 

os agentes Gerenciadores de Recurso e Monitores que devem ser inicializados para 

realizar o monitoramento da perfuração; 

? GerenciarRecursos – é criado pelo objetivo SupervisionarProcessos depois da realização 

do objetivo AnalisarInfosProcessos. Esse objetivo é responsável por ativar um plano para 

inicializar o agente Gerenciador de Recurso que fornece o serviço de dados da perfuração 

necessários para o monitoramento; 



161 

 

 

 

? GerenciarMonitoramento – é criado pelo objetivo SupervisionarProcessos depois da 

realização do objetivo GerenciarRecursos. Ele é responsável por ativar um plano para 

inicializar o agente Monitor que é responsável por monitorar a operação de perfuração; 

? NotificarAssinantesServSupervisao – é criado quando um novo agente assina o serviço de 

supervisão. Ele é responsável por ativar um plano para informar esse agente sobre os 

agentes Gerenciadores de Recurso e Monitores envolvidos na supervisão da perfuração; 

? TratarAnormalidade – é criado para atender uma notificação de um agente Monitor sobre 

a ocorrência de uma anormalidade. Para isso esse objetivo cria o objetivo Diagnosticar; 

? Diagnosticar – é criado pelo objetivo TratarAnormalidade para realizar o diagnóstico de 

uma anormalidade e informar esse diagnóstico aos agentes assinantes do serviço de 

supervisão. Para isso, esse objetivo ativa um plano para requisitar uma consulta na base 

de conhecimento, por meio do agente Gerenciador de Conhecimento, em busca do 

conhecimento sobre essa anormalidade para o diagnóstico da mesma. 

 

C.4 - Agente Gerenciador de Conhecimento 

O comportamento desse agente é definido por quatro objetivos: 

? RegistrarServConhecimento – apresenta o mesmo comportamento que o objetivo 

RegistrarServDados do agente Gerenciador de Recurso, exceto pelo fato do serviço 

registrado ser o serviço de acesso a base de conhecimento; 

? ManterServCtrlAlteracao – apresenta o mesmo comportamento que o objetivo 

GerenciarListaAssinantes do agente Gerenciador de Recurso, exceto pelo fato do serviço 

em questão ser o de monitoramento de alterações; 

? GerenciarConhecimentoApp – é criado para atender as requisições de outros agentes para 

consultar, o conhecimento mantido na base de conhecimento da aplicação. Um plano 

correspondente é ativado para realizar as operações de consulta; 

 

 

 

 



162 

 

 

 

C.5 - Agente Gerenciador de Interface com o Usuário 

O comportamento desse agente é definido pelos seguintes objetivos: 

? GerenciarUsuarios – é criado quando o agente é inicializado. Esse objetivo ativa um 

plano que fica esperando por requisições de acesso da camada de Apresentação. ao 

receber uma requisição, as informações de acesso do usuário são validadas e um novo 

agente Gerenciador de Interface com o Usuário é criado, com o perfil desse usuário; 

? AtenderRequisicoes – é criado para atender as requisições do usuário para consultar 

informações sobre as anormalidades e agentes mantida na base de conhecimento da 

aplicação. Ele é responsável por ativar um plano que solicita ao agente Gerenciador de 

Conhecimento o que foi requisitado através de uma consulta; 

? ApresentarParmsMonitoramento – é criado quando o agente recebe novos valores dos 

parâmetros de perfuração do agente Gerenciador de Recurso. Ele é responsável por ativar 

um plano para enviar esses valores para a camada de Apresentação para serem 

apresentados ao usuário; 

? ApresentarCondProcesso – é criado quando o agente recebe novas informações sobre as 

condições da operação que está sendo monitorada. Ele é responsável por ativar um plano 

para enviar essas informações para a camada de Apresentação para serem apresentados 

ao usuário; 

? ApresentarAlertas – é criado quando o agente recebe uma notificação da ocorrência de 

uma anormalidade do agente Supervisor. Ele ativa um plano para enviar essas 

informações para a camada de Apresentação para serem apresentado ao usuário; 

? GerenciarInfosInteresse – é criado quando o agente é inicializado. Ele é responsável por, 

a partir do perfil do usuário, determinar e recuperar as informações de interesse 

relacionadas ao perfil. Para isso, esse objetivo cria quatro sub objetivos responsáveis por 

obter as informações para os usuários; 

? AnalisarPerfil – é criado pelo objetivo GerenciarInfosInteresse para analisar o perfil do 

usuário e determinar os recursos que devem ser apresentados ao usuário. Nessa aplicação 

é considerado apenas um perfil genérico para os operadores da planta que utilizam o 

sistema; 

? ObeterInfosSupervisao – é criado pelo objetivo GerenciarInfosInteresse, após a 

realização do objetivo AnalisarPerfil, para encontrar o agente Supervisor responsável por 

supervisionar a operação de perfuração, assinar o serviço de supervisão para receber os 



163 

 

 

 

diagnósticos das anormalidades detectadas, e também recuperar as informações sobre os 

agentes Gerenciador de Recurso e Monitor envolvidos nessa operação; 

? ObterInfosMonitoramento – é criado pelo objetivo GerenciarInfosInteresse, após a 

realização do objetivo ObeterInfosSupervisao. Esse objetivo ativa um plano, que utiliza 

as informações recuperadas do agente Supervisor, para encontrar o agente Monitor e 

assinar o serviço de monitoramento da operação de perfuração para receber informações 

sobre as condições dessa operação; 

? ObterDadosProcesso – é criado pelo objetivo GerenciarInfosInteresse, após a realização 

do objetivo ObeterInfosSupervisao. Esse objetivo ativa um plano, que utiliza as 

informações recuperadas do agente Supervisor, para encontrar o agente Gerenciador de 

Recurso e assinar o serviço de dados de Mud-logging para receber os parâmetros 

operacionais monitorados durante a perfuração; 

 

APÊNDICE D – EXEMPLO DE UM ARQUIVO ADF 

 

Nessa seção é apresentado um exemplo de um arquivo ADF utilizado para descrever o 

comportamento interno de um agente BDI na plataforma Jadex. Esse ADF corresponde ao 

agente Gerenciador de Recurso implementado no estudo de caso, apresentado no Capítulo 5. 

&lt;agent name="GerenciadorRecurso" 

       package="br.com.jadex.agents.AgentRole_GerenciadorRecurso"&gt; 

 

&amp;lt;beliefs&gt; 

 &amp;lt;!--$RESOURCES --&gt; 

 &amp;lt;beliefset name="ListaAgentesAssinantes" class="IComponentIdentifier"&gt; 

 &amp;lt;/beliefset&gt; 

&amp;lt;/beliefs&gt; 

 

&amp;lt;goals&gt; 

 &amp;lt;!-- keep agent service registered --&gt; 

 &amp;lt;maintaingoalref name="RegistrarServDados"&gt; 

  &amp;lt;concrete ref="dfcap.df_keep_registered" /&gt; 

 &amp;lt;/maintaingoalref&gt; 

 

 &amp;lt;achievegoal name="GerenciarListaAssinantes" exclude="when_failed"&gt; 

  &amp;lt;parameter name="param" class="String"&gt; 

   &amp;lt;value&gt;""&lt;/value&gt; 

  &amp;lt;/parameter&gt; 

  &amp;lt;parameter name="act" class="String"&gt; 

   &amp;lt;value&gt;""&lt;/value&gt; 

  &amp;lt;/parameter&gt;    

 &amp;lt;/achievegoal&gt; 

 

 &amp;lt;achievegoal name="GerenciarFontesDadosRT" exclude="when_failed"&gt; 



164 

 

 

 

 &amp;lt;/achievegoal&gt; 

   

 &amp;lt;achievegoal name="InformarDadosRT"&gt; 

  &amp;lt;parameter name="param" class="String"&gt; 

   &amp;lt;value&gt;""&lt;/value&gt; 

  &amp;lt;/parameter&gt; 

 &amp;lt;/achievegoal &gt; 

&amp;lt;/goals&gt; 

 

&amp;lt;plans&gt; 

&amp;lt;!-- Plans for handling message requests. They have the task to create 

appropriate subgoals. --&gt; 

 &amp;lt;plan name="requestPlan_GerenciarListaAssinantes"&gt; 

  &amp;lt;parameter name="goalName" class="String"&gt; 

   &amp;lt;value&gt;"GerenciarListaAssinantes"&lt;/value&gt; 

  &amp;lt;/parameter&gt; 

  &amp;lt;parameterset name="act" class="String"&gt; 

   &amp;lt;value&gt;"signRTDataServ"&lt;/value&gt; 

   &amp;lt;value&gt;"unsubscribeRTDataServ"&lt;/value&gt; 

  &amp;lt;/parameterset&gt; 

   &amp;lt;body class="GoalRequestPlan"&gt;&lt;/body&gt; 

   &amp;lt;trigger&gt; 

    &amp;lt;messageevent ref="request_RTDataServ" /&gt; 

   &amp;lt;/trigger&gt; 

 &amp;lt;/plan&gt; 

 

 &amp;lt;!-- Real Plans that "do" the requested things. --&gt; 

 &amp;lt;plan name="realPlan_GerenciarFontesDadosRT"&gt; 

  &amp;lt;body class="RealPlan_RecuperarParametros"&gt;&lt;/body&gt; 

  &amp;lt;trigger&gt; 

   &amp;lt;goal ref="GerenciarFontesDadosRT" /&gt; 

  &amp;lt;/trigger&gt; 

 &amp;lt;/plan&gt; 

 

 &amp;lt;plan name="realPlan_InformarNovosValores"&gt; 

  &amp;lt;parameter name="param" class="String"&gt; 

   &amp;lt;goalmapping ref="InformarDadosRT.param"/&gt; 

  &amp;lt;/parameter&gt; 

  &amp;lt;body class="RealPlan_InformarNovosValores"&gt;&lt;/body&gt; 

  &amp;lt;trigger&gt; 

   &amp;lt;goal ref="InformarDadosRT" /&gt; 

  &amp;lt;/trigger&gt; 

 &amp;lt;/plan&gt; 

 

 &amp;lt;plan name="realPlan_ExcluirAssinante"&gt; 

  &amp;lt;parameter name="param" class="String"&gt; 

   &amp;lt;goalmapping ref="GerenciarListaAssinantes.param" /&gt; 

  &amp;lt;/parameter&gt; 

  &amp;lt;body class="RealPlan_ExcluirAssinante"&gt;&lt;/body&gt; 

  &amp;lt;trigger&gt; 

   &amp;lt;goal ref="GerenciarListaAssinantes"&gt; 

    &amp;lt;match&gt;"unsubscribeRTDataServ".equals($goal 

 .getParameter("act").getValue())&amp;lt;/match&gt; 

   &amp;lt;/goal&gt; 

  &amp;lt;/trigger&gt; 

 &amp;lt;/plan&gt; 

 

 &amp;lt;plan name="realPlan_CadastrarAssinante" priority="2"&gt; 

  &amp;lt;parameter name="param" class="String"&gt; 

   &amp;lt;goalmapping ref="GerenciarListaAssinantes.param" /&gt; 

  &amp;lt;/parameter&gt; 

  &amp;lt;body class="RealPlan_CadastrarAssinante"&gt;&lt;/body&gt; 

  &amp;lt;trigger&gt; 

   &amp;lt;goal ref="GerenciarListaAssinantes"&gt; 

    &amp;lt;match&gt;"signRTDataServ".equals($goal 

.getParameter("act").getValue())&amp;lt;/match&gt; 

   &amp;lt;/goal&gt; 



165 

 

 

 

  &amp;lt;/trigger&gt; 

 &amp;lt;/plan&gt;  

&amp;lt;/plans&gt; 

 

&amp;lt;events&gt; 

 &amp;lt;!--FIPA-messages needed to communicate with other agents --&gt; 

 &amp;lt;messageevent name="request_RTDataServ" direction="receive" 

   type="fipa"&gt; 

  &amp;lt;parameter name="performative" class="String" direction="fixed"&gt; 

   &amp;lt;value&gt;SFipa.REQUEST&lt;/value&gt; 

  &amp;lt;/parameter&gt; 

 &amp;lt;/messageevent&gt; 

   

 &amp;lt;messageevent name="inform" direction="send" type="fipa"&gt; 

  &amp;lt;parameter name="performative" class="String" direction="fixed"&gt; 

   &amp;lt;value&gt;SFipa.INFORM&lt;/value&gt; 

  &amp;lt;/parameter&gt; 

 &amp;lt;/messageevent&gt;   

&amp;lt;/events&gt; 

 

&amp;lt;!-- initial configurations --&gt; 

&amp;lt;configurations&gt; 

 &amp;lt;configuration name="default"&gt; 

  &amp;lt;goals&gt; 

   &amp;lt;!-- Create a goal for registering at the df. --&gt; 

   &amp;lt;initialgoal ref="RegistrarServDados"&gt; 

    &amp;lt;parameter ref="description"&gt; 

     &amp;lt;value&gt; 

       $properties.dfservice 

.createDFComponentDescription(null, 

$properties.dfservice 

.createDFServiceDescription 

       ("provideWITSMLDataServ", 

"RTDataService", "GIA-UNESP/RC")) 

     &amp;lt;/value&gt; 

    &amp;lt;/parameter&gt; 

    &amp;lt;parameter ref="leasetime"&gt; 

     &amp;lt;value&gt;20000&lt;/value&gt; 

    &amp;lt;/parameter&gt; 

   &amp;lt;/initialgoal&gt; 

     

   &amp;lt;initialgoal ref="GerenciarFontesDadosRT"&gt;   

   &amp;lt;/initialgoal&gt; 

  &amp;lt;/goals&gt; 

 &amp;lt;/configuration&gt; 

&amp;lt;/configurations&gt; 

&lt;/agent&gt; 



 

 

 

 

 

 

 

Autorizo a reprodução xerográfica para fins de pesquisa. 

 

 

 

 

 

 

São José do Rio Preto, ____/____/______ 

 

 

 

 

_________________________________ 

Assinatura 

 


</field>
	</doc>
</add>