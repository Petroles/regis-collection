<?xml version="1.0" encoding="utf-8"?>
<add>
	<doc>
		<field name="docid">BR-TU.10920</field>
		<field name="filename">16123_346007.pdf</field>
		<field name="filetype">PDF</field>
		<field name="text">
UNIVERSIDADE FEDERAL DE SANTA CATARINA
DEPARTAMENTO DE AUTOMAC?A?O E SISTEMAS

Bryant Bruce Picon Yang

CONTRIBUIC?O?ES AOS ALGORITMOS PNMPC E DMC
COM PASSO DE ESTABILIDADE

Floriano?polis

2016



Bryant Bruce Picon Yang

CONTRIBUIC?O?ES AOS ALGORITMOS PNMPC E DMC
COM PASSO DE ESTABILIDADE

Dissertac?a?o de mestrado submetida ao
Programa de Po?s-Graduac?a?o em En-
genharia de Automac?a?o e Sistemas para
a obtenc?a?o do Grau de Mestre em en-
genharia de Automac?a?o e Sistemas.
PGEAS-UFSC: Prof. Dr. Agustinho
Plucenio

Floriano?polis

2016



Ficha de identificação da obra elaborada pelo autor, 
através do Programa de Geração Automática da Biblioteca Universitária da UFSC. 

Yang, Bryant Bruce 
CONTRIBUIÇÕES AOS ALGORITMOS PNMPC E DMC COM PASSO DE 

ESTABILIDADE / Bryant Bruce Yang ; orientador, Agustinho 
Plucenio - Florianópolis, se, 2016. 

146 p. 

Dissertação {mestrado) - Universidade Federal de Santa 
Catarina, Centro Tecnológico. Programa de Pós-Graduação em 
Engenharia de Automação e Sistemas. 

Inclui referências 

1. Engenharia de Automação e Sistemas. 2. Controle 
Preditivo. 3. Controle Não Linear. 4. PNMPC. 5. MPC com 
Passo de Estabilidade. I. Plucenio, Agustinho. II. 
Universidade Federal de Santa Catarina. Programa de Pós 
Graduação em Engenharia de Automação e Sistemas. III. Título. 



Bryant Bruce Picon Yang 

CONTRIBUIÇÕES AOS ALGORITMOS PNMPC E DMC COM PASSO 
DE ESTABILIDADE 

Esta Dissertação foi julgada adequada para a obtenção do Título de 
"mestre em Engenharia de Automação e Sistemas", e aprovada em 
sua forma final pelo Programa de Pós-Graduação em Engenharia de 
Automação e Sistemas .. 

Banca 

Prof. Daniel Ferreira Coutinho, Dr. 
Coordenador do Curso ozsc ~ 

Prof. Dr. Hector Bessa Silveira 
DAS-UFSC 



Este trabalho e? dedicado a? minha fam??lia
e a meus queridos pais e em especial a
Mimi.





AGRADECIMENTOS

Primeiramente, a Deus por ter me dado sau?de e forc?a para su-
perar as dificuldades.

Aos membros da banca, pelas valiosas contribuic?o?es a este tra-
balho.

Ao meu orientador, Prof. Agustinho Plucenio que considero um
excelente professor e orientador e, acima de tudo, um grande amigo,
sempre auxiliando de uma forma bastante criativa nas inconta?veis du?vidas
que surgiram durante a realizac?a?o deste trabalho.

Agradec?o tambe?m ao Prof. Julio Normey pelos seus ensinamen-
tos e por me dar a oportunidade e abrir as portas ao programa PRH-34
no curso de mestrado.

Agradec?o, de corac?a?o, a? toda minha fam??lia. Em especial, aos
meus pais Ricardo e Shao Hwa, e meus irma?os Hans e Estiffany, pelo
amor, incentivo e apoio incondicional.

A?s meus amigos Josue, Patty, Alita e Irma, Henrique Farina,
Mo?nica Dias, Mirna, Pablo, Eleonor e Andrew que sempre me incenti-
varam e me deram carinho para continuar seguindo em frente na cons-
tante busca pelo conhecimento.

A? Carolina Vettorazo, pelas dicas e pela forc?a nesses momentos
de tensa?o.

Um agradecimento especial ao meu amigo Fabr??cio Saggin, que
sempre esta? disposto a ajudar em tudo momento, pela revisa?o e con-
tribuic?o?es aos cap??tulos deste trabalho.

A meu amigo que considero quase um irma?o Leandro Morita e
Eduarda, muito grato pelo apoio e pela amizade ao longo deste tempo.

A meus parces da Colo?mbia, Sergio, Deinis, Dayron, Andrea e
Camilo, obrigado pela amizade.

A? Miriam, minha amada, presente sempre no meu lado. Agradec?o
pelas palavras de forc?a e pelos bons momentos que sempre passamos
juntos.

Finalmente, gostaria de agradecer a? UFSC-DAS pelo ensino de
qualidade, ao PRH-34, ANP, sem os quais essa dissertac?a?o dificilmente
poderia ter sido realizada. E a todos mais que eu na?o tenha citado
nesta lista de agradecimentos, mas que de uma forma ou de outra con-
tribu??ram na?o apenas para a minha dissertac?a?o, mas tambe?m para eu
ser quem eu sou.





Eu tentei 99 vezes e falhei, mas na cente?sima
tentativa eu consegui, nunca desista de
seus objetivos mesmo que esses parec?am
imposs??veis, a pro?xima tentativa pode ser
a vitoriosa.

(Albert Einstein)





RESUMO

Neste trabalho sa?o abordados estudos de controle preditivo linear e na?o
linear. Grande parte dos processos existentes na indu?strias de petro?leo
e ga?s utilizam controladores preditivos. A crescente utilizac?a?o dessas
estrate?gias pode ser atribu??da ao fato de elas facilitarem a declarac?a?o
de problemas de controle relativamente complexos, como os casos de
controle de processos multivaria?veis, processos integradores, processos
insta?veis, processos na?o lineares e processos com atraso de transporte.
A abordagem destes estudos e? muito interessante para aplicac?o?es indus-
triais em geral, onde a maioria dos processos dina?micos exibem relac?o?es
na?o lineares entre varia?veis controladas e manipuladas. Dependendo
da aplicac?a?o, o algoritmo MPC e? muitas vezes escolhido entre um tipo
linear ou na?o linear. Entre as fam??lias dos MPC lineares e na?o line-
ares escolhidos neste trabalho se tem o algoritmo DMC-Recursivo, e
o MPC Pra?tico para sistemas na?o lineares PNMPC, que tem apresen-
tando bons resultados tanto no entorno acade?mico quanto no entorno
industrial. O presente trabalho encontra-se dividido em duas partes.
Na primeira parte sa?o apresentadas diversos me?todos de implementac?a?o
para o algoritmo PNMPC, com o objetivo principal de medir o tempo
de execuc?a?o dos algoritmos implementados para um estudo de caso.
Esta ana?lise mostra que o algoritmo PNMPC pode ser adequadamente
aplicado para tratar as na?o-linearidades em diferentes n??veis. O desem-
penho e o custo computacional de seis implementac?o?es diferentes para
este controlador sa?o exibidos. Os ensaios de simulac?a?o da estrate?gia
de controle em malha fechada de cada um dos controladores sa?o com-
parados e analisados pela resposta do sistema, o tempo de execuc?a?o
do algoritmo e pelo ??ndice de desempenho obtido pelos mesmos, sob
perturbac?o?es externas e incertezas parame?tricas. Na segunda parte,i
apresenta-se uma abordagem que e? orientada ao controle de plantas
monovaria?veis e multivaria?veis, com mu?ltiplas incertezas no modelo
incluindo: no ganho, nas constantes de tempo e nos atrasos de trans-
porte, que representam todos os casos poss??veis presentes nos processos
industriais. Neste caso, e? implementado o algoritmo MPC com passo
de estabilidade, no qual a ac?a?o de controle e? calculada em duas etapas,
garantindo a estabilidade da planta devido a? robustez do controlador,
provocando uma melhoria na velocidade da rejeic?a?o das perturbac?o?es
na?o modeladas. Os ensaios de simulac?a?o sa?o comparados com o con-
trolador DMC-Recursivo aplicando a filtragem no erro de predic?a?o.



Palavras-chave: Controle preditivo; Controle na?o-linear; PNMPC;
Custo computacional; MPC com passo de estabilidade; Tanque co?nico;
Reator qu??mico.



ABSTRACT

Techniques of linear and non-linear predictive control are approached
in this document. Much of the existing processes in the oil and gas
industries use predictive controllers. The increasing use of these stra-
tegies can be attributed to the fact that they facilitate the declaration
of relatively complex control problems, such as cases like multivariable
processes control, integrative processes, unstable processes, non -linear
processes and processes with time delays. The approaches of these
techniques are very interesting for industrial applications in general
because the process in the industry has a non-linear dynamic between
the controlled and the manipulated variables. Depending on the appli-
cation, the MPC algorithm is often chosen from a linear or non-linear
type. Among linear and non-linear MPC families chosen in this docu-
ment has the Recursive DMC algorithm and Practical Non-linear MPC
(PNMPC), which has shown good results in the academic and in the
industrial environment. This document is divided into two parts. In
the first part, several PNMPC algorithm implementation methods are
presented, with the main objective of measuring the execution time
of each algorithm implemented in a case study. This review shows
that the PNMPC algorithm can be applied to treat different levels of
nonlinearities. The performance and computational cost of six diffe-
rent implementations for this controller are shown. Simulation tests
in the closed-loop control strategy with each controller are compared
and analyzed by the system response, the execution time of the algo-
rithm and by the performance index obtained by them under external
disturbances and parametric uncertainties. The second part presents
an approach that is oriented to the control of mono variables and mul-
tivariables plants with multiple uncertainties in the model, including:
gains, time constants and time delays, which represent all possible cases
in industrial processes. The implemented MPC algorithm with stability
step, in which the control action is calculated in two steps guaranteeing
the stability of the plant due to the robustness of the controller indu-
cing an improvement in the speed of the rejection of the disturbances
not modeled. Simulation tests are compared with the Recursive DMC
controller applying the filtering in the prediction error.

Keywords: Predictive control. Non-linear control. PNMPC. Com-
putational cost. MPC with stability step. Conical tank. Chemical
reactor.





LISTA DE FIGURAS

Figura 1 Estrutura do MPC.. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 36

Figura 2 Resposta livre e resposta forc?ada. . . . . . . . . . . . . . . . . . . . . . 37

Figura 3 Trajeto?ria da refere?ncia. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 39

Figura 4 Resposta au degrau. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 42

Figura 5 Diagrama de Blocos para o Tratamento do Erro de
Predic?a?o PNMPC. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 56

Figura 6 Interpretac?a?o gra?fica GP NMP C calculada em dois pas-
sos. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 61

Figura 7 Fluxograma do algoritmo PNMPC da primeira versa?o. 62

Figura 8 Interpretac?a?o gra?fica GP NMP C calculada em um u?nico
passo. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 63

Figura 9 Fluxograma do algoritmo PNMPC da segunda versa?o. 64

Figura 10 Faixa de erro de predic?a?o admiss??vel. . . . . . . . . . . . . . . . . . 69

Figura 11 Tanque co?nico. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 70

Figura 12 Simulac?a?o da primeira versa?o do PNMPC. . . . . . . . . . . . . 75

Figura 13 Simulac?a?o da segunda versa?o do PNMPC. . . . . . . . . . . . . 77

Figura 14 Matriz GP NMP C da iterac?a?o 25. . . . . . . . . . . . . . . . . . . . . . 79

Figura 15 Matriz GP NMP C invariante no tempo. . . . . . . . . . . . . . . . 80

Figura 16 Simulac?a?o da terceira versa?o do PNMPC. . . . . . . . . . . . . . 81

Figura 17 Simulac?a?o da quarta versa?o do PNMPC. . . . . . . . . . . . . . 83

Figura 18 Simulac?a?o da quinta versa?o do PNMPC. . . . . . . . . . . . . . . 85

Figura 19 Simulac?a?o da sexta versa?o do PNMPC. . . . . . . . . . . . . . . . 87

Figura 20 Comparac?o?es das verso?es do PNMPC: sa??das, ac?o?es de
controle, perturbac?o?es e sinais dos erros. . . . . . . . . . . . . . . . . . . . . . . . . 89

Figura 21 Preditor de Smith Filtrado. . . . . . . . . . . . . . . . . . . . . . . . . . . . 94

Figura 22 Formas de implementar o vetor EL. . . . . . . . . . . . . . . . . . . 98

Figura 23 Esquema do tanque de aquecimento de a?gua. . . . . . . . . . 104

Figura 24 Simulac?a?o do sistema sem atraso e sem incertezas no
modelo. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 105

Figura 25 Simulac?a?o do sistema com atraso e sem incertezas no
modelo. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 105

Figura 26 Sa??das preditas com o atraso e sem o atraso. . . . . . . . . . . 106

Figura 27 Diferenc?a entre as sa??das predita com o atraso e sem o



atraso. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 106

Figura 28 DMC-Recursivo com filtro no erro de predic?a?o apli-
cando uma incerteza de 6 min (dn =30).. . . . . . . . . . . . . . . . . . . . . . . . . 107

Figura 29 DMC-Recursivo com passo de estabilidade aplicando
uma incerteza de 6 min (dn =30). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 108

Figura 30 Fatores de correc?a?o do DMC-Recursivo com passo de
estabilidade, DMC-Recursivo com filtro no erro de predic?a?o e dif.109

Figura 31 Esquema do Reator de tanque agitado. . . . . . . . . . . . . . . . 111

Figura 32 Resposta ao degrau das func?o?es de transfere?ncia. . . . . . 113

Figura 33 Incertezas inceridas no atraso de transporte e no ganho.114

Figura 34 Resultados de simulac?a?o . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 115

Figura 35 Comparac?a?o dos erros Ef frente a EL . . . . . . . . . . . . . . . . 116

Figura 36 Resultados de simulac?a?o . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 117

Figura 37 Resultados de simulac?a?o . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 117

Figura 38 Resultados de simulac?a?o . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 117

Figura 39 Resultados de simulac?a?o . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 118



LISTA DE TABELAS

Tabela 1 Para?metros do tanque co?nico. . . . . . . . . . . . . . . . . . . . . . . . . 71

Tabela 2 Para?metros de sintonia do controlador PNMPC . . . . . . 73

Tabela 3 Tempo de execuc?a?o do algoritmo para a primeira versa?o
do PNMPC. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 76

Tabela 4 Tempo de execuc?a?o do algoritmo para a segunda versa?o
do PNMPC. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 78

Tabela 5 Tempo de execuc?a?o do algoritmo para a terceira versa?o
do PNMPC . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 82

Tabela 6 Tempo de execuc?a?o do algoritmo para a quarta versa?o
do PNMPC. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 84

Tabela 7 Tempo de execuc?a?o do algoritmo para a quinta versa?o
do PNMPC. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 86

Tabela 8 Tempo de execuc?a?o do algoritmo para a sexta versa?o
do PNMPC. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 88

Tabela 9 Tabela comparativa dos tempos de execuc?a?o para re-
fere?ncias superiores a 1 m. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 90

Tabela 10 Tabela comparativa dos tempos de execuc?a?o para re-
fere?ncias inferiores a 1 m. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 90

Tabela 11 I?ndices de desempenho do controlador das seis verso?es
do PNMPC para refere?ncias superiores a 1 m. . . . . . . . . . . . . . . . . . . . 91

Tabela 12 Para?metros de sintonia do controlador DMC recursivo
com filtragem no erro de predic?a?o . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 110

Tabela 13 Para?metros de sintonia do controlador DMC-Recursivo
com passo de estabilidade. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 111

Tabela 14 I?ndice de desempenho do controlador. . . . . . . . . . . . . . . . . 118





LISTA DE ABREVIATURAS E SIGLAS

MPC Controle Preditivo Baseado em Modelo (do ingle?s, Model
Based Predictive Control ) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25

DMC Matriz Dina?mica de Controle (do ingle?s, Dynamical Ma-
trix Control ) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25

GPC Controle Preditivo Generalizado (do ingle?s, Generalized
Predictive Control ) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25

NMPC Modelo de Controle Preditivo Na?o Linear (do ingle?s, Non-
linear Model Predictive Control ) . . . . . . . . . . . . . . . . . . . . . . . . . . . . 26

PNMPC Modelo de Controle Preditivo Pra?tico para sistemas Na?o
Lineares (do ingle?s, Non-linear Model Predictive Control ) . . . 27

ARIMA Modelo Auto-Regressivo integrado e de Me?dia Mo?vel Inte-
grada (do ingle?s, Auto-Regressive and Integrated Moving Ave-
rage) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 35

SISO Uma Entrada e Uma Sa??da (do ingle?s, Single-Input Single-
Output ) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 45

MIMO Mu?ltiplas Entradas e Mu?ltiplas Sa??das (do ingle?s, Multiple-
Input Multiple-Output ) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 45

QP Programac?a?o Quadra?tica (do ingle?s, Quadratic Program-
ming ) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 57

MSE Erro Quadra?tico Me?dio (do ingle?s, Mean Squared Error ) 90

IAE Integral do Erro Absoluto (do ingle?s, Integral of the Abso-
lute Magnitude of the Error ) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 90





LISTA DE SI?MBOLOS

gi Coeficiente da resposta ao degrau . . . . . . . . . . . . . . . . . . . . . . . 33

?u Vetor da variac?a?o de controle . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33

p Horizonte de predic?a?o . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33

A(z?1) Denominador da func?a?o de tranfere?ncia . . . . . . . . . . . . . . . . . 34

B(z?1) Numerador da func?a?o de tranfere?ncia . . . . . . . . . . . . . . . . . . . . 34

y(t) Sa??da do processo . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 34

u(t) Sinal do controle . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 34

y?(t + k) Sa??da predida . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 34

J Func?a?o custo . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 37

d Tempo morto ou atraso de transporte . . . . . . . . . . . . . . . . . . . 37

mh Horizonte de controle . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 38

? Ponderac?a?o no seguimento de refere?ncia . . . . . . . . . . . . . . . . . 38

? Ponderac?a?o no controle . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 38

w(t + k) Trajeto?ria das refere?ncias futuras . . . . . . . . . . . . . . . . . . . . . . . . 38

? Filtro de refere?ncia . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 38

G Matriz dina?mica do sistema . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 42

f Vetor da resposta livre do sistema . . . . . . . . . . . . . . . . . . . . . . . 42

N Horizonte de modelo . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43

e(t) Erro de predic?a?o ou erro verdadeiro . . . . . . . . . . . . . . . . . . . . . 45

GP NMP CMatriz dina?mica ou matriz Jacobiana . . . . . . . . . . . . . . . . . . . 49

TI Matriz Toeplitz integradora . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 60

Qin Vaza?o de entrada . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 70

Qo Vaza?o de sa??da . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 70

R raio ma?ximo do tanque co?nico . . . . . . . . . . . . . . . . . . . . . . . . . . . 70

r raio interno (varia?vel) do tanque co?nico . . . . . . . . . . . . . . . . . 70

H Altura ma?xima do tanque co?nico . . . . . . . . . . . . . . . . . . . . . . . . 70

h Altura interna (varia?vel) do tanque co?nico . . . . . . . . . . . . . . . 70

Cv Coeficiente da capacidade do fluxo da va?lvula de sa??da . . 70

? Variac?a?o de controle . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 73

Ef Vetor do erro de predic?a?o filtrado . . . . . . . . . . . . . . . . . . . . . . . 95

EL Vetor do erro passo de estabilidade . . . . . . . . . . . . . . . . . . . . . . 97

? Filtro no erro de predic?a?o . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 110





SUMA?RIO

1 INTRODUC?A?O . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25

1.1 OBJETIVOS . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 28

1.1.1 Objetivos gerais . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 28

1.1.2 Objetivos espec??ficos . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 28

1.2 CONTRIBUIC?A?O CIENTI?FICA . . . . . . . . . . . . . . . . . . . . . . 29

1.3 ORGANIZAC?A?O DO TRABALHO . . . . . . . . . . . . . . . . . . . 29

2 CONTROLE PREDITIVO BASEADO EM MO-
DELO MPC . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31

2.1 CONCEITOS BA?SICOS DO MPC . . . . . . . . . . . . . . . . . . . . 32

2.1.1 Resposta livre e forc?ada . . . . . . . . . . . . . . . . . . . . . . . . . . . 36

2.1.2 Func?a?o objetivo . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 37

2.1.3 Trajeto?ria das refere?ncias . . . . . . . . . . . . . . . . . . . . . . . . . 38

2.1.4 Restric?o?es . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 38

2.1.5 Obtenc?a?o da Lei de Controle . . . . . . . . . . . . . . . . . . . . . . 39

2.2 ALGORITMO MPC UTILIZADO NA INDU?STRIA . . . . 40

2.2.1 Controle por Matriz Dina?mica-DMC . . . . . . . . . . . . . . 40

2.2.2 DMC Original . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 40

2.2.3 DMC-Recursivo . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43

2.3 CONCLUSA?O . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 45

3 MPC PRA?TICO PARA SISTEMAS NA?O LINE-
ARES - PNMPC . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 47

3.1 OBTENC?A?O NUME?RICA DAS PREDIC?O?ES . . . . . . . . . . 54

3.2 TRATAMENTO DO ERRO DE PREDIC?A?O E PERTUR-
BAC?A?O . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 55

3.3 FUNC?A?O CUSTO . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 57

3.4 CONCLUSA?O . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 58

4 IMPLEMENTAC?A?O DO PNMPC: ALTERNA-
TIVAS . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 59

4.1 VERSO?ES DA TE?CNICA MPC PRA?TICO PARA SIS-
TEMAS NA?O LINEARES (PNMPC) . . . . . . . . . . . . . . . . . . 59

4.1.1 Primeira versa?o: PNMPC original completo com
calculo de ?uini. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 60

4.1.2 Segunda versa?o: PNMPC sem o ca?lculo de ?uini. 63

4.1.3 Terceira versa?o: PNMPC obtendo so? a primeira
coluna da matriz GP NMP C. . . . . . . . . . . . . . . . . . . . . . . . 65



4.1.4 Quarta versa?o: PNMPC obtendo so? a primeira
coluna da matriz GP NMP C recalculada de tempos
em tempos. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 66

4.1.5 Quinta versa?o: PNMPC calculando a resposta li-
vre de tempos em tempos, utilizando o DMC-
Recursivo. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 67

4.1.6 Sexta versa?o: PNMPC com reavaliac?a?o da matriz
GP NMP C e a resposta livre (DMC-Recursivo), con-
forme o erro de predic?a?o. . . . . . . . . . . . . . . . . . . . . . . . . . 69

4.2 ESTUDO DE CASO: TANQUE CO?NICO . . . . . . . . . . . . . 69
4.3 RESULTADOS . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 72
4.3.1 Primeira versa?o: PNMPC original completo com

?uini . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 74
4.3.2 Segunda versa?o: PNMPC sem o ca?lculo de ?uini . 76
4.3.3 Terceira versa?o: PNMPC obtendo so? a primeira

coluna da matriz GP NMP C. . . . . . . . . . . . . . . . . . . . . . . . 78
4.3.4 Quarta versa?o: PNMPC obtendo so? a primeira

coluna da matriz GP NMP C recalculada de tempos
em tempos. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 82

4.3.5 Quinta versa?o: PNMPC calculando a resposta li-
vre de tempos em tempos, utilizando o DMC-
Recursivo. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 84

4.3.6 Sexta versa?o: PNMPC com reavaliac?a?o da matriz
GP NMP C e a resposta livre (DMC-Recursivo), con-
forme o erro de predic?a?o. . . . . . . . . . . . . . . . . . . . . . . . . . 86

4.4 CONCLUSA?O . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 88
5 CONTROLE PREDITIVO BASEADO EM MO-

DELO COM PASSO DE ESTABILIDADE . . . . . . . 93
5.1 PASSO DE ESTABILIDADE PARA COMPENSAC?A?O

DE ERROS NO MODELO DE PREDIC?A?O . . . . . . . . . . . . 97
5.2 ESTUDO DE CASO . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 110
5.3 CONCLUSO?ES . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 118
6 CONSIDERAC?O?ES FINAIS . . . . . . . . . . . . . . . . . . . . 121

REFERE?NCIAS . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 125
APE?NDICE A -- Ape?ndice . . . . . . . . . . . . . . . . . . . . . . 131



25

Cap??tulo 1

INTRODUC?A?O

O Controle preditivo baseado em modelo (Model Predictive Con-
trol, MPC ou MBPC) e? um conjunto de me?todos de controle que foram
desenvolvidos considerando um modelo capaz de representar a dina?mica
do processo, para predizer e obter uma ac?a?o de controle futura que
minimize uma func?a?o objetivo. No entanto, o MPC calcula a lei de
controle em cada interac?a?o com ajuda de um algoritmo de otimizac?a?o
on-line, sendo o modelo o elemento mais importante dentro dos con-
troladores preditivos. Algumas estrate?gias de controle mais avanc?ados
podem falhar se o modelo na?o for o adequado (CAMACHO; BORDONS,
1995; MACIEJOWSKI, 2002).

O MPC e? uma das poucas estrate?gias que permite o controle dos
sistemas com restric?o?es com um crite?rio o?timo, garantindo a estabili-
dade e converge?ncia para o ponto de equil??brio (MAYNE, 2001).

A maioria dos processos petroqu??micos utilizam controladores
preditivos. De fato, o MPC nasceu dentro das indu?strias petroqu??micas
na de?cada dos 70. Atualmente sua aplicac?a?o vem sendo cada vez mais
difundida em outros setores (BORDONS, 2000; MORARI; LEE, 1999).

As estrate?gias mais utilizadas e conhecidas no meio acade?mico e
no meio industrial sa?o: o DMC (Dynamical Matrix Control ), apresen-
tado em Cutler e Remarker (1980); e o GPC (Generalized Predictive
Control ), apresentado em Clarke e Mohtadi (1987a), aplicados ao con-
trole preditivo de processos lineares (CAMACHO; BORDONS, 2007). No
entanto, como nem todos os processos sa?o lineares, na pra?tica se faz a
linearizac?a?o do modelo do processo em torno de pontos de operac?a?o.
Quando os modelos lineares na?o sa?o suficientemente precisos para repre-
sentar as na?o-linearidades do processo real, va?rias abordagens podem
ser utilizadas (FINDEISEN; ALLGOWER, 2002; MORARI; LEE, 1999).



26

Existem dois comportamentos comumente encontrados nos pro-
cessos industriais: um de eles e? a na?o linearidade nos processos e a
outra sa?o os atrasos de transporte. Os modelos na?o lineares sa?o geral-
mente usados para descrever a dina?mica do processo quando os mode-
los lineares na?o geram bons resultados (CAMACHO; BORDONS, 1995).
Existem diversas te?cnicas empregados para determinar o modelo de
predic?a?o, como ser: modelos fenomenolo?gicos (POMAR; NORMEY; CAM-
PONOGARA, 2005), modelos utilizando redes neurais (TANG; KEYSER,
1994), modelos emp??ricos (NELLES, 2001) ou com lo?gica nebulosa (SKR-
JANC; MATKO, 1994).

O controle preditivo na?o linear baseado em modelo (Non-linear
Model Predictive Control, NMPC) e? uma estrate?gia de controle relati-
vamente nova que vem apresentando bons resultados, pelo que se torna
uma alternativa para contornar processos reais (NORMEY; LIMA; SAN-
TOS, 2015).

A aplicac?a?o de MPCs lineares nos processos que apresentam na?o
linearidades fortes na sua dina?mica podem na?o trazer bons resultados,
para isso, uma opc?a?o e? a aplicac?a?o de controladores na?o lineares. A
principal vantagem da aplicac?a?o do NMPC e? o fato que este considera
a dina?mica na?o linear do processo. Por outro lado, a maior desvanta-
gem esta? na obtenc?a?o de um bom modelo na?o linear a partir de dados
experimentais e no custo computacional que representa o ca?lculo da
ac?a?o de controle. Num trabalho recente, Lucia, Rumschinski e Krener
(2015) propo?e te?cnicas de MPCs na?o lineares baseada em otimizac?a?o
min-max, sugerindo uma forma de diminuir o custo computacional.

Com o decorrer do tempo, diversas alternativas abordam pro-
blemas para contornar e controlar sistemas na?o lineares utilizando a
estrate?gia MPC, entre elas esta?o: os modelos lineares dina?micos e
na?o lineares esta?ticos, modelos locais (aproximac?a?o no ponto de tra-
balho) e modelos combinados linear na?o-linear para predic?o?es (PLUCE-
NIO, 2010). Evidentemente, as vantagens de uma ou outra alternativa
esta?o diretamente relacionadas ao compromisso, desempenho e custo
computacional do controlador (CANNON, 2004).

Entre os modelos lineares dina?micos e na?o lineares esta?ticos sa?o
encontrados os trabalhos (GRUBER; BORDONS, 2007; BLOEMEN; BOOM;
VERBRUGGEN, 2000; SANTOS, 2005), que utilizam se?ries de Volterra ou
modelos de Hammerstein para MPCs na?o lineares.

Em Bravo e Normey (2009), apresenta-se uma abordagem para
modelos locais (aproximac?a?o no ponto de trabalho), o que equivale a
um MPC linear adaptativo.

Finalmente, para os modelos combinados que possuem parte da



27

predic?a?o linear e a outra parte na?o-linear, podem-se citar algumas es-
trate?gias encontradas na literatura, como o algoritmo NEPSAC (Non-
linear Extended Predictive Self Adaptive Control ), desenvolvido por
Keyser (2007), e o algoritmo MPC Pra?tico para Sistemas Na?o Line-
ares PNMPC (Practical Non-linear Predictive Control ), desenvolvido
por Plucenio (2010).

Dentre as te?cnicas de controle preditivo que tratam processos na?o
linear, tem-se a te?cnica PNMPC vem apresentando bom desempenho
e vasta possibilidade de aplicac?o?es ao longo deste tempo (ANDRADE
et al., 2012; CASTILLA et al., 2014; THOME, 2013). No entanto, estas
estrate?gias podem demandar um alto desempenho e sobretudo um ele-
vado custo computacional, mesmo assim fornecendo grandes vantagens
quanto comparados com as estrate?gias dos MPCs lineares.

Por outro lado, como ja? foi mencionado, um outro feno?meno co-
mum dos processos industriais, principalmente nos processos da indu?stria
de petro?leo e ga?s, e? o atraso de transporte. Na pra?tica, tem-se muitos
processos industriais onde o atraso e? causado pelo transporte de mate-
rial, energias ou pelo acu?mulo de informac?a?o no sistema. Nesse caso,
o sistema na?o responde imediatamente. Ele leva algum tempo para
exibir em sua sa??da os efeitos de uma entrada (NORMEY, 2001).

Alguns trabalhos apresentam estrate?gias interessantes para con-
tornar o problema do atraso de transporte e obter melhor desempenho
nos controladores. A maioria dessas estrate?gias e? baseadas nas ideias
do preditor de Smith (SMITH, 1957).

Erros no atraso de transporte no modelo de predic?a?o podem le-
var o sistema de controle a? instabilidade. Em Lima, Normey e Plucenio
(2014), a utilizac?a?o de filtros aplicados ao erro de predic?a?o e? apresen-
tada como soluc?a?o no contexto de MPC. Esse conceito foi desenvolvido
a partir das ideias do Preditor de Smith Filtrado, apresentado em Nor-
mey e Camacho (2007).

Em geral, o filtro na?o afeta a resposta do sistema quando o mo-
delo e? perfeito, mas sim quando existe erro no atraso de transporte,
no ganho e nas constantes de tempo entre a planta real e o modelo de
predic?a?o. Ale?m disso, filtragem no sistema pode resultar numa resposta
mais lenta a?s perturbac?o?es inseridas no sistema.

Em Plucenio et al. (2014), apresenta-se uma nova abordagem
para o tratamento de erros de predic?a?o em plantas esta?veis em malha
aberta, denominada MPC com passo de estabilidade. Nessa proposta,
nenhum filtro e? utilizado. Em vez disso, o algoritmo MPC com passo
de estabilidade propo?e tratar o problema em duas etapas: uma pri-
meira etapa onde se estabiliza o sistema utilizando o segundo me?todo



28

de estabilidade de Lyapunov (MONTEIRO, 2006) onde se deriva um si-
nal que somado a? predic?a?o fornece estabilidade, bom desempenho do
controlador frente a erros de modelo, principalmente erros no atraso
de transporte, fornecendo rapidez na rejeic?a?o a?s perturbac?o?es na?o mo-
deladas inseridas no sistema. Na segunda etapa, calcula-se a ac?a?o de
controle.

1.1 OBJETIVOS

1.1.1 Objetivos gerais

Este trabalho visa propor diversas alternativas de implementac?a?o
da te?cnica PNMPC, considerando diferentes aproximac?o?es para o ca?lculo
das predic?o?es de um dado processo na?o linear, avaliando os tempos
de execuc?a?o e o desempenhos das diferentes implementac?o?es dos con-
troladores PNMPC. Tambe?m e? objetivo desse trabalho implementar
e avaliar o algoritmo MPC com passo de estabilidade implementado
no controlador DMC-Recursivo, considerando incertezas no modelo de
predic?a?o.

1.1.2 Objetivos espec??ficos

Para conseguir alcanc?ar os objetivos gerais, os seguintes objetivos
espec??ficos foram estabelecidos:

• implementar o controlador com a te?cnica PNMPC proposta em
Plucenio (2010) e avaliar o tempo de execuc?a?o deste;

• modificar o PNMPC e implementar diversos algoritmos que per-
mitam tratar processos com diversos graus de na?o linearidade com
a finalidade de diminuir o custo computacional;

• comparar o desempenho dos controladores PNMPC implementa-
dos;

• implementar o MPC com passo de estabilidade a ser comparando
com a te?cnica de filtragem no erro de predic?a?o e avaliar o desem-
penho dos controladores.



29

1.2 CONTRIBUIC?A?O CIENTI?FICA

O presente trabalho apresenta contribuic?o?es aos algoritmos de
controle preditivos.

Os principais resultados desta dissertac?a?o foram condensados nos
artigos: Practical Non-linear Model Predictive Control PNMPC: Algo-
rithm implementations, apresentado no XXI Congresso Brasileiro de
Automa?tica (CBA2016), realizado de 3 a 7 de outubro de 2016, em
Vito?ria, Esp??rito Santo (PICON; PLUCENIO, 2016b); e “DMC de forma
recursiva aplicando o passo de estabilidade” apresentado no 12th IE-
EE/IAS International Conference on Industry Applications (INDUS-
CON 2016) realizado de 20 a 23 de novembro de 2016, em Curitiba,
Parana? (PICON; PLUCENIO, 2016a).

1.3 ORGANIZAC?A?O DO TRABALHO

Os pro?ximos cap??tulos desta dissertac?a?o esta?o organizados da
seguinte maneira:

• o Cap??tulo 2 traz ao leitor a fundamentac?a?o teo?rica e os conceitos
ba?sicos necessa?rios para o desenvolvimento deste trabalho. Os
conceitos principais relacionados a?s estrate?gias de controle predi-
tivo baseado em modelo MPC sa?o apresentados;

• o Cap??tulo 3 apresenta a descric?a?o da fundamentac?a?o teo?rica da
estrate?gia PNMPC utilizada para o desenvolvimento deste traba-
lho;

• no Cap??tulo 4 sa?o apresentadas diferentes maneiras de implemen-
tar o algoritmo PNMPC. Mostra-se que o algoritmo PNMPC
pode ser escrito para lidar com na?o-linearidades em diferentes
n??veis. Sa?o implementados 6 algoritmos diferentes das verso?es do
controlador PNMPC, que utilizam simplificac?o?es da te?cnica origi-
nal completa de forma a reduzir o tempo de processamento. Nesse
cap??tulo, tambe?m e? descrita a implementac?a?o e a fundamentac?a?o
matema?tica com os algoritmos das alternativas das variac?o?es da
te?cnica PNMPC para cada versa?o. Depois e? apresentado o es-
tudo de caso, aplicando as verso?es do PNMPC e os resultados de
simulac?a?o, comparac?o?es dos tempos de execuc?a?o e desempenho
dos controladores;

• no Cap??tulo 5 e? apresentado o MPC com passo de estabilidade,



30

descrevendo a implementac?a?o e a fundamentac?a?o matema?tica.
Depois, apresentam-se os resultados de simulac?a?o e as comparac?o?es
dos diferentes controladores aplicados ao estudo de caso, avali-
ando o desempenho dos controladores;

• no Cap??tulo 6, sa?o realizadas as considerac?o?es finais desta dis-
sertac?a?o e possibilidades de trabalhos futuros sa?o indicadas.



31

Cap??tulo 2

CONTROLE PREDITIVO BASEADO EM
MODELO MPC

A te?cnica de Controle Preditivo Baseado em Modelo e? uma das
te?cnicas de controle moderno mais avanc?ada. Em sua forma mais geral,
aceita qualquer tipo de modelo, func?o?es objetivo ou restric?o?es (BOR-
DONS, 2000).

Atualmente, e? utilizada em processos industriais que requerem
controlar processos multivaria?veis ou monovaria?veis relativamente com-
plexos, processos lineares ou na?o lineares, processos que tenham carac-
ter??sticas de atraso de transporte ou ainda processos insta?veis (CAMA-
CHO; BORDONS, 2007).

Ale?m da sua ampla gama de aplicac?a?o, um outro motivo do e?xito
desta te?cnica e? a maneira geral na qual os problemas de controle sa?o
formulados no dom??nio do tempo, permitindo que os algoritmos sejam
muito mais simples de compreender.

A maior aceitac?a?o dos MPCs, ocorre nas indu?strias de petro?leo,
ga?s, unidades de refino e petroqu??micas. Atualmente, tambe?m existe
uma tende?ncia de incrementar a aplicac?a?o de controle MPC nos proces-
sos de tratamento prima?rio de produc?a?o em plataformas de produc?a?o de
petro?leo offshore (PLUCENIO et al., 2007a). O controle preditivo consti-
tui um amplo campo de me?todos de controle que foram desenvolvidos
com certas caracter??sticas comuns e que integra diversos a?mbitos como:
o controle o?timo, controle de processos com tempos mortos, controle
multivaria?vel, controle estoca?stico e o controle com restric?o?es (CAMA-
CHO; BORDONS, 2007). As principais caracter??sticas em toda a fam??lia
dos controladores preditivos sa?o: (BORDONS, 2000):

• o uso expl??cito de um modelo para predizer a sa??da do processo
em instantes de tempo futuros (horizonte);



32

• ca?lculos dos sinais de controle, minimizando uma determinada
func?a?o objetivo;

• estrate?gia de horizonte deslizante, de forma que, em cada instante
de tempo, o horizonte vai se deslocando para o futuro ate? elimi-
nar o resto dos valores, repetindo o ca?lculo em cada instante de
amostragem.

Este tipo de controle permite manipular as varia?veis para estabe-
lecer uma trajeto?ria desejada no futuro, como tambe?m as varia?veis que
esta?o sendo controladas. Uma vez manipuladas as varia?veis, procede-
se com o ca?lculo, otimizando-as com a func?a?o objetivo e seguindo os
me?todos de horizonte mo?vel.

Finalmente, pode-se ainda destacar como vantagem da estrate?gia
MPC a possibilidade de formular controladores para sistemas comple-
xos e com restric?o?es, tendo em considerac?a?o o custo computacional e a
sintonia do controlador (LAWRYNCZUK, 2014).

2.1 CONCEITOS BA?SICOS DO MPC

As diferenc?as entre os diversos algoritmos existentes devem-se
basicamente a? forma de escolher os modelos para o processo e as per-
turbac?o?es, ao tipo de func?a?o objetivo, ao procedimento para manipular
as restric?o?es e ao ca?lculo do sinal de controle (PLUCENIO et al., 2007a).

O modelo de predic?a?o e? o elemento mais importante dentro do
projeto do controlador. Ele deve ser capaz de representar adequada-
mente a dina?mica do processo para permitir o ca?lculo das predic?o?es da
sa??da, deve ser intuitivo e ao mesmo tempo deve permitir uma ana?lise
teo?rica do sistema.

Em geral, o modelo utilizado para o projeto do controlador MPC
e? separado em duas partes: modelo do processo propriamente dito e mo-
delo das perturbac?o?es, ambos necessa?rios para o ca?lculo das predic?o?es
(PLUCENIO et al., 2007a).

Os modelos dos processos mais usados sa?o:

• a resposta do sinal de sa??da ao impulso ou ao degrau dos mode-
los dos processos em malha aberta. Ela esta? relacionada com a
entrada pelas seguintes equac?o?es:



33

– para a resposta ao impulso:

y(t) =

??

i=1

giu(t? i) (2.1)

– para a resposta ao degrau:1

y(t + k |t) =
??

i=1

gi?u(t + k ? i |t) (2.2)

Sendo que os valores de gi sa?o obtidos ao submeter o processo a
um impulso no caso da resposta ao impulso ou um degrau. No
caso de ser uma resposta ao degrau, na qual a ac?a?o de controle e?
dada por: ?u (t) = u(t) ? u(t? 1). A soma e? truncada ate? os
primeiros p elementos, sendo p o horizonte de predic?a?o, no qual
so? podem ser representados processos esta?veis e sem integrador,
conforme as equac?o?es (2.1) e (2.2):

– para a resposta ao impulso:

y(t) =

p?

i=1

gi?u(t? i) (2.3)

– para a resposta ao degrau:

y(t + k |t) =
p?

i=1

gi?u(t + k ? i |t) (2.4)

As vantagens de se utilizar a resposta impulsiva ou ao degrau e?
que:

– sa?o intuitivos e podem ser usados em processos multivaria?veis
sem acrescentar complexidade;

– quando os modelos sa?o identificados na?o e? preciso ter um
conhecimento pre?vio do processo;

– descrevem de maneira simples efeitos complexos da dina?mica
do processo, como atrasos e comportamentos de fase na?o
m??nima.

1A notac?a?o indica o valor da varia?vel no isntante (t + k) calculado no instante t
.



34

Por outro lado apresentam alguns inconvenientes:

– na?o podem ser usados com plantas insta?veis;

– necessitam utilizar um grande nu?mero de para?metros para
descrever o modelo, sobretudo se o processo tiver um atraso
grande.

• modelos em func?a?o de transfere?ncia.
Utilizam o conceito de func?a?o de transfere?ncia G = B/A, repre-
sentada da seguinte forma no dom??nio do tempo:

A(z?1)y(t) = B(z?1)u(t)

sendo:

A(z?1) denominador da func?a?o de tranfere?ncia;
B(z?1) numerador da func?a?o de tranfere?ncia;
y(t) sa??da do processo;
u(t) sinal do controle.

em que a sa??da predita e?:

y?(t + k |t) = B(z
?1)

A(z?1) u(t + k |t)

A principal vantagem deste tipo de modelos e? que pode ser usado
para plantas insta?veis e que precisa, em geral, de poucos para?metros
para descrever o comportamento do sistema (o atraso, por exem-
plo, pode ser descrito apenas com um para?metro). Pore?m, o prin-
cipal inconveniente e? a necessidade de conhecer a priori a ordem
dos polino?mios do numerador e denominador quando o modelo
deve ser identificado a partir de dados experimentais (PLUCENIO
et al., 2007a).

• modelos em espac?os de estado, tem a seguinte representac?a?o:

x(t) = Ax(t? 1) + Bu(t? 1)
y(t) = Cx(t)

onde x e? o estado e A,B e C sa?o as matrizes de entrada e sa??da
do sistema respectivamente. A sa??da predita e? calculada pela



35

seguinte equac?a?o:

y? (t + k |t) = Cx? (t + k |t) = C
[
Akx (t) +

k?

i=1

Ai?1Bu (t + k ? i |t)
]

(2.5)
A vantagem deste tipo de modelo e? que pode ser usado direta-
mente para processos multivaria?veis lineares. Como inconvenien-
tes, cabe mencionar que em geral os estados na?o tem significado
f??sico e que na maioria das vezes e? necessa?rio o uso de observa-
dores, aumentando assim a complexidade de ca?lculo do controle
(PLUCENIO et al., 2007a).

A escolha de um modelo para as perturbac?o?es e? ta?o importante quanto
a do processo.

O modelo mais utilizado para a descric?a?o de perturbac?o?es de-
termin??sticas e estoca?sticas e? o Modelo Auto-Regressivo integrado e de
Me?dia Mo?vel Integrada (Auto-Regressive and Integrated Moving Ave-
rage, ARIMA) (CAMACHO; BORDONS, 2007). Neste tipo de modelo, a
diferenc?a entre a sa??da medida e a calculada pelo modelo e? dada pela
equac?a?o:

n(t) =
C(z?1)e(t)
D(z?1)

(2.6)

no qual o polino?mio D(z?1) inclui explicitamente ? = 1 ?z?1, e e (t)
e? um ru??do de me?dia zero e, geralmente, o polino?mio C(z?1) e? consi-
derado igual a um. Assim, n(t) representa a diferenc?a entre a sa??da do
modelo e o processo.

Este modelo permite representar mudanc?as aleato?rias, “off-sets ”
e outros feno?menos normalmente encontrados nos meios industriais.
Esse modelo e? usado diretamente no GPC proposto por (CLARKE;
MOHTADI, 1987a), e tem recebido bastante atenc?a?o no meio acade?mico
e em diversas aplicac?o?es industriais (CAMACHO; BORDONS, 1995) e
(CLARKE; MOHTADI, 1987b).

Na Figura 1 mostra-se a estrutura geral de um MPC, onde pode
ser observado o funcionamento do algoritmo. Para predizer as sa??das
futuras do processo, e? usado o modelo da planta, baseando-se nos sinais
de controle futuros. Esses sinais sa?o calculados pelo otimizador tendo
em considerac?a?o a func?a?o custo e as restric?o?es. Pelo que o modelo
cumpre um papel importante no controlador MPC, ele deve conseguir
representar a dina?mica do processo. O otimizador e? outra parte funda-
mental da estrutura mostrada na Figura 1, ja? que proporciona as ac?o?es
de controle do sistema. Se a func?a?o custo e? quadra?tica, pode-se obter



36

o m??nimo com uma func?a?o expl??cita entre as entradas, sa??das passa-
das e a trajeto?ria de refere?ncia. Quando existem restric?o?es a soluc?a?o e?
calculada por me?todos nume?ricos.

Figura 1 – Estrutura do MPC.

Trajetória da 
referênciaSaídas

 preditas

Saída atualControle atual

Erros futuros

RestriçõesFunção custo

Processo

Modelo

Optimizador

Fonte: (CAMACHO; BORDONS, 2007).

2.1.1 Resposta livre e forc?ada

Os conceitos de resposta livre e resposta forc?ada, sa?o utilizados
nos controladores MPC. A ide?ia e? representar as ac?o?es de controle como
uma soma de dois sinais, conforme equac?a?o (BORDONS, 2000):

u(t) = uf (t) + uc(t) (2.7)

onde uf (t) sa?o as entradas passadas (anteriores ao instante t) e uc(t)
e? o sinal dos controles futuros. Para o ca?lculo da ac?a?o de controle,
o sinal uf (t) e? mantido constante e igual ao u?ltimo valor da varia?vel
manipulada; o sinal uc(t) e? considerado 0 no passado. A sa??da predita
e? separada em duas partes, como se mostra na Figura 2.

A resposta livre yf (t) corresponde a? predic?a?o da sa??da quando
a varia?vel manipulada e? uf (t). A resposta forc?ada yc(t) corresponde a?



37

predic?a?o da sa??da quando o sinal de controle e? uc(t).

Figura 2 – Resposta livre e resposta forc?ada.

u
Processo

y

t t

u u y y

t t t t

f
cf c

Fonte: (CAMACHO; BORDONS, 2007).

A resposta livre e? a evoluc?a?o do processo devido a seu estado
atual, incluindo o efeito das ac?o?es passadas. A resposta forc?ada e? a
resposta do processo a?s ac?o?es de controle futuras.

2.1.2 Func?a?o objetivo

Cada algoritmo MPC propo?e distintas func?o?es custo para a ob-
tenc?a?o da lei de controle. Em geral, se deseja que as sa??das futuras,
em um horizonte definido, sigam um determinado sinal de refere?ncia,
ao mesmo tempo em que se possa penalizar o esforc?o de controle re-
querido. A expressa?o geral da func?a?o objetivo e? mostrada na seguinte
equac?a?o (CAMACHO; BORDONS, 2007):

J(p1,p2,mh) =

p2?

i=p1

?(i)[y(t + i
??t) ?w(t + i)]2 +

mh?

i=1

?(i)[?u(t + i? 1)]2

(2.8)
Em alguns me?todos, o segundo somato?rio, que considera o es-

forc?o de controle, na?o e? considerado, mas em outros aparece direta-
mente os valores do sinal de controle. Os para?metros p1 e p2 sa?o as
varia?veis m??nimo e ma?ximo da predic?a?o, marcam os limites dos instan-
tes que se deseja que a sa??da siga a refere?ncia. Se o processo apresenta
tempo morto d, na?o tem sentido que p1 seja menor que d, ja? que a sa??da
so? evoluira? no instante t + d e se o processo e? de fase na?o m??nima, p1
permite eliminar da func?a?o objetivo os primeiros instantes da resposta



38

inversa. Por outro lado, mh e? o horizonte de controle.
Os coeficientes ?(i) e ?(i) sa?o seque?ncias que ponderam o com-

portamento futuro. Geralmente sa?o considerados valores constantes ou
seque?ncias exponenciais, como se mostra na seguinte equac?a?o:

?(i) = ?p2?i (2.9)

Se ? esta? entre 0 e 1, significa que esta? se penalizando mais os
erros que esta?o afastados do instante t que os mais pro?ximos, gerando
um controle mais suave requerendo um menor esforc?o. Por outro lado,
se ? &gt; 1 esta?o se penalizando mais os primeiros erros, provocando um
controle mais agressivo.

2.1.3 Trajeto?ria das refere?ncias

Uma vantagem do controle preditivo e? que as refere?ncias sa?o
conhecidas a priori. Assim, o sistema pode comec?ar a agir antes que a
mudanc?a seja efetivamente realizada, evitando os efeitos do retardo na
resposta do processo.

A maioria dos me?todos utiliza no crite?rio de minimizac?a?o uma
trajeto?ria de refere?ncia w(t + k), que geralmente e? uma aproximac?a?o
suave de um sistema de primeira ordem do valor atual da sa??da y(t) a?
refere?ncia, mostrada na equac?a?o (2.10).

w(t) = y(t)
w(t + k) = ?w(t + k ? 1) + (1 ??)
k = 1 ....... p

(2.10)

? e? um para?metro entre 0 a 1 (em quanto mais perto de um mais suave
e? a aproximac?a?o), que constitui um valor ajusta?vel que influenciara?
na resposta dina?mica do sistema. Na Figura 3, mostra-se a forma da
trajeto?ria quando a refere?ncia r(t + k) e? constante.

Na Figura 3, mostra-se que W1 com um valor pequeno de ? se
tem um seguimento de refere?ncia ra?pido, mas para W2 com um valor
maior para ? a resposta fica mais suave.

2.1.4 Restric?o?es

E? importante considerar restric?o?es no sistema, ja? que todos os
processos esta?o sujeitos a limitac?o?es. Pode-se citar como exemplo as



39

Figura 3 – Trajeto?ria da refere?ncia.

W1 (t+k)

r(t+k)

Y(t)

W2(t+k)

t

Fonte: (CAMACHO; BORDONS, 2007).

restric?o?es meca?nicas de atuadores e va?lvulas, que esta?o limitadas pela
capacidade meca?nica de abertura e fechamento, assim como pela ve-
locidade de resposta. As restric?o?es tambe?m podem ser impostas pelos
sensores do processo. Sendo assim, faz-se necessa?ria a introduc?a?o de
restric?o?es na func?a?o custo para representar as limitac?o?es do sistema.

Geralmente, sa?o considerados os limites na amplitude do sinal de
controle, na variac?a?o do sinal de controle e limites nos sinais de sa??das,
como observado nas equac?o?es:

umin ? u (t) ? umax ?t
?umin ? u (t) ?u (t? 1) ? ?umax ?t
ymin ? y(t) ? ymax ?t

(2.11)

2.1.5 Obtenc?a?o da Lei de Controle

O u?ltimo passo que compo?e a obtenc?a?o dos valores de controle
nas estrate?gias de Controle Preditivo e? a determinac?a?o do valor de
?u (t + k | t) com i = 0...mh ? 1. Para isso, seguem-se os seguintes
passos:

1. ca?lculo do valor de y? (t + k | t) como func?a?o dos controles futuros;

2. substituic?a?o dos valores y? e w na func?a?o J;

3. minimizac?a?o da func?a?o J, considerando as ponderac?o?es e as res-
tric?o?es, se existirem.

Desta forma, e? poss??vel obter uma seque?ncia de ac?o?es de con-
trole futuras, mas a aplicac?a?o do valor de controle segue o conceito do



40

horizonte deslizante. Assim, apesar de se obter uma seque?ncia futura
de controle, apenas a primeira ac?a?o de controle e? aplicada (BORDONS,
2000).

2.2 ALGORITMO MPC UTILIZADO NA INDU?STRIA

Se apresenta a continuac?a?o um dos principais algoritmos de Con-
trole Preditivo, o me?todo considerado o mais representativo no en-
torno indu?strial, o DMC. A seguir apresentam-se suas principais carac-
ter??sticas e formulac?o?es matema?ticas.

2.2.1 Controle por Matriz Dina?mica-DMC

O algoritmo de controle preditivo denominado Controle por Ma-
triz Dina?mica (DMC) e? um dos algoritmos mais difundidos na indu?stria.
O DMC foi desenvolvido no final dos anos setenta por (CUTLER; RE-
MARKER, 1980) na Shell Oil, e foi muito bem aceito no meio industrial,
principalmente na indu?stria petroqu??mica.

Primeiro e? apresentado o algoritmo original do DMC proposto
em (RICHALET; RAULT; TESTUD, 1978), e depois apresenta-se o DMC-
Recursivo, proposto em (CUTLER; REMARKER, 1980), que modifica
como a resposta livre e? calculada de forma a obter um algoritmo mais
simples de ser implementado e com a vantagem de na?o afetar o contro-
lador original do DMC.

2.2.2 DMC Original

O modelo utilizado pelo DMC, e? um modelo baseado na resposta
ao degrau do sistema, enquanto as perturbac?o?es sa?o consideradas cons-
tantes ao longo do horizonte p.

A forma de obter as predic?o?es e? mostrado a seguir. O modelo da
resposta ao degrau pode ser expresso pela equac?a?o (2.12).

y (t) =

??

i=1

gi?u (t? i) (2.12)

As predic?o?es ao longo do horizonte p, sa?o calculadas adicionando



41

a predic?a?o de pertubac?a?o n? (t + k | t), como mostrado:

y? (t + k |t) =
??
i=1

gi?u (t + k ? i) + n? (t + k |t)

y? (t + k |t) =
k?

i=1

gi?u (t + k ? i) +
??

i=k+1

gi?u (t + k ? i) + n? (t + k |t)
(2.13)

Os termos da equac?a?o (2.13) dependentes do controle foram se-
parados em duas somas: uma com os valores passados e outra com
os valores futuros. A pertubac?a?o e? considerada constante. Da forma:
n? (t + k |t) = n? (t |t) = ym (t) ? y? (t |t), assim pode-se reescrever:

y? (t + k |t) =
??
i=1

gi?u (t + k ? i) + ym (t) ?
??
i=1

gi?u (t? i)

y? (t + k |t) =
k?

i=1

gi?u (t + k ? i) + f (t + k)
(2.14)

onde f (t + k), e? a resposta livre do sistema, dada pela equac?a?o (2.15).

f (t + k) = ym (t) +

??

i=1

(gk+1 ?gi)?u (t? 1) (2.15)

Se o sistema e? esta?vel, os coeficientes gi da resposta ao degrau
tendem a um valor constante apo?s p amostras, como e? mostrado na
Figura 4, logo gk+1 ? gi ? 0, para i &gt; p, com isso a resposta livre da
equac?a?o (2.15) pode ser calculada conforme a equac?a?o (2.16).

f (t + k) = ym (t) +

p?

i=1

(gk+1 ?gi)?u (t? 1) (2.16)

Assim, pode-se calcular as predic?o?es ao longo do horizonte de
predic?a?o (k = 1, ...,p), considerando mh ac?o?es de controle:

y? (t + 1 |t) = g1?u (t) + f (t + 1)
y? (t + 1 |t) = g2?u (t) + g1?u (t + 1) + f (t + 2)
...

y? (t + p |t) =
p?

i=p?mh+1
gi?u (t + p? i) + f (t + p)

(2.17)



42

Figura 4 – Resposta au degrau.

? ?y t

t 1t ? 2t ? t p??

1g

2g

ig

pg

Fonte: (CAMACHO; BORDONS, 2007).

As predic?o?es do sistema de forma matricial podem ser escritas
como:

y? = f + G?u (2.18)

onde, G e? a matriz dina?mica do sistema, ?u e? o vetor das ac?o?es de
controle futuras, e f e? o vetor da resposta livre do sistema:

G =

?
??????????

g1 0 · · · 0
g2 g1 · · · 0
.
.
.

.

.

.
. . .

.

.

.
gmh gmh?1 · · · g1

.

.

.
.
.
.

. . .
.
.
.

gp gp?1 · · · gp?mh+1

?
??????????
, ?u =

?
????

?u (k)
?u (k + 1)

.

.

.
?u (k + mh)

?
???? , f =

?
???????????

f (t + 1)
f (t + 2)

.

.

.

.

.

.

.

.

.
f (t + p)

?
???????????

(2.19)

Como e? observado na equac?a?o (2.19), para o ca?lculo de y? seria
necessa?rio armazenar os valores passados do controle. Uma forma de
simplificar este ca?lculo consiste no uso do DMC-Recursivo, descrito na
sec?a?o seguinte.



43

2.2.3 DMC-Recursivo

Existe uma outra forma para implementar o algoritmo DMC,
chamada de DMC-Recursivo, apresentada por (CUTLER; REMARKER,
1980). As predic?o?es de malha aberta em t + k, dadas as informac?o?es
em t e t? 1, sa?o respectivamente dados por:

y0 (t + k |t) =
??

i=k+1

gi?u (t + k ? i) ; (2.20)

y0 (t + k |t? 1 ) =
??

i=k+2

gi?u (t + k ? i) , (2.21)

na qual a diferenc?a entre a predic?a?o de malha aberta em t + k dado
t, e em t + k dado t ? 1, e? apenas a nova ac?a?o de controle que na?o e?
conhecida em ?u(t?1). Subtraindo as equac?o?es (2.20) e (2.21) tem-se:

y0 (t + k |t) ?y0 (t + k |t? 1 ) =
gk+1?u (t? 1) +

??
j=k+2

gj?u (t + k ? j) +

?
??

j=k+2

gj?u (t + k ? j)
(2.22)

Assim, obte?m-se:

y0 (t + k |t) = gk+1?u (t? 1) + y0 (t + k |t? 1 ) (2.23)

No ca?lculo do DMC-Recursivo, a resposta livre e? calculada da
seguinte forma:

Ylivre = [y0 (t |t? 1 ) , ...,y0 (t + N ? 1 |t ? 1)]T (2.24)

onde N e? chamado de horizonte de modelo, mantendo em memo?ria
um vetor com N elementos2. Seus elementos sa?o as respostas livres
dadas as ac?o?es de controle conhecidas ate? o instante t? 1. Ao iniciar
o controlador DMC no instante t0, dado que o sistema encontra-se
em regime permanente, considera-se que as predic?o?es de malha aberta
sejam constantes e iguais ao valor de y(t0).

Ao iniciar a execuc?a?o do algoritmo DMC no instante t, e? preciso
atualizar o vetor da resposta livre, pois o incremento da ac?a?o de con-
trole ?u (t? 1) agora e? conhecido. O vetor Ylivre da equac?a?o (4.7) e?

2O valor de N deve ser significativamente maior que p.



44

atualizado.

Ylivre = Ylivre +

?
????

g1
g2
...
gN

?
???? ?u (t? 1) (2.25)

Apo?s obter o novo sinal de controle u(t), e? preciso deslocar os
valores dentro do vetor Ylivre. Isto porque no instante posterior t +
1, sera?o necessa?rias respostas livres de t + 1 ate? t + N baseadas nos
dados ate? t. Enta?o, o primeiro elemento e? descartado, pois e? a predic?a?o
relativa ao instante t, que ja? passou. O problema e? que, ao se fazer este
deslocamento, o u?ltimo elemento, no caso a predic?a?o em y(t + N|t),
e? desconhecida. Pore?m, se o sistema for esta?vel, pode-se considerar
y0(t + N|t) ?= y0(t + N ? 1|t). Assim, o novo vetor Ylivre sera? dado
pela equac?a?o (4.8):

Ylivre =

?
??????

y0 (t + 1 |t)
y0 (t + 2 |t)

...
y0 (t + N ? 1 |t)
y0 (t + N ? 1 |t)

?
??????

(2.26)

A condic?a?o y0(t + N|t) ?= y0(t + N ? 1|t) e? mostrada como:

y0 (t + N ? 1 |t) =
??

i=N

gi?u (t + N ? 1 ? i)

y0 (t + N |t) =
??

i=N+1

gi?u (t + N ? i) =
??

i=N

gi+1?u (t + N ? 1 ? i)

y0 (t + N |t)?y0 (t + N ? 1 |t) =
??

i=N

(gi+1 ?gi) ?u (t + N ? 1 ? i)
Como gi+1 ? gj ?= 0,?i &gt; N, tem-se que y0(t + N|t) ?= y0(t +

N ? 1|t), como se queria demonstrar.
Assim, o ca?lculo da resposta livre considerada no DMC-Recursivo

e? realizado atrave?s da equac?a?o:

f =

?
??
y0 (t + 1 |t)

...
y0 (t + p |t)

?
?? + 1p×1e (2.27)

No algoritmo DMC, o erro entre a sa??da medida e a sa??da predita
em malha aberta no instante k e? usado para corrigir as predic?o?es de



45

cada estado de todos os elementos dentro do horizonte de predic?a?o p.
Nesse caso, a equac?a?o do erro do modelo e?:

e(t) = ym(t) ?y0 (t |t) (2.28)

Como e? mostrado na equac?a?o (2.18), a representac?a?o das predic?o?es,
considerando o ca?lculo da resposta livre com o DMC-Recursivo, e? ob-
tida com a equac?a?o (4.11):

Y? = f + G?u (2.29)

onde:

• Y? sa??da predita p× 1 ;

• f vetor da resposta livre de dimensa?o p× 1 ;

• G matriz Jacobiana de Y? de dimensa?o p×mh;

• ?u vetor de dimensa?o mh × 1 que conte?m os
incrementos na ac?a?o de controle .

Onde p e? o horizonte de predic?a?o e mh e? o horizonte de controle.
Utilizando esta forma de implementac?a?o, os ca?lculos necessa?rios

para obter a sa??da predita tornam-se mais simples, na?o sendo necessa?rio
o armazenamento dos incrementos de controle passados. Com este
procedimento, so? e? alterado o modo de calcular a resposta livre, o
restante do algoritmo de controle na?o e? modificado.

2.3 CONCLUSA?O

Neste cap??tulo fez-se uma revisa?o da teoria de Controle Predi-
tivo, mostrando a importa?ncia de utilizar um modelo de predic?a?o para
as sa??das futuras e a utilizac?a?o de um procedimento espec??fico de oti-
mizac?a?o para a obtenc?a?o dos valores de controle futuro.

O algoritmo mais utilizado na aplicac?a?o industrial foram descri-
tas nesta sec?a?o. O DMC original e o DMC-Recursivo com as respectivas
formulac?o?es matema?ticas.

Os algoritmos DMC para o caso SISO (Single-Input Single-Output)
foram apresentados na sec?a?o 2.2, e podem ser estendidos para o caso
MIMO (Multiple-Input Multiple-Output), para um sistema com m en-
tradas e n sa??das.



46

Nos cap??tulos posteriores, sera? aplicado o DMC-Recursivo em
diversos estudos de caso. Neste cap??tulo descreveu-se a notac?a?o ma-
tema?tica da te?cnica, para sua posterior implementac?a?o, tornando-se
assim a base deste trabalho.



47

Cap??tulo 3

MPC PRA?TICO PARA SISTEMAS NA?O
LINEARES - PNMPC

Este cap??tulo esta? centrado em aspectos de Controle Preditivo
Na?o Linear, especificamente na te?cnica PNMPC.

Atualmente, no contexto de Controle Preditivo para processos
lineares, as estrate?gias mais utilizadas na indu?stria, em geral, sa?o o
DMC e GPC (CAMACHO; BORDONS, 2007).

Para conseguir implementar o Controle Preditivo, e? muito im-
portante ter um modelo do processo. Como a maioria dos processos sa?o
efetivamente na?o lineares, na maioria das vezes recorre-se a?s te?cnicas
de linearizac?a?o para a obtenc?a?o do modelo. Para muitos processos este
procedimento e? aceita?vel, seja pelo pequeno n??vel de na?o linearidade do
processo ou pelo fato da planta operar sempre em uma regia?o muito
pro?xima do ponto de operac?a?o (ALLGOWER; FINDEISEN, 2004). Pore?m,
quando os processos te?m a dina?mica na?o linear ou quando a faixa de
operac?a?o e? varia?vel, enta?o necessariamente devera? ser utilizado o mo-
delo na?o linear para o projeto de controle, de forma que permita manter
o desempenho desejado para o sistema em malha fechada (BORDONS,
2000).

Do ponto de vista conceitual, o MPC na?o linear (NMPC) na?o
apresenta dificuldades. Considera a mesma func?a?o objetivo J que no
caso linear e na?o linear, para o ca?lculo das predic?o?es. O objetivo con-
siste novamente em encontrar uma ac?a?o de controle que minimize a
func?a?o objetivo num algoritmo de horizonte deslizante. Pore?m, do
ponto de vista pra?tico, sa?o va?rias as dificuldades encontradas neste
tipo de projeto (se comparado ao caso linear):

1. determinac?a?o do modelo do processo quando este deve ser deter-
minado atrave?s de uma te?cnica de identificac?a?o;



48

2. obtenc?a?o do sinal de controle requer, em geral, a soluc?a?o de um
problema de otimizac?a?o na?o convexo;

3. ana?lise de estabilidade e robustez da soluc?a?o.

Por estes motivos, o NMPC e? um campo aberto para pesquisas
tanto na a?rea de determinac?a?o de modelos como nos procedimentos e
algoritmos de otimizac?a?o para o ca?lculo de controle (CAMACHO; BOR-
DONS, 2007).

De acordo com va?rios autores (PRADA, 2004) e (QIN; BADGWELL,
2003), as tende?ncias no controle avanc?ado de processos, e o desenvol-
vimento tecnolo?gico da pro?xima gerac?a?o de MPCs esta?o associados a
controladores na?o lineares baseados em modelos (NMPC).

Existe uma grande quantidade de te?cnicas MPC que, direta ou
indiretamente, tratam sistemas na?o-lineares. Estas te?cnicas se classifi-
cam em tre?s grupos:

1. te?cnicas que utilizam diretamente um modelo na?o linear gene?rico
e um algoritmo de otimizac?a?o na?o linear de propo?sito geral;

2. te?cnicas que utilizam modelos na?o lineares particulares e me?todos
de otimizac?a?o espec??ficos para o modelo escolhido;

3. te?cnicas que utilizam um ou va?rios modelos lineares para repre-
sentar o processo e algoritmos de otimizac?a?o lineares.

Evidentemente, as vantagens de uma ou outra alternativa esta?o
diretamente relacionadas ao compromisso desempenho-custo computa-
cional (CAMACHO; BORDONS, 1995).

Geralmente, muitos processos na?o lineares sa?o modelados atrave?s
da utilizac?a?o de algoritmos de identificac?a?o, com excec?a?o de redes neu-
rais, que fornecem as sa??das nominais dos processos dadas as entradas
e os estados atuais. Com a premissa da existe?ncia de tais abordagens
de modelagem, mais recentemente, em (PLUCENIO, 2010), foi desenvol-
vida uma estrate?gia denominada PNMPC para o controle de muitos
desses processos na?o lineares.

Dos tre?s grupos de te?cnicas de controle preditivo na?o linear ci-
tadas acima, o terceiro se encaixa com a te?cnica PNMPC, que vem
apresentando bom desempenho e a vasta possibilidade de aplicac?o?es em
processo com dina?mica na?o linear, o que se torna interessante quando
e? avaliada a simplicidade da sua implementac?a?o.

A estrate?gia PNMPC tem como principal func?a?o a aproximac?a?o
linear do modelo de predic?a?o na?o linear a cada instante de amostragem



49

e a consecutiva otimizac?a?o quadra?tica, similar a? formulac?a?o tradicional
dos algoritmos DMC e GPC. No entanto, o diferencial dessa te?cnica
e? a maneira pela qual ela define a linearizac?a?o do modelo de predic?a?o
na?o linear a cada instante de amostragem. Nela tambe?m e? utilizada
a formulac?a?o tradicional de ca?lculo da predic?a?o, dividindo a resposta
livre da resposta forc?ada, enquanto se mante?m maior proximidade da
resposta real do processo ao utilizar um modelo na?o linear para deter-
minar a resposta livre.

O principal objetivo do algoritmo PNMPC, consiste em fornecer
um caminho simples e eficaz para o Controle Preditivo de sistemas na?o
lineares. A premissa inicial e? o fato de que os algoritmos de controle,
como o DMC e o GPC, utilizam uma representac?a?o para a predic?a?o
ao longo do horizonte de predic?a?o, y?, como uma func?a?o do vetor de
incrementos futuros de controle ?u, conforme a equac?a?o (PLUCENIO,
2010):

y? = f + G?u (3.1)

Sabe-se tambe?m que, mesmo atrave?s de caminhos diferentes, em
ambas as estrate?gias (GPC e DMC), o princ??pio de superposic?a?o pre-
sente em modelos lineares permite uma forma simples de calcular a
sa??da predita y?. No entanto, para o caso na?o linear, o princ??pio da
superposic?a?o na?o e? valido, e assim, busca-se descrever a evoluc?a?o dos
estados do sistema ao longo do horizonte de predic?a?o p, utilizando uma
representac?a?o linear dos estados em relac?a?o aos incrementos de controle
futuro, similar a? equac?a?o (3.1).

Como, independentemente da linearidade dos sistemas, as u?nicas
varia?veis que podem alterar o valor das predic?o?es futuras sa?o de fato os
incrementos futuros ?u, utiliza-se uma linearizac?a?o em func?a?o dessas
varia?veis e na?o o conceito de ponto de equil??brio. Enta?o, assume-se
que as predic?o?es para esse caso, y?, dependem dos controles passados
??u , das sa??das presentes e passadas ??y e dos incrementos de controle
futuros ?u, como se mostra na equac?a?o (3.2).

y? = f (??y ,??u , ?u) (3.2)
Assim, com a aproximac?a?o proposta na equac?a?o (3.2), o vetor

de predic?o?es pode ser reescrito por:

Y? = F + GP NMP C ?u (3.3)

onde F = f (??y ,??u ) e GP NMP C = ?Y???u . Vale ressaltar que a repre-



50

sentac?a?o das predic?o?es da equac?a?o (3.3), nada mais e? do que uma line-
arizac?a?o de primeira ordem da se?rie de Taylor para ?u = 0, podendo
tambe?m ser indicada como uma linearizac?a?o pela se?rie de Maclaurin.

Para demonstrar a formulac?a?o da estrate?gia, considera-se o sis-
tema dina?mico na?o linear cont??nuo e diferencia?vel com uma entrada e
uma sa??da, representado por:

y (k) = f (y (k ?na) ,y (k ?na + 1) , ....,y (k ? 1) ,
u (k ?nu) ,u (k ?nu, + 1) , ....,u (k ? 1)) ,

(3.4)

sendo na e nu os maiores atrasos de y e u, respectivamente.
Considerando um horizonte de controle futuro mh, devera?o apa-

recer as entradas futuras na forma representada abaixo:

u (k) = u (k ? 1) + ?u (k)
u (k + 1) = u (k) + ?u (k + 1)
u (k + 2) = u (k ? 1) + ?u (k) + ?u (k + 1)
...
u (k + mh ? 1) = u (k ? 1) + ?u (k) + · · · + ?u (k + mh ? 1)

(3.5)

O horizonte futuro e? limitado a mh, onde deve-se assumir que as
entradas posteriores a k +mh?1 sa?o iguais a u(k +mh?1). Utilizando
a equac?a?o (3.4) para calcular as predic?o?es, tem-se:

y? (k + 1) = f (y (k ?na + 1) , ...,y (k) ,u (k ?nu + 1) , ..., u (k))
y? (k + 2) = f (y (k ?na + 2) , ...,y (k + 1) ,u (k ?nu + 2) , ..., u (k + 1))
...
y? (k + p) = f (y? (k ?na + p) , ...,
y? (k + p? 1) ,u (k ?nu + 1) , ..., u (k + m? 1))

(3.6)
Substituindo as relac?o?es apresentadas em (3.5), o conjunto de

equac?o?es apresentadas em (3.6) passa a ser dado por:



51

y? (k + 1) = f (y (k ?na + 1) , ...,y (k) ,u (k ?nu + 1) , ..., u (k ? 1) , ?u (k))
y? (k + 2) = f (y (k ?na + 2) , ..., y? (k + 1) ,u (k ?nu + 2) , ...,u (k ? 1) ,
?u (k) , ?u (k + 1))
...
y? (k + p) = f (y? (k ?na + p) , ..., y? (k + p? 1) ,u (k ?nu + 1) , ...,
u (k ? 1) , ?u (k) , ?u (k + 1) , ..., ?u (k + mh ? 1))

(3.7)
Para simplificar a notac?a?o, o conjunto de entradas passadas ??u

e das sa??das passadas ??y , passa a ter a forma da expressa?o em (3.7) e
se reduzem a? seguinte equac?a?o:

y? (k + 1) = f (??y ,??u , ?u (k))
y? (k + 2) = f (??y ,??u , ?u (k) , ?u (k + 1))
...

y? (k + p) = f (??y ,??u , ?u (k) , . . . , ?u (k + mh ? 1))

(3.8)

Observando a equac?a?o (3.8), e? poss??vel concluir que as u?nicas
varia?veis capazes de alterar o valor das sa??das futuras sa?o os incrementos
futuros da ac?a?o de controle ?u(k), ?u(k + 1), ... e ?u(k + mh ? 1).

Dadas as definic?o?es mostradas em (3.9), sendo l um vetor de
dimensa?o mh ×1 com todos os elementos iguais a um, e D uma matriz
triangular inferior mh ×mh com todos os elementos na?o nulos iguais a
um, e? poss??vel simplificar a notac?a?o como:

??y : Conjunto de valores passados de y
??u : Conjunto de valores passados de u
u : u0 + ?u
u0 : u(k ? 1)l
?u : D?u

?u : [?u(k), ?u(k + 1) ... ?u(k + mh ? 1)]T

(3.9)

Assim, as predic?o?es em (3.7) podem ser reescritas como segue:

y? = f (??y ,??u , ?u) (3.10)

Utilizando o mesmo procedimento exposto na equac?a?o (3.3), e? poss??vel



52

encontrar a seguinte relac?a?o:

y? = f (??y ,??u ,u0) +
?y?

?u

????
u=u0

?u (3.11)

Substituindo em (3.11) as equac?o?es (3.9), tem-se a equac?a?o:

?y?

?u
?u =

?Y?

??u
?u (3.12)

Finalmente, definindo F = f (??y ,??u ,u0) e GP NMP C = ?Y???u
???
u=u0

,

sendo F o vetor de predic?o?es que seria obtido para ?u = 0 e GP NMP C
o gradiente das sa??das preditas com relac?a?o ao vetor dos incrementos de
controle ?u calculado para ?u = 0, tem-se a equac?a?o (3.13), voltando
a? notac?a?o presente na equac?a?o (3.3).

Y? = F + GP NMP C ?u (3.13)

GP NMP C e? a matriz de PNMPC, que pode ser obtida pela de-
finic?a?o do Jacobiano como se mostra em (3.14), que por sua vez e? a
matriz dina?mica generalizada e e? aplicado para sistemas lineares e na?o
lineares.

GP NMP C =

?
???????????

?y?(k+1)
??u(k)

0 0 0

?y?(k+2)
??u(k)

?y?(k+2)
??u(k+1)

0 0

...
...

...
...

?y?(k+p)
??u(k)

?y?(k+p)
??u(k+1)

· · · ?y?(k+p)
??u(k+mh?1)

?
???????????

(3.14)

A forma triangular inferior da matriz GP NMP C , deve-se ao fato
do sistema ser causal e de se considerar que na?o ha? acoplamento direto
entre entrada e sa??da. Em (PLUCENIO et al., 2007b) prova-se que, para
sistemas lineares, a? matriz GP NMP C e? igual a matriz G obtida pela
resposta ao degrau unita?rio nas te?cnicas DMC e GPC.

A equac?a?o (3.13) pode ser escrita para um sistema de uma en-
trada e uma sa??da como se mostra na expressa?o seguinte:



53

?
????

y? (k + 1)
y? (k + 2)

...
y? (k + p)

?
???? =

?
????

f1(
??y ,??u )

f2(
??y ,??u )

...
fp(
??y ,??u )

?
???? +

?
?????

?y?(k+1)
??u(k)

0 0 0
?y?(k+2)
??u(k)

?y?(k+2)
??u(k+1)

0 0
...

...
...

...
?y?(k+p)
??u(k)

?y?(k+p)
??u(k+1)

. . .
?y?(k+p)

??u(k+mh?1)

?
?????

?u=0

?
????

?u (k)
?u (k + 1)

...
?u (k + mh ? 1)

?
????

(3.15)
Nota-se em (3.15) que a forma triangular inferior da matriz Ja-

cobiano deve-se a? causalidade do sistema, dado por (3.16):

?y? (k + j)

??u (k + i)
= 0 para i ? j (3.16)

A expressa?o (3.15) representa a equac?a?o (3.13) de forma mais
detalhada, onde:

• Y? e? o vetor p×1 contendo as predic?o?es no horizonte de predic?a?o
p.

• F e? o vetor p × 1 que conte?m as sa??das preditas, supondo que
as ac?o?es de controle no horizonte de controle mh sa?o mantidas
iguais a? ac?a?o de controle no instante k ? 1, u(k) = u(k + 1) =
.... = u(k + mh ? 1) = u(k ? 1) .

• GP NMP C e? a versa?o na?o linear da matriz dina?mica utilizada no
Controle Preditivo DMC ou a versa?o generalizada, va?lida para
sistemas lineares ou na?o lineares (para sistemas cont??nuos e dife-
rencia?veis). Sua dimensa?o e? p×mh.

• ?u e? o vetor mh × 1 que contem os incrementos nas ac?o?es de
controle no horizonte de controle mh.

Apesar de ser poss??vel, em alguns casos, obter-se uma expressa?o
para a matriz GP NMP C em func?a?o da expressa?o matema?tica do modelo
na?o-linear e procurando uma alternativa onde a montagem da matriz
na?o dependa da estrutura matema?tica utilizada para a representac?a?o
do modelo, optou-se pela determinac?a?o nume?rica da matriz Jacobiana
(PLUCENIO et al., 2007a).



54

Diferentemente das estrate?gias de Controle Preditivo lineares
GPC e o DMC, nas quais a te?cnica PNMPC se baseia, o enfoque dado
por (PLUCENIO, 2010) foi a soluc?a?o nume?rica do problema de predizer
as sa??das futuras. Isto se deve principalmente ao fato de existir uma
grande quantidade de caminhos diferentes para a modelagem de proces-
sos na?o lineares, como por exemplo: redes neurais artificiais, modelos
NARMAX (Non-linear Auto-Regressive with Moving Average and Exo-
genous inputs ), etc. Assim, ao inve?s de pressupor a disponibilidade de
um modelo matema?tico do processo para se obter as predic?o?es, para
esse propo?sito foi concebida uma estrutura compat??vel a? modelagem de
processos atrave?s de algoritmos nume?ricos, aumentando a praticidade
da te?cnica.

3.1 OBTENC?A?O NUME?RICA DAS PREDIC?O?ES

O algoritmo nume?rico necessa?rio para calcular as predic?o?es deve
ser capaz de fornecer as sa??das futuras Y?, quando fornecidos os valores
dos sinais de controles e sa??das passados com o vetor de incrementos
de controles futuros ?u. Para um sistema SISO, por exemplo, a cada
iterac?a?o executa-se o seguinte procedimento para a obtenc?a?o nume?rica
de F e GP NMP C :

1. obter o vetor p × 1, Y?0p, executando o algoritmo que modela o
processo, utilizando para isso incrementos futuros nulos ?u =
[0....0]T ;

2. fazer F = Y?0p;

3. obter o vetor Y?1p executando o algoritmo que modela o processo,
utilizando para isso as entradas e sa??das passadas, com um valor ?
pequeno e na?o nulo como primeiro incremento futuro, por exem-

plo,
uk?1
1000

. Para o caso de uma entrada ?u =
[
? 0 . . . 0

]T
;

4. fazer GP NMP C (:, 1) =
Y?1p?Y?

0
p

?
, ou seja, a derivada parcial apro-

ximada para a sa??da e a entrada em questa?o;

5. obter o vetor Y?2p executando o algoritmo que modela o processo
utilizando para isso as entradas e sa??das passadas, com um valor
? pequeno e na?o nulo como segundo incremento futuro, por exem-

plo,
uk?1
1000

. Para o caso de uma entrada ?u =
[

0 ? . . . 0
]T

;



55

6. fazer GP NMP C (:, 2) =
Y?2p?Y?

0
p

?
, ou seja, a derivada parcial apro-

ximada para a sa??da e a entrada em questa?o;

7. proceder com o mesmo ca?lculo das demais colunas da matriz
GP NMP C ate? a u?ltima coluna onde obte?m-se o vetor Y?

mh
p execu-

tando o modelo com as entradas e sa??das passadas e com ?u =
[
0 0 ... ?

]
. GP NMP C (:,mh) =

Y?
mh
p ?Y?0p

?

Apo?s a obtenc?a?o do vetor de predic?o?es Y? da equac?a?o (3.13),
utiliza-se o mesmo me?todo de ca?lculo nume?rico presente nos algoritmos
GPC e DMC para a obtenc?a?o da ac?a?o de controle. E? interessante
ressaltar que no procedimento de ca?lculo de ?u, a u?nica diferenc?a do
PNMPC perante o GPC e o DMC, e? o fato da resposta livre ser na?o
linear (PLUCENIO, 2010).

3.2 TRATAMENTO DO ERRO DE PREDIC?A?O E PERTURBAC?A?O

Os algoritmos de controle preditivo, como o DMC e o GPC,
utilizam um mecanismo para corrigir as predic?o?es. Por exemplo, a
te?cnica de Controle DMC corrige as predic?o?es com o erro entre o valor
medido da varia?vel controlada e seu valor predito com o modelo no
instante k (PLUCENIO, 2010). Esta te?cnica aplicada a sistemas lineares
garante erro nulo em regime permanente, ja? que o incremento do esforc?o
de controle necessa?rio para a correc?a?o do erro no instante k sera? o
mesmo nos instantes futuros, devido a? relac?a?o linear entre a entrada e
sa??da, isto faz com o que o ganho seja constante.

A aplicac?a?o deste mesmo procedimento para a te?cnica PNMPC,
aplicada a sistemas na?o lineares, na?o garante erro nulo em regime per-
manente, ja? que o ganho varia com o ponto de operac?a?o do sistema
(PLUCENIO, 2010). A estrate?gia PNMPC utiliza uma versa?o expl??cita
do mecanismo de correc?a?o das predic?o?es utilizado pelo algoritmo GPC.

Para o tratamento de erros de predic?a?o, ru??do e perturbac?o?es
encontrado em (PLUCENIO, 2010), o algoritmo PNMPC soma a cada
predic?a?o a integral do erro de predic?a?o filtrado. Na Figura 5, observa-
se o diagrama de blocos para a correc?a?o das predic?o?es utilizando-se o
algoritmo PNMPC.

O modelo de perturbac?a?o funciona como uma espe?cie de obser-
vador, que fornece uma correc?a?o a ser adicionada a cada predic?a?o. A
Figura 5 conte?m o diagrama de blocos desse observador utilizado no
PNMPC, onde a cada instante de amostragem se calcula o erro entre



56

Figura 5 – Diagrama de Blocos para o Tratamento do Erro de Predic?a?o
PNMPC.

? ?
1

F
D q ? ?11

i
k

q
?

?

? ?1scy k k ?

? ?n k? ? ?1y k k? ? ? ?e k

? ?y k

?
?

?

?

1
q
?

?

?

?

?

?

?
0

Fonte: (PLUCENIO, 2010).

a sa??da que o preditor obte?m para o instante k, y? (k |k ? 1 ) e a sa??da
real, y(k), conforme equac?a?o:

e (k) = y (k) ? y? (k |k ? 1 ) (3.17)
Considerando a ana?lise para uma varia?vel controlada y(t), subs-

tituindo o operador q por z e definindo DF (z) = 1 ?fdz?1, chegamos
a? func?a?o de transfere?ncia apresentada em (3.18).

e(z) =
z2 ? (1 + fd)z + fd

z2 ? (1 + fd ?ki)z + fd
(y(k) ? y?sc(k)) (3.18)

onde
y?sc(k) e? o valor da sa??da sem correc?a?o
y(k) e? o valor real da sa??da
Supondo que o sistema em malha fechada e? esta?vel, podemos

aplicar o Teorema do Valor Final para verificarmos que a presenc?a
de (1 ? z?1) no numerador da func?a?o de transfere?ncia (3.18) garante
erro nulo em regime permanente para uma entrada do tipo degrau de
y(k) ? y?sc(k).

O projeto de ki e fd consiste em comparar o polino?mio deno-
minador da func?a?o de transfere?ncia (3.18) com um polino?mio desejado
pd(z) = z

2 ? 2az + a2. Chegamos a igualdades que permitem escolher-
mos o valor de a para determinar fd e ki, sendo que a escolha de a tem
impacto na velocidade com que o erro responde a? perturbac?a?o.

fd = a
2 (3.19)



57

ki = 1 + a
2 ? 2a (3.20)

3.3 FUNC?A?O CUSTO

Uma func?a?o custo t??pica para sistemas SISO utilizada na te?cnica
PNMPC e? apresentada na equac?a?o:

J =

N1+p?1?

j=N1

?j(y? (k + j) ?r (k + j))2 +
mh?1?

i=0

?i?u(k + i)
2

(3.21)

Na equac?a?o (3.21), ?j e ?i sa?o as ponderac?o?es, respectivamente
sobre o seguimento de refere?ncia e o esforc?o de controle. Em muitos ca-
sos, as ponderac?o?es para o caso SISO sa?o constantes. N1 e? o nu?mero de
amostras que determina o in??cio do horizonte de predic?a?o. O problema
a ser resolvido, consiste em obter o vetor:

?u = [?u (k) , ?u (k + 1) , ..., ?u (k + mh ? 1)] (3.22)

que minimiza a func?a?o Custo J sujeito a restric?o?es sobre os incrementos
de controle ?u, as ac?o?es de controle:

u = [u (k) ,u (k + 1) , ...,u (k + mh ? 1)]T (3.23)

e a sa??da predita:

y? (k + j) = [y? (k + 1) , y? (k + 2) , ..., y? (k + p)]
T

(3.24)

Em sistemas que apresentam restric?o?es na ac?a?o de controle ou
na sa??da do sistema, a minimizac?a?o da func?a?o custo e? obtida com a
aplicac?a?o de algoritmos de programac?a?o quadra?tica (Quadratic Pro-
gramming, QP). Para isto, manipula-se a equac?a?o (3.21) para rees-
creve?-la conforme equac?a?o:

J =
1

2
?uT ??u + ?T ?u (3.25)

sujeito a? A?u ? B, sendo:

? = GT RG + Q
? = GT RT (F ? r) (3.26)



58

na qual R e? uma matriz diagonal contendo as ponderac?o?es sobre o
seguimento de refere?ncia ao longo do horizonte de predic?a?o, r e? o ve-
tor contendo as trajeto?rias futuras no horizonte de predic?a?o e Q e?
uma matriz diagonal contendo as ponderac?o?es sobre o esforc?o de con-
trole. Tendo conhecimento das restric?o?es do sistema, basta passa?-las
para a forma matricial e realizar a minimizac?a?o da func?a?o custo com
a utilizac?a?o de programac?a?o quadra?tica. A lei de controle resultante e?
mostrada na equac?a?o (3.27).

?u =
(
GT RG + Q

)?1
GT RT (F ? r) (3.27)

3.4 CONCLUSA?O

Neste cap??tulo apresentou-se uma discussa?o dos aspectos de im-
plementac?a?o da te?cnica MPC Pra?tico para Sistema Na?o Lineares, o
PNMPC, apresentado por (PLUCENIO, 2010).

A te?cnica PNMPC mostra uma forma de obter uma linearizac?a?o
que fornece uma predic?a?o com aproximac?a?o, similar a? que se obteria
com uma aproximac?a?o de Taylor de segunda ordem.

Para a minimizac?a?o da func?a?o objetivo, pode-se continuar utili-
zando toda a tecnologia ja? desenvolvida para sistemas lineares, como o
ja? consagrado me?todo de Programac?a?o Quadra?tica. Ale?m disso, a ob-
tenc?a?o nume?rica da matriz GP NMP C permite a utilizac?a?o de qualquer
estrutura de modelo. O me?todo funciona igualmente para sistemas de
uma entrada e uma sa??da como para sistemas multivaria?veis e tem a
sua maior a?rea de aplicac?a?o em processos tipicamente na?o lineares.

A semelhanc?a do me?todo com os tradicionais algoritmos de LMPC
(Linear Model Predictive Control ) bem conhecidos no meio industrial,
tanto no que se refere a? filosofia de projeto dos controladores quanto ao
ajuste e a? sintonia do controlador, tornam o PNMPC uma ferramenta
com grande potencial para ser adotada na indu?stria do petro?leo e ga?s.

Este trabalho baseia-se na te?cnica PNMPC. No pro?ximo cap??tulo
sa?o apresentadas as alternativas de implementac?a?o da te?cnica PNMPC
aplicado em um estudo de caso, que foi desenvolvido ao longo deste
trabalho de mestrado.



59

Cap??tulo 4

IMPLEMENTAC?A?O DO PNMPC:
ALTERNATIVAS

A maioria dos processos dina?micos exibe relac?o?es na?o lineares
entre varia?veis controladas e manipuladas. Dependendo da aplicac?a?o,
o algoritmo MPC e? muitas vezes escolhido entre um tipo linear e um
tipo na?o linear (CAMACHO; BORDONS, 2007).

Este cap??tulo apresenta va?rias maneiras de implementar o al-
goritmo PNMPC. Mostra-se que o algoritmo PNMPC pode ser escrito
para lidar com a na?o-linearidade em diferentes n??veis. Por uma questa?o
de simplicidade, os algoritmos sa?o implementados para controlar o n??vel
de um tanque co?nico. Nessa aplicac?a?o, a principal finalidade do contro-
lador e? manipular a abertura da va?lvula de sa??da do tanque, a fim de
seguir a refere?ncia de n??vel do tanque. O desempenho e o custo com-
putacional de seis implementac?o?es diferentes de controlador PNMPC
sa?o exibidos. Os resultados desses controladores sa?o comparados e ana-
lisados pelo sistema de verificac?a?o de resposta de simulac?a?o, o tempo
de execuc?a?o dos algoritmos do controlador PNMPC e pelos indices de
desempenho dos controladores.

4.1 VERSO?ES DA TE?CNICA MPC PRA?TICO PARA SISTEMAS
NA?O LINEARES (PNMPC)

A teoria da te?cnica PNMPC apresentada na sec?a?o anterior pode
ser implementado de diversas formas, considerando diferentes apro-
ximac?o?es para o ca?lculo das predic?o?es de um dado processo na?o linear.
O objetivo desta sec?a?o e? estudar o desempenho e o custo computaci-
onal do controlador PNMPC, usando seis diferentes verso?es de imple-



60

mentac?a?o. Essas verso?es utilizam simplificac?o?es da te?cnica PNMPC
original completa, de forma a reduzir o tempo de processamento. Vari-
ando a forma de ca?lculo das predic?o?es, o PNMPC pode ser simplificado
ate? se converter em um controlador MPC linear.

Primeiramente, e? descrito a implementac?a?o e a matema?tica com
os algoritmos das alternativas das variac?o?es da te?cnica PNMPC para
cada versa?o. Depois e? apresentado o estudo de caso aplicando as verso?es
do PNMPC, mostrando os resultados respectivamente.

4.1.1 Primeira versa?o: PNMPC original completo com calculo
de ?uini.

Seguindo a teoria do PNMPC desenvolvida por Plucenio (2010)
e descrito no Cap??tulo 3, a primeira versa?o PNMPC proposta neste tra-
balho considera resposta livre na?o linear e o ca?lculo da matriz GP NMP C
em dois passos.

O primeiro procedimento do algoritmo e? calcular em uma deter-
minada iterac?a?o uma variac?a?o de controle inicial ?uini, que e? calcu-
lada em func?a?o da matriz GP NMP C ja? existente, ou seja, da matriz
Ganterior equivalente a GP NMP C (k ? 1). Apo?s obter a variac?a?o de
controle inicial, calculam-se as ac?o?es de controle futuras de acordo com
a equac?a?o:

Umh×1 = Hmh×1u (k ? 1) + TImh×mh ?uinimh×1 (4.1)

onde:

mh horizonte de controle;
H vetor de uns;
u(k ? 1) ac?a?o de controle no instante anterior;
TI matriz Toeplitz integradora;
?uini variac?a?o de controle inicial.

Com a ac?a?o de controle U ja? calculada, obte?m-se uma sa??da predita
inicial Y?0p.

Na seque?ncia, e? realizado o ca?lculo de uma nova ac?a?o de controle,
na qual e? aplicada um valor ?, e com esta nova ac?a?o de controle U, e?
obtida a sa??da predita Y?. O valor ? vai-se deslocando em ?u para o



61

ca?lculo da matriz GP NMP C , conforme descrito pela equac?a?o (4.2).

GP NMP C (:,mh) =
Y?mhp ? Y?0p

?
(4.2)

Tendo calculada a matriz GP NMP C (k) no instante atual e a
matriz GP NMP C (k ? 1) calculada no instante anterior, e? poss??vel obter
a me?dia da matriz GP NMP C , que e? calculada em dois passos:

GP NMP C = 0, 5[GP NMP C (k ? 1) + GP NMP C (k)] (4.3)

A Figura 6 mostra a interpretac?a?o gra?fica do procedimento de
ca?lculo da matriz GP NMP C , calculada em dois passos para uma func?a?o,
representada pela linha azul tracejada. Se a posic?a?o inicial e? f (x) (re-
presentada pelo primeiro ponto verde) para um ?uini e o ponto final
desejado e? f (x + ?x) (representado pelo ponto vermelho), enta?o, para
se obter o ganho da matriz GP NMP C em f (x), e? preciso calcular a tan-
gente neste ponto inicial, isto e? derivar f (x). Tendo a matriz GP NMP C
ja? calculada, pode-se resolver o problema de otimizac?a?o quadra?tica
para se calcular a nova variac?a?o de controle. Com esta variac?a?o de
controle, calcula-se a nova ac?a?o de controle, que e? representada pelo
ponto marrom. Nesse ponto, e? calculada a tangente da curva, a fim
de se obter o ganho da nova matriz GP NMP C . Calculadas as matrizes
GP NMP C (k ? 1) e GP NMP C (k), e? calculada a inclinac?a?o me?dia. A
partir dessa inclinac?a?o me?dia, obte?m-se um novo ponto (ponto ama-
relo), e a tangente nesse ponto e?, enta?o, o ganho da matriz GP NMP C .
Este novo ponto se encontra mais pro?ximo do ponto final desejado,
ficando mais pro?ximo das refere?ncias desejadas.

Figura 6 – Interpretac?a?o gra?fica GP NMP C calculada em dois passos.

? ?f x x??

? ?f x

x

Inclinação média

? ? ? ?PNMPC PNMPC PNMPC0, 5 k 1 k? ? ?? ?? ?G G G

x x??

Fonte: Modificado de (PLUCENIO, 2010).



62

O algoritmo implementado para esta versa?o e? detalhado no flu-
xograma da Figura 7.

Figura 7 – Fluxograma do algoritmo PNMPC da primeira versa?o.

D
e

 1
 a

té
 N

u
m

It
e

ra
-1

- 
C

á
lc

u
lo

 d
a

 s
a

íd
a 

d
a

 p
la

n
ta

   
  

   
.

- 
A

tu
a

liz
a

çã
o

 d
a

s 
re

fe
rê

n
ci

a
s.

i=
=

1

- 
O

b
té

m
-s

e
 o

 v
e

to
r 

   
 ,

 e
xe

cu
ta

n
d

o
 o

a
lg

o
ri

tm
o

 q
u

e
 m

o
d

e
la

 o
 p

ro
ce

ss
o

 u
ti

liz
a

n
d

o
in

cr
e

m
e

n
to

s 
fu

tu
ro

s 
n

u
lo

s 
   

   
  

   
  

   
   

  
.

- 
C

á
lc

u
lo

 d
a

 r
e

sp
o

st
a

 l
iv

re
 s

e
m

 c
o

rr
e

çã
o

   
   

  
  

   
 .

  

- 
O

b
te

r 
o

 v
e

to
r 

d
a

s 
p

re
d

iç
õ

e
s,

 e
xe

cu
ta

n
d

o
 o

 
a

lg
o

ri
tm

o
 q

u
e

 m
o

d
e

la
 o

 p
ro

c
e

ss
o

, 
c

o
m

   
  

e
  

   
 

co
m

 u
m

 v
a

lo
r 
?

 p
e

q
u

e
n

o
 p

a
ra

 o
 c

á
lc

u
lo

 d
a

 

C
á

lc
u

lo
 d

e
  

  
  c

o
m

 o
 Q

u
a

d
p

ro
  

 

- 
C

á
lc

u
lo

 d
e

 e
rr

o
:

- 
C

á
lc

u
lo

 d
o

 f
a

to
r 

d
e

 a
ju

st
e

 
- 

C
á

lc
u

lo
 d

e
  

   
 

- 
C

á
lc

u
lo

 d
e

- 
C

á
lc

u
lo

 d
a

 r
e

sp
o

st
a

 l
iv

re
 c

o
rr

e
g

id
a

 

C
á

lc
u

lo
 d

e
  

  
  

   
  

 e
m

 f
u

n
çã

o
 d

a
  

  
  

   
  

  
  

   
  

  
   

  
   

  
   

  
 e

  
   

.

C
a

lc
u

la
r

- 
O

b
te

r 
o

 v
e

to
r 

d
a

s 
p

re
d

iç
õ

e
s,

 e
xe

cu
ta

n
d

o
 

o
 a

lg
o

ri
tm

o
 q

u
e

 m
o

d
e

la
 o

 p
ro

c
e

ss
o

, 
c

o
m

   
  

e
   

  
 c

o
m

 u
m

 v
a

lo
r 
?

 p
e

q
u

e
n

o
 p

a
ra

 o
 

cá
lc

u
lo

 d
a

 

- 
C

a
lc

u
la

r:

- 
C

a
lc

u
la

r:
  

- 
C

a
lc

u
la

r 
  

  
  c

o
m

 o
 Q

u
a

d
p

ro

C
á

lc
u

lo
 d

a
 l

e
i 

d
e

 c
o

n
tr

o
le

A
tu

a
li

za
r 

a
s 

sa
íd

a
s 

e
 a

ç
õ

e
s 

d
e

 
co

n
tr

o
le

 p
a

ss
a

d
a

s.

 i
&gt;

1

P
N

M
P

C
G

in
i

?
u

?
?

k
1

?
G

F

?
?

?
?

in
i

k
k

1
?

?
?
?

u
u

u

- 
C

a
lc

u
la

r: ?
?

h
m

0

p
p

P
N

M
P

C
:
,m

h

?
?

?

Y
Y

G

?
?

?
?

k
k

1
?

?
?
?

u
u

u

P
N

M
P

C
?

?
?

Y
F

G
u

m
o
d

z
y

y
e
lo
?

Si
m

N
ã

o

N
ã

o

Si
m

0 p
Y

0 P
?

F
Y

0 p
Y

0 p
?

F
Y

?
?

P
N

M
P

C
0
,5

(k
1
)

(k
)

?
?

?
G

G
G

?
?

z
y

y
u

F
A

C
?

?
F

F

F
A

C

y

u

P
N

M
P

C
G

z
m

o
d

e
r

y
y

e
lo

?
?

?
?T

0
..

..
.0

?
?

u

?
u

?
?

?
?

h
m

0

p
p

P
N

M
P

C
:,

m
k

h

?
?

?
?

Y
Y

G
G

?
u

Fonte: Pro?pria.



63

4.1.2 Segunda versa?o: PNMPC sem o ca?lculo de ?uini.

Uma das vantagens da te?cnica de controle PNMPC e? a sua flexi-
bilidade, ja? que permite o tratamento de processos tanto lineares como
na?o lineares. No entanto, essa flexibilidade pode acarretar em cus-
tos computacionais desnecessa?rios. Assim, pode-se fazer uma ana?lise
pre?via de processo que se tem a fim de adequar a te?cnica PNMPC
ao tipo de processo ao qual esta? sendo aplicada. Por exemplo, se
existe processo com caracter??stica na?o linear muito importante, e? re-
comenda?vel optar pela te?cnica PNMPC original completa com ?uini
(primeira versa?o). Por outro lado, se o processo apresenta uma na?o
linearidade suave, pode-se optar por reduzir o custo computacional,
eliminando o ca?lculo de ?uini.

Com o objetivo de diminuir a carga computacional do algoritmo,
propo?e-se uma versa?o de matriz GP NMP C calculada em um u?nico
passo. Nessa versa?o, o ca?lculo do incremento da ac?a?o de controle inicial
?uini e? eliminado. Para isto, utiliza-se o valor da variac?a?o do controle
da iterac?a?o anterior para calcular a ac?a?o de controle requerida para
obter Y?0p. Assim, e? calculada a matriz GP NMP C obtida no instante de
amostragem anterior, em um u?nico passo, conforme apresentado pela
Figura 8.

Figura 8 – Interpretac?a?o gra?fica GP NMP C calculada em um u?nico
passo.

? ?f x x??

? ?f x

x

? ?PNMPC PNMPC k?G G

x x??

Fonte: Modificado de (PLUCENIO, 2010).

O fato de eliminar o ca?lculo de ?uini diminui a precisa?o com



64

a qual o PNMPC calcula a GP NMP C , ja? que ?uini influencia direta-
mente no ca?lculo da Y?0p, que esta? explicitamente envolvida no ca?lculo
da matriz GP NMP C .

O algoritmo desta segunda versa?o e? apresentado no fluxograma
da Figura 9:

Figura 9 – Fluxograma do algoritmo PNMPC da segunda versa?o.

D
e
 1
 a
té
 N
u
m
It
e
ra
?1

? 
C
á
lc
u
lo
 d
a
 s
a
íd
a
 d
a
 p
la
n
ta
  
  
  
  
.

? 
A
tu
a
li
za
çã
o
 d
a
s 
re
fe
rê
n
ci
a
s.

i=
=
1

? 
O
b
té
m
?s
e
 o
 v
e
to
r 
   
 ,
 e
xe
cu
ta
n
d
o
 o

a
lg
o
ri
tm

o
 q
u
e
 m

o
d
e
la
 o
 p
ro
ce
ss
o
 u
ti
li
za
n
d
o

in
cr
e
m
e
n
to
s 
fu
tu
ro
s 
n
u
lo
s 
  
  
   
  
  
  
  
   
  
 .

? 
C
á
lc
u
lo
 d
a
 r
e
sp
o
st
a
 l
iv
re
 s
e
m
 c
o
rr
e
çã
o

  
  
   
  
   
  
. 
 

? 
O
b
te
r 
o
 v
e
to
r 
d
a
s 
p
re
d
iç
õ
e
s,
 e
xe
cu
ta
n
d
o
 o
 

a
lg
o
ri
tm

o
 q
u
e
 m

o
d
e
la
 o
 p
ro
ce
ss
o
, 
co
m
   
  e
  
   
 

co
m
 u
m
 v
a
lo
r 
?
 p
e
q
u
e
n
o
 p
a
ra
 o
 c
á
lc
u
lo
 d
a
 

C
á
lc
u
lo
 d
e
  
  
  c
o
m
 o
 Q
u
a
d
p
ro
  
 

? 
C
á
lc
u
lo
 d
e
 e
rr
o
:

? 
C
á
lc
u
lo
 d
o
 f
a
to
r 
d
e
 a
ju
st
e
 

? 
C
á
lc
u
lo
 d
e
   
   

? 
C
á
lc
u
lo
 d
e

? 
C
á
lc
u
lo
 d
a
 r
e
sp
o
st
a
 l
iv
re
 c
o
rr
e
g
id
a

 

? 
O
b
te
r 
o
 v
e
to
r 
d
a
s 
p
re
d
iç
õ
e
s,
 e
xe
cu
ta
n
d
o
 o
 

a
lg
o
ri
tm

o
 q
u
e
 m

o
d
e
la
 o
 p
ro
ce
ss
o
, 
co
m
   
 e
   
   

co
m
 u
m
 v
a
lo
r 
?
 p
e
q
u
e
n
o
 p
a
ra
 o
 c
á
lc
u
lo
 d
a
 

   
   

   
   

   
  

   
   

   
   

   
  .

? 
C
a
lc
u
la
r:

? 
C
a
lc
u
la
r 
   
   
co
m
 o
 Q
u
a
d
p
ro
.

C
á
lc
u
lo
 d
a
 le
i 
d
e
 c
o
n
tr
o
le

A
tu
a
li
za
r 
a
s 
sa
íd
a
s 
e
 a
çõ
e
s 
d
e
 

co
n
tr
o
le
 p
a
ss
a
d
a
s.

 i
&gt;
1

P
N
M
P
C

G

? 
C
a
lc
u
la
r: ?

?
h

m
0

p
p

P
N
M
P
C
:,
m

h

?
?

?

Y
Y

G
?

?

?
?

?
?

k
k

1
?

?
?
?

u
u

u

P
N
M
P
C

?
?

?
Y

F
G

u
?

m
o
d

z
y

y
el

o
?

S
im

N
ã
o

N
ã
o

S
im

0 p
Y?

0 P
?

F
Y?

0 p
Y?

0 p
?

F
Y?

?
?

z
y

y?
u?

F
A
C

?
?

F
F

F
A
C

y?
u?

PN
M

PC
G

z
m
o
d

er
y

y
el

o
?

?

?
?T

0
..
..
.0

?
?

u

?
u

?
?

h
m

0
p

p
P
N
M
P
C
:,
m

h

?
?

?

Y
Y

G
?

?

?
u

Fonte: Pro?pria.



65

4.1.3 Terceira versa?o: PNMPC obtendo so? a primeira coluna
da matriz GP NMP C.

Conforme descrito por Camacho e Bordons (2007), a matriz
G e? a encarregada de guardar os valores da dina?mica do processo e
GP NMP C e? a versa?o na?o linear da matriz dina?mica utilizada no MPC
pra?tico para sistemas na?o lineares PNMPC (PLUCENIO, 2010). A ma-
triz GP NMP C , tambe?m denominada matriz Jacobiana, como apresen-
tado na sec?a?o 1.1.1 e 1.1.2. (primeira e segunda versa?o) respetivamente,
sa?o calculados todos os elementos da matriz GP NMP C iterativamente,
dando como resultado um custo computacional elevado. Como o obje-
tivo de diminuir ainda mais o custo computacional, uma das possibi-
lidades e? calcular somente os elementos da primeira coluna da matriz
GP NMP C pelo procedimento normal do PNMPC e montar a matriz
GP NMP C , considerando o sistema como invariante no tempo, o que
e? comumente realizado em sistemas lineares (KEYSER, 1998). Desta
forma, o problema de otimizac?a?o na?o linear pode ser transformado
numa seque?ncia de problemas de otimizac?a?o linear. Para realizar esse
procedimento, e? preciso verificar a variac?a?o dos elementos da diago-
nal principal da matriz GP NMP C . No caso onde as variac?o?es na?o sa?o
significativas, pode-se optar pela te?cnica utilizada nos sistemas linea-
res, realizar apenas o ca?lculo da primeira coluna da matriz GP NMP C e
desloca?-la ate? obter uma matriz triangular inferior, conforme equac?a?o
(4.4).

?Y?

??u
= GP NMP C =

?
???????????

?y?(k+1)
??u(k)

0 0 0

?y?(k+2)
??u(k)

?y?(k+1)
??u(k)

· · · 0

...
... · · · 0

?y?(k+p)
??u(k)

?y?(k+p?1)
??u(k)

· · · ?y?(k+1)
??u(k)

?
???????????

(4.4)

No caso de um processo na?o linear, os elementos das diago-
nais da matriz GP NMP C apresentam variac?o?es significativas. Assim,
e? necessa?rio realizar o ca?lculo para cada um dos elementos da matriz
GP NMP C , como e? mostrado na equac?a?o (4.5). Este procedimento de
ca?lculo e? realizado a cada iterac?a?o, o que implica num incremento no
custo computacional. No entanto, no caso de um processo linear ou



66

um processo com uma na?o linearidade suave, os elementos das diago-
nais da matriz GP NMP C na?o sofrem modificac?o?es significativas. Dessa
forma, pode-se optar por diminuir o custo computacional, aplicando a
terceira versa?o do PNMPC, onde a matriz GP NMP C e? calculada com
a equac?a?o (4.4). Nesta versa?o, so? os elementos da primeira coluna da
matriz GP NMP C sa?o calculados e esta e? deslocada mh vezes, ate? se ob-
ter uma matriz triangular inferior, onde mh e? o horizonte de controle.
O fato de so? calcular a primeira coluna, faz com que o sistema seja tra-
tado como um sistema onde as relac?o?es entre as predic?o?es na?o lineares
e os controles futuros sa?o invariantes no tempo. Se o sistema verifica
esta propriedade, o custo computacional para o ca?lculo de GP NMP C
diminui razoavelmente.

?Y?

??u
= GP NMP C =

?
???????????

?y?(k+1)
??u(k)

0 0 0

?y?(k+2)
??u(k)

?y?(k+2)
??u(k+1)

· · · 0

...
... · · · 0

?y?(k+p)
??u(k)

?y?(k+p)
??u(k+1)

· · · ?y?(k+p)
??u(k+mh?1)

?
???????????

(4.5)

4.1.4 Quarta versa?o: PNMPC obtendo so? a primeira coluna
da matriz GP NMP C recalculada de tempos em tempos.

Esta versa?o e? similar a? terceira versa?o, so? que agora a matriz
GP NMP C e? recalculada somente de tempos em tempos e na?o assim a
cada iterac?a?o.

Esta versa?o e? uma opc?a?o muito interessante e flex??vel. Assim
como na versa?o anterior, esta quarta versa?o pode ser aplicada em um
processo linear ou em um processo com uma na?o linearidade suave. A
diferenc?a entre esta versa?o e a terceira, e? a periodicidade do ca?lculo
da primeira coluna da matriz GP NMP C . Nesta versa?o, este ca?lculo e?
realizada a cada n iterac?o?es, e na?o a cada iterac?a?o.

O operador, com conhecimento do processo e do grau de na?o
linearidade que este apresenta, pode ajustar o valor de n para cada
aplicac?a?o.

A dificuldade na utilizac?a?o desta versa?o se encontra na escolha do



67

valor de n. Uma escolha inadequada pode produzir perda de informac?a?o
de parte da dina?mica do processo. Por outro lado, a vantagem desta
versa?o e? a reduc?a?o do custo computacional, ja? que a matriz GP NMP C
e? recalculada so? de tempos em tempos.

4.1.5 Quinta versa?o: PNMPC calculando a resposta livre de
tempos em tempos, utilizando o DMC-Recursivo.

A quinta versa?o do PNMPC procura-se a resposta livre de tem-
pos em tempos, utilizando a ideia proposto por Cutler e Remarker
(1980)(DMC-Recursivo), para outros instantes de amostragem. A res-
posta livre e? calculado de forma recursiva a cada n iterac?o?es. Para as
outras iterac?o?es a resposta livre e? calculado da forma como PNMPC.

Esta versa?o procura diminuir o custo computacional em pro-
cessos onde a na?o linearidade na?o e? significativa, inserindo na te?cnica
PNMPC, o ca?lculo da resposta livre como e? feito no DMC-Recursivo.

Como apresentado nas verso?es anteriores, a resposta livre no
PNMPC utiliza o modelo na?o linear para determinar a resposta livre.
Dessa forma, obte?m-se o vetor Y?0p, de dimensa?o p × 1 executando o
algoritmo que modela o processo, utilizando incrementos futuros nulos,
isto e?, ?u = [0....0]T .

Na quinta versa?o, a resposta livre se torna linear e o ca?lculo da
resposta forc?ada na?o muda. A resposta forc?ada e? calculado a cada
iterac?a?o como apresentados no Cap??tulo 3, e nas verso?es 1 e 2 deste
Cap??tulo, o que faz se tornar o controlador linear para as n iterac?o?es.

Conforme apresentado no Cap??tulo 2, o ca?lculo da resposta livre
considerada no DMC-Recursivo e? realizado atrave?s da equac?a?o:

Ylivre = [y0 (t |t? 1 ) , ...,y0 (t + N ? 1 |t ? 1)]T (4.6)

Ao iniciar a execuc?a?o do algoritmo DMC- Recursivo no instante t, e?
preciso atualizar o vetor da resposta livre, pois o incremento da ac?a?o
de controle ?u (t? 1) agora e? conhecido. O vetor Ylivre da equac?a?o
(4.7) e? atualizado.

Ylivre = Ylivre +

?
????

g1
g2
...
gN

?
???? ?u (t? 1) (4.7)



68

Apo?s obter o novo sinal de controle u(t), e? preciso deslocar os valores
dentro do vetor Ylivre. Isto porque no instante posterior t + 1, sera?o
necessa?rias respostas livres de t + 1 ate? t + N. Assim, o novo vetor
Ylivre sera? dado pela equac?a?o (4.8):

Ylivre =

?
??????

y0 (t + 1 |t)
y0 (t + 2 |t)

...
y0 (t + N ? 1 |t)
y0 (t + N ? 1 |t)

?
??????

(4.8)

Dessa forma, o ca?lculo da resposta livre f considerada no DMC-
Recursivo e? realizado atrave?s da equac?a?o:

f =

?
??
y0 (t + 1 |t)

...
y0 (t + p |t)

?
?? + 1p×1e (4.9)

O erro entre a sa??da medida e a sa??da predita em malha aberta no
instante k e? usado para corrigir as predic?o?es de cada estado de todos
os elementos dentro do horizonte de predic?a?o p. Nesse caso, a equac?a?o
do erro do modelo de predic?a?o e?:

e = ym(t) ?y0 (t |t) (4.10)

A representac?a?o das predic?o?es, considerando o ca?lculo da res-
posta livre com o DMC de forma recursiva, e? obtida com a equac?a?o
(4.11):

Y? = f + G?u (4.11)

Utilizando esta forma de implementac?a?o, os ca?lculos necessa?rios
para obter a resposta livre se tornam mais simples, na?o sendo necessa?rio
o armazenamento dos incrementos passados de controle. Com este
procedimento, so? e? alterado o modo de calcular a resposta livre, o
restante do algoritmo de controle na?o e? modificado.



69

4.1.6 Sexta versa?o: PNMPC com reavaliac?a?o da matriz GP NMP C
e a resposta livre (DMC-Recursivo), conforme o erro de
predic?a?o.

A ideia desta versa?o, e? trabalhar com o valor do erro de modelo
de predic?a?o. Para isso, cria-se uma faixa de trabalho aceita?vel como se
mostra na Figura 10, ou seja, define-se um valor de erro de predic?a?o
admiss??vel (±e). Para isso, a cada iterac?a?o, e? calculado o valor absoluto
do erro de predic?a?o. Se o valor absoluto do erro de predic?a?o se encontra
dentro da faixa admiss??vel, o ca?lculo da matriz GP NMP C e da resposta
livre na?o e? efetuado. Nesse caso, sa?o usados os valores da iterac?a?o
anterior para a matriz GP NMP C e a resposta livre.

Figura 10 – Faixa de erro de predic?a?o admiss??vel.

+e

?e

y

u

Fonte: Pro?pria.

4.2 ESTUDO DE CASO: TANQUE CO?NICO

Para demonstrar a aplicac?a?o das verso?es de implementac?a?o da
te?cnica PNMPC apresentadas nas sec?o?es anteriores, e? considerado um
processo com dina?mica na?o linear. A fim de simplificar a demonstrac?a?o,
o controle de n??vel do tanque co?nico (sistema SISO) e? usado.

Os tanques comumente encontrados na indu?stria sa?o de tipo re-
tangular, cil??ndrico, co?nico ou esfe?rico, podendo ser abertos ou fecha-
dos. Nos tanques retangulares, a a?rea transversal e? constante em toda
faixa de variac?a?o do n??vel. Mas isso na?o acontece nos tanques de tipo
cil??ndricos, esfe?ricos ou co?nicos, cujas sec?o?es transversais mudam com
a altura do l??quido no interior do tanque, ocasionando mudanc?as no
ganho total do processo. Esta caracter??stica e? utilizada em testes de
sistemas de controle de processos na?o lineares (MORAES et al., 2013).



70

Para realizar a modelagem do sistema, considera-se o tanque
co?nico apresentado pela Figura 11:

Figura 11 – Tanque co?nico.

Qin
        
                

    R

 r

h H

  Qo

Fonte: Pro?pria.

onde:

Qin vaza?o de entrada;
Qo vaza?o da sa??da;
R raio ma?ximo do tanque co?nico;
r raio interno (varia?vel) do tanque co?nico;
H altura ma?xima do tanque co?nico;
h altura interna (varia?vel) do tanque co?nico.

Fazendo a ana?lise do balanc?o de massas, tem-se a seguinte equac?a?o:

Qin ?Qo = A
dh

dt
(4.12)

onde a a?rea da sec?a?o transversal do tanque A pode ser descrita por:

A = ?

[
r ? (R?r)

(
h

H

)]2
(4.13)



71

A vaza?o de sa??da, Qo pode ser expressa pela equac?a?o:

Qo = CvUc
?
h (4.14)

onde:

Cv coeficiente da capacidade do fluxo da va?lvula de sa??da;
Uc sinal de controle da va?lvula de sa??da.

Substituindo as equac?o?es (4.13) e (4.14) em (4.12), tem-se a
equac?a?o diferencial na?o linear que descreve o comportamento dina?mico
do tanque co?nico:

dh

dt
=

Qin ?CvUc
?
h

?
[
r ? (R?r)

(
h
H

)]2 (4.15)

Nesse modelo, a vaza?o de entrada, Qin, e? tratada como uma
perturbac?a?o ao sistema. Por outro lado, a varia?vel manipulada e? o sinal
de controle da va?lvula de sa??da Uc, e a varia?vel controlada a altura do
tanque co?nico h.

No presente estudo, sera?o utilizados os dados apresentados na
Tabela 1.

Tabela 1 – Para?metros do tanque co?nico.
Para?metros Valor

Cv 0,04
H 5 m
R 1 m

As simulac?o?es sera?o realizadas em duas faixas: uma para alturas
inferiores a 1 m e a outra para alturas superiores a 1 m. Isso com a
finalidade de avaliar o desempenho dos controladores com dina?micas
ra?pidas e dina?micas lentas. No primeiro teste, com refere?ncias maiores
que 1 m para o n??vel do tanque, o tanque apresenta um comportamento
mais lento, levando a? escolha de um tempo de amostragem de 10 s. No
segundo teste, com refere?ncias menores que 1 m para o n??vel do tanque,
a dina?mica e? muito mais ra?pida, levando a? adoc?a?o de um per??odo de
amostragem de 1 s.

A perturbac?a?o na vaza?o de entrada Qin para refere?ncias supe-
riores a 1 m, foi calculada com o sistema em equil??brio ( dh

dt
= 0) a partir

da equac?a?o (4.15), obtendo como resultado a equac?a?o (4.16)



72

Qin = CvUc
?
h0 (4.16)

Considerando uma altura em equil??brio (h0) de 1 m e o Uc = 0,5 o
Qin usado para refere?ncia superiores a 1 m e? 0, 02 m

3/min. Para re-
fere?ncias inferiores a 1 m o Qin usado e? 0, 09 m

3/min. Esses valores
de perturbac?o?es de entrada sa?o aplicados nas simulac?o?es para as seis
verso?es.

4.3 RESULTADOS

Um dos objetivos deste trabalho e? apresentar diversas maneiras
de implementar o algoritmo PNMPC. Este algoritmo pode ser escrito
para lidar com a na?o-linearidade em diferentes n??veis. Por uma questa?o
de simplicidade, os algoritmos sa?o implementados para controlar o n??vel
de um tanque co?nico. A principal finalidade do controlador e? manipular
a abertura da va?lvula de sa??da, a fim de seguir o n??vel de refere?ncia.

No modelo matema?tico obtido na sec?a?o anterior, sa?o avaliados
os controladores das verso?es do PNMPC descritos nas sec?o?es 4.1.1 a?
4.1.6.

Nesta sec?a?o, sa?o exibidos o desempenho e o custo computacional
das seis verso?es do controlador PNMPC. Os resultados dos controlado-
res sa?o comparados e analisados pelo sistema de verificac?a?o de resposta,
o tempo de execuc?a?o do algoritmo e o desempenho do controlador.

Como a finalidade de avaliar o custo computacional exigido pela
implementac?a?o da te?cnica PNMPC, sera?o mostrados os tempos obti-
dos no ca?lculo do algoritmo para cada versa?o do PNMPC aplicado ao
controle de n??vel para o tanque co?nico.

Todas as simulac?o?es foram realizadas no Matlab, versa?o 2014,
em um PC com a seguinte configurac?a?o: processador A8 de 4 nu?cleos,
AMD de 1,9 GHz; 6 GB de RAM; e sistema operacional Windows 8.

Ainda para conseguir comparar as diferentes verso?es das estrate?gias
PNMPC, foram comparadas todas as verso?es atrave?s dos ??ndices de de-
sempenho do controlador, o MSE (mean squared error ) e o IAE (integral
of the absolute magnitude of the error ).

Primeiramente, para obter uma aproximac?a?o precisa do modelo,
foi utilizado o me?todo de integrac?a?o atrave?s da func?a?o ode45 do pacote
computacional do Matlab. Esta func?a?o e? baseada em um algoritmo do
tipo Runge-Kutta, que foi desenvolvido a partir do me?todo de Euler.

Por motivos de comparac?a?o, os para?metros do controlador PNMPC
sa?o os mesmos para todas as verso?es. Estes valores sa?o mostrados na



73

Tabela 2.

Tabela 2 – Para?metros de sintonia do controlador PNMPC
Para?metros Definic?a?o Valor

p horizonte de predic?a?o 12
mh horizonte de controle 3
N horizonte de modelo 20
? ponderac?a?o no controle 3
? ponderac?a?o no seguimento da refere?ncia 1
? filtro da refere?ncia 0,25
? valor na variac?a?o de controle 0,01
a para?metro no fator de ajuste 0,15

Os processos reais apresentam variac?o?es relacionadas a qualquer
modelo proposto para representa?-lo, e essas variac?o?es podem ser dadas
por diversas fontes de incertezas. As mais comuns sa?o: ru??dos, per-
turbac?o?es na?o mensura?veis e erros na modelagem do processo. A fim
de simular o processo que represente a realidade, foi inserida uma incer-
teza de 65% nos para?metros do modelo que representa o tanque co?nico.
Essa variac?a?o pode causar problemas relacionados a? estabilidade ou
violac?o?es de restric?o?es, no caso de controladores preditivos.

Ale?m do seguimento de refere?ncia, deseja-se a rejeic?a?o de per-
turbac?o?es do tipo constante. Isso e? poss??vel atrave?s de um modelo
de perturbac?a?o incorporado no esquema de predic?a?o mostrado na Fi-
gura 5. No modelo de perturbac?a?o adotado originalmente no PNMPC,
obte?m-se uma estimativa das incertezas futuras atrave?s de um obser-
vador particular, que realiza um tratamento do erro de predic?a?o no
instante anterior. Assim, percebe-se que o erro de predic?a?o do instante
anterior e? filtrado para se obter uma correc?a?o para as predic?o?es futuras.

E? importante considerar restric?o?es no sistema, ja? que todos os
processos esta?o sujeitos a limitac?o?es. E? imposto a restric?a?o meca?nica
no atuador, que esta? limitada pela capacidade meca?nica de abertura
e fechamento, assim como pela velocidade de resposta que geralmente
sa?o considerados nos limites na amplitude do sinal de controle como
observado na equac?a?o:

umin ? u (t) ? umax ?t (4.17)
A seguir, se apresentam as respostas das simulac?o?es para cada

versa?o das implementac?o?es do PNMPC.
Para observar a resposta obtida com cada uma das verso?es mostra-



74

se o n??vel do tanque de cada simulac?a?o

4.3.1 Primeira versa?o: PNMPC original completo com ?uini

Como descrito na sec?a?o 4.1.1 o primeira versa?o, o ca?lculo da
matriz GP NMP C e? realizado em dois passos, capturando a dina?mica
do processo com mais precisa?o. No entanto, o fato de utilizar a res-
posta livre na?o linear, linearizar a cada passo e obter uma me?dia dessa
resposta faz com que o ca?lculo apresente maior complexidade e maior
custo computacional.

Na Figura 12, mostram-se as respostas das simulac?o?es obtidas
com a implementac?a?o desta versa?o para refere?ncias com alturas supe-
riores a 1 m Figuras (a), (c), (e) e (g) e para alturas inferiores a 1 m
Figuras (b), (d), (f) e (h). Nessas figuras yr representa a refere?ncias do
sistema, y1 e? a sa??da da planta obtida aplicando a primeira versa?o, U1
e? a ac?a?o de controle que representa a abertura da va?lvula e por u?ltimo
Erro1 e? a diferenc?a entre a sa??da da planta (yz) e o modelo de predic?a?o
(ymod).

Nas Figuras (a) e (b) mostra-se que ambas simulac?o?es conseguem
bom seguimento de refere?ncias e? rejeic?a?o a? perturbac?a?o.



75

Figura 12 – Simulac?a?o da primeira versa?o do PNMPC.

0 5 10 15 20 25
0

1

2

3

4

5

T empo [mi n]

N
iv

el
[m

] yr
y1

Perturbação de entrada

Perturbação de saída

(a) Sa??da para ref&gt;1m

0 0.5 1 1.5
0

0.5

1

Tempo [min]

N
iv

e
l [

m
]

y
r

y
1

Perturbação de entrada

Perturbação de saída

(b) Sa??da para ref&lt;1m

0 5 10 15 20 25
0

0.2

0.4

0.6

0.8

1

Tempo [min]

A
p
er
t.
V
a
lv
u
la

U1

(c) Ac?a?o de controle para ref&gt;1m

0 0.5 1 1.5
0

0.2

0.4

0.6

0.8

1

Tempo [min]

A
p

e
rt

.V
a

lv
u

la

U
1

(d) Ac?a?o de controle para ref&lt;1m

0 5 10 15 20 25
0

0.005

0.01

0.015

0.02

0.025

Tempo [min]

Q
in
[m

3
/
s]

Qin

(e) Perturbac?a?o para ref&gt;1m

0 0.5 1 1.5
0

0.01

0.02

Tempo [min]

Q
in

[m
3
/s

]

Q
in

(f) Perturbac?a?o para ref&lt;1m

0 5 10 15 20 25

-0.1

0

0.1

0.2

Tempo [min]

E
rr
o

Erro1 = yz ? ymod

(g) Sinais de Erro para ref&gt;1m

0 0.5 1 1.5
-0.15

-0.1

-0.05

0

0.05

0.1

Tempo [min]

E
rr

o

Erro
1

= y
z

- y
mod

(h) Sinais de Erro para ref&lt;1m

Fonte: Pro?pria.



76

Como um dos objetivo deste trabalho e? mostrar o tempo de
execuc?a?o, o algoritmo foi rodado 10 vezes. Na Tabela 3, mostra-se o
tempo de execuc?a?o para o algoritmo da primeira versa?o. Os tempos
esta?o em segundos e sa?o medidos para cada rodada. Na tabela sa?o
apresentados o tempo total (T.total) das 10 rodadas e o tempo me?dio
de execuc?a?o (T. me?dio), para refere?ncias com alturas superiores a 1 m
e alturas inferiores a 1 m.

Tabela 3 – Tempo de execuc?a?o do algoritmo para a primeira versa?o do
PNMPC.

Execuc?a?o
T. execuc?a?o (s)

yr &gt; 1 m
T. execuc?a?o (s)

yr &amp;lt;1 m

1 40,22 32,39
2 39,58 30,84
3 38,89 30,77
4 38,95 31,26
5 39,18 31,12
6 39,09 32,51
7 39,12 31,27
8 39,15 32,24
9 39,19 32,02
10 38,98 32,50

T. total [s] 392,35 316,92
T. me?dio [s] 39,23 31,69

4.3.2 Segunda versa?o: PNMPC sem o ca?lculo de ?uini

Como foi descrito na sec?a?o 4.1.2, nesta versa?o o ca?lculo da ma-
triz GP NMP C e? realizado em um u?nico passo, eliminando o ca?lculo de
?uini. Da mesma forma que na primeira versa?o, para a segunda versa?o
foram feitos dois testes para avaliar o desempenho do controlador e o
tempo de execuc?a?o. A estrutura e nomenclatura das figuras desta sec?a?o
e? similar a? sec?a?o 4.3.1 com a diferenc?a que y2 e? a sa??da da planta obtida
aplicando a segunda versa?o e U2 e? a ac?a?o de controle.



77

Figura 13 – Simulac?a?o da segunda versa?o do PNMPC.

0 5 10 15 20 25
0

1

2

3

4

5

T empo [mi n]

N
iv

el
[m

] yr
y2

Perturbação de entrada

Perturbação de saída

(a) Sa??da para ref&gt;1m

0 0.5 1 1.5

N
iv

e
l [

m
]

0

0.5

1

Tempo [min]

y
r

y
2Perturbação de entrada

Perturbação de saída

(b) Sa??da para ref&lt;1m

0 5 10 15 20 25
0

0.2

0.4

0.6

0.8

1

Tempo [min]

A
p
er
t.
V
a
lv
u
la

U2

(c) Ac?a?o de controle para ref&gt;1m

0 0.5 1 1.5

A
p

e
rt

.V
a

lv
u

la

0

0.2

0.4

0.6

0.8

1

Tempo [min]

U
2

(d) Ac?a?o de controle para ref&lt;1m

0 5 10 15 20 25
0

0.005

0.01

0.015

0.02

0.025

Tempo [min]

Q
in
[m

3
/
s]

Qin

(e) Perturbac?a?o para ref&gt;1m

0 0.5 1 1.5
0

0.01

0.02

Tempo [min]

Q
in

[m
3
/s

]

Q
in

(f) Perturbac?a?o para ref&lt;1m

0 5 10 15 20 25
-0.1

-0.05

0

0.05

0.1

Tempo [min]

E
rr
o

Erro2 = yz ? ymod

(g) Sinais de Erro para ref&gt;1m

0 0.5 1 1.5
-0.15

-0.1

-0.05

0

0.05

0.1

0.2

Tempo [min]

E
rr

o

Erro
2

= y
z

- y
mod

(h) Sinais de Erro para ref&lt;1m

Fonte: Pro?pria.



78

Nas Figuras (a) e (b), mostra-se que tanto para refere?ncias su-
periores a 1 m quanto para refere?ncias inferiores a 1 m as simulac?o?es
apresentam bom seguimento de refere?ncias e? rejeic?a?o a? perturbac?a?o.

Na Tabela 4, sa?o apresentados os tempos de execuc?a?o obtidos
para o algoritmo desta versa?o.

Tabela 4 – Tempo de execuc?a?o do algoritmo para a segunda versa?o do
PNMPC.

Execuc?a?o
T. execuc?a?o (s)

yr &gt; 1 m
T. execuc?a?o (s)

yr &amp;lt;1 m

1 38,19 31,43
2 38,29 30,45
3 38,43 29,44
4 38,19 29,56
5 38,36 29,46
6 38,51 29,31
7 38,64 29,76
8 38,58 29,90
9 38,75 29,60
10 38,50 29,55

T. Total [s] 384,44 298,46
T. me?dio [s] 38,44 29,85

4.3.3 Terceira versa?o: PNMPC obtendo so? a primeira coluna
da matriz GP NMP C.

Nesta versa?o o sistema e? tratado como se fosse invariante no
tempo, mas para isso e? preciso verificar o grau de variac?a?o que apresen-
tam os elementos das diagonais principais da matriz GP NMP C , como
foi explicado na sec?a?o 4.1.3.

Para verificar se e? poss??vel aplicar a terceira versa?o neste es-
tudo de caso, o primeiro passo e? pegar va?rias matrizes GP NMP C em
iterac?o?es aleato?rias, observando o grau da na?o linearidade do sistema.
Na Figura 14, mostram-se os elementos da matriz GP NMP C da iterac?a?o
25, escolhida aleatoriamente. Nesta matriz, observa-se que o sistema
apresenta uma na?o linearidade suave, ja? que os elementos das diagonais
principais da matriz GP NMP C na?o apresentam variac?o?es significativas,
caracter??stica que foi repetida em matrizes de outras iterac?o?es. Dessa



79

forma e? poss??vel aplicar a terceira versa?o neste estudo de caso.

Figura 14 – Matriz GP NMP C da iterac?a?o 25.

Fonte: Pro?pria.

A seguir, calcula-se a primeira coluna da matriz GP NMP C . Enta?o,
ela e? deslocada ate? se obter uma matriz triangular inferior, como se
mostra na Figura 15. Nesta versa?o, o sistema e? tratado como se fosse
invariante no tempo.



80

Figura 15 – Matriz GP NMP C invariante no tempo.

Fonte: Pro?pria.

Os gra?ficos das simulac?o?es desta versa?o sa?o apresentados na Fi-
gura 16, onde pode-se observar que o desempenho do controlador na?o
foi comprometido, obtendo seguimento de refere?ncia e rejeic?a?o a? per-
turbac?a?o. Na Tabela 5, sa?o apresentados os tempos de execuc?a?o desta
versa?o.



81

Figura 16 – Simulac?a?o da terceira versa?o do PNMPC.

0 5 10 15 20 25
0

1

2

3

4

5

T empo [mi n]

N
iv

el
[m

] yr
y3

Perturbação de entrada

Perturbação de saída

(a) Sa??da para ref&gt;1m

0 0.5 1 1.5
0

0.5

1

Tempo [min]

N
iv

e
l [

m
]

y
r

y
3

Perturbação de entrada

Perturbação de saída

(b) Sa??da para ref&lt;1m

0 5 10 15 20 25
0

0.2

0.4

0.6

0.8

1

Tempo [min]

A
p
er
t.
V
a
lv
u
la

U3

(c) Ac?a?o de controle para ref&gt;1m

0 0.5 1 1.5
0

0.2

0.4

0.6

0.8

1

Tempo [min]

A
p

e
rt

.V
a

lv
u

la

U
3

(d) Ac?a?o de controle para ref&lt;1m

0 5 10 15 20 25
0

0.005

0.01

0.015

0.02

0.025

Tempo [min]

Q
in
[m

3
/
s]

Qin

(e) Perturbac?a?o para ref&gt;1m

0 0.5 1 1.5
0

0.01

0.02

Tempo [min]

Q
in

[m
3
/s

]

Q
in

(f) Perturbac?a?o para ref&lt;1m

0 5 10 15 20 25
-0.2

-0.1

0

0.1

0.2

Tempo [min]

E
rr
o

Erro3 = yz ? ymod

(g) Sinais de Erro para ref&gt;1m

0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6

-0.1

0

0.1

0.2

0.3

0.4

Tempo [min]

E
rr

o

Erro
3

= y
z

- y
mod

(h) Sinais de Erro para ref&lt;1m

Fonte: Pro?pria.



82

Tabela 5 – Tempo de execuc?a?o do algoritmo para a terceira versa?o do
PNMPC

Execuc?a?o
T. execuc?a?o (s)

yr &gt; 1 m
T. execuc?a?o (s)

yr &amp;lt;1 m

1 40,22 23,62
2 25,66 21,47
3 25,67 20,23
4 25,66 20,46
5 25,88 20,23
6 25,62 20,22
7 25,71 20,25
8 25,77 20,20
9 25,69 20,40
10 25,72 20,31

T. total [s] 257,17 207,39
T. me?dio [s] 25,72 20,74

4.3.4 Quarta versa?o: PNMPC obtendo so? a primeira coluna
da matriz GP NMP C recalculada de tempos em tempos.

Nesta versa?o, o ca?lculo da primeira coluna da matriz GP NMP C
e? realizado de tempos em tempos, ou seja, a cada n iterac?o?es. Neste
estudo de caso, considerou-se n = 25.

Na Figura 17, sa?o apresentadas respostas obtidas com as si-
mulac?o?es para esta versa?o e na Tabela 6, os tempos de execuc?a?o.
Ana?loga a? versa?o anterior, o desempenho do controlador na?o foi com-
prometido, a diferenc?a esta? no tempo requerido para os ca?lculos da
matriz GP NMP C . Como esperado, os tempos de execuc?a?o sa?o menores
que os obtidos com a terceira versa?o na?o comprometendo o seguimento
da refere?ncia e a rejeic?a?o da perturbac?a?o. No entanto, percebe-se que
para refere?ncias inferiores a 1 m o controlador apresenta uma maior difi-
culdade para seguimento das refere?ncias em comparac?a?o com a terceira
versa?o.



83

Figura 17 – Simulac?a?o da quarta versa?o do PNMPC.

0 5 10 15 20 25
0

1

2

3

4

5

T empo [mi n]

N
iv

el
[m

] yr
y4

Perturbação de entrada

Perturbação de saída

(a) Sa??da para ref&gt;1m

0 0.5 1 1.5
0

0.5

1

Tempo [min]

N
iv

e
l [

m
]

y
r

y
4

Perturbação de entrada

Perturbação de saída

(b) Sa??da para ref&lt;1m

0 5 10 15 20 25
0

0.2

0.4

0.6

0.8

1

Tempo [min]

A
p
er
t.
V
a
lv
u
la

U4

(c) Ac?a?o de controle para ref&gt;1m

0 0.5 1 1.5
0

0.2

0.4

0.6

0.8

1

Tempo [min]

A
p

e
rt

.V
a

lv
u

la

U
4

(d) Ac?a?o de controle para ref&lt;1m

0 5 10 15 20 25
0

0.005

0.01

0.015

0.02

0.025

Tempo [min]

Q
in
[m

3
/
s]

Qin

(e) Perturbac?a?o para ref&gt;1m

0 0.5 1 1.5
0

0.01

0.02

Tempo [min]

Q
in

[m
3
/s

]

Q
in

(f) Perturbac?a?o para ref&lt;1m

0 5 10 15 20 25
-0.1

-0.05

0

0.05

0.1

Tempo[min]

E
rr
o

Erro4 = yz ? ymod

(g) Sinais de Erro para ref&gt;1m

0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6
-0.15

-0.1

-0.05

0

0.05

0.1

0.15

0.2

0.25

Tempo [min]

E
rr

o

Erro
4

= y
z

- y
mod

(h) Sinais de Erro para ref&lt;1m

Fonte: Pro?pria.



84

Tabela 6 – Tempo de execuc?a?o do algoritmo para a quarta versa?o do
PNMPC.

Execuc?a?o
T. execuc?a?o (s)

yr &gt; 1 m
T. execuc?a?o (s)

yr &amp;lt;1 m

1 19,37 16,01
2 19,11 15,64
3 19,18 15,60
4 19,16 15,59
5 19,07 15,47
6 19,23 15,59
7 19,21 15,81
8 19,16 15,86
9 19,22 15,84
10 19,07 15,60

T. total [s] 191,80 157,01
T. me?dio [s] 19,18 15,70

4.3.5 Quinta versa?o: PNMPC calculando a resposta livre de
tempos em tempos, utilizando o DMC-Recursivo.

Nas simulac?o?es desta versa?o, o ca?lculo da resposta livre e? reali-
zado a cada 35 iterac?o?es. Os resultados das simulac?o?es sa?o apresentados
na Figura 18 e na Tabela 7.

Como a resposta livre nesta versa?o torna-se linear a cada 35
iterac?o?es, nota-se que o controlador realiza maior esforc?o para reagir
a?s perturbac?o?es tanto para refere?ncias inferiores a 1 m quanto para
refere?ncias superiores a 1 m.



85

Figura 18 – Simulac?a?o da quinta versa?o do PNMPC.

0 5 10 15 20 25
0

1

2

3

4

5

T empo [mi n]

N
iv

el
[m

] yr
y5

Perturbação de saída

Perturbação de entrada

(a) Sa??da para ref&gt;1m

0 0.5 1 1.5
0

0.5

1

Tempo [min]

N
iv

e
l [

m
]

y
r

y
5

Perturbação 
de saída

Perurbação de entrada

(b) Sa??da para ref&lt;1m

0 5 10 15 20 25
0

0.2

0.4

0.6

0.8

1

Tempo [min]

A
p
er
t.
V
a
lv
u
la

U5

(c) Ac?a?o de controle para ref&gt;1m

0 0.5 1 1.5
0

0.2

0.4

0.6

0.8

1

Tempo [min]

A
p

e
rt

.V
a

lv
u

la

U
5

(d) Ac?a?o de controle para ref&lt;1m

0 5 10 15 20 25
0

0.005

0.01

0.015

0.02

0.025

Tempo [min]

Q
in
[m

3
/
s]

Qin

(e) Perturbac?a?o para ref&gt;1m

0 0.5 1 1.5
0

0.01

0.02

Tempo [min]

Q
in

[m
3
/s

]

Q
in

(f) Perturbac?a?o para ref&lt;1m

0 5 10 15 20 25

-0.2

0

0.2

0.4

0.6

0.8

Tempo[min]

E
rr
o

Erro5 = yz ? ymod

(g) Sinais de Erro para ref&gt;1m

0 0.5 1 1.5

-0.4

-0.2

0

0.2

0.4

0.6

0.8

Tempo [min]

E
rr

o

Erro
5

= y
z

- y
mod

(h) Sinais de Erro para ref&lt;1m

Fonte: Pro?pria.



86

Tabela 7 – Tempo de execuc?a?o do algoritmo para a quinta versa?o do
PNMPC.

Execuc?a?o
T. execuc?a?o (s)

yr &gt; 1 m
T. execuc?a?o (s)

yr &amp;lt;1 m

1 29,44 28,81
2 29,99 28,21
3 30,00 28,02
4 29,23 28,26
5 29,07 28,46
6 29,05 28,37
7 29,02 28,11
8 29,05 28,90
9 29,09 28,83
10 29,49 28,18

T. total [s] 293,43 284,15
T. me?dio [s] 29,34 28,41

4.3.6 Sexta versa?o: PNMPC com reavaliac?a?o da matriz GP NMP C
e a resposta livre (DMC-Recursivo), conforme o erro de
predic?a?o.

A sexta versa?o trabalha com um valor de erro de predic?a?o ad-
miss??vel, o erro de predic?a?o e? o erro existente entre a sa??da e o modelo.
Esta versa?o foi aplicada no estudo de caso considerando um erro ad-
miss??vel de 0,017, ou seja, a resposta livre de forma recursiva e a matriz
GP NMP C sa?o calculados quando o erro se encontra fora da faixa ad-
miss??vel de erro. As respostas das simulac?o?es para esta versa?o sa?o apre-
sentadas na Figura 19 e na Tabela 8. Como pode-se observar na figura,
o controlador nesta versa?o, apresenta maior dificuldade na rejeic?a?o das
perturbac?o?es em comparac?a?o com a quinta versa?o.



87

Figura 19 – Simulac?a?o da sexta versa?o do PNMPC.

0 5 10 15 20 25
0

1

2

3

4

5

T empo [mi n]

N
iv

el
[m

] yr
y6

Perturbaçãoádeáentrada

Perturbaçãoádeásáida

(a) Sa??da para ref&gt;1m

0 0.5 1 1.5
0

0.5

1

Tempo [min]

N
iv

e
l [

m
]

y
r

y
6Perurbação de entrada

Perturbação 
de saída

(b) Sa??da para ref&lt;1m

0 5 10 15 20 25
0

0.2

0.4

0.6

0.8

1

Tempo [min]

A
p
er
t.
V
a
lv
u
la

U6

(c) Ac?a?o de controle para ref&gt;1m

0 0.5 1 1.5
0

0.2

0.4

0.6

0.8

1

Tempo [min]

A
p

e
rt

.V
a

lv
u

la

U
6

(d) Ac?a?o de controle para ref&lt;1m

0 5 10 15 20 25
0

0.005

0.01

0.015

0.02

0.025

Tempo [min]

Q
in
[m

3
/
s]

Qin

(e) Perturbac?a?o para ref&gt;1m

0 0.5 1 1.5
0

0.01

0.02

Tempo [min]

Q
in

[m
3
/s

]

Q
in

(f) Perturbac?a?o para ref&lt;1m

0 5 10 15 20 25
-0.2

0

0.2

0.4

0.6

0.8

Tempo[min]

E
rr
o

Erro6 = yz ? ymod

(g) Sinais de Erro para ref&gt;1m

0 0.5 1 1.5

-0.2

0

0.2

0.4

0.6

0.8

Tempo [min]

E
rr

o

Erro
6

= y
z

- y
mod

(h) Sinais de Erro para ref&lt;1m

Fonte: Pro?pria.



88

Tabela 8 – Tempo de execuc?a?o do algoritmo para a sexta versa?o do
PNMPC.

Execuc?a?o
T. execuc?a?o (s)

yr &gt; 1 m
T. execuc?a?o (s)

yr &amp;lt;1 m

1 27,53 23,40
2 27,70 23,19
3 27,66 24,30
4 27,56 23,03
5 27,45 22,90
6 27,66 23,02
7 27,48 22,82
8 27,70 23,05
9 27,68 22,95
10 27,79 23,00

T. total [s] 276,22 231,66
T. me?dio [s] 27,62 23,17

4.4 CONCLUSA?O

Neste cap??tulo, foram apresentadas seis alternativas de imple-
mentar o algoritmo PNMPC. Para avaliar o desempenho dos controla-
dores, estes foram aplicados em um estudo de caso.

Comparando os resultados obtidos na Figura 20, pode-se ob-
servar que os seis algoritmos implementados te?m uma resposta muito
similar. Apesar de que o algoritmo completo apresenta os melhores
resultados e todos conseguirem reagir a? perturbac?a?o adequadamente, a
diferenc?a entre eles e? o tempo de execuc?a?o. Isto pode ser atribu??do a? que
a na?o linearidade do processo e? suave. Assim, um estudo do compor-
tamento do processo pode levar a uma implementac?a?o com ganhos em
termos de tempo de processamento sem prejudicar de forma importante
o desempenho do controlador. No entanto, percebe-se que na medida
em que o modelo representa o processo com menos qualidade a resposta
a perturbac?a?o fica pior pelo que a escolha entre tempo de execuc?a?o ou
desempenho do controlador depende de cada processo, pode que neste
estudo de caso a diferenc?a possa ser aceita?vel, no entanto, em outro
processo a diferenc?a poderia ser impactante.



89

Figura 20 – Comparac?o?es das verso?es do PNMPC: sa??das, ac?o?es de
controle, perturbac?o?es e sinais dos erros.

0 5 10 15 20 25
0

1

2

3

4

5

Tempo[min]

N
iv
el
[m
] yr

y1
y2
y3
y4
y5
y6

(a) Sa??das para ref&gt;1m

0 0.5 1 1.5
0

0.5

1

1.5

Tempo[min]
N
iv
el
[m
]

yr
y1
y2
y3
y4
y5
y6

(b) Sa??das para ref&lt;1m

0 5 10 15 20 25
0

0.2

0.4

0.6

0.8

1

Tempo[min]

A
p
er
t.
V
a
lv
u
la

U1
U2
U3
U4
U5
U6

(c) Ac?o?es de controle para ref&gt;1m

0 0.5 1 1.5
0

0.2

0.4

0.6

0.8

1

Tempo[min]

A
p
er
t.
V
a
lv
u
la

U1
U2
U3
U4
U5
U6

(d) Ac?o?es de controle para ref&lt;1m

0 5 10 15 20 25
0

0.005

0.01

0.015

0.02

0.025

Tempo [min]

Q
in
[m

3
/
s]

Qin

(e) Perturbac?a?o para ref&gt;1m

0 0.5 1 1.5
0

0.01

0.02

Tempo [min]

Q
in

[m
3
/s

]

Q
in

(f) Perturbac?a?o para ref&lt;1m

Fonte: Pro?pria.



90

Como pode-se observar na Tabela 9 e na Tabela 10, conside-
rando as verso?es 2, 3, 4, 5, 6 e? poss??vel obter uma reduc?a?o do custo
computacional se comparado a? versa?o 1, o que era o esperado, ja? que
com cada uma das diferentes abordagens o nu?mero de iterac?o?es dos
ciclos de ca?lculo, ou seja, da matriz GP NMP C , do ca?lculo da variac?a?o
de controle ou da resposta livre sa?o reduzidos em comparac?a?o com a
primeira versa?o.

Tabela 9 – Tabela comparativa dos tempos de execuc?a?o para refere?ncias
superiores a 1 m.

Execuc?a?o 1a versa?o 2a versa?o 3a versa?o 4a versa?o 5a versa?o 6a versa?o

1 40,22 38,19 25,78 19,37 29,44 27,53
2 39,58 38,29 25,66 19,11 29,99 27,67
3 38,89 38,43 25,67 19,18 30,00 27,66
4 38,95 38,19 25,66 19,16 29,23 27,56
5 39,18 38,36 25,88 19,07 29,07 27,45
6 39,09 38,51 25,62 19,23 29,05 27,66
7 39,12 38,64 25,71 19,21 29,02 27,48
8 39,15 38,58 25,77 19,16 29,05 27,70
9 39,19 38,75 25,69 19,22 29,09 27,68
10 38,98 38,50 25,71 19,07 29,45 27,79

T. total [s] 392,35 384,44 257,17 191,80 293,43 276,22
T. me?dio [s] 39,23 38,44 25,72 19,18 29,34 27,62

Tabela 10 – Tabela comparativa dos tempos de execuc?a?o para re-
fere?ncias inferiores a 1 m.

Execuc?a?o 1a versa?o 2a versa?o 3a versa?o 4a versa?o 5a versa?o 6a versa?o

1 32,39 31,43 23,62 16,01 28,81 23,40
2 30,84 30,45 21,47 15,64 28,21 23,19
3 30,77 29,44 20,23 15,60 28,02 24,30
4 31,26 29,56 20,46 15,59 28,26 23,03
5 31,12 29,46 20,23 15,47 28,46 22,90
6 32,51 29,31 20,22 15,59 28,37 23,02
7 31,27 29,76 20,25 15,81 28,11 22,82
8 32,24 29,90 20,20 15,86 28,90 23,05
9 32,02 29,60 20,40 15,84 28,83 22,95
10 32,50 29,55 20,31 15,60 28,18 23,00

T. total [s] 316,92 298,46 207,39 157,01 284,15 231,66
T. me?dio [s] 31,69 26,85 20,74 15,70 28,41 23,17

Para avaliar o desempenho dos controladores, foram obtidos os
??ndices de desempenho MSE (Mean Squared Error ) e IAE (Integral of
the Absolute Magnitude of the Error ) para todas as verso?es do PNMPC
para valores de refere?ncias superiores a 1 m. Os ??ndices de desempenho



91

sa?o mostrados na Tabela 11. O que era esperado pode-se confirmar na
Tabela 11, a versa?o que apresentou melhor desempenho e? a primeira,
a qual possui a resposta livre na?o linear, a matriz GP NMP C calculada
em dois passos e fazendo uma me?dia (GP NMP C ) a cada iterac?a?o, faz
com que o sistema seja tratado com maior precisa?o.

Tabela 11 – I?ndices de desempenho do controlador das seis verso?es do
PNMPC para refere?ncias superiores a 1 m.

I. desempenho 1a versa?o 2a versa?o 3a versa?o 4a versa?o 5a versa?o 6a versa?o
MSE 0,0031 0,0040 0,0063 0,0085 0,0100 0,0096
IAE 2,58 3,40 4,56 4,77 5,89 5,07



92



93

Cap??tulo 5

CONTROLE PREDITIVO BASEADO EM
MODELO COM PASSO DE

ESTABILIDADE

Neste cap??tulo, apresenta-se uma outra estrate?gia para lidar com
erros nos ganhos, as constantes de tempos e principalmente erros de
atrasos de transporte nos modelos. A retroalimentac?a?o e? capaz de li-
dar com erros nos ganhos e nas constantes de tempo. No entanto, os
erros no atraso de transporte podem causar oscilac?o?es nas varia?veis do
processo e, em casos extremos, sa?o capazes de instabilizar a planta,
mesmo para sistemas esta?veis em malha aberta. Uma alternativa para
o tratamento dos erros de predic?a?o e? a aplicac?a?o de filtros no erro de
predic?a?o, com o objetivo de melhorar a estabilidade do sistema sob
controle e oferecer robustez na planta frente aos erros de modelo. Esse
conceito foi desenvolvido a partir das ideias do Preditor de Smith Fil-
trado, apresentado em Normey e Camacho (2007) e mostrado na Figura
21.

Da Figura 21 se obte?m a func?a?o de transfere?ncia em malha fe-
chada entre a sa??da e a perturbac?a?o e? dada pela expressa?o:

Y (s)

d (s)
= P (s)

(
1 ? C (s) P (s) F (s)

1 + C (s) Gn (s)

)
(5.1)

onde:
C (s) controlador;
P (s) planta real;
F (s) filtro;
Gn (s) modelo;
Y (s) sa??da da planta;
d (s) perturbac?a?o.



94

Figura 21 – Preditor de Smith Filtrado.

Fonte: (NORMEY; CAMACHO, 2007).

O projeto do filtro F (S) e? uma possibilidade de introduzir ro-
bustez e rejeic?a?o a? perturbac?a?o, entretanto, na?o se pode obter robustez
e rejeic?a?o a? perturbac?a?o simultaneamente (PLUCENIO et al., 2014).

Um outro trabalho aplicando o filtro no erro de predic?a?o, e? pro-
posto em Lima, Normey e Plucenio (2014), onde e? utilizada a estrate?gia
DMC-Recursivo apresentada no cap??tulo 2 na sec?a?o 2.2.3. E? poss??vel
filtrar o erro de predic?a?o separadamente e adiciona?-lo a? predic?a?o de
malha aberta yo:

y? (t + k | t) =
k?

i=1

gi? (t + k ? i)+yo (t + k | t)+F
(
z?1
)

(ym (t) ?yo (t | t))

(5.2)
No qual o erro do modelo e?:

e = ym(t) ?y0 (t |t) (5.3)

O efeito do filtro e? ana?logo ao me?todo utilizado no algoritmo
DTC-GPC descrito em Normey e Camacho (2007). A ide?ia de aplicar
um filtro no erro de predic?a?o para corrigir as predic?o?es pode ser apli-
cada a outros algoritmos MPC, como GPC, DMC e PNMPC, dentre as
te?cnicas de controle preditivo na?o linear proposto por Plucenio (2010).

Controladores onde o filtro e? projetado para robustez apresentam
um comportamento lento, na?o conseguindo rejeitar as perturbac?o?es.
Uma maneira de mostrar isso e? utilizando a expressa?o para o ca?lculo
da ac?a?o de controle nos algoritmos de controle MPCs. Utilizando uma
expressa?o cla?ssica do MPC para o algoritmo DMC (CAMACHO; BOR-



95

DONS, 2007), pode-se escrever o vetor de incremento de ac?a?o de controle
?u como:

?u = K (W ? F)
com

K =
(
GT RG + Q

)?1
GT R

F = Fsc + Ef

(5.4)

Onde

W vetor das refere?ncias;
G matriz dina?mica ou Jacobiana;
R matriz de ponderac?a?o do seguimento da refere?ncia;
Q matriz de ponderac?a?o no controle;
Fsc vetor da resposta livre sem correc?a?o;
Ef vetor do erro de predic?a?o filtrado.

O Erro de predic?a?o filtrado pode ser escrito como:

Ef (k) = ?Ef (k ? 1) + (1 ??) E (k) (5.5)
Onde escolhendo ? entre 0 e 1 (0 ? ? &amp;lt;1), obte?m-se o filtro discreto
projetado para garantir estabilidade em casos de erros no modelo de
predic?a?o para um caso SISO. O erro E (k) e? a diferenc?a entre o ve-
tor com a varia?vel controlada medida Y (k) e o vetor com a varia?vel
controlada predita Y? (k), mostrado na equac?a?o (5.6).

E (k) = Y (k) ? Y? (k) (5.6)
Substituindo as equac?o?es (5.5) e (5.6) nas expresso?es da equac?a?o

(5.4), a ac?a?o de controle pode ser escrita como:

?u = K
(
W ? Fsc ??Ef (k ? 1) ? (1 ??)

(
Y (k) ? Y? (k)

))
(5.7)

Considerando que o sistema atingiu o regime permanente, temos
que:

W = Y (k ? 1)
Y (k ? 1) = Fsc + E
Fsc = Y (k ? 1) ? E

(5.8)

Substituindo as expresso?es da equac?a?o (5.8) em (5.7) se tem a



96

equac?a?o (5.9):

?u = K
(

(1 ??) E ? (1 ??)
(
Y (k) ? Y? (k)

))
(5.9)

Normalmente, Y (k) ? Y? (k) seria igual a E no instante k em
regime permanente, o que levaria a ?u = 0. Entretanto, supondo que
no instante k ingresa uma perturbac?a?o na?o modelada d (k). Nesse caso
tem-se:

?u = K
(

(1 ??) E ? (1 ??)
(
Y (k) + d (k) ? Y? (k)

))

?u = K ((1 ??) E ? (1 ??) (E + d (k)))
?u = K ((1 ??) E ? (1 ??) E ? (1 ??) d (k))
?u = ?K (1 ??) d (k)

(5.10)

A ac?a?o de controle para atuar na perturbac?a?o d (k) e? calculada a partir
de (1 ??) d (k). Isto torna a resposta da rejeic?a?o a? perturbac?a?o extre-
mamente lenta quando ? e? grande. Entretanto, isto ocorre quando
se tem grandes erros no atraso de transporte utilizado no modelo de
predic?a?o.

A aplicac?a?o de um filtro no erro de predic?a?o e? uma alternativa
que visa modificar o erro de predic?a?o, melhorando a robustez frente aos
erros do modelo. Esta abordagem tem seus benef??cios, mas, um pro-
blema inevita?vel e? que tem-se que conhecer a priori o erro aproximado
do atraso de transporte para obter o melhor benef??cio com a te?cnica
de filtragem. Ale?m disso, muita filtragem (? grande) no sistema pode
resultar numa resposta mais lenta a perturbac?o?es.

Com base no resultado da ana?lise do comportamento do filtro
frente a perturbac?o?es, apresenta-se neste cap??tulo o me?todo proposto
por Plucenio et al. (2014), para o tratamento de erros de predic?a?o em
plantas esta?veis em malha aberta, utilizando o segundo me?todo de esta-
bilidade de Lyapunov. Deriva-se um sinal que e? somado a? predic?a?o, com
o objetivo de fornecer estabilidade e bom desempenho do controlador
frente a erros do modelo e perturbac?o?es inseridas no sistema.

Neste trabalho, apresenta-se a comparac?a?o do me?todo aplicando
o filtro no erro de predic?a?o e o me?todo proposto por Plucenio et al.
(2014). Nesta te?cnica, nenhum filtro e? utilizado. Em vez disso, o
algoritmo MPC com passo de estabilidade propo?e tratar o problema
em duas etapas:

1. Etapa de estabilidade; e

2. Etapa de ca?lculo da ac?a?o de controle.



97

Na etapa de estabilizac?a?o, um sinal e? calculado e adicionado
ao vetor do erro de predic?a?o, estabilizando a planta frente a erros de
modelagem e perturbac?o?es na?o modeladas inseridas no sistema. Na
etapa de ca?lculo da ac?a?o de controle, e? aplicado o erro modificado sobre
o ca?lculo do sinal de controle.

Esse cap??tulo esta? organizado da seguinte forma: na sec?a?o 5.1
apresenta-se os conceitos fundamentais que sera?o necessa?rios para a
compreensa?o da metodologia de ca?lculo desta te?cnica. Para ilustrar
melhor a aplicac?a?o desta te?cnica e? mostrado um exemplo de simulac?a?o
para um caso SISO. Na sec?a?o 5.2 sera?o apresentadas as simulac?o?es ob-
tidas aplicando o DMC-Recursivo com a te?cnica de filtragem no erro
de predic?a?o e com a te?cnica do passo de estabilidade, ambas aplica-
das num estudo de caso. O reator qu??mico com duas varia?veis mani-
puladas e duas varia?veis controladas, comumente visto nas indu?strias
petroqu??micas. Para demonstrar a efica?cia desta te?cnica, erros de mo-
delagens e perturbac?o?es na?o modeladas sera?o inseridos no sistema. Fi-
nalmente, na sec?a?o 5.3 sera?o apresentadas as respectivas concluso?es
deste cap??tulo.

5.1 PASSO DE ESTABILIDADE PARA COMPENSAC?A?O DE ER-
ROS NO MODELO DE PREDIC?A?O

O passo de estabilidade e? uma te?cnica que procura um sinal que
somado, ao erro verdadeiro, proporcione robustez e estabilidade em
plantas esta?veis em malha aberta com erros de modelo. Esta te?cnica
propo?e uma soluc?a?o onde a correc?a?o do erro de predic?a?o EL e? somado ao
vetor de erro verdadeiro E proporcionando melhor desempenho frente
a perturbac?o?es na?o modeladas, .

Uma primeira opc?a?o para obter EL e? utilizar p poss??veis diferen-
tes elementos. No entanto, isso pode trazer um elevado custo compu-
tacional. Assim, apresentam-se outras opc?o?es para o projeto do vetor
EL, conforme:

a) aplicando um horizonte de correc?a?o de erro pL = p ? ?p e ?p
elementos nulos, como se mostra na Figura 22 (a);

b) aplicando um horizonte de correc?a?o de erro pL e repetindo o u?ltimo
elemento do horizonte para todos os p?pL elementos seguintes,
como se mostra na Figura 22 (b);

c) usando o conceito de blocking, onde EL e? preenchido com nL grupo
de diferentes valores poss??veis, como se mostra na Figura 22 (c);



98

d) preenchendo o vetor de tamanho p??p com um u?nico valor de EL
e ?p elementos nulos, como se mostra na Figura 22 (d).

Figura 22 – Formas de implementar o vetor EL.

L
E

L
p

pp p??

(a)

L
E

L
p

pp p??

(b)

L
E 4Lp ?

p p? ? p

(c)

L
E 1

L
p ?

p p? ? p

(d)

Fonte: (PLUCENIO et al., 2014).

Para evitar que o requisito de estabilidade perturbe o seguimento
da refere?ncia quando se tem EL definido em todos os elementos p, e?
importante ter alguns dos u?ltimos componentes de EL nulos. Dessa
forma, faz-se com que a correc?a?o total convirja para aquela utilizada
pelo DMC-Recursivo no final do horizonte de predic?a?o.

Qualquer que seja a opc?a?o escolhida dentre as mencionadas ante-
riormente, o vetor final de estabilizac?a?o da correc?a?o do erro e? expresso
por:

Es = E + MEL (5.11)

onde:

EL: e? o vetor com todas correc?o?es do erro de Lyapunov das varia?veis

controladas
[
E1L E

2
L . . . E

p
L

]T
;

E: e? o vetor com todos os erros verdadeiros das varia?veis controladas[
E1 E2 . . . Ep

]T
;

Es: e? o vetor com todos os erros modificados;



99

M: e? uma matriz com dimensa?o p x p. E? composto de uns e zeros, de
tal maneira que implementa as estrate?gias mostradas na Figura
22.

Para a obtenc?a?o do vetor EL, aplica-se o segundo me?todo de
Lyapunov para estabilidade. Esse me?todo baseia-se na analogia de
uma func?a?o de Lyapunov V (x) com energia ou potencial. Se x = 0 e e?
um ponto de equil??brio, enta?o se existe um V (x) tal que:

V (x) &gt; 0 para qualquer x 6= 0 e
V (x) = 0 so? para x = 0

(5.12)

Enta?o, se:
dV (x)

dt
? 0 (5.13)

x = 0 e e? um ponto de equil??brio esta?vel no sentido de Lyapunov.

Se
dV (x)

dt
? 0 e dV (x)

dt
= 0 somente quando x = 0 o sistema e? assintoti-

camente esta?vel. Este e? um resultado muito bem aceito e a base para
muitos estudos de estabilidade (MONTEIRO, 2006).

Para plantas esta?veis em malha aberta se tem que o sistema
esta? em equil??brio quando ?u = 0. A instabilidade pode ser causada
pela ac?a?o de controle devido a erros do modelo de predic?a?o, e? natural
considerar como uma func?a?o de Lyapunov:

L =
1

2
?uT ?u (5.14)

Observe que L e? uma func?a?o Lyapunov candidata, va?lida desde
que ?u = 0 seja a condic?a?o de equil??brio:

L (0) = 0 e
L &gt; 0 para qualquer ?u 6= 0 (5.15)

Considerando um caso irrestrito, onde:

?u = K (W ? F)

K =
(
GT RG + Q

)?1
GT R

F = Fsc + E + MEL

(5.16)

Na equac?a?o (5.16), W representa o vetor de trajeto?rias desejadas
dentro do horizonte de predic?a?o, F e? a resposta livre corrigida no ho-
rizonte de predic?a?o, R e Q sa?o as matrizes de ponderac?a?o do set-point



100

e de supressa?o de movimento, Fsc e? a resposta livre sem correc?a?o ao
longo do horizonte de predic?a?o p, E e? o vetor do erro de predic?a?o no
instante atual, EL e? o vetor do erro de estabilidade de Lyapunov, que
e? calculado para corrigir o erro de predic?a?o.

A fim de assegurar estabilidade, deve-se cumprir ?L
?t
? 0. Em

que ?L
?t

pode ser calculado como:

?L

?t
=

?L

??u

??u

?EL

?EL
?t

(5.17)

ou

?L

?t
= ?uT (?KM) ?EL

?t
(5.18)

Fazendo substituic?o?es:

?L

?t
= ?(W ? Fsc ? E ? MEL)T KT KM

?EL
?t

(5.19)

O termo ?EL
?t

pode ser reescrita como EkL ? E
k?1
L .

Assim, a expressa?o final para a equac?a?o (5.19) torna-se:

?L
?t

= 1
2
ETL?LEL ? 12 ?

T
LEL +

1
2
D

?L = M
T KT KM

A = W ? Fsc ? E

B = MT KT K

?L = ?LE
k?1
L + BA

D = AT BT Ek?1L

(5.20)

Tendo a expressa?o para ?L
?t

, pode-se formular o seguinte pro-
blema de otimizac?a?o:

min
EL

J

sujeito a :

J = 1
2
ETL?LEL ? 12 ?

T
LEL +

1
2
fP D (EL)

(5.21)

Os dois primeiros termos da equac?a?o (5.21) representam a ex-



101

pressa?o ?L
?t

. A ide?ia e? que o valor encontrado de EL obrigue o termo
?L
?t
? 0. Pore?m, isto deve ter um limite, e essa e? a raza?o da pre-

senc?a do termo fDP (EL). Uma func?a?o positiva definida sobre EL deve
ser concebida com o objetivo de se contrapor ao termo negativo de J.
Ale?m disso, a func?a?o deve incluir ponderac?o?es para ajustar uma melhor
sintonia do controlador. A primeira func?a?o candidata e?:

ETLM
T SLMEL (5.22)

Os valores da diagonal da matriz de ponderac?a?o SL atuam com o obje-
tivo de suprimir EL, a fim de evitar que o valor ?L seja negativo. No
entanto, o papel desta func?a?o e? limitado a suprimir os valores negati-
vos em J e na?o contribui para qualquer outro atributo do sistema sob
controle.

Outra func?a?o candidata definida positiva e?:

(
Y? ? W

)T
SL

(
Y? ? W

)
(5.23)

onde

Y? = Fsc + E + MEL + GK (W ? (Fsc + E + MEL)) (5.24)

O objetivo desta func?a?o e? suprimir os valores negativos de J, estabe-
lecendo uma relac?a?o entre o principal objetivo, que e? evitar que ?L

?t
seja negativo, garantindo o seguimento da refere?ncia. Os elementos
positivos da matriz diagonal SL sa?o ajustados a fim de obter EL que
proporcione estabilidade e seguimento da refere?ncia para o sistema sob
controle.

Finalmente, o problema de otimizac?a?o quadra?tica para obter EL



102

e? formulado como:

min
EL

J

sujeito a :

J = 1
2
ETL?LEL ? 12 ?

T
LEL

?L = M
T
(
KT K + ZT SLZ

)
M

Z = GK ? Ip×p

?TL = ?LE
k?1
L + BA + M

T ZT SLZA

(5.25)

Para o caso sem restric?o?es, o valor do vetor EL que minimiza J
e?:

EL = 0, 5?
?1
L ?L (5.26)

A matriz ?L sera? definida positiva, desde que a matriz de ponderac?a?o
diagonal SL seja escolhida com valores positivos.

Um aspecto interessante desta metodologia e? que restric?o?es em
?u e u podem ser atendidas na etapa de estabilidade. Introduzindo
restric?o?es no sistema, os seguintes termos se podem escrever como:

?u ? B e? equivalente a :

K (W ? Fsc ? E ? MEL) ? B

ou :

?KMEL ? B ? K (W ? Fsc ? E)

(5.27)

O vetor u pode ser escrito como: u = uk?11mh×1 + TI ?u, onde
TI e? a matriz Toeplitz integradora, e 1mh×1 e? um vetor com cada
componente igual a 1 para um caso SISO como e? mostrado a seguir:



103

u ? C e? equivalente a :

uk?11mh×1 + TI K (W ? Fsc ? E ? MEL) ? C

ou :

TI KMEL ? C ? uk?11mh×1 ? TI KA

A = W ? Fsc ? E

(5.28)

Ao introduzir estas restric?o?es na programac?a?o quadra?tica, dada
pela equac?a?o (5.25), o valor de EL obtido pode ser usado na equac?a?o
(5.29) para derivar ?u.

?u = K (W ? F)

F = Fsc + E + MEL

(5.29)

O vetor ?u obtido provera? estabilidade ao sistema respeitando
as restric?o?es impostas em ?u e u.

Para ilustrar a aplicac?a?o desta te?cnica e analisar o caso de er-
ros de modelagem no atraso, e? empregado um exemplo apresentado
em Normey e Camacho (2007) e mostrado na Figura 23. No exemplo
tem-se um sistema de aquecimento de a?gua onde w e? a resiste?ncia en-
carregada de aquecer a agua dentro do tanque e na sa??da do tanque
tem-se uma tubulac?a?o com um sensor de temperatura instalado a uma
certa distancia distancia do tanque. Esta distancia gera um atraso de
transporte L medido em minutos, sendo que L = 6 min.

A func?a?o de transfere?ncia do sistema de primeira ordem com
atraso e? apresentada na equac?a?o (5.30).

Pn (s) =
e?Ls

2s + 1
(5.30)

Levando em conta o atraso e a dina?mica do processo, considera-
se um tempo de amostragem Ts = 0, 2 min. Dessa forma, a func?a?o de
transfere?ncia discreta e? mostrada na equac?a?o (5.31).

Pn (z) =
0, 095z?dn

z ? 0, 905 (5.31)

Para controlar esse processo, parametriza-se um controlador DMC-



104

Figura 23 – Esquema do tanque de aquecimento de a?gua.

TT

F Tanque

w

Fonte: Modificado de (NORMEY; CAMACHO, 2007).

Recursivo com horizonte de predic?a?o p = 80, horizonte de controle
mh = 10, horizonte de modelo N = 100, ponderac?a?o no seguimento da
refere?ncia ? = 0, 01 e ponderac?a?o no esforc?o de controle ? = 1.

Inicialmente implementou-se o DMC-Recursivo para controlar o
tanque de aquecimento de a?gua considerando dn = 0 tanto na planta
real quanto no modelo, onde o modelo e? a sa??da predita, como se mostra
na Figura 24.

Em seguida e? implementado o DMC-Recursivo considerando dn = 30
tanto na planta quanto no modelo, como se mostra na Figura 25.

Os dados das sa??das preditas (ypred) da Figura 24 e da Figura 25
foram armazenadas e apresentadas na Figura 26. Nessa figura percebe-
se a diferenc?a existente entre a sa??da predita sem o atraso e a sa??da
predita com o atraso. Com esses dados, foi calculada a diferenc?a entre
ambas sa??das (dif = ypred sem atraso?ypred com atraso) mostrada na
Figura 26. O dif, e? o sinal com a qual pode-se corrigir a diferenc?a entre
a predic?a?o sem o atraso e a predic?a?o com o atraso, sendo que e? o sinal
com o qual poderia-se corrigir erros de modelagens no atraso.



105

Figura 24 – Simulac?a?o do sistema sem atraso e sem incertezas no mo-
delo.

Tempo[min]
0 50 100 150 200 250

T
e

m
p

e
ra

tu
ra

1

1.2

1.4

1.6
DMCO-ORECURSIVO

Ref

PlantaOreal

Modelo

Tempo[min]
0 50 100 150 200 250

C
o

n
tr

o
le

1

1.2

1.4

1.6
u

Controle

Fonte: pro?pria.

Figura 25 – Simulac?a?o do sistema com atraso e sem incertezas no mo-
delo.

Tempo[min]
0 50 100 150 200 250

T
e

m
p

e
ra

tu
ra

1

1.2

1.4

1.6
DMCO-ORECURSIVO

Ref

PlantaOreal

Modelo

Tempo[min]
0 50 100 150 200 250

C
o

n
tr

o
le

1

1.2

1.4

1.6
u

Controle

Fonte: pro?pria.



106

Figura 26 – Sa??das preditas com o atraso e sem o atraso.

Tempov[min]
0 50 100 150 200 250

S
a

íd
a

s

1

1.1

1.2

1.3

1.4

1.5
SaídasvpreditasvDMCv-vRecursivo

y
pred

comvatraso

y
pred

semvatraso

Ref

Fonte: pro?pria.

Figura 27 – Diferenc?a entre as sa??das predita com o atraso e sem o
atraso.

Tempot[min]
0 50 100 150 200 250

0

0.05

0.1

0.15

0.2

0.25

0.3
Dif.tDMCt-tRecursivo

dift=ty
pred

semtatarsot-ty
pred

comtatraso

Fonte: pro?pria.



107

A seguir, sa?o aplicadas as te?cnicas DMC-Recursivo com filtro
no erro de predic?a?o e DMC-Recursivo com passo de estabilidade. Nas
simulac?o?es foi considerado que a planta real na?o possui atraso e que o
modelo possui um atraso de 30.

Na Figura 28, mostra-se a resposta obtida na simulac?a?o apli-
cando a te?cnica DMC-Recursivo com filtro no erro de predic?a?o. Nessa
figura, apresenta-se a sa??da da planta, a sa??da do modelo e o sinal de
controle. Os para?metros de sintonia usados nesse controlador sa?o: ho-
rizonte de predic?a?o p = 80, horizonte de controle mh = 10, horizonte de
modelo N = 100, ponderac?a?o no seguimento da refere?ncia ? = 0, 001,
ponderac?a?o no esforc?o de controle ? = 50 e filtro no erro de predic?a?o
? = 0, 95.

Figura 28 – DMC-Recursivo com filtro no erro de predic?a?o aplicando
uma incerteza de 6 min (dn =30).

Tempo[min]
0 50 100 150 200 250

T
e

m
p

e
ra

tu
ra

1

1.5

2
DMC-RECURSIVO(ErroPPred.Pfiltrado)

Ref

PlantaPreal

Modelo

Tempo[min]
0 50 100 150 200 250

C
o

n
tr

o
le

1

1.5

2
u

Controle

Fonte: pro?pria.

Na Figura 29, mostra-se a resposta obtida aplicando a te?cnica
DMC-Recursivo com passo de estabilidade. Nessa figura, apresenta-se a
sa??da da planta, a sa??da do modelo e o sinal de controle. Os para?metros
de sintonia usados nesse controlador sa?o: horizonte de predic?a?o p = 80,
horizonte de controle mh = 10, horizonte de modelo N = 100, pon-
derac?a?o no seguimento da refere?ncia ? = 0, 01, ponderac?a?o no esforc?o
de controle ? = 40, ponderac?a?o de supressa?o para EL, PL = 3800 e
ponderac?a?o de supressa?o para EL, SL = 1.



108

Figura 29 – DMC-Recursivo com passo de estabilidade aplicando uma
incerteza de 6 min (dn =30).

Tempo[min]
0 50 100 150 200 250

T
e

m
p

e
ra

tu
ra

1

1.2

1.4

1.6
DMC-RECURSIVO COM PASSO DE ESTABILIDE

Referência

Planta real

Modelo

Planta real + E
L

Tempo[min]
0 50 100 150 200 250

C
o

n
tr

o
le

1

1.2

1.4

1.6
u

Controle

Fonte: pro?pria.

Na Figura 28 e na Figura 29, observa-se que as duas te?cnicas
conseguem seguimento de refere?ncia frente a incerteza inserida no mo-
delo. No entanto, pode-se perceber que a te?cnica do DMC-Recursivo
com passo de estabilidade consegue alcanc?ar o regime permanente com
maior rapidez comparada com a te?cnica DMC-Recursivo com filtro no
erro de predic?a?o.

Por u?ltimo, na Figura 30 sa?o comparados os fatores de correc?a?o
do DMC-Recursivo com filtro no erro de predic?a?o (Ef ) e do DMC-
Recursivo com passo de estabilidade (EL) com o fator de correc?a?o ob-
tido com o DMC-Recursivo (dif). Nessa figura pode-se observar que
a sinal que mais se assemelha ao dif e? o fator de correc?a?o obtido apli-
cando a te?cnica passo de estabilidade.

Como normalmente o erro verdadeiro e? somado a? predic?a?o, a
correc?a?o e? obtida fazendo a diferenc?a entre a planta real e o modelo de
predic?a?o apresentado na equac?a?o (5.32)

E (k) = Y (k) ? Y? (k) (5.32)
Na realidade, o que acontece ao aplicar a te?cnica com passo de

estabilidade e? que ela calcula uma correc?a?o adicional EL, que somada ao



109

Figura 30 – Fatores de correc?a?o do DMC-Recursivo com passo de esta-
bilidade, DMC-Recursivo com filtro no erro de predic?a?o e dif.

Tempod[min]
0 50 100 150 200 250

-0.3

-0.2

-0.1

0

0.1

0.2

0.3

0.4
Dif.dDMCd-dRecursivodvsdFatorddedcorreçãodE

L
edE

f

difd=dy
pred

semdatarsod-dy
pred

comdatraso

cor
E

f

parady
pred

cor
E

L

parady
pred

Fonte: pro?pria.

erro de predic?a?o verdadeiro E fornece estabilidade no sistema. Assim,
pode-se imaginar que a te?cnica passo de estabilidade “modifica” a sa??da
da planta Y? (k) como se mostra na equac?a?o (5.33).

Y? (k) = Y (k) + EL (k) (5.33)

A resposta desta modificac?a?o e? representada com a linha verde
na Figura 29. Se na?o houvesse EL o sistema iria oscilar, pois ao tentar
realizar a correc?a?o aplicando o erro verdadeiro o sistema aplicaria uma
ac?a?o de controle maior achando que na?o atingiu a refere?ncia. EL ”en-
gana”o algoritmo ao fazer com que a planta se parec?a com o modelo de
predic?a?o sem atraso. Considerando as equac?o?es (5.32) e (5.33), tem-se:

Y? (k) ? Y? (k) = Y (k) + EL ? Y? (k)
Y? (k) ? Y? (k) = EL (k) + E (k)

Pelo que, o erro que vai ser somado a? predic?a?o na?o e? so? o erro ver-
dadeiro, agora e? a soma do erro verdadeiro como o EL, como mostrado
na equac?a?o (5.34).



110

Y? (k) = Y? (k) + EL (k) + E (k) (5.34)

5.2 ESTUDO DE CASO

Para demonstrar a efica?cia da estrate?gia aplicando o passo de es-
tabilidade proposto nesse trabalho, considera-se o controle de um reator
de tanque agitado, comumente encontrado na indu?stria petroqu??mica.

Nesta sec?a?o, os resultados de simulac?a?o sa?o apresentados. As
comparac?o?es da te?cnica de filtragem e da te?cnica aplicando o passo de
estabilidade sa?o implementadas no controlador com estrate?gia DMC-
Recursivo. As respostas das simulac?o?es sa?o comparadas utilizando o
??ndice de desempenho do controlador e pela verificac?a?o da resposta de
simulac?a?o aplicados no reator de tanque agitado.

Dois controladores DMCs-Recursivos sa?o configurados. O pri-
meiro controlador aplicando a te?cnica de filtragem no erro de predic?a?o
mostrado na Tabela 12, e o outro controlador aplicando a te?cnica passo
de estabilidade mostrado na Tabela 13. Ambos implementados no re-
ator de tanque agitado apresentado em Normey e Camacho (2007), e
mostrado na Figura 31.

Tabela 12 – Para?metros de sintonia do controlador DMC recursivo com
filtragem no erro de predic?a?o

Para?metros Definic?a?o Valor

p1 horizonte de predic?a?o para y1 (k) 50
p2 horizonte de predic?a?o para y2 (k) 40
N1 horizonte de modelo para y1 (k) 70
N2 horizonte de modelo para y2 (k) 70
mh1 horizonte de controle para u1 (k) 10
mh2 horizonte de controle para u2 (k) 10
?1 ponderac?a?o no controle 0,2
?2 ponderac?a?o no controle 1
?1 ponderac?a?o no seguimento da refere?ncia 0,01
?2 ponderac?a?o no seguimento da refere?ncia 0,1
?1 filtro no erro de predic?a?o 0,75
?2 filtro no erro de predic?a?o 0,75

O modelo e? descrito na seguinte matriz de transfere?ncia (as cons-
tantes de tempo sa?o expressos em minutos).



111

Tabela 13 – Para?metros de sintonia do controlador DMC-Recursivo
com passo de estabilidade.

Para?metros Definic?a?o Valor

p1 horizonte de predic?a?o para y1 (t) 50
p2 horizonte de predic?a?o para y2 (t) 40
N1 horizonte de modelo para y1 (t) 70
N2 horizonte de modelo para y2 (t) 70
mh1 horizonte de controle para u1 (t) 10
mh2 horizonte de controle para u2 (t) 10
?1 ponderac?a?o no controle 0,01
?2 ponderac?a?o no controle 2
?1 ponderac?a?o no seguimento da refere?ncia 0,01
?2 ponderac?a?o no seguimento da refere?ncia 0,1
PL1 Ponderac?a?o de supressa?o para EL 0,1
PL2 Ponderac?a?o de supressa?o para EL 0,1
SL1 Ponderac?a?o de supressa?o para EL 1000
SL2 Ponderac?a?o de supressa?o para EL 1000

Figura 31 – Esquema do Reator de tanque agitado.

TT

Reator

Alimentação

Refrigerante

Efluente

Fonte: (NORMEY; CAMACHO, 2007)



112

[
Y1 (s)
Y2 (s)

]
=

?
??

e?0,24s

1+0,7s
5e?0,24s

1+0,3s

e?0,09s

1+0,5s
2e?0,09s

1+0,4s

?
??
[
U1 (s)
U2 (s)

]
(5.35)

As varia?veis manipuladas U1 (s) e U2 (s) da equac?a?o (5.35) representam
na Figura 31 a vaza?o de alimentac?a?o e a vaza?o do fluido refrigerante
no revestimento. As varia?veis controladas Y1 (s) e Y2 (s) sa?o a concen-
trac?a?o do efluente e a temperatura do reator, respectivamente. Como
observado na matriz (5.35), existe influe?ncia entre as varia?veis contro-
ladas e manipuladas, ja? que existe acoplamento no sistema.

Utilizando um tempo de amostragem Ts = 0, 03 min, o modelo
discretizado e? descrito pela expressa?o (5.36).

[
y1 (k)
y2 (k)

]
=

?
??

0,0420z?1

1?0,9580z?1 z
?8 0,4758z?1

1?0,9048z?1 z
?8

0.0582z?1

1?0,9418z?1 z
?3 0,1445z?1

1?0,9277z?1 z
?3

?
??
[
u1 (k)
u2 (k)

]
(5.36)

Os tempos mortos neste caso sa?o causadas por efeitos de medic?a?o.
O tempo morto na temperatura de sa??da y2 (k) e? o tempo necessa?rio
para transportar o fluido para o sensor. O tempo morto na concen-
trac?a?o y1 (k) e? causada pelo efeito de transporte e o tempo requerido
pelo analisador. Os tempos mortos m??nimos sa?o: d1 = 8 (para as
func?o?es de transfere?ncia da sa??da 1, FT11 e FT12) e d2 = 3 (para as
func?o?es de transfere?ncia da sa??da 2, FT21 e FT22).

Implementando a te?cnica do passo de estabilidade notou-se que
considerando so? a matriz de ponderac?a?o SL, o valor desta tinha que
ser muito pequeno, ja? que ?L da equac?a?o (5.25) resultava em valores
muito pequenos. Enta?o, foi considerada a incorporac?a?o de uma outra
matriz de ponderac?a?o denominada PL, em ?L e B, como se mostra na
equac?a?o (5.37):

B = MT KT PLK
?L = M

T
(
KT PLK + Z

T SLZ
)
M

(5.37)



113

A Figura 32 mostra as respostas ao degrau com seus respectivos
atrasos de transporte para cada func?a?o de transfere?ncia. Onde, g11 e? a
resposta ao degrau da func?a?o de transfere?ncia que relaciona y1 com u1,
g12 e? a resposta ao degrau da func?a?o de transfere?ncia que relaciona y1
com u2, g21 e? a resposta ao degrau da func?a?o de transfere?ncia que rela-
ciona y2 com u1 e g22 e? a resposta ao degrau da func?a?o de transfere?ncia
que relaciona y2 com u2,

Figura 32 – Resposta ao degrau das func?o?es de transfere?ncia.

0 50 100 150
0

0.5

1
g11

Resposta ao 
degrau FT11

0 50 100 150
0

2

4

6
g12

Resposta
ao degrau FT12

0 50 100 150
0

0.5

1
g21

Resposta
ao degrau FT21

0 50 100 150
0

0.5

1

1.5

2
g22

Resposta ao 
degrau FT22

Fonte: pro?pria.

Na Figura 33, mostra-se as incertezas entre a planta real e o
modelo de predic?a?o aplicadas a cada uma das func?o?es de transfere?ncia
para o atraso de transporte e o ganho. Na figura da esquerda sa?o
apresentados os atrasos de transporte utilizados no modelo de predic?a?o
e os utilizados para simular a planta real, a? direita, mostram-se os
ganhos da planta real e do modelo de predic?a?o. Como observado nessa
figura, a dista?ncia existente entre o quadrado e o c??rculo representa a
incerteza inserida no sistema. As incertezas no atraso de transporte
sa?o: para FT11 0%, FT12 100%, FT21 80% e FT22 0%. A incerteza
aplicada nos ganhos para cada uma das func?o?es de transfere?ncia e? de



114

75%.

Figura 33 – Incertezas inceridas no atraso de transporte e no ganho.

FT11 FT12 FT21 FT22
0

2

4

6

8

10

12
Erros nos atrasos

Atr. usados predição
Atrasos reais simulados

FT11 FT12 FT21 FT22
0

2

4

6

8

10

12
Erros nos ganhos

Ganhos usados predição
Ganhos reais simulados

Fonte: pro?pria.

Na Figura 34 apresentam-se os resultados obtidos com a aplicac?a?o
da te?cnica passo de estabilidade, com erros entre a planta real e o mo-
delo de predic?a?o conforme mostrados na Figura 33. Na Figura 34, uma
perturbac?a?o na?o modelada e? introduzida no minuto 450, mantendo-se
ate? o minuto 1050. Observa-se que aplicando a te?cnica com o passo de
estabilidade obte?m-se um melhor seguimento de refere?ncia, comparado
com a utilizac?a?o de filtragem no erro de predic?a?o, quando existem er-
ros de modelo tanto para o ganho como para o atraso de transporte.
Por outro lado, a resposta na rejeic?a?o da perturbac?a?o e? mais ra?pida
aplicando o passo de estabilidade, ja? que o uso de muito filtragem no
sistema causa lentida?o na rejeic?a?o da perturbac?a?o conforme ja? mostrado
na introduc?a?o do presente cap??tulo.



115

Figura 34 – Resultados de simulac?a?o

Tempoy[min]
0 200 400 600 800 1000 1200 1400 1600

S
a

íd
a

s

0.2

0.4

0.6

0.8
Variáveisycontroladas

Ref
1

Ref
2

y
1

UE
L
P

y
2

UE
L
P

y
1

UFP

y
2

UFP

Tempoy[min]y
0 200 400 600 800 1000 1200 1400 1600

C
o

n
tr

o
le

0

0.1

0.2
Variáveisymanipuladas

U
1

UE
L
P

U
2

UE
L
P

U
1

UFP

U
2

UFP

Perturbaçãoyentrando
y

2
UE

L
P

y
1
UFP

U
1
UE

L
P

U
1
UFP

U
2
UFP

U
2
UE

L
P

Perturbaçãoysaindo

y
2
UE

L
P y

2
UFP

Na Figura 35 apresenta uma comparac?a?o dos erros de predic?a?o
obtidos com a aplicac?a?o de filtro e com a te?cnica passo de estabilidade.
Apresentam-se o erro de predic?a?o filtrado para a varia?vel y1 (k) e o pri-
meiro componente do vetor EL, EL (1), somado com o erro verdadeiro
de y1 (k). O comportamento do sinal do erro aplicando o passo de es-
tabilidade para a varia?vel controlada y1 (k), e? muito mais agressivo do
que o sinal do erro filtrado, de modo que compensa o erro de tempo
morto no instante da mudanc?a da refere?ncia. Como esperado, os erros
no sistema em regime permanente coincidem.

As Figuras 36, 37, 38 e 39 mostram em detalhes as respostas
obtidas aplicando DMC-Recursivo com passo de estabilidade e DMC-
Recursivo com filtro no erro de predic?a?o nos intervalos onde sa?o inseri-
das as perturbac?o?es. Com o objetivo de medir a velocidade de rejeic?a?o
da perturbac?a?o, foi considerado um tempo de acomodac?a?o de 5% repre-
sentado com as linhas tracejadas de cor preto. Na Figura 36, no minuto
450 tem-se uma perturbac?a?o entrando, observa-se que aplicando filtro
no erro de predic?a?o na sa??da y1(k), foi preciso de 201 min para reagir a?
perturbac?a?o. No entanto, aplicando o passo de estabilidade foi preciso
de 62 min, e? dizer, aplicando a te?cnica passo de estabilidade obteve-



116

Figura 35 – Comparac?a?o dos erros Ef frente a EL

Tempo [min]
100 200 300 400

E
r.

0.5

0.55

0.6

0.65

0.7

0.75

0.8
Erros

E
L
(1) y

1
+E y

1

E
f
y

1

se uma resposta tre?s vezes mais ra?pida em comparac?a?o com a te?cnica
aplicando o filtro no erro de predic?a?o. Algo similar acontece na Figura
37, no minuto 1050 a perturbac?a?o sai do sistema. Nessa figura pode-se
observar que a resposta aplicando o passo de estabilidade e? duas vezes
mais ra?pida que a resposta obtida aplicando o filtro no erro de predic?a?o.

Nas Figuras 38 e 39, observa-se o efeito causado pelo acopla-
mento existente no sistema. Nessas figuras sa?o mostradas a resposta
da sa??da y2(k) que e? afetada pelas perturbac?o?es inseridas em y1(k).
Tambe?m observa-se que a resposta do sistema e? mais ra?pida aplicando
o passo de estabilidade em comparac?a?o com o filtro no erro de predic?a?o.



117

Figura 36 – Resultados de simulac?a?o

Tempoy[min]
400 450 500 550 600 650 700 750 800

S
a

íd
a

0.4

0.5

0.6

0.7

Variávelycontrolada
Ref

1

y
1

YE
L
3

y
1

YF3

X:y651
Y:y0.63

X:y512
Y:y0.63

X:y450
Y:y0.5945

Figura 37 – Resultados de simulac?a?o

TempoR[min]
950 1000 1050 1100 1150 1200 1250 1300 1350

S
a

íd
a

0.4

0.5

0.6

0.7

VariávelRcontrolada
Ref

1

y
1

XE
L
:

y
1

XF:

X:R1050
Y:R0.599 X:R1250

Y:R0.57

X:R1150
Y:R0.5967

Figura 38 – Resultados de simulac?a?o

Tempoy[min]
450 500 550 600 650 700

S
a

íd
a

0.2

0.25

0.3

0.35
Variávelycontrolada

Ref
2

y
2

YE
L
1

y
2

YF1

X:y450
Y:y0.3016

X:y520
Y:y0.285

X:y590
Y:y0.285



118

Figura 39 – Resultados de simulac?a?o

TempoE[min]
1050 1100 1150 1200 1250 1300

S
a

íd
a

0.25

0.3

0.35
VariávelEcontrolada

Ref
2

y
2

(E
L
)

y
2

(F)
X:E1050
Y:E0.2999

X:E1130
Y:E0.315

X:E1190
Y:E0.315

5.3 CONCLUSO?ES

Neste cap??tulo, apresentou-se outra opc?a?o para lidar com erros
de modelagem em plantas esta?veis em malha aberta, que e? baseado no
segundo me?todo de Lyapunov para a estabilidade. O passo de estabi-
lidade modifica o erro de predic?a?o futuro de forma otimizada, com o
objetivo de proporcionar estabilidade no sistema. Com o intuito de pro-
ver estabilidade, o algoritmo encontra a correc?a?o necessa?ria a? predic?a?o.

Conforme mostra a Figura 34 o tempo necessa?rio para a te?cnica
passo de estabilidade trazer y1 (k) a? refere?ncia, e? 1/3 do tempo utili-
zado pela te?cnica de filtragem quando uma perturbac?a?o na?o modelada
perturba o sistema. A te?cnica passo de estabilidade apresentou um
desempenho superior em comparac?a?o com o me?todo de filtragem do
erro de predic?a?o. Isso foi verificado tanto no seguimento de refere?ncia
como na rejeic?a?o das perturbac?o?es na?o modeladas conforme se constata
com os ??ndices de desempenho dos controladores MSE apresentados na
Tabela 14.

Tabela 14 – I?ndice de desempenho do controlador.
Estrate?gia MSE1 MSE2

DMCF 1020, 00 284,90
DMCEL 590,66 140,31

Este e? um resultado interessante, pois em muitos processos prin-
cipalmente nas a?reas de petro?leo e ga?s, a maioria das varia?veis afetadas
por perturbac?o?es na?o modeladas tem um impacto econo?mico impor-



119

tante que afetam diretamente no desempenho do processo. Quanto
mais tempo se encontram fora das faixas aceita?veis de operac?a?o, maior
e? a perda econo?mica.



120



121

Cap??tulo 6

CONSIDERAC?O?ES FINAIS

Esse u?ltimo cap??tulo conclui a dissertac?a?o, sintetizando as con-
tribuic?o?es desse trabalho e discutindo os resultados obtidos. A partir
dos resultados alcanc?ados, um conjunto de trabalhos pode ser conside-
rado. Assim, sugesto?es e direc?o?es para trabalhos futuros tambe?m sa?o
indicadas.

Para alcanc?ar os objetivos propostos nesse trabalho, foi reali-
zado, em primeiro lugar, um levantamento das pesquisas realizadas
sobre os algoritmos de controle preditivo linear e na?o linear. Como
resultados das pesquisas, este trabalho foi dividido em duas partes.
Uma primeira parte envolve o estudo da te?cnica PNMPC e na segunda
parte, foi realizado o estudo de te?cnicas usadas para sistemas que apre-
sentam incertezas no modelo de predic?a?o, principalmente no atraso de
transporte, onde e? apresentado o MPC com passo de estabilidade.

A te?cnica PNMPC foi escolhida como uma boa opc?a?o para o
tratamento de sistemas na?o lineares por possuir uma boa relac?a?o de-
sempenho, velocidade e simplicidade na implementac?a?o. Assim, foram
introduzidos os conceitos de controladores preditivos com enfoque de-
dicado aos controladores PNMPC.

Apresentaram-se neste trabalho, as contribuic?o?es a?s estrate?gias
dos controladores PNMPC. Foram propostas seis alternativas diferen-
tes para a aplicac?a?o do algoritmo PNMPC. Esses algoritmos, sa?o modi-
ficac?o?es da te?cnica completa proposta por Plucenio (2010). Os algorit-
mos propostos podem ser empregados como guia para o tratamento de
sistemas na?o lineares. Cada um destes algoritmos permite tratar dife-
rentes graus de na?o linearidade dos sistemas, permitindo escolher entre
desempenho ou tempo de execuc?a?o. Esta proposta oferece uma ampla
gama de opc?o?es para o tratamento de sistemas na?o lineares aplicando a



122

estrate?gia PNMPC. Estes algoritmos, permitem tratar processos com
dina?mica na?o linear da seguinte formas: como totalmente na?o lineares
(resposta livre na?o linear e resposta forc?ada linearizada a cada iterac?a?o),
como totalmente lineares (resposta livre linear e resposta forc?ada line-
arizada a cada n iterac?o?es), ou no caso onde a linearidade e? suave,
a resposta livre e? tratada como na?o linear e a resposta forc?ada como
linear.

Para avaliar os seis controladores, foi escolhido um estudo de
caso com dina?mica na?o linear. Os seis algoritmos dos controladores
PNMPC propostos apresentaram bom desempenho, sendo que o melhor
desempenho e? do controlador PNMPC completo (versa?o 1). Por outro
lado, esta versa?o apresenta o maior custo computacional.

Na segunda parte do trabalho, foram estudadas te?cnicas que tra-
tam incertezas no modelo de predic?a?o, principalmente no atraso de
transporte, caracter??sticas que podem levar um processo a? instabili-
dade.

Nos sistemas que apresentam incertezas no modelo de predic?a?o,
principalmente no atraso de transporte, uma opc?a?o e? o uso do filtro no
erro de predic?a?o, partindo da ide?ia do preditor de Smith filtrado. Uma
outra alternativa foi estudada nesta dissertac?a?o, o MPC com passo de
estabilidade, apresentada em Plucenio et al. (2014). Nesse trabalho, foi
realizada a comparac?a?o destas duas te?cnicas. Para isso, foi escolhido
como estudo de caso um processo comumente encontrado na indu?stria
pertroqu??mica. Neste estudo de caso, foram consideradas incertezas no
ganho, e no atraso de transporte entre a planta real e o modelo de
predic?a?o. Os ??ndices de desempenho obtidos nos resultados mostram
que o MPC com passo de estabilidade apresenta melhor desempenho.
O resultados obtidos nas simulac?o?es mostram que o MPC com passo
de estabilidade apresenta maior rapidez na rejeic?a?o das perturbac?o?es
na?o modeladas inseridas no sistema. Na implementac?a?o do MPC com
passo de estabilidade nenhum filtro e? aplicado.

Ainda como resultados do trabalho foram aprovados e publicados
tre?s artigos: dois no Congresso Brasileiro de Automa?tica (CBA2016),
realizado o 3 a 7 de outubro de 2016, em Vito?ria Esp??rito Santo inti-
tulados ”Practical Non-linear Model Predictive Control PNMPC: Al-
gorithm implementations ”(PICON; PLUCENIO, 2016b) e ”MODELING
AND CONTROL OF AN OIL PLATFORM GAS COMPRESSION
STATION ”(PLUCENIO; VETTORAZO; PICON, 2016) e um no 12th IE-
EE/IAS International Conference on Industry Applications (INDUS-
CON 2016) realizado o 20 a 23 de novembro de 2016, em Curitiba
intitulado ”DMC de forma recursiva aplicando o passo de estabili-



123

dade”(PICON; PLUCENIO, 2016a).
Com tudo isso, pode-se concluir que os objetivos deste trabalho

foram atingidos satisfatoriamente.
Como trabalhos futuros pode-se citar:

• avaliar as verso?es do PNMPC para outros processos que apresen-
tam na?o linearidades em sua dina?mica;

• avaliar as verso?es do PNMPC para processos multivaria?veis;

• estudo de robustez na implementac?a?o do me?todo passo de esta-
bilidade;

• estudo de me?todos de sintonia para o controlador MPC com passo
de estabilidade.



124



125

REFERE?NCIAS

ALLGOWER, F.; FINDEISEN, R. Nonlinear model predictive
control: From theory to application. Institute for Systems Theory
in Engineering, 2004.

ANDRADE, G. et al. Controle preditivo na?o linear aplicado em
sistemas de gerac?a?o de energia solar. CBA, p. 8, Setembro 2012.

BLOEMEN, H.; BOOM, T. Van den; VERBRUGGEN, H.
Model-based predictive control for hammerstein systems.
Proceedings of the 39th IEEE Conference on Decision and
Control, 2000.

BORDONS, C. Control Predictivo: metodolog??a, tecnolog??a y
nuevas perspectivas. 2000.

BRAVO, C.; NORMEY, J. Controle de plantas na?o lineares utilizando
control preditivo linear baseado em modelos locais. SBA: Controle
e Automac?a?o Sociedade Brasileira de Automatica, 2009.

CAMACHO, E.; BORDONS, C. Model Predictive Control in
Process Industry. 1995.

CAMACHO, E.; BORDONS, C. Model Predictive Control.
Second edition. 2007.

CANNON, M. Efficient nonlinear model predictive control algorithms.
Annual Reviews in Control, 2004.

CASTILLA, M. et al. Control predictivo no lineal del confort te?rmico
y calidad de aire. Comite? Espan?ol de Automa?tica de la IFAC,
2014.

CLARKE, D.; MOHTADI, C. Generalized predictive control. part ii:
extension and interpretations. AUTOMATICA, 1987.

CLARKE, D.; MOHTADI, C. Properties of generalized predictive
control. part i: The basic algorithm. AUTOMATICA, 1987.

CUTLER, C.; REMARKER, B. Dynamic matrix control-a computer
control algorithm. In Automatic Control, Conference, San
Francisco, 1980.



126

FINDEISEN, R.; ALLGOWER, F. An introduction to nonlinear
model predictive control. 21st Benelux Meeting on Systems and
Control, 2002.

GRUBER, J.; BORDONS, C. Control predictivo no lineal basado en
modelos de volterra. aplicacion a una planta piloto. Revista
Iberoamericana de Automatica e Informatica Industrial, 2007.

KEYSER, R. D. A gentle introduction to model based predictive
control. PADI2 International Conference on Control
Engineering and Signal Processing, 1998.

KEYSER, R. D. The nepsac nonlinear predictive controller in a real
life experiment. 1th International Conference on Intelligent
Engineering Systems, 2007.

LAWRYNCZUK, M. Computationally Efficient Model
Predictive Control Algorithms. 2014.

LIMA, D.; NORMEY, J.; PLUCENIO, A. Improving robustness and
disturbance rejection performance with industrial mpc. Congresso
Brasileiro de Automatica, 2014.

LUCIA, S.; RUMSCHINSKI, P.; KRENER, A. Improved design of
nonlinear model predictive controllers. 5th IFAC Conference on
Nonlinear Model Predictive Control NMPC - Seville, Spain,
2015.

MACIEJOWSKI, J. Predictive Control with Constraints. :
Prentice Hall, 2002.

MAYNE, D. Control of constrained dynamic systems. European
Journal of Control, 2001.

MONTEIRO, L. Sistemas Dina?micos. 2006.

MORAES, A. D. et al. Controle preditivo para controle de n??vel do
tanque de uma planta piloto industrial. Simpo?sio Brasileiro de
Automac?a?o Inteligente, Outubro 2013.

MORARI, M.; LEE, J. Model predictive control: past, present and
future. elsevier, 1999.

NELLES, O. Nonlinear system identification,. Spinger, 2001.



127

NORMEY, J. Gpc adaptativo basado em el predictor de smith para
procesos con retardo variable. SBAI, 2001.

NORMEY, J.; CAMACHO, E. Control of Dead time processes. :
Springer, 2007.

NORMEY, J.; LIMA, D.; SANTOS, T. Robustness of nonlinear mpc
for dead-time processes. 5th IFAC Conference on Nonlinear
Model Predictive Control NMPC - Seville, Spain, 2015.

PICON, B.; PLUCENIO, A. Dmc de forma recursiva aplicando o
passo de estabilidade. 12th IEEE/IAS International Conference
on Industry Applications INDUSCON, 2016.

PICON, B.; PLUCENIO, A. Practical non-linear model predictive
control pnmpc: Algorithm implementations. Congresso Brasileiro
de Automatica CBA, 2016.

PLUCENIO, A. Desenvolvimento de Te?cnicas de Controle na?o
linear para Elevac?a?o de Fluidos Multifa?sicos. Dissertac?a?o
(Dissertac?a?o de Doutorado-Engenharia de Automae Sistemas) —
Centro Tecnolo?gico, Universidade Federal de Santa Catarina,
Floriano?polis”, 2010.

PLUCENIO, A. et al. Model predictive control algorithm with
stability step. Congresso Brasileiro de Automa?tica, Setembro
2014.

PLUCENIO, A. et al. Controle preditivo na?o linear na indu?stria do
petro?leo e ga?s. PDPETRO, Outubro 2007.

PLUCENIO, A. et al. A practical approach to predictive control for
nonlinear processes. In: IFAC. 2007.

PLUCENIO, A.; VETTORAZO, C.; PICON, B. Modeling and
control of an oil platform gas compression station. Congresso
Brasileiro de Automatica CBA, 2016.

POMAR, M.; NORMEY, J.; CAMPONOGARA, E. Non linear model
based predictive controller of a buck boost converter. Proc. of the
XVI IFAC World Congress, 2005.

PRADA, C. D. El futuro del control de processos. Revista
Iberoamericana de Automatica e Informatica Industrial, 2004.



128

QIN, S.; BADGWELL, T. A survey of industrial model predictive
control technology. Control Engineering Practice, 2003.

RICHALET, J.; RAULT, A.; TESTUD, J. Model predictive heuristic
control: Aplication to industrial process. AUTOMATICA, 1978.

SANTOS, J. Controle Preditivo nao Linear para Sistemas de
Hammerstein. Tese (Doutorado) — UFSC, 2005.

SKRJANC, I.; MATKO, D. Advances in Model-Based
Predictive Control, chapter Fuzzy Predictive Controller with
Adaptive Gain. : Oxford University Press, 1994.

SMITH, O. Closer control of loops with dead-time. Chem. Eng.
Progress, 1957.

TANG, Y.; KEYSER, R. D. Advances in Model-Based
Predictive Control, chapter Neural Network Based
Predictive Control. : 1994, 1994.

THOME, F. Controle Preditivo Rubusto de Sistemas Na?o
Lineares com Atraso. Dissertac?a?o (Mestrado) — UFSC, 2013.



APE?NDICE A -- Ape?ndice





PRACTICAL NON-LINEAR MODEL PREDICTIVE CONTROL PNMPC:
ALGORITHM IMPLEMENTATIONS

Bryant Picon Yang?, Agustinho Plucenio†

?Dpto. de Automac?a?o e Sistemas
Universidade Federal de Santa Catarina

88040-900
Floriano?polis, SC, Brasil

†Firenze-Consultoria em Engenharia e Informatica
Av. Le?dio Joa?o Martins, 201-203 - 88102-000 KOBRASOL Sa?o Jose?, SC, Brasil

Emails: bryant.bruce@posgrad.ufsc.br, brplucenio@firenzeconsult.com,

Abstract— Most dynamic processes exhibit nonlinear relationships between controlled and manipulated vari-
ables. Depending on the application, the MPC algorithm is often chosen between a non-linear or a linear type.
This paper presents different implementations of the PNMPC-Practical Non-linear Model Predictive Control
algorithm. It is shown that the PNMPC algorithm may be written to handle the non-linearity at different levels.
For the sake of simplicity, the algorithms are implemented to control the level of a conical tank. The main
purpose of the controller is to manipulate the position of the outlet valve in order to follow the reference. The
performance and the computational cost of six different implementations of PNMPC controller are shown. The
results of the controllers are compared and analyzed by the system response verification, the algorithm runtime
and driver performance.

Keywords— Nonlinear predictive control, Computational cost, Conical tank, Level control, SISO system

Resumo— A maioria dos processos dina?micos exibem relac?o?es na?o lineares entre varia?veis controladas e ma-
nipuladas. Dependendo da aplicac?a?o, o algoritmo MPC e? muitas vezes escolhido entre um tipo linear ou na?o
linear. Este trabalho apresenta varias maneiras de implementar o algoritmo PNMPC. Mostra-se que o algoritmo
PNMPC pode ser escrito para lidar com a na?o-linearidade em diferentes n??veis. Por uma questa?o de simplici-
dade, os algoritmos sa?o implementados para controlar o n??vel de um tanque co?nico. A principal finalidade do
controlador e? manipular a abertura da va?lvula de sa??da, a fim de seguir a refere?ncia. O desempenho e o custo
computacional de seis implementac?o?es diferentes de controlador PNMPC sa?o exibidos. Os resultados dos contro-
ladores sa?o comparados e analisados pelo sistema de verificac?a?o de resposta, o tempo de execuc?a?o do algoritmo
e o desempenho do atuador.

Palavras-chave— Controle preditivo na?o linear, Custo computacional, Tanque co?nico, Controle de n??vel,
Sistema SISO

1 Introduction

The Model Predictive Control (MPC) is one of the
most advanced modern control techniques, being
probably the one that has been the most success-
ful in industrial applications especially in the oil
industry (Garc??a, 1989).

The history of advanced control begins in the
early 1960’s with the work of Kalman as well as
co-author Ricatti and others, (Qina and Badg-
well, 2003). But it was only after a set of papers
presented in the late 1970’s that MPC controllers
became interesting for industrial applications

In 1978, Richalet described the applications
of ”Control Models Predictive Heuristic” in 1979
Shell Engineers Cutler and Ramaker as well as
Pratt and Gillette outlined ”Dynamic Control Ma-
trix” (DMC) and reported applications for a cat-
alytic tab fluid. In both algorithms, an explicit
dynamic model of the plant has been used to pre-
dict the effect of future control actions on the out-
put, hence the name ”Model Predictive Control”.

The main causes of this success is due to the
ability of the MPC to control a wide range of pro-
cesses, from those having a relatively simple dy-

namic to others more complex, for example: Sys-
tems with delay, multivariables, unstable, as well
non-linear dynamic among others. The MPC also
allows to obtain solutions, notwithstanding the ex-
istence of constraints in the variables (Normey and
Camacho, 2007).

The majority of the real systems have non-
linear dynamics, however, when the process oper-
ational range is small, the dynamics can be sat-
isfactorily approximated by linear models. This
approach has motivated many MPC techniques
using linear models such as: Dinamix Matrix
Control-DMC, (C.R. Cutler and B.L. Ramaker,
1988); Model Algorithm Control-MAC,(Richalet,
Rault, Testud and Papon, 1976); Generalized Pre-
dictive Control-GPC, (Clarke, Mothadi and Tuffs,
1987)) (Plucenio et al., 2007).

The main advantage of linear MPC is the low
cost to obtain linear models in the development
of the project compared to non-linear approaches.
Other advantages are lesser difficulties to solve
the associated optimization problems. On the
other hand, when the processes have a very strong
non-linear dynamic or when the operation range
is wide, then it might be necessary to consider

131



the non-linear model in the control algorithm, to
maintain the desired performance for the closed-
loop system.

When choosing a predictive control algorithm,
the initial decision is to choose between two algo-
rithm systems, either the linear or the non-linear
systems. In many cases we have good non-linear
process models. Unfortunately it is common prac-
tice to get a linear representation of the model in a
single point of operation and use this representa-
tion to obtain the dynamic matrix coefficients and
the free response. The original PNMPC technique
uses a real-time linearization of the input-output
variables. This linearization is performed in a two
step process and it obtains almost a second-order
approximation. Depending on the non-linearity
process to be controlled, there are several ways to
implement the PNMPC algorithm. The algorithm
choice will depend on the available processing time
and quality of response to be obtained. The PN-
MPC can be implemented as a linear controller.
Due to the way it treats the prediction error, the
linear version of PNMPC will be similar to a GPC.

This paper is organized as follows: section
2 presents the description of the mathematical
model of the conical tank. The theoretical prin-
ciples of non-linear control strategy are presented
in section 3. The description of the six alternative
versions of the implementation of the PNMPC are
shown in section 4. And section 5 presents the re-
sults of implementations described in section 4.

2 Mathematical Model Description of
the Conical Tank

To demonstrate the application of the Practical
MPC algorithm for non-linear systems (PNMPC),
a process with a non-linear dynamics was con-
sidered. Furthermore and in order to simplify
the demonstration, the level control in a conical
tank (SISO system) was also used. The process
is shown in Figure 1, where the manipulated vari-
able is the output valve. The input flow will act
as a disturbance in the system. The mass balance

Qin
        
                

    R

 r

h H

  Qo

Figure 1: conical tank

inside the tank is given by the equation:

Qin ?Qo = A
dh

dt
(1)

where:

Qin input flow;
Qo output flow;
R maximum radius of the conical tank;
r radius of the conical tank at steady state;
H maximum height of the conical tank;
h height of the conical tank at steady state.

Whereas the cross-section area of the conical tank
is given by:

A = ?

[
r ? (R?r)

(
h

H

)]2
(2)

and the output flow is represented by the equa-
tion:

Qo = CvUc
?
h (3)

where Uc is the control action of the outlet valve
and Cv is a constant for the valve.

Substituting equations (2) and (3) in (1),we
have the following model of the conical tank:

dh

dt
=

Qin ?CvUc
?
h

?
[
r ? (R?r)

(
h
H

)]2 (4)

3 PNMPC control

The PNMPC technique was developed by
(Plucenio, 2010) and is based on algorithms that
use the vector representation of predictions over
the horizon p, Y?, as a vector function with m
changes in the control action ?u, according to the
equation (5). The PNMPC is a technique that of-
fers an alternative to solve the problem of linear
optimization using conventional optimizers as QP
quadratic programming or linear programming so-
lution.

Y? = F + G?u (5)

The PNMPC differs from other MPC techniques
mainly because it uses linearized models of the
system trajectory. It is assumed that the pre-
dictions Y? depend only on past entries ??u , past
outputs ??y and the future control increments ?u.

Y? = f (??y ,??u , ?u) (6)

The vector of predictions is rewritten as:

Y? = F + GP NMP C ?u (7)

where
F = f (??y ,??u ) (8)

GP NMP C =
?Y?

??u
(9)

The matrix GP NMP C is the Jacobian of Y? rel-
ative to the control increments and is obtained
numerically as the vector of free response F. A
prediction algorithm computes the vector Y? with

132



the p predictions when it provides the values of
the past inputs and outputs, and the vector with
the m future input increments ?u.

If we call the set of past inputs ??u and the
current and past output ??y , predictions can be
rewritten in the following expression.

y? (k + 1) = f (??y ,??u ,?u (k))
y? (k + 2) = f (??y ,??u ,?u (k) , ?u (k + 1))
...
y? (k + p) = f (??y ,??u ,?u (k) , . . . , ?u (k + m? 1))

(10)

The following compact representation is ob-
tained:

Y? = F + GP NMP C ?u (11)

Whereas that F is the vector of predictions that
would be obtained for ?u = 0 and GP NMP C is
the Jacobian of the predicted outputs with respect
to the vector of increments of control signal ?u.
GP NMP C is a generalized dynamic matrix that
can be used for linear systems and non-linear sys-
tems, provided they are continuous and differen-
tiable. The expression (11) for a SISO system can
be re-written as:
?
??????

y?(k + 1)
y?(k + 2)

.

.

.
y?(k + p)

?
??????

=

?
??????

f1(
??y ,??u )

f2(
??y ,??u )
.
.
.

fp(
??y ,??u )

?
??????

+ (12)

?
??????????

?y?(k+1)
??u(k)

0 · · · 0
?y?(k+2)
??u(k)

?y?(k+2)
??u(k+1)

· · · 0

.

.

.

.

.

.

.

.

.

.

.

.
?y?(k+p)
??u(k)

?y?(k+p)
??u(k+1)

· · · ?y?(k+p)
??u(k+m?1)

?
??????????

?
??????

?u(k)
?u(k + 1)

.

.

.
?u(k + m ? 1)

?
??????

The lower triangular form of the Jacobian matrix is
due to the causality of the system and absence of di-
rect coupling between input and output. This means
?y?(k+j)
??u(k+i)

= 0 for i ? j. The partial derivative
?y?k+j
??u(k)

it is defined as:

?y?k+j
??u(k)

= lim
?uk?0

y?k+j (uk?1 + ?uk) ? y?k+j (uk?1)
?uk

(13)
For a SISO system, for example, on the first instant
of sampling, the following procedure for obtaining the
numerical value of F and GP NMP C is performed:

1. Get the vector Y?0p (dimension p × 1) executing
the prediction model with the past inputs and
outputs and ?u = [0 0 . . . 0]T . F = Y?0p.

2. Computes the first column of the matrix
GP NMP C . Obtaining the vector Y?

1
p (dimension

p× 1) executing the model with the past inputs
and outputs and considering ?u = [? 0 . . . 0]T ,
where ? is a very small value,

uk?1
1000

, for example.

GP NMP C (:, 1) =
Y?1p?Y?

0
p

?
.

3. Computes the second column of the matrix
GP NMP C . Obtain the vector Y?

2
p (dimension

p× 1) executing the model with the past inputs
and outputs and considering ?u = [0 ?. . . 0]T .

GP NMP C (:, 2) =
Y?2p?Y?

0
p

?
.

4. Continues with the calculation of the others
columns of the matrix GP NMP C to the last col-
umn, where the vector Y?mp is obtained execut-
ing the model with the past inputs and outputs

?u = [0 0 . . .?]T .GP NMP C (:,m) =
Y?mp ?Y?

0
p

?
.

For the application of PNMPC technique in multivari-
able systems it is necessary to concatenate the predic-
tion vectors for each variable Y? and the control in-
crements ?u. Thus, a system with ni entries and no
outputs have the following vectors:

Y? = [Y?1Y?2 . . .Y?pno]
T

?u = [?u1?u2 . . . ?umni]
T

(14)

To obtain F and GP NMP C the procedure is then
as above. The difference is that now the matrix
GP NMP C have ni×no computed blocks as in the SISO
case for each pair of input and output. Obviously, as
in linear MPC, weak relationships output-input may
be disregarded to avoid noise propagation. The con-
trol action is obtained by minimizing the cost function
J. Using equation (7) as a way of expressing the pre-
dictions, the quadratic objective function from section
2.2.2 can be re-written as follows:

min J
?u

subject to

J = (Y? ?W)T R(Y? ?W) + ?uT Q?u,
Y? = F + GP NMP C

(15)

where W represents the vector of future reference, R
the error weighting matrix and Q the control weight-
ing matrix. The minimization of the cost function
for the case without constraints can be obtained by
equating to zero the gradient of the cost function and
in the case with constraints the solutions is obtained
by solving a QP.

Thus, in terms of optimization, the PNMPC has a
complexity similar to the DMC or the GPC algorithm.
The predictive control techniques applied to linear sys-
tems use a mechanism that consists in correct the pre-
dictions with the error between the measured value of
the controlled variable and its predicted value at time
k. This technique applied to linear systems guaran-
teed zero error in steady stated, because the increase
in the control effort required for error correction at the
instant k will be the same in future instants due to the
linear relationship between the input and output, so
the gain is constant. The application of this proce-
dure to the PNMPC technique applied to non-linear
systems does not guarantee null error in steady state,
because the gain varies with the operating point of the
system. The procedure to correct the predictions pre-
sented in (Plucenio, 2010), consists in adding to each
prediction the integral of the filtered prediction error.
Figure 2 shows how the correction factor for each con-
trolled variable can be obtained. A correction factor

? ?
1

F
D q ? ?11

i
k

q
?

?

? ?1scy k k ?

? ?n k? ? ?1y k k? ? ? ?e k

? ?y k

?
?

?

?

1
q
?

?

?

?

?

?

?

Figure 2: Block diagram of the correction factor

is added to the prediction so that the error between
the measured and the corrected value of prediction to

133



zero. The correction factor is obtained filtering and in-
tegrating the error as shown in Figure 2. Considering
the controlled variable y(t), if the level error has a lin-
ear approximation, the transfer function that relates
the error and the difference between the measured and
the predicted values of the variable without correction
can be obtained as shown in (16). It must be noted
that the error e(z) is defined as the difference between
the measured value and the corrected predicted value,
whereas (y(k) ? y?sc(k)) corresponds to the error be-
tween the measured variable and the predicted value
without correction.

e(z)

(y(k) ? y?sc(k))
=

z2 ? (1 + fd)z + fd
z2 ? (1 + fd ?ki)z + fd

(16)

Assuming the closed loop system is stable, we can ap-
ply the Final Value Theorem to verify that the pres-
ence of (1?z?1) in the numerator of the transfer func-
tion (16) guarantees null error in steady state for an
input of type step. The values of ki and fd are chosen
by comparing the denominator of the transfer function
(16) with the desired polynomial pd(z) = z

2?2az+a2.
The value of a has an impact on the speed at which
the error responds to disturbances. After the value of
a is determined, fd and ki can be obtained through
equations (17) and (18).

fd = a
2

(17)

ki = 1 + a
2 ? 2a

(18)

4 Implementation of PNMPC: Alternatives

The PNMPC presented in the previous section can be
implemented in different ways. The goal of this paper
is to study the performance and the computational
cost of the PNMPC controller, by using the following:
six different versions of the PNMPC implementation,
as well as simplifications of the complete original tech-
nique to reduce the processing time. The way of calcu-
lating the predictions can be modified to convert the
PNMPC into a linear MPC controller. Six versions of
the PNMPC will be applied to the conical tank. The
goal is to control the level of the tank through outlet
valve manipulation.

4.1 1st version: PNMPC complete

Following the PNMPC theory from (Plucenio, 2010),
the first PNMPC proposed in this paper considers the
non-linear free response and calculation of the matrix
G in two steps. The first procedure of the algorithm is
to calculate at a given iteration the variation of initial
control (?uini), which is calculated according to the
existing matrix G, that is, the matrix Gprevious. Ob-
taining the initial control variation, the future control
actions are calculated according to the equation:

Um×1 = Hm×1u (k ? 1) + TIm×m?uinim×1 (19)
where:

m control horizon;
H vector of ones;
u(k ? 1) previous control action;
TI integrating Toeplitz matrix;
?uini initial control variation.

With the control action calculated, an initial predicted
output Y?0p is obtained. A control increment ? is added
to the control vector U and a new output prediction
(Y?) is obtained. This value ? will scroll through the
?u vector in order to calculate the matrix GP NMP C
as described in (Plucenio, 2010) and shown in equation
(20).

GP NMP C (:,m) =
Y?mp ? Y?0p

?
(20)

In fact, the calculation of the derivative of this new
control signal U, serves to compensate the non-
linearity of the system. Having the matrix G(k) at
the current time and the matrix G(k ? 1) calculated
in the previous instant Gprevious, it is possible calcu-
late in two steps the intermediate matrix GP NMP C
by the following equation:

GP NMP C = 0.5G(k ? 1) + 0.5G(k) (21)

The algorithm implemented for this version is detailed
in the flow diagram in Figure 3:

For 1: NumItera-1

- Calculate the output of the plant        .
- Updates the references.

i==1

- Obtain the vector     , executing the
algorithm that model the process,  using
future null increments ?u =        

T
.

- Calculation the free response without 
correction             .  

- Get the  predictions vector, executing the  
algorithm that model the process, using     and      
with a little value of ? but not null  for calculating 

Calculate  ?u with Quadpro   

- Calculate the error
-  Calculate the Adjustment factor  
-  Calculate the      
- Calculate the
- Cálculation of the free corrected 
response
 

Calculate            depending  of        

                 and    .

Calculate

- Get the  predictions vector, executing the  
algorithm that model the process, using     
and      with a little value of ? but not null  
for calculating      

- Calculate:

- Calculate  

- Calculate  ?u with Quadpro   

Calculate the control law

Update of the past outputs 
and the past action control.

 i&gt;1

PNMPC
G

ini
u?

? ?1G k? F

? ? ? ?1 iniu k u k u? ? ??

- Calculate:

? ?
0

: ,m

m

p p

PNMPC

Y Y
G

?

?
?

? ? ? ?1u k u k u? ? ??

PNMPC
Y F G u? ? ?

mod el z
y y?

Yes

No

No

Yes

0

p
Y

0

P
F Y?

0

p
Y

0

p
F Y?

? ?0.5 ( 1) ( )PNMPCG G k G k? ? ?

? ?zy

y u

F F FAC? ?

FAC

y
u

PNMPC
G

? ?
0

: ,m ( )

m

p p

PNMPC

Y Y
G G k

?

?
? ?

modz el
er y y? ?

For

Figure 3: PNMPC complete algorithm flow diagram

4.2 2nd version: PNMPC without calculation ?uini

For processes with a strong non-linear characteristic
it is recommended to choose the complete PNMPC
technique (first version), but if the process presents
a smooth non-linearity it may be possible to reduce
the computational cost by eliminating the calculation
of ?uini. In this version it is proposed the calcula-
tion of the GP NMP C matrix in one step. Therefore,
it is not necessary to calculate ?uini. In order to
calculate the control action needed to obtain Y?0p the
value of the control variation of the previous itera-
tion is used. This Y?0p is then calculating the matrix
GP NMP C , as shown in section three. Once the calcu-
lation of ?uini is eliminated, the precision with which
the PNMPC calculates the GP NMP C decreases, this
can be explained as the ?uini has a direct influence
in the calculation of the Y?0p, as it is directly involved
in the calculation of the matrix GP NMP C .

4.3 3rd version: PNMPC getting only the first col-
umn of G

As already described in the literature, the matrix
G the one that is responsible to save the values of
the dynamics process (Camacho and C., 2007) and

134



the GP NMP C is the non-linear version of the dy-
namic matrix used in the linear predictive control
(Plucenio, 2010). One of the possibilities to reduce the
computational cost is to calculate only the first column
of the matrix G by the normal procedure of PNMPC
and mount the matrix GP NMP C considering the sys-
tem time-invariant, this procedure is commonly per-
formed in linear systems (De Keyser, 1998). Thus the
non-linear optimization problem can be transformed
into a sequence of linear optimization problems. For
this it is necessary to check how much the diagonal
elements of the matrix G vary. In the case where the
variations are not significant, one can opt for the tech-
nique used in linear systems; only calculate the first
column of the matrix G and displaced until a lower
triangular matrix is obtained, that means treat the
non-linear process as if it were linear. In the case of
a non-linear process, it can be seen that the diago-
nal elements of the matrix G present significant vari-
ations between the elements of the diagonal, however,
in the case of a linear process, the diagonals elements
of the matrix G do not present significant variations.
To check the degree of the non-linearity in the study
case, Figure 4(a) shows the variations in the diagonals
elements of the matrix G calculated by the Jacobian
matrix (GP NMP C ). As this matrix is recalculated on

(a) Non-linear dynamics
matrix

(b) Linear dynamics ma-
trix

Figure 4: Dynamic matrix GP NMP C

each iteration, the data shown in Figure 4(a) repre-
sent only a particular step, the iteration k = 35. As
shown, the diagonal elements of the matrix GP NMP C
present variations, but these variations are small, so
they could be disregarded. Applying the third ver-
sion of the PNMPC algorithm proposed in this paper,
where only the first column of the matrix G is cal-
culated, so that the new matrix G for iteration k =
35 shown in Figure 4(b). In the Figure 4(b) the first
column of the matrix G is shifted m times, to form a
lower triangular matrix, where m is the horizon con-
trol. With this modification, the computational cost
for the calculation of G decreases reasonably.

4.4 4th version: PNMPC similar to 3rd version, but
now the matrix G is recalculated only from time
to time.

This version is a very interesting and flexible option.
The process is treated as if it were linear and only the
first column of G is calculated. However, the matrix
G is not obtained at each iteration, it is recalculated
every n sampling times. An operator with knowledge

of the process and the non-linearity degree can adjust
the value of n in each application. In the case study of
this paper, as shown in the previous version, the non-
linearity degree of the process is not significant, so
the recalculation of the matrix G does not need to be
performed at each iteration. For the testes was used
a recalculation every 25 samples. The choice of this
time was made taking care not to lose the dynamics
of the process.

4.5 5th version: PNMPC looking for free response
time to time, using the Cutler idea (Recursive
DMC) to the other instants

This version seeks to reduce the computational cost
in processes where the non-linearity is not significant,
inserting in the PNMPC technique the calculation of
free response as is done in the recursive DMC proposed
by Cutler. To (Cutler and Ramaker 1988), as shown
in (Plucenio et al., 2014), the open-loop predictions
for time t + k, having information in t and t ? 1 are
shown in the equations (22) and (23) respectively:

y0 (t + k |t) =
??

i=k+1

gi?u (t + k ? i) (22)

y0 (t + k |t? 1 ) =
??

i=k+2

gi?u (t + k ? i) (23)

The difference between the open-loop prediction
in t + k having t, and in t + k having t ? 1, it is
only the new control action which is not known in
?u(t ? 1). Subtracting the equations (22) and (23)
has the equation (24):

y0 (t + k |t) ?y0 (t + k |t? 1 ) = gk+1?u (t? 1) +
??

i=k+2

gi?u (t + k ? i) ?
??

i=k+2

gi?u (t + k ? i) (24)

which leads to the equation (25):

y0 (t + k |t) = gk+1?u (t? 1) + y0 (t + k |t? 1 ) (25)

The recursive DMC calculation is executed as fol-
lows: Keep in memory a vector with N elements:
Yfree = [y0 (t |t? 1 ) , ...,y0 (t + N ? 1 |t ? 1)]T . It’s
elements are the free responses given the known con-
trol actions at the moment t? 1. When starting the
DMC controller at the moment t0, and as the system
is in steady state, it is considered that the open-loop
predictions are constant and equal to a value of y(t0).
When starting the DMC algorithm at the moment t,
the vector of the free response must be updated be-
cause the change of control action ?u(t?1) it is now
known. The vector Yfree of the equation (26) is up-
dated.

Yfree = Yfree +

?
????

g1
g2
...
gN

?
???? ?u (t? 1) (26)

After getting the new control signal u(t), it is nec-
essary to ’displace’ the values within the vector Yfree.
At time t + 1 the free responses in t + 1 until t + N is
obtained based on the data until t, where N is called

135



the model horizon. So the first element is discarded
because it is the prediction concerning to instant t that
has passed. The problem is that making this displace-
ment, the last element ( y(t+N|t)) is unknown. There-
fore, in the stable case y0(t + N|t) ?= y0(t + N ? 1|t),
the new vector Yfree will be given by the equation
(27):

Yfree =

?
??????

y0 (t + 1 |t)
y0 (t + 2 |t)

...
y0 (t + N ? 1 |t)
y0 (t + N ? 1 |t)

?
??????

(27)

The condition y0(t+N|t) ?= y0(t+N?1|t) is shown as:

y0 (t + N ? 1 |t) =
??

i=N

gi?u (t + N ? 1 ? i)

y0 (t + N |t) =
??

i=N+1

gi?u (t + N ? i) =
??

i=N

gi+1?u (t + N ? 1 ? i)
y0 (t + N |t) ? y0 (t + N ? 1 |t) =

??
i=N

(gi+1 ?gi) ?u (t + N ? 1 ? i)
As gi+1 ? gi ?= 0,?i &gt; N, it has y0(t + N|t) ?=

y0(t + N ? 1|t), as was able to demonstrate.
Thus, the calculation of free response considered

in the DMC Recursive is given by the equation:

f =

?
??
y0 (t + 1 |t)

...
y0 (t + p |t)

?
?? + 1p×1 (y(t) ?y0 (t |t)) (28)

Where the equation of the model error is:

e = y(t) ?y0 (t |t) (29)

As shown in (Plucenio et al., 2014), the representa-
tion of predictions considering the calculation of the
free response to the DMC Recursive is shown in the
equation (30):

Y? = f + G?u (30)

where:

Y? predicted output with dimension p× 1;
f free corected response with dimension p× 1;
G Jacobian matrix of Y? with dimension p×m;
?u vector with dimension m× 1 containing the

increments of the control action.

Using this form of implementation, the necessary cal-
culations to obtain the free response become more
simple, not requiring the storage of past control in-
crements. This procedure only changes the way to
calculate the free response, the rest of the control al-
gorithm is not modified.

4.6 6th version: PNMPC reassessing the matrix G
and free response according to the prediction er-
ror

The idea of this version is calculate the absolute value
of the prediction error, with the objective to fix a range
tolerable error in which it is considered that the values
obtained are acceptable, and it is not necessary to
recalculate the G matrix and the free response for
each iteration.

Table 1: Tuning parameters for the PNMPC con-
trollers

Param Definition Value

p prediction horizon 12
m control horizon 3
? control-weighting factor 3
? reference tracking weighting factor 1
? reference filter 0.25
? value for variation in control 0.01
a filter parameter for prediction error 0.15

Table 2: Comparative table of the execution times
for the PNMPC versions

Execution 1st version 2nd version 3rt version 4th version 5th version 6th version

1 40.2191 38.1917 25.7825 19.3745 29.4440 27.5302
2 39.5854 38.2922 25.6580 19.1152 29.9883 27.6980
3 38.8933 38.4277 25.6750 19.1802 29.9960 27.6653
4 38.9484 38.1932 25.6655 19.1637 29.2337 27.5607
5 39.1778 38.3610 25.8829 19.0723 29.0735 27.4466
6 39.0862 38.5138 25.6190 19.2308 29.0478 27.6603
7 39.1187 38.6370 25.7077 19.2133 29.0250 27.4830
8 39.1515 38.5807 25.7749 19.1650 29.0478 27.7040
9 39.1868 38.7472 25.6909 19.2164 29.0875 27.6850
10 38.9841 38.4975 25.7159 19.0694 29.4870 27.7875

Tot.time[s] 392.3513 384.4420 257.1723 191.8008 293.4296 276.2206
Averaget.[s] 39.2351 38.4442 25.7172 19.1800 29.3429 27.6220

5 Results

This section presents the results obtained in the differ-
ent versions implemented with the PNMPC technique.
As the main objective is to evaluate the computational
cost involved in the implementation of the PNMPC
technique, it will be shown the runtime obtained in
the calculation of the algorithm for each version of
the PNMPC applied in the case study on the non-
linear process of the level control of the conical tank.
All simulations were performed in MatLab 2013, on a
PC with A8 quad-core processor, AMD with 1.9 GHz
and 6GB of RAM, with Windows 8. To first obtain
an accurate approximation of the model, the differ-
ential equation describing the model was integrated
using Ode45 function of MatLab. The tuning param-
eters used for the PNMPC controllers are the same
for all versions for comparison purposes, these values
are shown in Table 1. The sample time for all versions
is 10 second for reference greater than 1 meter and 1
second for reference less than 1 meter . Table 2 shows
runtime the values for each version of the PNMPC
technique algorithm implemented in section 4.

To estimate the execution time of each algorithm,
each version was executed 10 times and the final time
was calculated as the average of 10 executions. The
time is measured in seconds and the results are shown
in Table 2.

Figure 5 shows the results for two cases. The first
for reference greater than 1 meter (Figure 5(a), 5(c)
and 5(e)) and the second test for reference less than 1
meter (Figures 5(b), 5(d) and 5(f)).

6 Conclusions

This paper presented six different versions of the PN-
MPC technique. With little modifications of the com-
plete technique, either in the calculation of the free
response or in assembling the matrix GP NMP C , the
processing time is reduced. With these modifications
the PNMPC can be simplified and be converted into
a linear MPC controller. As shown in the results in

136



(a) Outputs for ref&gt;1m (b) Outputs for ref&lt;1m

(c) Signals control for
ref&gt;1m

(d) Signals control for
ref&lt;1m

(e) Disturbance for
ref&gt;1m

(f) Disturbance for
ref&lt;1m

Figure 5: Outputs references, control signals, dis-
turbance

Table 3: Performance index of the PNMPC ver-
sions

Performance index V1 V2 V3 V4 V5 V6
MSE 0.0031 0.0040 0.0063 0.0085 0.0100 0.0096
IAE 2.58 3.40 4.56 4.77 5.89 5.07

Figures 5, the six versions implemented can follow ref-
erence and reject disturbances in the both tests (ref-
erence greater than 1 meter and reference less than 1
meter), however, the PNMPC can also reach the ref-
erences and reject disturbances more quickly. As it is
shown in Table 2 the computational cost is higher due
to the complexity of calculation the PNMPC requires.
On the other hand, versions 3, 4, 5 and 6 which where
were part of the non-linearity process are soft; these
controllers do manage to follow the reference and re-
ject disturbance, however, more slowly as compared
to the complete PNMPC, which has a lower compu-
tational cost.

Figure 6 shows that, for significant height vari-
ations, the six versions have a good reference track-
ing, where the complete PNMPC reacts faster than
the linear controllers remembering that the computa-
tional cost is greater. Comparing the results, it can be
observed that the six implemented algorithms have a
very similar response, although the complete PNMPC
algorithm provides the best results, where all can re-
act properly to the disturbance, and where, the main
difference between them being the runtime. This can
be attributed to the ”soft” non-linearity of the pro-
cess. Thus, a study of the behavior process can lead to
an implementation with gains in terms of processing
time without a significantly compromise of the perfor-
mance. Table 3 shows the comparison of the perfor-
mance index of MSE (mean squared error) and IAE
(integral of the absolute magnitude of the error) for
PNMPC versions.

0 0.5 1 1.5
0

0.5

1

1.5

Time [min]

L
ev
el
[m
]

yr
y1
y2
y3
y4
y5
y6

(a) Outputs for significant
height variation

0 0.5 1 1.5
0

0.2

0.4

0.6

0.8

1

Time [min]

V
a
lv
.O
p
en
in
g

U1
U2
U3
U4
U5
U6

(b) Signals control for signifi-
cant height variation

Figure 6: Outputs and signal control for signifi-
cant height variation

Acknowledgments

The authors wish to extend his gratitude for the fi-
nancial support he received from PRH-34 The Agency
National of Petroleum (ANP), oil, Gas, and Biofuels.

References

Camacho and C., B. (2007). Model Predictive Control,
segunda edn.

De Keyser, R. (1998). A gentle introduction to model
based predictive control, PADI2 International
Conference on Control Engineering and Signal
Processing .

Garc??a, Carlos E.; Prett, D. M. (1989). Model pre-
dictive control: Theory and practice-a survey,
International Federation of Automation Control
25(3): 14.

Normey, J. E. and Camacho, E. F. (2007). Control of
Dead time processes.

Plucenio, A. (2010). Desenvolvimento de te?cnicas de
controle na?o linear para elevac?a?o de fluidos multi-
fa?sicos, Dissertac?a?o de doutorado-engenharia de
automac?a?o e sistemas, Centro Tecnolo?gico, Uni-
versidade Federal de Santa Catarina, Floriano?po-
lis”.

Plucenio, A., Campos, M., Vasconcellos, L. and
De Gomes, M. (2014). Model predictive con-
trol algorithm with stability step, Congresso
Brasileiro de Automa?tica .

Plucenio, A., J., N., D., P. and A., B. (2007). Controle
preditivo na?o linear na indu?stria do petro?leo e
ga?s, PDPETRO .

Qina, S. J. and Badgwell, T. A. (2003). A survey
of industrial model predictive control technology,
Control Engineering Practice 11 11: 733–764.

137



DMC de forma recursiva aplicando o passo de
estabilidade

Bryant Bruce Picon Yang
Dto. de Automac?a?o e Sistemas

Universidade Federal de Santa Catarina
Floriano?polis, SC - Brasil 88040-900
Email: bryant.bruce@posgrad.ufsc.br

Agustinho Plucenio
Firenze-Consultoria em Engenharia e informa?tica

Sa?o Jose?, SC - Brasil 88102-000
Email: plucenio@firenzeconsult.com

Resumo— Grande parte dos processos existentes na
indu?stria de petro?leo e ga?s utiliza controladores pre-
ditivos. A crescente utilizac?a?o dessas estrate?gias pode
ser atribu??da ao fato de elas facilitarem a declarac?a?o
de problemas de controle relativamente complexos,
como os casos de controle de processos multivaria?veis,
processos integradores, processos insta?veis, processos
na?o lineares e processos com atraso de transporte. Este
trabalho apresenta uma abordagem que e? orientada
ao controle de plantas monovaria?veis e multivaria?veis,
com mu?ltiplas incertezas no modelo incluindo ganho,
constante de tempo e atraso de transporte, que repre-
sentam os casos mais comuns na indu?stria de proce-
ssos. E? implementado o algoritmo MPC com passo de
estabilidade, a ac?a?o de controle e? calculada em dois
passos, garantindo estabilidade e robustez na planta,
provocando uma melhora na rejeic?a?o a perturbac?o?es
na?o modeladas. Os resultados sa?o comparados com o al-
goritmo DMC de forma recursiva, aplicando a filtragem
do erro de predic?a?o.

I. Introduc?a?o

A te?cnica de Controle Preditivo Baseado em Modelo
(Model Based Predictive Control, MBPC ou Model Pre-
dictive Control, MPC), e? uma das te?cnicas de controle
moderno mais avanc?adas. Em sua forma mais geral, aceita
qualquer tipo de modelo, func?o?es objetivo ou restric?o?es [1].
Um dos motivos para o e?xito desta te?cnica e? a maneira na
qual os problemas de controle sa?o formulados no dom??nio
do tempo [2], permitindo que os algoritmos sejam muito
mais simples de compreender.

As diferenc?as entre os diversos algoritmos existentes
devem-se basicamente a? forma de escolher os modelos de
predic?a?o para o processo, a forma como as perturbac?o?es e
os erros de predic?a?o sa?o tratados, o tipo de func?a?o objetivo
e o procedimento para o ca?lculo do sinal de controle [3]. O
modelo de predic?a?o e? o elemento mais importante dentro
do projeto do controlador. Sua importa?ncia se deve ao fato
de que ele deve ser capaz de representar adequadamente a
dina?mica do processo para permitir o ca?lculo das predic?o?es
da sa??da, ser intuitivo e ao mesmo tempo permitir uma
ana?lise teo?rica do sistema.

Em geral, o modelo utilizado para o projeto do con-
trolador MPC e? separado em duas partes: O modelo do
processo propriamente dito e o modelo das perturbac?o?es;

ambos necessa?rios para o ca?lculo das predic?o?es, da?? o nome
Modelo de Controle Preditivo [7].

O interesse pelos controladores MPC aplicados em con-
trole de processos industriais remete a um conjunto de
artigos apresentados no final de 1970. A apresentac?a?o do
Model Predictive Heuristic Control (MPHC), por [4], e a
do Dynamic Matrix Control (DMC), por [5] engenheiros
da Shell Oil Co, entre outros artigos, foram marcos iniciais
no uso de MPC na indu?stria. Posteriormente, a capacidade
do MPC de alcanc?ar sistemas de controle altamente efi-
cientes, determinando uma condic?a?o favora?vel de operac?a?o
mesmo em situac?o?es adversas, vem mostrando um ra?pido
progresso em pesquisas acade?micas e aplicac?o?es industriais
[6].

Um componente comum no comportamento dos proce-
ssos industriais, principalmente nos processos da indu?stria
de petro?leo e ga?s, e? o atraso de transporte. Na pra?tica, tem-
se muitos processos industriais onde o atraso e? causado
pelo transporte de material, energias ou pelo acu?mulo de
informac?a?o no sistema. Nesse caso, o sistema na?o responde
imediatamente. Ele leva algum tempo para exibir em sua
sa??da os efeitos de uma entrada [8].

Alguns trabalhos apresentaram estrate?gias interessantes
para contornar o problema do atraso de transporte e obter
melhor desempenho dos controladores. A maioria dessas
estrate?gias sa?o baseadas nas ideias do preditor de Smith
[9].

Em [10] foi proposto um trabalho aplicando o algoritmo
DMC que e? amplamente utilizado nas a?reas industriais, um
filtro e? inclu??do no modelo de predic?a?o do controlador para
conseguir rejeic?a?o da perturbac?a?o e melhorar a robustez,
especialmente quando sa?o considerados mu?ltiplos atrasos
de transporte e erros no modelo.

O algoritmo DMC e? modificado para um DMC de forma
recursiva, implementado segundo [5], e e? aplicado um filtro
no erro de predic?a?o partindo da ideia do preditor de Smith.

Segundo [5], as predic?o?es de malha aberta em t+k, dado
as informac?o?es em t e t + 1 sa?o mostradas nas equac?o?es
(1) e (2) respectivamente:

y0 (t + k |t) =
??

j=k+1

gj?u (t + k ? j) (1)

138



y0 (t + k |t? 1 ) =
??

j=k+2

gj?u (t + k ? j) (2)

Onde a diferenc?a entre a predic?a?o de malha aberta em
t + k dado t, e em t + k dado t? 1, e? apenas a nova ac?a?o
de controle que na?o e? conhecida em ?u(t?1). Subtraindo
as equac?o?es (1) e (2) tem-se a equac?a?o (3):

y0 (t + k |t) ?y0 (t + k |t? 1 ) =
gk+1?u (t? 1) +

??
j=k+2

gj?u (t + k ? j) +

?
??

j=k+2

gj?u (t + k ? j)
(3)

enta?o tem-se a equac?a?o (4):

y0 (t + k |t) = gk+1?u (t? 1) + y0 (t + k |t? 1 ) (4)
O ca?lculo do DMC de forma recursiva e? feito da seguinte

forma: Mante?m-se em memo?ria um vetor com N elemen-
tos, Ylivre = [y0 (t |t? 1 ) , ...,y0 (t + N ? 1 |t ? 1)]T , onde
N e? chamado de horizonte de modelo. Seus elementos sa?o
as respostas livres dadas as ac?o?es de controle conhecidas
ate? o instante t ? 1. Ao iniciar o controlador DMC no
instante t0, dado que o sistema encontra-se em regime
permanente, considera-se que as predic?o?es de malha aberta
sejam constantes e iguais ao valor de y(t0).

Ao iniciar a execuc?a?o do algoritmo DMC no instante t,
e? preciso atualizar o vetor da resposta livre, pois o incre-
mento da ac?a?o de controle ?u (t? 1) agora e? conhecido.
O vetor Ylivre da equac?a?o (5) e? atualizado.

Ylivre = Ylivre +

?
????

g1
g2
...
gN

?
???? ?u (t? 1) (5)

Apo?s obter o novo sinal de controle u(t), e? preciso
deslocar os valores dentro do vetor Ylivre. Isto porque
no instante posterior t + 1, sera?o requeridas as respostas
livres de t + 1 ate? t + N baseadas nos dados ate? t. Enta?o o
primeiro elemento e? descartado, pois e? a predic?a?o relativa
ao instante t que ja? passou. O problema e? que, ao se fazer
este deslocamento, o u?ltimo elemento, no caso a predic?a?o
em y(t + N|t), e? desconhecida. Pore?m, se o sistema for
esta?vel, pode-se considerar y0(t + N|t) ?= y0(t + N ? 1|t).
Assim, o novo vetor Ylivre sera? dado pela equac?a?o (6):

Ylivre =

?
??????

y0 (t + 1 |t)
y0 (t + 2 |t)

...
y0 (t + N ? 1 |t)
y0 (t + N ? 1 |t)

?
??????

(6)

A condic?a?o y0(t + N|t) ?= y0(t + N ? 1|t) e? mostrada
como:

y0 (t + N ? 1 |t) =
??

j=N

gj?u (t + N ? 1 ? j)

y0 (t + N |t) =
??

j=N+1

gj?u (t + N ? j) =
??

j=N

gj+1?u (t + N ? 1 ? j)
y0 (t + N |t) ? y0 (t + N ? 1 |t) =
??

j=N

(gj+1 ?gj) ?u (t + N ? 1 ? j)
Como gj+1 ?gj ?= 0,?i &gt; N, tem-se que y0(t + N|t) ?=

y0(t + N ? 1|t), como se queria demonstrar.
Assim, o ca?lculo da resposta livre considerada no DMC

de forma recursiva, e? dado pela equac?a?o:

f =

?
??
y0 (t + 1 |t)

...
y0 (t + p |t)

?
?? + 1p×1 (y(t) ?y0 (t |t)) (7)

No algoritmo DMC o erro entre a sa??da medida e a sa??da
predita no instante k e? usado para corrigir as predic?o?es de
cada estado de todos os elementos dentro do horizonte de
predic?a?o p. Onde a equac?a?o do erro do modelo e?:

e = y(t) ?y0 (t |t) (8)
Como e? mostrado em [13], a representac?a?o das predic?o?es

considerando o ca?lculo da resposta livre com o DMC de
forma recursiva, e? obtida com a equac?a?o (9):

Y? = f + 1p×1e + G?u (9)

onde:

• Y? sa??da predita de dimensa?o p× 1 ;

• f vetor da resposta livre de dimensa?o p× 1 ;

• G matriz jacobiana de Y? de dimensa?o p×m;

• ?u vetor de dimensa?o m× 1 que conte?m os
incrementos na ac?a?o de controle .

Onde p e? o horizonte de predic?a?o e m e? o horizonte de
controle.

Utilizando esta forma de implementac?a?o, os ca?lculos
necessa?rios para obter a resposta livre tornam-se mais
simples, na?o sendo necessa?rio o armazenamento dos incre-
mentos de controle passados. Com este procedimento, so?
e? alterado o modo de calcular a resposta livre, o restante
do algoritmo de controle na?o e? modificado.

Como o erro de predic?a?o e? expl??cito no DMC de forma
recursiva, e? poss??vel inserir um filtro de forma simples:

y? (t + k | t) =
k?

j=1

gj?u (t + k ? j) +

y0 (t + k | t) + F
(
z?1
)

(y (t) ?y0 (t | t)) (10)

E? poss??vel filtrar o erro de predic?a?o separadamente e
adiciona?-lo a? predic?a?o de malha aberta yo.

139



O filtro discreto fica na forma:

ef (k) = ?ef (k ? 1) + (1 ??) e (k) . (11)

Com 0 ? ? &amp;lt;1 para o erro filtrado inserido na predic?a?o.
A equac?a?o (9) pode ser reescrita como:

Y? = f + 1p×1ef + G?u (12)

O efeito do filtro e? ana?logo ao me?todo utilizado no
algoritmo DTC-GPC descrito em [11]. A ide?ia de aplicar
um filtro no erro de predic?a?o para corregir as predic?o?es,
pode ser aplicado a outros algoritmos MPC, como por
exemplo: GPC, DMC e PNMPC dentre as te?cnicas de
controle preditivo na?o linear proposto por [12], que vem
apresentando bom desempenho e vasta possibilidade de
aplicac?a?o, que se torna interessante quando avalia-se sim-
plicidade.

Existem varias pesquisas sobre algoritmos MPC para
modelos de predic?a?o com incerteza, nos quais se propo?em
estrate?gias para tratar este problema e uma revisa?o na?o e?
o propo?sito neste artigo.

O uso de filtragem no erro de predic?a?o e? muito inte-
ressante para o controle de plantas com erros de atraso
de transporte no modelo. Este me?todo tambe?m lida com
outros erros, mas os erros de tempo morto sa?o os mais
cr??ticos, ja? que podem facilmente instabilizar processos.

Em geral, o filtro na?o afeta a resposta do sistema quando
o modelo e? perfeito, mas sim quando existe erro no atraso
de transporte, no ganho e nas constantes de tempo entre
a planta real e o modelo de predic?a?o. Ale?m disso, muita
filtragem no sistema pode resultar numa resposta mais
lenta a perturbac?o?es.

Neste trabalho, apresenta-se a comparac?a?o do me?todo
aplicando o filtro no erro de predic?a?o e o me?todo proposto
por [12], que e? aplicado a plantas esta?veis em malha aberta
com erros no modelo de predic?a?o. No me?todo proposto em
[12] nenhum filtro e? utilizado. Em vez disso, o algoritmo
MPC com passo de estabilidade propo?e tratar o problema
em dois passos:

1) Passo de estabilidade
2) Passo de ca?lculo de controle

No passo de estabilizac?a?o, um sinal sera? calculado e
adicionado ao vetor do erro de predic?a?o, estabilizando
a planta. O passo de ca?lculo de controle usara? o erro
modificado sobre o ca?lculo do sinal de controle.

O artigo e? organizado da seguinte forma. Na Sec?a?o
II o algoritmo para obter o sinal de correc?a?o de erro
sera? derivado. Na Sec?a?o III sera?o mostradas as simulac?o?es
obtidas aplicando o DMC de forma recursiva com a te?c-
nica de filtragem no erro de predic?a?o e com a te?cnica
do passo de estabilidade, ambas aplicadas num reator
qu??mico com duas varia?veis manipuladas e duas varia?veis
controladas, comumente visto nas indu?strias petroqu??mi-
cas. Para demonstrar a efica?cia desta te?cnica, erros de
modelagens sera?o inseridos. Finalmente, na Sec?a?o IV sera?o
apresentadas as respectivas concluso?es do trabalho.

II. DMC de forma recursiva com passo de
estabilidade para compensac?a?o de erros no

modelo de predic?a?o

Uma das possibilidades de tratar os erros de predic?a?o e?
atrave?s da aplicac?a?o de filtros no erro de predic?a?o. Essa
estrate?gia tem a finalidade de melhorar a robustez da
planta frente a erros de modelo.

Como mencionado na sec?a?o anterior, no algoritmo DMC
proposto em [5], a correc?a?o de erro aplicados a?s predic?o?es
foi assumida constante e igual ao erro actual. A te?cnica de
filtragem descrita na sec?a?o 1, aplica um filtro no erro de
predic?a?o partindo da ideia do preditor de Smith.

Uma outra proposta e? a descrita em [13], onde se busca
um sinal que, somado ao erro verdadeiro, proporcione
robustez e estabilidade em plantas com erros de modelo
e um melhor desempenho frente a perturbac?o?es. Esta
soluc?a?o e? a derivada do erro de correc?a?o EL que e? somado
ao vetor de erro E.

Uma primeira opc?a?o para obter EL e? utilizar p poss??veis
diferentes elementos. No entanto, isso pode trazer um
elevado custo computacional. Assim, apresentam-se outras
opc?o?es para o projeto do vetor EL conforme [13]:

a: aplicando um horizonte de correc?a?o de erro pL =
p? ?p e ?p elementos nulos;

b: aplicando um horizonte de correc?a?o de erro pL
e repetindo o u?ltimo elemento do horizonte para
todos os p?pL elementos seguintes;

c: usando o conceito de blocking, onde EL e?
preenchido com nL grupo de diferentes valores
poss??veis;

d: preenchendo o vetor de tamanho p??p com um
u?nico valor de EL e ?p elementos nulos.

L
E

L
p

pp p??

(a)

L
E

L
p

pp p??

(b)

L
E 4Lp ?

p p? ? p

(c)

L
E 1

L
p ?

p p? ? p

(d)

Fig. 1. Formas de implementar EL

Para evitar que o requisito de estabilidade perturbe o
seguimento da refere?ncia quando se tem EL definido em
todos os elementos p, e? importante ter alguns dos u?ltimos
componentes de EL nulos. Isso tem o significado de dizer
ao algoritmo que a correc?a?o total deve convergir para
aquela utilizada pelo DMC de Cutler no final do horizonte
de predic?a?o.

140



Qualquer que seja a opc?a?o escolhida dentre as men-
cionadas anteriormente, o vetor final de estabilizac?a?o da
correc?a?o do erro e? expresso por:

Es = E + M ? EL (13)
onde:

EL: e? o vetor com todas correc?o?es do erro
de Lyapunov das varia?veis controladas[
E1L E

2
L . . . E

m
L

]T
,

E: e? o vetor com todos os erros verdadeiros das
varia?veis controladas

[
E1 E2 . . . Em

]T
,

Es: e? o vetor com todos os erros modificados,
M: e? uma matriz com dimensa?o

?1
m p ×

?1
m p. E?

composto de uns e zeros, de tal maneira que
implementa as estrate?gias mostradas na Figura
1.

Uma outra opc?a?o para obter o vetor EL, e? aplicar
o segundo me?todo de Lyapunov para estabilidade. Esse
me?todo se baseia na analogia de uma func?a?o de Lyapunov
V (x) com energia ou potencial EL [14]. Se x e? um ponto
que tem um equil??brio em 0, enta?o se existe um V (x) tal
que:

V (x) &gt; 0 para qualquer x 6= 0 e
V (x) = 0 so? para x = 0

(14)

Enta?o, se:
dV (x)

dt
? 0 (15)

x e? esta?vel no sentido de Lyapunov. Se
dV (x)

dt
? 0

e
dV (x)

dt
= 0. So? em caso de de x = 0 o sistema e?

assintoticamente esta?vel. Este e? um resultado muito bem
aceito e a base para muitos estudos de estabilidade [13].

Para plantas esta?veis em malha aberta, onde a instabi-
lidade e? causada pela ac?a?o de controle devido a erros do
modelo de predic?a?o, e? natural considerar como uma func?a?o
de Lyapunov:

L =
1

2
?uT ?u (16)

Observe que L e? uma func?a?o Lyapunov candidata,
va?lida desde que ?u = 0 seja a condic?a?o de equil??brio
para:

L (0) = 0 e
L &gt; 0 para qualquer ?u 6= 0 (17)

Considerando um caso irrestrito, onde:

?u = K (W ? F)

K =
(
GT RG + Q

)?1
GT R

F = Fsc + E + MEL

(18)

Na equac?a?o (18), W representa o vetor de trajeto?rias
desejadas dentro do horizonte de predic?a?o, F e? a resposta
livre corrigida no horizonte de predic?a?o, R e Q sa?o as

matrizes de ponderac?a?o do set-point e de supressa?o de
movimento, Fsc e? a resposta livre sem correc?a?o ao longo do
horizonte de predic?a?o p, E e? o vetor do erro de predic?a?o
no instante atual, EL e? o vetor do erro de estabilidade
de Layapunov, que e? calculado para corrigir o erro de
predic?a?o.

A fim de assegurar estabilidade, deve-se cumprir ?L
?t
? 0.

?L
?t

pode ser calculado como:

?L
?t

= ?L
??u

??u
?EL

?EL
?t
,ou

?L
?t

= ?uT (?KM) ?EL
?t

(19)

Fazendo substituic?o?es:

?L

?t
= ?(W ? Fsc ? E ? MEL)T KT KM

?EL
?t

(20)

O termo EL
?t

pode ser reescrita como EkL ? E
k?1
L .

Assim, a expressa?o final para a equac?a?o (20) torna-se:

?L
?t

= 1
2
ETL?LEL ? 12 ?

T
LEL +

1
2
D

?L = M
T KT KM

A = W ? Fsc ? E

B = MT KT K

?L = ?LE
k?1
L + BA

D = AT BT Ek?1L

(21)

Tendo a expressa?o para ?L
?t

, pode-se formular o seguinte
problema de otimizac?a?o:

min
EL

J

sujeito a :

J = 1
2
ETL?EL ? 12 ?

T
LEL +

1
2
fP D (EL)

(22)

Os dois primeiros termos da equac?a?o (22) representam a
expressa?o ?L

?t
, exceto para o termo D na?o relacionado com

EL. A ideia e? que o valor encontrado de EL obrigue o
termo ?L

?t
? 0 a ficar negativo. Pore?m, isto deve ter um

limite, e essa e? a raza?o da presenc?a do termo fDP (EL).
Uma func?a?o positiva definida sobre EL deve ser concebida
com o objetivo de se contrapor ao termo negativo de
J. Ale?m disso, a func?a?o deve incluir ponderac?o?es para
ajustar uma melhor sintonia do controlador. A primeira
func?a?o candidata e? ETLM

T SLMEL. Os valores da diagonal
da matriz de ponderac?a?o SL atuam com o objetivo de
suprimir EL, a fim de evitar que o valor

?L
?t

seja negativo.
No entanto, o papel desta func?a?o e? limitado a suprimir
os valores negativos em J e na?o contribui para qualquer
outro atributo do sistema sob controle.

Outra func?a?o candidata definida positiva e?(
Y? ? W

)T
SL

(
Y? ? W

)
. Onde Y? = Fsc + E +

141



MEL + GK (W ? (Fsc + E + MEL)). O objetivo desta
func?a?o e? suprimir os valores negativos de J, estabelecendo
uma relac?a?o entre o principal objetivo, que e? evitar ?L

?t
seja negativo, garantindo o seguimento da refere?ncia. Os
elementos positivos da matriz diagonal SL sa?o ajustados a
fim de obter EL que proporcione estabilidade e seguimento
da refere?ncia para o sistema sob controle.

Finalmente, o problema de otimizac?a?o quadra?tica para
obter EL e? formulado como:

min
EL

J

sujeito a :

J = 1
2
ETL?EL ? 12 ?

T EL

? = MT
(
KT K + ZT SLZ

)
M

Z = GK ? I?n
1
p×

?
n
1
p

?T = ?LE
k?1
L + BA + M

T ZT SLZA

(23)

Para o caso sem restric?o?es, o valor do vetor EL que
minimiza J e?:

EL = 0.5?
?1? (24)

A matriz ? sera? definida positiva, desde que a matriz
de ponderac?a?o diagonal SL seja escolhida com valores
positivos.

Um aspecto interessante desta metodologia e? que restri-
c?o?es em ?u e u podem ser atendidas na etapa de esta-
bilidade. Introduzindo restric?o?es no sistema, os seguintes
termos se podem escrever como:

?u ? B e? equivalente a :

K (W ? Fsc ? E ? MEL) ? B

ou :

?KMEL ? B ? K (W ? Fsc ? E)

(25)

O vetor u pode ser escrito como: u = uk?11m×1 +
TI ?u, onde TI e? a matriz Toeplitz integradora, e 1m×1
e? um vetor de uns para um caso SISO pelo que se torna
simple de implementar como e? mostrado:

u ? C e? equivalente a :

uk?11m×1 + TI K (W ? Fsc ? E ? MEL) ? C

ou :

TI KMEL ? C ? uk?11m×1 ? TI KA

A = W ? Fsc ? E

(26)

Ao introduzir estas restric?o?es na programac?a?o quadra?tica,
dada pela equac?a?o (23), o valor de EL obtido pode ser
usado na equac?a?o (27) para derivar ?u.

?u = K (W ? F)

F = Fsc + E + MEL

(27)

O vetor ?u obtido provera? estabilidade ao sistema
respeitando as restric?o?es impostas em ?u e u. O resultado
e? interessante, uma vez que resolve uma dificuldade que e?
a de garantir a estabilidade com restric?o?es.

III. Simulac?o?es e resultados

Nesta sec?a?o, os resultados de simulac?a?o sa?o apresentados
aplicando as te?cnicas discutidas nas sec?o?es anteriores. O
algoritmo DMC de forma recursiva sera? implementado
num reator de tanque agitado, como mostrado na Figura
2 e descrito pelo modelo com a seguinte matriz de
transfere?ncia (as constantes de tempo sa?o expressos em
minutos) [11]:

[
Y1 (s)
Y2 (s)

]
=

?
??

e?0.24s

1+0.7s
5e?0.24s

1+0.3s

e?0.09s

1+0.5s
2e?0.09s

1+0.4s

?
??
[
U1 (s)
U2 (s)

]

TT

Reator

Alimentação

Refrigerante

Efluente

Fig. 2. Reator de tanque agitado

As varia?veis manipuladas U1 (s) e U2 (s) sa?o respectiva-
mente a vaza?o de alimentac?a?o e a vaza?o do fluido refri-
gerante no revestimento. As varia?veis controladas Y1 (s) e
Y2 (s) sa?o a concentrac?a?o do efluente e a temperatura do
reator, respectivamente. Como se pode observar na matriz,
existe influe?ncia entre as varia?veis controladas, ja? que o
sistema e? acoplado.

Utilizando um tempo de amostragem de Ts = 0, 03min
o modelo discretizado e? mostrado nas seguinte matriz
com func?o?es de transfere?ncia discretas:

[
y1 (t)
y2 (t)

]
=

?
??

0.0420z?1

1?0.9580z?1 z
?8 0.4758z?1

1?0.9048z?1 z
?8

0.0582z?1

1?0.9418z?1 z
?3 0.1445z?1

1?0.9277z?1 z
?3

?
??
[
u1 (t)
u2 (t)

]

Os tempos mortos neste caso sa?o causadas por efeitos de
medic?a?o. O tempo morto na temperatura de sa??da y2 (t) e?
o tempo necessa?rio para transportar o fluido para o sensor.

142



O tempo morto na concentrac?a?o y1 (t) e? causada pelo efeito
de transporte e o tempo requerido pelo analisador. Os
tempos mortos m??nimos sa?o: d1 = 8 e d2 = 3.

Implementando o DMC de forma recursiva com a te?c-
nica de passo de estabilidade, foi percebido que con-
siderando so? a matriz de ponderac?a?o SL, o valor desta
tinha que ser muito pequeno, com o que ? da equac?a?o (23),
resultava em valores muito pequenos. Tentando melhorar
isso, foi considerada a incorporac?a?o de uma outra matriz
de ponderac?a?o denominada PL, em ? e B como se mostra
na equac?a?o (28):

B = MT KT PLK
? = MT

(
KT PLK + Z

T SLZ
)
M

(28)

A Figura 3 mostra as respostas ao degrau com seus
respectivos atrasos de transporte para cada func?a?o de
transfere?ncia.

0 50 100 150
0

0.5

1
g11

Resposta ao 
degrau FT11

0 50 100 150
0

2

4

6
g12

Resposta
ao degrau FT12

0 50 100 150
0

0.5

1
g21

Resposta
ao degrau FT21

0 50 100 150
0

0.5

1

1.5

2
g22

Resposta ao 
degrau FT22

Fig. 3. Resposta ao degrau das func?o?es de transfere?ncia

A Figura 4 mostra os erros no atraso de transporte e no
ganho, entre a planta real e o modelo de predic?a?o. Como
pode-se observar nesta figura, no primeiro teste, na?o foram
considerados erros de modelo, no atraso de transporte nem
no ganho. As resposta do sistema sem erros, e? mostrado na
figura 5. Pode-se observar que aplicando as duas te?cnicas,
se obte?m um bom seguimento da refere?ncia e rejeic?a?o
das perturbac?o?es na?o modeladas. Mas se percebe que a
utilizac?a?o do filtro no erro de predic?a?o deixa o resposta
lenta em comparac?a?o como a resposta aplicando a ide?ia
do passo de estabilidade.

Todas as func?o?es de transfere?ncia sa?o sistemas de
primeira ordem com atraso de transporte. Um outro teste
e? mostrado na figura 5, a? esquerda os atrasos de transporte
utilizados no modelo de predic?a?o e os utilizados para
simular a planta real. Na direita mostra a relac?a?o dos
erros no ganho entre a simulac?a?o da planta real e os erros
nos ganhos do modelo de predic?a?o. Como observado nesta
figura, a dista?ncia existente entre o quadrado e o c??rculo
representa a incerteza introduzida no sistema.

FT11 FT12 FT21 FT22
3

3.5

4

4.5

5

5.5

6

6.5

7

7.5

8
Atrasos

Atr. usados predição
Atrasos reais simulados

FT11 FT12 FT21 FT22
0.5

1

1.5

2

2.5

3

3.5

4

4.5

5
Ganhos

Ganhos usados predição
Ganhos reais simulados

Fig. 4. Erros usados na simulac?a?o teste I

Os horizontes de predic?a?o p1 e p2 para y1 (t) e y2 (t) sa?o
50 e 40, respectivamente. O horizonte de controle m1 e m2
e? de 10. O vetor EL e? implementado usando a estrutura
a) da Figura 1, com um horizonte de erro pL = 5.

As ponderac?o?es dos pesos no controle e no seguimento
da refere?ncia, utilizando o DMC de forma recursiva e
aplicando o filtro no erro de predic?a?o sa?o: ?1 = 2, ?2 = 10
e ?1 = 0, 01, ?2 = 0, 1 e um valor de ?1 e ?2 de 0, 75 para
o filtro no erro de predic?a?o da equac?a?o (11).

Tempo)[min.]
0 200 400 600 800 1000 1200 1400 1600

S
a

id
a

s

0.2

0.4

0.6

0.8
Variaveis)controladas

y
1

(E
L
)

y
2

(E
L
)

y
1

(F)

y
2

(F)

Ref
1

Ref
2

Tempo)[)min.])
0 200 400 600 800 1000 1200 1400 1600

C
o

n
tr

o
le

0

0.1

0.2

0.3

0.4
Variaveis)manipuladas

U
1

(E
L
)

U
2

(E
L
)

U
1

(F)

U
2

(F)U
2
(F)

U
1
(E

L
)U

1
(F)

y
1
(E

L
)

U
2
(E

L
)

y
2
(F)y

2
(E

L
)

y
1
(F)

Fig. 5. Resultado da simulac?a?o teste I

FT11 FT12 FT21 FT22
0

2

4

6

8
Atrasos

Atr. usados predição
Atrasos reais simulados

FT11 FT12 FT21 FT22
0

2

4

6

8

10
Ganhos

Ganhos usados predição
Ganhos reais simulados

Fig. 6. Erros usados na simulac?a?o teste II

A abordagem do passo de estabilidade garante a esta-
bilidade no sistema. As ponderac?o?es dos pesos no controle
e no seguimento da refere?ncia no DMC de forma recursiva

143



Tempo)[min.]
0 200 400 600 800 1000 1200 1400 1600

S
a

id
a

s

0.2

0.4

0.6

0.8
Variaveis)controladas

y
1

bE
L
ç

y
2

bE
L
ç

y
1

bFç

y
2

bFç

Ref
1

Ref
2

Tempo)[)min.])
0 200 400 600 800 1000 1200 1400 1600

C
o

n
tr

o
le

0

0.05

0.1

0.15

0.2
Variaveis)manipuladas

U
1

bE
L
ç

U
2

bE
L
ç

U
1

bFç

U
2

bFç

y
1
bE

L
çy 1 bFç

y
2
bE

L
ç

U
2
bE

L
ç

U
2
bFç

U
1
bE

L
ç

perturbação
de)entrada

perturbação)
de)saída

y
2
bFç

U
1
bFç

Fig. 7. Resultado da simulac?a?o teste II

Tempo [min.]
0 50 100 150 200 250 300 350 400

E
r

0.1

0.2

0.3

0.4

0.5

0.6

0.7

0.8
Erros

E
L
y

1
(1)+E y

1

E(Filtro)y
1

Fig. 8. Comparac?a?o dos erros

aplicando o passo de estabilidade, sa?o: ?1 = 0, 01, ?2 = 2
e ?1 = 0, 01, ?2 = 0, 1.

Na Figura 7 se mostra a resposta do sistema frente
aos erros apresentados na Figura 6. Na Figura 7, uma
perturbac?a?o na?o modelada e? introduzida no minuto 450,
mantendo-se ate? o minuto 1050. Como pode se observar,
a te?cnica de passo de estabilidade mostra um melhor
seguimento da refere?ncia, comparada com a utilizac?a?o
de filtragem no erro de predic?a?o, quando existem erros
de modelo tanto para o ganho como para o atraso de
transporte. Por outro lado, a resposta na rejeic?a?o da per-
turbac?a?o e? mais ra?pida aplicando o passo de estabilidade,
ja? que o uso de muito filtragem no sistema pode causar
lentida?o na rejeic?a?o da perturbac?a?o.

A Figura 8, mostra a comparac?a?o dos erros entre as
duas te?cnicas apresentadas, que e? o erro filtrado para a
varia?vel controlada y1 (t) e o primeiro componente obtido
adicionando o erro verdadeiro de y1 (t) com o primeiro
componente do erro de Lyapunov EL (1). O comporta-
mento do erro de Lyapunov para a varia?vel controlada

TABELA I. Erro quadra?tico me?dio
Estrate?gia EQM1 EQM2

DMCF 1, 02X10
3 284,90

DMCEL 590,66 140,31

y1 (t), e? muito mais agressivo do que o erro filtrado, de
modo que compensa o erro de tempo morto no momento
da mudanc?a da refere?ncia. Como esperado, os erros no
sistema em estado estaciona?rio coincidem.

IV. Concluso?es

Com este trabalho tem-se outra opc?a?o para lidar com
erros de modelagem em plantas esta?veis de malha aberta,
que e? baseado no segundo me?todo de Lyapunov para a
estabilidade.

O passo de estabilidade modifica o erro de predic?a?o
futuro de forma otimizada, com o objetivo de propor-
cionar estabilidade no sistema. Com o intuito de prover
estabilidade o algoritmo encontra a correc?a?o necessa?ria a?
predic?a?o.

O tempo que leva para a te?cnica passo de estabilidade
aplicado no reator de tanque agitado para trazer y1 (t)
a? refere?ncia, e? cerca da metade do tempo que e? gasto
com a te?cnica de filtragem, como se mostra na Figura 7,
pelo que esta te?cnica mostrou um desempenho superior
em comparac?a?o com o me?todo de filtragem no erro de
predic?a?o, tanto no seguimento da refere?ncia como na
rejeic?a?o das perturbac?o?es na?o modeladas, o que da para
perceber na tabela I, onde se detalha o ca?lculos dos erros
quadra?ticos me?dios para cada estrate?gia.

Este e? um resultado interessante, pois em muitas plantas
principalmente nas a?reas de petro?leo e ga?s, a maioria das
varia?veis afetadas por perturbac?o?es na?o modeladas tem
um impacto econo?mico importante e afetam diretamente
no desempenho do processo. Quanto mais tempo se en-
contram fora das faixas aceita?veis de operac?a?o, maior e? a
perda econo?mica.

Agradecimentos

Os autores deste trabalho agradecem pelo apoio fi-
nanceiro recebido do programa de formac?a?o de recursos
humanos PHR-34 da Age?ncia Nacional do Petro?leo, Ga?s e
Biocombust??veis.

Refere?ncias

[1] Camacho, E. and Bordons, C. (2007). Model Predictive Control,
segunda edn. Springer.

[2] Bordons, C. Control Predictivo: metodolog??a, tecnolog??a y nuevas
perspectivas, 2000.

[3] Plucenio, A. et al. Controle preditivo na?o linear na indu?stria do
petro?leo e ga?s. PDPETRO, Outubro 2007.

[4] Richalet, J. and Rault, A. and Testud, J. (1978), Model Predictive
Heuristic Control: Aplication to industrial process. AUTOMA-
TICA.

[5] Cutler, C. and Remarker, B. (1980), Dynamic Matrix Control-A
Computer Control Algorithm. In Automatic Control, Conference,
San Francisco.

[6] Qina, S. and Badgwell, T. (2003). A survey of industrial model
predictive control technology, Control Engineering Practice.

144



[7] Garc??a, C. and Prett, D. (1989). Model predictive control: Theory
and practice-a survey, International Federation of Automation
Control.

[8] Normey, J. (2001). GPC adaptativo basado en el predictor de
Smith para procesos con retardo variable, Congresso Brasileiro
de Automa?tica.

[9] Smith, O. (1957). Closer Control of Loops with Dead-Time,
Chem. Eng. Progress.

[10] Lima, D. and Normey, J. and Plucenio, A. et al. (2014). Im-
proving Robustness and Disturbance Rejection Performance with
Industrial MPC, Congresso Brasileiro de Automa?tica.

[11] Normey, J. and Camacho, E. (2007). Control of Dead time
Processes. Springer.

[12] Plucenio, A. (2010). Desenvolvimento de te?cnicas de controle
na?o linear para elevac?a?o de fluidos multifa?sicos, Dissertac?a?o de
Doutorado-Engenharia de Automac?a?o e Sistemas, Centro Tec-
nolo?gico, Universidade Federal de Santa Catarina, Floriano?polis.

[13] Plucenio, A. and Campos, M. et al. (2014). Model Predictive
Control Algorithm with Stability Step, Congresso Brasileiro de
Automa?tica.

[14] Monteiro, L. (2006). Systemas Dina?micos. Livraria da F??sica.

145




</field>
	</doc>
</add>