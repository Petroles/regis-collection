<?xml version="1.0" encoding="utf-8"?>
<add>
	<doc>
		<field name="docid">BR-TU.20246</field>
		<field name="filename">3719_197036.pdf</field>
		<field name="filetype">PDF</field>
		<field name="text">
CLOVIS DE ALMEIDA JUNIOR 
 
 
 
 
 
 
 
 
 
 
 
 
 

SISTEMA ESPECIALISTA PARA DIAGNÓSTICO 
DE PROBLEMAS NO SISTEMA DE GERAÇÃO DE 

ENERGIA ELÉTRICA DE UMA REFINARIA DE 
PETRÓLEO 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

FLORIANÓPOLIS 
2003 



 
UNIVERSIDADE FEDERAL DE SANTA CATARINA 

 
PROGRAMA DE PÓS-GRADUAÇÃO EM ENGENHARIA 

ELÉTRICA 
 
 
 
 
 
 
 
 
 

SISTEMA ESPECIALISTA PARA DIAGNÓSTICO 
DE PROBLEMAS NO SISTEMA DE GERAÇÃO DE 

ENERGIA ELÉTRICA DE UMA REFINARIA DE 
PETRÓLEO 

 
 
 
 
 
 

Dissertação submetida à 
Universidade Federal de Santa Catarina 

como parte dos requisitos para a 
obtenção do grau de Mestre em Engenharia Elétrica. 

 
 
 
 

CLOVIS DE ALMEIDA JUNIOR 
 

 

 
 
 

Florianópolis, Julho de 2003



 ii 

 SISTEMA ESPECIALISTA PARA DIAGNÓSTICO DE 
PROBLEMAS NO SISTEMA DE GERAÇÃO DE ENERGIA 

ELÉTRICA DE UMA REFINARIA DE PETRÓLEO 
 
 
 
 

Clovis de Almeida Junior 
 
 

‘Esta Dissertação foi julgada adequada para obtenção do Título de Mestre em Engenharia 

Elétrica, Área de Concentração em Sistemas de Informação, e aprovada em sua forma 

final pelo Programa de Pós-Graduação em Engenharia Elétrica da Universidade Federal 

de Santa Catarina.’ 

 

 

______________________________________ 
Guilherme Bittencourt, Dr. Rer. Nat. 

Orientador 

 

 
______________________________________ 

Edson Roberto de Pieri, Dr. 
Coordenador do Programa de Pós-Graduação em Engenharia Elétrica 

 

 
 
Banca Examinadora: 
 

______________________________________ 
Guilherme Bittencourt, Dr. Rer. Nat. 

Presidente 
 

_____________________________________ 
Ricardo José Rabelo, Dr. 

 
 

______________________________________ 
Jacqueline Gisèle Rolim, Dr. Eng. 

 
 

_____________________________________ 
Mauro Roisenberg, Dr. 

 



 iii 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
A Deus, merecedor de toda a glória. 



 iv 

AGRADECIMENTOS 
 

 
 
 
Em primeiro lugar, a Deus, não porque seja praxe menciona-lo nesta parte de uma 
dissertação mas porque realmente sem a ajuda o ânimo e a inspiração Dele seria 
impossível ter este trabalho concluído. 
 
Em segundo lugar, a Deus,  
 

pelo bom e amigo orientador Guilherme sempre otimista, disponível, oportuno e 
competente em suas colocações, fundamentais para este trabalho;  
 
pelo colega de mestrado Tércio que com uma paciência de Jó me ensinou a 
programar em Jess e a resolver rapidamente alguns problemas de programação, foi 
fundamental, valeu Tércio; 
 
pelo acolhimento e amizade de todos os outros colegas do DAS que tornaram o 
ambiente agradável, relaxante e produtivo; 
 
pela colega de estudos Silvia, que no inicio dos estudos compensou minha ausência 
forçada de muitas aulas me colocando a par da matéria dada e viabilizando a 
conclusão com sucesso da etapa de créditos; 
 
por todos os professores que alem de competentes mostraram-se amigos 
enriquecendo e tornando  mais fácil este período de Mestrado, 
 
pela PETROBRAS  que incentivou e apoiou o tempo todo, cabendo mencionar os 
Superintendentes da REPAR Rubens Novick e Francisco que aprovaram e apoiaram 
este processo, o Paulo Rosa que como meu chefe no início do processo me 
incentivou muito  e finalmente, e com destaque, o Sergio Nicco que como meu 
gerente imediato durante todo período de mestrado me liberou para minhas 
necessárias viagens, e agüentou firme a minha ausência apesar das constantes 
urgências normais de um empreendimento, 
 
pelos meus pais Clovis e Yolanda, base de toda minha formação, amigos queridos e 
exemplo de vida, 
 
pelos meus filhos Mariana e Filipe, grande alegria na minha vida, com seu carinho, 
descontração, companheirismo e alegria, 
 
pela minha esposa Cici que ficou por último porque  considero a maior de todas as 
bênçãos recebidas, companheira, amiga, namorada e quem nas horas de dificuldades 
neste trabalho continuou me incentivando, além de ajudar na formatação desta 
dissertação.  

 
 
 



 v 

Resumo da Dissertação apresentada à UFSC como parte dos requisitos necessários para 
a obtenção do grau de Mestre em Engenharia Elétrica. 

 
 

SISTEMA ESPECIALISTA PARA DIAGNÓSTICO DE 
PROBLEMAS NO SISTEMA DE GERAÇÃO DE ENERGIA 

ELÉTRICA DE UMA REFINARIA DE PETRÓLEO 
 
 

Clovis de Almeida Junior   
 

Julho / 2003 
 

 
Orientador:  Guilherme Bittencourt, Dr. Rer. Nat. 
Área de Concentração: Sistemas de Informação 
Palavras-chave: Inteligência Artificial, Sistemas de Potência, Sistemas Especialistas, 
Ontologias 
Número de Páginas: 81. 
 
RESUMO: 
 

O objetivo deste trabalho é apresentar as etapas do desenvolvimento de um 

Sistema Especialista, dedicado a auxiliar a operação do sistema elétrico de uma refinaria 

de petróleo que possui geradores próprios e alimentação proveniente da concessionária 

de energia elétrica, durante situações em que ocorrem falhas no sistema, fornecendo aos 

operadores diagnósticos das falhas com indicações das prováveis causas. Especial 

ênfase foi dada na organização e separação dos tipos de conhecimentos envolvidos, 

buscando-se não somente transferir o conhecimento dos operadores para o sistema 

especialista, mas modelar uma ontologia de sistemas elétricos o mais genérica possível 

e regras de diagnóstico também genéricas, visando seu reaproveitamento em outros 

projetos similares. A implementação foi bem sucedida, confirmando a necessidade desta 

etapa inicial de Engenharia do Conhecimento onde o problema foi analisado e dividido 

por tipos de conhecimentos envolvidos, facilitando bastante a modelagem da ontologia 

deste sistema, a instanciação dos objetos e a construção das regras. Foram realizados 

testes simulando algumas situações anormais, com resultados satisfatórios. São 

apresentadas, ainda, sugestões para integração futura do sistema especialista, com a base 

de dados em tempo real dos Sistemas de Controle Digitais da refinaria, e para 

construção de interfaces de operação destes sistemas especialistas, também buscando 

uma solução o mais genérica, econômica e reaproveitável possível. 



 vi 

Abstract of Dissertation presented to UFSC as a partial fulfillment of the requirements 
for the degree of Master in Electrical Engineering. 

 

EXPERT SYSTEM FOR PROBLEM DIAGNOSYS IN THE 
ELECTRICAL GENERATION SYSTEM OF AN OIL 

REFINERY 
 
 

Clovis de Almeida Junior 
 

July / 2003 
 

 
Advisor:  Guilherme Bittencourt, Dr. Rer. Nat. 
Area of Concentration:  Information Systems 
Keywords: use as IEEE keywords: Artificial Intelligence, Power Systems, Expert 
Systems, Ontologies. 
Number of Pages: 81. 
 
ABSTRACT:  
 

The objective of this work is to present the steps to develop an Expert System 

dedicated to help to operate, during disturbances, the electrical system of an oil refinery 

that owns electrical generation and that also receives power from the public power 

company, presenting to the operators a fail diagnosis indicating the most likely causes. 

It was given special emphasis to the organization and separation of the domain 

knowledge, aiming not only transfer the operator knowledge to the expert system, but to 

model an electrical system’s ontology as generic as possible and diagnose rules also 

generics so they can be reused in other similar applications. The implementation was 

successful, what confirms the need of an initial knowledge engineering work, when the 

problem is analyzed and divided by knowledge types. This facilitates the modeling of 

the system’s ontology, the object instantiations and the rules building. Satisfactory 

results were obtained from tests that would simulate some abnormal situations. 

Suggestions for the expert system future integration with the real time database of 

refinery digital control system and for expert system’s operating interface construction 

are also presented in order to get as much as possible a generic, economic and reusable 

solution.  



 vii 

SUMÁRIO 
 

1. Introdução 1 
1.1.  Considerações iniciais  1 
1.2.  Objetivos deste trabalho 3 
1.3.  Organização do texto 4 

  
2. Descrição do problema 6 

2.1.  Histórico 6 
2.2.  O estado da arte 8 

  
3. Ferramentas 14 

3.1.  Sistemas especialistas 14 
3.2.  Engenharia do conhecimento 

3.2.1.  Introdução  
3.2.2. Ontologias 

17 
17 
18 

3.3.  PROTÉGÉ 20 
3.4.  JESS 23 

  
4. Estudo de Caso 27 

4.1.  Diagnóstico do sistema de geração 27 
4.1.1.  O sistema elétrico da REPAR 27 
4.1.2.  Análise do caso “Diagnóstico do sistema de geração” 29 

4.2.   Análise dos Tipos de Conhecimento 30 
4.3.  Desenvolvimento da Ontologia  32 
4.4.  Desenvolvimento das regras  36 

4.4.1.  Regras de topologia 37 
4.4.2.  Regras de diagnóstico 39 
4.4.3.  Regras de interface com o usuário 40 

4.5.  Resultados 45 
  
5. Conclusão 45 
  
Anexo 1 – Diagrama Unifilar da REPAR 48 
Anexo 2 – Exemplos gráficos das ontologias  49 
Anexo 3 – Desenvolvimento do SE da REPAR -SCMD  55 
Anexo 4 – Exemplos de regras 64 
Anexo 5 – Exemplos de tela de entrada de dados e saídas de 

diagnósticos obtidos nos testes 
75 

Referências 78 
 



 viii 

Lista de Abreviaturas 
 

 
API Application Software Interface 

ARCHON Architecture for Cooperative Heterogeneous On-line 

Systems  

CEFET/PR  Centro Federal de Educação Tecnológica do Paraná 

CLIPS “C” Language Integrated Production System 

COPEL Companhia Paranaense de Energia Elétrica 

EMS   Energy Management System 

IA    Inteligência Artificial 

IHM Interface Homem Máquina 

IMS   Information Management Station 

JESS   Java Expert System Shell 

KBS   Knowledge Based Systems 

MAS   Multi Agent System 

NASA National Aeronautics and Space Administration 

PI Process Information – Programa desenvolvido pela OSI 

software 

REPAR  Refinaria Presidente Getulio Vargas – Araucária/ PR 

SCADA  Supervisory Control and Data Acquisition 

SCMD  Sistema de Controle e Monitoração Distribuído 

SDCD  Sistema Digital de Controle Distribuído 

SE   Sistema Especialista 

UFSC Universidade Federal de Santa Catarina 

 
 
 
 



CAPÍTULO 1 

INTRODUÇÃO 

 
 
1.1 Considerações iniciais 

Tradicionalmente, as plantas industriais de refino de petróleo são grandes consumidoras 

de energia elétrica e sua operação segura e rentável depende fortemente da continuidade e boa 

qualidade deste recurso. 

Estas plantas são compostas por várias unidades tais como Destilação Atmosférica e a 

Vácuo, Craqueamento Catalítico, Desasfaltação a Propano, Hidrotratamentos, Recuperação de 

Enxofre, Transferência e Estocagem, Tratamento de Resíduos, Tochas e Tratamento de 

Efluentes, que são alimentadas através de uma rede de distribuição de alta tensão (13,8 kV) 

redundante, possuindo subestações industriais autônomas para alimentação e controle de suas 

cargas elétricas.  

Devido à necessidade de garantir-se o suprimento de energia e a disponibilidade de 

caldeiras geradoras de vapor, as refinarias em geral possuem, além da alimentação de energia 

vinda da concessionária local, uma ou mais centrais termelétricas, que atendem parte ou todo o 

consumo da energia e não raro permitem uma exportação de um excedente de geração para a 

concessionária de energia. 

A multiplicidade de subestações ligadas a estas duas fontes de energia (própria e 

pública) e os problemas de estabilidade do sistema, decorrentes da sua complexidade e grande 

interligação, tornam difícil sua operação, bem como as atividades de análise de ocorrências 

anormais, o restabelecimento do sistema após estas ocorrências e o planejamento de manobras 

para liberações para manutenção.  

Devido aos fatos acima expostos, a operação destes sistemas tem migrado, ao longo dos 

anos, de painéis convencionais para sistemas digitais de controle distribuído, onde a 

disponibilidade de informações e as possibilidades de atuação para o operador aumentam 

bastante, facilitando em parte o controle centralizado e remoto do sistema. Em contrapartida, 

isto potencializa a possibilidade de operações incorretas e dificulta sobremaneira a 

interpretação da causa de ocorrências anormais, pela grande quantidade de alarmes que surgem 

nestes momentos e pela não existência de vínculos destes alarmes com posições físicas 



 2 

(painéis, relés etc...) como no passado. Assim sendo a possibilidade de má interpretação e 

atuação incorreta pelo operador, que sofre grande pressão para o restabelecimento do sistema 

devido à criticalidade das cargas alimentadas, é muito grande.  

Neste cenário, torna-se vantajosa a implantação de um sistema de suporte ao operador 

para análise de ocorrências anormais, restabelecimento do sistema após falhas e planejamento 

de operações críticas, similar ao implementado na companhia de distribuição de energia elétrica 

espanhola IBERDROLA (JENNINGS et al., 1996; VARGA et al., 1994; COCKBURN et al., 

1992) resguardadas as diferenças de porte dos sistemas elétricos e dos sistemas de controle 

existentes. 

A operação de plantas industriais através de sistemas digitais de controle é uma 

tendência irreversível hoje em dia pelas grandes vantagens de flexibilidade, facilidade de 

instalação, menor custo, redução do número de operadores e confiabilidade. Em contrapartida 

esta nova forma de operar trouxe, junto com todas as facilidades, uma nova formatação do 

ambiente operacional, pois o operador estava acostumado a controlar estas plantas a partir de 

um painel convencional onde o número de informações e comandos disponíveis eram bem 

menores e existia um vínculo entre a posição física dentro do painel, console ou anunciador de 

alarme, e a grandeza que estava sendo monitorada ou controlada. Similarmente à leitura do 

mostrador de um relógio analógico, o operador, na maior parte das vezes, apenas olhava na 

direção do painel de anunciadores de alarme; pela posição das luzes que estavam acesas, 

concluía rapidamente qual problema estava ocorrendo e dirigia-se para a posição física do 

painel de controle que continha a botoeira ou controlador convencional associado à grandeza 

em que teria que atuar. A própria leitura dos indicadores analógicos associados a estes 

controladores, muitas vezes, prescindia o raciocínio real sobre o valor da grandeza que estava 

sendo controlada pois, freqüentemente, o valor normal da variável ficava marcado no dial do 

indicador, bastando alinhar o ponteiro do mesmo com esta marca. 

Nos sistemas digitais, uma mesma posição na tela do computador pode indicar qualquer 

grandeza e o operador tem que ler o texto no caso de alarmes e a identificação do equipamento 

para depois interpretar o significado do mesmo. No caso de atuações, isto se repete pois, para 

selecionar o equipamento em que pretende atuar, o operador tem que primeiro abrir a tela em 

que o mesmo aparece, depois localizá-lo nesta tela, selecioná-lo e então digitar o novo valor 

desejado o que proporciona uma grande quantidade de possibilidades de erros. Some-se a isto o 

fato de que se pode dispor do valor e estado de praticamente todas as variáveis analógicas e 

digitais que se queira, bem como se tem a possibilidade praticamente irrestrita de comandar 



 3 

equipamentos e ajustar pontos de trabalho de malhas de controle remotamente a partir da 

estação de operação. 

Na maior parte do tempo, com os sistemas em regime normal, isto não causa grande 

problema pois, juntamente com o grande número de variáveis, foram disponibilizados 

programas de controle automático mais avançados e abrangentes que aliviam a rotina do 

operador e, mesmo quando é necessária sua intervenção, este dispõe de tempo suficiente para 

fazer a operação com calma, evitando erros. Tudo muda de figura quando um problema 

acontece. Em sistemas elétricos, a falha de uma parte, em geral, acarreta uma série de 

problemas e perturbações em vários componentes do mesmo, de forma quase simultânea, dada 

à velocidade em que os fenômenos elétricos ocorrem e os equipamentos elétricos operam. Isto 

significa na prática que, quando uma falha ocorre num sistema elétrico, a tela do operador é 

imediatamente inundada por várias páginas cheias de mensagens de alarme e os valores de 

várias grandezas analógicas saem do seu ponto ideal de trabalho tornando muito difícil a 

interpretação do que realmente está acontecendo. Devido à pressão para retornar o sistema ao 

seu estado normal, o mais rápido possível, até mesmo operadores experientes por vezes 

concluem erroneamente sobre a causa das falhas e atuam de forma equivocada o que, 

freqüentemente, além de não resolver o problema, agrava a crise levando o sistema até ao 

desligamento total. 

Buscando contornar as dificuldades acima descritas, diversas aplicações baseadas em 

Inteligência Artificial (IA), principalmente na área de Sistemas Especialistas, têm sido 

desenvolvidas.  Exemplos deste tipo de aplicação podem ser vistos na seção 2.2, onde são 

referenciados trabalhos sobre sistemas para análise e filtragem de alarmes, diagnóstico de 

falhas, otimização de topologia, manobras programadas de rotina, controle de tensão, 

gerenciamento de cargas, treinamento e outros similares cuja implementação, usando técnicas 

de IA, fica facilitada dado que as soluções para estes problemas freqüentemente não são 

algorítmicas. 

 
 
1.2 Objetivos deste trabalho 

Neste contexto, o objetivo principal deste trabalho foi de explorar as dificuldades de 

implantação de um protótipo de um sistema especialista para diagnóstico da geração de energia 

elétrica de uma refinaria de petróleo, buscando estudar como organizar todos os conhecimentos 

envolvidos neste tipo de trabalho, na forma de regras. Um aspecto muito importante deste 



 4 

trabalho foi que se buscou nesta estruturação do conhecimento o máximo possível de 

generalização, visando o reaproveitamento em outros sistemas similares.  

Foi feita uma revisão bibliográfica a respeito de aplicações de IA na área de sistemas 

elétricos e como estudo de caso, foi implementado um Sistema Especialista, usando a 

ferramenta de desenvolvimento de Sistemas Especialistas Jess, para auxiliar os operadores na 

interpretação de condições anormais que estejam ocorrendo no sistema de geração de energia 

elétrica da Refinaria Presidente Getúlio Vargas (REPAR) da Petrobrás, localizada em 

Araucária - PR. A base de conhecimentos foi modelada utilizando-se ontologias desenvolvidas 

no Editor de Ontologias e Bases de Conhecimento Protégé. 

A interface com a base de dados em tempo real do sistema de controle da planta elétrica 

da refinaria e interfaces de entrada e saída de dados mais sofisticadas foram consideradas e 

analisadas do ponto de vista de viabilidade, mas sua implementação não foi feita por demandar 

um grande tempo de programação, exigir intervenções indesejadas, neste momento, no sistema 

de controle da refinaria e não contribuírem para o objetivo básico deste trabalho já descrito 

anteriormente.  

A aquisição do conhecimento dos especialistas do domínio “Operação de Sistemas 

Elétricos” foi feita em uma etapa anterior a este trabalho, com a assessoria de uma empresa 

contratada pela REPAR para auxiliar no desenvolvimento de um SE piloto. As escolhas feitas 

durante esta fase de aquisição de conhecimento, e como este foi documentado, também são 

abordados neste trabalho, analisando as influências no desempenho e facilidade de 

implementação das regras de diagnóstico decorrentes desta escolha. 

 
 
1.3 Organização do texto 

No capítulo 2 – Descrição do problema - é apresentado o histórico da implantação de 

sistemas de controle digitais nas refinarias da Petrobrás e, especificamente para o caso da 

REPAR, é fornecida uma rápida descrição do SCMD (Sistema de Controle e Monitoração 

Distribuído) instalado para controlar o sistema elétrico. Na seqüência é feita uma explanação do 

estado da arte das aplicações de IA em sistemas de potência para que se tenha um panorama 

dos tipos de aplicações que têm sido desenvolvidas.  

O capítulo 3 – Ferramentas – apresenta, inicialmente, algumas noções gerais sobre 

Sistemas Especialistas e Engenharia do Conhecimento e, depois, apresenta o Editor de 

Ontologia e Base de Conhecimento Protégé e a ferramenta de desenvolvimento de Sistemas 

Especialistas Jess, que foram utilizados neste trabalho. 



 5 

O trabalho desenvolvido é apresentado no capítulo 4, iniciando-se com um relato sobre 

a seleção do caso a ser implementado. Para facilitar o entendimento do problema que estará 

sendo tratado, é feita no início uma apresentação do sistema elétrico da REPAR e uma análise 

do caso implementado. A análise dos tipos de conhecimento, a ontologia e os diversos tipos de 

regras que foram desenvolvidos são apresentados na seqüência, sendo enfatizada a busca de 

uma maior generalização e possibilidade de reutilização das mesmas. A seguir, são 

apresentados e comentados os testes feitos no sistema e os resultados obtidos. 

No capítulo 5, inicialmente, são feitas algumas considerações sobre as oportunidades de 

implantação de novas funções que se abrem com a utilização da IA. Em seguida, é feita uma 

análise final do trabalho desenvolvido, apontando os ganhos obtidos pela estruturação de parte 

do conhecimento num editor de Ontologia e os próximos passos que teriam que ser dados para 

que este tipo de sistema possa ser integrado com o sistema real da REPAR.  

Exemplos gráficos das ontologias, listagem de parte das regras e telas de entrada de 

dados e saída de diagnósticos  são apresentadas nos anexos 1 a 5, juntamente com um diagrama 

unifilar simplificado do sistema elétrico da REPAR e parte do documento “REPAR – SCMD 

Desenvolvimento do Sistema Especialista”, que contém o conhecimento obtido dos 

especialistas na operação do sistema elétrico sobre o caso implantado. 

 
 



 6 

CAPÍTULO 2 

DESCRIÇÃO DO PROBLEMA 

 
 

2.1 Histórico 

No ano de 1983, a Petrobrás realizou Seminários de Automação envolvendo 

representantes da sede da empresa e várias de suas refinarias, onde foi constatado que o 

processo de automação utilizando SDCD  (Sistemas Digitais de Controle Distribuído) já 

contava com várias iniciativas na área de controle de unidades de processo de algumas das 

refinarias, mas que não havia nenhuma refinaria com todas as suas unidades de processo 

automatizadas com SDCD e que, na área de utilidades, mais especificamente na área elétrica, 

nada ainda havia sido feito.  Dados de uma consultoria anterior também indicavam que havia 

uma boa margem de ganho na área de refino, pela integração operacional obtida, se a operação 

de todas as plantas de cada refinaria pudessem ser concentradas em um centro de controle 

único. Foi, então, tomada uma decisão estratégica de realizar-se a automatização completa de 

todas unidades de processo e utilidades de uma refinaria e a REPAR, localizada em Araucária, 

no Paraná, foi escolhida por se tratar de uma unidade de bom desempenho e que, naquele  

momento, não contava com automação em nenhuma de suas unidades, que operavam baseadas 

em instrumentação eletrônica e pneumática.  

Foram feitas especificações de projeto de ambos sistemas, SDCD para área de controle 

de processo e SCMD (Sistema de Controle e Monitoração Distribuído) para a área elétrica e, 

em 1984, foi feita a contratação do fornecimento e montagem destes sistemas. No pacote do 

SCMD, que era completamente inédito no sistema Petrobrás, estavam incluídos os programas 

de controle e monitoração de todos equipamentos e motores elétricos da REPAR, que se 

convencionou chamar programas nível 1, e os programas de controle de geração, compra e 

venda de energia, descarte de cargas, reaceleração inteligente de motores e descarte térmico, 

chamados programas nível 2, porque não se referiam a equipamentos propriamente ditos mas a 

sistemas compostos de vários equipamentos localizados, muitas vezes, em  subestações 

diferentes. Além destes programas de controle, foi decidido desenvolver um Simulador do 

sistema elétrico para treinamento dos operadores e um Sistema Especialista para auxiliar os 

operadores do sistema elétrico.  



 7 

A idéia, nesta primeira fase do Sistema especialista, era desenvolver alguns casos piloto 

como auxílio a manobras críticas, diagnóstico de problemas no sistema de geração e análise de 

ocorrências anormais, visando explorar a potencialidade e viabilidade desta ferramenta que, 

depois, poderia ser usada para desenvolver novos casos conforme necessário. 

A empresa vencedora da licitação para o SCMD contratou  uma outra  empresa com 

tradição nesta área para assessorar os trabalhos de escolha de um programa para 

desenvolvimento deste SE, sua integração com a base de dados em tempo real do SCMD e a 

necessária Engenharia do Conhecimento sobre como obter, organizar e implementar o 

conhecimento do domínio na forma de um SE. A linguagem escolhida para esta primeira 

implantação foi o G2, da Gensym, que se comunicava com o SCMD através de estações IMS 

(Information Management Station) que estavam integradas na rede de protocolo proprietário do 

SCMD e que ofereciam, numa outra rede com protocolo TCP/IP, possibilidade de comunicação 

com um microcomputador onde rodava o SE. 

Desta primeira experiência de implantação ficaram muitas lições importantes sobre 

como obter e organizar o conhecimento do domínio e, para os primeiros quatro casos piloto, 

Diagnóstico de Geração, Liberação e Normalização de um  Alimentador, Balanço 

Termoelétrico e Procedimentos de Sincronismo, foi elaborado o documento “Desenvolvimento 

do Sistema Especialista” onde, na forma de tabelas e fluxogramas, este conhecimento está 

registrado. Este sistema inicial foi testado e operou por curto espaço de tempo devido a sérios 

problemas na interface com a base de dados em tempo real e a problemas no desenvolvimento 

das regras, basicamente por falta de compreensão mais  profunda sobre a  linguagem G2 ou 

sobre o conhecimento do domínio que estava sendo modelado. Devido ao fato de que a 

adaptação do G2 ao sistema da REPAR foi feita por terceiros, ficou também uma certa lacuna 

no conhecimento de como isto foi feito, o porque de algumas decisões terem sido tomadas e se 

estas decisões realmente eram as mais acertadas. Recentemente, um grupo de trabalho do 

CEFET/PR, junto com uma equipe da área de utilidades da REPAR, retomou o trabalho neste 

sistema, revendo a programação de alguns casos já desenvolvidos e buscando solução junto ao 

fornecedor do sistema  para os problemas de interface com o SCMD. 

O estudo de caso desta dissertação foi desenvolvido para que esta lacuna no 

conhecimento de como implementar Sistemas Especialistas fosse preenchida. Assim sendo, foi 

construído um novo sistema especialista, em um novo ambiente de programação, abordando 

um dos problemas já implementados anteriormente, visando, principalmente, um entendimento 

mais amplo das etapas envolvidas na modelagem dos vários tipos de conhecimento do domínio. 



 8 

2.2 O Estado da Arte   

A  pesquisa bibliográfica feita mostrou que existem muitos trabalhos já desenvolvidos 

aplicando IA a sistemas de potência. Alguns tipos de aplicação se repetem em vários trabalhos, 

evidenciando a necessidade de aplicativos para resolver problemas nestas áreas e a 

aplicabilidade da IA para resolver estes problemas. Por uma questão de organização do texto, 

dividimos as aplicações encontradas por tipos de problemas abordados (tabela 1) e pelo tipo de 

ferramenta de IA empregada no seu desenvolvimento (tabela 2).  

 

Auxílio à operação e 

recomposição de sistemas 

de potência 

BURT e MCDONALD, 1991, KIRSCHEN et al., 1989, LLOYD e STONE, 

1991, NIIMURA et al., 1988, ADAPA, 1994, ZHANG et al., 1989, 

MALHEIRO et al., 1999, PYE e RUSSEL, 1996,  MONDON et al., 1992, 

COCKBURN, 1993, CROCE et al., 2001, RIBEIRO et al., 1994, RAJESH, 

1997, ADIBI et al., 1994, SARTOR, 2002. 

Diagnóstico de problemas 

no sistema elétrico, Falhas 

de equipamentos, 

Priorização de alarmes 

MINAKAWA et al., 1995, BERNARAS et al., 1996, BURT e MCDONALD, 

1991, NILSSON, 1989, BOOTH, 1997, POWELL, 1993, BANN et al., 1997, 

VALE e MOURA, 1992, NIIMURA et al., 1988, HASAN et al., 1994, ZHU 

YONGLI et al., 1994, ENNS et al., 1994, SHERWALI e CROSSLEY, 1996, 

MORIGUCHI et al., 1988, MALHEIRO et al., 1999, COCKBURN, 1992, 

PYE e RUSSEL, 1996, COCKBURN, 1993, VAZQUEZ et al., 1997, 

AMJADY, 1998, RAJESH, 1997. 

Qualidade de energia MORCOS e IBRAHIM, 1999, CHADRASEKARAN e SUNDARAM, 1994. 

Projeto BURT e MCDONALD, 1991 

Verificações de segurança POWELL, 1993 

Controle de tensão e 

Potência reativa 

EKWE e MACQUEEN, 1995, ADAPA, 1994, BANSILAL et al., 1995, TAN 

LOC LE e NEGNEVITSKY, 1996, ROLIM et al., 1998. 

Manutenção LLOYD e STONE, 1991, COCKBURN, 1993. 

Planejamento da operação ADAPA, 1994, MOKHTARI et al., 1988, ZHANG et al., 1989, RAJESH, 
1997. 

Treinamento ADAPA, 1994. 

 

Tabela 1 - Tipos de problemas abordados 

 



 9 

Sistemas Especialistas MINAKAWA et al., 1995, BERNARAS et al., 1996, MORCOS e 
IBRAHIM, 1999, BURT e MCDONALD, 1991, KIT PO WONG, 1992, 

NILSSON, 1989, BOOTH, 1997, LO e NASHID, 1993, LLOYD e 

STONE, 1991, VALE e MOURA, 1992, NIIMURA et al., 1988, 

HASAN et al., 1994, ZHU YONGLI et al., 1994, ADAPA, 1994, 

MOKHTARI et al., 1988, ENNS et al., 1994, ZHANG et al., 1989, 

SHERWALI e CROSSLEY, 1996, BANSILAL et al., 1995, TAN LOC 

LE e NEGNEVITSKY, 1996, MORIGUCHI et al., 1988, MALHEIRO 

et al., 1999, COCKBURN, 1992, PYE e RUSSEL, 1996, MONDON et 

al., 1992, COCKBURN, 1993, VAZQUEZ et al., 1997, AMJADY, 

1998, CROCE et al., 2001, RIBEIRO et al., 1994, RAJESH, 1997, 

ADIBI et al., 1994, SARTOR, 2002. 

Redes Neurais MORCOS e IBRAHIM, 1999, EKWE e MACQUEEN, 1995, 
AMJADY, 1998, CHADRASEKARAN e SUNDARAM, 1994, 

RAJESH, 1997. 

Lógica Fuzzy MORCOS e IBRAHIM, 1999, EKWE e MACQUEEN, 1995. 

Quadros MINAKAWA et al., 1995. 

Algoritmos Genéticos EKWE e MACQUEEN, 1995. 

 

Tabela 2 - Tipos de técnicas  de IA empregadas 

 

Como pode ser visto nas duas tabelas acima, que apresentam apenas uma amostra 

selecionada dos trabalhos publicados sobre o tema, é grande a variedade de tipos de problemas 

tratados e das técnicas utilizadas para resolvê-los. A seguir, serão abordadas, de forma 

resumida, as principais características das aplicações mais freqüentes, com maior ênfase nos 

sistemas de  auxílio à operação, por se tratar do tipo de aplicação escolhida para ser 

desenvolvida no capítulo 4. 

Analisando-se a tabela 1, podemos ver que as aplicações se dividem em três grandes 

grupos: Auxílio a operação, Controle de tensão e potência reativa e Qualidade de energia. 

O primeiro grupo consiste de trabalhos publicados sobre o emprego da IA na área de 

sistemas de potência e abordam problemas relativos ao auxílio à operação, priorização de 

alarmes e recomposição de sistemas de potência (duas primeiras linhas da tabela 1).  

Com o aumento da complexidade, grau de interligação dos sistemas de potência e 

implantação de sistemas digitais de controle do tipo SCADA - Supervisory Control and Data 



 10 

Acquisition e EMS – Energy Management Systems, ocorreu um grande ganho de estabilidade e 

flexibilidade operacional, mas os operadores passaram a ter uma carga de trabalho muito maior 

dado o volume de alarmes e eventos que aparecem nas suas estações de controle, o que é 

agravado quando existem distúrbios no sistema.  

No passado, o volume de dados disponíveis por telemetria nos centros de controle era 

bastante limitado e as ações de controle possíveis também eram limitadas. Com a implantação 

dos SCADA, a falta de informação não é mais problema e sim o volume de dados disponíveis e 

o tempo restrito para uma resposta efetiva (BURT e MACDONALD, 1991). Adicione-se a este 

cenário o fato de que as informações a serem processadas e as decisões a serem tomadas, em 

situações  de distúrbio no sistema elétrico, são freqüentemente de natureza qualitativa, não se 

adequando aos métodos computacionais convencionais tais como programação linear e não 

linear. O operador, então, tem que interpretar uma enorme quantidade de dados e realizar 

complexos processos de raciocínio num curto espaço de tempo e sob uma forte pressão 

psicológica (KIRSCHEN et al., 1989). Estas observações confirmam a necessidade e a 

aplicabilidade de sistemas especialistas para diagnósticos de faltas em sistemas elétricos. 

No desenvolvimento de sistemas baseados em IA para sistemas de potência, vários 

métodos têm sido adotados, sendo os mais freqüentes os sistemas especialistas baseados em 

regras e os que adotam a arquitetura de quadro negro. Os sistemas de auxílio à operação 

normalmente têm sido implementados usando SE desenvolvidos a partir de regras. A 

flexibilidade e a modularidade desta ferramenta permitem um desenvolvimento gradual do SE  

e melhorias no conhecimento quando novo conhecimento é adquirido a partir  de novos eventos 

surgidos no domínio do problema (KIT PO WONG, 1992). Como exemplo deste tipo de 

sistema, podemos citar o sistema para auxílio à Recomposição de Subestações de Transmissão 

na fase fluente (SARTOR, 2002), que foi desenvolvido usando regras escritas com a ferramenta 

de desenvolvimento de sistemas especialistas Jess, a mesma que foi utilizada para desenvolver 

o trabalho desta dissertação. 

Outro exemplo interessante de aplicações de IA para auxílio à operação de sistemas de 

potência, já citada na seção 1.1, é a implementada na concessionária de energia elétrica 

espanhola IBERDROLA, onde foi desenvolvido um Sistema Multiagente (MAS) usando a 

arquitetura ARCHON (Architecture for Cooperative Heterogeneous On-line Systems) que foi 

desenvolvida para permitir que sistemas inteligentes pré-existentes, que tratassem de diferentes 

aspectos de um sistema complexo, cooperassem em benefício mútuo (JENNINGS et al., 1996;). 



 11 

Esta cooperação não fica restrita a sistemas especialistas, mas inclui, também, acesso a bases de 

dados e outros sistemas computacionais inerentes a sistemas de automação. 

O objetivo desta estrutura de desenvolvimento, ARCHON, é viabilizar um ambiente em 

que a interação cooperativa é possível. Os sistemas existentes (Sistema de Análise de Alarmes, 

Sistema Identificador de Áreas de Blackout, Sistema de Monitoração do Tempo, Sistema de 

Diagnóstico de Tensão etc.) não têm o conhecimento de como se comportar ou tirar vantagem 

do fato que existem outras entidades no ambiente. Tudo o que eles têm é o conhecimento 

necessário para resolver os problemas no seu nível de domínio. Para que o comportamento 

“social” aconteça, estes sistemas devem ser acrescidos com uma camada de conhecimento que 

os habilite a engajar-se em atividades cooperativas. Eles têm que saber como iniciar, manter e 

responder a situações onde seja necessária cooperação e serem capazes de avaliar as 

necessidades da comunidade bem como o seu papel nelas. Isto pode ser obtido acrescentando-

se a cada um deles uma série de módulos que contenham este conhecimento. Cada um destes 

sistemas isolados passa, então, a comportar-se como um agente deste sistema multiagente 

(VARGA et al., 1994; COCKBURN et al., 1992).  

O trabalho proposto se encaixa neste primeiro grupo no entanto por não ser um sistema 

distribuido não necessita ser desenvolvido em um ambiente MAS. 

O segundo grupo reúne aplicações que têm sido desenvolvidas para Controle de tensão 

e Potência reativa,  cujo objetivo é manter os níveis de tensão dentro dos limites especificados 

minimizando as perdas de transmissão e evitando casos de instabilidade de tensão. Este 

controle é obtido pelo chaveamento de bancos de capacitores e reatores controláveis 

remotamente, ajuste dos tapes dos transformadores e pela atuação na excitação dos geradores 

do sistema (EKWE e MACQUEEN, 1995, ADAPA, 1994, BANSILAL et al., 1995, TAN LOC 

LE e NEGNEVITSKY, 1996). Neste tipo de aplicação têm sido desenvolvidos trabalhos em 

que as ferramentas lógica fuzzy, redes neurais e algoritmos genéticos têm sido experimentadas 

(EKWE e MACQUEEN, 1995). Considerando que estes sistemas são aplicados ao controle de 

variáveis de sistemas elétricos reais e que um eventual mau funcionamento pode ter 

conseqüências graves dos pontos de vista de continuidade operacional, qualidade de energia e 

confiabilidade, estes devem ser totalmente testados e avaliados antes que sejam implementados 

num sistema real. A verificação destes sistemas apresenta algumas dificuldades porque o 

número de situações a serem simuladas durante os testes é muito grande e em (ROLIM et al., 

1998) é apresentada uma aplicação em foi desenvolvida uma interface entre um simulador 

estático de sistemas de potência, originalmente desenvolvido para treinamento, e o sistema 



 12 

especialista para controle de tensão SECTE, facilitando a geração de vários cenários de forma 

mais simples e fácil de visualizar.  

Este grupo por tratar de variáveis numéricas e regras não claramente especificadas 

utiliza redes neurais e lógica fuzzy o que não é o caso do sistema desenvolvido. 

O terceiro grupo de aplicações que têm ganhado importância nos últimos tempos, são as 

direcionadas à qualidade de energia, entre outras razões, porque: 

• Os equipamentos alimentados têm-se tornado mais sensíveis à qualidade da 

alimentação devido a muitos controles microprocessados;  

• Os processos industriais estão se tornando mais complexos e o religamento 

destas indústrias é difícil e caro; 

• Muitos equipamentos que usam eletrônica de potência, tais como sistemas 

ininterruptos de energia, retificadores e variadores de velocidade, têm sido instalados. 

Estes equipamentos são uma das maiores fontes de problemas de qualidade de energia, 

mas são também suscetíveis à baixa qualidade da energia; 

• Os sistemas de potência têm-se tornado cada vez mais complexos e interligados 

resultando em graves problemas quando um dos componentes falha.  

Uma das definições modernas para problemas de qualidade de energia, considerando o 

atual estágio de desregulamentação do mercado de energia elétrica, é qualquer problema 

manifestado na forma de desvios de tensão, corrente, ou freqüência que resulte em falha ou má 

operação de equipamentos do cliente.  

A avaliação da qualidade de energia é feita pelos especialistas pela análise de algumas 

características das grandezas elétricas tais como valor de pico, angulo de fase e amplitude de 

um distúrbio na senóide, taxa de subida, espectro de freqüência, harmônica dominante, 

freqüência de ocorrência, distorção harmônica total e percentagem de harmônicas impares e 

pares (MORCOS e IBRAHIM, 1999). 

Devido à característica de necessidade de reconhecimento de padrões de formas de onda 

no diagnóstico de problemas de qualidade de energia, aplicações que usam redes neurais têm 

sido desenvolvidas (CHADRASEKARAN e SUNDARAM, 1994). Entretanto, devido à 

indisponibilidade de facilidades de explicação desta ferramenta e ao fato de só reconhecerem 

padrões treinados previamente, sua melhor aplicação tem sido como auxiliar dos sistemas 

especialistas, executando uma classificação parcial, resultando numa efetiva redução de 

complexidade e tempo de resposta do sistema especialista.  



 13 

Da mesma forma, foram desenvolvidas aplicações que usam lógica fuzzy combinada 

com sistemas especialistas. O valor da lógica fuzzy neste tipo de aplicação surge das 

características imprecisas não só dos dados de entrada mas dos valores de amplitude e duração, 

que permitem distinguir e classificar os tipos de eventos, que também não são bem definidos. A 

lógica fuzzy é introduzida na base de conhecimento de um sistema especialista através do uso 

de regras fuzzy ou através do uso de regras bem definidas mas ligadas a um fator de confiança 

gerado para cada regra, fato e solução. 

A combinação de duas ou mais ferramentas em um sistema para análise da qualidade da 

energia tem-se provado bem efetiva. Suas aplicações típicas são sistemas de diagnóstico, 

sistemas de classificação e sistemas inteligentes de treinamento (MORCOS e IBRAHIM, 

1999). 

Qualidade de energia não é o enfoque deste trabalho podendo aparecer no futuro como 

uma extensão uma vez que foi desenvolvido utilizando sistemas especialistas. 

Outras aplicações de IA para projeto, verificação de segurança e manutenção de 

sistemas de potência têm sido desenvolvidas, normalmente com o uso de sistemas especialistas 

baseados em regras, e mais detalhes destas aplicações podem ser obtidos na literatura 

referenciada na tabela 1. 



 14 

CAPÍTULO 3 

FERRAMENTAS 

 
O objetivo deste capítulo é apresentar de forma breve, algumas das ferramentas que 

foram utilizadas no desenvolvimento deste trabalho. Inicialmente apresentaremos na seção 3.1 

algumas noções sobre sistemas especialistas. Apesar de, na seção 2.2, serem mencionadas 

outras ferramentas como redes neurais, lógica fuzzy e algoritmos genéticos, estas não serão 

apresentadas, podendo ser estudadas nos três livros referenciados na seção 3.1. Na seção 3.2, 

será abordado o tema engenharia do conhecimento, por ser a base da estruturação do sistema 

construído. Nas seções 3.3 e 3.4, aborda-se ainda, a ferramenta de desenvolvimento de sistemas 

especialistas Jess e o editor de ontologias Protégé, ambos  usados para implementar o sistema 

protótipo. 

 
 

3.1 Sistemas Especialistas 

Esta introdução aos Sistemas Especialistas foi baseada principalmente em 

(WATERMAN, 1996). Mais detalhes podem ser encontrados em (BITTENCOURT, 2001) e 

(RUSSEL e NORVIG, 1995). 

Sistemas especialistas são programas sofisticados de computador que manipulam 

conhecimento para resolver problemas eficientemente e efetivamente num domínio estreito de 

problemas complexos. 

Da mesma forma que especialistas humanos, estes sistemas usam lógica simbólica e 

heurística - regras práticas - para encontrar soluções. Entretanto, este sistema artificial tem 

características que levam a algumas vantagens sobre o humano, é permanente, consistente, fácil 

de transferir e documentar e barato e a algumas desvantagens, não tem inspiração, só faz o 

ensinado, depende de entrada simbólica, tem foco estreito e seu conhecimento é basicamente 

técnico.  

O coração dos Sistemas Especialistas é o conhecimento, que é a informação que o 

computador precisa para comportar-se inteligentemente. Esta informação pode tomar a forma 

de FATOS e REGRAS. Estes fatos e regras nem sempre são verdadeiros ou falsos. Algumas 

vezes existe um certo grau de incerteza sobre a validade de um  fato ou sobre a precisão de uma 



 15 

regra. Além disso, muitas regras são heurísticas porque os problemas abordados são 

freqüentemente difíceis ou mal entendidos. 

 O conhecimento em um SE é organizado de forma a separar o conhecimento sobre o 

problema propriamente dito, conhecido como base de conhecimento, dos outros conhecimentos 

do sistema tais como conhecimento geral sobre como resolver problemas, conhecido como 

motor de inferência, ou sobre como interagir com o usuário. 

A Base de Conhecimento de um Sistema Especialista contém fatos e regras que usam 

estes fatos como base para tomada de decisão. O Motor de Inferência contém um interpretador 

que decide como aplicar as regras para inferir novos conhecimentos e um planejador que decide 

a ordem em que as regras devem se aplicadas.  

Para ser eficaz, um Sistema Especialista deve ter uma base de conhecimento contendo 

muito conhecimento de boa qualidade sobre o domínio (problema a ser resolvido) e um motor 

de inferência contendo conhecimento sobre como fazer uso eficaz do conhecimento sobre o 

domínio. 

Existem algumas técnicas padrão para representação de conhecimento que podem ser 

usadas  isoladamente ou em conjunto para montar Sistemas especialistas. Cada técnica tem suas 

vantagens tais como, tornar o sistema mais eficiente, mais facilmente entendível ou mais fácil 

de modificar. As três técnicas mais usadas são Regras (a mais popular), redes semânticas e 

quadros. 

Os métodos baseados em Regras estão centrados no uso de construções do tipo SE .... 

ENTÃO.... . Quando a situação do problema analisado satisfaz a parte SE da regra, a ação 

especificada pela parte ENTÃO é executada. Esta ação pode afetar o mundo externo, 

redirecionar o programa de controle ou instruir o sistema a chegar a uma conclusão que será, 

por sua vez, armazenada na base de conhecimento. A execução deste casamento entre os fatos e 

as condições SE das regras pode produzir o que é normalmente chamado de cadeia de 

inferência.  Esta cadeia indica como o sistema usou as regras para inferir o resultado obtido. 

Regras fornecem um meio natural de descrever processos. Um conjunto de regras pode 

especificar como o sistema deve reagir à mudança dos dados sem requerer que se tenha um 

detalhado conhecimento antecipado sobre o fluxo de controle. Em um programa convencional, 

o fluxo de controle e o uso dos dados são pré-determinados pelo programa. O processamento 

ocorre em passos seqüenciais e desvios ocorrem somente em pontos pré-determinados. Isto 

funciona bem para problemas com solução algorítmica mas não para problemas movidos pelos 



 16 

dados, onde os desvios são a regra e não a exceção. O uso de regras simplifica o trabalho de 

explicar o que o programa fez ou como chegou a uma conclusão em particular. 

Os métodos baseados em Quadros e Redes Semânticas usam uma rede de nós 

conectados por relações e organizados hierarquicamente. Cada nó representa um conceito que 

pode ser descrito por atributos e valores associados com o nó. Os nós mais baixos na hierarquia 

herdam automaticamente propriedades dos nós de mais alto nível. Estes métodos  fornecem 

uma forma natural e eficiente de categorizar e estruturar uma taxonomia .  

A diferença básica entre os SE e os programas convencionais é que os SE manipulam 

conhecimento e os programas convencionais dados. A tabela 3 compara algumas características 

dos programas convencionais e dos SE e a tabela 4 apresenta vantagens e desvantagens dos SE 

(WATERMAN, 1996). 

 

Programas Convencionais Sistemas Especialistas 

Representação e uso de dados Representação e uso do conhecimento 

Método algorítmico Métodos heurísticos 

Processo repetitivo Processo de inferência 

Manipulação eficiente de grandes bases de 
dados 

Manipulação eficiente de grandes bases de 
conhecimento 

Produz a resposta certa sempre Normalmente produz respostas corretas mas 
às vezes erra 

 

Tabela 3 – Comparação de características 

 

 

Vantagens Desvantagens 

Permanente Sem inspiração 

Fácil de transferir Só o ensinado 

Fácil de documentar Entrada simbólica 

Consistente Foco estreito 

Acessível Conhecimento técnico 
 

Tabela 4 – Vantagens e desvantagens dos SE 

 



 17 

3.2 Engenharia do Conhecimento 

3.2.1 Introdução 
Esta seção, que trata da Engenharia do conhecimento, foi baseada principalmente em 

(STUDER et al., 1998). 

Os primeiros esforços no estudo da Inteligência Artificial foram no sentido de 

desenvolver formalismos, mecanismos de inferência e ferramentas para operacionalizar 

Sistemas Baseados no Conhecimento (KBS – Knowledge Based Systems). Tipicamente, os 

esforços de desenvolvimento estiveram restritos à construção de pequenos sistemas, de forma a 

estudar sua exeqüibilidade. 

Embora estes estudos tenham apresentado resultados promissores, a transferência destas 

tecnologias para o uso comercial de forma a construir grandes sistemas falhou em muitos casos. 

Esta situação pode ser diretamente comparada a uma situação similar ocorrida na construção de 

sistemas de software tradicionais chamada “Crise de software”, no final dos anos 60, onde as 

formas de desenvolvimento de pequenos protótipos acadêmicos não se aplicavam ao projeto e 

manutenção de sistemas comerciais grandes e duráveis. Da mesma forma que a crise de 

software resultou na criação da disciplina Engenharia de Software, a situação insatisfatória na 

criação de KBS tornou clara a necessidade de abordagens mais metódicas, resultando na 

criação da Engenharia do Conhecimento. 

O objetivo da Engenharia do Conhecimento é similar ao da Engenharia de Software: 

transformar o processo de construção de KBS de uma arte em uma disciplina de engenharia. 

Isto requer a análise do processo de construção e manutenção e o desenvolvimento de métodos 

apropriados, linguagens e ferramentas especializadas para desenvolvimento de KBS. 

No início da década de 80, o desenvolvimento de KBS era visto como um processo de 

transferência do conhecimento humano para dentro de uma base de conhecimentos 

informatizada. Isto era baseado na suposição de que o conhecimento necessário já existia e que 

deveria apenas ser coletado e implementado. Freqüentemente este conhecimento era obtido 

entrevistando os especialistas sobre como eles resolviam suas tarefas.  

Este tipo de abordagem acarretou que, na produção de grandes bases de conhecimento, 

diferentes tipos de conhecimento ficaram misturados, tornando a manutenção desta base de 

conhecimentos difícil e demorada, levando a uma mudança de paradigma de uma abordagem 

de transferência para uma abordagem de modelagem. 



 18 

Construir um KBS significa construir um modelo computacional com o objetivo de 

obter capacidades de Resolução de Problemas comparáveis às de um especialista no domínio. 

A intenção não é simular o processo de raciocínio de um especialista, mas criar um modelo que 

ofereça resultados similares. Embora o especialista possa conscientemente articular algumas 

partes de seu conhecimento, ele normalmente não está ciente de uma parte significativa de seu 

conhecimento já que este está oculto nas suas habilidades. Este conhecimento não está 

diretamente acessível, mas tem que ser construído e estruturado, durante a fase de aquisição de 

conhecimento. Assim sendo, este processo de aquisição de conhecimento não é mais visto 

como uma transferência de conhecimento para uma representação computacional apropriada, 

mas como um processo de construção de um modelo. 

Esta visão de modelagem do processo de construção de um KBS tem as seguintes 

conseqüências: 

• Como todos os modelos, este é somente uma aproximação da realidade. 

• O processo de modelagem é um processo cíclico. Novas observações podem 

levar a refinamentos, modificações ou complementações ao modelo construído. 

• O processo de modelagem dependente de interpretações subjetivas e uma 

avaliação do modelo é indispensável, devendo o mesmo ser revisado a cada 

estágio de avaliação. 

3.2.2 Ontologias 

O termo ontologia surgiu, originalmente, na filosofia (ele remonta às tentativas de 

Aristóteles de classificar as coisas do mundo) onde ele é empregado para descrever a existência 

de seres no mundo. A IA lida com o raciocínio sobre modelos do  mundo; logo, não é estranho 

que os pesquisadores adotem o termo ontologia para descrever o que pode ser 

(computacionalmente) representado do mundo em um programa.  

Durante o período em que a modelagem de KBS era feita através da transferência de 

conhecimento, este conhecimento era diretamente codificado usando linguagens de 

implementação baseadas em regras ou sistemas baseados em quadros, porém diversas 

dificuldades surgiram (STUDER et al., 1998): 

• diferentes tipos de conhecimento eram representados uniformemente, 
• alguns tipos de conhecimento não eram apresentados explicitamente,  
• o nível de detalhe era muito alto para representar modelos abstratos de KBS, 
• e aspectos do nível do conhecimento estavam constantemente misturados com 

aspectos da implementação. 



 19 

O interesse atual em Ontologias é a última da alternância de foco da IA entre teorias de 

conteúdo e teorias de mecanismos. Algumas vezes a comunidade de IA fica animada por 

alguns mecanismos tais como sistemas de regras, linguagens de quadros, redes neurais e lógica 

fuzzy que são propostos como o segredo para fazer máquinas inteligentes. Em outros 

momentos, descobre-se que por mais maravilhosos que sejam os mecanismos, eles não podem 

fazer muito sem uma boa teoria do conteúdo do domínio em que vai trabalhar. Mais ainda, 

freqüentemente, descobre-se que uma vez que uma teoria do conteúdo é disponível, vários 

mecanismos podem ser usados com sucesso para implementar sistemas efetivos, todos usando 

essencialmente o mesmo conteúdo. 

Ontologias são essencialmente teorias do conteúdo porque sua principal contribuição é 

identificar classes específicas de objetos e relações que existem em algum domínio 

(CHANDRASEKARAN et al., 1999). 

Desde o começo dos anos noventa, ontologias tornaram-se um tópico de pesquisa 

popular  investigado por várias comunidades de pesquisa de IA, incluindo engenharia do 

conhecimento, processamento de linguagem natural e representação de conhecimento. Mais 

recentemente, a noção de ontologia também está ficando difundida em campos como 

integração inteligente da informação, recuperação de informação na Internet, e administração 

do conhecimento. O uso de ontologias tem-se tornado um tema popular em grande parte devido 

ao fato que elas prometem um entendimento compartilhado e comum  de algum domínio que 

pode ser comunicado entre as pessoas e computadores.  

A motivação principal para o uso de ontologias é que elas permitem o 

compartilhamento e a reutilização de conhecimento. A ontologia captura a estrutura conceitual 

intrínseca do domínio e esta estrutura de representação pode ser compartilhada com outros que 

têm necessidades similares de representar conhecimento naquele domínio, eliminando a 

necessidade de refazer o processo de análise do conhecimento (CHANDRASEKARAN et al., 

1999). 

Ontologias são importantes porque a análise Ontológica esclarece a estrutura do 

conhecimento. Dado um domínio, sua ontologia forma a base de qualquer sistema de 

representação do conhecimento deste domínio. Logo, o primeiro passo no projeto de um 

sistema de representação do conhecimento efetivo é realizar uma análise ontológica efetiva do 

domínio.  

Basicamente, o papel das ontologias na Engenharia do Conhecimento é facilitar o 

processo de construção de um modelo de domínio. Uma ontologia provê um vocabulário de 



 20 

termos e relações  com que se modela o domínio. Por exemplo, se a ontologia adapta-se 

perfeitamente a um domínio, então um modelo do domínio pode ser obtido só preenchendo a 

ontologia com as instâncias do mesmo. 

Em  (BANN et al., 1997) é apresentado um ambiente de desenvolvimento e integração 

de sistemas especialistas aplicados a sistemas de potência visando facilitar a interface destes 

sistemas com o sistema digital de controle EMS (Energy Management System). Este ambiente 

contém um modelo de ontologia de sistemas de potência que viabiliza a integração e 

comunicação destes sistemas de forma organizada.  

 
 

3.3 Protégé 

A escolha do editor de ontologias Protégé para modelar o conhecimento do sistema 

protótipo deste trabalho deu-se basicamente por quatro motivos:  

• a disponibilidade de um plug-in para o Jess , o JessTab, que permite utilizar os 

arquivos com extensão “pprj” gerados pelo Protégé  como base de fatos do Jess,  

• a existência dentro da UFSC de experiência anterior com seu uso o que facilitou 

o treinamento na ferramenta, 

• a interface gráfica simples de usar e de boa qualidade desta ferramenta bastante 

adequada para instanciação futura dos objetos pelos especialistas do domínio 

modelado e 

• por se tratar de programa de uso livre podendo ser obtido de forma fácil e 

gratuita na internet. 

 

O Protégé-2000 é um editor de ontologias de código aberto, desenvolvido pelo 

Departamento de Informática Médica da Escola de Medicina da Universidade de Stanford, 

escrito em Java, que fornece uma arquitetura extensível para a criação de aplicações baseadas 

no conhecimento. Sua plataforma pode ser estendida com outros programas aplicativos, que 

aparecem como novos “TAB’s”, adicionando capacidade de gerar diagramas gráficos das 

ontologias criadas e executar diretamente em seu ambiente arquivos de regras de linguagens 

como o Jess que usam a base de conhecimento criada no Protégé. 

Ele dispõe de uma interface gráfica amigável, baseada em janelas, que permite ao 

usuário construir uma ontologia do domínio, formatar formulários para aquisição de 

conhecimento e entrar com o conhecimento do domínio. 



 21 

A criação da ontologia do domínio é feita na orelha “Classes”, onde podemos definir 

classes e hierarquia de classes, atributos e restrições de valores destes atributos e relações entre 

classes. O Protégé gera então um formulário “default”, na orelha “Forms”, para entrada das 

instâncias, baseado nos tipos de atributos especificados. Este formulário pode ser modificado 

movendo os campos na tela, mudando o seu tamanho, identificação e outras propriedades dos 

atributos. Este formulário formatado, fica disponível na orelha “Instances” onde, preenchendo 

os campos apresentados, os objetos de cada classe da ontologia definida podem ser instanciados 

(STANFORD UNIVERSITY, 2003). 

A seguir são apresentados exemplos destes três tipos de utilização: 

• figura 1 Criação de uma ontologia, 

• figura 2 Geração de formulários e 

• figura 3 Instanciação de objetos. 

 

 

Figura 1 – Criação de ontologias. 

  



 22 

 

Figura 2 – Geração de formulários. 

  

 

Figura 3 – Instanciação de objetos. 



 23 

3.4 Jess 

A escolha da ferramenta para desenvolvimento de sistemas especialistas Jess para 

escrever as regras do sistema protótipo deste trabalho foi feita com base nos critérios abaixo 

citados:  

• A ferramenta escolhida deveria ser de fácil integração com outros aplicativos já 

que o sistema desenvolvido prevê a aquisição de dados em tempo real a partir de 

sistemas digitais de controle, 

• Seria desejável que rodasse em diversas plataformas computacionais já que um 

dos objetivos deste trabalho é desenvolver um sistema que possa ser 

reaproveitado em outras plantas industriais, 

• Deveria possuir facilidade de integração com o editor de ontologias escolhido e  

• Deveria ser disponível e de fácil aquisição já que se trata de um trabalho 

acadêmico. 

 

O Jess, por ser escrito na linguagem Java, permite o desenvolvimento de sistemas 

especialistas baseados em regras, que podem ser conectados de forma forte e bem simples a 

programas escritos na linguagem Java, que é bastante poderosa e portável. Esta característica  

atende aos dois primeiros critérios de integração e portabilidade já que uma das características 

marcantes do Java é sua portabilidade, podendo rodar em plataformas de “hardware” e 

“software” diferentes. 

O terceiro critério, conforme já abordado na seção anterior, foi atendido pela 

disponibilidade do JessTab, que permite utilizar os arquivos com extensão “pprj” gerados pelo 

Protégé  como base de fatos do Jess, tornando esta integração muito fácil e robusta.  

Licenças para uso acadêmico do Jess são disponibilizadas gratuitamente para 

universidades e esta licença já era disponível  na UFSC, onde outros trabalhos de pesquisa 

utilizando esta linguagem já ocorreram (SILVA, 2002, SARTOR, 2002) e ainda estão 

ocorrendo. Este último fato facilitou, também, o aprendizado da linguagem pela troca de 

experiências com outros alunos de mestrado e doutorado. 

O Jess foi criado por Ernest Friedman-Hill, do Sandia National Laboratories, localizado 

em Livermore - CA, EUA. Foi inspirado originalmente no CLIPS, que é uma ferramenta de 

desenvolvimento de sistemas especialistas baseados em regras, escrita em linguagem “C,” 

desenvolvida pela NASA, mas desenvolveu-se de forma completamente distinta em um 

ambiente de desenvolvimento dinâmico. Usando o Jess, pode-se construir programas que têm 



 24 

capacidade de “raciocinar” usando o conhecimento fornecido na forma de regras declarativas. 

O Jess é considerado um dos motores de inferência menores, mais leves e rápidos disponíveis. 

Em essência, a linguagem Jess é compatível com o CLIPS e muitos programas escritos em Jess 

rodam em CLIPS e vice-versa. 

Assim como o CLIPS, o Jess usa, para processar as regras sobre a base de 

conhecimentos, o algoritmo Rete, um mecanismo muito eficiente para resolver o difícil 

problema “many-to-many matching” (FORGY, 1982).  O casamento das regras com a base de 

fatos é processado pelo motor de inferência apenas uma vez e, nesta oportunidade, cada regra é 

examinada para verificar se suas condições são atendidas pelos fatos. As regras que forem 

satisfeitas são então priorizadas de acordo com um método de solução de conflitos e 

disparadas. Novos fatos podem ser gerados pelas regras disparadas, o que pode gerar novos 

ciclos de processamento. Como normalmente o percentual de fatos alterados em relação ao 

total é baixo, o algoritmo RETE armazena as informações de disparo das regras em cada ciclo, 

de forma que, nos próximos ciclos, sejam verificadas apenas as regras afetadas pelas alterações 

na lista de fatos. A grande vantagem deste método é o ganho de velocidade de processamento e 

a desvantagem é que muito espaço de memória é ocupado. 

Ao iniciar o Jess, é apresentado o “prompt” de comando Jess&gt; que permite executar os 

comandos do Jess diretamente de forma interativa, ou seja, logo após a digitação do comando, 

o Jess responde na linha abaixo o resultado do processamento. Este modo é interessante para 

experimentar o resultado de trechos do programa durante a fase de desenvolvimento mas a 

programação de fato é feita em um editor de textos e, depois de salva com a extensão clp, 

executada através de um comando batch. 

A base de um sistema especialista desenvolvido em Jess são as regras que têm uma 

construção do tipo se...então semelhante a das linguagens de programação convencionais, mas 

que não é usada da mesma forma. Enquanto nos programas convencionais as construções 

se...então são executadas em uma ordem específica de acordo com a seqüência em que o 

programador as escreveu, no Jess, quando se usa encadeamento progressivo (forward chaining), 

as regras são executadas sempre que sua parte se seja satisfeita, e sua parte então é executada 

desde que o motor de inferência esteja rodando. Isto torna as regras do Jess menos 

determinísticas que os programas convencionais. 



 25 

As regras do Jess são iniciadas com a palavra defrule, como pode ser visto no exemplo 

simples abaixo: 

 

(defrule disjuntor-fonte-desligado 
         (object (is-a dj-fonte)(estado FALSE)) 
         =&gt; 
         (assert (sinal renovar)) 
         (bind ?*topologia* "")) 

  

 

Neste exemplo podemos ver que a regra é composta do nome “disjuntor-fonte-

desligado”  seguido da condição que fica à esquerda da seta e que, no caso exemplificado, vai 

ser satisfeita se for encontrado na base de fatos um objeto do tipo dj-fonte cujo atributo estado 

esteja no estado lógico FALSE. Neste caso, a ação que se segue ao disparo desta regra é a 

criação na base de fatos de um novo fato (sinal renovar) e do armazenamento do caractere  

vazio “ “ na variável ?*topologia*. 

A linguagem do Jess não é complicada mas exige que se tenha um certo domínio das 

funções e da sintaxe padronizada. O manual disponível (FRIEDMAN-HILL, 2001) é bem 

completo mas pobre de exemplos, o que por vezes torna difícil o entendimento do 

funcionamento de algumas funções. Um ponto muito positivo do Jess é que ela é uma 

linguagem bastante difundida e tem disponível uma lista de usuários onde se pode colocar as 

dúvidas, que são rapidamente respondidas pelo próprio autor do programa ou por outros 

usuários da lista. O livro “Jess in Action: Java Rule-Based Systems”, cujo autor Ernest J. 

Friedman-Hill é o criador do Jess, já está anunciado e deve estar disponível para venda nos 

próximos meses, devendo ser uma boa nova fonte de consulta. 

O Jess adicionou muitas funcionalidades ao CLIPS e um poderoso ambiente de 

desenvolvimento Java, onde é possível criar objetos Java e chamar métodos Java sem 

compilação. Esta forte integração com a linguagem Java é mais uma das vantagens da 

linguagem Jess que facilita, através do uso de Applets, criar interfaces gráficas em navegadores 

de Internet  que podem ser usados como Interface Homem Máquina (IHM) para entrada de 

dados pelo operador do sistema especialista e para o recebimento de diagnósticos e outras 

mensagens provenientes do sistema especialista. Este é um recurso bastante interessante porque 

simplifica a criação das IHMs  e torna fácil e amplamente disponível o acesso remoto ao 

sistema especialista através das Intranets das empresas ou da Internet, sem necessidade de 

investimentos adicionais em estações de operação e redes de comunicação. 



 26 

Para finalizar, foi comparado o preço de aquisição (para o caso do protótipo ser 

implantado) do Jess com o do G2 da Gensyn, que foi adquirido junto com o SCMD da REPAR, 

e, embora para o caso do G2 não exista taxa de manutenção anual como no caso do Jess, o 

custo de aquisição é aproximadamente quarenta vezes menor, o que pode ser decisivo na 

escolha desta linguagem, já que o menor investimento inicial ajudaria a viabilizar implantação 

em sistemas mais simples.  



 27 

CAPÍTULO 4 

ESTUDO DE CASO 

 
A seleção do caso a ser utilizado neste trabalho foi feita entre os já desenvolvidos na 

época da implantação do SCMD. Os casos desenvolvidos naquele trabalho abordavam os 

seguintes assuntos: 

• Diagnóstico de ocorrências anormais – Diagnóstico da Geração e Diagnóstico do 

Balanço Termo Elétrico, 

• Procedimentos – Liberação e normalização do Alimentador 3 e Procedimentos de 

Sincronismo. 

Analisando estes casos disponíveis, foi escolhido um dos casos de Diagnóstico de 

ocorrências anormais (Diagnóstico da Geração) porque as aplicações de SE, do tipo 

Procedimentos analisadas, levavam a uma série de regras específicas, que sempre disparavam 

na mesma seqüência, enquanto os casos do tipo Diagnóstico admitiam regras mais genéricas, 

onde a seqüência de disparo era função de uma infinidade de combinações possíveis das 

variáveis de processo lidas e utilizadas como gatilho, tornando a aplicação mais interessante. 

As quatro etapas que foram seguidas na implementação deste SE foram as seguintes: 

• Obtenção do conhecimento – Esta etapa foi feita anteriormente a este trabalho, 

conforme relatado na seção 1.2, e algumas considerações sobre a escolha dos tipos de 

variáveis a serem utilizadas é feita nas seções 4.1.2 e 4.4.2. 

• Análise dos tipos de conhecimentos – seção 4.2 

• Desenvolvimento da ontologia – seção 4.3 

• Desenvolvimento das regras – seção 4.4 

 
4.1 Diagnóstico do Sistema de Geração 

4.1.1 O Sistema Elétrico da Repar 

Dado que o sistema a ser implementado é o de Geração da REPAR, cabe aqui uma 

breve explanação das características básicas deste sistema visando um melhor entendimento do 

caso desenvolvido. 



 28 

O sistema elétrico da REPAR é alimentado em corrente alternada em 60 Hz, tendo os 

principais níveis de tensão: 

• 69.000 V - Recepção de energia elétrica pela subestação de entrada (SE-5600), 

fornecido pela COPEL - Companhia Paranaense de Energia Elétrica através de duas 

linhas de transmissão, 

• 13.800 V - Tensão  gerada pelos geradores TG_5601 e TG-5602 na Casa de Força 

e tensão de distribuição para as subestações externas através das Barras U, A, B e S, 

• 2.400 V - Tensão para alimentação de motores com potência maior ou igual a 150 HP,  

• 480 V - Tensão de alimentação de motores de 3/4 de HP até 125 HP, transformadores 

de iluminação, tomadas de solda, retificadores e as UPS que alimentam os consoles do 

SCMD e o sistema de instrumentação e controle do SDCD, 

• 240 /120 V - Tensão de alimentação dos circuitos de iluminação, sistema de 

aquecimento e alimentação dos motores menores do que 3/4 de HP, monofásicos.  

 

Figura 4 – Diagrama unifilar da REPAR. 



 29 

Na figura 4, é mostrado o Diagrama unifilar simplificado da REPAR onde se podem ver 

as duas linhas de transmissão por onde é feita a importação ou exportação de energia elétrica 

para concessionária, os dois transformadores de entrada que rebaixam esta tensão de 69kV para 

13,8kV alimentando a barra U. Pode-se ver também os dois Turbo Geradores de 20 MVA que 

são conectados respectivamente nas suas barras de geração A e B. Estas três barras de geração 

(U, A e B) podem interligar-se através da barra de sincronismo S e dos seus respectivos 

disjuntores de interligação 04, 07 e 16. De cada uma das barras de geração partem 

alimentadores para as subestações de área onde existem outros transformadores, chaves 

seccionadoras e painéis, que tornam disponível esta energia elétrica para os motores e demais 

cargas da REPAR nos níveis de tensão de utilização já mencionados acima. 

Para o caso em questão, a parte de interesse é a que aparece neste diagrama porque 

inclui todas as fontes de geração (Turbo Geradores e Concessionária de Energia)  e os 

disjuntores das fontes e de interligação cujo estado determina que fontes estão ativas, como e se 

elas estão interligadas.  

Quando um gerador está ligado a uma barra de geração e esta barra não está interligada 

com nenhuma outra, se diz que este gerador está operando em Ilha e, neste nosso exemplo, 

podemos ter as ilhas A, B e U já que estas são as barras que têm geração própria. Se uma barra, 

que tem geração conectada, interliga-se com outra também com geração,  forma-se uma nova 

ilha e, no nosso exemplo, temos as ilhas UA, UB, AB e UAB. A este conjunto de possíveis 

estados de fontes e barras interligadas dá-se o nome de topologia do sistema e para os 

diagnósticos de geração isto é de fundamental interesse, já que o comportamento dos geradores, 

quando operando ilhados, em paralelo com outro ou com a concessionária, difere 

completamente. 

4.1.2 Análise do caso “Diagnóstico do Sistema de Geração” 

A idéia básica deste caso escolhido é fornecer aos operadores do sistema elétrico da 

REPAR um diagnóstico das condições anormais que estejam ocorrendo no sistema de geração, 

englobando os dois turbo geradores e as linhas de entrada da concessionária de energia Copel. 

Baseado neste diagnóstico o operador pode tomar ou não as ações sugeridas. 

Como mensagem de saída, o sistema especialista apresenta em primeiro lugar o nome 

da falha detectada com o número da lista associada. Na seqüência é fornecida a mensagem de 

auxílio que é composta de três listas:  



 30 

• Causas - lista as possíveis causas para o problema detectado, 

• Providências - ações recomendadas para confirmar o diagnóstico e contornar a 

situação e  

• Diagnóstico - onde são detalhadas as causas indicando os componentes que podem ter 

falhado.  

As variáveis consideradas como fundamentais, pelos especialistas da REPAR, para 

detectar e analisar a existência de condições anormais neste sistema, foram as tensões, 

freqüências, potências ativas e reativas nas várias barras e fontes que compõem este sistema. 

Outras variáveis como, por exemplo, rotação das turbinas, pressão de vapor e óleo do 

governador, posição dos tapes dos transformadores de entrada e uma série de sinais do tipo 

queima de fusíveis, atuação de relés de proteção e falhas nos reguladores de tensão dos 

geradores também foram consideradas mas, na maior parte das vezes, estão associadas a 

condições do lado direito das regras, utilizando a funcionalidade do Jess que permite a 

introdução de um procedimento no lado esquerdo das regras. Esta opção trouxe várias 

vantagens, que serão abordadas na seção 4.4.2. 

 

4.2 Análise dos tipos de Conhecimento 

 

Durante os estudos das Tabelas Verdade e Listas de Diagnóstico que compõem o 

documento “REPAR – SCMD Desenvolvimento do Sistema Especialista”, verificou-se que 

haviam vários tipos de conhecimento envolvidos e que era muito importante separá-los, 

classificá-los e definir onde e como eles apareceriam no sistema especialista que estava sendo 

implementado, sempre visando uma boa organização deste conhecimento e a possibilidade de 

generalização, para permitir o reaproveitamento do mesmo em outros sistemas similares.  

Os tipos de conhecimento envolvidos podem ser vistos na lista abaixo: 

a. Equipamentos que compõem o sistema. Diz respeito ao tipo do equipamento (disjuntor, 

barra, transformador, gerador etc.), suas características, entradas e ou saídas e grandezas 

e estados que estão associados aos mesmos; 

b. Relacionamento entre estes componentes. É basicamente o conhecimento de como estes 

componentes estão interligados no sistema em questão; 

c. Topologias. É o conhecimento que permite que, baseado no conhecimento dos 

componentes, seus relacionamentos e estados, defina-se qual a topologia do sistema 

naquele momento; 



 31 

d. Variáveis analógicas do sistema e seus limites. Normalmente, estas variáveis estão 

associadas a algum equipamento do sistema (tensão de saída do gerador, Pressão de 

vapor da turbina, posição do Tap do transformador , etc.); 

e. Estado dos equipamentos e relés de proteção. Também são normalmente associados a 

algum equipamento; 

f. Interpretação do significado de cada variável e limite. Estas interpretações são de fato o 

conhecimento que o especialista no domínio tem sobre o sistema; 

g. Interpretação do significado de cada estado dos equipamentos e relés. O mesmo que o 

item anterior; 

h. Ações a serem tomadas dependendo de “f” e “g” acima. São os diagnósticos 

propriamente ditos. No caso estudado, divide-se em Causas, Providências e 

Diagnóstico. 

 

Com o desenvolvimento da análise deste caso de diagnóstico e o estudo das 

funcionalidades do Jess e do Protégé, tornou-se claro onde estes conhecimentos deveriam ser 

modelados visando a facilidade de entrada de dados durante a configuração e o 

reaproveitamento futuro da ontologia e regras desenvolvidas.   

Os conhecimentos do tipo “a” até “e”, na lista anterior, dizem mais respeito aos 

componentes, suas características, variáveis, limites e como eles se relacionam e ficaram 

modelados no editor de Ontologia Protégé. Os itens “f” a “h” representam conhecimentos que 

precisam ser expressos por meio de regras e foram modelados no Jess.  

Os resultados desta análise provavelmente constituem-se numa das conclusões mais 

importantes deste trabalho porque durante o desenvolvimento das regras e ontologias ficou 

muito mais claro  o papel de cada parte. Como exemplo podemos citar a inclusão dos 

conhecimentos de relacionamento, citados no item “b”, na ontologia, o que foi fundamental na 

criação de regras mais genéricas. Ao criar uma regra que trate de, por exemplo, um disjuntor 

fonte, não importa a que gerador ou barra ele está ligado porque esta informação vai ser 

buscada nos atributos deste disjuntor, definidos na sua instanciação, e então a regra, embora 

geral, dispara de forma diferente para cada disjuntor fonte instanciado dependendo da sua 

localização.  

Nos próximos dois itens deste capítulo, serão mais bem detalhados e exemplificados os 

conceitos apresentados acima e serão dados exemplos destas modelagens. 



 32 

4.3 Desenvolvimento da Ontologia  

Nesta parte do desenvolvimento do sistema buscou-se criar uma ontologia de sistemas 

elétricos o mais genérica possível de forma que fosse maximizada a possibilidade de 

reaproveitamento desta em outros projetos ou em outros casos de diagnóstico para este mesmo 

sistema da REPAR. Desta forma foram listados todos os equipamentos componentes do 

sistema elétrico em questão, foi feita uma classificação por tipo, buscando agrupá-los em 

grupos afins. O resultado desta análise pode ser visto nas figuras 5 e 6 a seguir, que são uma 

representação gráfica das classes de objetos definidos e suas subdivisões. 

 

Figura 5 – Exemplo de Ontologia. 

 

A figura 5 trata da classe chaveamento que se subdivide em disjuntores e seccionadoras. 

Os disjuntores e seccionadoras por sua vez se subdividem em outros tipos e assim 

sucessivamente até que todos os tipos de elementos de chaveamento sejam definidos.  Na 

figura 6, vemos os outros elementos componentes da Ontologia de Sistemas Elétricos definida 

e suas subdivisões, onde podemos ver as classes condutor e fonte que se subdividem e outras 

classes, como transformador, lista e ilha que não apresentam subdivisões. 

 



 33 

 
 

Figura 6 – Exemplo de ontologia. 

 

Uma das grandes vantagens deste tipo de estruturação do conhecimento é que as classes 

“filhas” herdam das classes “pai” todos os atributos que são comuns. Desta forma, todos os 

atributos (“slots”  no Protégé) que são comuns a uma classe podem ser definidos apenas na 

classe pai e todas as demais classes filhas o herdam bastando definir para estas classes filhas 

algum atributo extra que lhe seja particular. Outra grande vantagem é que, ao escrever regras 

que se apliquem a uma determinada classe, basta condicionar a ativação da regra ao fato do 

objeto instanciado pertencer àquela classe e esta regra passa a ser verificada para todos objetos 

desta classe. 

Analisando-se os tipos de conhecimento sobre sistemas elétricos que estão sendo 

modelados no Protégé, podemos ver claramente que parte deste conhecimento é comum a 

qualquer sistema elétrico que se esteja modelando e diz respeito ao tipo de funcionalidade que 

cada objeto modelado tem, as grandezas e estados associados ao mesmo e à forma como o 

mesmo se interconecta com outros objetos no sistema. Com isto, é esperado que seja possível 

um bom nível de reaproveitamento destas ontologias quando aplicadas a sistemas de outras 

refinarias.  

Detalhando um pouco mais, nós vemos que podemos dividir estes atributos em 

estáticos, dinâmicos e relacionais. Os atributos estáticos são aqueles que dizem respeito às 

características e limites do objeto modelado e, geralmente, se repetem em todos os objetos 

instanciados desta mesma classe. É o caso típico dos valores de tensão e freqüência nominais, 

máximas e mínimas de objetos instalados numa mesma barra. Os atributos dinâmicos são 

basicamente aqueles que têm seu valor associado ao estado ou valor real das grandezas 

associadas ao objeto. Como exemplos, temos o estado de um disjuntor, a tensão real de um 

gerador, a pressão real de óleo do governador de uma turbina e outros do mesmo tipo. Os 

atributos relacionais são estáticos no tempo mas geralmente são diferentes para os objetos de 



 34 

uma mesma classe. É o caso típico das listas dos objetos (disjuntores) ligados na entrada ou 

saída de uma barra.   

Para ilustrar, vejamos o caso de um objeto da classe barra de geração da figura 7, onde 

vemos no topo a classe “Barra” que já é filha da classe “Condutor”. Nos seus atributos (que são 

comuns para todos os tipos e barras) vemos definidos os atributos Saídas, Entradas, Nome, 

Tensão-alta, Tensão-real, Tensão-baixa. Observe que o tipo destes atributos (string, float, 

instance) também já está definido e, no caso de instâncias, os tipos de instâncias permitidas 

também (chaveamento, condutor) indicando, no caso, que na saída podem ser listadas 

instâncias de objetos da classe Chaveamento ou Condutor. Na seqüência, vemos a classe      

bar-geração, onde são definidos adicionalmente os atributos Interligação, Ilha-bar e Estado. 

Estes são necessários apenas para as barras de geração e, portanto, são definidos neste nível. 

Logo abaixo, vemos as três instâncias de barra de geração definidas no sistema da REPAR, (A, 

B e U) com seus atributos estáticos (tensão-alta e tensão-baixa),  dinâmicos (tensão-real) e os 

relacionais (nome, entradas, saídas, ilha-bar, interligação). 

 
Figura 7 – Objetos da classe “Barra”. 

 



 35 

Como já foi mencionada antes, uma das diretrizes que orientaram este trabalho foi 

buscar uma modelagem genérica de Sistemas Elétricos Industriais facilitando a entrada de 

dados dos componentes do sistema elétrico, da forma de relacionamento entre estes 

componentes e os dados característicos e limites dos mesmos. Tendo em vista que, nos casos 

práticos de implementações de SE, é bastante comum que os especialistas no domínio façam 

esta entrada de dados, esta deve ser clara e simples. O Protégé, além de ser um editor de 

ontologias, que nada mais é que uma ferramenta para organização estruturada de 

conhecimentos, possui facilidades para montagem de formulários que, depois, são preenchidos 

pelos usuários na geração de instâncias dos objetos já definidos. Isto, além de facilitar bastante 

o trabalho, já que a interface é do tipo janelas, também fornece, no caso de atributos tipo 

“instância”, uma lista dos tipos permitidos e, depois de selecionado o tipo desejado, uma lista 

de todas as instâncias já cadastradas naquele tipo, evitando erros de escolhas incompatíveis ou 

digitação pelo usuário. 

 

 

Figura 8 – Janela do Protégé para instanciação de objetos. 

 

A figura 8 mostra uma janela de entrada de dados do Protégé aberta, onde podemos ver 

que o TAB “Instances” está selecionado para abrir as janelas  que permitem a criação de novas 



 36 

instâncias. Neste exemplo, no lado esquerdo, podemos ver uma lista com as classes de objetos 

disponíveis e que foi selecionada a classe “dj-fonte”. Após esta seleção, imediatamente é aberta 

no centro da tela uma lista das instâncias já criadas, que podem ser editadas, e, na janela mais a 

direita, é aberto um formulário contendo todos os atributos que precisam ser preenchidos para 

criar uma nova instância. Neste caso, vemos que já foi preenchido o campo “Nome” e que, 

após selecionar o sinal “+” no campo “Ilha-dj”,  foi aberta uma outra janela que mostra que a 

única Classe de objetos que podem ser usados para preencher este campo é a “Ilha”, 

apresentando a lista das ilhas já cadastradas para que o usuário selecione a desejada. No caso de 

variáveis analógicas e digitais, é possível, durante o processo de criação de uma nova classe, 

definir valores “default” para estes atributos que, então, aparecerão já preenchidos, podendo ser 

alterados no processo de criação de uma nova instância. 

Outro fato que já foi mencionado anteriormente, mas merece destaque, é que, com a 

modelagem dentro do Protégé, do conhecimento sobre como os componentes do sistema 

elétrico se interligam, fica muito mais fácil e seguro para o usuário entrar com estes dados no 

sistema. Isto também permite a elaboração posterior de regras bem mais genéricas e simples, 

pois o conhecimento sobre o “esquema elétrico” do sistema que está sendo diagnosticado já 

está modelado na base de fatos carregados a partir do Protégé, e a regra  apenas utiliza esta 

informação para, por exemplo, obter o estado ou a tensão ou o que mais for necessário do 

objeto ou objetos que estejam listados como ligados na entrada ou saída do objeto que está 

sendo tratado pela regra. 

A migração dos dados cadastrados no Protégé para o Jess é bastante simples, sendo 

utilizado o “plug-in” JessTab desenvolvido por Henrik Eriksson da Linköping University. Este 

aplicativo permite, com a introdução de três linhas de comando no início do primeiro arquivo 

de regras do Jess, que sejam carregadas as funções adicionais do JessTab necessárias à 

manipulação destes fatos, seja carregada a própria base de fatos modelada no Protégé, que 

estava salva no formato pprj e, por fim, seja feito um mapeamento das classes Protégé dentro 

do Jess (ERIKSSON, 2003). Estas linhas de comando podem ser vistas na listagem do arquivo 

“go-casop1.clp” no anexo 3. 

4.4 Desenvolvimento das Regras  

Antes que fosse iniciado o processo de criação de regras no Jess, foi feita uma análise 

do documento “REPAR - SCMD – Desenvolvimento do Sistema Especialista”.  



 37 

Este documento, que tem parte de seu conteúdo listado no anexo 3, contém algumas 

definições iniciais sobre quais são os parâmetros para definir quando cada uma das variáveis 

dos objetos componentes do Sistema elétrico está no seu estado normal, alto ou baixo. Em 

alguns casos, estes valores são absolutos como, por exemplo, a freqüência é considerada baixa 

quando menor que 59,8 Hz, alta acima de  60,2 Hz e normal entre estes dois valores. Em outros 

casos, os valores são relativos e dependem de outras variáveis associadas ou não a este objeto, 

como é o caso do limite máximo de potência ativa dos geradores, que é função da pressão de 

entrada do vapor na turbina que aciona o gerador. 

Na seqüência, aparecem várias “Tabelas Verdade”,  que são associadas a cada uma das 

possíveis topologias que o sistema pode assumir, contendo algumas variáveis e estados de 

alguns equipamentos considerados chave para disparar um diagnóstico. Dependendo do estado 

e limite das variáveis componentes destas tabelas, são referenciadas “Listas de Diagnóstico” 

onde a partir de verificações adicionais sobre limites de outras variáveis ou estado de 

equipamentos existem listadas as possíveis Causas, Providências e o Diagnóstico da situação. 

A partir da análise deste documento, foram definidos os seguintes tipos de regras que 

deveriam ser escritas: 

• Topologia:  

o Detecção de mudança de topologia, 

o Determinação propriamente dita da topologia após cada mudança, 

• Diagnósticos, 

• Interface com o usuário. 

4.4.1 Regras de Topologia 

Este grupo de regras é o que têm a maior prioridade de disparo entre todas as outras 

regras definidas. Esta prioridade, que é definida através da opção “salience” nas regras do Jess,  

significa que, se houver mais de uma regra em condições de disparo simultaneamente, as de 

maior prioridade disparam primeiro. Isto é muito importante neste caso, porque existem regras 

de diagnóstico específicas para cada topologia e, então, dependendo da topologia do momento, 

algumas regras poderão ser ativadas e outras não. Como a idéia deste sistema é consultar em 

tempo real as variáveis e estados do sistema elétrico da REPAR, e como a mudança de 

topologia, a partir da abertura ou fechamento de qualquer disjuntor fonte ou de interligação, 

pode ocorrer a qualquer momento, este grupo de regras deve obrigatoriamente disparar 



 38 

primeiro, pois os fatos resultantes do seu processamento (Ilhas ativas) irão determinar que 

regras de diagnóstico poderão ser ativadas. 

Este grupo de regras tem no seu início quatro regras que disparam sempre que um 

disjuntor do tipo fonte ou de interligação, que são os que determinam mudanças de topologia 

que impactam na geração de energia, abre ou fecha. Quando isto ocorre, um novo fato (sinal 

renovar) é criado na base de fatos habilitando as próximas regras de determinação da topologia 

a dispararem. 

A forma clássica de determinação de topologia é uma associação de portas lógicas que 

têm como entrada o estado de todos os disjuntores de interligação e fonte e como saída as 

possíveis ilhas que podem ser formadas, conforme exemplo apresentado na figura 9 para 

determinação da ilha U.  

 

 

 

 

 

 

 

 

 

 

 

Figura 9 – Associação de portas lógicas para determinação da “Ilha U” 

 

 

Esta forma foi utilizada na configuração do SCMD da REPAR, mas verificou-se que ela 

só valia para a configuração atual da REPAR, ou seja, não atendia ao objetivo de buscar regras 

que fossem reutilizáveis em outros sistemas. Buscou-se então qual seria a forma intuitiva que 

os operadores usavam para determinar qual era a topologia do momento. Concluiu-se que 

basicamente haviam duas regras genéricas que deviam ser verificadas:  

• Verificar nas barras de geração, se a sua fonte está ligada e conectada e 

• Verificar nas barras de geração, se seus disjuntores de interligação estão fechados. 

 

 
E 

 
O
U 

 
O
U 

 
O
U 

 
O
U 

 
E 

DJ1 

DJ2 

DJ4 

DJ6 

DJ7 

DJ15 

DJ16 

ILHA U 



 39 

A primeira regra determina, para as barras de geração, se a geração está ligada, o que, em 

caso positivo, significa que esta barra está ativa Como resultado o estado da variável lógica 

“ativa” destas ilhas simples é ativado. 

A segunda regra determina se existem barras de geração ativas e interligadas e, caso 

positivo, as letras identificadoras destas barras compõem o nome de uma nova ilha. Neste caso, 

é desativada a variável lógica “ativa” das ilhas simples que estão interligadas, e ativada a da 

ilha correspondente ao novo nome formado por esta regra. 

Após a execução destas duas regras, basta verificar quais são as ilhas que estão ativadas 

para saber qual a topologia do momento. É claro que esta é uma explicação da essência destas 

duas regras e que, na implementação prática na linguagem Jess, muitos detalhes têm que ser 

observados como, por exemplo, desativar todas as ilhas tão logo se detecte que houve mudança 

de topologia para permitir o recálculo. A grande vantagem deste método é que é bastante 

genérico, pouco ou nada se alterando com a mudança no número de barras de geração, desde 

que as mesmas sejam interligadas através de uma barra de sincronismo, o que é a configuração 

típica das refinarias de petróleo. A listagem destas regras aparece no anexo 4 . 

4.4.2 Regras de Diagnóstico 

Durante a fase de aquisição do conhecimento junto aos especialistas do domínio, 

concluímos que teríamos que limitar o número das variáveis que disparariam as regras de 

diagnóstico porque, como estas estariam sendo constantemente monitoradas, por se tratar de 

um sistema em tempo real, estar lendo um grande número delas tenderia a sobrecarregar a 

comunicação com o SCMD e, provavelmente, geraria regras muito pesadas que se tornariam 

lentas, característica indesejável neste sistema. Outra diretriz que buscamos seguir foi que, a 

exemplo da forma de agir dos operadores mais experientes, buscássemos analisar as variáveis 

analógicas fundamentais do sistema para disparar os diagnósticos, utilizando os sinais digitais 

de  atuação de relés para fazer o aprofundamento da análise e a confirmação do diagnóstico. 

Com este tipo de abordagem foi possível simplificar bastante as regras porque, se utilizássemos 

para disparo das mesmas o estado de relés de proteção e sinais de estado de equipamentos, 

teríamos que ter muito mais regras, porque estes sinais digitais superam em muito o número de 

variáveis analógicas a serem analisadas,  e o número de combinações possíveis a serem 

analisadas seria muito grande. 

Outras vantagens na utilização de variáveis analógicas é que estas são muito mais ricas 

em informação, viabilizando o ajuste no próprio SE dos limites de atuação alto e baixo e a 



 40 

inclusão de análises de tempos de subida ou descida do sinal. Sua própria natureza de sinal 

contínuo permite monitorar sua consistência através de comparações com outras variáveis, 

diferentemente dos sinais digitais, que podem entrar em falha oculta sem que se detecte esta 

condição até o momento em que indevidamente não atuem. Cabe observar que, no caso em 

estudo, não foram implementadas regras que utilizem o fator tempo, mas que este potencial está 

presente. 

As regras do Jess são divididas em duas partes que se comportam de certa forma como 

as funções SE ... ENTÃO das linguagens de programação tradicionais. Entretanto, não se 

comportam como elas porque, enquanto estas são executadas num momento específico e numa 

ordem específica, de acordo com a forma como o programador as escreve, as regras são 

executadas sempre que sua parte SE é satisfeita desde que o motor de inferência esteja rodando. 

Isto torna a ordem de execução destas regras muito menos determinística que um programa 

convencional (FRIEDMAN-HILL, 2001). 

No caso que foi implementado, no lado esquerdo das regras de diagnóstico, são feitas as 

verificações da ilha a que pertence a regra e dos limites das variáveis que aparecem nas Tabelas 

Verdade já mencionadas. No lado direito das regras são feitas verificações adicionais de estado 

de sinais e equipamentos e de limites de variáveis para validar o diagnóstico. Dependendo dos 

resultados, são incluídos na base de fatos novos fatos do tipo (listar número-do-diagnóstico) 

que, por sua vez, irão causar o disparo de novas regras. Este tipo de arranjo contribui bastante 

para aumentar a velocidade de resposta do sistema porque, embora para emitir um diagnóstico 

válido todas as condições dos lados esquerdo e direito das regras tenham que ser satisfeitas, 

apenas as variáveis associadas aos testes condicionais do lado esquerdo têm que ser 

continuamente monitoradas o que, devido ao algoritmo RETE já mencionado, pode ser feito 

com muita eficiência. Assim sendo, somente as variáveis associadas às condições do lado 

direito das regras que forem disparadas serão verificadas, reduzindo muito a comunicação de 

dados com o SCMD e o processamento necessário. 

4.4.3 Regras de Interface com o Usuário 

Nesta implementação de teste, optou-se por não criar programas de comunicação com o 

SCMD da REPAR porque, além de não acrescentar muito aos objetivos deste trabalho, 

demandaria um bom esforço de programação e implicaria na necessidade de intervenções no 

SCMD. Este tipo de liberação de trabalho não é simples, por se tratar de um sistema de controle 

do sistema elétrico da refinaria que está ativo, e eventuais perturbações produzidas nele durante 



 41 

os testes podem levar a perdas de produção. Assim sendo, optou-se por fazer os testes de 

validação do sistema desenvolvido, através da carga inicial pelo Protégé, de estados e variáveis 

que representem uma topologia e estados normais do sistema elétrico. O usuário que está 

testando o sistema, então, faz alterações nos estados dos equipamentos ou valores de variáveis e 

verifica se os diagnósticos que estão sendo emitidos são coerentes com o definido pelos 

especialistas. 

Embora o Jess, por ser escrito em Java, permita criar com certa facilidade interfaces de 

entrada e saída de dados de boa qualidade, usando inclusive navegadores de Internet 

“Browsers”, no caso implementado neste trabalho, optou-se, por questão de simplificação e por 

não se tratar do objetivo fim do trabalho, pela criação de regras de baixa prioridade (só 

disparam quando nenhuma outra regra é satisfeita) que apresentam na própria janela do Jess 

uma mensagem inicial com instruções sobre como usar o programa, abrindo campos para o 

usuário digitar o nome do objeto a ser alterado, o atributo e o novo valor. Estas regras fazem, 

então, um teste de consistência sobre a existência do objeto requerido, sobre a existência do 

atributo digitado neste objeto e, finalmente, se o valor digitado para ser alterado é compatível 

com o atributo que está sendo alterado (Lógico, número inteiro ou com ponto flutuante). Em 

caso de insucesso no teste de consistência, é emitida uma mensagem ao usuário e aberta a 

possibilidade de nova entrada de dados. Se tudo estiver consistente, outras regras fazem a 

alteração requerida da base de fatos.  

Após esta alteração, se houver o disparo de alguma regra de diagnóstico que tem maior 

prioridade, uma regra feita para listar diagnósticos dispara com o fato (listar número-do-

diagnóstico) e mostra na tela o diagnóstico ou diagnósticos correspondentes. Quando cessam os 

diagnósticos disponíveis, as regras de entradas de dados, que estão sempre ativas e são de mais 

baixa prioridade, disparam e abrem novamente a opção de se fazerem novas modificações na 

base de fatos para novos testes.  

Um fato importante a ser ressaltado é que esta implementação, por ser a simulação de 

um sistema que opera em tempo real, exige que o motor de inferência do Jess opere o tempo 

todo, aguardando a ocorrência de um fato novo que ative alguma regra de diagnóstico. Como 

este motor parte com um comando “run” e pára de funcionar logo que não haja mais regras 

ativas, o estabelecimento destas regras de entrada de dados, que estão sempre ativas, mantém 

este motor sempre funcionando produzindo um “efeito colateral” muito interessante e 

desejável. No sistema real que pode ser implementado no futuro e que se comunicará com a 

base de dados do SCMD, regras de comunicação terão que estar sempre ativas para atualizar a 



 42 

base e fatos fazendo este papel de manter o motor de inferência funcionando. A figura 10 

mostra a tela de inicialização do sistema em que é mostrada a topologia atual e pode-se ver a 

mensagem para o usuário entrar com o nome do objeto a ser alterado. A Figura 11, a seguir, 

mostra um exemplo de entrada de dados que resultou em um diagnóstico.  

 

 

Figura 10 – Tela de inicialização do sistema especialista. 

 



 43 

 

 

Figura 11 – Exemplo de entrada de dados e saída de diagnóstico. 



 44 

4.5 Resultados  

Ao final da etapa de implementação, a ontologia desenvolvida no Protégé ficou com 25 

Classes e foram implementadas 102 regras no Jess. Concluída a correção dos erros conceituais 

e de sintaxe, foram realizados vários testes neste sistema visando verificar sua funcionalidade e 

o fornecimento de diagnósticos coerentes com o conhecimento que foi modelado.  

Para facilitar estes testes, o estado e valores iniciais dos atributos dos objetos que 

compõem o sistema modelado foram inicialmente ajustados no Protégé, representando um 

cenário de normalidade e uma topologia que facilitasse os testes que iriam ser feitos na 

seqüência. Foi utilizada a interface desenvolvida em Jess, já apresentada na seção anterior, para 

realizar as alterações nos valores e estados de atributos de objetos e comparar os diagnósticos 

obtidos com os previstos e, nos casos necessários, procedidas as correções devidas. 

Tendo em conta o grande número de variáveis e estados envolvidos e o número de 

combinações possíveis destas, seria impossível testar-se todas as possibilidades mas buscou-se 

fazer uma boa varredura sobre todas as regras, verificando com mais rigor as mais complexas e 

que, portanto, teriam maior probabilidade de apresentar um comportamento incorreto.  

Os diagnósticos obtidos durante os testes de validação foram corretos na totalidade dos 

experimentos e o tempo de resposta, embora não medido de forma objetiva, foi desprezível. De 

fato, por se tratar de um protótipo sendo executado desconectado de uma base de dados em 

tempo real, este desempenho indica apenas que o motor de inferência do Jess está manipulando 

de forma eficiente a base de fatos e que foi acertada a opção por uma arquitetura em que as 

regras usam algumas variáveis como gatilho e outras para validar ou aprofundar o diagnóstico, 

diminuindo desta forma o número de variáveis que estão sendo lidas e processadas 

continuamente. Baseado na experiência anterior da REPAR com o sistema especialista 

desenvolvido com o G2, em uma implementação real o tempo de resposta deve aumentar 

devido ao tempo de comunicação com o SCMD. 

A listagem destas regras de interface e mais exemplos de telas de entrada de dados e 

saída de diagnósticos podem ser vistos no anexo 5. 



 45 

CAPÍTULO 5 

CONCLUSÃO 

 
 
A implantação de Sistemas Digitais de Controle Distribuído nas refinarias de petróleo, 

além dos benefícios diretos advindos de uma melhor monitoração e controle do processo, torna 

possível a implementação de novas funções de suporte a operação e manutenção.  

Utilizando esta ampla e disponível base de dados em tempo real, torna-se possível 

através de aplicativos do tipo SE, criar estas novas funções de apoio que são baseadas no 

conhecimento dos mais experientes técnicos de operação e manutenção. No atual panorama de 

diminuição do número de pessoas que operam e fazem manutenção destas unidades e das 

crescentes exigências de confiabilidade, segurança e redução de custos torna-se importante que 

a experiência destes especialistas seja usada de forma ampla por todos os envolvidos na 

operação e manutenção. Estes sistemas têm grandes e evidentes limitações no que diz respeito à 

capacidade de inferir novos conhecimentos e lidar com novas situações. Em contrapartida, uma 

vez que uma boa base de conhecimentos já consolidados tenha sido implementada, estes 

sistemas podem fornecer constante e consistentemente diagnósticos de situações que talvez não 

fossem notadas, porque sua inferência depende de conhecimento especializado e da análise de 

uma série de fatos isolados numa grande base de dados e para o operador humano é impossível 

manter vigilância sobre tantos elementos por tanto tempo. 

Pelos resultados obtidos neste trabalho, podemos concluir que é fundamental que se 

faça um bom trabalho de Engenharia do Conhecimento no início de qualquer implantação e que 

é possível obter-se um bom grau de aproveitamento das ontologias e regras desenvolvidas, 

desde que este critério seja estabelecido e seguido desde o início do projeto. A classificação dos 

tipos de conhecimentos foi fundamental pois facilitou o entendimento do problema e a 

implementação do sistema.  

Quanto a utilização do Jess e Protégé, temos a observar que ambos demonstraram uma 

boa funcionalidade, com destaque para o Protégé que, além de possuir uma interface muito 

amigável, tornando o tempo de aprendizado para seu uso muito curto, realmente facilita a 

estruturação do conhecimento e torna fácil a instanciação dos objetos. O Jess destaca-se pela 

sua boa portabilidade, que foi testada durante o desenvolvimento, rodando-se sem problemas o 



 46 

sistema em máquinas com Linux e com Windows e pela facilidade oferecida para no futuro 

desenvolver-se com relativa facilidade interfaces de boa qualidade baseadas em navegadores de 

internet que trarão a vantagem adicional de  disponibilizar estas informações em qualquer 

ponto da rede corporativa sem necessidade de instalação de programas especiais.  

Ainda sobre o Jess e Protégé, temos que considerar o aspecto custo, que é zero no caso 

do Protégé e muito menor no caso do Jess, comparado com o G2 (adquirido juntamente com o 

SCMD da REPAR). Este custo pode ser decisivo na escolha destas linguagens já que, com 

menor investimento inicial, ficaria  mais fácil viabilizar a implantação de sistemas mais 

simples.  

Outro aspecto muito importante a ser considerado, considerando que estamos tratando 

de sistemas especialistas que operam em tempo real, é a facilidade de interface com os sistemas 

digitais de controle existentes. A grande dificuldade da implantação do sistema especialista 

original do SCMD da REPAR foi, e ainda hoje é, esta interface que foi desenvolvida 

especialmente e apresenta problemas de estabilidade e desempenho, inviabilizando o seu uso 

no dia a dia. Este não é um problema isolado. Na bibliografia analisada isto é citado como um 

dos fatores de dificuldade (KIRSCHEN e BANN, 1997, KIT PO WONG, 1992, POWELL, 

1993, KONO et al., 1990).   

No caso dos novos sistemas que poderiam ser desenvolvidos com o Jess, a melhor 

opção a ser explorada seria comunicar-se com o software de gerenciamento de informações PI 

da OSI Software (http://www.osisoft.com) que já se encontra implantado há alguns anos em 

todas as refinarias do sistema Petrobrás e se comunica de forma estável com todos os SDCDs e 

SCMDs instalados. O PI disponibiliza, através do seu PI-API Aplication Programming 

Interface, um caminho padronizado para comunicar-se com aplicações externas, 

disponibilizando desta forma informações dos SDCDs e SCMDs para os sistemas especialistas. 

Dentre as vantagens que este tipo de interface traria, destacam-se: 

• uma vez implementada a interface com o PI, esta solução seria válida para todas 

as refinarias eliminando-se os custos e riscos de desenvolvimento de interfaces; 

• a comunicação do PI com os SDCDs e SCMDs já se provou estável. 

Os principais problemas que têm que ser estudados neste tipo de solução são: 

• o tempo de acesso aos dados do processo, já que este software normalmente 

trabalha com tempos de amostragem mais longos, 

• eventual degradação da performance do PI pelo aumento do tráfego de 

informações em sua interface. 



 47 

Os próximos passos necessários para o desenvolvimento de sistemas especialistas que 

possam operar em tempo real nas refinarias da Petrobrás seriam, então, desenvolver a 

programação em Java necessária à integração do Jess com os navegadores internet, criando 

Interfaces amigáveis e desenvolver a comunicação do Jess com o PI testando seu desempenho.  

Se, após estas implantações piloto, as IHM e a comunicação com o processo se 

mostrarem viáveis e eficientes, pode-se afirmar que fica aberto um grande leque de opções para 

desenvolvimento de sistemas especialistas para várias áreas de aplicação a custo baixo e, se 

bem implementados, com um bom grau de reaproveitamento para várias refinarias diferentes. 

Finalmente, é importante ressaltar que o desenvolvimento deste trabalho trouxe, como 

resultado imediato, uma boa compreensão da engenharia do conhecimento, necessária para uma 

implantação de sistemas especialistas com sucesso e indicou alguns caminhos que podem 

resultar numa maior disseminação deste tipo de recurso a custo mais baixo em todas refinarias 

da Petrobrás.  



  

4
8
 

A
N

E
X

O
 1

 –
 D

IA
G

R
A

M
A

 U
N

IF
IL

A
R

 D
A

 R
E

P
A

R
 

 
 



  

4
9
 

A
N

E
X

O
 2

 –
 E

X
E

M
P

L
O

S
 G

R
Á

F
IC

O
S

 D
A

S
 

O
N

T
O

L
O

G
IA

S
 D

E
S

E
N

V
O

L
V

ID
A

S
 E

M
 P

R
O

T
É

G
É

 



 

 

50 

 



 

 

51 



 

 

52 

 



  

5
3
 



  

5
4
 

 



 

 

55 

ANEXO 3 – DESENVOLVIMENTO DO SISTEMA 
ESPECIALISTA REPAR – SCMD  

 

       REPAR / DIPRO / SETUT - SCMD   - Expert System  
27/10/03 Rev.  01 
 
 

CASO 1 – DIAGNÓSTICO DA GERAÇÃO 

Desenvolvimento das Tabelas 
 
 

  As tabelas foram desenvolvidas conforme as ilhas de operação definidas para o 
sistema elétrico da Repar, conforme lista abaixo: 
 Ilha A = TG-5601, Ilha B = TG-5602, Ilha A-B = TG-5601 e TG-5602 em sincronismo, Ilha U-
A = Copel e TG-5601 em sincronismo, 

Ilha U-B = Copel e TG-5601 em sincronismo e Ilha U-A-B = Copel, TG-5601 e TG-5602 
em sincronismo, conforme definido no FDS da Repar.  

 
  Para o desenvolvimento do Sistema Especialista da REPAR serão utilizados as 
variáveis analógicas que farão o disparo do sistema de diagnóstico do sistema elétrico. 

Estas variáveis estarão definidos os valores para disparo do diagnóstico do sistema 
elétrico, como alto e baixo, sendo como normal na condição estável do sistema elétrico. 

Cada variável necessita de uma definição para os parâmetros alto, baixo, normal e tempo 
para disparo, conforme definição e formulas abaixo: 

 

Tensão de 13,80 KV:        

 Baixo &amp;lt;13,40 KV; 
 Alto &gt; 14,20 KV; 
 Normal &gt; 13,40 KV e &amp;lt;14,20 KV; 
 Tempo de Disparo 15 segundos. 

 

Tensão da Linha A/B de 69,00 KV da Copel: 

       Baixo &amp;lt; 63,82 KV; 
                                   Alto &gt; 72,45 KV; 

       Normal &gt; 63,82 KV e &amp;lt;72,45 KV;  
       Tempo de Disparo 15 segundos. 

Freqüência:  

Baixa &amp;lt;59,80 Hz;  
 Alta &gt; 60,20 Hz; 
 Normal &gt; 59,80 Hz e &amp;lt;60,20 HZ; 
 Tempo de Disparo 15 Segundos. 
 



 

 

56 

Potência Reativa dos TG-5601 e TG-5602: 

Baixa &amp;lt;Potência Ativa x 0,70; 
Alta &gt; Potência Ativa x 0,95; 
Normal &gt; Potência Ativa x 0,70 e &gt; potência Ativa x 0,95. 
 

Potência Ativa do TG-5601: 

Baixa &amp;lt;3.000 KW; 
Alta &gt; (16.000-(((86-PL-56202) x 1,38)x160)) KW; 
Normal &gt; 3.000 KW e &amp;lt;(16.000-(((86-PL-56202)x1,38)x160)) KW. 
 

Potência Ativa do TG-5602: 

Baixa &gt; 3.000 KW; 
Alta &gt; (16.000-(((86-PL-56302) x 1,86)x160)) KW; 
Normal &gt; 3.000 KW e &amp;lt;(16.000-(((86-PL-56302)x1,86)x160)) KW. 
 

Corrente de Excitação dos TG-5601 e TG-5602: 

Baixa &amp;lt;(Potência Ativa ÷ 1000 × 24 + 90); 
Alta &gt; 720 A; 
Normal &gt; (Potência Ativa ÷ 1000 × 24 + 90) e &gt; 720 A. 

 

Pressão de Vapor de 88 Kgf/cm2 dos TG-5601 e TG-5602: 

Baixa &amp;lt;84 Kgf/cm2; 
Alta &gt; 90 Kgf/cm2; 
Normal &gt; 84 Kgf/cm2 e &gt; 90 Kgf/cm2 

 

Potência Ativa da Copel:  Com um Transformador 

Baixa &amp;lt;1.000 KW; 
                                       Alta  &gt; Demanda ou  &gt;5.000 KW; 
   Normal  &gt;1000 KW e &amp;lt;Demanda ou &amp;lt;5000 KW; 
 

Potência Ativa da Copel:  Com dois Transformadores 

Baixa &amp;lt;1.000 KW; 
                                          Alta  &gt; Demanda ou  &gt;10.000 KW; 
   Normal  &gt;1.000 KW e &amp;lt;Demanda ou &amp;lt;10.000 KW; 
 

Potência Reativa da Copel: 

Baixa &amp;lt;Potência Ativa x 0,80; 
Alta &gt; Potência Ativa x 1; 
Normal &gt; Potência Ativa x 0,80 e &gt; potência Ativa x 1. 

 



 

 

57 

Tape dos Transformadores da Copel: 

Mínimo = 1 
Máximo = 33; 

 

Cálculo dos Tape dos Transformadores da Copel: 
 

 Os transformadores possuem 33 tapes para ajuste de tensão ± 10 % da tensão nominal de 
69.000V, com variação de 5/8 % da tensão por tapes, com 32 tapes sendo que o tape 17 é neutro. 

 

Formula de Cálculo: 

 
    TAPC = TR_TAP_CALC  ?  AIC,  Tag  name in Advant Control 

Tape dos Transformadores da Copel:   TAPD          

TAPD = Baixo quando TAPC – TAP-5601A = &gt; 4 ou TAPC – TAP-5601B = &gt; 4 
TAPD = Alto quando    TAPC – TAP-5601A  =&amp;lt;-4 ou TAPC – TAP-5601B =&lt;-4 
TAPD = Normal quando TAPC – TAP-5601A &amp;lt;4 e &gt;-4 ou TAPC – TAP-5601A &amp;lt;4 e &gt;-4 
Tag Name  ?  TAP-5601A  e TAP-5601B  

 

Utilizar como triger da Tensão da Linha A/B de 69,00 KV da Copel o tape calculado; 

Tensão alta nas linhas de 69 KV da Copel quando o TAPC &amp;lt;1; 
Tensão baixa nas linhas de 69 KV da Copel quando o TAPC &gt; 33; 
Tensão normal nas linhas de 69 KV da Copel quando o TAPC = &gt; 1 e = &amp;lt;33; 
Tempo de Disparo: 15 Segundos 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

 



  

       REPAR / DIPRO / SETUT - SCMD   - Expert System                          27/10/03 Rev.  01 

TG-5601 E COPEL – ILHA U-A - TABELA VERDADE PARA DIAGNÓSTICO DE TENSÃO 

 TG-5601 – Tensão, Tempo para Triger 15 
segundos 

 COPEL – Tensão, utilizar tape calculado para Triger e diagnóstico, Tempo para Triger 15 segundos 

 Tensão Potência Reativa * Tensão * Potência Reativa Comutador de Tape  
TAG TDV-5601-06-R1 TDQ-5601-06-R1 TDV-5612-LA ou  

TDV-5612-LB 
TDQ-5612-LA ou  

TDQ-5612-LB 
** TAPD   

Resposta 
  Normal Normal Normal Normal Normal OK 
 Alta Alta Normal Baixa Normal Ver Lista 25 – Ilha U-A 
 Baixa Baixa Normal Alta Normal Ver Lista 26 – Ilha U-A 
 Alta Baixa Normal Alta Alto Ver Lista 27 – Ilha U-A 
 Baixa Alta Normal Baixa Baixo Ver Lista 28 – Ilha U-A 
 Alta Baixa Baixo Alta Normal Ver Lista 29 – Ilha U-A 
 Baixa Alta Alta Baixa Normal Ver Lista 30 – Ilha U-A 

*   DJ-152-1-SF = 1 E CH-189-1A = 1 usar Tag names TDQ-5612-LA e TDP-5612-LA e TDV-5612-LA 
     DJ-152-2-SF = 1 E CH-189-1B = 1 usar Tag names TDQ-5612-LB e TDP-5612-LB e TDV-5612-LB 
** TAPD ver página 4 

TG-5601 e Copel – Ilha U-A – LISTA 25 – Falha no Controle de Tensão do TG-5601 
Conseqüências Causas Verificar Tag Providências Normalização DIAGNÓSTICO 

 
 
 
 
 

Defeitos nos 
Equipamentos 
Elétricos por 

Sobre Tensão 

 
N.o 1 

 
Set-Point alto 
para o AVR1 
 do TG-5601 

 
 
1. TDV-5601-10-VBA 
  &gt; 14,20 KV 
2. AVR1-REF-MAX-SI 
           = 1 
 
 

 
1. Comparar a tensão do TG-5601 

com a Barra A 
2. Verificar limite de SET POINT 

MÁXIMO do AVR1 
3. Ajustar o valor do Set-Point do 

AVR1 

 
1. Colocar o TG-

5601 em  controle 
de Tensão 

 
1. Falha no programa de controle de Tensão do TG-5601 ou ajuste alto do 

set-point para o AVR1. 

  
N.o 2 

 
Possível 

defeito no AVR 
do 

 TG-5601 

 
1. AVR1-PONTE1-

FALHA-SI  = 1  ou 
2. AVR1-PONTE2-

FALHA-SI  = 1  ou 
3. AVR1-FALHA-SI = 1 
 

 
1. Verificar alarme de falha do AVR1 
2. Transferir de Ponte o AVR1  
3. Ajustar o valor do Set-Point do 

AVR1 
4. Caso necessário partir o TG-5602 e 

parar o TG-5601. 
5. Solicitar  a manutenção do AVR1 

 
1. Colocar o TG-

5601 em 
operação. 

2. Colocar o TG-
5601 em  controle 
de Tensão 

 
1. Possível Falha de Tiristor. 
2. Ventilador. 
3. Fusível  dos Tiristores. 
4. Alimentação Elétrica. 

5
8
 

 

 



  

TG-5601 e Copel – Ilha U-A – LISTA 26 – Falha no Controle de Tensão do TG-5601 
Conseqüências Causas Verificar Tag Providências Normalização DIAGNÓSTICO 

 
 
 
 
 

Queda de  
Equipamentos 
Elétricos por 
Subtensão 

 
N.o 1 

 
Set-Point 

baixo para o 
AVR1 

 do TG-5601 

 
1. TDV-5601-10-VBA 
 &amp;lt;13,40 KV 
2. AVR1-REF-MIN-SI 
         =  1 
 
 

 
1. Comparar a tensão do TG-5601 

com a Barra A 
2. Verificar limite de SET POINT 

MÍNIMO do AVR1 
3. Ajustar o valor do Set-Point do 

AVR1 
 

 
1. Colocar o TG-

5601 em  controle 
de Tensão 

 
1. Falha no programa de controle de Tensão do TG-5602 ou ajuste baixo do 

set-point para o AVR1. 

  
N.o 2 

 
Possível 

defeito no 
AVR1 do 
 TG-5601 

 
1. TG-5601-TP  =  1 ou 
2. RL-5612-60XGA-SI 
 = 1   
3. AVR1-PONTE1-

FALHA-SI  = 1  ou 
4. AVR1-PONTE2-

FALHA-SI  = 1  ou 
5. AVR1-FALHA-SI = 1 
 

 
1. Verificar  possível falha do sinal do 

TP da saída do TG-5601, indicado 
pela atuação do rele 60GA 
bandeira 1. 

2. Verificar alarme de falha do AVR1 
3. Transferir de Ponte o AVR1 
4.  Ajustar o valor do Set-Point do 

AVR1 
5. Caso necessário partir o TG-5602 e 

parar o TG-5601. 
6. Solicitar  a manutenção do 

AVR1/TP 

 
1. Colocar o TG-

5601 em 
operação. 

2. Colocar o TG-
5601 em  controle 
de Tensão 

 
1. Queima de fusível, atuação do disjuntor de proteção do TP de saída do 

gerador ou extração indevida do TP. 
2. Possível Falha de Tiristor. 
3. Ventilador. 
4. Fusível  dos Tiristores. 
5. Alimentação Elétrica. 

TG-5601 e Copel – Ilha U-A – LISTA 27 – Falha no Controle do Comutador de Tapes dos Transformadores 
Conseqüências Causas Verificar Tag Providências Normalização DIAGNÓSTICO 

 
 

Defeitos nos 
Equipamentos 
Elétricos por 

Sobre Tensão 

 
N.o 1 

 
Comutador de 

Tapes em 
manual 

 
 
  
 

 
1. Verificar se o controle do 

comutador de tape esta em 
automático. 

2. Verificar a tensão do TG-5601 e da 
linha da Copel que estiver em 
operação. 

 
1. Colocar o 

comutador de 
Tapes em 
automático. 

 
1. Comutador de Tapes em manual ou falha no controle de tapes. 

  
N.o 2 

 
Possível 

defeito no 
Comutador de 

Tapes 

 
 
1. CT-5601A-SI  = 1  ou 
2. CT-5601B-SI   = 1  ou 
3. CT-5601AB-95-SI  = 

1 
 
 

 
1. Verificar  falha no comutador de 

tape do TF-5601A ou TF-5601B. 
2. Verificar  falha de sincronismo dos 

tapes entre os transformadores. 
3. Transferir o controle de tapes para 

outro transformador. 
4. Caso necessário deixar o controle 

em manual e fazer o correção pelo 
campo. 

5. Solicitar  a manutenção do 
comutador. 

 
1. Colocar o 

comutador em 
operação. 

2. Colocar em  
automático o 
controle de 
Tensão da Copel 

 
1. Possível Falha do comutador de tapes. 
2. Proteção atuada por para do tape fora de posição  (ficou entre dois tapes) 
3. Falta de Alimentação Elétrica. 

5
9
 

 



  
TG-5601 e Copel – Ilha U-A – LISTA 28 – Falha no Controle do Comutador de Tapes dos Transformadores 

Conseqüências Causas Verificar Tag Providências Normalização DIAGNÓSTICO 
 
 

Possível queda de 
Equipamentos 
elétricos por 
Subtensão 

 
N.o 1 

 
Comutador de 

Tapes em 
manual 

 
 
  
 

 
1. Verificar se o controle do comutador de 

tape esta em automático. 
2. Verificar a tensão do TG-5601 e da linha 

da Copel que estiver em operação. 

 
1. Colocar o 

comutador de Tapes 
em automático. 

 
1. Comutador de Tapes em manual ou falha no controle de tapes. 

  
N.o 2 

 
Possível defeito 
no Comutador 

de Tapes 

 
 
1. CT-5601A-SI  = 1  ou 
2. CT-5601B-SI   = 1  ou 
3. CT-5601AB-95-SI = 1 
 
 

 
1. Verificar  falha no comutador de tape do 

TF-5601A ou TF-5601B. 
2. Verificar falha de sincronismo dos tapes 

entre os transformadores. 
3. Transferir o controle de tapes para outro 

transformador. 
4. Caso necessário deixar o controle em 

manual e fazer o correção pelo campo. 
5. Solicitar  a manutenção do comutador. 

 
1. Colocar o 

comutador em 
operação. 

2. Colocar em  
automático o 
controle de Tensão 
da Copel 

 
1. Possível Falha do comutador de tapes. 
2. Proteção atuada por para do tape fora de posição  (ficou entre dois tapes) 
3. Falta de Alimentação Elétrica. 

TG-5601 e Copel – Ilha U-A – LISTA 29 – Falha no Controle de Tensão das Linhas de 69 KV da Copel 
Conseqüências Causas Verificar Tag Providências Normalização DIAGNÓSTICO 

 
 

Defeitos nos 
Equipamentos 

Elétricos por Sobre 
Tensão 

 
 

N.o 1 

 
Tensão muito 
alta na linha A 
ou B de 69 KV  

da Copel  

 
1. TAPC &amp;lt; 1  ou  
2. TAP-5601A =  1   e 

TAP-5601B =  1 
 
 * Ver Nota 
 

1. Verificar a tensão da linha A ou B de   69 
KV da Copel 

2. Verificar se os tapes dos 
transformadores estão no mínimo. 

3. Caso necessário ajustar os tapes dos 
transformadores para o mínimo. 

4. Caso necessário abrir sincronismo com 
a Copel, se possível trocar de linha. 

5. Solicitar a Copel a correção da tensão 
das linhas de 69 KV. 

 
1. Fechar sincronismo 

com a Copel e 
colocar o controle 
de tensão em 
automático. 

 
1. Falha no controle de tensão das linhas A ou B de 69 KV da Copel. 
 

Nota: *  TAPC = TR_TAP_CALC  ?  AIC,  Tag  name in Advant Control   ?  &amp;lt;1  Tensão Alta  e  &gt; 33 Tensão Baixa,   Tensão Normal = &gt; 1 e 
=&amp;lt;33 ver página 4 

TG-5601 e Copel – Ilha U-A – LISTA 30 – Falha no Controle de Tensão das Linhas de 69 KV da Copel 
Conseqüências Causas Verificar Tag Providências Normalização DIAGNÓSTICO 

 
 

Possível queda de 
Equipamentos 
Elétricos por 
Subtensão 

 
 

N.o 1 

 
Tensão muito 

baixa na linha A 
ou B de 69 KV  

da Copel  

 
1. TAPC  &gt;  33  ou 
2. TAP-5601A = 33   e 
         TAP-5601B = 33 
 * Ver Nota 
  
 

1. Verificar a tensão da linha A ou B de   69 
KV da Copel 

2. Verificar se os tapes dos 
transformadores estão no máximo. 

3. Caso necessário ajustar os tapes dos 
transformadores para o máximo. 

4. Caso necessário abrir sincronismo com 
a Copel, se possível trocar de linha. 

5. Solicitar a Copel a correção da tensão 
das linhas de 69 KV. 

 
1. Fechar sincronismo 

com a Copel e 
colocar o controle 
de tensão em 
automático. 

 
1. Falha no controle de tensão das linhas A ou B de 69 KV da Copel. 
 

Nota: *  TAPC = TR_TAP_CALC  ?  AIC,  Tag  name in Advant Control   ?  &amp;lt;1  Tensão Alta  e  &gt; 33 Tensão Baixa,   Tensão Normal = &gt; 1 e 
=&amp;lt;33 ver página 4 
 

6
0 

 



  
 TG-5601 E COPEL – ILHA U-A - TABELA VERDADE PARA DIAGNÓSTICO DE FREQUÊNCIA 

 TG-5601 – Freqüência, Tempo para Triger 15 segundos  COPEL – Freqüência, Tempo para Triger 15 segundos 
 Freqüência Potência Ativa Pressão de Vapor 88 Kgf ** Freqüência ** Potência Ativa  

TAG TDF-5601-06-R1 TDP-5601-06-R1 PL-56202 TDF-5612-LA-R1 ou 
TDF-5612-LB-R1 

TDP-5612-LA ou 
TDP-5612-LB 

 

Resposta 
 Normal Normal Normal Normal Normal OK 
 Alta Baixa Normal Alta Alta Ver Lista 31 – Ilha U-A 
 Baixa Alta Normal Baixa Baixa Ver Lista 32 – Ilha U-A 
 Normal Alta Normal Normal Baixa Ver Lista 33 – Ilha U-A 
 Normal Baixa Normal Normal Alta Ver Lista 34 – Ilha U-A 
 Normal Baixa Baixa Normal Alta Ver Lista 35 – Ilha U-A 

** DJ-152-1-SF = 1 E CH-189-1A = 1 usar  Tag names TDF-5612-LA e TDP-5612-LA 
     DJ-152-2-SF = 1 E CH-189-1B = 1 usar  Tag names TDF-5612-LB e TDP-5612-LB 

TG-5601 e Copel – Ilha U-A – LISTA 31 – Falha no Controle de Freqüência da Copel 
Conseqüências 

Causas Verificar Tag Providências Normalização DIAGNÓSTICO 

1. Possibilidade de 
queda do TG-
5601 por reversão 
de potência ou 
Sobre velocidade. 

 
2. Defeitos nos 

Equipamentos 
Elétricos por  
Sobre 
Freqüência, 

 
N.o 1 

 
Freqüência 

alta na Copel 

 
 
 
 

1. Comparar a Freqüência do TG-5601 
com a Copel.. 

2. Manter  o TG-5601 em MW 
Demanda para acompanhar as 
flutuações de Freqüência da Copel.. 

3. Caso o valor esteja maior que 61 Hz 
deverá ser aberto sincronismo com a 
Copel pelo disjuntor 4. 

4. Solicitar a Copel  a  correção da 
Freqüência das Linhas de 69 KV. 

 
1. Fechar 

novamente 
sincronismo com 
a Copel e 
normalizar o 
fornecimento de 
energia para as 
unidades de 
processo. 

 
1. Falha no controle de Freqüência da Copel 
 

TG-5601 e Copel – Ilha U-A – LISTA 32 – Falha no Controle de Frequência da Copel 
Conseqüências Causas Verificar Tag Providências Normalização DIAGNÓSTICO 

1. Possibilidade de 
abertura de 
sincronismo com a 
Copel por atuação do 
relê 67RA ou 67RB.  

2. Possibilidade de limite 
de carga do  TG-5601 
por  subfreqüência na 
Copel. 

3. Possibilidade de 
descarte de 
Equipamentos 
Elétricos por  
Subfreqüência. 

 
N.o 1 

 
Freqüência baixa 

na Copel 

 
 
 
 

1. Comparar a Freqüência do TG-5601 com 
a Copel.. 

2. Manter o TG-5601 em MW Demanda para 
acompanhar as flutuações de Freqüência 
da Copel. 

3. Caso o valor esteja menor que 59,5 Hz 
deverá ser aberto sincronismo com a 
Copel pelo disjuntor 4. 

4. Solicitar a Copel  a correção da 
Freqüência das Linhas de 69 KV. 

 
1. Fechar novamente 

sincronismo com a 
Copel e normalizar 
o fornecimento de 
energia para as 
unidades de 
processo. 

 
1. Falha no controle de Freqüência da Copel 
 

6
1 

 



  

TG-5601 E COPEL – ILHA U-A – LISTA 33 – FALHA NO CONTROLE DO GOVERNADOR DA TURBINA DO TG-5601 

Conseqüências Causas Verificar Tag Providências Normalização DIAGNÓSTICO 
 
1. Possibilidade de 

atuação do limite de 
carga do  

         TG-5601. 
 
1. Possibilidade de 

abertura de 
sincronismo com a 
Copel por atuação 
do relê 67RA ou 
67RB.  

 
N.o 1 

 
Set-Point alto 

para o 
governador 

 do TG-5601 
ou 

 Possível defeito 
no governador 

do 
 TG-5601 

 
1. XI-56201 &gt; 3620 rpm 
ou 
2. FC-5612-LCTA-SI 
         = 1 
 
 

 
1. Verificar limite de ajuste do governador do 

TG-5601 
2. Verificar limite de Carga do TG-5601 
3. Ajustar o valor do Set-Point do 

Governador do TG-5601  
4. Verificar abertura das válvulas 

parcializadoras da turbina. 
5. Caso necessário limitar a carga no campo 

pela MSV 
6. Partir o TG-5602  e parar o TG-5601. 
7. Solicitar  a manutenção do governador 

 
1. Partir o TG-5601 e 

Colocar o TG-5601 
em  controle de 
Freqüência (MW) 

 
1. Falha no programa de controle do governador do TG-5601. 
2. Ajuste alto do set-point para o governador do TG-5601. 
3. Má distribuição de Carga entre o TG-5601 e Copel 
4. Quando ocorre uma queda de pressão de vapor da admissão da turbina , na 

normalização desta pressão pode ficar travado abertas as válvulas 
parcializadoras, ou acumulo de sinal de controle para o set-point do 
governador. 

5. Motor de ajuste do set-point do governador travado no sentido de aumentar.  
 

  
 

N.o 3 

 
Possível defeito 

na válvula de 
retenção da 
extração do 
 TG-5601 
quando é 
retirada a 
extração. 

 
1. FL-56015  ÷ TDP-

5601-06-R1 &amp;lt; 4 
e 
2. FL-56016  &amp;lt; 15 
 
 

 
1. Comparar a vazão de vapor de admissão 

com o valor de carga do gerador. 
2. Caso necessário colocar extração na 

máquina para evitar retorno de V-17 para 
a turbina.. 

3. Retirar a extração do gerador lentamente 
e restringindo ao mesmo tempo  o 
bloqueio  manual no campo. 

4. Partir o TG-5602 e parar o TG-5601. 
5. Solicitar  a manutenção da válvula de 

retenção da extração. 

 
1. Colocar em 

operação  o 
         TG-5601. 

 
1. Falha no fechamento da válvula de retenção da extração do TG-5601, na 

retirada de extração. 

TG-5601 e Copel – Ilha U-A – LISTA 34 – Falha no Controle do Governador do TG-5601 
Conseqüências Causas Verificar Tag Providências Normalização DIAGNÓSTICO 

 
 
 
1. Possibilidade de 

queda da Copel por 
sobre corrente 

 
2. Possibilidade de 

queda do TG-5601 
por reversão de 
potência . 

 

 
N.o 1 

 
Set-Point baixo 

para o 
governador 

 do TG-5601 

  
1. Verificar limite de ajuste do governador do 

TG-5601 
2. Ajustar o valor do Set-Point do 

Governador do TG-5601. 
 

 
1. Colocar o TG-5601 

em  controle de 
freqüência. 

 
1. Falha no programa de controle de Freqüência do TG-5601. 
2. Ajuste baixo do set-point para o governador do TG-5601. 
3. Má distribuição de Carga entre o TG-5601 e Copel. 
4.  Falha no controle do Governador do TG-5601. 
5. Motor  de Ajuste do set-point para o governador do TG-5601 travado no 

sentido de diminuir. 
 

  
N.o 2 

 
Possível defeito 
no governador 

do 
 TG-5601 

 
1. PL-56210 
&amp;lt;8,5 Kgf/cm2 
 
 
 
 
 

 
1. Verificar pressão de óleo do governador 

do TG-5601, caso necessário partir a 
bomba auxiliar de óleo. 

2. Ajustar o valor do Set-Point do 
governador. 

3. Partir o TG-5602 e Parar o TG-5601 
4. Solicitar  manutenção do governador 

 
1. Retornar com o TG-

5601 em operação e 
colocar em controle 
de freqüência. 

 
1. Pressão baixa de óleo de comando do governador do TG-5601 
         (PL-56210 ), provavelmente filtro sujo ou defeito na bomba principal de 
         óleo de comando. Defeito nos mancais pode causar obstrução dos filtros. 

 
 

6
2 

 

 



  
TG-5601 e Copel – Ilha U-A – LISTA 35 – Pressão Baixa de Vapor de 88 Kgf/cm2 

Conseqüências Causas Verificar Tag Providências Normalização DIAGNÓSTICO 
 
1. Possibilidad

e de queda 
da Copel 
por sobre 
corrente 

 
2. Possibilidad

e de 
descarte 
elétrico por 
perda de 
geração do 
TG-5601. 

 

 
N.o 1 

 
Pressão baixa 
de Vapor de 
88Kgf/cm2 

 
1. FC-5612-LCTA-SI = 1 
ou 
2. PL-56202 
         &amp;lt;84 Kgf/cm2 
 
 

 
1. Verificar limite de carga das 

Turbinas do TG-5601. 
2. Reduzir carga elétrica do gerador 

para que fique compatível com a 
pressão de vapor. 

3. Normalizar a pressão de V-88. 
 

 
1. Normalizar a 

operação do  
         TG-5601.  

 
1. Provavelmente queda de pressão de Vapor de 88 Kgf/cm2 provocado por 

distúrbios no sistema de geração de vapor 
 

 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

6
3 

 

 



 

 

64 

ANEXO 4 – EXEMPLOS DE REGRAS 
DESENVOLVIDAS EM JESS 

 
 
 
Arquivo go-teste1 – partida do sistema, carga da ontologia 
PROTÉGÉ e carga de todos arquivos de regras JESS 
 
;;;Arquivo de partida para Sistema de Diagnostico da Geracao da REPAR - CASO1 
; Clovis de Almeida Junior  
; Arquivo go-caso1.clp 
(clear) 
(reset) 
(load-package JessTab.JessTabFunctions) 
(load-project /se/protege/caso1i.pprj) 
(mapclass :THING) 
(batch c:/se/jess/caso1_ihm_d.clp) 
(batch c:/se/jess/listas_de_diagnosticos_b.clp) 
(batch c:/se/jess/caso1_topologia_i.clp) 
(batch c:/se/jess/caso1_ilha-a_c.clp) 
(batch c:/se/jess/caso1_ilha-b_d.clp) 
(batch c:/se/jess/caso1_ilha-ua_b.clp) 
(batch c:/se/jess/caso1_ilha-ub_b.clp) 
(batch c:/se/jess/caso1_ilha-ab_a.clp) 
(batch c:/se/jess/caso1_ilha-uab_a.clp) 
(run) 
 



 

 

65 

Arquivo caso1-topologia – determina alterações de topologia do 
sistema 
 
;;;ARQUIVO DE REGRAS DO SISTEMA DE DIANOSTICO DA GERACAO DA REPAR - CASO 1 
;; Clovis de Almeida Jr. -   DETERMINACAO DE TOPOLOGIA 
;;  
;; Devem ser as primeiras regras a rodar 
;; 
;; Ver i - 29/04/2003 - Adicionadas regras para verificar qual a linha da  concessionaria e quais transformadores de entrada estao 
ativos 
;; 
;; 
(defglobal ?*topologia* = "") 
;;  
;; 
;; Detecta mudanca de topologia e dispara processos de renovacao das ilhas 
;; 
(defrule disjuntor-fonte-desligado 
  (declare (salience 305)) 
         (object (is-a dj-fonte)(estado FALSE)) 
         =&gt; 
         (assert (sinal renovar)) 
         (bind ?*topologia* "")) 
(defrule disjuntor-fonte-ligado 
         (declare (salience 305)) 
         (object (is-a dj-fonte)(estado TRUE)) 
         =&gt; 
         (assert (sinal renovar)) 
         (bind ?*topologia* "")) 
(defrule disjuntor-interligacao-desligado 
         (declare (salience 305)) 
         (object (is-a dj-interligacao)(estado FALSE)) 
         =&gt; 
         (assert (sinal renovar)) 
         (bind ?*topologia* "")) 
(defrule disjuntor-interligacao-ligado 
         (declare (salience 305)) 
         (object (is-a dj-interligacao)(estado TRUE)) 
         =&gt; 
         (assert (sinal renovar)) 
         (bind ?*topologia* "")) 
;; 
;;  Zera o estado de todas ilhas simples e compostas 
;; 
(defrule renovar-ilhas 
         (declare (salience 303)) 
         (sinal renovar) 
         (object (is-a lista)(nome "ilhas")(componentes $?ilhas)) 
         =&gt; 
         (foreach ?ilha $?ilhas (slot-set ?ilha estado FALSE))) 
;; 
;;  Ajusta bits "estado" e "interligada" das ilhas simples - se for ilha simples ja sai selecionada, 
;;  se for composta dispara as proximas regras para compor o nome da topologia 
;; 
(defrule ilha-simples-ligada-interligada 
         (declare (salience 300)) 
         (sinal renovar) 
         ?bar&amp;lt;- (object (is-a bar-geracao)(entradas $?ent)(interligacao ?int)(ilha-bar ?ilha)) 
         =&gt; 
         (slot-set ?ilha interligada (slot-get ?int estado)) 
         (if (&gt; (length$ $?ent) 1) 
     then 
           (slot-set ?ilha estado (or (slot-get (nth$ 1 $?ent) estado)(slot-get (nth$ 2 $?ent) estado))) 
               else 
             (slot-set ?ilha estado (slot-get (nth$ 1 $?ent) estado)))) 
;; 
;;  Compoe o novo nome da topologia 
;; 
(defrule nome-ilha-interligada-u 
         (declare (salience 280)) 
         (sinal renovar) 
         ?ilha&amp;lt;- (object (is-a ilha)(nome "u")(interligada TRUE)(estado TRUE)) 
         =&gt; 
         (slot-set ?ilha estado FALSE) 
         (slot-set ?ilha interligada FALSE) 



 

 

66 

         (bind ?*topologia* (str-cat ?*topologia* (slot-get ?ilha nome)))) 
(defrule nome-ilha-interligada-a 
         (declare (salience 279)) 
         (sinal renovar) 
         ?ilha&amp;lt;- (object (is-a ilha)(nome "a")(interligada TRUE)(estado TRUE)) 
         =&gt; 
         (slot-set ?ilha estado FALSE) 
         (slot-set ?ilha interligada FALSE) 
         (bind ?*topologia* (str-cat ?*topologia* (slot-get ?ilha nome)))) 
(defrule nome-ilha-interligada-b 
         (declare (salience 278)) 
         (sinal renovar) 
         ?ilha&amp;lt;- (object (is-a ilha)(nome "b")(interligada TRUE)(estado TRUE)) 
         =&gt; 
         (slot-set ?ilha estado FALSE) 
         (slot-set ?ilha interligada FALSE) 
         (bind ?*topologia* (str-cat ?*topologia* (slot-get ?ilha nome)))) 
;; 
;;  Ativa Ilha correspondente a topologia calculada 
;; 
(defrule seleciona-ilha-interligada 
         (declare (salience 270)) 
         (sinal renovar) 
         ?ilha&amp;lt;- (object (is-a ilha)(nome ?n)(estado FALSE)) 
         =&gt; 
         (if (eq ?*topologia* ?n) 
             then 
           (slot-set ?ilha estado TRUE))) 
;; 
;;   Mostra topologias calculadas 
;; 
(defrule lista-ilhas 
         (declare (salience 250)) 
         (sinal renovar) 
 
         ?ilha&amp;lt;- (object (is-a ilha)(estado TRUE)) 
         =&gt; 
         (printout t " 
********** 
**********&gt; A ILHA &gt; " (slot-get ?ilha nome) " &amp;lt;ESTA ATIVADA 
**********" crlf)) 
 
 ;;  Fim do processo de renovação 
 (defrule fim-renovacao 
          (declare (salience 240)) 
          ?s&amp;lt;- (sinal renovar) 
          =&gt; 
          (retract ?s)) 
;; 
;; 
;; Verifica qual a linha da concessionária está ativa e quais transformadores estão funcionando e muda o estado da concessionaria 
ou transformador correspondente 
;; 
(defrule linha-a-ativada_desativada 
     (object (is-a dj-alimentador)(nome "dj-152-1")(estado ?est)(entrada ?ent)) 
        =&gt; 
   (slot-set ?ent estado ?est)) 
 
(defrule linha-b-ativada_desativada 
    (object (is-a dj-alimentador)(nome "dj-152-2")(estado ?est)(entrada ?ent)) 
       =&gt; 
  (slot-set ?ent estado ?est)) 
    
(defrule trafo-a-ativado_desativado 
   (object (is-a dj-fonte)(nome "dj-5601-02")(estado ?est)(entrada ?ent)) 
  =&gt; 
     (slot-set ?ent estado ?est)) 
       
(defrule trafo-b-ativado_desativado 
      (object (is-a dj-fonte)(nome "dj-5601-01")(estado ?est)(entrada ?ent)) 
         =&gt; 
       (slot-set ?ent estado ?est))         



 

 

67 

Arquivo caso1-ihm – Entrada de dados para o sistema 
 
 
;;;;;;;;;;;;;;;;;;;ARQUIVO DE REGRAS DO SISTEMA DE DIANOSTICO DA GERACAO DA REPAR - CASO 1 
;; 
;; ihm.clp - visa fornecer instruções iniciais ao usuário e viabilizar forma de entrar dados para  
;; alterar o estado ou valor de grandezas na base de fatos para validação do sistema. 
;; 
;; Clovis de Almeida Jr.  
;; ver c - 21/04/2003 - com validador das entradas e tela de entrada no programa 
;; 
;; 
;; 
;;;;;;;;;;;;;;;;;;;;;;;;ENTRADA DO PROGRAMA - INSTRUCOES INICIAIS SOBRE COMO ENTRAR E SAIR 
;; Primeira regra a rodar 
;; 
(defrule iniciar 
   (declare (salience 500)) 
   =&gt; 
   (printout t "****************************************************" crlf) 
   (printout t "*** DIAGNOSTICO DO SISTEMA DA GERACAO DE ENERGIA ***" crlf) 
   (printout t "***         DE UMA REFINARIA DE PETROLEO         ***" crlf) 
   (printout t "***            REPAR - ARAUCARIA - PR            ***" crlf) 
   (printout t "***                                              ***" crlf) 
   (printout t "*** Trabalho de Mestrado em Eng. Eletrica        ***" crlf) 
   (printout t "*** Clovis de Almeida Junior                     ***" crlf) 
   (printout t "*** clovisaj@petrobras.com.br                    ***" crlf) 
   (printout t "***                                              ***" crlf) 
   (printout t "*** Prof. Orientador - Dr.Guilherme Bittencourt  ***" crlf) 
   (printout t "*** UFSC/DAS - 2003                              ***" crlf) 
   (printout t "****************************************************" crlf) 
   (printout t "***                                              ***" crlf) 
   (printout t "***  Este Sistema Especialista foi escrito em    ***" crlf) 
   (printout t "***  JESS com a Ontologia do Sistema Eletrico    ***" crlf) 
   (printout t "***  feita usando o PROTEGE.                     ***" crlf) 
   (printout t "***                                              ***" crlf) 
   (printout t "***  As mensagens de diagnostico e informacao    ***" crlf) 
   (printout t "***  da topologia atual aparecem imediatamente   ***" crlf) 
   (printout t "***  apos serem processadas.                     ***" crlf) 
   (printout t "***                                              ***" crlf) 
   (printout t "***  Quando nao existe mais nenhum diagnostico   ***" crlf) 
   (printout t "***  a ser apresentado ficam abertas as linhas   ***" crlf) 
   (printout t "***  de entrada de dados para modificar os       ***" crlf) 
   (printout t "***  valores e estados de grandezas analogicas   ***" crlf) 
   (printout t "***  ou digitais dos equipamentos componentes    ***" crlf) 
   (printout t "***  do Sistema Eletrico podendo a partir dai    ***" crlf) 
   (printout t "***  ser apresentados novos diagnosticos.        ***" crlf) 
   (printout t "***                                              ***" crlf) 
   (printout t "***  Para sair do programa digite&amp;lt;ctrl&gt; c.      ***" crlf) 
   (printout t "***                                              ***" crlf) 
   (printout t "****************************************************" crlf)) 
;; 
;; 
;; 
;;;;;;;;;;;;;;;;;;;;;;;;;; PROVER ENTRADA DE DADOS DO OBJETO A SER MODIFICADO 
;; Devem ser as ultimas regras a rodar (minima prioridade) 
;; 
;; Abre prompt para ler nome do objeto a ser alterado 
;; 
(assert (fase ler-objeto)) 
 
(defrule ler-objeto 
   (declare (salience -100)) 
   ?fase&amp;lt;- (fase ler-objeto) 
    =&gt; 
   (printout t " 
*********************************************************************************************************** 
**********&gt; Entre com o nome do objeto a ser alterado?                       -&gt; " ) 
   (assert (objeto (read)))    
   (printout t "**********" crlf) 
   (retract ?fase) 
   (assert (fase converter-objeto))) 
 



 

 

68 

 
;; 
;; Converte o nome do objeto digitado para string ou o nome teria que ser digitado usando aspas 
;; 
(defrule converter-objeto 
   (declare (salience -100)) 
   ?fase&amp;lt;- (fase converter-objeto) 
   ?obj&amp;lt;- (objeto ?ob) 
    =&gt; 
   (retract ?fase ?obj) 
   (bind ?obst (str-cat ?ob)) 
   (assert (objeto ?obst)) 
   (assert (fase ler-slot))) 
;; 
;; Abre prompt para ler nome do slot a ser alterado 
;; 
(defrule ler-slot 
   (declare (salience -100)) 
   ?fase&amp;lt;- (fase ler-slot) 
    =&gt; 
   (printout t " 
********** 
**********&gt; Entre com o nome da variavel ou sinal do objeto a ser alterado?  -&gt; " ) 
   (assert (eslote (read))) 
   (printout t "**********" crlf) 
   (retract ?fase) 
   (assert (fase ler-valor))) 
 
;; 
;; Abre prompt para ler valor do slot ser alterado 
;; 
(defrule ler-valor 
   (declare (salience -100)) 
   ?fase&amp;lt;- (fase ler-valor) 
    =&gt; 
   (printout t " 
********** 
**********&gt; Entre com o valor da variavel ou sinal do objeto a ser alterado? -&gt; " ) 
   (assert (valor (read))) 
   (printout t "**********" crlf) 
   (retract ?fase) 
   (assert (fase modificar-bd))) 
;; 
;;  Testa se o slot existe na classe do objeto requerido, se o valor é compatível com o slot e  
;; 
  caso positivo altera o slot 
;; 
(defrule modificar-bd 
         (declare (salience -100)) 
         ?fase&amp;lt;- (fase modificar-bd) 
         ?obj&amp;lt;- (objeto ?ob) 
         ?slt&amp;lt;- (eslote ?sl) 
         ?vlr&amp;lt;- (valor ?vl) 
         ?mdf&amp;lt;- (object (nome ?ob)) 
         (test (slot-existp (class ?mdf) ?sl inherit)) 
         (test (if (eq (facet-get (class ?mdf) ?sl :SLOT-VALUE-TYPE) FLOAT) 
                        then 
             (floatp ?vl) 
                        else 
             (if (eq (facet-get (class ?mdf) ?sl :SLOT-VALUE-TYPE) INTEGER) 
                        then 
             (integerp ?vl) 
                        else 
             (if (eq (facet-get (class ?mdf) ?sl :SLOT-VALUE-TYPE) BOOLEAN) 
                       then 
             (or (eq ?vl TRUE)(eq ?vl FALSE)))))) 
         =&gt; 
         (slot-set ?mdf ?sl ?vl) 
(printout t " 
********** 
**********&gt; O " ?sl " do " ?ob " foi alterado para " ?vl  
" 
**********" crlf) 
         (retract ?fase ?obj ?slt ?vlr) 
         (assert (fase ler-objeto))) 



 

 

69 

;; Caso não rode a regra de modificar-bd esta roda significando que algo digitado não era compatível 
;; 
(defrule entrada-invalida 
 (declare (salience -101)) 
     ?fase&amp;lt;- (fase modificar-bd) 
      ?obj&amp;lt;- (objeto ?ob) 
       ?slt&amp;lt;- (eslote ?sl) 
        ?vlr&amp;lt;- (valor ?vl) 
   =&gt; 
      (printout t "**********" crlf) 
     (printout t "**********&gt; OBJETO OU O SLOT NAO EXISTEM, OU VALOR INCOMPATIVEL COM O SLOT A SER ALTERADO." 
crlf) 
   (retract ?fase ?obj ?slt ?vlr) 
        (assert (fase ler-objeto))) 
 
 



 

 

70 

Arquivo caso1-ua (parte) – Diagnóstico ilha UA 
 
;;;;;;;;;;;;;;;;;;;ARQUIVO DE REGRAS DO SISTEMA DE DIANOSTICO DA GERACAO DA REPAR - CASO 1 
;; Clovis de Almeida Jr. -   DIAGNOSTICOS PARA ILHA UA 
;;  
;; ver b - 29/04/2003  
;; 
;; Detecta se a topologia = "ua" está ativa ou nao 
;; 
(defrule ilha-ua-ativada 
     (object (is-a ilha)(nome "ua")(estado TRUE)) 
      =&gt; 
 (assert (avaliar ilha-ua))) 
    
(defrule ilha-ua-desativada 
   (object (is-a ilha)(nome "ua")(estado FALSE)) 
   ?ret&amp;lt;- (avaliar ilha-ua) 
       =&gt; 
  (retract ?ret)) 
;; 
;;   Diagnosticos de tensao - listas 25, 26, 27, 28, 29 e 30 
;; 
(defrule lista-25 
    (avaliar ilha-ua) 
    (object (is-a gerador)(nome "tg-5601")(tensao-real ?vg) 

(tensao-alta ?vgh)(barra-ge ?barra)(avr-ref-max ?avrmax)  
(avr-ponte1-falha ?avrpt1fl)(avr-ponte2-falha ?avrpt2fl) 
(avr-falha ?avrfl)(pot-reat-real ?qg)(pot-at-real ?pg)) 

     (object (is-a concessionaria)(estado TRUE)(tensao-real ?vc) 
(tensao-alta ?vch)(pot-reat-real ?qc)(pot-at-real ?pc)) 

  (test (&gt; ?vg ?vgh)) 
      (test (&gt; ?qg (* 0.95 ?pg))) 
      (test (&amp;lt;?qc (* 0.8 ?pc))) 
        =&gt; 
   (if (or (&gt; (slot-get ?barra tensao-real)(slot-get ?barra tensao-alta)) (eq ?avrmax TRUE)) 
       then 
       (assert (listar 25.1))) 
  
      (if (or (eq ?avrpt1fl TRUE)(eq ?avrpt2fl TRUE)(eq ?avrfl TRUE)) 
       then 
       (assert (listar 25.2)))) 
;;       
;; 
(defrule lista-26 
    (avaliar ilha-ua) 
        (object (is-a gerador)(nome "tg-5601")(tensao-real ?vg)(tensao-baixa ?vgl)(barra-ge ?barra) 
  (avr-ref-min ?avrmin)(avr-ponte1-falha ?avrpt1fl)(avr-ponte2-falha ?avrpt2fl)(avr-falha ?avrfl) 
        (pot-reat-real ?qg)(pot-at-real ?pg)(rl-60-desbal-tensao ?rl60)(fusivel-tp ?fustp)) 
  (object (is-a concessionaria)(estado TRUE)(nome ?n)(tensao-real ?vc)(tensao-alta ?vch) 
 (pot-reat-real ?qc)(pot-at-real ?pc)) 
 (test (&amp;lt;?vg ?vgl)) 
        (test (&amp;lt;?qg (* 0.7 ?pg))) 
        (test (&gt; ?qc  ?pc)) 
        =&gt; 
        (if (or (&amp;lt;(slot-get ?barra tensao-real)(slot-get ?barra tensao-baixa))(eq ?avrmin TRUE)) 
     then 
     (assert (listar 26.1))) 
         
     (if (or (eq ?fustp TRUE)(eq ?rl60 TRUE)(eq ?avrpt1fl TRUE)(eq ?avrpt2fl TRUE)(eq ?avrfl TRUE)) 
       then 
       (assert (listar 26.2)))) 
         
;; 
(defrule lista-27 
 (avaliar ilha-ua) 
     (object (is-a gerador)(nome "tg-5601")(tensao-real ?vg)(tensao-alta ?vgh)(tensao-baixa ?vgl) 
           (pot-reat-real ?qg)(pot-at-real ?pg)) 
     (object (is-a concessionaria)(estado TRUE)(tensao-real ?vc)(tensao-alta ?vch)(tensao-baixa ?vcl) 
   (pot-reat-real ?qc)(pot-at-real ?pc)) 
 (object (is-a transformador)(estado ?esta)(nome "tf-5601-a")(posicao-tap ?tapposa)(tap-calc ?tapcalca) 
               (falha-ct ?flcta)(perda-sincr-taps ?95tfa)) 
 (object (is-a transformador)(estado ?estb)(nome "tf-5601-b")(posicao-tap ?tapposb)(tap-calc ?tapcalcb) 
               (falha-ct ?flctb)(perda-sincr-taps ?95tfb)) 
 (test (&gt; ?vg ?vgh)) 
        (test (&amp;lt;?qg (* 0.7 ?pg))) 
        (test (and (&gt; ?vc ?vcl)(&amp;lt;?vc ?vch))) 



 

 

71 

        (test (&gt; ?qc  ?pc)) 
        (test (or (and (&gt;= 4 (- ?tapposa ?tapcalca))(eq TRUE ?esta))(and (&gt;= 4 (- ?tapposb ?tapcalcb))(eq TRUE ?estb)))) 
        =&gt; 
        (assert (listar 27.1)) 
         
        (if (or (eq ?flcta TRUE)(eq ?flctb TRUE)(eq ?95tfa TRUE)(eq ?95tfb TRUE)) 
           then 
        (assert (listar 27.2)))) 
    
(defrule lista-28 
     (avaliar ilha-ua) 
 (object (is-a gerador)(nome "tg-5601")(tensao-real ?vg)(tensao-alta ?vgh)(tensao-baixa ?vgl) 
   (pot-reat-real ?qg)(pot-at-real ?pg)) 
 (object (is-a concessionaria)(estado TRUE)(tensao-real ?vc)(tensao-alta ?vch)(tensao-baixa ?vcl) 
           (pot-reat-real ?qc)(pot-at-real ?pc)) 
     (object (is-a transformador)(estado ?esta)(nome "tf-5601-a")(posicao-tap ?tapposa)(tap-calc ?tapcalca) 
       (falha-ct ?flcta)(perda-sincr-taps ?95tfa)) 
     (object (is-a transformador)(estado ?estb)(nome "tf-5601-b")(posicao-tap ?tapposb)(tap-calc ?tapcalcb) 
       (falha-ct ?flctb)(perda-sincr-taps ?95tfb)) 
     (test (&amp;lt;?vg ?vgl)) 
        (test (&gt; ?qg (* 0.95 ?pg))) 
        (test (and (&gt; ?vc ?vcl)(&amp;lt;?vc ?vch))) 
        (test (&amp;lt;?qc (* 0.8 ?pc))) 
        (test (or (and (&gt;= 4 (- ?tapcalca ?tapposa))(eq TRUE ?esta))(and (&gt;= 4 (- ?tapcalcb ?tapposb))(eq TRUE ?estb)))) 
        =&gt; 
        (assert (listar 28.1)) 
         
        (if (or (eq ?flcta TRUE)(eq ?flctb TRUE)(eq ?95tfa TRUE)(eq ?95tfb TRUE)) 
          then 
        (assert (listar 28.2)))) 
        
(defrule lista-29 
 (avaliar ilha-ua) 
     (object (is-a gerador)(nome "tg-5601")(tensao-real ?vg)(tensao-alta ?vgh)(tensao-baixa ?vgl) 
           (pot-reat-real ?qg)(pot-at-real ?pg)) 
     (object (is-a concessionaria)(estado TRUE)(tensao-real ?vc)(tensao-alta ?vch)(tensao-baixa ?vcl) 
   (pot-reat-real ?qc)(pot-at-real ?pc)) 
 (object (is-a transformador)(estado ?esta)(nome "tf-5601-a")(posicao-tap ?tapposa)(tap-calc ?tapcalca) 
               (falha-ct ?flcta)(perda-sincr-taps ?95tfa)) 
 (object (is-a transformador)(estado ?estb)(nome "tf-5601-b")(posicao-tap ?tapposb)(tap-calc ?tapcalcb) 
               (falha-ct ?flctb)(perda-sincr-taps ?95tfb)) 
 (test (&gt; ?vg ?vgh)) 
        (test (&amp;lt;?qg (* 0.7 ?pg))) 
        (test (&amp;lt;?vc ?vcl)) 
        (test (&gt; ?qc  ?pc)) 
        (test  
          (or (and (&amp;lt;4 (abs (- ?tapposa ?tapcalca)))(eq TRUE ?esta))(and (&amp;lt;4 (abs (- ?tapposb ?tapcalcb)))(eq TRUE ?estb)))) 
        =&gt; 
        (if (or (&gt; 1 ?tapcalca)(&gt; 1 ?tapcalcb)(eq 1 ?tapposa)(eq 1 ?tapposb)) 
               then 
        (assert (listar 29)))) 
        
 
(defrule lista-30 
       (avaliar ilha-ua) 
   (object (is-a gerador)(nome "tg-5601")(tensao-real ?vg)(tensao-alta ?vgh)(tensao-baixa ?vgl) 
       (pot-reat-real ?qg)(pot-at-real ?pg)) 
   (object (is-a concessionaria)(estado TRUE)(tensao-real ?vc)(tensao-alta ?vch)(tensao-baixa ?vcl) 
               (pot-reat-real ?qc)(pot-at-real ?pc)) 
       (object (is-a transformador)(estado ?esta)(nome "tf-5601-a")(posicao-tap ?tapposa)(tap-calc ?tapcalca) 
           (falha-ct ?flcta)(perda-sincr-taps ?95tfa)) 
       (object (is-a transformador)(estado ?estb)(nome "tf-5601-b")(posicao-tap ?tapposb)(tap-calc ?tapcalcb) 
           (falha-ct ?flctb)(perda-sincr-taps ?95tfb)) 
       (test (&amp;lt;?vg ?vgl)) 
        (test (&gt; ?qg (* 0.95 ?pg))) 
        (test (&gt; ?vc ?vch)) 
        (test (&amp;lt;?qc (* 0.8 ?pc))) 
        (test (or (and (&amp;lt;4 (abs (- ?tapposa ?tapcalca)))(eq TRUE ?esta))(and (&amp;lt;4 (abs (- ?tapposb ?tapcalcb)))(eq TRUE ?estb)))) 
        =&gt; 
        (if (or (&amp;lt;33 ?tapcalca)(&amp;lt;33 ?tapcalcb)(eq 33 ?tapposa)(eq 33 ?tapposb)) 
           then 
        (assert (listar 30)))) 
 
 



 

 

72 

Arquivo lista_de_diagnosticos (parte referente a ilha UA) - Carrega diagnósticos na forma de fatos do tipo:  
(lista numero_da_lista texto_do_diagnóstico) 

 
 

;;;;;;;;;;;;;;;;;;;ARQUIVO DE REGRAS DO SISTEMA DE DIANOSTICO DA GERACAO DA REPAR - CASO 1 
;; Clovis de Almeida Jr. -   LISTAS DE DIAGNOSTICOS 
;;  
;; Cria na base de fatos as listas de Falhas com suas respectivas Causas, Providencias e Diagnosticos. 
;; Inicia com regra que captura o fato {listar numero_da_lista} e imprime o texto correspondente. 
;;  
;;  ver b - 28/04/2003 - Incluidas todas as listas de diagnosticos e retirada a acentuacao 
;; 
;; 
;; Regra que imprime a lista selecionada 
;; 
(defrule listar 
       ?l&amp;lt;- (listar ?lista) 
       (lista ?lista ?texto) 
       =&gt; 
  (printout t ?texto crlf) 
       (retract ?l)) 
;; 
;; 
;; 
;; Inicio das listas de diagnostico (só listadas as listas de 25 a 30) 
;; 
;; 
(assert (lista 25.1 " 
*********************************************************************************************************** 
********** LISTA 25.1   =&gt; Falha no Controle de Tensao do TG-5601  
 
********** CAUSAS       =&gt; Set-Point alto para o AVR do TG-5601 
 
********** PROVIDENCIAS =&gt; 1. Comparar a tensao do TG-5601 com a Barra A 
**********                 2. Verificar limite de SET POINT MAXIMO do AVR1 
**********                 3. Ajustar o valor do Set-Point do AVR1 
                  
 
********** DIAGNOSTICO  =&gt; 1. Falha no programa de controle de Tensao do TG-5601 ou ajuste alto do set-point  
**********                    para o AVR1.")) 
 
(assert (lista 25.2 " 
*********************************************************************************************************** 
********** LISTA 25.2   =&gt; Falha no Controle de Tensao do TG-5601 
 
********** CAUSAS       =&gt; Possivel defeito no AVR do TG-5601 
 
********** PROVIDENCIAS =&gt; 1. Verificar alarme de falha do AVR1 
**********                 2. Transferir de Ponte o AVR1  
**********                 3. Ajustar o valor do Set-Point do AVR1 
**********                 4. Caso necessario partir o TG-5602 e parar o TG-5601. 
**********                 5. Solicitar  a manutencao do AVR1 
 
********** DIAGNOSTICO  =&gt; 1. Possivel Falha de Tiristor. 
**********                 2. Ventilador. 
**********                 3. Fusivel  dos Tiristores. 
**********                 4. Alimentacao Eletrica.")) 
 
(assert (lista 26.1 " 
*********************************************************************************************************** 
********** LISTA 26.1   =&gt; Falha no Controle de Tensao do TG-5601 
 
********** CAUSAS       =&gt; Set-Point baixo para o AVR do TG-5601 
 
********** PROVIDENCIAS =&gt; 1. Comparar a tensao do TG-5601 com a Barra A 
**********                 2. Verificar limite de SET POINT MINIMO do AVR1 
**********                 3. Ajustar o valor do Set-Point do AVR1 
 
 
********** DIAGNOSTICO  =&gt; 1. Falha no programa de controle de Tensao do TG-5602 ou ajuste baixo do set-point 
**********                    para o AVR1.")) 
 



 

 

73 

(assert (lista 26.2 " 
*********************************************************************************************************** 
********** LISTA 26.2   =&gt; Falha no Controle de Tensao do TG-5601  
 
********** CAUSAS       =&gt; Possivel defeito no AVR1 do TG-5601 
 
********** PROVIDENCIAS =&gt; 1. Verificar  possivel falha do sinal do TP da saida do TG-5601, indicado pela  
**********                    atuacao do rele 60GA bandeira 1. 
**********                 2. Verificar alarme de falha do AVR1 
**********                 3. Transferir de Ponte o AVR1 
**********                 4. Ajustar o valor do Set-Point do AVR1 
**********                 5. Caso necessario partir o TG-5602 e parar o TG-5601. 
**********                 6. Solicitar  a manutencao do AVR1/TP 
 
********** DIAGNOSTICO  =&gt; 1. Queima de fusivel, atuacao do disjuntor de protecao do TP de saida do gerador  
**********                    ou extracao indevida do TP. 
**********                 2. Possivel Falha de Tiristor. 
**********                 3. Ventilador. 
**********                 4. Fusivel  dos Tiristores. 
**********                 5. Alimentacao Eletrica.")) 
 
 
(assert (lista 27.1 " 
*********************************************************************************************************** 
********** LISTA 27.1   =&gt; Falha no Controle do Comutador de Tapes dos Transformadores 
 
********** CAUSAS       =&gt; Comutador de Tapes em manual 
 
********** PROVIDENCIAS =&gt; 1. Verificar se o controle do comutador de tape esta em automatico. 
**********                 2. Verificar a tensao do TG-5601 e da linha da Copel que estiver em operacao. 
 
********** DIAGNOSTICO  =&gt; 1. Comutador de Tapes em manual ou falha no controle de tapes.")) 
 
 
(assert (lista 27.2 " 
*********************************************************************************************************** 
********** LISTA 27.2   =&gt; Falha no Controle do Comutador de Tapes dos Transformadores 
 
********** CAUSAS       =&gt; Possivel defeito no Comutador de Tapes 
 
********** PROVIDENCIAS =&gt; 1. Verificar  falha no comutador de tape do TF-5601A ou TF-5601B. 
**********                 2. Verificar  falha de sincronismo dos tapes entre os transformadores. 
**********                 3. Transferir o controle de tapes para outro transformador. 
**********                 4. Caso necessario deixar o controle em manual e fazer o correcao pelo campo. 
**********                 5. Solicitar  a manutencao do comutador 
 
********** DIAGNOSTICO  =&gt; 1. Possivel Falha do comutador de tapes. 
**********                 2. Protecao atuada por para do tape fora de posicao  (ficou entre dois tapes) 
**********                 3. Falta de Alimentacao Eletrica")) 
 
 
(assert (lista 28.1 " 
*********************************************************************************************************** 
********** LISTA 28.1   =&gt; Falha no Controle do Comutador de Tapes dos Transformadores 
 
********** CAUSAS       =&gt; Comutador de Tapes em manual 
 
********** PROVIDENCIAS =&gt; 1. Verificar se o controle do comutador de tape esta em automatico. 
**********                 2. Verificar a tensao do TG-5601 e da linha da Copel que estiver em operacao. 
 
********** DIAGNOSTICO  =&gt; 1. Comutador de Tapes em manual ou falha no controle de tapes.")) 
 
 



 

 

74 

(assert (lista 28.2 " 
*********************************************************************************************************** 
********** LISTA 28.2   =&gt; Falha no Controle do Comutador de Tapes dos Transformadores  
 
********** CAUSAS       =&gt; Possivel defeito no Comutador de Tapes 
 
********** PROVIDENCIAS =&gt; 1. Verificar  falha no comutador de tape do TF-5601A ou TF-5601B. 
**********                 2. Verificar falha de sincronismo dos tapes entre os transformadores. 
**********                 3. Transferir o controle de tapes para outro transformador. 
**********                 4. Caso necessario deixar o controle em manual e fazer o correcao pelo campo. 
**********                 5. Solicitar  a manutencao do comutador. 
 
********** DIAGNOSTICO  =&gt; 1. Possivel Falha do comutador de tapes. 
**********                 2. Protecao atuada por para do tape fora de posicao  (ficou entre dois tapes) 
**********                 3. Falta de Alimentacao Eletrica.")) 
 
 
(assert (lista 29 " 
*********************************************************************************************************** 
********** LISTA 29     =&gt; Falha no Controle de Tensao das Linhas de 69 KV da Copel 
 
********** CAUSAS       =&gt; Tensao muito alta na linha A ou B de 69 KV  da Copel  
 
********** PROVIDENCIAS =&gt; 1. Verificar a tensao da linha A ou B de   69 KV da Copel 
**********                 2. Verificar se os tapes dos transformadores estao no minimo. 
**********                 3. Caso necessario ajustar os tapes dos transformadores para o minimo. 
**********                 4. Caso necessario abrir sincronismo com a Copel, se possivel trocar de linha. 
**********                 5. Solicitar a Copel a correcao da tensao das linhas de 69 KV. 
 
********** DIAGNOSTICO  =&gt; 1.1.Falha no controle de tensao das linhas A ou B de 69 KV da Copel.")) 
 
 
(assert (lista 30 " 
*********************************************************************************************************** 
********** LISTA 30     =&gt; Falha no Controle de Tensao das Linhas de 69 KV da Copel  
 
********** CAUSAS       =&gt; Tensao muito baixa na linha A ou B de 69 KV  da Copel  
 
********** PROVIDENCIAS =&gt; 1. Verificar a tensao da linha A ou B de   69 KV da Copel 
**********                 2. Verificar se os tapes dos transformadores estao no maximo. 
**********                 3. Caso necessario ajustar os tapes dos transformadores para o maximo. 
**********                 4. Caso necessario abrir sincronismo com a Copel, se possivel trocar de linha. 
**********                 5. Solicitar a Copel a correcao da tensao das linhas de 69 KV. 
 
********** DIAGNOSTICO  =&gt; 1. Falha no controle de tensao das linhas A ou B de 69 KV da Copel.")) 
 
 
 



 

 

75 

ANEXO 5 – EXEMPLOS DE TELAS DE ENTRADAS DE DADOS 
E SAÍDAS DE DIAGNÓSTICOS OBTIDOS NOS TESTES 



 

 

76 



 

 

77 

 

 



 

 

78 

REFERÊNCIAS 

ADAPA, R.; 1994. Expert system applications in power system planning and 
operations. IEEE Power Engineering Review, Volume: 14 Issue: 2, (Feb) p. 
12 

ADIBI, M.M.; KAFKA, L.R.J.; MILANICZ, D.P.; 1994. Expert system requirements for 
power system restoration. Power Systems, IEEE Transactions, Volume: 9 
Issue: 3 , (Aug) p. 1592 –1600 

AMJADY, N.; 1998. On-line fault diagnosis of power systems by a new expert 
system. Electrical and Computer Engineering, 1998. IEEE Canadian 
Conference, Volume: 2 , (May) p. 731 -733 

BANN, J.J.; IRISARRI, G.D.; MOKHTARI, S.; KIRSCHEN, D.S.; MILLER, B.N.; 1997. 
Integrating AI applications in an energy management system.  Expert, IEEE, 
Volume: 12 Issue: 6, (Nov/Dec) p. 53 –59 

BANSILAL; THUKARAM, D.; PARTHASARATHY, K.; 1995. An expert system for 
voltage control in a power system network. Energy Management and Power 
Delivery, 1995. Proceedings of EMPD '95., 1995 International Conference, 
Volume: 1, (Nov) p. 364 -369 

BERNARAS, A.; LARESGOITI, I.; BARTOLOME, N.; CORERA, J.; 1996. An ontology 
for fault diagnosis in electrical networks. Intelligent Systems Applications to 
Power Systems, 1996. Proceedings, ISAP '96 International conference, (Feb) 
p. 199 –203 

BITTENCOURT, G.; 2001. Inteligência artificial: ferramentas e teorias. 2ª ed. 
Editora da UFSC. 

BOOTH, C.; 1997. The use of artificial intelligence based systems for the 
summarization and diagnosis of events on electrical power networks. AI for 
Network Management Systems, IEE Colloquium. Digest No: 1997/094 (Apr) 
p. 6/1 -6/4 

BURT, G.M.; MCDONALD, J.R.; 1991. Potential advantages of a diagnostic expert 
system for assisting operator response to system events. Power System 
Monitoring and Control, Third International Conference (Jun) p. 222 –224 

CHANDRASEKARAN, A.; SUNDARAM, A.; 1994. Unified software approach to power 
quality assessment and evaluation. Southcon/94. Conference Record , (Mar) 
p. 404 –408 

CHANDRASEKARAN, B.; JOSEPHSON, J.R.; BENJAMINS, V.R.; 1999. What are 
ontologies, and why do we need them?  
Intelligent Systems, IEEE, Volume: 14 Issue: 1, (Jan/Feb) p. 20 –26 

COCKBURN, D.; 1992. Two model-based systems for fault diagnosis in electricity 
distribution networks. Intelligent Fault Diagnosis - Part 2: Model-Based 
Techniques, IEE Colloquium, (Feb) p. 5/1 -5/5 

COCKBURN, D., VARGA, L. Z., JENNINGS, N. R., 1992. Cooperating Intelligent 
Systems for Electricity Distribution, Proc. of Expert Systems 92 (Applications 
Track), Cambridge, UK 

COCKBURN, D.; 1993. Intelligent network operation and control systems. Expert 
Systems in the Field of Protection and Control, IEE Colloquium, (Oct) p. 1/1 
-1/4 



 

 

79 

CROCE, F.; DELFINO, B.; FAZZINI, P.A.; MASSUCCO, S.; MORINI, A.; SILVESTRO, 
F.; SIVIERI, M.; 2001. Operation and management of the electric system for 
industrial plants: an expert system prototype for load-shedding operator 
assistance. Industry Applications, IEEE Transactions, Volume: 37 Issue: 3 , 
(May/Jun) p. 701 –708 

EKWUE, A.O.; MACQUEEN, J.F.; 1995. Developments of artificial intelligence 
techniques for voltage control. Artificial Intelligence Applications in Power 
Systems, IEE Colloquium (Apr) p. 2/1 -2/6 

ENNS, M.; BUDLER, L.; CEASE, T.W.; ELNEWEIHI, A.; GURO, E.; KEZUNOVIC, M.; 
LINDERS, J.; LEBLANC, P.; POSTFOROOSH, J.; RAMASWAMI, R.; SOUDI, F.; 
TAYLOR, R.; UNGRAD, H.; VENKATA, S.S.; ZIPP, J.; 1994. Potential 
applications of expert systems to power system protection. Power Delivery, 
IEEE Transactions, Volume: 9 Issue: 2, (Apr) p. 720 –728 

ERIKSSON, H.; 2003. JessTab Manual – Integration of Protégé and Jess V 1.0. 
Linköping University – Sweden 
http://www.ida.liu.se/~her/JessTab/JessTab.pdf 

FORGY, C. L.; 1982. Rete: A Fast algorithm for the Many Pattern/ Many Object 
Pattern Match Problem. Artificial Intelligence 19, p. 17 - 37 

FRIEDMAN-HILL, E. J.; 2001.  Jess, The expert system shell for the java platform. 
v.6.0. USA: Livermore, CA. http://herzberg.ca.sandia.gov/jess 

HASAN, K.; RAMSAY, B.; RANADE, S.; OZVEREN, C.S.; 1994. An object-oriented 
expert system for power system alarm processing and fault identification. 
Electrotechnical Conference, 1994. Proceedings, 7th Mediterranean, Volume: 
3 (Apr) p. 909 -912  

JENNINGS N. R., CORERA J. M., LARESGOITI I.; 1995. Developing industrial multi-
agent systems. Proceedings of the First International Conference on Multi-
Agent Systems (ICMAS-95), (June) p. 423-430 

KIRSCHEN, D.; BANN, J.; 1997. AI applications in power systems operation. AI for 
Network Management Systems, IEE Colloquium. Digest No: 1997/094, (Apr) 
p. 7/1 -7/5 

KIRSCHEN, D.S.; WOLLENBERG, B.F.; IRISARRI, G.D.; BANN, J.J.; MILLER, B.N.; 
1989. Controlling power systems during emergencies: the role of expert 
systems. IEEE Computer Applications in Power, Volume: 2 Issue: 2, (Apr) p. 
41 –45 

KIT PO WONG; 1992. Artificial Intelligence Applications in Power Systems 
AI, Simulation, and Planning in High Autonomy Systems. Integrating 
Perception, Planning and Action, Proceedings of the Third Annual Conference 
(Jul) p. 123 –126 

KONO, Y.; SUZUKI, H.; MATSUMOTO, K.; 1990. Expert system applications to 
power systems operation. Intelligent Control, 1990. Proceedings, 5th IEEE 
International Symposium, Volume: 2, (Sep) p. 1139 -1144 

LLOYD, B.A.; STONE, G.C.; 1991. Prospects for expert systems to aid the operation 
and maintenance of electrical equipment. Electrical Electronics Insulation 
Conference, 1991. Boston '91 EEIC/ICWA Exposition, Proceedings of the 
20th  (Oct) p. 205 –209 

LO, K.L.; NASHID, I.; 1993. Expert systems and their application to power systems. 
I. Components and methods of knowledge representation. Power 
Engineering Journal, Volume: 7 Issue: 1, (Feb) p. 41 –45 



 

 

80 

MALHEIRO, N.; VALE, Z.A.; RAMOS, C.; SILVA, A.; MARQUES, A.; 1999. Providing 
explanations in a real-time expert system for control center operator 
assistance. Electric Power Engineering. PowerTech Budapest 99. 
International Conference, p. 182 

MINAKAWA, T.; ICHIKAWA, Y.; KUNUGI, M.; SHIMADA, K.; WADA, N.; 
UTSUNOMIYA, M.; 1995. Development and implementation of a power 
system fault diagnosis expert system. Power Systems, IEEE Transactions, 
Volume: 10 Issue: 2, (May) p. 932 –940 

MOKHTARI, S.; SINGH, J.; WOLLENBERG, B.; 1988. A unit commitment expert 
system. Power Systems, IEEE Transactions, Volume: 3 Issue: 1, (Feb) p. 
272 –277 

MONDON, E.; HEILBRONN, B.; HARMAND, Y.; PAILLET, O.; FARGIER, H.; 1992. 
MARS: an aid for network restoration after a local disturbance. Power 
Systems, IEEE Transactions, Volume: 7 Issue: 2, (May) p. 850 –855 

MORCOS, M.M.; IBRAHIM, W.R.A.; 1999. Electric Power Quality and Artificial 
Intelligence: Overview and Applicability. IEEE Power Engineering Review, 
Volume: 19 Issue: 6  (Jun) p. 5 –10 

MORIGUCHI, S.; TANAKA, T.; ISHIKAWA, K.; 1988. Expert shell for power systems 
diagnosis. Artificial Intelligence for Industrial Applications. IEEE AI '88, 
Proceedings of the International Workshop, (May) p. 585 –590 

NIIMURA, T.; MATSUMOTO, T.; YOKOYAMA, R.; MORITA, T.; 1988. An Expert 
System Based On Dynamic Generation Rescheduling In Power System 
Emergency Control. Industrial Electronics Society, 1988. IECON '88. 
Proceedings, 14 Annual Conference, Volume: 1, (Oct) p. 116 –121 

NILSSON, N.E.; 1989. Application of computer artificial intelligence techniques to 
analyzing the status of typical utility electrical power plant systems. Energy 
Conversion, IEEE Transactions. Volume: 4 Issue: 1 , (Mar)  p. 1 –8 

POWELL, M.J.E.; 1993. Data acquisition and requirements for expert systems in a 
control room context. Expert Systems in the Field of Protection and Control, 
IEE Colloquium (Oct) p. 3/1 -3/2 

PYE, M.E.; RUSSELL, T.D.; 1996. Intelligent energy management systems. An 
operator view. Power System Control and Management, Fourth International 
Conference, Publ. No. 421, (Apr) p. 154 –159 

RAJESH, K.G.; 1997. Expert systems: their implications and applications for power 
systems. IEEE Potentials , Volume: 16 Issue: 2 , (Apr/May) p. 35 –37 

RIBEIRO, G.M.; BORGES DA SILVA, L.E.; LAMBERT-TORRES, G.; ALVES DA SILVA, 
A.P.; 1994. Power substation supervisory control. Systems, Man, and 
Cybernetics, 1994. 'Humans, Information and Technology'., 1994 IEEE 
International Conference, Volume: 3 , (Oct) p. 2165 -2170 

ROLIM, J.G.; GIACOMELLI, J.E.; MACHADO, L.J.B.; 1998. Simulator helps validate a 
voltage control expert system. IEEE Computer Applications in Power , 
Volume: 11 Issue: 1 , (Jan) p. 59 –63 

RUSSEL, S. J.; NORVIG, P.; 1995. Artificial intelligence: A modern approach. 
Prentice Hall 

SARTOR, A. F.; 2002. Sistema especialista para auxílio à recomposição de 
subestações de transmissão na fase fluente. Florianópolis –SC. Dissertação 
(Mestrado Engenharia Elétrica) – Centro Tecnológico, Universidade Federal 
de Santa Catarina 



 

 

81 

SHERWALI, H.H.; CROSSLEY, P.A.; 1996. Expert system for fault location and 
protection analysis. Power System Control and Management, Fourth 
International Conference, Publ. No. 421, (Apr) p. 181 –186 

SILVA, T. M. S.; FREITAS, F. L. G.; BITTENCOURT, G.; 2002. Extração de 
informação no master-web baseada em ontologias. Anais do XIII Simpósio 
Brasileiro de Informática em Educação,  (nov) 

STANFORD UNIVERSITY; 2003. Protégé-2000 User’s guide. 
http://protege.stanford.edu/ 

STUDER, R.; BENJAMINS V. R.; FENSEL D.; 1998. Knowledge engineering: 
Principles and methods. IEEE Transactions on Data and Knowledge 
Engineering, Volume: 25, p. 161-197 

TAN LOC LE; NEGNEVITSKY, M.; 1996. Expert system application for voltage and 
VAr control in power transmission and distribution systems. Transmission 
and Distribution Conference, 1996. Proceedings,  IEEE , (Sep) p. 531 –536 

VALE, Z.A.; MOURA, A.M.; 1992. An expert system to assist operators of the power 
system control centers. Information-Decision-Action Systems in Complex 
Organisations, 1992., International Conference, (Apr) p. 110 –114 

VARGA L. Z., JENNINGS N. R., COCKBURN D.; 1994. Integrating intelligent systems 
into a cooperating community for electricity distribution management. 
International Journal of Expert Systems with Applications 7, (Apr) p. 563-
579 

VAZQUEZ M., E.; CHACON M., O.L.; ALTUVE F., H.J.; 1997. An on-line expert 
system for fault section diagnosis in power systems. Power Systems, IEEE 
Transactions, Volume: 12 Issue: 1, (Feb) p. 357 –362 

WATERMAN, D. A.; 1996. A guide to expert systems. 1ª ed. Addison Wesley,  

ZHANG, Z.Z.; HOPE, G.S.; MALIK, O.P.; 1989. Expert systems in electric power 
systems-a bibliographical survey. Power Systems, IEEE Transactions, 
Volume: 4 Issue: 4, (Nov) p. 1355 –1362 

ZHU YONGLI; YANG, Y.H.; HOGG, B.W.; ZHANG, W.Q.; GAO, S.; 1994. An expert 
system for power systems fault analysis. Power Systems, IEEE Transactions, 
Volume: 9 Issue: 1, (Feb) p. 503 –509 

 


</field>
	</doc>
</add>