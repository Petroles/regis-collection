<?xml version="1.0" encoding="utf-8"?>
<add>
	<doc>
		<field name="docid">BR-TU.18743</field>
		<field name="filename">25778_DISSERTA%c3%87%c3%83O%20Luc%c3%adolo%20Victor%20Magalh%c3%a3es%20e%20Silva.pdf</field>
		<field name="filetype">PDF</field>
		<field name="text">
 

 

 

UNIVERSIDADE FERDERAL DE PERNAMBUCO 

 CENTRO DE TECNOLOGIA E GEOCIÊNCIAS  

DEPARTAMENTO DE ENGENHARIA CIVIL 

PROGRAMA DE PÓS-GRADUAÇÃO EM ENGENHARIA CIVIL 

 

LUCÍOLO VICTOR MAGALHÃES E SILVA 

 

 

 

 

 

MÉTODO DOS ELEMENTOS FINITOS APLICADO À SOLUÇÃO DE PROBLEMAS 
POROELÁSTICOS 

 

 

 

 

 

 

 

 

 

 

Recife 

 2018 

 

 



 

 

 

LUCÍOLO VICTOR MAGALHÃES E SILVA 

 

 

 

 

 

 

 

 

 

 

MÉTODO DOS ELEMENTOS FINITOS APLICADO À SOLUÇÃO DE PROBLEMAS 
POROELÁSTICOS 

 

 

 

Dissertação submetida ao corpo docente do Progra-
ma de Pós-Graduação em Engenharia Civil da Uni-
versidade Federal de Pernambuco como parte inte-
grante dos requisitos necessários à obtenção do grau 
de Mestre em Engenharia Civil. 

Área de concentração: Simulação e Gerenciamento 
de reservatórios de Petróleo. 

Orientador: Prof. Dr. José Leonardo do Nascimento 
Guimarães 

 

 

Recife 

 2018 



 

 

 

 

 

 

 

 

 

 

 

 

 

 

                                   

 

 

 

 

 

 

                                                                                    

   

 

 

 

 

 

 

 

 

 

 S886m    Silva, Lucíolo Victor Magalhães e.    
                    Método dos elementos finitos aplicado à solução de problemas poroelásticos / 
                Lucíolo Victor Magalhães e Silva. – Recife, 2018. 
                    227f.: il., fig. tab. 
 
                    Orientador: Prof. Dr. José Leonardo do Nascimento Guimarães. 
 
  Dissertação (Mestrado) – Universidade Federal de Pernambuco. CTG. Programa de Pós-
graduação em Engenharia Civil, 2018. 
                           Inclui Referências e Apêndices.  
 

Engenharia Civil.    2. Elementos Finitos.  3.  Poroelásticidade.  4. Geomecânica. 
I.Guimarães, José Leonardo do Nascimento (Orientador).  II. Título. 

 
 
 
 
 
                      624 CDD (22.ed)                                    UFPE/BCTG-2018- 130 
 

  

 



 

 

 
 

 

UNIVERSIDADE FEDERAL DE PERNAMBUCO 
PROGRAMA DE PÓS-GRADUAÇÃO EM ENGENHARIA CIVIL 

A comissão examinadora da Defesa de Dissertação de Mestrado 

MÉTODO DOS ELEMENTOS FINITOS APLICADO À SOLUÇÃO DE PROBLEMAS 

POROELÁSTICOS  
 

defendida por 

Lucíolo Victor Magalhães e Siva 

 

Considera o candidato APROVADO 

 

Recife, 28 de fevereiro de 2018 

Orientador - Prof. Dr. Leonardo José do Nascimento Guimarães – UFPE 
Banca Examinadora: 

 

__________________________________________ 

Dr. Jonathan da Cunha Teixeira – UFPE 

 (examinador externo) 

 

__________________________________________ 

Prof.ª Dr.ª Lícia Mouta da Costa – UFPE 

 (examinadora externa) 

 

___________________________________________ 

Prof. Drª Igor Fernandes Gomes – UFPE 

(examinador externo) 

 

 

 



 

 

 

 

Esse trabalho é dedicado à memória do Professor Doutor Ivaldo Dário da Silva Pontes Filho. 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 



 

 

AGRADECIMENTOS 

 

Agradeço especialmente a minha família pelo apoio em todos os momentos, agradeço 

à meus irmãos Igor e Hugo pelo apoio e aos meus pais Luciene e José Carlos por todo amor e 

educação que me deram ao longo da vida.  

Agradeço aos meus amigos do LMCG e da vida, pela presença, apoio e paciência du-

rante esse período. Alguns dos amigos mais importantes são Pedro Romero, Jean Baptiste, 

Isabel, Ricardo, Bruno, Tarcísio, Nina, Vitor, Oscar, Nayara, Jeferson, Aura, Ana, Laura, La-

ís, Marinésio, Thiago, Daniel, Vitor cada um deles contribuíram de certa forma para minha 

formação. Agradeço ao meu companheiro Jonathan Teixeira pelos ensinamentos e discussões.  

Agradeço aos funcionários e funcionárias do LMCG e do PPGEC, em especial a Rose 

e Priscila, assim como Andréa, que além da amizade sempre estiveram à disposição de todos. 

Agradeço aos professores do LMCG pelos ensinamentos e pela forma que recebem 

seus alunos no grupo. Agradeço ao professor Leonardo Guimarães, meu atual orientador, à 

Professora Lícia e ao professor Igor. Ao professor Ivaldo, que no presente momento não se 

encontra mais entre nós, eu dedico esse trabalho que tenho como sendo uma homenagem à 

sua lembrança, a partir dele foi que me dediquei ao mestrado na área que escolhi e ao grupo. 

Agradeço a todos que contribuíram para minha formação acadêmica desde a gradua-

ção, os amigos do LABCOM, os professors Paulo Lyra, Darlan Karlo, os alunos de pós gra-

duação Eduardo e Márcio, por me introduzirem na área numérica durante a iniciação científi-

ca. Alberto, Fernando, Gustavo, Felipe, Marcelo, pelo acolhimento no começo da vida na 

pesquisa científica. Ao professor Paulo Marcelo, que contribuiu de forma significativa para 

minha formação. 

 

 

 

 

 



 

 

RESUMO 

 

Os problemas poromecânicos são caracterizados por situações onde há o interesse de determi-

nar o comportamento mecânico de meios formados por uma matriz porosa saturada ou não 

por fluidos ou gases. Esses são encontrados em diversas áreas do conhecimento e são objeto 

de interesse de institutos de pesquisa e da indústria e, assim como outros problemas apresen-

tados na ciência, podem ser definidos em termos matemáticos por equações diferenciais. Tais 

equações, devido ao advento da evolução da computação e pela natureza dos problemas po-

romecânicos: geometria, condições de contorno, características físicas dos materiais; são, atu-

almente, resolvidos em grande parte das aplicações utilizando formulações numéricas imple-

mentadas em computadores digitais. Sendo assim, esse trabalho consiste no desenvolvimento 

de um simulador numérico, desenvolvido em ambiente MATLAB®, para a solução de uma 

das vertentes da poromecânica, a poroelasticidade linear. O pré-processamento, no que diz 

respeito à geração de malha e modelagem da geometria dos problemas, é relizado no Gmsh. 

Todo o processamento e pós-processamento foi implementado no código desenvolvido. As 

condições a que estão sujeitas a formulação utilizada são as seguintes: 1. Meio sólido sujeito 

ao regime elástico-linear; 2. Meio sujeito ao regime do estado plano de deformações; 3. Todas 

as deformações ocorridas são consideradas como pequenas deformações; 4. O escoamento é 

laminar e pode ser descrito pela Lei de Darcy; 5. O escoamento e as deformações ocorrem de 

forma isotérmica. As formulações numéricas utilizadas para a discretização foram uma for-

mulação mista do Método dos Elementos Finitos em termos da discretização espacial e uma 

formulação do Método das Diferenças Finitas para a discretização temporal. As variáves me-

cânicas são interpoladas com uma função quadrática, definida em um elemento com seis nós e 

as funções interpoladoras das variáves hidráulicas são construídas com os valores nos vértices 

de um triangulo, sendo assim uma função linear. Da forma que foi implementado o problema 

a discretização temporal é função de um parâmetro que define e aproximação como uma pon-

deração entre o passo de tempo em que as variáveis serão avaliadas. Para a validação e com-

paração do código foram resolvidos cinco problemas apresentados na literatura. Os problemas 

validaram o código, obtendo resultados satisfatórios. Também foi analisada a influência das 

condições de contorno em problemas com solução analítica considerando o domínio infinito e 

o adensamento de um meio anisotrópico e heterogêneo. 

Palavras-chave: Elementos Finitos. Poroelasticidade. Geomecânica. 



 

 

   ABSTRACT 

 

Poromechanical problems are characterized by situations where it is of interest to determine 

the mechanical behavior of media formed by a porous matrix saturated or not by fluids or 

gases. These are found in several areas of knowledge and are of interest to research institutes 

and industry and, like other problems presented in science, can be defined in mathematical 

terms by differential equations. These equations, due to the advent of computational evolution 

and the nature of the po-romechanic problems: geometry, contour conditions, physical charac-

teristics of materials; are currently solved in most applications using numerical formulations 

implemented in digital computers. Thus, this work consists in the development of a numerical 

simulator, developed in MATLAB® environment, for the solution of one of the slopes of the 

poromecânica, the linear poroelasticity. Preprocessing, with respect to mesh generation and 

modeling of problem geometry, is reported in Gmsh. All processing and post-processing was 

implemented in the developed code. The conditions to which the formulation is subjected are 

the following: 1. Solid medium subject to the linear-elastic regime; 2. Medium subject to the 

flat state of deformations; 3. All deformations occurring are considered as small deformations; 

4. The flow is laminar and can be described by Darcy's Law; 5. The flow and deformation 

occur isothermal. The numerical formulations used for the discretization were a mixed formu-

lation of the Finite Element Method in terms of spatial discretization and a formulation of the 

Finite Differences Method for time discretization. The mechanical variables are interpolated 

with a quadratic function, defined in a six-node element, and the interpolating functions of the 

hydraulic variables are constructed with the values at the vertices of a triangle, thus being a 

linear function. In the way that the problem was implemented the temporal discretization is a 

function of a parameter that defines and approximation as a point of reference between the 

time step in which the variables will be evaluated. For the validation and comparison of the 

code, five problems were solved in the literature. The problems validated the code, obtaining 

satisfactory results. We also analyzed the influence of boundary conditions on problems with 

analytical solution considering the infinite domain and the densification of an anisotropic and 

heterogeneous medium. 

 

Keywords: Finite elements. Poroelasticity. Geomechanics 



 

 

LISTA DE ILUSTRAÇÕES 

 

Figura 1.1. Meio poroso, esquema de rocha reservatório. ........................................................ 14 
Figura 2.1. Professor Maurice Anthony Biot. .......................................................................... 17 
Figura 2.2.General Theory of Three-Dimensional Consolidation, artigo de Biot. ................... 18 
Figura 4.1. Corpo submetido a carregamentos externos. ......................................................... 26 
Figura 4.2. Seção no corpo. ...................................................................................................... 27 
Figura 4.3. Detalhe do ponto P. ................................................................................................ 28 
Figura 4.4. Tensões em um elemento infinitesimal. ................................................................. 29 
Figura 4.5.Tipos de análise: (a) Geometria do problema; (b) Estado Plano de Tensões e 
Estado Plano de Deformações; (c) Análise 3-D. ...................................................................... 33 
Figura 4.6. Velocidade em um elemento infinitesimal. ............................................................ 36 
Figura 5.1. Deslocamentos nodais utilizados na função interpoladora dos deslocamentos. .... 43 
Figura 5.2. Pressões nodais utilizados na função interpoladora das pressões. ......................... 45 
Figura 7.1. Procedimento de simulação - criação da geometria do Gmsh. .............................. 56 
Figura 7.2. Procedimento de simulação - geração da malha computacional no Gmsh. ........... 57 
Figura 7.3. Procedimento de simulação - arquivo .geo e .msh obtidos no Gmsh. ................... 57 
Figura 7.4. Procedimento de simulação - definição, no MATLAB, dos arquivos que serão 
lidos. ......................................................................................................................................... 58 
Figura 7.5. Procedimento de simulação - definição dos parâmetros para a simulação na rotina 
do MATLAB. ........................................................................................................................... 58 
Figura 7.6. Procedimento de simulação - processamento do MATLAB.................................. 59 
Figura 7.7. Procedimento de simulação - criação de diretórios com os resultados. ................. 59 
Figura 7.8. Procedimento de simulação - resultados salvos. .................................................... 60 
Figura 8.1. Carreamento em função do tempo. ........................................................................ 61 
Figura 8.2. Problema de Terzaghi - Geometria e condições de contorno. ............................... 63 
Figura 8.3. Problema de Terzaghi: (a) Malha 1; (b) Malha 2. .................................................. 64 
Figura 8.4. Problema de Terzaghi - Solução analítica e numérica das pressoes ano longo do 
eixo x=0 para a Malha 1. .......................................................................................................... 66 
Figura 8.5. Problema de Terzaghi - Solução analítica e numérica das pressoes ano longo do 
eixo x=0 para a Malha 2. .......................................................................................................... 66 
Figura 8.6. Problema de Terzaghi - Campo de pressões, (a) Malha1, (b) Malha2. .................. 67 
Figura 8.7. Problema de Terzaghi - Campo de tensões normais na direção x, (a) Malha1, (b) 
Malha2. ..................................................................................................................................... 68 
Figura 8.8. Problema de Terzaghi - Campo de tensões normais na direção y, (a) Malha1, (b) 
Malha2. ..................................................................................................................................... 69 
Figura 8.9. Problema de Terzaghi Modificado – Geometria e Condições de Contorno. ......... 70 
Figura 8.10. Problema de Terzaghi Modificado – Malhas computacionais utilizadas: (a) 
Malha1; (b) Malha2. ................................................................................................................. 72 
Figura 8.11. Problema de Terzaghi Modificado – soluções analíticas e numéricas para a 
Malha1. ..................................................................................................................................... 73 



 

 

Figura 8.12. Problema de Terzaghi Modificado – soluções analíticas e numéricas para a 
Malha2. ..................................................................................................................................... 74 
Figura 8.13. Problema de Terzaghi modificado - Campo de pressões, (a) Malha1, (b) Malha2.
 .................................................................................................................................................. 75 
Figura 8.14. Problema de Terzaghi modificado - Campo de tensões normais na direção x, (a) 
Malha1, (b) Malha2. ................................................................................................................. 76 
Figura 8.15. Problema de Terzaghi modificado - Campo de tensões normais na direção y, (a) 
Malha1, (b) Malha2. ................................................................................................................. 77 
Figura 8.16. Problema de Mandel - Geometria e condições de contorno. ............................... 78 
Figura 8.17. Problema de Mandel - Simetria utilizada para a modelagem. ............................. 80 
Figura 8.18. Problema de Mandel – Malhas computacionais utilizadas: (a) Malha1; (b) 
Malha2. ..................................................................................................................................... 81 
Figura 8.19. Problema de Mandel – pressões ao longo de 0y =  para a Malha1. ..................... 83 

Figura 8.20. Problema de Mandel – pressões ao longo de 0y =  para a Malha2. ..................... 84 

Figura 8.21. Problema de Mandel – malha inicial (azul) e deformada (vermelho) para a 
Malha1 ( )1, 0 0vT = . ................................................................................................................... 84 
Figura 8.22. Problema de Mandel – malha inicial (azul) e deformada (vermelho) para a 
Malha2 ( )1, 0 0vT =  . .................................................................................................................. 85 
Figura 8.23. Problema de Mandel - Campo de pressões, (a) Malha1, (b) Malha2. .................. 85 
Figura 8.24. Problema de Mandel - Campo de tensões normais na direção x, (a) Malha1, (b) 
Malha2. ..................................................................................................................................... 86 
Figura 8.25. Problema de Mandel - Campo de tensões normais na direção y, (a) Malha1, (b) 
Malha2. ..................................................................................................................................... 87 
Figura 8.26. Problema de Schiffman - Geometria e condições de contorno. ........................... 88 
Figura 8.27. Problema de Schiffman – Malha computacional. ................................................ 91 
Figura 8.28. Problema de Schiffman – solução analítica e soluções numéricas das pressões de 
fluido ao longo de 0x =  ( )0 ,1 0vT = . ........................................................................................ 92 
Figura 8.29. Problema de Schiffman – malha inicial (azul) e deformada (vermelho) para a 
situação1 ( )0 ,1 0vT = . ................................................................................................................ 94 
Figura 8.30. Problema de Schiffman – malha inicial (azul) e deformada (vermelho) para a 
situação2  ( )0 ,1 0vT = . ............................................................................................................... 94 
Figura 8.31. Problema de Schiffman – detalhe da malha inicial (azul) e deformada (vermelho) 
para a situação1  ( )0 ,1 0vT = . .................................................................................................... 95 
Figura 8.32. Problema de Schiffman – detalhes da malha inicial (azul) e da malha deformada 
(vermelho) para a situação2  ( )0 ,1 0vT = . ................................................................................. 95 
Figura 8.33. Problema de Schiffman - Campo de pressões, (a) Situação1, (b) Situação2. ...... 96 
Figura 8.34. Problema de Schiffman - Campo de tensões normais na direção x, (a) Situação1, 
(b) Situação2. ............................................................................................................................ 97 
Figura 8.35. Problema de Schiffman - Campo de tensões cisalhantes, (a) Malha1, (b) Malha2.
 .................................................................................................................................................. 98 
Figura 8.36. Problema de Schiffman - Campo de tensões normais na direção y, (a) Situação1, 
(b) Situação2. ............................................................................................................................ 99 



 

 

Figura 8.37. Problema Heterogêneo e Anisotrópico – Geometria, contornos e domínios. .... 103 
Figura 8.38. Problema Heterogêneo e Anisotrópico – Malha computacional........................ 103 
Figura 8.39. Problema Heterogêneo e Anisotrópico – solução analítica e soluções numéricas 
das pressões de fluido ao longo de  0x =  para 1r =  ( )0 ,1 0vT = . .......................................... 104 
Figura 8.40. Problema Heterogêneo e Anisotrópico – solução analítica e soluções numéricas 
das pressões de fluido ao longo de  0x =  para 5r =  ( )0 ,1 0vT = . ........................................... 105 
Figura 8.41. Problema Heterogêneo e Anisotrópico – solução analítica e soluções numéricas 
das pressões de fluido ao longo de  0x =  para 50r =  ( )0 ,1 0vT = . ......................................... 106 
Figura 8.42. Problema Heterogêneo e Anisotrópico – detalhes da malha inicial (azul) e da 
malha deformada (vermelho) para 1r = ( )0 ,1 0vT =  . ............................................................. 106 
Figura 8.43. Problema Heterogêneo e Anisotrópico – detalhes da malha inicial (azul) e da 
malha deformada (vermelho) para  5r = ( )0 ,1 0vT = . ............................................................. 107 
Figura 8.44. Problema Heterogêneo e Anisotrópico – detalhes da malha inicial (azul) e da 
malha deformada (vermelho) para 5r = ( )0 ,1 0vT = . .............................................................. 107 
Figura 8.45. Adensamento bidimensional heterogêneo e anisotrópico - Campo de pressões, (a) 
r=1, (b) r=5, (c), r=50. ............................................................................................................ 108 
Figura 8.46. Adensamento bidimensional heterogêneo e anisotrópico - Campo de tensões 
normais na direção x, (a) r=1, (b) r=5, (c), r=50. ................................................................... 109 
Figura 8.47. Adensamento bidimensional heterogêneo e anisotrópico - Campo de tensões 
cisalhantes, (a) r=1, (b) r=5, (c), r=50. ................................................................................... 110 
Figura 8.48. Adensamento bidimensional heterogêneo e anisotrópico - Campo de tensões 
normais na direção y, (a) r=1, (b) r=5, (c), r=50. ................................................................... 111 

 

 

 

 

 

 

 

 

 

 

 

 

 



 

 

SUMÁRIO 
 

1    INTRODUÇÃO...............................................................................................................13 

2    REVISÃO DA LITERATURA......................................................................................16 

3    OBJETIVO DO TRABALHO.......................................................................................25 

4    TEORIA DE BIOT.........................................................................................................26 

4.1 EQUAÇÃO DE EQUILÍBRIO MECÂNICO..................................................................26 

4.2 ESTADO PLANO DE DEFORMAÇÕES.......................................................................31 

4.3 EQUAÇÃO DE BALANÇO DE MASSA DE FLUIDO.................................................35 

4.4 LEI DE DARCY...............................................................................................................37 

4.5 PRINCÍPIO DAS TENSÕES EFETIVAS.......................................................................38 

4.6 SISTEMA DE EQUAÇÕES DA TEORIA GERAL DO ADENSAMENTO DE  

BIOT................................................................................................................................39 

5    FORMULAÇÃO DO MÉTODO DOS ELEMENTOS FINITOS APLICADA À  

 TEORIA DE BIOT........................................................................................................41 

6    FORMULAÇÃO DO MÉTODO DAS DIFERENÇAS FINITAS PARA A  

 DISCRETIZAÇÃO TEMPORAL DA TEORIA DE BIOT......................................52 

7    ASPECTOS COMPUTACIONAIS..............................................................................53 

8    ANÁLISES REALIZADAS...........................................................................................61 

8.1 ADENSAMENTO UNIDIMENSIONAL DE MEIO HOMOGÊNEO E  

ISOTRÓPICO – PROBLEMA DE TERZAGHI.............................................................62 

8.2 ADENSAMENTO UNIDIMENSIONAL DE MEIO HETEROGÊNEO E  

ISOTRÓPICO –  PROBLEMA DE TERZAGHI MODIFICADO.................................69 

8.3 ADENSAMENTO BIDIMENSIONAL DE MEIO HOMOGÊNEO E  

ISOTRÓPICO – PROBLEMA DE MANDEL...............................................................77 

8.4 ADENSAMENTO BIDIMENSIONAL DE MEIO HOMOGÊNEO E  

ISOTRÓPICO – PROBLEMA DE SCHIFFMAN..........................................................87 

8.5 ADENSAMENTO BIDIMENSIONAL DE MEIO HETEROGÊNEO E  

ANISOTRÓPICO..........................................................................................................100 

9    CONCLUSÕES.............................................................................................................113 



 

 

10  SUJESTÕES PARA TRABALHOS FUTUROS.......................................................114 

      REFERÊNCIAS............................................................................................................115 

      APÊNDICE A................................................................................................................121 

      APÊNDICE B................................................................................................................209 

      SOLUÇÃO ANALÍTICA PARA O PROBLEMA DE TERZAGHI.............................209 

      SOLUÇÃO ANALÍTICA PARA O PROBLEMA DE TERZAGHI MODIFICADO.212 

      SOLUÇÃO ANALÍTICA PARA O PROBLEMA DE MANDEL................................220 

 

 



13 

 

1  INTRODUÇÃO 
 

Os problemas poromecânicos são encontrados com frequência em aplicações da Enge-

nharia e ciências. Usualmente constituem casos com complexidade considerável, envolvendo 

conhecimentos multidisciplinares para serem entendidos e resolvidos. Esses ocorrem quando 

há, em determinado fenômeno, a interação entre um meio sólido poroso onde seus poros são 

preenchidos, total ou parcialmente, por um ou mais fluidos, onde as deformações ocorridas no 

esqueleto sólido podem gerar modificação na distribuição de pressões no fluido e, da mesma 

forma, alterações nas pressões no fluido podem gerar modificação no estado de tensões no 

meio sólido. A Figura 1.1 apresenta uma imagem de um meio poroso numa escala milimétri-

ca, onde é possível a verificação da ocorrência dos poros em um meio e o preenchimento dos 

seus vazios por um fluido. É válido salientar que nas aplicações usuais as dimensões dos po-

ros ocorrem em escalas microscópicas e a consideração da porosidade, nas formulações físi-

cas que regem esses problemas, são associadas ao meio contínuo, onde as variáveis do pro-

blema são avaliadas de forma contínua ao longo do domínio. Sendo assim, a poromecânica é, 

em termos gerais, o estudo do comportamento mecânico do meio poroso, que pode ser subme-

tido a diversos processos sujeitos a diversas condições (COUSSY, 2004). Um exemplo 

desse processo pode ser a consideração de carregamentos gerados por condições térmicas 

impostas ao meio poroso, outros exemplos podem ser os processos químicos e até mesmo 

biológicos. Esses carregamentos podem gerar, por exemplo, acelerações inerciais no meio, 

devido à periodicidade do carregamento ou a ocorrência de um impacto, sendo necessária a 

avaliação da resposta dinâmica do meio a tal carregamento.  

Outros exemplos são as considerações das relações constitutivas que regem o compor-

tamento tanto do fluido quando do esqueleto sólido, que determinam classes de problemas 

específicos, como a consideração de meios plásticos, elásticos ou viscopláticos, fluído newto-

niano ou não-newtoniano (CARMO; MARQUES; THOMPSON, 2010). Outra classe de pro-

blemas que podem se manifestar em um meio poroso é a ocorrência de um ou mais fluidos ou 

até mesmo a presença de gás. Portanto, várias são as vertentes da poromecânica e esta é obje-

to de interesse de diversos centros de pesquisas, instituições de desenvolvimento e indústria.  

 

 



14 

 

Figura 1.1. Meio poroso, esquema de rocha reservatório. 

 

Fonte: http://www.pucrs.br/cepac/download/Eng_Reservatorio_CCS.pdf 

 

A poromecânica rege situações em áreas como a Medicina e Odontologia (LÓPEZ, 

2012), onde as aplicações são as mais variadas possíveis, como a avaliação do comportamento 

de uma massa cancerígena, a avaliação das tensões provocadas pela mecânica do movimento 

em ossos e articulações e até mesmo o comportamento mecânico dos dentes na mastigação. A 

Geomecânica, ciência interessada no comportamento mecânico das rochas e solos, compreen-

de uma área de grande aplicação da poromecânica. Exemplos de problemas geomecânicos 

podem ser encontrados na Mecânica dos Solos, na Engenharia Civil; Mecânica das Rochas, na 

Engenharia de Minas; Hidrogeologia, na Geologia; Engenharia de Reservatórios de Petróleo, 

na Engenharia de Petróleo e outras áreas que compreendem fenômenos que ocorrerem em 

meios porosos.  

Assim como diversas outras áreas do conhecimento, a poromecânica é regida por um 

conjunto de equações diferenciais. A solução dessas equações diferenciais é objeto de diver-

sos trabalhos de pesquisadores, apresentados ao longo do texto, que se dedicaram tanto às 

soluções analíticas, em casos menos complexos e representativos, quanto ao desenvolvimento 

de ferramentas de cálculos automáticos utilizados para problemas casos complexos (TERZA-

GHI, 1943). Em geral, as soluções analíticas podem ser utilizadas em situações particulares 

que se adequam à suas geometrias, condições de contorno e parâmetros físicos, ou para que se 

estabeleça uma aproximação quando se quer, por exemplo, uma estimativa de determinado 

parâmetro. Isso pode ser visto, por exemplo, quando há a aplicação de carga de uma sapata 

em um solo totalmente homogêneo e saturado, condição onde a solução analítica se adequa 

totalmente ao caso real (SCHIFFMAN; CHEN; JORDAN, 1969). Porém, quando se tem um 



15 

 

cenário associado à geomecânica de formações geológicas como aqüíferos e reservatórios de 

petróleo que apresentam geralmente uma geometria irregular, os parâmetros físicos são, em 

geral, anisotrópicos e as formações heterogêneas. Essas características tornam o desenvolvi-

mento das soluções analíticas de tais problemas demasiadamente tediosas ou até não solucio-

náveis.  

Com o desenvolvimento de técnicas numéricas, em paralelo ao desenvolvimento da 

computação, em especial a partir da segunda metade do século XX, a solução das equações 

diferenciais utilizando formulações numéricas se tornou bastante atrativa. Sendo assim, atu-

almente, a simulação numérica se tornou a forma mais natural de solução das equações que 

regem determinadas áreas do conhecimento. Essas técnicas, juntamente com a disponibilidade 

de várias ferramentas disponíveis para o tratamento de dados, visualização de resultados e o 

desenvolvimento de linguagens computacionais específicas para problemas técnicos-

científicos, proporcionam ao cientista e engenheiro da atualidade a oportunidade de desenvol-

vimento de seus próprios simuladores numéricos. 

Sendo assim, esse trabalho consiste no desenvolvimento de um simulador poromecâ-

nico, para as condições de um meio sujeito ao regime de escoamento linear, pequenas defor-

mações, ocorrendo sob o Estado Plano de Deformações com escoamento laminar e todo o 

processo ocorrendo de forma isotérmica. Para a solução das equações foram utilizados o Mé-

todo dos Elementos Finitos (MEF) e Método das Diferenças Finitas (MDF), para a discretiza-

ção espacial e temporal, respectivamente. A formulação do MEF utilizada é uma formulação 

mista com elementos triangulares quadráticos para as variáveis mecânicas e lineares para as 

variáveis hidráulicas.  

  



16 

 

2 REVISÃO DA LITERATURA 
 

A Teoria da Poroelasticidade, que pode surgir com outras denominações, como a Teo-

ria do Adensamento ou Consolidação, em trabalhos desenvolvidos nas áreas da Engenharia, 

por exemplo, tem seu desenvolvimento contínuo e progressivo em termos de teorias e formu-

lações que, cada vez mais, tendem a levar em considerações as condições reais do meio em 

estudo. O primeiro grande trabalho que se tem reconhecimento por parte da comunidade cien-

tífica relacionado à poroelasticidade foi desenvolvido por Terzagui no ano de 1923 (TERZA-

GHI, 1943). Esse trabalho apresenta a solução de um problema poroelástico unidimensional, 

homogêneo e isotrópico onde se admite a linearidade entre as tensões efetivas e deformações 

do meio, que tem comportamento elástico. Também é admitido que as tensões totais perma-

necem constantes ao longo do desenvolvimento do adensamento. Porém, apesar das simplifi-

cações adotadas por Terzagui e a consideração de condições que, em muitas das situações não 

se aplicam à realidade de determinada situação, essa teoria é, talvez, a mais difundida nas 

escolas de graduação em Engenharia e certamente utilizada de forma considerável nos escritó-

rios de projetos geotécnicos e de fundações. Aplicações como recalques de estruturas ou de 

aterros assentados sobre argilas são exemplos práticos onde pode se aplicar essa teoria para 

ser usada no âmbito da prática da Engenharia.  

Na Poroelasticidade, assim como em outras áreas do conhecimento, a busca por Teori-

as mais gerais é uma tendência natural e, sendo assim, o próprio Terzagui se dedicou ao de-

senvolvimento de uma teoria mais generalista, considerando o adensamento se desenvolvendo 

ao longo das três direções, chegando a publicar esse trabalho que pode ser visto em Terzaghi e 

Frohlich (1936)  e Terzaghi (1943). Porém, essa teoria, desenvolvida por Terzaghi, possui 

uma consideração que se alastra desde a Teoria do adensamento unidimensional, nela é levada 

em consideração a constância nas tensões totais ao longo do adensamento, fato que não con-

diz com a realidade. Uma das verificações que pode ser feita é o fato de que no adensamento 

pode haver a ocorrência de valores das pressões de fluido maiores que os iniciais. Esse au-

mento nas pressões de fluido pode ser dado tanto devido à redistribuição dessas pressões ao 

longo do domínio como pela variação nas tensões totais em determinadas regiões. Rendulic 

(1936)  também apresenta uma formulação para processos poroelásticos mais abrangente que 

a desenvolvida por Terzaghi, apesar de não ser considerada ainda uma formulação acoplada. 



17 

 

O aumento nas pressões de fluidos discutido anteriormente, quando ocorrido devido à 

variação nas tensões totais, foram formulados teoricamente nos trabalhos de Mandel (1953) e 

de Cryer (1963), e recebe o nome de Efeito Mandel-Cryer em suas homenagens. Outro aspec-

to importante apresentado no trabalho de Terzaghi (1923) é o Princípio das Tensões Efetivas 

de Terzagui, que propõe uma relação entre as tensões mecânicas do meio e a pressão de flui-

do. Tal princípio foi fundamental para o desenvolvimento das formulações poroelásticas.  

Em 1941, Maurice A. Biot,apresentado na Figura 2.1, desenvolveu, em seu trabalho a 

Teoria do Adensamento Tridimensional (BIOT, 1941), ou como expressão no próprio título 

do seu trabalho, que pode ser visto na Figura 2.2, a Teoria Geral da Consolidação Tridimensi-

onal, também conhecida como Teoria de Biot. Essa teoria, apesar da denominação de “Teoria 

Geral”, possui condições específicas para ser aplicadas. Então, quando se trata do termo “Ge-

ral”, este é associado ao desenvolvimento do adensamento ao longo das três direções coorde-

nadas e não geral no sentido estrito da palavra. Porém, pelo fato de seu trabalho ser o primeiro 

a descrever corretamente o desenvolvimento tridimensional do adensamento, tal denominação 

é amplamente aceita pela comunidade científica.    

 

Figura 2.1. Professor Maurice Anthony Biot. 

 

 

Fonte: https://shellbuckling.com/cv/biot.pdf 

Na Teoria de Biot (BIOT, 1941), há considerações acerca dos seguintnes aspectos: do 

material, que é homogêneo e isotrópico; há a reversibilidade na relação tensão-deformação, 

que é considerada linear; não há ocorrência de grandes deformações; as partículas que com-



18 

 

põem o esqueleto sólido são indeformáveis; o líquido é incompressível e seu fluxo é regido 

pela Lei de Darcy e obedece ao Princípio das Tensões efetivas. A Lei de Darcy consiste em 

uma teoria, fruto do trabalho de Henry Phlilibert Gaspar Darcy no ano de 1856, que rege o 

comportamento de um fluido escoando, de forma laminar em um meio poroso. Tal lei estabe-

lece a relação entre o gradiente de pressões de fluido e a permeabilidade do meio com a velo-

cidade do escoamento.  

 

Figura 2.2.General Theory of Three-Dimensional Consolidation, artigo de Biot.  

 

Fonte: Elaborada pelo autor. 

 

O própio Biot, ao longo de uma sequência de publicações e trabalhos desenvolvidos 

tornou a sua teoria inicial mais generalista. Em seu trabalho (BIOT, 1941), o mesmo introduz 

a possibilidade da ocorrência de um fluido compressível em sua teoria inicial, no seu trabalho 

(BIOT, 1955), Biot introduz a anisotropia em termos de permeabilidade. No trabalho (BIOT, 

1956) Biot introduz à teoria anisotrópica a possibilidade de uma relação constitutiva viscoe-

lástica em termos mecânicos. Biot e Willis (1957) apresentam os coeficientes elásticos utili-

zados na sua teoria e em seu trabalho (BIOT, 1973)  introduz os conceitos da reologia à sua 

Teoria. A partir do desenvolvimento da Teoria Tridimensional do Adensamento, vários pes-

quisadores concentraram seus trabalhos no desenvolvimento de maneiras para solucionar as 

equações que a regem. 



19 

 

Biot, além de produzir trabalhos relacionados à poroelasticidade, também foi respon-

sável por contribuições em áreas como aerodinâmica, termodinâmica irreversível e transfe-

rência de calor, viscoelasticidade e também a termoelasticidade. A poroelasticidade e termoe-

lasticidade são, assim como vários outros fenômenos naturais, regidos por um conjunto de 

equações diferenciais análogos. Em sua trajetória, Biot trabalhou em diversas agências gover-

namentais e universidades como a Universidade de Columbia, Harvard, Lovaina e Brown. 

Biot recebeu o grau de bacharel em filosofia, se formou em engenharia e minas e elétrica, e 

doutorado em ciências, na Universidade de Lovaina. Em 1932 terminou seu Ph.D em ciências 

aeronáuticas no Instituto de Tecnologia da Califórnia.  

Além do trabalho desenvolvido por Terzaghi (1923) para o adensamento unidimensio-

nal, Mandel (1953) apresenta uma solução analítica para uma situação de adensamento bidi-

mensional que consiste em um meio poroso retangular, sujeito a um carregamento em seu 

topo e base, que se mantém impermeáveis e com suas laterais com capacidade drenante e com 

carregamento nulo, esse problema é frequentemente denominado na literatura como “Proble-

ma de Mandel”. Cryer (1963) desenvolve uma solução analítica para o adensamento de um 

meio poroso esférico submetido à um carregamento constante em seus contornos que perma-

necem, ao longo do adensamento, com pressões nulas. Essas soluções analíticas clássicas são 

bastante utilizadas para a validação de alternativas desenvolvidas para a solução de problemas 

poroelásticos. 

Algumas soluções analíticas para as equações de Biot considerando variações no a-

densamento de uma camada de solo submetida a um carregamento específico são apresenta-

das nos trabalhos: (GIBSON; MCNAMEE, 1960.a), (GIBSON; MCNAMEE, 1960.b) e 

(GIBSON; MCNAMEE, 1957) onde em cada um desses trabalhos um parâmetro do problema 

é modificado, seja ele físico, geométrico ou associado às condições de contorno. Outros estu-

dos com soluções analíticas para esse problema são apresentados em (BOOKER, 1973), 

(SINGH; RANI; KUMAR, 2013) e (AMIRI; HAJALI; ESMAEILY, 2014). Outra solução 

analítica desenvolvida em um problema axissimétrico de adensamento é apresentado por 

Wang e Fang (2003).  

Os avanços tecnológicos, em particular na segunda metade do século XX, no ramo da 

computação científica, permitiram aos engenheiros e cientistas o desenvolvimento e aplicação 

de procedimentos numéricos de forma automática e eficiente, tendo em vista que os cálculos 

tediosos e repetitivos realizados pelos antigos analistas numéricos envolviam esforços manu-



20 

 

ais consideráveis, principalmente associados ao cálculo matricial. É válido salientar que intro-

dução dos computadores modernos na ciência não deu início ao investimento dos cientistas no 

desenvolvimento de ferramentas numéricas, alguns relatos apontam que há mais de 2.000 

anos já se utilizavam procedimentos de interpolação lineares. Mais recentemente, cientistas 

como Newton, Gauss, Euler e Lagrange já desenvolviam técnicas numéricas que eram utiliza-

das sem o advento dos computadores modernos (LOTTI et al., 2006). Porém, certamente o 

acesso à computação na formatação atual atraiu uma quantidade significativa de desenvolve-

dores e usuários de ferramentas numéricas. 

No que se trata de métodos numéricos para a solução de equações diferenciais temos 

como um dos principais o Método das Diferenças Finitas (MDF). Esse método é bastante uti-

lizado e talvez um dos mais antigos em uso. Para se obter a forma discreta da equação dife-

rencial pelo MDF é necessária a substituição do operador diferencial por um operador discreto 

obtido através de manipulações numéricas na série de Taylor. Apesar de haverem, na literatu-

ra corrente, formulações mais generalistas desse método que resolvam essas questões, em sua 

essência esse método é utilizado em situações onde a geometria e a malha do problema sejam 

regulares (PENA, 2003). Além disso, a imposição da condição de contorno, em particular de 

Neumann, envolve certos inconvenientes para se implementar de forma geral. É fato que as 

características apresentadas pelo MDF podem ser observadas principalmente quando há a 

discretização em termos das coordenadas espaciais, porém esse método é amplamente utiliza-

do quando se trata da discretização da equação em termos da variável temporal da equação 

avaliada. 

O desenvolvimento da matemática, computação e a necessidade de desenvolvimento 

de ferramentas mais potentes para a solução de equações diferenciais deram origem ao surgi-

mento de novos métodos numéricos. No final do século XVIII Gauss propôs a utilização de 

funções de aproximação para a solução de problemas matemáticos (LOTTI et al., 2006), onde 

a aproximação era estabelecida em todo o domínio e necessitava, em muitos casos, o uso do 

bom senso do analista. No século XIX trabalhos de cientistas como Bernoulli, Lagrange e 

Stevin formataram uma série de trabalhos que deram origem à utilização de métodos energéti-

cos na solução de problemas de engenharia. Courant (1943) introduziu o conceito de Gauss 

em elementos do domínio, que é discretizado, e aplica a condição de continuidade entre os 

trechos. Esses desenvolvimentos, juntamente com a combinação dos conceitos do cálculo 

variacional e de trabalhos como o de Ritz (FARENZENA; HAUSER, 2009) serviram como 

base para que na década de 1960  em seu trabalho, apresentasse o Método dos Elementos Fi-



21 

 

nitos (MEF) como é conhecido atualmente (CLOUGH, 1960). Esse trabalho foi desenvolvido 

com a influência e necessidade da indústria aeronáutica e aeroespacial que se desenvolvia no 

período pós-guerra. 

O  MEF, em comparação com o MDF, possui um embasamento matemático mais ro-

busto, que precisa ser entendido pelos usuários do método. Segundo  Campos e Silva (2006) o 

MEF possui três características que o definem sendo a primeira delas a consideração de um 

campo contínuo, subdividido em células, que são denominados elementos e que constituem 

uma malha. A segunda característica importante é que a solução, a priori, possui uma forma 

que será regida pelas funções interpoladoras, ou também chamadas de funções de forma, do 

elemento. A terceira característica do MEF é a forma integral da solução, de forma que a for-

mulação do problema é obtida a partir da aplicação do Método dos Resíduos Ponderados. Em 

geral o MEF não possui imposições restritivas em função da geometria do modelo, porém as 

formas como os elementos da malha computacional se apresentam pode afetar significativa-

mente a solução. Uma área de grandes aplicações do MEF é a mecânica dos materiais, seja na 

Engenharia Estrutural, Engenharia Geotécnica ou Geomecânica, por exemplo, devido às suas 

considerações matemáticas e físicas, que o tornam um método natural pra esse tipo de aplica-

ção.  

Outros dois métodos bastante utilizados para a solução de equações diferenciais são o 

Método dos Volumes Finitos (MVF) e o Método dos Elementos de Contorno (MEC). O MVF 

tem normalmente aplicação onde precisam ser respeitadas rigorosamente as leis de conserva-

ção, como transferência de calor e de massa. O MEC possui uma vantagem, considerando a 

maioria das suas formulações, em relação aos outros métodos em domínios infinitos ou semi-

infinitos.  

Na literatura são encontradas aplicações dos os métodos citados na poroelásticidade. 

Brown (2002), em sua tese de doutoramento, apresenta uma formulação do MEC aplicado à 

poroelasticidade. Ribeiro (2016) emprega uma formulação do MVF denominada de Método 

dos Volumes Finitos Baseada em Elementos, assim como Pizzol (2014). Os trabalhos: (FER-

REIRA, 2010), (SLOAN; ABBO, 1999.a), (SLOAN; ABBO, 1999.b) , (JIA-DONG et al., 

1982), (ZHANG; ZARROUK; ARCHER, 2015), (PHILLIPS, 2005) e (SIQUEIRA, 1995) 

apresentam formulações do MEF para a solução de problemas poroeslásticos a partir de de-

senvolvimentos de códigos computacionais. Esses trabalhos apresentam o MEF para a discre-



22 

 

tização das equações em termos das variáveis espaciais, a discretização em termos da variável 

temporal é feita, em todos os casos, utilizando o MDF.  

Alguns trabalhos, e até mesmo simuladores comerciais são desenvolvidos utilizando 

métodos específicos para a parte mecânica e hidráulica. Em geral é utilizado o MEF para a 

solução da parte mecânica e o MVF ou o MDF para a solução do problema hidráulico. Outro 

aspecto onde é apresentado investimento significativo em pesquisas é o tipo de acoplamento 

que será considerado para determinada aplicação. Em geral os métodos de acoplamento são 

divididos em quatro classes: pseudo-acoplamento, acoplamento explícito, acoplamento itera-

tivo e totalmente acoplado. Cada um deles apresenta vantagens em termos de considerações 

sobre simplificações adotadas e avaliação dos custos computacionais envolvidos. 

As formulações mistas do MEF surgem como uma alternativa para a solução de pro-

blemas onde ocorre o “travamento” volumétrico, denominado locking, que numericamente 

ocorre quando os resultados obtidos pela formulação aproximada apresentam valores de des-

locamentos menores que os reais. Esses resultados são inerentes às formulações tradicionais 

do MEF, gerando resultados inconsistentes em situações de corpos incompressíveis ou quase 

incompressíveis (SANTOS, 2011). Diversas formulações mistas são apresentadas na literatura 

com aproximações combinadas de diversos campos do problema como as variáveis primais e 

secundárias, como exemplo temos as formulaçõa deslocamento/velocidade – tensão. Nesse 

trabalho a formulação mista apresentada será em termos de velocidade – pressão.  

Em relação aos tipos de acoplamento, o pseudo-acoplamento não considera a resolu-

ção do modelo geomecânico durante a simulação. Os parâmetros hidráulicos e mecânicos são 

correlacionados a partir de leis específicas. Tais leis podem ser obtidas a partir de considera-

ções físicas ou até mesmo de forma empírica. No acoplamento explícito a mecânica e hidráu-

lica são resolvidas separadamente, para cada passo de tempo, onde as informações hidráulicas 

são passadas para o simulador mecânico que os considera. A partir da deformação volumétri-

ca ocorre a atualização da porosidade e consequentemente da permeabilidade que alimenta o 

simulador de fluxo. No acoplamento iterativo as informações hidráulicas e mecânicas se rela-

cionam no mesmo passo de tempo até a observância de um determinado critério, como crité-

rios de convergência de métodos não-lineares, por exemplo. No modelo totalmente acoplado a 

mecânica e hidráulica são resolvidas simultaneamente a partir de um sistema de equações 

acoplado, considerando as duas físicas, para cada passo de tempo. A escolha do tipo de aco-



23 

 

plamento contempla as características de cada método levando em conta o grau de dependên-

cia das duas físicas (PIZZOL, 2014).  

Pizzol (2014) e Ribeiro (2016) utilizam em seus trabalhos um esquema iterativo de 

acoplamento geomecânico. No trabalho de Ferreira (2010) é apresentado um estudo sobre um 

método com acoplamento total e acoplamento iterativo. Sloan e Abbo (1999.a), Sloan e Abbo 

(1999.b ) e Siqueira (1995) utilizam, em seus tranalhos, formulações totalmente acoplada. 

No mercado atual há a disponibilidade de vários simuladores poroelásticos. Grande 

parte dessas ferramentas são utilizadas para o contexto de geomecânica de reservatórios de 

petróleo de petróleo como o STARS® (COMPUTER MODELLING GROUP LTD, 2013), o 

GEM® (COMPUTER MODELLING GROUP LTD, 2013) e o ECLIPSE® (SCHLUMBER-

GER, 2007). Além disso, vários grupos de pesquisa desenvolvem seus próprios códigos, onde 

normalmente são incorporadas várias formulações e técnicas de soluções de problemas poro-

mecânicos, como é exemplo o CODE_BRIGHT, desenvolvido na Universidade Politécnica da 

Catalunha e utilizado e aperfeiçoado pelo grupo de Geomecânica do LMCG da Universidade 

Federal de Pernambuco (PASTALLE, 1995).  

Desde o surgimento da computação os seus desenvolvedores fornecem à comunidade 

científica várias de linguagens computacionais para a elaboração de códigos e softwares. No 

cenário atual há uma disponibilidade de um grande acervo dessas linguagens que, cada vez 

mais, fornecem ao desenvolvedor maneiras de otimizar a utilização da máquina e até facilitar 

a implementação com ferramentas direcionadas para situações específicas. É notório que nem 

sempre a elaboração de um código com uma linguagem mais moderna trará um resultado 

mais satisfatório para determinada situação, por isso tais linguagens precisam ser escolhidas 

levando em consideração o conhecimento e bom senso em relação ao que se pretende desen-

volver.   

Nesse contexto, linguagens como FORTRAN (FERRER et al., 1992), C (THE MATH 

INC, 1992), C++ (ECKEL, 1991), Phyton® (BORGES, 2010) e MATLAB® : (THE MATH 

INC, 1992) são exemplos dessas linguagens. A programação em ambiente MATLAB®, por 

exemplo, em comparação com o FORTRAN, permite ao programador da área numérica uma 

economia em termos de linhas de código, pois essa linguagem apresenta uma biblioteca de 

funções específicas para o tratamento de matrizes. Em contrapartida o FORTRAN, em geral, 

permite ao programador a possibilidade de desenvolver códigos compilados com uma eficiên-



24 

 

cia computacional consideravelmente melhor, porém a construção do código envolve um nú-

mero maior de procedimentos por se uma linguagem de baixo nível. 

O pré-processamento da simulação, que consiste na construção do modelo computa-

cional e a geração da malha, e o pós-processamento, que consiste na interpretação e análise 

dos resultados, são operações que exigem do usuário, em geral, a utilização de outras ferra-

mentas que se comunicam com o código desenvolvido. Há situações em que essas operações 

estão incorporadas ao próprio código desenvolvido ou até mesmo faz parte do mesmo pro-

grama, como é o caso da maioria dos softwares comerciais disponíveis no mercado. Alguns 

exemplos de software de pré-processamento são o GiD (CMNE, 2016), Gmsh (GEUZAINE; 

REMACLE, 2017) e o Gocad (BERLIOUX, 2001). O próprio GiD também possui o módulo 

de pós processamento e visualização, assim como o Visit (LLNL, 2005) e o Surfer (LANDIM; 

MONTEIRO; CORSI, 2002). 

  



25 

 

3 OBJETIVO DO TRABALHO 
 

O principal objetivo do presente trabalho é a construção de um programa numérico pa-

ra a solução numérica de problemas poroelásticos, com emprego de malhas não estruturadas, 

envolvendo anisotropia de tensor de permeabilidade e de tensões. Tal programa será desen-

volvido em ambiente MATLAB integrando o pré-processador Gmsh. 

Com isso, os objetivos específicos são: 

• Validar o código desenvolvido comparando soluções numéricas com soluções 

analíticas de problemas consolidados na literatura; 

• Verificar a convergência do erro associado à solução numérica quanto diferentes 

tipos de malhas utilizadas; 

• Comparar a solução numérica com programas comerciais envolvendo problemas 

anisotrópicos e heterogêneos; 

• Desenvolver um programa em Elementos Finitos Mistos; 

• Avaliar a solução numérica com relação ao comportamento físico, resolvendo 

problemas em que o comportamento transiente das variáveis são distintos, como 

a utilização de materiais com propriedades heterogêneas. 

 

  



26 

 

4 TEORIA DE BIOT 
 

Nesse capítulo serão introduzidos os conceitos utilizados por Biot para a formulação 

da sua teoria. 

 

4.1 EQUAÇÃO DE EQUILÍBRIO MECÂNICO 

 

A equação de equilíbrio mecânico é utilizada, juntamente com a relação constitutiva 

do material em questão, para a determinação do comportamento mecânico do meio. Para a 

apresentação da equação de equilíbrio é necessária a introdução do conceito de esforços inter-

nos. Para isso, é necessário que se considere um corpo, submetido a condições de carregamen-

tos e deslocamentos, como apresentado na Figura 4.1, em equilíbrio.  

 

Figura 4.1. Corpo submetido a carregamentos externos. 

 

Fonte: Elaborada pelo autor. 

 

Os esforços internos podem ser compreendidos como as forças reativas que aparecem, 

em determinado ponto, quando este serve de apoio para a parte da estrutura adjacente. Sendo 



 

assim, usualmente se considera um plano, que divide o corpo em duas partes e um p

tuado nesse plano, onde serão avaliados os esforços externos. Na 

rado é o plano ?  e o ponto 

são transmitidas a esse ponto pela parte não considerada do corpo.

 

A partir de um detalhe na área

cer um sistema de eixos coordenados a partir do ponto 

onde o eixo 'x  é normal ao plano 

4.3.   

As forças 'xF? , F??

dessas definições, as tensões correspondentes às tais forças no ponto 

te maneira. 

assim, usualmente se considera um plano, que divide o corpo em duas partes e um p

onde serão avaliados os esforços externos. Na Figura 4.2

o ponto P . A força F é a força equilibrante, correspondente às 

são transmitidas a esse ponto pela parte não considerada do corpo. 

Figura 4.2. Seção no corpo. 

Fonte: Elaborada pelo autor. 

 

A partir de um detalhe na área A? , que pode ser vista na Figura 

cer um sistema de eixos coordenados a partir do ponto P , sendo esses os eixos 

é normal ao plano ?  e os eixos 'y  e 'z  paralelos, como apresentado na

, 'yF?  e , 'zF??  são as componentes da força equilibradora 

dessas definições, as tensões correspondentes às tais forças no ponto P  

27 

assim, usualmente se considera um plano, que divide o corpo em duas partes e um ponto, si-

Figura 4.2 o plano conside-

é a força equilibrante, correspondente às ações que 

 

Figura 4.3. Pode-se estabele-

sendo esses os eixos 'x , 'y  e 'z , 

lelos, como apresentado na Figura 

são as componentes da força equilibradora F . A partir 

P  são obtidas da seguin-



 

'
'

0

, '
'

0

, '
'

0

lim

lim

lim

x
x

A

y
y

A

z
z

A

F

A

F

A

F

A

?
?

?
?

?

?

?

? ?

? ?

? ?

?
=

?
?

=
?

?
=

?

 

 

onde  'x? , , 'y?? e , 'z?? são, respectivamente, a tensão normal, a tensão cisalhante na direção 

a tensão cisalhante na direção 

Para que se obtenha o estado de tensões no ponto 

tensões normais e cisalhantes em relação aos eixos globais, que são dados por 

tensões são apresentadas na

e ,i j?  é a tensão cisalhante na direção do plano 

do os valores de x , y e z . 

Para que seja obtida a equação de equilíbrio mecânico é necessária a aplicação das 

condições de equilíbrio para o elemento diferencial apresentado na 

Figura 4.3. Detalhe do ponto P. 

 

Fonte: Elaborada pelo autor. 

 

são, respectivamente, a tensão normal, a tensão cisalhante na direção 

a tensão cisalhante na direção z  em relação ao plano ? . 

Para que se obtenha o estado de tensões no ponto P  é necessário que se definam as 

tensões normais e cisalhantes em relação aos eixos globais, que são dados por 

tensões são apresentadas na Figura 4.4 e são definidas como i?  é a tensão normal ao plano 

é a tensão cisalhante na direção do plano i  e no sentido do eixo j

 

Para que seja obtida a equação de equilíbrio mecânico é necessária a aplicação das 

condições de equilíbrio para o elemento diferencial apresentado na Figura 4.4

28 

 

 

           (4.1) 

 

são, respectivamente, a tensão normal, a tensão cisalhante na direção y e 

é necessário que se definam as 

tensões normais e cisalhantes em relação aos eixos globais, que são dados por x , y e z . Essas 

é a tensão normal ao plano i  

j , com i  e j  assumin-

Para que seja obtida a equação de equilíbrio mecânico é necessária a aplicação das 

Figura 4.4, então. 



 

0 0

0 0

0 0

x x

y y

z z

F M

F M

F M

= =
= =
= =

? ?
? ?
? ?

 

Figura 

 

 

onde iF  representa as forças na direção 

0 0

0 0

0 0

= =
= =
= =

 

Figura 4.4. Tensões em um elemento infinitesimal. 

Fonte: Elaborada pelo autor. 

representa as forças na direção i  e iM  os momentos na direção 

29 

 

         (4.2) 

 

 

os momentos na direção i . 



30 

 

Escrevendo a equação de equilíbrio de força na direção x  e definindo xb , yb  e zb  co-

mo sendo as forças de corpo respectivas às direções x , y e z , tem-se 

,
, ,

, ,
, , , 0

y xx
x x x y x y x

z x z x
z x z x z x x

F dx dydz dydz dy dxdz dxdz
x y

dz dxdy dz dxdy dxdy b dxdydz
z z

??
? ? ? ?

? ?
? ? ?

?? ??? ?= + ? + + ?? ?? ?? ?? ? ? ?
? ?? ? ? ?

+ + ? + ? + =? ? ? ?? ?? ? ? ?

?
 

 

         (4.3) 

 

Simplificando a Equação 4.3  

, , 0
y x z xx

xb
x y z

? ?? ? ??
+ + + =

? ? ?
          (4.4) 

de forma análoga para as outras direções coordenadas, obtém-se. 

, y z, y

,zz,

0

0

x y
y

yx z
z

b
x y z

b
x y z

? ? ?

?? ?

? ? ?
+ + + =

? ? ?
?? ?

+ + + =
? ? ?

 

 

         (4.5) 

 

Escrevendo as equações de equilíbrio de momentos em relação ao eixo z , tem-se 

, x,y
, , x, y

x, y

2 2 2

0
2

y x
z y x y x

dy dy dx
M dy dxdz dxdz dx dydz

y x

dx
dydz

? ?
? ? ?

?

? ?? ? ? ?
= + + ? +? ? ? ?? ?? ? ? ?

+ =

?
 

 

         (4.6) 

 

A simplificação da Equação 4.6 resulta em 

, ,x y y x? ?=           (4.7) 

de forma análoga, para o equilíbrio de momento em torno dos eixos coordenados das outras 

direções tem-se 

, ,

, ,

z x x z

z y y z

? ?
? ?

=
=

 
         (4.8) 

A partir das relações apresentadas pode-se observar que para a definição do estado de 

tensões de um corpo em um ponto determinado é necessário o conhecimento das seguintes 

variáveis: x? , y? , z? , ,x y? , ,x z?  e ,y z? . 



31 

 

O conjunto de equações de equilíbrio dado pela Equação 4.4 e pela Equação 4.5 é, u-

sualmente, apresentado na forma matricial como. 

. 0
T? + =? b           (4.9) 

onde  [ ]0 0 0 0=  e
 

x xy xz

yx y yz

zx zy z

? ? ?
? ? ?
? ? ?

? ?
? ?

= ? ?
? ?
? ?

?  

 

        (4.10)
 

 

 

x y zb b b? ?= ? ?b          (4.11) 

 

x y z

? ?? ? ?
? = ? ?? ? ?? ?

        (4.12) 

  

4.2 ESTADO PLANO DE DEFORMAÇÕES 

 

Para determinado material, sujeito a um Estado de Tensões e ao equilíbrio mecânico, 

são definidas, de acordo com parâmetros obtidos a partir de experimentos ou leis empíricas, 

as leis que relacionam as tensões e deformações do meio. Para o presente trabalho, por se tra-

tar de um meio elástico, essas relações são dadas peia Lei de Hooke. Essa lei foi descoberta 

pelo físico inglês Robert Hooke no ano de 1660 ao estudar o comportamento de um corpo 

elástico, porém só veio a ser publicada no ano de 1676 . A Lei de Hooke possui sua forma 

geral, onde é definida a relação constitutiva elástica para o caso tridimensional e anisotrópico, 

porém, no presente trabalho, serão aplicadas à forma geral da Lei de Hooke algumas simplifi-

cações a fim de deixá-la com uma apresentação mais elegante para a aplicação considerada. 

Sendo assim, será considerado o meio sujeito ao regime do Estado Plano de Deformações e 

composto por um material isotrópico. 

Quando se analisa um corpo submetido a um Estado de Tensões, em determinado pon-

to, pode-se definir, para tal ponto, variáveis básicas para o problema mecânico. Essas variá-

veis são os deslocamentos em cada direção coordenada, definidos como xu , yu  e zu  e as ten-



32 

 

sões já definidas anteriormente. A partir dos deslocamentos, são definidas as deformações 

ocorridas no ponto avaliado, que são, de fato, o fenômeno físico que gera o aparecimento de 

tensão em tal ponto, que são dadas por: 

x
x

y
y

z
z

u

x
u

x
u

x

?

?

?

?
=

?
?

=
?

?
=

?

 

 

 

       (4.13) 

 

onde x? , y?  e z?  são, respectivamente, as deformações nas direções x , y   e z . Essas defor-

mações se relacionam com as tensões através do  Módulo de Elasticidade E  e o coeficiente 

de Poisson do material de acordo com as expressões: 

( )

( )

( )

1

1

1

x x y z

y y x z

z z x z

v
E

v
E

v
E

? ? ? ?

? ? ? ?

? ? ? ?

? ?= ? +? ?

? ?= ? +? ?

= ? ? + ?? ?

 

 

 

        (4.14) 

 

Também são definidas, para cada ponto do domínio, as deformações causadas por dis-

torções no material. Essas distorções são definidas por: 

yx
xy

x z
xz

y z
yz

uu

y x

u u

z x
u u

z y

?

?

?

??
= +

? ?
? ?

= +
? ?
? ?

= +
? ?

 

 

 

       (4.15) 

 

que se relacionam com as tensões cisalhantes de acordo com as expressões: 

xy
xy

xz
xz

yz
yz

G

G

G

?
?

?
?

?
?

=

=

=

 

 

 

       (4.16) 

 

onde G  é o módulo de cisalhamento, definido como: 



33 

 

( )2 1
E

G
v

=
+

        (4.17) 

Tendo em vista a natureza dos problemas geomecânicos, esses foram tratados, nesse 

trabalho, como sendo submetido ao estado plano de deformações. As hipóteses consideradas 

para a modelagem desses problemas são dependentes das relações entre as dimensões e carac-

terísticas do problema a ser resolvido. Uma das considerações que podem ser atribuídas aos 

problemas são as considerações acerca das relações geométricas entre as dimensões do domí-

nio. Quando o problema considerado se desenvolve com dimensões com a mesma ordem de 

grandeza nas três direções, esses problemas precisam ser modelados como sendo tridimensio-

nais, sem considerações de simplificações em termos de tensões ou deslocamentos em alguma 

dessas direções. Quando uma das dimensões possui ordem de grandeza menor do que outras 

duas, as tensões desenvolvidas ao longo da menor direção podem ser desprezadas, quando 

comparadas com as tensões nas direções ao longo da seção transversal, sendo assim 

0z xz yz? ? ?= = = .  Quando uma das direções é ordens de grandeza maior que as outras duas as 

deformações desenvolvidas ao longo da maior direção são desprezadas, pois apresentam valo-

res, na prática, bem menor que as demais, sendo assim 0xz yz z? ? ?= = = . A Figura 4.5 apre-

senta um esquema ilustrativo das situações citadas. 

 

Figura 4.5.Tipos de análise: (a) Geometria do problema; (b) Estado Plano de Tensões e Estado Plano 

de Deformações; (c) Análise 3-D. 

 

(a)                      (b)                      (c)  

Fonte: Elaborada pelo autor. 

 

A consideração acima será atribuída à Lei de Hooke Generalizada para que esta seja 

escrita na forma final, na qual será aplicada a formulação do Método dos Elementos Finitos, 



34 

 

com isso podemos reescrever a equação que rege a Lei de Hooke para o caso de um corpo 

submetido a um Estado Plano de Deformações como segue. 

=? D?  
       (4.18) 

onde os termos dessa equação podem ser escritos na forma reduzida como: 

T

x y xy? ? ?? ?= ? ??         (4.19) 

T

x y xy? ? ?? ?= ? ??         (4.20) 

e 

11 12

21 22

32

0

0

0 0

D D

D D

D

? ?
? ?=
? ?
? ?? ?

D  
       (4.21) 

 

onde ? é o vetor de deformações. A matriz D  pode ser obtida a partir das seguintes manipula-

ções. 

Para o caso de Estado Plano de Deformações, tem-se:  

0xz yz z? ? ?= = =         (4.22) 

então, pode-se escrever: 

( )1 0z z x yv
E

? ? ? ?? ?= ? + =
? ?

        (4.23) 

obtendo assim: 

( )z x yv? ? ?= +          (4.24) 
Pode-se notar que apesar de 0z? = , a tensão z? não necessariamente será nula. Substi-

tuindo a Equação 4.23 na Equação 4.13 e manipulando algebricamente o conjunto de equa-

ções obtido, tem-se: 



35 

 

( )

( )

2

2

1

1

0

x x y x y

y y x x y

z

xy
xy

v v
E

v v
E

G

? ? ? ? ?

? ? ? ? ?

?
?

?

? ?= ? ? +
? ?

? ?= ? ? +
? ?

=

=

 

 

 

        (4.25) 

 

Através de manipulações no conjunto dado na Equação 4.25 pode-se definir a matriz 

constitutiva para o Estado Plano de Deformações como  

( )
( ) ( )

( )

1 0
1

1
1 0

1 1 2 1
1 2

0 0
2 1

v

v
E v v

v v v
v

v

? ?
? ?

?? ?
? ? ?

= ? ?+ ? ?
? ?

?? ?
? ??? ?

D  

 

 

        (4.26) 

 

 

4.3 EQUAÇÃO DE BALANÇO DE MASSA DE FLUIDO  

 

A equação de balanço de massa de fluido é uma equação diferencial parcial que rege o 

comportamento do fluxo de fluido em determinado meio. O desenvolvimento da equação é 

dado a partir da análise de um elemento infinitesimal de dimensões ,  e dx dy dz corresponden-

tes às direções ,  e x y z respectivamente, que, sem perda de generalidade, possui os três lados 

paralelos aos eixos coordenados, como apresentado na Figura 4.6. 

As componentes do vetor velocidade ( )v  do fluxo do fluido são dadas por ,  e x y zv v v

dadas nas direções ,  e x y z respectivamente. 

Pode-se de definir o balanço de massa de fluido no interior do elemento definido, para 

determinado momento, como sendo a soma das contribuições de massa que entra e sai do e-

lemento em tal instante. Tais quantidades são definidas em cada face considerada, também há 

a inserção, na equação do problema, de um termo de fonte ou sumido que pode ocorrer no 

ponto avaliado.  

Avaliando o balanço de massa na direção x  tem-se: 



 

balanço de massa em   x v dydz v dydz dxdydz

Figura 

 

 

Avaliando as contribuições nas três direções e o termo de fonte ou sumidoro, definido 

por q, tem-se: 

x
x x y y z z

z

v
v dydz v dydz dxdydz v dxdz v dxdz dydxdz v dxdy v dx

x y

v
dzdxdy qdxdydz

z

?
? + + ? + + ?

? ?
?

+ + =
?

Simplificando a equação do balanço de massa

yx z
vv v

q
x y z

?? ?
+ + + =

? ? ?

que pode ser escrita de maneira simplificada como

balanço de massa em   xx x
v

x v dydz v dydz dxdydz
x

?
? ? +

?
 

 

Figura 4.6. Velocidade em um elemento infinitesimal.

Fonte: Elaborada pelo autor. 

Avaliando as contribuições nas três direções e o termo de fonte ou sumidoro, definido 

0

yx
x x y y z z

vv
v dydz v dydz dxdydz v dxdz v dxdz dydxdz v dxdy v dx

x y

dzdxdy qdxdydz

?
? + + ? + + ?

? ?

+ + =

o a equação do balanço de massa, tem-se: 

0+ + + =  

pode ser escrita de maneira simplificada como: 

36 

        (4.27) 

. Velocidade em um elemento infinitesimal. 

 

Avaliando as contribuições nas três direções e o termo de fonte ou sumidoro, definido 

x x y y z zv dydz v dydz dxdydz v dxdz v dxdz dydxdz v dxdy v dxdy? + + ? + + ?
 

 

       (4.28) 

 

       (4.29) 



37 

 

. 0q? + =v         (4.30) 

 

4.4 LEI DE DARCY 

 

A Lei de Darcy, assim como a Lei de Hooke, é uma lei constitutiva que relaciona a ve-

locidade do fluido, em um meio poroso, com o gradiente de pressões de fluido em determina-

do ponto do domínio, a partir de propriedades associadas ao meio e ao fluido considerado. 

Essa lei foi proposta por Henry Philibert Gaspard Darcy no ano de 1856, a partir de experi-

mentos realizados em estruturas contendo areia a submetidas a gradientes de pressões. 

Desprezando os efeitos de capilaridade e gravidade, a equação de rege a Lei de Darcy 

pode ser escrita como 

f

p

?
? ??

= ? ? ?? ?
? ?

v ?  
       (4.31) 

onde  

x y zv v v? ?= ? ?v         (4.32) 

x xy xz

yx y yz

zx zy z

k k k

k k k

k k k

? ?
? ?

= ? ?
? ?
? ?

?  

 

       (4.33) 

 

O vetor de velocidade do fluido v  possui as componentes xv , xv  e xv  que são as velo-

cidades nas direções ,  e x y z respectivamente. K  é o tensor de permeabilidades do problema, 

W? o peso específico do fluido e p a pressão de fluido no ponto avaliado. As componentes do 

tensor de permeabilidades são mostradas na Equação 4.33 

 

 

 

 



38 

 

4.5 PRINCÍPIO DAS TENSÕES EFETIVAS 

 

O Princípio das tensões efetivas foi desenvolvido por Terzaghi (CAPUTO, 1998), e 

consiste na relação entre as variáveis mecânicas e hidráulicas do problema, que pode ser escri-

to como: 

' I p= +? ?  
       (4.34) 

onde ? é o tensor de tensões totais dado por: 

x xy xz

yx y yz

zx zy z

? ? ?
? ? ?
? ? ?

? ?
? ?= ? ?
? ?
? ?

?  

 

       (4.35) 

 

e '?  é o tensor de tensões efetivas dado por: 

' ' '

' ' ' '

' ' '

x xy xz

yx y yz

zx zy z

? ? ?
? ? ?
? ? ?

? ?
? ?= ? ?
? ?
? ?

?  

 

       (4.36) 

 

onde i? / 'i?  são as tensões totais/efetivas que se desenvolvem nas direções normais à direção 

coordenada i  e ij? / 'ij?  são as tensões cisalhantes totais/efetivas que se desenvolver na direção 

i  ao longo do plano normal à direção j . 

onde I  é a matriz identidade dada por: 

1 0 0

0 1 0

0 0 1

I

? ?
? ?=
? ?
? ?? ?

 
 

       (4.37) 

e p  é a pressão de fluido. 

 

 

 



39 

 

4.6 SISTEMA DE EQUAÇÕES DA TEORIA GERAL DO ADENSAMENTO DE BIOT 

 

As equações diferenciais que regem o problema poroelástico são obtidas utilizando os 

conceitos de Equação de Equilíbrio Mecânico, Estado Plano de Deformações, Equação de 

Balanço de Massa de Fluido, Lei de Darcy e o Princípio das Tensões Efetivas. 

Utilizando o Princípio das Tensões Efetivas podemos escrever a Equação de Equilí-

brio Mecânico como: 

. ' 0? + =? b  
       (4.38) 

O balanço de massa do fluido é igual à variação volumétrica do meio, esse fenômeno é 

decorrente da hipótese do fluido ser incompressível e está preenchendo todos os poros do 

meio, ou seja, está completamente saturado, sendo assim a variação espacial do volume de 

fluido no meio é dada por: 

. .
f

p

?
? ??

? = ? ?? ?? ?
? ?

v ?  
       (4.39) 

A taxa de variação volumétrica do elemento é dada por: 

( )x y z
t

? ? ?
?

+ +
?

        (4.40) 

onde t  é a variável temporal do problema. 

Igualando a Equação 4.39 e a Equação 4.40, tem-se 

( ). x y z
f

p

t
? ? ?

?
? ?? ?

? ? = + +? ?? ? ?? ?
?  

       (4.41) 

e escrevendo essa relação na forma: 

( ) ( ). 0x y z
t

? ? ?
?

? ? + + =
?

v         (4.42) 

Então, o sistema de equações que rege o problema poroelástico é dado por.  



40 

 

( ) ( )

. ' 0,  onde   ' ,  onde       

. 0, onde   x y z
f

Ip

p

t
? ? ?

?

?? + = = ? =
?
? ? ?

? ? + + = = ?? ??

? b ? ? ? D?

v v ?
 

 

       (4.43) 

 

O sistema de equações acima apresenta as equações que regem a Teoria Geral do A-

densamento de Biot. 

 

 

 

 

 

 

 

 

 

 

 

 

  



41 

 

5 FORMULAÇÃO DO MÉTODO DOS ELEMENTOS FINITOS APLICADA À TEO-
RIA DE BIOT 

 

Para a discretização do sistema de equações que rege o problema poroelástico, será 

utilizado, nesse trabalho, uma formulação mista do Método dos Elementos Finitos. Essa for-

mulação é utilizada para a solução do problema totalmente acoplado, onde as duas físicas, 

mecânica e hidráulica, são resolvidas em uma única matriz global do problema.  

Para o desenvolvimento da aproximação numérica do problema, o Princípio das Ten-

sões Efetivas será reescrito da seguinte maneira: 

' p= +? ? m  
         (5.1) 

onde [ ]1 1 0 T=m . 

Diferenciando a equação acima em relação ao tempo, tem-se: 

( ) ( ) ( )' p
t t t

? ? ?
= +

? ? ?
? ? m           (5.2) 

Aplicando o Método dos Resíduos ponderados à Equação de Equilíbrio Mecânico, te-

mos: 

( ). 0T T
V

dV? + =?w ? b           (5.3) 

onde 
T

x yw w? ?= ? ?w  é o vetor com as funções de formas correspondentes às direções x  e y . 

Integrando por partes essa equação e usando o Teorema de Gauss, é obtida a forma fraca da 

Equação de Equilíbrio Mecânico, dada por: 

( ) 0
T T T

V V S

dV dV dS? ? ? =? ? ?w ? w b w t           (5.4) 

onde 
T

x yt t? ?= ? ?t  é o vetor de forças de superfície aplicados na superfície S. As forças super-

ficiais devem satisfazer as condições de contorno: 

x x x xy y

y xy x y y

t n n

t n n

? ?
? ?

= +
= +

          (5.5) 

sendo xn  e yn  são os cossenos diretores normais à superfície S.  



42 

 

Diferenciando no tempo a Equação 5.4 e aplicando o Princípio das Tensões efetivas, 

obtém-se: 

( )
'

0
T T T

V V S

p
dV dV dS

t t t t

?? ?? ? ?
? + ? ? =? ?

? ? ? ?? ?
? ? ?

? b t
w m w w           (5.6) 

Será aplicado, à Equação 5.6  a discretização pelo Método dos Elementos Finitos. Essa apro-

ximação consiste em dividir o domínio em elementos, onde as variáveis do problema que, 

para o presente caso, é o deslocamento, serão interpoladas ao longo do domínio por funções 

chamadas de funções interpoladoras, construídas em termos de pontos estabelecidos no ele-

mento de interesse. Para isso é necessário que sejam definidas essas funções para as variáveis 

analisadas. A interpolação dos deslocamentos a nível de elemento é dada de acordo com a 

expressão abaixo: 

u=d N u            (5.7) 

onde [ ]u v=d  sendo u  o deslocamento na direção x  e v  o deslocamento na direção y . A 

matriz uN  corresponde à matriz contendo as funções de forma associadas ao elemento e é 

dada por: 

1 2 6

1 2 6

0 0 0

0 0 0
u u u

u
u u u

N N N

N N N

? ?
= ? ?
? ?

N ?          (5.8) 

O vetor u é o vetor que contém os deslocamentos nodais, que são os graus de liberdade 

do elemento, e é dado por: 

[ ]1 1 2 2 6 6
T

u v u v u v=u ?          (5.9) 

onde os deslocamentos são dados em cada nó, onde iu  corresponde ao deslocamento na dire-

ção x  do nó com numeração i  e os deslocamentos iv  são os deslocamentos na direção y da-

dos de maneira análoga. A Figura 5.1 apresenta a localização dos deslocamentos nodais. 

Para o problema mecânico, como apresentado, cada nó possui dois graus de liberdade, 

relativos ao deslocamento na direção x  e ao deslocamento na direção y. Esses deslocamentos 

podem ser aproximados de forma polinomial como segue: 



 

1 2 3 4 5 6

7 8 9 10 11 12

u b b x b y b x b xy b y

v b b x b y b x b xy b y

= + + + + +

= + + + + +

sendo os coeficientes 1,...,12ib =

 

Figura 5.1. Deslocamentos nodais utilizados na função interpoladora dos deslocamentos.

 

A Equação 5.10 pode ser escrita de forma matricial como

2 21 0 0 0 0 0 0

0 0 0 0 0 0 1

u x y x xy y

v

? ?? ?
= ? ?? ?

? ? ? ?

que pode ser escrita de maneira mais compacta como

2 2
1 2 3 4 5 6

2 2
7 8 9 10 11 12

u b b x b y b x b xy b y

v b b x b y b x b xy b y

= + + + + +

= + + + + +
 

1,...,12  são constantes. 

. Deslocamentos nodais utilizados na função interpoladora dos deslocamentos.

Fonte: Elaborada pelo autor. 

 

pode ser escrita de forma matricial como: 

12 2

2 2

12

1 0 0 0 0 0 0

0 0 0 0 0 0 1

b
x y x xy y

x y x xy y
b

? ?
? ?? ?
? ?? ?
? ?? ?? ?

?  

ue pode ser escrita de maneira mais compacta como: 

43 

       (5.10) 

 

. Deslocamentos nodais utilizados na função interpoladora dos deslocamentos. 

 

 

        (5.11) 

 



44 

 

u

v

? ?
=? ?

? ?
M b         (5.12) 

 

Os deslocamentos nodais, para um determinado elemento, satisfazem o sistema de e-

quações abaixo: 

2 2
1 1 2 1 3 1 4 1 5 1 1 6 1

2 2
6 1 2 6 3 6 4 6 5 6 6 6 6

2 2
1 7 8 1 9 1 10 1 11 1 1 12 1

2 2
6 7 8 6 9 6 10 6 11 6 6 12 6

u b b x b y b x b x y b y

u b b x b y b x b x y b y

v b b x b y b x b x y b y

v b b x b y b x b x y b y

? = + + + + +
?
?
? = + + + + +?
?

= + + + + +?
?
?

= + + + + +??

?

?

 

 

 

       (5.13) 

 

onde ix  e iy  com 1,..., 6i =  são, respectivamente, os valores das coordenadas dos nós de nu-

meração i  do elemento avaliado, dado de acordo com a Figura 5.1. 

Esse sistema de equações pode ser manipulado algebricamente e escrito, de maneira 

matricial, como: 

12 2
11 1 1 1 1 1 1

2 2
61 6 6 6 6 6 6

2 2
11 1 1 1 1 1 1

2 2
61 6 6 6 6 6 6

1 0 0 0 0 0 0

1 0 0 0 0 0 0

0 0 0 0 0 0 1

0 0 0 0 0 0 1

ub x y x x y y

ub x y x x y y

vb x y x x y y

vb x y x x y y

?
? ? ? ?? ?
? ? ? ?? ?
? ? ? ?? ?
? ? ? ?? ?

= ? ? ? ?? ?
? ? ? ?? ?
? ? ? ?? ?
? ? ? ?? ?

? ? ? ?? ?? ? ? ?? ?

?? ? ? ? ? ? ? ? ? ? ? ? ?

?? ? ? ? ? ? ? ? ? ? ? ? ?

 

 

 

       (5.14) 

 

Escrevendo a Equação 5.14 de forma compacta temos: 

1?=b X u         (5.15) 

Manipulando adequadamente as expressões anteriores obtém-se a seguinte relação: 

1
u

?=N MX         (5.16)
 

que define a matriz contendo as funções de forma para o elemento triangular quadrático, utili-

zado para a definição das variáveis mecânicas do problema.
 

De forma análoga a interpolação da pressão é dada pela Equação 5.17        ( 

pp = N p         (5.17) 

sendo: 



 

1 2 3p p p pN N N? ?= ? ?N

que é a matriz contendo as funções interpoladoras da pressão e

[ ]1 2 3p p p=p  

é o vetor que contém as pressões nodais, definidas de acordo com 

 

Figura 5.2. Pressões nodais utilizados na função interpoladora das pressões.

 

De forma análoga ao problema mecânico,

do problema hidráulico, e são dadas por:

({

({

({

1 2 3 3 2 2 3 3 2

2 3 1 1 3 3 1 1 3

3 1 2 2 1 1 2 2 1

1

2
1

2
1

2

p

p

p

N x y x y y y x x x y
A

N x y x y y y x x x y
A

N x y x y y y x x x y
A

= ? + ? + ?

= ? + ? + ?

= ? + ? + ?

onde A é a área do triangulo que define o elemento.

Para esse caso, as coordenadas 

a Figura 5.2. 

1 2 3p p p pN N N? ?? ?  

ue é a matriz contendo as funções interpoladoras da pressão e a o vetor 

é o vetor que contém as pressões nodais, definidas de acordo com a Figura 5.2

. Pressões nodais utilizados na função interpoladora das pressões.

 

Fonte: Elaborada pelo autor. 

De forma análoga ao problema mecânico, podem ser obtidas as funções interpoladoras 

ema hidráulico, e são dadas por: 

) ( ) ( ) }

) ( ) ( ) }

) ( ) ( ) }

1 2 3 3 2 2 3 3 2

2 3 1 1 3 3 1 1 3

3 1 2 2 1 1 2 2 1

N x y x y y y x x x y

N x y x y y y x x x y

N x y x y y y x x x y

= ? + ? + ?

= ? + ? + ?

= ? + ? + ?

 

é a área do triangulo que define o elemento. 

Para esse caso, as coordenadas ix  e iy  são associadas aos nós i

45 

       (5.18) 

a o vetor p é dado como: 

       (5.19) 

Figura 5.2: 

. Pressões nodais utilizados na função interpoladora das pressões. 

 

as funções interpoladoras 

 

 

       (5.20) 

 

1, 2, 3i =  de acordo com 



46 

 

Desta forma estão definidas todas as funções de forma necessárias para as interpola-

ções das variáveis hidráulicas e mecânicas. 

Definidas as funções de forma, pode-se obter a velocidade aplicando a derivada tem-

poral ao vetor d . 

u
t t

? ?
= =

? ?
d u

v N         (5.21)
 

As funções peso para a aplicação do Método de Galerkin à Equação 5.6 podem ser to-

madas como a velocidade, que são dadas por: 

u
t t

? ?
? ?

= =
? ?
d u

w N        (5.22)
 

Substituindo a função peso na Equação 5.6         ( e a integrando no volume elementar e 

área elementar, dados respectivamento por  eV  e eS , obtém-se: 

( ) ( )' 0
e e e e

T T T
T T

u u u u

V V S V

p
dV dV dS dV

t t t t t
?

? ?? ? ? ? ?
? + ? ? ? =? ?

? ? ? ? ?? ?? ?
? ? ? ?

u ? t b
N N m N N

 

       (5.23) 

 

Como as funções peso podem ser arbitrárias, o termo entre colchetes da Equação 5.23 

assume o valor nulo. 

'
0

e e e e

T T T T
u u u u

V V S V

p
dV dV dS dV

t t t t

? ? ? ?
+ ? ? =

? ? ? ?? ? ? ?
? t b

B B m N N         (5.24) 

 

onde a matriz uB é dada por: 

1 6

1 6

1 1 6 6

0 0

0 0

u u

u u
u u

u u u u

N N

x x
N N

y y

N N N N

y x y x

? ?? ?
? ?

? ?? ?
? ?? ?

= ? = ? ?? ?? ?
? ?? ? ? ?
? ?

? ? ? ?? ?

B N

?

?

?

 

 

 

       (5.25) 

 

 

A matriz uB  associa os deslocamentos às deformações no elemento. As deformações 

são dadas pelo vetor 
T

x y xy? ? ?? ?= ? ??  de acordo com a relação: 



47 

 

u u= ? = ? =? d N u B u         (5.26) 

Na Teoria da Elasticidade, as tensões são dadas por: 

=? D?  
       (5.27) 

ou ainda: 

u=? DB u         (5.28) 

Substituindo a Equação 5.28 na        (5. Equação 5.24 e escrevendo de uma forma mais 

apresentável, obtém-se a equação de equilíbrio para um elemento em termos da derivada tem-

poral, dada por: 

ext
p

t t t

? ? ?
+ =

? ? ?
u f

k l          (5.9) 

 

onde: 

e

e

T

u u

V

T

u p

V

dV

dV

=

=

?

?

k B DB

l B mN
 

 

       (5.30) 

 

As matrizes definidas constituem as matrizes elementares, ou seja, são definidas para 

um determinado elemento da malha computacional avaliada. O vetor extf  é definido como: 

e e

ext T T
u u

S V

dS dV
t t

? ?
= ?

? ?? ?
t b

f N N         (5.31) 

 

Para a descrição completa do problema de adensamento, é necessária a avaliação da 

equação de Conservação de Massa para o meio poroso. Tal equação é dada, para o caso bidi-

mensional, por: 

y yx x
vv

x y t t

??? ?? ?? ?
+ = ? +? ?? ? ? ?? ?

 
       (5.32) 

 

Essa equação expressa à igualdade entre a variação de fluido no meio poroso e a taxa 

de deformação volumétrica do esqueleto sólido do meio poroso. Nesse processo é considerado 



48 

 

a indeformabilidade dos grãos que formam o esqueleto sólido. Essa equação pode ser apresen-

tada, de forma compacta como: 

. 0
T

t

?
? + =

?
?

v m        (5.33) 

 

onde  
T?

x yv v? ?= ? ?v  dado por: 

w

p

?
?

=
?

v         (5.34) 

 

e o tensor de permeabilidades K , para o caso bidimensional é dado por: 

x xy

yx y

k k

k k

? ?
= ? ?
? ?

?  
       (5.35) 

 

Na Equação 5.34  pode ser introduzida a componente de fluxo gerada pelo efeito gra-

vitacional, atribuído ao peso próprio do fluido. Dessa forma, a Equação 5.34 será reescrita 

como: 

( )w
w

p

?

? ?
=
? b

v  
       (5.36) 

 

onde [ ]0w w?=b  é o vetor de forças, que considera os efeitos gravitacionais. 

Aplicando a equação que representa a Lei de Darcy na equação que apresenta a Con-

servação de Massa de fluido, pode-se obter: 

( )
. 0

w T

w

p

t?

? ?? ? ?? ?? + =
? ? ?
? ?

? b
?

m  
       (5.37) 

 

A forma fraca da Equação 5.37 é obtida aplicando o Método dos Resíduos Ponderados 

de Galerkin com as funções peso dadas por ? .  



49 

 

( )
. 0

w T

wV V

p
dV dV

t?

? ?? ? ?? ?? + =
? ? ?
? ?

? ?
? b

?
? ?m  

       (5.38) 

 

Utilizando, no primeiro termo da equação o Teorema de Gauss, obtém-se: 

( ) ( ) ( ) 0T T Tw
w wS V V

p dS dV dV
t? ?

?
? ? ? + =

?? ? ?
? ? ?

? n ? b ?m        (5.39) 

 

que também pode ser apresentada da forma: 

( ) ( ) 0T TT w
w wV V S V

pdV dV qdS dV
t? ?

?
? ? ? ? ? ? =

?? ? ? ?
? ??

? ?m ? ? b         (5.40) 

 

sendo: 

( )T Tw
w

q p
?

= ? ? =
?

b n v n         (5.41) 

O vetor 
T

x yn n? ?= ? ?n  indica os cossenos diretores normais à superfície S avaliada nas 

integrais apresentadas. 

Definidas as funções interpoladoras para as variáveis hidráulicas, pode-se definir co-

mo função peso para o Método de Galerkin a função ? , dada por: 

pp? ?= =? N p         (5.42) 

onde ?p  assume valores arbitrários ao longo do domínio. Esse procedimento é análogo ao 

procedimento utilizado para a Equação de Equilíbrio Mecânico. Diferenciando a função peso 

ao longo das variáveis espaciais obtém-se: 

p p? ?? = ? =? N p B p         (5.43) 

sendo: 

1 2 3

1 2 3

p p p

p p
p p p

N N N

x x x
N N N

y y y

? ? ?? ?
? ?? ? ?? ?= ? =
? ? ?? ?
? ?? ? ?? ?

B N  

         (5.44) 

 

A Equação 5.40 combinada com as definições apresentadas pode ser escrita da forma: 



50 

 

0
e e e e

T T T T T T
u p p p p p p w

w wV V S V

dV dV dS dV
t

?
? ?

? ??
? + + =? ?? ??? ?

? ? ? ?
? ?u

p B m N B B p N q B B b  
(5.45) 

 

como T? p assume valores arbitrários, temos: 

0
e e e e

T T T T T
u p p p p p p w

w wV V S V

dV dV dS dV
t ? ?

?
? + + =

?? ? ? ?
? ?u

B m N B B p N q B B b           (5.46) 

 

Essa equação expressa a forma fraca da equação que representa a Conservação de Massa de 

fluido, e pode ser apresentada, de maneira simplificada, como: 

T

t

?
+ =

?
u

l hp q           (5.47) 

onde: 

e

T
p p

wV

dV
?

= ??
?

h B B           (5.48) 

 

e 

e e

T T
p p p w

wS V

qdS dV
?

= ? +? ?
?

q N B B b           (5.49) 

 

 Sendo assim, as Equação 5.24 e Equação 5.46  são as equações que regem o problema 

poroelástico. É evidente que essas equações são tomadas para cada elemento em particular. 

Para a solução do problema em todo o domínio da malha computacional definida é necessário 

a definição das matrizes globais do problema, utilizando os princípios do MEF, tais matrizes 

são definidas como: 

e

e

e

T

u u
elementos elementos V

T
u p

elementos elementos V

T
p p

elementos elementos wV

dV

dV

dV
?

= =

= =

= = ?

? ? ?

? ? ?

? ? ?

K k B DB

L l B mN

?
H h B B

 

 

 

         (5.50) 

 

Da mesma forma, os vetores globais do problema são definidos como: 



51 

 

e e

e e

e e

T T
p p p w

elementos elementos wS V

ext ext T T
u u

elementos elementos S V

ext T T
u u

S V

qdS dV

dS dV
t t

dS dV
t t

?
= = ? +

? ?
= = ?

? ?

? ?
= ?

? ?

? ? ? ?

? ? ? ?

? ?

?
Q q N B B b

t b
F f N N

t b
f N N

 

 

 

         (5.51) 

 

Sendo assim, está definida a discretização espacial, a partir de uma formulação mista 

do MEF, para o problema poroelástico que é representado pela equação: 

ext

T
t

t

?? ?
? ?? ? ? ? ? ?? ?? + =? ?? ? ? ? ? ?? ?? ? ?? ? ? ?? ?? ? ? ?? ?? ?
? ??? ?

U
K L 0 0 U F

P 0 H PL 0 Q
 

 

         (5.52) 

 

onde U  e P  são, respectivamente, os vetores de incógnitas mecânicas (deslocamentos) e hi-

dráulicas (pressões) do problema. 

  



52 

 

6  FORMULAÇÃO DO MÉTODO DAS DIFERENÇAS FINITAS PARA A DISCRE-
TIZAÇÃO TEMPORAL DA TEORIA DE BIOT 

 

Para a discretização temporal da equação que rege o problema poroelastico, dada pela 

Equação 5.50, será utilizado uma formulação do Método das Diferenças Finitas. O Método é 

conhecido como Método ? (SLOAN; ABBO, 1999.a), onde a calibração do termo ? dita co-
mo será realizada a aproximação, seja ela implícita, explícita ou intermediária.  

A Equação 5.50 será escrita, de maneira compacta como: 

1 2 ( )t
t

?
+ +

?
X

M M X F             (6.1) 

Sendo: 

1 T

? ?
= ? ?
? ?? ?

K L
M

L 0
 

           (6.2)
 

2

? ?
= ? ?
? ?? ?

0 0
M

0 H
 

           (6.3) 

O vetor X é dado por [ ]T=X U P  e ( )
Text

t ? ?= ? ?F F Q  

Para dado instante de tempo a forma discreta da Equação 6.1 é dada por 

( ) ( ) ( )1 11 2 1 21 1n n n nt t t? ? ?? ?? ? ? ?+ ? = ? ? ? + ? ? +? ?? ?? ?M M X M M X F F             (6.4) 
onde ? é o parâmetro que define o tipo de aproximação que será utilizada e pode variar no 
intervalo 0 1?? ?  e os sobrescritos n  e 1n +  correspondem aos valores dos termos avaliados 
nos tempos 

nt  e 1nt +  respectivamente, onde 1n nt t t+ = + ? , sendo t?  o intervalo de tempo entre 

esses dois instantes de tempo consecutivos. 

 

 
 

 

  



53 

 

7  ASPECTOS COMPUTACIONAIS 
 

A implementação da formulação numérica descrita ao longo desse trabalho foi feita 

em ambiente MATLAB®. A linguagem MATLAB® foi escolhida pela sua capacidade e ver-

satilidade no processo de implementação de códigos feitos para operações de cálculo matrici-

al. O código desenvolvido contempla as fases de processamento e pós processamento dos 

problemas, sendo a parte de pré-processamento realizada no Gmsh®. Para o presente trabalho, 

é compreendido como pré-processamento a definição da geometria e a geração da malha 

computacional, retornando ao usuário arquivos de saída em um formato que possa ser lido de 

forma natural pelo código desenvolvido. No que se trata de entrada de dados de simulação, 

tais como parâmetros e características do problema como tempo de simulação, valores de pa-

râmetros físicos, tipo de análise, esses são incluídos em uma rotina MATLAB® construída 

para tal. A visualização de resultados e organização em arquivos também faz parte da rotina 

em MATLAB® que compõe o código criado. 

Para a discretização da variável espacial foi utilizada uma formulação mista do MEF. 

Tal formulação considera a aproximação para o campo de pressões (problema hidráulico) 

como sendo linear dentro de cada elemento e bilienar para o campo de velocidade (problema 

mecânico), onde os elementos possuem geometria triangular. O acoplamento é total, onde em 

cada passo de tempo uma única matriz é resolvida. A discretização temporal é feita em uma 

formulação do MDF que será apresentada ao longo do trabalho. 

A validação do código é realizada com a comparação dos resultados numéricos com 

soluções analíticas encontradas na literatura. O primeiro problema consiste no problema de 

adensamento unidimensional e isotrópico. No segundo será considerado o adensamento uni-

dimensional com um meio heterogêneo, dividido em duas camadas. O terceiro problema é o 

problema conhecido como problema de Mandel. No quarto problema é realizada uma compa-

ração com o problema de adensamento que simula o adensamento de uma camada de solo 

gerada por o carregamento de uma sapata. Também é avaliado um problema com a aplicação 

de cargas, por uma sapata, em uma massa de solo dividida em três camadas com permeabili-

dades anisotrópicas. 

O esquema abaixo é um resumo das atividades que são desenvolvidas em cada etapa 

do processo de simulação de um problema: 

? PRÉ-PROCESSAMENTO 



54 

 

• Gmsh® 

? Construção da geometria do modelo; 

? Geração da malha computacinal; 

? Obtenção dos arquivos .geo e .msh para leitura pelo código; 

 

• MATLAB® (Código desenvolvido) 

? Leitura do arquivo .geo e .msh gerado no Gmsh®; 

? Entrada de parâmetros da simulação 

• Nome do arquivo .geo; 

• Nome do arquivo .msh; 

• Tipo de simulação: mecânica, hidráulica, acoplada; 

• Valor de ?; 
• Número máximo de iterações; 

• Valor de t? ; 

• Iterações que serão pór-processadas; 

? Entrada de parâmetros relativos ao pós-processamento 

• Fator de escala; 

• Definição das variáveis que serão avaliadas; 

• Valores relativos às avaliações em seções definidas. 

? Definição dos parâmetros físicos 

• Módulo de elasticidade;  

• Coeficiente de Poisson; 

• Permeabilidades; 

• Peso específico do fluido. 

? Definição das condições de contorno do problema 

? Transformação dos valores obtidos nos arquivos .geo e .msh em matri-

zes capazes de serem operadas ao longo do processo. 

 

? PROCESSAMENTO 

• MATLAB® 

? Conjunto de rotinas que calculam, de acordo com a formulação numé-

rica descrita nesse trabalho, as variáveis do problema poroelástico ava-

liado. 



55 

 

 

? PÓS-PROCESSAMENTO 

• MATLAB® 

? Rotinas criadas com as saídas definidas no pré-processamento, analisa-

das nos instantes de tempo definidos, que podem ser 

• Campo de tensões em todo o domínio apresentado em escala de 

cores; 

• Campo de pressões em todo o domínio apresentado em escala 

de cores; 

• Tensões ao longo do eixo y presentes em um intervalo definido 

de x ; 

• Pressões ao longo do eixo y presentes em um intervalo definido 

de x ; 

• Deslocamentos ao longo do eixo y presentes em um intervalo 

definido de x ; 

• Obs: as Tensões, Pressões e Deslocamentos também podem ser 

processadas, de forma análoga, ao longo de um eixo na direção 

x ; 

• Malha deformada; 

• Valores máximos e mínimos das variáveis avaliadas. 

? Criação de diretórios com as saídas de forma automatizada. 

A sequência de figuras da Figura 7.1 à Figura 7.8 apresenta o procedimento realizado 

para a simulação de um determinado problema utilizando o código desenvolvido. Basicamen-

te todos os problemas seguem a seguinte sequência: 

• A geometria do problema é criada no Gmsh® (Figura 7.1); 

• São definidas as configurações sobre a malha que também é gerada no Gmsh® (Figura 

7.2); 

• O Gmsh® fornece o arquivo de geometria, com formato .geo e um arquivo de malha 

com formato .msh, transformando a informação visual em informações que possam ser 

manipuladas pelo código (Figura 7.3); 

• Após esse procedimento os arquivos .geo e .msh são salvos na pasta que contém os 

códigos do programa; 



56 

 

• Os arquivos .msh e .geo são definidos em uma rotina do MATLAB® denominada 

‘Main_MefM_Biot.m’ (Figura 7.4); 

• As entradas dos parâmetros de simulação são definidas em ‘Main_MefM_Biot.m’ (Fi-

gura 7.5); 

• A função ‘Main_MefM_Biot.m’ é processada (Figura 7.6); 

• Ao término do processamento são criados diretórios com os resultados obtidos com 

um arquivo contendo alguns valores sobre as variáveis e documentos de imagem (Fi-

gura 7.7); 

• Os resultados obtidos possuem a formatação apresentada na Figura 7.8. 

 

 

Figura 7.1. Procedimento de simulação - criação da geometria do Gmsh. 

 

 

Fonte: Elaborada pelo autor. 

 

 

 

 

 



57 

 

Figura 7.2. Procedimento de simulação - geração da malha computacional no Gmsh. 

 

 

Fonte: Elaborada pelo autor. 

 

Figura 7.3. Procedimento de simulação - arquivo .geo e .msh obtidos no Gmsh. 

 

 

Fonte: Elaborada pelo autor. 

 



58 

 

Figura 7.4. Procedimento de simulação - definição, no MATLAB, dos arquivos que serão lidos. 

 

Fonte: Elaborada pelo autor. 

 

Figura 7.5. Procedimento de simulação - definição dos parâmetros para a simulação na rotina do MA-

TLAB. 

 

Fonte: Elaborada pelo autor. 

 

 



59 

 

Figura 7.6. Procedimento de simulação - processamento do MATLAB. 

 

 Fonte: Elaborada pelo autor. 

 

Figura 7.7. Procedimento de simulação - criação de diretórios com os resultados. 

 

Fonte: Elaborada pelo autor. 

 

 

 



60 

 

Figura 7.8. Procedimento de simulação - resultados salvos. 

 

Fonte: Elaborada pelo autor. 

 

No APÊNDICE A são apresentados os detalhes de cada função específica, um modelo 

do código e os códigos propriamente ditos. 

  



61 

 

8  ANÁLISES REALIZADAS 
 

Essa seção é dedicada à apresentação dos resultados obtidos com o código computa-

cional desenvolvido. São avaliados cinco problemas, todos eles apresentando soluções analíti-

cas encontradas na literatura. Três deles são clássicos, homogêneos e isotrópicos, sendo esse o 

Problema de Terzaghi, o Problema de Mandel e o Problema de Schiffman. Além desses são 

apresentados o Problema de Terzaghi modificado para um meio heterogêneo e um adensa-

mento, que se desenvolve nas duas direções, que contempla anisotropia e heterogeneidade. O 

objetivo de tais comparação é a validação do código desenvolvido e a comparações entre os 

resultados obtidos intrínsecos a cada tipo de solução das equações diferenciais, tais como so-

luções analíticas, numéricas e contendo condições de simplificação ou generalizações sejam 

das propriedades, geometrias ou qualquer outro aspecto. As tensões avaliadas são as tensões 

efetivas. 

Figura 8.1. Carreamento em função do tempo. 

 

Fonte: (SLOAN; ABBO, 1999.b). 

Para os problemas avaliados temos que, a partir do instante 0, 00t = , o carregamento é 

aplicado, de forma linear, até que seja obtido seu valor final, fq , no instante 0t , como apresen-

tado na Figura 8.1. Os resultados são avaliados no tempo 
avalt , e temos que 0 , 0ni tt t= ? ×  e 

naval itt t= ? ×  , onde t? é o passo de tempo considerado, nit é o número de iterações avaliadas 

para o tempo final e 
, 0n i t é o número de iterações avaliadas para o tempo 0t . Temos esse fato 

devido à formulação do problema que é apresentada em termos de derivadas, sendo necessária 

a existência da parte variável do carregamento. 



62 

 

8.1  ADENSAMENTO UNIDIMENSIONAL DE MEIO HOMOGÊNEO E ISOTRÓPICO – 

PROBLEMA DE TERZAGHI 

 

O problema de Terzaghi, como é conhecido, é a base para a Teoria do Adensamento 

unidimensional. É rotineiramente utilizado na validação de códigos computacionais. Apesar 

das simplificações impostas aos modelos e à própria solução analítica desenvolvida por Ter-

zaghi, este é largamente utilizado em escritórios de engenharia geotécnica e de grupos de re-

servatórios de petróleo, quando há a necessidade de predizer o comportamento de adensamen-

to de solos como medição de recalques causados por fundações ou a subsidência gerada pelas 

operações do reservatório. É evidente que suas simplificações só contemplam situações espe-

cíficas de adensamento desses meios, porém na engenharia, por muitas vezes, a ordem de 

grandeza da variável analisada é suficiente para a tomada de decisões importantes. 

Em se tratando do problema propriamente dito, ele consiste na aplicação de um carre-

gamento sobre uma coluna poroelástica homogênea e isotrópica, totalmente saturada por um 

fluido monofásico. A coluna possui capacidade drenante no seu topo e se mantém impermeá-

vel em sua base, que permanece fixa, ou seja, com deslocamentos nulos. Devido ao seu cará-

ter ele se desenvolve apenas ao longo da direção y.  

A Figura 8.2 (a) apresenta a geometria utilizada para a modelagem desse problema e a 

Figura 8.2 (b) a definição do seu domínio e contornos. 

As condições iniciais e de contorno para esse problema são dadas abaixo.  

( )

1 2 3 4

Condições iniciais 0, 00

0, 00  
, , ,  e 

0, 00             
x y

t s

u u MPa

p MPa

=

= =?
? ? ? ? ? ? ?

=?

 

( )

1

2 4

3

Condições de Contorno 0, 00 2, 25

0, 00           

1.000, 00

2, 25

0, 00               

0, 00                 
,

0, 00              

0, 00    

0, 00

x

y

x

y

s t s

MPa

MPa

t s

p MPa

u m

q m s

u m

q m s

?
?

&amp;lt;?

=?
?? ??? ? =?

??
? =?

=?
? ? ? ?

=?
=?

? ? ?
=?

 



63 

 

( )

1

2 4

3

Condições de Contorno 2, 25

0, 00           

1.000, 00

0, 00             

0, 00                 
,

0, 00              

0, 00    

0, 00

x

y

x

y

t s

MPa

MPa

p MPa

u m

q m s

u m

q m s

?
?

&gt;

=?
?? ? = ??
? =?

=?
? ? ? ?

=?
=?

? ? ?
=?  

Figura 8.2. Problema de Terzaghi - Geometria e condições de contorno. 

 

(a)                                          (b) 

Fonte: Elaborada pelo autor. 

 

 

Os parâmetros físicos utilizados na simulação são: 

• 71, 00 10E MPa= ×  

• 0,20? =  

• 
6

6

10 0

0 10
cm s

?

?

? ?
= ? ?
? ?

?  

• 31000, 00w kgf m? =  



64 

 

Foram propostas duas malhas computacionais tendo em vista a observância de resulta-

dos em trabalhos da mesma natureza e pelos próprios resultados obtidos ao longo do trabalho. 

As duas malhas utilizadas são apresentadas na Figura 8.3(a) e Figura 8.3(b) e serão denomi-

nadas respectivamente e Malha1 e Malha2. 

Figura 8.3. Problema de Terzaghi: (a) Malha 1; (b) Malha 2. 

                                            

(a)                                        (b) 

Fonte: Elaborada pelo autor. 

                                

Para as análises foram definidos os fatores tempos, valores usuais utilizados na poroe-

lasticidade, que são definidos de acordo com as características físicas e geométricas de cada 

caso, com o intuito de adimensionalizar as simulações facilitando analogias entre situações de 

magnitudes e características diferentes, ou seja, o fator tempo correlaciona o tempo de aden-

samento com as propriedaes do meio poroso. O fator tempo também é uma medida que forne-

ce informações sobre o estágio de adensamento em que o problema se encontra e é definido 

como: 

2
v

v

tc
T

H
=             (8.1) 

onde H  é o comprimento de drenagem da coluna e 
vc o coeficiente de adensamento, dado 

por: 



65 

 

( )
( ) ( )

1

1 1 2
y

v
w

k E
c

?
? ? ?

?
=

+ ?
 

           (8.2) 

Definido o fator tempo, os parâmetros da simulação estão apresentados abaixo: 

 

• Fatores tempo avaliados: 0, 001vT = ; 0, 01vT = ; 0,1vT = ; 0, 50vT =  e 1, 00vT =  

• Fator tempo correspondente ao 0t : 0 0, 001vT =  

• Número de iterações correspondentes ao 0t : 225, 00  

• Passo de tempo da simulação: 0, 01t s? =  

• Número máximo de iterações: 225.225, 00  

 

 A Figura 8.4 e a Figura 8.5 apresentam os resultados das pressões ao longo do eixo y

para a reta 0, 00x = . Essas Figuras apresentam os resultados respectivos à Malha1 e à Ma-

lha2. 

Como pode ser observado na Figura 8.4 e como já era esperado, na região correspon-

dente ao 0, 001vT =  onde há uma variação brusca no gradiente de pressões, a solução numéri-

ca, naturalmente, oscila, tomando valores maiores do que os obtidos na solução analítica. Esse 

fato é decorrente de primordialmente dois aspectos. O primeiro é que as funções interpolado-

ras elementares para as variáveis hidráulicas são lineares, e é natural que haja esse comporta-

mento quando se utiliza esse tipo de função para situações com modificações bruscas nos gra-

dientes das variáveis analisadas. O outro aspecto que contribui para esse resultado é o refina-

mento da malha computacional, que influencia na captura desses valores. Dessa forma, refi-

nando a malha computacional na região superior do domínio o resultado apresentou melhoras 

significativas, como pode ser observado na Figura 8.5. 

Observa-se que o refinamento da malha foi realizado apenas nas regiões onde já se es-

perava a manifestação de um determinado evento. Esse tipo de sensibilidade por parte do ana-

lista numérico que trata com simulações é de total importancia, tendo em vista que o refina-

mento da malha computacional implica no aumento significativo do custo computacional e 

até mesmo o aumento de número de graus de liberdade para serem analisados. Caso não haja, 

principalmente em problemas mais complexos, a identificação preliminar dessas zonas é im-

portante que se construam modelos básicos, quando viável, para que haja esse tipo de infor-

mação. A análise com a Malha1 e com a Malha2 poderia ser um exemplo desse tipo de avali-

ação. 



66 

 

Figura 8.4. Problema de Terzaghi - Solução analítica e numérica das pressoes ano longo do eixo x=0 

para a Malha 1. 

 

Fonte: Elaborada pelo autor. 

Figura 8.5. Problema de Terzaghi - Solução analítica e numérica das pressoes ano longo do eixo x=0 

para a Malha 2. 

 

Fonte: Elaborada pelo autor. 



67 

 

Serão apresentados os resultados em escala de cores correspondentes ao 1, 00vT = para 

as duas malhas computacionais . Os resultados para as pressões são apresentados na Figura 

8.6(a) e Figura 8.6(b) para cada malha respectiva. Os resultados para as tensões são apresen-

tados na Figura 8.7  e na Figura 8.8. Como pode ser observado, as tensões normais correspon-

dentes às duas malhas possuem concordância. Devido às características do problema as ten-

sões cisalhantes apresentam valores nulos.  

De acordo com os resultados, o código se mostrou satisfatório para a solução desse 

problema. As peculiaridades apresentadas que divergem da solução analítica já eram espera-

das e foram obtidas dentro da normalidade. 

Figura 8.6. Problema de Terzaghi - Campo de pressões, (a) Malha1, (b) Malha2. 

 

   

           (a)             (b)  

 

Fonte: Elaborada pelo autor. 



68 

 

 

Figura 8.7. Problema de Terzaghi - Campo de tensões normais na direção x, (a) Malha1, (b) Malha2. 

 

   

           (a)             (b)  

 

Fonte: Elaborada pelo autor. 

 

 

 

 

 

 

 



69 

 

 

Figura 8.8. Problema de Terzaghi - Campo de tensões normais na direção y, (a) Malha1, (b) Malha2. 

 

   

           (a)             (b)  

 

Fonte: Elaborada pelo autor. 

 

8.2  ADENSAMENTO UNIDIMENSIONAL DE MEIO HETEROGÊNEO E ISOTRÓPICO 

–  PROBLEMA DE TERZAGHI MODIFICADO 

 

Esse problema consiste em uma generalização do de Terzaghi para meios formados 

por dois tipos de materiais poroelástico distribuídos em duas camadas verticais. A sua solução 

analítica foi proposta por (CARSLAW; JAEGER., 1948) Dessa forma a geometria também 

consiste em uma coluna poroelástica, porém heterogênea, dividida em dois materiais, onde o 



70 

 

topo é drenante e submetido a um carregamento que se mantém constante ao longo do proces-

so. Sua base é impermeável e com deslocamentos restritos. As condições de contorno nas 

laterais são impostas de forma que seja considerada a simetria existente, que se desenvolve 

apenas em uma direção. Sendo assim são impostas, nas laterais, uma condição de impermea-

bilidade e os deslocamentos na direção horizontal são nulos. De forma geral a diferença entre 

o Problema de Terzaghi é apenas a heterogeneidade. 

Para a análise no presente caso a geometria e condições iniciais e de contorno são a-

prestandas na Figura 8.9. 

 

Figura 8.9. Problema de Terzaghi Modificado – Geometria e Condições de Contorno. 

 

 

Fonte: Elaborada pelo autor. 

 

As condições iniciais e de contorno para esse problema são dadas abaixo: 

( )

1 2 3 4

Condições iniciais 0, 00

0, 00  
, , ,  e 

0, 00             
x y

t s

u u MPa

p MPa

=

= =?
? ? ? ? ? ? ?

=?

 



71 

 

( )

1

2 4

3

Condições de Contorno 0, 00 2, 25

0, 00           

1.000, 00

2, 25

0, 00                

0, 00                 
,

0, 00              

0, 00    

0, 00

x

y

x

y

s t s

MPa

MPa

t s

p MPa

u m

q m s

u m

q m s

?
?

&amp;lt;?

=?
? ? ??? ? =?

??
? =?

=?
? ? ? ?

=?
=?

? ? ?
=?

 

( )

1

2 4

3

Condições de Contorno 2, 25

0, 00           

1.000, 00

0, 00             

0, 00                 
,

0, 00              

0, 00    

0, 00

x

y

x

y

t s

MPa

MPa

p MPa

u m

q m s

u m

q m s

?
?

&gt;

=?
?? ? = ??
? =?

=?
? ? ? ?

=?
=?

? ? ?
=?  

Os parâmetros físicos do problema são definidos abaixo: 

• 71, 00 10E MPa= ×  

• 0, 20? =  

• 
6 6

1 26 6

3 10 0 10 0
 e 

0 3 10 0 10
cm s cm s

? ?

? ?

? ? ? ?×
= =? ? ? ?

×? ? ? ?
? ?  

• 31000, 00w kgf m? =  

A avaliação foi realizada utilizando duas malhas computacionais distintas. A primeira, 

denominada de Malha1 está apresentada na Figura 8.10 (a) e a Malha2 na Figura 8.10 (b). A 

Malha2 foi proposta para avaliar a influência da discretização na região de descontinuidade.  

O fator tempo para esse problema será dado da mesma forma do fator tempo para o 

problema de Terzaghi, porém os parâmetros do meio serão os do domínio 1? . Sendo assim os 

parâmetros de simulação são: 

 

• Fatores tempo avaliados: 0, 001vT = ; 0, 01vT = ; 0,1vT = ; 0, 50vT =  e 1, 00vT =  

• Fator tempo correspondente ao 0t : 0 0, 001vT =  



72 

 

• Número de iterações correspondentes ao 0t : 225, 00  

• Passo de tempo da simulação: 0, 01t s? =  

• Número máximo de iterações: 225.225, 00  

 

Figura 8.10. Problema de Terzaghi Modificado – Malhas computacionais utilizadas: (a) Malha1; (b) 

Malha2. 

 

                                                     

(a)                                                (b) 

Fonte: Elaborada pelo autor.                                 

O presente caso é uma variação do problema de Terzahi, sendo assim será avaliado o 

adensamento do meio para os mesmos instantes de tempo, considerando a camada superior 

três vezes mais permeável que a inferior, sendo possível, com a observância dos resultados de 

ambos, verificar a influência da mudança na permeabilidade no meio. Como pode ser obser-

vado na Figura 8.11, que apresenta o resultado para o problema obtido com a Malha1, os va-

lores de pressões sofrem uma redução, em particular na camada superior do domínio. Esse 

fato é esperado, como pode ser visto pela própria solução analítica do problema, e explicado 

devido à maior facilidade drenante da camada, que possui valor maior de permeabilidade. 

Quando se observa o 1, 00vT = para os dois casos é possível verificar que para o problema de 

Terzaghi Modificado as pressões são praticamente dissipadas integralmente, ao contrário do 

observado no problema de Terzaghi. 



73 

 

A Figura 8.12 (b) apresenta o resultado das pressões para a Malha2. Como pode ser 

observado há uma concentração no resultado das variáveis onde há a interface entre as cama-

das.  

 

Figura 8.11. Problema de Terzaghi Modificado – soluções analíticas e numéricas para a Malha1. 

 

Fonte: Elaborada pelo autor. 

Como podem ser observados, de acordo com os resultados na Figura 8.11 e Figura 

8.12, os dois resultados foram compatíveis, de maneira satisfatória, com a solução analítica. 

Para o problema em particular a diferença de malhas computacionais não gerou modificações 

consideráveis na distribuição de pressões, tendo as duas valores condizentes com a solução 

analítica. Sendo assim, é possível verificar que a heterogeneidade aplicada no domínio não 

gerou uma diferença de gradientes de pressões nas interfaces capaz de gerar oscilações no 

resultado. Tal fato mostra que, dependendo do grau de heterogeneidade não há a necessidade 

de um refino da malha computacional na região de interface.  

A diferença entre os valores das pressõe obtidas nesse exemplo e no exemplo de Ter-

zaghi são explicados pelas diferenças nos valores de permeabilidades dos meios. O fato das 

soluções para o problema heterogêneo apresentarem pressões menores que o de Terzaghi é 

um reflexo do fato da drenagem ser mais fácil na camada superior quando a permeabilidade é 

maior, possibilitando assim a dissipação mais rápida das pressões.  



74 

 

Figura 8.12. Problema de Terzaghi Modificado – soluções analíticas e numéricas para a Malha2. 

 

Fonte: Elaborada pelo autor. 

O conjunto de figuras que vai da Figura 8.13  à Figura 8.15 apresentam os resultados 

de pressões e tensões em escala de cores para as duas malhas computacionais analisados em 

um fator tempo 0,1vT = . Observados esses resultados é possível a verificação da concordância 

entre as duas simulações. Em relação às tensões cisalhantes são válidas as mesmas observa-

ções acerca do Problema de Terzaghi. A partir dos resultados foi possível observar uma capa-

cidade do código em solucionar problemas com o tipo de heterogeneidade avaliada nesse pro-

blema. 

 

 

 

 

 

 

 



75 

 

Figura 8.13. Problema de Terzaghi modificado - Campo de pressões, (a) Malha1, (b) Malha2. 

. 

   

           (a)             (b)  

 

Fonte: Elaborada pelo autor. 

 

 

 

 

 

 

 

 



76 

 

Figura 8.14. Problema de Terzaghi modificado - Campo de tensões normais na direção x, (a) Malha1, 

(b) Malha2. 

   

           (a)             (b)  

 

Fonte: Elaborada pelo autor. 

 

 

 

 

 

 

 

 



77 

 

Figura 8.15. Problema de Terzaghi modificado - Campo de tensões normais na direção y, (a) Malha1, 

(b) Malha2. 

   

           (a)             (b)  

 

Fonte: Elaborada pelo autor. 

 

8.3 ADENSAMENTO BIDIMENSIONAL DE MEIO HOMOGÊNEO E ISOTRÓPICO – 

PROBLEMA DE MANDEL 

 

O Problema de Mandel consiste em no adensamento que se desenvolve nas duas dire-

ções, ou seja, tem caráter bidimensional, em um meio homogêneo e isotrópico. Juntamente 

com o problema de Terzaghi, compõe o conjunto de exemlplos clássicos da poromecânica que 

possuem soluções analíticas e são utilizados em grande parte dos trabalhos que visam avaliar 

a capacidade dos simuladores e formulações numéricas desenvolvidos para a poroelasticidade.  



78 

 

 Esse caso, definido de forma prática, consiste em um meio poroso retangular, que se 

estende infinitamente em uma de suas direções. Seu topo e base são comprimidos por placas 

rígidas e impermeáveis. Suas laterais são livres e drenantes. A geometria e condições de con-

torno são apresentadas na Figura 8.16  de forma detalhada. 

 

Figura 8.16. Problema de Mandel - Geometria e condições de contorno. 

 

 

Fonte: Elaborada pelo autor. 

 

A geometria consiste em um retângulo com dimensões 1, 00 0, 20m m×  e as condições 

iniciais e de contorno são dadas por: 

( )

1 2 3 4

Condições iniciais 0, 00

0, 00  
, , ,  e 

0, 00             
x y

t s

u u MPa

p MPa

=

= =?
? ? ? ? ? ? ?

=?

 



79 

 

( )3

1 3

2

3

4

Condições de Contorno 0, 00 4, 66 10

0, 00          

1.000, 00

4, 66 10

0, 00              

0, 00  

0, 00             

0, 00    

0, 00

0, 00   

0

x

y

x y

y

x

s t s

MPa

MPa

t s

q m s

MPa

p MPa

u m

q m s

u m

q

?
?

? ?

?

?

&amp;lt;? ×

=?
?? ??? ? =?

? ×?
? =?

= =?
? ? ?

=?
=?

? ? ?
=?
=

? ?
= , 00 m s

?
?
?

 

( )3

1

2

3

4

Condições de Contorno 4, 66 10

0, 00          

1.000, 00

0, 00              

0, 00  

0, 00             

0, 00    

0, 00

0, 00   

0, 00

x

y

x y

y

x

t s

MPa

MPa

q m s

MPa

p MPa

u m

q m s

u m

q m s

?
?

? ?

?&gt; ×

=?
?? ? = ??
? =?

= =?
? ? ?

=?
=?

? ? ?
=?
=?

? ? ?
=?

 

A partir das condições de contorno é possível perceber foi analisando considerada a 

simetria que ocorre em relação aos eixos horizontal e vertical, como apresentado na Figura 

8.17. 

A modelagem de problemas utilizando a simetria possibilita que o analista crie malhas 

mais refinadas para análise sem um custo computacional tão alto quando comparado à mode-

lagem do domínio todo. Pode haver, também, em situações mais complexas, a redução em 

termos de trabalho para a construção do modelo. Dessa forma, a consideração da simetria se 

torna, em grande parte dos casos de simulação numérica, uma forma eficiente de realizar tais 

simulações. 

Os parâmetros físicos do problema são definidos abaixo 

• 81, 00 10E MPa= ×  

• 0, 40? =  



80 

 

• 
6

6

10 0

0 10
cm s

?

?

? ?
= ? ?
? ?

?  

• 31000, 00w kgf m? =  

Figura 8.17. Problema de Mandel - Simetria utilizada para a modelagem. 

 

 

Fonte: Elaborada pelo autor. 

 

Esse caso foi avaliado utilizando duas malhas computacionais distintas, apresentadas 

abaixo. O uso das malhas foi motivado pela apresentação na variação brusca dos gradientes 

das variáveis gerados nas proximidades do extremo direito do domínio que não é capturado de 

forma adequada em determinadas malhas. Tais malhas, denominadas de Malha 1 e Malha 2, 

são apresentadas respectivamente na Figura 8.18 (a) e (b).  

Como pode ser verificado, a Malha 2 apresenta um refinamento não uniforme ao longo 

do domínio, sendo o refinamento crescente do extremo esquerdo para a extremo direto do 

domínio. Esse refino é utilizado levando em consideração os resultados obtidos na Malha 1. 

Para a determinação dos tempos de simulação é definido um fator tempo adimensio-

nal. Esse fator tempo relaciona os parâmetros geométricos e físicos e representa a evolução do 

processo de adensamento.  

 

 

 

 



81 

 

Figura 8.18. Problema de Mandel – Malhas computacionais utilizadas: (a) Malha1; (b) Malha2. 

 

 

(a) 

 

     (b) 

Fonte: Elaborada pelo autor. 

 

É necessária a definição do coeficiente de adensamento 
vc  para a determinação do fa-

tor tempo do presente caso dado por: 

  

4
3

v
w

k K G

c
?

? ?? ?+ ? ?? ?
? ?? ?=  

           (8.3) 

 

Como o problema é isotrópico, a permeabilidade do meio é dada por k . Os termos K

e G são, respectivamente o Módulo Volumétrico e o Módulo Cisalhante, ambos tidos como 

Parâmetros de Lammé do meio poroso. São calculados da seguinte forma: 

( )

( )

3 1 2

2 1

E
K

E
G

?

?

=
? ? ?? ?

=
? + ?? ?

 

           (8.4) 

Definidos tais parâmetros, o fator tempo é dado por: 



82 

 

2

v

tL
T

c
=             (8.5) 

onde L  é metade do comprimento da camada na direção x. 

Os parâmetros utilizados na simulação são\: 

 

• Fatores tempo avaliados: 0, 001vT = ; 0, 01vT = ; 0,1vT = ; 0, 50vT =  e 1, 00vT =  

• Fator tempo correspondente ao 0t : 0 0, 001vT =  

• Número de iterações correspondentes ao 0t : 200, 00  

• Passo de tempo da simulação: 52, 33 10t ?? = ×  

• Número máximo de iterações: 20.200, 00  

 

A Figura 8.19 e a Figura 8.20 apresentam, respectivamente, o resultado das pressões 

de fluido obtidas ao longo da reta 0y =  para a Malha1 e para a Malha2. Como já esperado, o 

refinamento realizado na Malha2 suaviza o efeito da variação brusca que ocorre nos gradien-

tes de pressões, que pode ser percebido de maneira mais efetiva nos resultados da Malha1. 

Esse efeito se materializa como a oscilação do resultado quando o  0, 001vT = . Esse tipo de 

oscilação na pressão pode comprometer, de maneira significativa, resultados obtidos em casos 

onde se precisa, por exemplo, da pressão máxima ou mínima para um certo dimensionamento. 

Como pode ser observado, na Malha1 a pressão numérica máxima atingiu um valor com cerca 

de 20% o valor da pressão analítica.  

Assim como no problema de Terzaghi, pode-se perceber que para os tempos iniciais 

do adensamento é necessário que se faça uma análise dos resultados nas proximidades das 

faces drenantes, tendo em vista que nessas regiões há uma tendêndia à ocorrência de oscila-

ções por conta das variações de gradientes de pressões. Outro fator que se pode observar é que 

a função interpoladora das variáveis hidráulicas é linear, não sendo capaz de capturar, de ma-

neira satisfatória, a solução do problema.  

É evidente, como pode-se observar na Figura 8.19 e na Figura 8.20 que, para graus 

mais altos de adensamento, o refinamento da malha não afeta significativamente a solução e, 

além disso, a oscilação gerada nos graus iniciais do adensamento não se propagam de forma a 

afetar a resposta em outros instante. Tal fato pode ser observado quando se compara os resul-

tados para a Malha1 e a Malha2 onde apesar da diferença no  0, 001vT = , quando se compara 

os outros tempos apresentados os resultados são compatíveis. 



83 

 

 

A Figura 8.21 e a Figura 8.22  apresentam, respectivamente, o comportamento, em 

termos de deslocamentos, para o 1, 00vT =  para a Malha1 e para a Malha2. Nessas figuras a 

configuração inicial do domínio é apresentada em azul e a configuração deformada em verme-

lho. Os deslocamentos foram ampliados 104 vezes. 

A sequência da Figura 8.23 à Figura 8.35  apresenta os resultados de pressões e ten-

sões para o 1, 00vT =  obtidos utilizando as duas malhas computacionais. Os resultados se mos-

tram coerentes.  

 

 

Figura 8.19. Problema de Mandel – pressões ao longo de 0y =  para a Malha1. 

 

 

Fonte: Elaborada pelo autor. 

 

 



84 

 

 

Figura 8.20. Problema de Mandel – pressões ao longo de 0y =  para a Malha2. 

 

Fonte: Elaborada pelo autor. 

 

Figura 8.21. Problema de Mandel – malha inicial (azul) e deformada (vermelho) para a Malha1 

( )1, 0 0vT = . 

 

Fonte: Elaborada pelo autor. 



85 

 

 

 

Figura 8.22. Problema de Mandel – malha inicial (azul) e deformada (vermelho) para a Malha2 

( )1, 0 0vT =  . 

 

Fonte: Elaborada pelo autor. 

 

Figura 8.23. Problema de Mandel - Campo de pressões, (a) Malha1, (b) Malha2. 

 

 

 

 

 

 

 

 

(a) 

 

 

 

(b) 

 

Fonte: Elaborada pelo autor. 



86 

 

Figura 8.24. Problema de Mandel - Campo de tensões normais na direção x, (a) Malha1, (b) Malha2. 

 

 

 

 

 

 

 

 

(a) 

 

 

 

(b) 

 

Fonte: Elaborada pelo autor. 

 

 

 

 

 

 

 

 



87 

 

Figura 8.25. Problema de Mandel - Campo de tensões normais na direção y, (a) Malha1, (b) Malha2. 

 

 

 

 

 

 

 

 

(a) 

 

 

 

(b) 

 

Fonte: Elaborada pelo autor. 

 

 

8.4 ADENSAMENTO BIDIMENSIONAL DE MEIO HOMOGÊNEO E ISOTRÓPICO – 

PROBLEMA DE SCHIFFMAN 

 

Esse problema foi proposto por Schiffman, Chen e Jordan (1969), a fim de apresentar 

uma solução analítica para o comportamento do adensamento causado por uma viga de funda-

ção contínua apoiada sobre uma camada de solo semi-infinita. Em termos de modelagem 

computacional a consideração de um meio semi-infinito será materializada com um domínio 

onda a influência das condições de contorno seja mínima no resultado. Também é uma condi-



88 

 

ção do modelo que a necessidade de novos elementos para preencher tal domínio não aumente 

significativamente o custo computacional devido ao aumento no número de graus de liberda-

de analisados. Sendo assim, para o presente caso, a geometria foi tomada como um quadrado 

de lado dez vezes maior que a faixa de aplicação da carga que representa a sapata. 

A Figura 8.26 apresenta a geometria e a definição dos contornos e do domínio. As 

condições de contorno serão avaliadas para duas situações, com o intuito de analisar a influ-

ência da modificação de tais condições de contorno na resposta obtida na região de interesse, 

que é na proximidade da viga de fundação. As duas situações possuem as condições de con-

torno iguais no topo, base e na face esquerda do domínio. No topo será aplicado um carrega-

mento na faixa correspondente à área de contato da sapata com a camada de solo, e onde não 

houver esse contato o carregamento será nulo. As pressões no topo do domínio serão manti-

das nulas ao longo da evolução do processo, permitindo a drenagem de fluido. A base será 

mantida impermeável e com deslocamentos verticais nulos e serão atribuídas à face esquerda 

as condições de simetria do problema. 

 

Figura 8.26. Problema de Schiffman - Geometria e condições de contorno. 

 

Fonte: Elaborada pelo autor. 

 

Definidos a geometria e contornos, as condições iniciais e as condições de contorno 

para cada situações específica serão apresentadas abaixo. 



89 

 

( )

1 2 3 4 5

Condições iniciais 0, 00

0, 00  
, , , ,  e 

0, 00             
x y

t s

u u MPa

p MPa

=

= =?
? ? ? ? ? ? ? ?

=?

 

( )

1

2

3

4

Condições de Contorno (Situação 1) 0, 00 100, 00

0, 00           

1.000, 00

100, 00

0, 00              

0, 00  

0, 00             

0, 00     

0, 00

x

y

x y

x

y

s t s

MPa

MPa

t s

q m s

MPa

p MPa

u m

p MPa

u

?
?

? ?

&amp;lt;?

=?
?? ??? ? =?

??
? =?

= =?
? ? ?

=?
=?

? ? ?
=?
=

? ?

5

0, 00   

0, 00

0, 00           

0, 00         
x

m

q m s

u m

q m s

?
?

=?
=?

? ? ?
=?

 

( )

1

2

3

4

Condições de Contorno (Situação 1) 100, 00

0, 00           

1.000, 00

0, 00              

0, 00  

0, 00             

0, 00     

0, 00

0, 00   

0, 00

x

y

x y

x

y

s t

MPa

MPa

q m s

MPa

p MPa

u m

p MPa

u m

q m s

?
?

? ?

&lt;

=?
?? ? = ??
? =?

= =?
? ? ?

=?
=?

? ? ?
=?
=?

? ? ?
=?

5

0, 00           

0, 00         
xu m

q m s

=?
? ? ?

=?

 



90 

 

( )

1

2

3

Condições de Contorno (Situação 2) 0, 00 100, 00

0, 00           

1.000, 00

100, 00

0, 00              

0, 00  

0, 00             

0, 00     

0, 00      

x

y

x y

x y

s t s

MPa

MPa

t s

q m s

MPa

p MPa

MPa

q m s

?
?

? ?

? ?

&amp;lt;?

=?
?? ??? ? =?

??
? =?

= =?
? ? ?

=?
= =

? ?
=

4

5

            

0, 00   

0, 00

0, 00           

0, 00         

y

x

u m

q m s

u m

q m s

?
?
?

=?
? ? ?

=?
=?

? ? ?
=?

 

( )

1

2

3

4

Condições de Contorno (Situação 2) 100, 00

0, 00           

1.000, 00

0, 00              

0, 00  

0, 00             

0, 00     

0, 00                  

x

y

x y

x y

s t

MPa

MPa

q m s

MPa

p MPa

MPa

q m s

?
?

? ?

? ?

&lt;

=?
?? ? = ??
? =?

= =?
? ? ?

=?
= =?

? ? ?
=?

? ?

5

0, 00   

0, 00

0, 00           

0, 00         

y

x

u m

q m s

u m

q m s

=?
?

=?
=?

? ? ?
=?  

Os parâmetros físicos do problema são definidos abaixo 

• 81, 00 10E MPa= ×  

• 0, 00? =  

• 
8

8

10 0

0 10
cm s

?

?

? ?
= ? ?
? ?

?  

• 31000, 00w kgf m? =  

A malha computacional utilizada na simulação será apresentada na Figura 8.27. O re-

finamento da malha foi feito visando otimizar o processo, para isso o maior refinamento ocor-

re na região de interesse, que compreende a região nas proximidada aplicação da carga. Para a 



91 

 

simulação realizada os elementos nas proximidades dos contornos mais distantes se mostra-

ram suficientes para transmitir os efeitos das condições de contorno à região de interesse. 

 

Figura 8.27. Problema de Schiffman – Malha computacional. 

 

 

Fonte: Elaborada pelo autor. 

 

Os parâmetros utilizados na simulação são  

 

• Fatores tempo avaliados: 0,10vT = ;  

• Fator tempo correspondente ao 0t : 0 0, 001vT =  

• Número de iterações correspondentes ao 0t :100, 00  

• Passo de tempo da simulação: 1,00t? =  

• Número máximo de iterações: 10.100, 00  

 

Os resultados obtidos foram comparados com os resultados da solução analítica de 

(Schiffman, Chen, &amp;amp; Jordan, 1969) apresentados no trabalho de (Cavalcanti, 2002). Nesse 



92 

 

trabalho é apresentada a expressão utilizada para a obtenção do fator tempo. A solução analí-

tica consiste na distribuição das pressões de fluido ao longo de 0x = , e nesse trabalho foi ana-

lisada para um 0,10vT = . A Figura 8.28 apresenta os resultados das pressões obtidas pelas 

duas situações, diferenciadas pelas condições de contorno, e a solução analítica. 

 

Figura 8.28. Problema de Schiffman – solução analítica e soluções numéricas das pressões de fluido 

ao longo de 0x =  ( )0 ,1 0vT = . 

 

Fonte: Elaborada pelo autor. 

 



93 

 

Como se pode observar, as soluções numéricas apresentam uma concordância com a 

solução analítica. É evidente que a situação1 se mostra mais próxima à solução analítica do 

que a situação2 na região onde há os maiores valores de pressões, porém até mesmo a situa-

ção2 apresentou resultados satisfatórios. 

A Figura 8.29 e a Figura 8.30 apresentam a configuração incial e a configuração de-

formada do domínio para o 0,10vT =  para a situação1 e a situação2, respectivamente. Os deta-

lhes dessas figuras são apresentados na Figura 8.31 e na Figura 8.32  e, como pode ser obser-

vado, mostra a influência da condição de contorno no deslocamento da superfície. A Figura 

8.31, em comparação com a Figura 8.32  apresenta, no bordo direito da face superior do do-

mínio, um deslocamento vertical mais expressivo. Esse efeito ocorre pois na situação1 há me-

nos possibilidades do meio se deformar em função das condições de contorno impostas. Em 

contrapartida a situação2, como apresentada na Figura 8.32, apresenta deslocamentos horizon-

tais que podem não condizer com uma situação real, pois essa consideração despreza total-

mente a rigidez de uma possível massa adjacente ao domínio. Para a situação de uma viga de 

fundação essa massa poderia ser a continuação da camada de solo. De forma análoga, a situa-

ção1 representa uma condição de rigidez infinita que na prática é impossível, porém se houver 

uma rocha de rigidez consideravelmente maior adjacente a essa aresta essa condição pode ser 

um boa simplificação. Os resultados dos deslocamentos foram ampliados em 5x104 vezes. 

Os resultados desses deslocamentos mostram que o analista numérico precisa de além 

de experiência na colocação das condições de contorno dos problemas, ter bom senso em re-

lação aos resultados sabendo que durante a interpretação os resultados foram obtidos a partir 

de métodos aproximados, onde são aplicadas simplificações de diversas naturezas, e as condi-

ções de contorno são representações aproximadas das manifestações reais. 

 

 

 

 

 

 



94 

 

Figura 8.29. Problema de Schiffman – malha inicial (azul) e deformada (vermelho) para a situação1 

( )0 ,1 0vT = . 

 

 

Fonte: Elaborada pelo autor. 

 

Figura 8.30. Problema de Schiffman – malha inicial (azul) e deformada (vermelho) para a situação2  

( )0 ,1 0vT = . 

 

 

Fonte: Elaborada pelo autor. 



95 

 

Figura 8.31. Problema de Schiffman – detalhe da malha inicial (azul) e deformada (vermelho) para a 

situação1  ( )0 ,1 0vT = . 

 

Fonte: Elaborada pelo autor. 

 

Figura 8.32. Problema de Schiffman – detalhes da malha inicial (azul) e da malha deformada (verme-

lho) para a situação2  ( )0 ,1 0vT = . 

 

Fonte: Elaborada pelo autor. 

 

A sequência da Figura 8.33 à Figura 8.36 apresenta os resultados das pressões de flui-

dos e tensões. Como podem ser observados há diferenças entre as duas situações porém os 

resultados apresentam uma boa concordância, e em particular na região de interesse. 

 



96 

 

Figura 8.33. Problema de Schiffman - Campo de pressões, (a) Situação1, (b) Situação2. 

 

 

 

 

 

 

 

 

(a) 

 

 

(b) 

 

Fonte: Elaborada pelo autor. 

 



97 

 

Figura 8.34. Problema de Schiffman - Campo de tensões normais na direção x, (a) Situação1, (b) Situ-

ação2. 

 

 

 

 

 

 

 

 

(a) 

 

 

(b)  

 

Fonte: Elaborada pelo autor. 

 

 



98 

 

Figura 8.35. Problema de Schiffman - Campo de tensões cisalhantes, (a) Malha1, (b) Malha2. 

 

 

 

 

 

 

 

 

(a) 

 

 

(b)  

 

Fonte: Elaborada pelo autor. 

 

 



99 

 

Figura 8.36. Problema de Schiffman - Campo de tensões normais na direção y, (a) Situação1, (b) Situ-

ação2. 

 

 

 

 

 

 

 

 

(a) 

 

 

(b)  

 

Fonte: Elaborada pelo autor. 



100 

 

 

8.5 ADENSAMENTO BIDIMENSIONAL DE MEIO HETEROGÊNEO E ANISOTRÓPICO 

 

Grande parte dos problemas poromecânicos são processos encontrados na natureza e 

se apresentam com características anisotrópicas e heterogêneas. Alguns desses exemplos são 

encontrados na engenharia geotécnica, na engenharia de reservatórios de petróleo e até na 

engenharia biomédica. Um dos grandes exemplos de meios anisotrópicos são os reservatórios 

de petróleo, que em geral possuem a permeabilidade vertical diferente da permeabilidade ho-

rizontal. Outro exemplo pode ser a diferença entre os tecidos do corpo que está sendo analisa-

do. 

Sendo assim, o desenvolvimento de simuladores que sejam capazes de simular pro-

blemas anisotrópicos e heterogêneos é de grande interesse para a indústria e centros de pes-

quisa. Com essa motivação Ai, Cao e Cheng (2010) apresentam a solução analítica para o 

adensamento de um solo estratificado em camadas horizontais, submetido ao carregamento de 

uma sapata de fundação contínua. 

O caso propriamente dito consiste em um meio poroso, sujeito a um carregamento na 

face superior em uma faixa do domínio. O meio poroso é composto por três camadas horizon-

tais que possuem valores diferentes de permeabilidades e módulo de elasticidade. O coeficien-

te de Poisson é igual para todo o meio. As permeabilidades nas direções x
 
e y são diferentes 

para cada camada. A Figura 8.37 apresenta a geometria e a definição dos contornos e domí-

nios. 

As condições iniciais e de contorno do problema são dadas abaixo 

( )

1 2 3 4 5

Condições iniciais 0, 00

0, 00  
, , , ,  e 

0, 00             
x y

t s

u u MPa

p MPa

=

= =?
? ? ? ? ? ? ? ?

=?

 



101 

 

( )1

1 1

2

3

4

Condições de Contorno 0, 00 7, 50 10

0, 00           

1.000, 00

7, 50 10

0, 00              

0, 00  

0, 00             

0, 00     

0, 00

0, 00   

x

y

x y

x

y

s t s

MPa

MPa

t s

q m s

MPa

p MPa

u m

p MPa

u m

?
?

? ?

?

?

&amp;lt;? ×

=?
?? ??? ? =?

? ×?
? =?

= =?
? ? ?

=?
=?

? ? ?
=?
=

? ?

5

0, 00

0, 00           

0, 00         
x

q m s

u m

q m s

?
?

=?
=?

? ? ?
=?

 

( )1

1

2

3

4

5

Condições de Contorno 7,50 10

0, 00           

1.000, 00

0, 00              

0, 00  

0, 00             

0, 00     

0, 00

0, 00   

0, 00

0, 00

x

y

x y

x

y

x

t s

MPa

MPa

q m s

MPa

p MPa

u m

p MPa

u m

q m s

u

?
?

? ?

?&gt; ×

=?
?? ? = ??
? =?

= =?
? ? ?

=?
=?

? ? ?
=?
=?

? ? ?
=?
=

? ?
          

0, 00         

m

q m s

?
?

=?

 

Os parâmetros físicos são definidos abaixo 

• 7 7 71 2 310 , 2, 00 10  e 4, 00 10E MPa E MPa E MPa= = × = ×  

• 0, 00? =  

• 31000, 00w kgf m? =  

• Permeabilidades para a Situação 1, onde a razão entre as permeabilidades horizontais e 

verticais é igual a 1. 

7

1 7

4 10 0

0 4 10
cm s

?

?

? ?×
= ? ?

×? ?
?

 
7

2 7

2 10 0

0 2 10
cm s

?

?

? ?×
= ? ?

×? ?
?  



102 

 

7

3 7

10 0

0 10
cm s

?

?

? ?
= ? ?
? ?

?  

• Permeabilidades para a Situação 2, onde a razão entre as permeabilidades horizontais e 

verticais é igual a 5. 

7

1 7

20 10 0

0 4 10
cm s

?

?

? ?×
= ? ?

×? ?
?

 
7

2 7

10 10 0

0 2 10
cm s

?

?

? ?×
= ? ?

×? ?
?  

7

3 7

5 10 0

0 10
cm s

?

?

? ?×
= ? ?
? ?

?  

• Permeabilidades para a Situação 3, onde a razão entre as permeabilidades horizontais e 

verticais é igual a 50. 

7

1 7

200 10 0

0 4 10
cm s

?

?

? ?×
= ? ?

×? ?
?

 
7

2 7

100 10 0

0 2 10
cm s

?

?

? ?×
= ? ?

×? ?
?  

7

3 7

50 10 0

0 10
cm s

?

?

? ?×
= ? ?
? ?

?

 

Como pode ser verificada a partir da definição das permeabilidades de cada região do 

domínio a anisotropia nas camadas vai se tornando cada vez mais expressiva. A forma quanti-

tativa de tratar dessa anisotropia será definida como razão de anisotropia ( )r  que é definida 

como 

hi

vi

k
r

k
=

 

 

           (8.6) 

onde  e hi vik k são, respectivamente, as permeabilidades horizontais e verticais da camada

 

i  

 

 

 

 



103 

 

Figura 8.37. Problema Heterogêneo e Anisotrópico – Geometria, contornos e domínios. 

 

Fonte: Elaborada pelo autor. 

 

Para as análises foi utilizada a malha computacional apresentada na Figura 8.38. 

 

Figura 8.38. Problema Heterogêneo e Anisotrópico – Malha computacional. 

 

 

Fonte: Elaborada pelo autor. 

 

 



104 

 

A solução analítica assim como o fator tempo são apresentados no trabalho de Ai, Cao 

e Cheng (2010), onde é feito o desenvolvimento de uma solução analítica. Em seu trabalho 

Ai, Cao e Cheng (2010) também apresenta os resultados obtidos em um modelo tridimensio-

nal desenvolvido no ABAQUS®. Esses resultados serão comparados com os obtidos no códi-

go desenvolvido.   

A Figura 8.39, Figura 8.40 e Figura 8.41 apresentam os resultados para as pressões ao 

longo da reta 0x =  o fator tempo 0,10vT =  para as razões de anisotropia 1,  5 e  50r r r= = =  

respectivamente. 

 

Figura 8.39. Problema Heterogêneo e Anisotrópico – solução analítica e soluções numéricas 

das pressões de fluido ao longo de  0x =  para 1r =  ( )0 ,1 0vT = . 

 

Fonte: Elaborada pelo autor. 

 

 

 

 



105 

 

Figura 8.40. Problema Heterogêneo e Anisotrópico – solução analítica e soluções numéricas das pres-

sões de fluido ao longo de  0x =  para 5r =  ( )0 ,1 0vT = . 

 

Fonte: Elaborada pelo autor. 

De acordo com os resultados apresentados pode-se perceber que há, de fato, uma dife-

rença um tanto significativa entre as soluções apresentadas no próprio trabalho de Ai, Cao e 

Cheng (2010). Porém os resultados apresentados pelo código desenvolvido apresentam valo-

res e comportamento intermediário entre os dois. Sendo assim, esse exemplo além de apresen-

tar o comportamento do método serve para mostrar que o tipo de modelo utilizado para a a-

proximação de uma situação real pode afetar significativamente o resultado e tem que ser es-

colhido com cautela por parte de quem aplica tais métodos. Mesmo com as considerações 

sobre as diferenças verificadas nas soluções pode-se dizer que o resultado obtido foi satisfató-

rio, comprovando a eficácia do método frente à problemas de natureza heterogênea e aniso-

trópica. 

 

 

 

 



106 

 

Figura 8.41. Problema Heterogêneo e Anisotrópico – solução analítica e soluções numéricas das pres-

sões de fluido ao longo de  0x =  para 50r =  ( )0 ,1 0vT = . 

 

Fonte: Elaborada pelo autor. 

 

A sequência da Figura 8.42  à Figura 8.44  apresenta as deformações, em termos da 

malha computacional, para cada razão de anisotropia. Os deslocamentos foram ampiados em 

100 vezes para a configuração deformada. 

Figura 8.42. Problema Heterogêneo e Anisotrópico – detalhes da malha inicial (azul) e da 

malha deformada (vermelho) para 1r = ( )0 ,1 0vT =  . 

 

 

Fonte: Elaborada pelo autor. 



107 

 

Figura 8.43. Problema Heterogêneo e Anisotrópico – detalhes da malha inicial (azul) e da malha de-

formada (vermelho) para  5r = ( )0 ,1 0vT = . 

 

 

Fonte: Elaborada pelo autor. 

 

Figura 8.44. Problema Heterogêneo e Anisotrópico – detalhes da malha inicial (azul) e da malha de-

formada (vermelho) para 5r = ( )0 ,1 0vT = . 

 

 

Fonte: Elaborada pelo autor. 

 

A Figura 8.45 apresenta o resutaldo das pressões de fluido ao longo do domínio para 

as razões de anisotropia utilizadas. Como pode ser observado, para um maior valor de razão 

de anisotropia maior a dissipação da pressão de fluido. Isso é esperado devido ao fato da per-

meabilidade assumir valores maiores nessa situação. 

 

 



108 

 

Figura 8.45. Adensamento bidimensional heterogêneo e anisotrópico - Campo de pressões, (a) r=1, (b) 

r=5, (c), r=50. 

 

 

 

 

 

(a) 

 

 

 

(b) 

 

 

 

(c) 

 

Fonte: Elaborada pelo autor. 

  



109 

 

Figura 8.46. Adensamento bidimensional heterogêneo e anisotrópico - Campo de tensões normais na 

direção x, (a) r=1, (b) r=5, (c), r=50. 

 

 

 

 

 

(a) 

 

 

 

(b) 

 

 

 

(c) 

 

Fonte: Elaborada pelo autor. 

 

  



110 

 

Figura 8.47. Adensamento bidimensional heterogêneo e anisotrópico - Campo de tensões cisalhantes, 

(a) r=1, (b) r=5, (c), r=50. 

 

 

 

 

 

 

(a) 

 

 

 

(b) 

 

 

 

(c)  

 

Fonte: Elaborada pelo autor. 

 

 

 



111 

 

Figura 8.48. Adensamento bidimensional heterogêneo e anisotrópico - Campo de tensões normais na 

direção y, (a) r=1, (b) r=5, (c), r=50. 

 

 

 

 

 

 

(a) 

 

 

 

(b) 

 

 

 

(c) 

 

Fonte: Elaborada pelo autor. 

 

 

 



112 

 

 

A partir da análise dos resultados é possível verificar a capacidade do código desenvolvido 

em simular situações normalmente encontradas na prática da engenharia. Também é possível verificar 

que a definiação da modelagem implica em um importante aspecto da simulação. Além das aproxima-

ções inerentes às formulações numéricas tem-se que levar em conta as características de cada conside-

ração feita, como é o caso do próprio exemplo onde há uma modelgam tridimensional, uma modela-

gem numérica bidimensional com um domínio finito e uma modelagem analítica com um domínio 

infinito. 

  



113 

 

9 CONCLUSÕES 
 

De acordo com os resultados apresentados é possível verificar que o código computa-

cional desenvolvido foi validado, sendo capaz de solucionar problemas poroelásticos sujeitos 

a restrições apresentadas ao longo do trabalho. Esse fato é observado com a reprodução, de 

maneira satisfatória, das soluções analíticas avaliadas. 

Com o problema de Schiffman foi possível verificar a influência nos resultados obti-

dos em situações onde ocorrem domínios infinitos. Foi observado que é necessária a avaliação 

das condições de contorno impostas quando uma pequena variação na solução é significativa 

porém, apesar das diferenças apresentadas, e por se tratar de uma formulação aproximada, os 

resultados foram satisfatórios, validando o código e a formulação para esse exemplo. 

 Também é verificado, principalmente em uma situação mais complexa, como é o caso 

heterogêneo e anisotrópico, que apesar da eficácia do código e da formulação, o uso do bom 

senso na analíse de situações reais é imprescindível. As restrições e considerações impostas à 

formulação numérica implementada devem ser conhecidas no processo de modelagem pois 

vão afetar de forma significativa os resultados. Pode ser verificado que o próprio modelo uti-

lizado, devido à suas considerações, afeta a solução. Esse fato foi observado com bastante 

proeminência no exemplo heterogêneo e anisotrópico, onde a solução analítica, dentro das 

suas limitações, teve uma diferença significativa com as soluções do ABAQUS® e do código 

desenvolvido. Tal diferença é aceitável devido à sua natureza, que se mostra um tanto com-

plexo e das diferenças entre as considerações utilizadas em cada método. 

  



114 

 

10 SUJESTÕES PARA TRABALHOS FUTUROS 
 

Podem ser tomadados como sujestões para trabalhos futuros os seguintes tópicos: 

• Implementação de elementos de ordem maiores que as consideradas para esse traba-

lho; 

• Introdução de elementos quadrilaterais e com outras geometrias; 

• Incorporação da plasticidade no problema mecânico; 

• Discretização temporaral por uma formulação do MDF com controle de passo de tem-

po. 

 

 

 

 

 

 
 

 

 

 

 

 

  



115 

 

REFERÊNCIAS 
 

AI, Zhi Yong; CAO, Guo Jun; CHENG, Yi Chong. Analytical layer-element solutions of Bi-

ot's consolidation with anisotropic permeability and incompressible fluid and solod constitu-

ents. Applied Mathematical Modelling.  p. 4817-4829.  2012.  

AMIRI, Shahin Nayyeri; HAJALI, Masood; ESMAEILY, Asad. Consolidation of a Layer 

under a Strip Loading and Resting on an Impermeable Foundation. Journal Of Earth Scien-

ces And Geotechnical Engineering. p. 111-125. 2014.  

BERLIOUX, Arnaud. Building models with GOCAD. Stanford Exploration Project. p. 1-

607. 15 maio 2001. 

BIOT, Maurice Anthony. General Theory of Three-Dimensional Consolidation. Journal Of 

Applied Physics.  p. 155-164. 1941. 

BIOT, Maurice Anthony. Theory of Elasticity and Consolidation for a Porous Anisotropic 

Media. Journal Of Applied Physics. Recife, p. 182-185. jan. 1955. 

BIOT, Maurice Anthony. Nonlinear and Semilinear Rheology of Porous Solid. Journal Of 

Geophysical Research. Recife, p. 4924-4937. jan. 1973. 

BIOT, Maurice Anthony. Theory of Deformation of a Porous Viscoelastic Anisotropic So-

lid. Journal Of Applied Physics. Recife, p. 459-467. jan. 1956. 

 BIOT, Maurice Anthony; WILLIS, D. G.. The Elastic Coefficientes of the Theory of Conso-

lidation. Journal Of Applied Mechanics. p. 594-601. 1957. 

BOOKER, J. R.. The consolidation of a finite layer subject to surface loading. International 

Journal Of Solids And Structures. p. 1053-1065. 10 dez. 1973. 

 BORGES, Luiz Eduardo. Phyton para desenvolvedores. 2. ed. Rio de Janeiro: Edição do 

Autor, 2010. 



116 

 

BROWN, G. O.. Henry Darcy and the making of a law. Water Resources Research, Recife, 

v. 38, n. 7. 2002. 

CAMPOS, Marco Donisete de; SILVA, João Batista Campos. O método dos elementos fini-

tos aplicado à simulação numérica de escoamentos de fluidos. III Bienal da Sbm. 2006. 

CAPUTO, Homero Pinto. Mecânica dos solos e suas aplicações. 6. ed. Rio de Janeiro: Ltc, 

1998. 

CARMO, L. V.; MARQUES, D. M.; THOMPSON, R. L.. Modelos para escoamentos de flui-

dos não newtonianos em meios porosos. Vi Congresso Nacional de Engenharia Mecânica, 

Campina Grande, p.1-2, ago. 2010. 

CARSLAW, H. S.; JAEGER., J. C. Operational Methods in Applied Mathema-

tics. London: Oxford University Press, 1948. 

CAVALCANTI, Maria do Carmo Reis. Análise por Elementos de Contorno de Meios Po-

ro-elásticos Saturados pela Teoria de Biot. 2006. 1 v. Tese (Doutorado) - Curso de Enge-

nharia Civil, Coppe, Universidade Federal do Rio de Janeiro, Rio de Janeiro, 2006. 

CLOUGH, Ray W.. The finite element method in plane stress analysis. 2nd Conference On 

Electronic Computation: sponsored by the Committee on Electronic Computation, Structu-

ral Division, Pittsburgh, p.345-378, set. 1960. 

CMNE. GiD: Reference Manual. Recife, 2016. 

 COMPUTER MODELLING GROUP LTD. Training Course Catalogue. Cmg, 2013. 

COUSSY, Olivier. Poromechanics. Marne-la-vallée: John Wiley &amp;amp; Sons, 2004. 

CRYER, C. W.. A Comparison od the Three-Dimensional Consolidation Theories of Biot and 

Terzaghi. The Quarterly Journal Of Mechanics And Applied Mathematics, Recife, v. 16, 

n. 1, p.401-412, jan. 1963. 

COURANT, Richard. Variational Methods for the Solution of Problems of Equilibrium and 

Vibrations. Bulletin Of The American Mathematical Society, v. 49, p.1-23, 1943. 



117 

 

ECKEL, Bruce. Guia do Usuáriodo em C++. Recife: Makron Books, 1991. 

FERRER, Harry et al. Fortran Estruturado. Recife: Guanabara Koogan, 1992. 

FARENZENA, B. A.; HAUSER, E. B.. Método de Rayleight-Ritz - Fundamentos Matemáti-

cos e Aplicações. X Salão de Iniciação Científica Pucrs, Porto Alegre, v. 1, n. 1, p.1-1, jan. 

2009. 

FERREIRA, Francisco Henrique. Uma Implementação Numérica para a Solução de Pro-

blemas de Poroelasticidade. 2010. 1 v. Dissertação (Mestrado) - Curso de Engenharia Civil, 

Pontífica Universidade Católica do Rio de Janeiro, Rio de Janeiro, 2010. 

GEUZAINE, Christophe; REMACLE, Jean-françois. Gmsh Reference Manual: The docu-

mentation for Gmsh 3.0. Recife: Copyright, 2017. 

GIBSON, R. E.; MCNAMEE, J.. Plane strain and axially symmetric problems of the consoli-

dation of a semi-infinite cla stratum. The Quarterly Journal Of Mechanics And Applied 

Mathematics.  p. 210-227. 1960. 

GIBSON, R. E.; MCNAMEE, J.. The consolidation settlement of a half-space under a load 

uniformly distributed over a rectangular area. Proc. 4th Icsmfe.  p. 297-299. 1957. 

GIBSON, R. E.; MCNAMEE, J.. Displacement Function and linear transforms applied to 

diffusion through porous elast media. The Quarterly Journal Of Mechanics And Applied 

Mathematics. Recife, p. 98-111. 1 jan. 1960. 

JIA-DONG, Zheng et al. The application of the finite element method to solving Biot's conso-

lidation equation. Applied Mathematics And Mechanics. p. 857-871. 1982. 

LANDIM, Paulo M. Barbosa; MONTEIRO, Rubens Caldeira; CORSI, Alessandra Cristi-

na. INTRODUÇÃO À CONFECÇÃO DE MAPAS PELO SOFTWARE SURFER. Rio 

Claro: Unesp/rio Claro, 2002. 

Llnl. VisIt User’s Manual. Lawrence: Department Of Energy By Lawrence Livermore Nati-

onal Laboratory, 2005. 



118 

 

LÓPEZ, Camilo Andrés Villabona. Análise pelo método dos elementos finitos da distribui-

ção de tensões em componentes protéticos posicionados em implantes com conexão cone 

morse na região anterior da maxila. 2012. 119 f. Dissertação (Mestrado) - Curso de Odon-

tologia, Universidade de São Paulo, Ribeirão Preto, 2012. 

LOTTI, Raquel S. et al. Aplicabilidade científica do método dos elementos finitos. A Dental 

Press Ortodon Ortop Facil, Maringá, v. 11, n. 2, p.35-43, abr. 2006. 

MANDEL, J.. Consolidation des Sols (Etude Mathematique). Geotechnique.  p. 287-299. 

1953. 

PASTALLE, SkbastÜ. Olivella. NONISOTHERMAL MULTIPHASE FLOW OF BRINE 

AND GAS THROUGH SALINE MEDIA. 1995. 123 f. Tese (Doutorado) - Curso de En-

ginyers de Camins, Universitat Politecnica de Catalunya, Barcelona, 1995. 

PENA, Daniel Ricardo Izquierdo. Método de diferenças finitas generalizadas por mínimos 

quadrados. 2003. 1 v. Dissertação (Mestrado) - Curso de Ciências de Computação e Mate-

mática Computacional, Universidade de São Paulo, São Carlos, 2003. 

PHILLIPS, Phillip Joseph. Finite Element Methods in Linear Poroelasticity: Theoretical 

and Computational Results. 2005. 1 v. Dissertação (Mestrado), The University Of Texas At 

Austin, 2005. 

PIZZOL, Alessandro dal. Uma metodologia unificada empregando o método dos volumes 

finitos para a solução acoplada do escoamento e da geomecânica em meios porosos.. Dis-

sertação (Mestrado) - Curso de Engenharia Mecânica, Universidade Federal de Santa Catari-

na, Florianopólis, 2014. 

RIBEIRO, Gustavo Gondran. Volumes finitos baseado em elementos para problemas de 

poroelasticidade. 2016. 196 f. Tese (Doutorado) - Curso de Engenharia Mecânica, Universi-

dade Federal de Santa Catarina, Florianopólis, 2016. 

SANTOS, João Paulo Lima. Estratégias adaptativas para formulações mistas em elemen-

tos finitos aplicadas a modelos reológicos viscoelásticos e modelos lineares incompressí-

veis. 2011. 1 v. Tese (Doutorado) - Curso de Engenharia Civil, Coppe, Universidade Federal 

do Rio de Janeiro, Rio de Janeiro, 2011. 



119 

 

SCHIFFMAN, L. R.; CHEN, A. T.; JORDAN, J. C.. An analyses of Consolidation Theori-

es. Journal Of The Soil Mechanics And Foundation Division Asce. p. 285-612. 1969. 

SCHLUMBERGER. ECLIPSE 100. Schlumberger Information Solutions, 2007. 

SINGH, Sarva Jit; RANI, Sunita; KUMAR, Raman. Consolidation of a Poroelastic Half-

Space. Mathematical Journal Of Interdisciplinary Sciences. p. 1-18. set. 2013. 

SIQUEIRA, Cézar Augusto Monteiro. Um sistema orientado por objetos para análise nu-

mérica da poroelasticidade acoplada pela técnica dos elementos finitos. 1995. 132 f. Dis-

sertação (Mestrado) - Curso de Engenharia de Petróleo, Departamento de Engenharia de Pe-

tróleo, Universidade Estadual de Campinas, Campinas, 1995. 

SLOAN, Scott W.; ABBO, Andrew J.. Biot consolidation analysis with automatic time step-

ping and error control part 1: theory and implementation. International Journal For Nume-

rical And Analytical Methods In Geomechanics. p. 467-492. 1999.  

SLOAN, Scott W.; ABBO, Andrew J.. Biot consolidation analysis with automatic time step-

ping and error control part 2: applications. International Journal For Numerical And A-

nalytical Methods In Geomechanics. p. 493-529. 1999.  

TERZAGHI, K.. Dir Berenchnung der Durchlassigkeitsziffer des Tones aus dem Verlaug 

Hidro-dynamischen spannugsercheinungen. Mathematish Naturwissenchaftliche Klasse.  p. 

125-138. 1923. 

TERZAGHI, K.. Theoretical Soil Mechanics. John Wiley &amp;amp; Sons. Recife, p. 1-2. jan. 1943. 

TERZAGHI, K.; FROHLICH, K. O.. Theorie der Setzung Ven Tonschiten. Franz Deutic-

ke. Recife, p. 1-2. jan. 1936. 

THE MATH INC. MATLAB: User's Guide. Recife, 1992. 

WANG, Jianguo; FANG, Shisheng. State space solution of non-axisymmetric Biot consolida-

tion problem for multilayered porous media. International Journal Of Engineering Science, 

v. 41, p.1799-1813. 2003.  



120 

 

ZHANG, Chao; ZARROUK, Sadiq J.; ARCHER, Rosalind. Development of a fully coupled 

flow-geomechanics simulator for flow in saturated porous media. ICCM 2015. Auckland, 

New Zealand, 2015. 

 
 

 

  



121 

 

APÊNDICE A 
 

Esse apêndice apresenta um esquema do código computacional desenvolvido e suas funções, 
listadas abaixo. 

As funções de cada rotina são apresentadas abaixo: 
 

• Main_MefM_Biot.m 

 Script principal, onde ocorre a entrada dos dados das simulações e o inicio do proces-
samento. 

• MefBiot.m 

Essa função organiza a relação entre os dados do pré-processamento, processamento e 
pós-processamento.  

• PreprocessoBiot.m 

 Organiza a relação entre o pré-processamento da geometria e da malha. 

• PreprocessorGeo.m 
 
Faz a leitura do arquivo .geo e constrói matrizes com as informações desse arquivo 
que serão utilizadas no processamento. 
 

• PreprocessorMsh.m 

Faz a leitura do arquivo .msh e constrói matrizes com as informações desse arquivo 
que serão utilizadas no processamento. 

• ProcessoBiot.m 

Recebe os dados do pré-processamento e realiza todas as operações do processamento 
juntamente com suas funções auxiliares. 

• GlPressure.m 

Essa função organiza a numeração dos graus de liberdade mecânicos e hidráulicos. 

• MontMatSist.m 

Realiza a montagem das matrizes global do sistema, construída a partir das matrizes 
locais. 

• Calc_Matrizes_locais.m 

Constrói as matrizes locais para cada elemento e é acionada dentro de um loop na fun-
ção MontMatSist.m 



122 

 

• Tens_Gauss_Point.m 
 
Realiza a integração numérica para a construção de cada matriz local. 
 

• ConstTermInd.m 

Constrói o termo independente do sistema global de equações 

• CondContornoConsolidation.m 

 São introduzidas as condições de contorno no vetor e matriz global do sistema 

• ElasticConsolidation.m 

 Recebe os dados necessários para a solução temporal do sistema de equações 

• ECTThetaMethod.m 

 Realiza o avanço no tempo do sistema de equações pelo Método ?  

• PosprocessoBiot.m 

Recebe os resultados do processamento e organiza para as funções específicas para o 
processamento das variáveis; salva arquivos de texto com as matrizes e vetores utili-
zadas no processamento. 

• PosImprimir.m 

 Organiza os dados para o pós-processamento das variáveis mecânicas e hidráulicas 

• PosImprimirHid.m 

 Realiza o pós processamento das variáveis hidráulicas (construção de imagens). 

• PosImprimirMec.m 

Realiza o pós processamento das variáveis mecânicas (construção de imagens). 

 

Abaixo é apresentado um esquema dos rotinas e como elas se relacionam. O sobrescri-
to apresentado em cada rotina é referente à sequência de processamento que segue cada pro-
blema analisado. 



123 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

MefBiot.m2 

PreprocessoBiot.m3 

PreprocessorGeo.m4 

PreprocessorMsh.m5 

ProcessoBiot.m6 
PosprocessoBiot.m14 

MontMatSist.m8 

CondContorno.m11 

ConstTermInd.m10 

ECTThetaMethod.m13 

ElasticConsolidation.m12 

Calc_Matrizes_locais.m8 

PosImprimir.m15 

PosImprimirHid.m16 

PosImprimirMec.m17 

Tens_Gauss_Point.m9 

Main_MefM_Biot.m1 

GlPressure.m7 

CondContornoConsolidation.m10 



124 

 

As rotinas são apresentadas abaixo:  

Main_MefM_Biot.m 

%-------------------------------------------------------------------------% 
%-------------------------------------------------------------------------% 
%                                                                         % 
%           PROGRAMA DE PÓS GRADUAÇÃO EM ENGENHARIA CIVIL - UFPE          % 
%                                                                         % 
%-------------------------------------------------------------------------% 
%-------------------------------------------------------------------------% 
  
%-------------------------------------------------------------------------% 
%                              LMCG - UFPE                                % 
%-------------------------------------------------------------------------% 
% ÁREA DE CONCENTRAÇÃO: GERENCIAMENTO E SIMULAÇÃO DE RESERVATÓRIOS DE     % 
% PETRÓLEO                                                                % 
% ALUNO: LUCÍOLO VICTOR MAGALHÃES E SILVA                                 % 
% PROF. ORIENTADOR: IVALDO DÁRIO PONTES SILVA FILHO                       % 
%-------------------------------------------------------------------------% 
  
%-------------------------------------------------------------------------% 
%                              ROTINA                                     % 
%-------------------------------------------------------------------------% 
% TÍTULO: MÉTODO DOS ELEMENTOS FINITOS MISTOS PARA A SOLUÇÃO DO PROBLEMA  % 
% DE ACOMPLAMENTO GEOMECÂNICO DADO PELA TEORIA DE BOIT                    % 
% CRIAÇÃO: 20-08-2015                                                     % 
% ÚLTIMA MODIFICAÇÃO: 16-10-2016                                          % 
% VERSÃO V1.1                                                             % 
%-------------------------------------------------------------------------% 
  
clc  
clear all 
  
%-------------------------------------------------------------------------% 
%                         ENTRADA DE DADOS                                % 
%-------------------------------------------------------------------------% 
% OBS: Nessa seção serão configuradas as características do problema que  % 
% será avaliado.                                                          % 
%-------------------------------------------------------------------------% 
  
%-------------------------------------------------------------------------% 
% /!\ O nome dos arquivos tem que ser salvos com as devidas extensões     % 
% por vezes são salvos como arquivos .txt e isso precisa ser verificado/!\% 
%-------------------------------------------------------------------------% 
  
% filenamegeo 
% 
% Variável com o nome do arquivo '.geo' referente a geometria do problema. 
  
  
filenamegeo = 'Sapata_Geo4.geo'; 
  
% filenamemsh                                                                  
%                                                                           
% Variável com o nome do arquivo '.msh' referente a malha do problema.  
                                                                            
filenamemsh = 'Sapata_Geo4_Malha1.msh'; 
                                 



125 

 

%-------------------------------------------------------------------------% 
%-------------------------------------------------------------------------% 
%                            ENTRADA DE DADOS                             % 
%-------------------------------------------------------------------------% 
%-------------------------------------------------------------------------% 
  
%-------------------------------------------------------------------------% 
%                       Tipo de problema a ser rodado                     % 
%-------------------------------------------------------------------------% 
  
% TipProb 
% 
% Flag para o tipo de problema a ser resolvido. 
% A formatação dessa variável é a seguinte: 
% 
% 
% TipProb = 1 - Problema Mecânico Elástico Linerar. 
% TipProb = 2 - Problema Hidráuico. 
% TipProb = 3 - Problema Acoplado(Hidrogeomecânico) Elástico. 
  
TipProb = 3; 
  
% Units 
% 
% Esse flag é relacionado à utilização ou não das unidades sugeridas para 
% rodar o caso. 
% 
% Formatação: 
% 
% Units = 1 - As unidade utilizadas são as seguintes: 
% 
% Módulo de Elasticidade - Pa (Pascal). 
% Permeabilidade - cm/s (Centímetro por segundo) 
% Tempo - s (Segundos). 
  
  
% CONFIGURAÇÕES PARA O PROBLEMA DE ANDESAMENTO 
  
    % MetConc 
    % 
    % Variável que indica o método de solução do problema de consolidação. 
    % 
    % Formatação: 
    % 
    % MetCon = 'Theta' - Será utilizado  o Método Theta. 
    % MetCon = 'T&amp;amp;G'   - Será utilizado o método de Thomas and Gladwell. 
  
    MetCon = 'Theta'; 
     
    % Nmaxint 
    % 
    % Variável que fornece o número máximo de iterações. 
     
    Nmaxint = 10000+100; 
     
    % DeltaT 
    % 
    % Variável que fornece o interaço de tempo para solução da 
    % integração 



126 

 

              
    DeltaT =  1; 
             
    % Theta 
    % 
    % Valor de Theta para o método Theta 
     
    Theta = 1; 
     
    % iaval 
    % 
    % Iteração avaliada para preprocessamento ao longo do eixo y. 
     
    iaval = [10 100 1000]*10 + 100; 
     
    % Nint0 
    % 
    % Essa variável contém o número de iterações necessárias para que seja 
    % atingido o valor total da força aplicada. 
  
    Nint0 = 100; 
     
     
%-------------------------------------------------------------------------% 
%                Configurações relativas ao pós-processamento             % 
%-------------------------------------------------------------------------% 
  
% fator 
% 
% Essa variável define o fator relativo à impressão dos deslocamentos 
% nodais 
  
fator = 50000; 
  
% Imprimir_Tens 
% 
% Essa variável indica as tensões que serão impressas: 
% 1 - imprime 
% 0 - não imprime 
% 
% Imprimir_Tens(1) - Tensões em X 
% Imprimir_Tens(2) - Tensões em Y 
% Imprimir_Tens(3) - Tensões em XY 
  
Imprimir_Tens = [ 1 1 1 ]; 
  
% Imprimir_Desloc 
% 
% 1 - Imprime os deslocamentos 
% 0 - Não imprime os deslocamentos  
  
Imprimir_Desloc = 1; 
  
% Imprimir_Press 
% 
% 1 - Imprime as presões 
% 0 - Não imprime as presões  
  



127 

 

Imprimir_Pres = 1; 
  
%-------------------------------------------------------------------------% 
% Impressão das pressões ao longo de uma superfície.                      % 
%-------------------------------------------------------------------------% 
  
% Imprimir_Px 
% 
% 1 - Imprime as pressões ao longo de x 
% 0 - Não imprime as pressões ao longo de x 
  
Imprimir_Px = 1; 
  
% As superfícies que serão plotadas, associadas às pressões serão entre 
% xpinf e xpsup 
  
xpinf = 0-0.01; 
  
xpsup = 0.0+0.01; 
  
% Imprimir_Py 
% 
% 1 - Imprime as pressões ao longo de y 
% 0 - Não imprime as pressões ao longo de y 
  
Imprimir_Py = 1; 
  
% As superfícies que serão plotadas, associadas às pressões serão entre 
% ypinf e ypsup 
  
ypinf = 0-0.01; 
  
ypsup = +0.01; 
  
%-------------------------------------------------------------------------% 
% Plotagem dos deslocamentos ao longo de uma superfície.                  % 
%-------------------------------------------------------------------------% 
  
% As variáveis abaixo definem a plotagem dos deslocamentos ao longo de 
% superfícies definidas por xinf e xsup ou yinf e ysup 
  
% Imprime_Desloc_x 
% 
% 1 - Imprime os deslocamentos ao longo das superfície x. 
% 0 - Não mprime os deslocamentos ao longo das superfície x. 
  
Imprimir_Desloc_x = 1; 
  
% xinf, xsup 
% 
% A superfície associada ao Imprime_Desloc_x é definida como sendo os 
% pontos ente xinf e xsup 
  
xinf = 0; 
  
xsup = 10; 
  
% Imprime_Desloc_y 



128 

 

% 
% 1 - Imprime os deslocamentos ao longo das superfície y. 
% 0 - Não mprime os deslocamentos ao longo das superfície y. 
  
Imprimir_Desloc_y = 1; 
  
% yinf, ysup 
% 
% A superfície associada ao Imprime_Desloc_y é definida como sendo os 
% pontos ente xinf e xsup 
  
ysup = 0+0.01; 
  
yinf = 0-0.01; 
  
%-------------------------------------------------------------------------% 
%                        Características dos planos                       % 
%-------------------------------------------------------------------------% 
%                                                                         %        
% Entrada de dados que define as características associadas a regiões da  % 
% malha. Essas características são:                                       %  
% - Módulo de Elasticidade                                                % 
% - Coeficiente de Poisson                                                % 
% - Força de Corpo                                                        % 
%                                                                         % 
% DadosPlan - Variável que identifica as características associadas a     % 
% região do plano.                                                        % 
%                                                                         % 
% Formatação:                                                             % 
%                                                                         % 
% DadosPlan(i,:) = [ Ex  Ey  vxy  kx  ky kxy  bx  by  p0 yw ], onde:      % 
%                                                                         % 
% 'Ex' é o Módulo de Elasticidade para a direçao x associado ao grupo     % 
% físico.                                                                 % 
% 'Ey' é o Módulo de Elasticidade para a direçao y associado ao grupo     % 
% físico.                                                                 % 
% 'Ey' é o Módulo de Elasticidade associado ao grupo físico.              % 
% 'vxy' é o Coeficiente de Poisson associado ao grupo físico.             % 
% 'kxx', 'kyy' e 'kxy' são os valores de permeabilidades.                 % 
% 'bx' e 'by' são, respectivamente, as componentes x e y associadas ao    % 
% grupo físico.                                                           % 
% 'p0' é a poropressão inicial para o grupo físico avaliado.              % 
% 'yw' é o peso específico do material.                                   % 
%                                                                         %  
% Obs: os grupos físicos precisam ser preenchidos de acordo com a ordem   %  
% que foram estabelecidos.                                                % 
%-------------------------------------------------------------------------% 
DadosPlan = [ 
%  ----------------------------------------------------------------------- 
% |  Ex  |   Ey  |  vxy  |  kx  |  ky  |  kxy |  bx  |  by  | p0  |  yw 
%  ----------------------------------------------------------------------- 
  
    10^8  , 10^8  , 0.0    10^-10,  10^-10,  0   ,  0   ,  0   ,  0  ,1000 
  
 ]; 
%-------------------------------------------------------------------------% 
%                 Condições de contorno nos pontos                        % 
%-------------------------------------------------------------------------% 
%                                                                         % 
% Entrada das condições de contorno para os pontos da malha, essas        % 



129 

 

% entradas são:                                                           % 
% - Força concentrada no nó                                               % 
% - Deslocamento prescrito                                                % 
% - Restrição no nó                                                       % 
%                                                                         % 
% CCPoint - Variável que apresenta as condições de contorno associada ao  % 
% ponto.                                                                  % 
%                                                                         % 
% Formatação:                                                             % 
%                                                                         % 
% CCPoint(i,:) = [ Fx Fy ux uy Kx Ky v p y], onde:                        % 
%                                                                         % 
% 'Fx' e 'Fy' são, respectivamente, as forças concentradas nas direções x %  
% e y do  grupo físico.                                                   %  
% 'ux' e 'uy' são, respectivamente, os deslocamentos prescritos nas       % 
% direções x e y do  grupo físico.                                        % 
% 'Kx' e 'Ky' são, respectivamente, os flags associados às restrições dos % 
% graus de liberdade do ponto. Se o flag for igual a 1 o grau de liberdade% 
% está restringido, se for outro valor ele está livre.                    % 
% 'v' é a vazão concentrada diretamente no nó                             % 
% 'p' é a pressão                                                         % 
% 'y' é o flag associado à condição de contorno de fluxo, se esse flag for% 
% igual a a 1 a pressão prescrita com valor igual a p                     % 
%-------------------------------------------------------------------------%  
% Obs: os grupos físicos precisam ser preenchidos de acordo com a ordem   %  
% que foram estabelecidos.                                                % 
%-------------------------------------------------------------------------% 
% /!\ OBS: usualmente, para apoios rígidos, são introduzidos valores de   % 
% constante de molas com valores elevados, ex: 10^5, 10^6, 10^7.          % 
%-------------------------------------------------------------------------% 
% /!\ OBS: para a imposição de condição de contorno de pressão é necessá- % 
% rio impor um valor de gama alto, ex: 10^5, 10^6, 10^7.                  % 
%-------------------------------------------------------------------------% 
  
CCPoint = [  
  
% -------------------------------------------------------------------- 
%|  Fx  |  Fy  |   ux   |   uy   |   Kx  |   Ky  |  v  |  p  |  y  | 
% -------------------------------------------------------------------- 
     
    0   ,  0   ,    0   ,    0   ,    1  ,   1   ,  0  ,  0  ,   0; 
  
]; 
  
%-------------------------------------------------------------------------% 
%                 Condições de contorno nos linhas                        % 
%-------------------------------------------------------------------------% 
%                                                                         % 
% Entrada das condições de contorno para as linhas da geometria, essas    % 
% entradas são:                                                           % 
% - Força distribuída na aresta                                           % 
% - Deslocamento prescrito                                                % 
% - Restrição na linha                                                    % 
%                                                                         % 
% CCLine - Variável que apresenta as condições de contorno associada à    % 
% linha.                                                                  % 
%                                                                         % 
% Formatação:                                                             % 
%                                                                         % 
% CCLine(i,:) = [ Fx Fy Fn Ft ux uy Kx Ky v p], onde:                     % 



130 

 

%                                                                         % 
% 'Fx' e 'Fy' são, respectivamente, as forças districuídas nas direções x %  
% e y do  grupo físico.                                                   % 
% 'Fn' e 'Ft' são, respectivamente, as forças distribuídas nas direções   % 
% normal e tangencial a barra associada ao grupo físico avaliado.         % 
% 'ux' e 'uy' são, respectivamente, os deslocamentos prescritos nas       % 
% direções x e y do  grupo físico.                                        % 
% 'Kx' e 'Ky' são flags que apresentam a restrição ou não do apoio.       % 
% Se Kx ou Ky = 1 o grau de liberdade é restringido, se não é livre.      %                  
% 'v' é a vazão para esse grupo físico.                                   % 
% 'p' é a pressão para esse grupo físico.                                 % 
% 'y' é o flag associado à condição de contorno de fluxo onde: y = 1 a    % 
% pressão é prescrita.                                                    % 
%-------------------------------------------------------------------------%  
% Obs: os grupos físicos precisam ser preenchidos de acordo com a ordem   %  
% que foram estabelecidos.                                                % 
%-------------------------------------------------------------------------% 
% /!\ OBS: usualmente, para apoios rígidos, são introduzidos valores de   % 
% constante de molas com valores elevados, ex: 10^5, 10^6, 10^7.          % 
%-------------------------------------------------------------------------% 
% /!\ OBS: para a imposição de condição de contorno de pressão é necessá- % 
% rio impor um valor de gama alto, ex: 10^5, 10^6, 10^7.                  % 
%-------------------------------------------------------------------------% 
% Para as arestas os valores são atribuídos aos nós que formam as linhas  % 
%-------------------------------------------------------------------------% 
  
CCLine = [  
     
%  ---------------------------------------------------------------------- 
% | Fx  |  Fy  |  Fn  |  Ft  |  ux  |  uy  |  Kx  |  Ky  |  v  |  p | y  | 
%  ---------------------------------------------------------------------- 
      
    0   , 1000 ,   0  ,   0  ,   0  ,   0  ,   0  ,   0  ,  0  ,  0 ,  1 
    0   ,  0   ,   0  ,   0  ,   0  ,   0  ,   0  ,   0  ,  0  ,  0 ,  1  
    0   ,  0   ,   0  ,   0  ,   0  ,   0  ,   0  ,   0  ,  0  ,  0 ,  0 
    0   ,  0   ,   0  ,   0  ,   0  ,   0  ,   0  ,   1  ,  0  ,  0 ,  0  
    0   ,  0   ,   0  ,   0  ,   0  ,   0  ,   1  ,   0  ,  0  ,  0 ,  0 
     
    ]; 
MefBiof(filenamegeo,filenamemsh,DadosPlan,CCPoint,CCLine,TipProb,MetCon... 
    ,Nmaxint,DeltaT,Theta,iaval,Imprimir_Desloc,Imprimir_Tens,fator,... 
    Imprimir_Pres,Nint0,Imprimir_Px,Imprimir_Py,Imprimir_Desloc_x,... 
    Imprimir_Desloc_y,xsup,xinf,ysup,yinf,xpinf,xpsup,ypinf,ypsup) 
     
%-------------------------------------------------------------------------% 
% REFERÊNCIAS BIBLIOGRÁFICAS                                              % 
%-------------------------------------------------------------------------% 
  
% &gt;&gt;REFERÊNCIA 1 
% Matriz de rigidez do problema mecânico pelo Método Elementos Finitos 
% Mistos. 
% Pesquisador: João Paulo Lima Santos 
% Título: Estratégias Adaptativas Para Formulações Mistas em Elementos 
% Finitos. 
% Aplicada a Modelos Reológicos Viscoelásticos e Modelos Lineares 
% Incompressíveis. 
% Tipo: Tese de Doutorado 
% Ano: 2011 
% Instituição: COPPE 
  



131 

 

% &gt;&gt;REFERÊNCIA 2 
% Matriz de rigidez do problema mecânico LST. 
% Pesquisador: Lucíolo Victor Magalhães e Silva 
% Tipo: TCC 
% Ano: 2015 
% Instituição: UFPE 
  
% &gt;&gt;REFERÊNCIA 3 
% Matrizes de rigidez para o problema mecânico pelo Método dos Elementos. 
% Finitos Mistos 
% Pesquisador: Zienkiewicz e Taylor 
% Título: The Finite Element Method 
% Tipo: livro 
% Ano: 2005 
% Pág: 285 
  
% &gt;&gt;REFERÊNCIA 4 
% Funções de forma para a pressão, elementro triangular com três nós.  
% Arquivo MEF &gt;&gt; Pasta MEF 
% Nome arquivo: AE2_Elasticidade_2D 
  
% &gt;&gt;REFERÊNCIA 5 
% Arquivo de forças nodais equivalentes &gt;&gt; Pasta Referências Código. 
  
% &gt;&gt;REFERÊNCIA 6 
% Arquivo de Integração Numérica &gt;&gt; Pasta Referência Códigos. 
 

MefBiot.m 

%-------------------------------------------------------------------------% 
%                              ROTINA                                     % 
%-------------------------------------------------------------------------% 
% TÍTULO: MÉTODO DOS ELEMENTOS FINITOS MISTOS PARA A SOLUÇÃO DO PROBLEMA  % 
% DE ACOMPLAMENTO GEOMECÂNICO DADO PELA TEORIA DE BIOT                    % 
%-------------------------------------------------------------------------% 
                                                                            
%-------------------------------------------------------------------------% 
%                          SUB-ROTINA                                     % 
%-------------------------------------------------------------------------% 
% TÍTULO: MefBiot                                                    % 
% DESCRIÇÃO: Rotina de processamento para a solução do problema mecânico  % 
% utilizando a formulação do Método dos Elementos Finitos Mistos          % 
%-------------------------------------------------------------------------% 
% Programador: Lucíolo Victor (DECIVIL-UFPE)                              % 
% Orientador: Prof. Dr. Ivaldo Dário (DECIVIL - UFPE)                     % 
% Data de criação: 11-09-2015                                             % 
% Última modificação: 18-10-2016                                          % 
%-------------------------------------------------------------------------% 
  
  
function MefBiof(filenamegeo,filenamemsh,DadosPlan,CCPoint,CCLine,... 
    TipProb,MetCon,Nmaxint,DeltaT,Theta,iaval,Imprimir_Desloc,... 
    Imprimir_Tens,fator,Imprimir_Pres,Nint0,Imprimir_Px,Imprimir_Py,... 
    Imprimir_Desloc_x,Imprimir_Desloc_y,xsup,xinf,ysup,yinf,xpinf,xpsup.... 
    ,ypinf,ypsup) 
tic 
%-------------------------------------------------------------------------% 
% CÓDIGOS DE PREPROCESSAMENTO DE DADOS - ARQUIVO .geo E ARQUIVO .msh      % 
%-------------------------------------------------------------------------% 



132 

 

  
  
[ PropPoint, PropLines, PropElem, Coord, CaracPlan , CaracPoint,... 
    CaracLine] = PreprocessoBiot( filenamegeo, filenamemsh, ... 
    DadosPlan, CCPoint, CCLine ); 
  
  
%-------------------------------------------------------------------------% 
% CÓDIGOS DE PROCRESSAMENTO                                               % 
%-------------------------------------------------------------------------% 
       
[X,Glp,K,Ce] =  ProcessoBiot( PropPoint, PropLines, PropElem,... 
    Coord, CaracPlan, CaracPoint, CaracLine,TipProb, MetCon, ... 
    Nmaxint,DeltaT,Theta,Nint0); 
toc 
  
%-------------------------------------------------------------------------% 
% CÓDIGOS DE PÓS-PROCRESSAMENTO                                           % 
%-------------------------------------------------------------------------% 
  
PosProcessoBiot(K,Ce,iaval,X,Coord,Glp,PropElem,CaracPlan,... 
    Imprimir_Desloc,Imprimir_Tens,fator,Imprimir_Pres,Imprimir_Px,... 
    Imprimir_Py,Imprimir_Desloc_x,Imprimir_Desloc_y,xsup,xinf,ysup,yinf... 
    ,xpinf,xpsup,ypinf,ypsup,Nmaxint,DeltaT,Theta,Nint0) 
  
% Fim do processo 
  
disp('Fim do processo') 
  
end 
 

PreprocessoBiot.m 

%-------------------------------------------------------------------------% 
%                              ROTINA                                     % 
%-------------------------------------------------------------------------% 
% TÍTULO: MÉTODO DOS ELEMENTOS FINITOS MISTOS PARA A SOLUÇÃO DO PROBLEMA  % 
% DE ACOMPLAMENTO GEOMECÂNICO DADO PELA TEORIA DE BIOT                    % 
%-------------------------------------------------------------------------% 
                                                                            
%-------------------------------------------------------------------------% 
%                          SUB-ROTINA                                     % 
%-------------------------------------------------------------------------% 
% TÍTULO: PreprocessoBiot                                                 % 
% DESCRIÇÃO: Preprocessamento de dados dos arquivos .msh,.geo e da        % 
% entrada de dados para o problema mecânico.                              % 
%-------------------------------------------------------------------------% 
% Programador: Lucíolo Victor (DECIVIL-UFPE)                              % 
% Orientador: Prof. Dr. Ivaldo Dário (DECIVIL - UFPE)                     % 
% Data de criação: 29-10-2015                                             % 
% Última modificação: 29-10-2015                                          % 
%-------------------------------------------------------------------------% 
  
function [  PropPoint, PropLines, PropElem, Coord, CaracPlan... 
    , CaracPoint, CaracLine] = PreprocessoBiot( filenamegeo,... 
   filenamemsh,DadosPlan, CCPoint, CCLine ) 
  



133 

 

  
[CoordBound, LineBound, PhysicalPoint, PhysicalLine, PhysicalSurface... 
  , Plans] = PreprocessorGeo(filenamegeo) 
  
[PropPoint, PropLines, PropElem, Coord] = PreprocessorMsh(filenamemsh); 
  
%-------------------------------------------------------------------------% 
% Status do código                                                        % 
%-------------------------------------------------------------------------% 
  
  disp('|---------------------------------------------------------------|') 
  disp('|                ARQUIVOS DE ENTRADA DE DADOS                   |')     
  disp('|---------------------------------------------------------------|') 
  
  disp('Arquivo .geo =')  
  disp(   filenamegeo) 
  disp('%-------------------------------------%') 
  
  disp('Arquivo .msh =')  
  disp(   filenamemsh) 
  disp('%-------------------------------------%') 
  
% Os comandos de repetição abaixo é realizado para que a indexação da 
% identificação do grupo físico seja feito pelo índice e não há a 
% necessidade de fazer uma busca do vetor de grupos físicos para atribuir a 
% superfície seus parâmetros físicos. 
  
% CaracPlan  
% 
% é uma variável que contém a mesma formatação que DadosPlan porém nas 
% linhas associadas à numeração do grupo físico que está sendo avaliado. 
% Obs: Esse comando só é ativado se existir grupos físicos para 
% superfícies. 
  
if PhysicalSurface ~= 0 
  
for i=1:size(PhysicalSurface,2) 
  
CaracPlan(PhysicalSurface(i),:) = DadosPlan(i,:); 
  
end 
  
else 
     
CaracPlan = 0; 
  
end 
  
% CaracPoint  
% 
% é uma variável que contém a mesma formatação que DadosPoint porém nas 
% linhas associadas à numeração do grupo físico que está sendo avaliado. 
% Obs: Esse grupo físico só é ativado se eistir grupos físicos para pontos. 
  
if PhysicalPoint ~= 0 
  
for i=1:size(PhysicalPoint,2) 
  



134 

 

CaracPoint(PhysicalPoint(i),:) = CCPoint(i,:); 
  
end 
  
else  
  
CaracPoint = 0; 
     
end 
  
% CaracLine  
% 
% é uma variável que contém a mesma formatação que DadosLine porém nas 
% linhas associadas à numeração do grupo físico que está sendo avaliado. 
% Obs: Esse grupo físico só é ativado se existir grupos físicos para 
% linhas. 
  
if PhysicalLine ~= 0 
  
for i=1:size(PhysicalLine,2) 
  
CaracLine(PhysicalLine(i),:) = CCLine(i,:); 
  
end 
  
else 
     
CaracLine = 0; 
  
end 
  
  
end 
  
 

PreprocessorGeo.m 

%-------------------------------------------------------------------------% 
%                              ROTINA                                     % 
%-------------------------------------------------------------------------% 
% TÍTULO: MÉTODO DOS ELEMENTOS FINITOS MISTOS PARA A SOLUÇÃO DO PROBLEMA  % 
% DE ACOMPLAMENTO GEOMECÂNICO DADO PELA TEORIA DE BIOT                    % 
%-------------------------------------------------------------------------% 
  
%-------------------------------------------------------------------------% 
%                          SUB-ROTINA                                     % 
%-------------------------------------------------------------------------% 
% TÍTULO: Preprocessorgeo                                                 % 
% DESCRIÇÃO: Rotina de preprocessamento utilizada para a leitura de dados % 
% para arquivos .geo de modelos feitos no Gmsh                            % 
%-------------------------------------------------------------------------% 
% Programador: Lucíolo Victor (DECIVIL-UFPE)                              % 
% Orientador: Prof. Dr. Ivaldo Dário (DECIVIL - UFPE)                     % 
% Data de criação: 28-08-2015                                             % 
% Última modificação: 29-10-2015                                          % 
%-------------------------------------------------------------------------% 
  



135 

 

function [CoordBound, LineBound, PhysicalPoint, PhysicalLine, PhysicalSur-
face... 
  , Plans] = PreprocessorGeo(filename) 
  
%-------------------------------------------------------------------------% 
%                Variáveis construídas nessa função                       % 
%-------------------------------------------------------------------------% 
  
% CoordBound 
% 
% Matriz contendo as coordenadas x e y dos elementos, essa matriz será 
% preenchida abaixo. 
  
% LineBound 
% 
% Essa matriz contém a indicação dos nós que estão representados em cada 
% linha do contorno. 
  
% PhysicalPoint 
% 
% Esse vetor consiste na identificação dos grupos físicos dos pontos na 
% sequência em que eles foram atribuídos na modelagem. 
  
% PhysicalLine 
% 
% Esse vetor consiste na identificação dos grupos físicos das linhas na 
% sequência em que eles foram atribuídos na modelagem. 
  
% PhysicalSurface 
% 
% Esse vetor consiste na identificação dos grupos físicos das surpefícies 
% na sequência em que eles foram atribuídos na modelagem. 
  
% Plans 
% 
% Esse vetor consiste na identificação da numeração dos planos criados na 
% modelagem 
  
% fid 
% 
% Identificador do arquivo referente a 'fid'. 
  
fid = fopen(filename); 
  
% flagpsurface 
% 
% Flag relacionado à colocação ou não do grupo físico de superfície 
  
flagpsurface = 0; 
  
% flagppoint1  
% 
% Flag associado ao grupo físico de superfícies (existencia ou não desse  
% tipo de grupo físio). 
  
flagppoint1 = 0; 
  
% flagplines1  
% 



136 

 

% Flag associado ao grupo físico de linhas (existencia ou não desse tipo de 
% grupo físio). 
  
flagplines1 = 0; 
  
% L1 
% 
% Variável que lê a primeira linha do arquivo .geo -&gt; clc 
  
L1 = fscanf(fid,'%s %s %s',3); 
  
% N1 
% 
% Variável igual a primeira string das linhas, abaixo essa variável está  
% sendo inicializada para a leitura das propriedades dos primeiros pontos  
% da malha  
  
N1 = fscanf(fid,'%s',1); 
  
% AuxPoi 
% 
% Essa variável consiste em um vetor que determina as coordanadas dos 
% pontos da malha e contém um flag associado ao respectivo ponto. 
% 
% Formatação AuxPoi = [ Coorx, Coordy, Coordz, Flag ] 
% onde Coordx, Coordy e Coordz são os valores de coordenadas do nó e Flag 
% é uma variável associada a este nó. 
  
AuxPoi = fscanf(fid,' = {%f,%f,%f,%f};'); 
  
% Primeira linha de Coord 
  
CoordBound(1,1:2) = AuxPoi(1:2); 
  
% ic 
% 
% Índice da linha do CoordBound 
  
ic = 1; 
  
% Índice da linha de LineBoud 
  
il = 0; 
  
% ipp 
% 
% Índice do PhysicalPoint 
  
ipp = 0; 
  
% ipl 
% 
% Índice do PhysicalLine 
  
ipl = 0; 
  
% ips 
% 



137 

 

% Índice do PhysicalSurface 
  
ips = 0; 
  
% iplans 
% 
% Índice dos planso modelados 
  
iplans = 0; 
  
% O comando de repeticão abaixo consiste no comando principal do problema 
% onde será lido todo o arquivo .geo.  
% 
% Funcionamento do comando: Para que sejam lidos os tipos de variáveis 
% desejadas são primeiramente lidas as primeiras palavas da linha. Essas 
% palavras são classificadas como pontos, linhas, grupos físicas e etc... 
% a partir de comprações feitas entre as palavras lidas e os formatos 
% desses elementos. Por exemplo: se é lido A = 'Point(1)' na linha i, esse 
% valors será comparado da seguinte forma A(1:3) = 'Poi'?, caso seja 
% positivo será atribuido a uma variável auxiliar o valor das suas 
% coordenadas. 
  
  
while ~feof(fid)  % O size atribuido nessa condição é  
% necessário por conta da eitura de apenas um caracterer no final desse  
% comando.  
  
% N1 
% 
% Esssa variável foi definida acima e consiste na leitura do primeiro termo 
% da linha, ela será utilizada para a identificação do tipo de elemento que 
% está sendo avaliado (linha, ponto, grupo físico, et...) 
     
N1 = fscanf(fid,'%s',1) 
  
if N1 ~= ' ' 
  
% O 'if' abaixo identifica as linhas onde são atribuidos os pontos da malha 
  
if N1(1:3) == 'Poi' 
     
    % AuxPoi 
    % 
    % Essa variável contém os valores das coordenadas dos nós da malha. 
    % 
    % formatação: 
    % 
    % AuxPoi = [Coordx, Coordy, Coordz, Flag] 
     
    AuxPoi = fscanf(fid,' = {%f,%f,%f,%f};'); 
     
    % Identificação da linha que será introdizida as novas coordenadas na 
    % matria Coord 
     
    ic = ic + 1; 
     
    % CoorBound 
    % 



138 

 

    % Contrução da variável (Infor.Var.Acima). 
     
    CoordBound(ic,1:2) = AuxPoi(1:2); 
     
end 
  
% O 'if' abaixo identifica as linas que estão sendo lidas no arquivo .geo 
  
if N1(1:4) == 'Line' 
     
    % O 'if' abaixo identifica o line loop 
  
    if size(N1,2) == 4 
     
    % AuxLineLoop 
    %  
    % Essa variável contém as informações acerca do Line Loop da geometria 
    % avaliada. 
    % 
    % (Infor.Var.Acima) 
    
   AxuLineLoop = fscanf(fid,' Loop(%d)') 
    
       Descartar = 'a'; 
        
       while Descartar ~= ';' 
            
          Descartar = fscanf(fid,'%c',1);  
            
       end 
   
    % O else abaixo serve para a leitura das linhas. 
  
    else 
        
    % AuxLine 
    % 
    % Essa variável contém os nós que formam uma linha 
    % 
    % formatação: 
    % 
    % AuxLine = [no1,no2] 
     
    AuxLine = fscanf(fid,' = {%f, %f};'); 
      
    % Construção do índice associado a linha que forma a matriz LineBound 
    
    il = il + 1; 
    
    % LineBound 
    % 
    % Construação da variável (Infor.Var.Acima). 
    
    LineBound(il,1:2) = AuxLine(1:2); 
    
    end 
  



139 

 

  
  
end 
  
% O 'if' abaixo consiste na identificação dos planos que serão lidos no 
% arquivo .geo 
  
if N1(1:3) == 'Pla' 
    
    % AuxPla 
    % 
    % Essa variável contém os planos lidos no arqivo .geo 
    % 
    % formatação 
    % 
    % AuxPla = [NumPla], onde NumPla é a numeração do plano lido. 
    
   AuxPla  = fscanf(fid,' Surface(%d) = {%d};');   
     
   iplans = iplans + 1; 
    
   % Plans 
   % 
   % Construção da variável (Infor.Var.Acima). 
    
   Plans(iplans) = AuxPla(2); 
    
end 
  
% O comando de repetição abaixo editifica o Transfinite. 
  
if N1(1:3) == 'Tra' 
     
   % AuxTra 
   % 
   % Essa variável contém o valor inficado na variável Transfinite Surface 
     
   AuxTra  = fscanf(fid,' Surface {%d};'); 
         
end 
  
% O 'if' abaixo consiste na leitura dos grupos físicos  
  
if N1(1:3) == 'Phy'  
     
   % AuxPhy 
   % 
   % A variável AuxPhy consiste na variável que indica se a linha lida é 
   % referente a u grupo físico 
    
   AuxPhy  = fscanf(fid,' %c',1); 
    
   % Os 'if's' abaixo identifica o tipo de grupo físico que está sendo lido 
   % onde temos, onde é lido o primeiro caractere que está depois de da 
   % palavra Physical 
   % 
   % formatação 



140 

 

   % 
   % Se AuxPhy igual a 'P' -&gt; A linha consiste em um grupo físico de Ponto 
   % Se AuxPhy igual a 'L' -&gt; A linha consiste em um grupo físico de Linha    
   % Se AuxPhy igual a 'S' -&gt; A linha consiste em um grupo físico de Plano 
             
   if AuxPhy == 'P' 
        
       % Atribuindo um flag ao grupo físico de pontos associado a 
       % existência desse tipo de grupo físico. 
        
       flagppoint1 = 1; 
        
       % AuxPhyPoint 
       % 
       % Númeração dos grupos físicos de pontos 
        
       AuxPhyPoint = fscanf(fid,'oint(%d)',1); 
        
       Descartar = 'a'; 
        
       while Descartar ~= ';' 
            
          Descartar = fscanf(fid,'%c',1);  
            
       end 
           
     % Incremento no 'ipp' 
      
     ipp = ipp+1; 
      
     % Construção de PhysicalPoint (Infor.Var.Acima). 
      
     PhysicalPoint(ipp) = AuxPhyPoint; 
           
   end              
       
   if AuxPhy == 'L' 
        
       % Atribuindo um flag ao grupo físico de linhas associado a 
       % existência desse tipo de grupo físico. 
        
       flagplines1 = 1; 
        
       % AuxPhyLine 
       % 
       % Numeração dos grupos físicos das linhas 
    
       AuxPhyLine = fscanf(fid,'ine(%d)',1); 
        
       Descartar = 'a'; 
        
       while Descartar ~= ';' 
            
          Descartar = fscanf(fid,'%c',1); 
            
       end         
        



141 

 

     % Incremento no 'ipl' 
      
     ipl = ipl+1; 
      
     % Construção de PhysicalLine (Infor.Var.Acima). 
      
     PhysicalLine(ipl) = AuxPhyLine; 
           
   end              
       
   if AuxPhy == 'S' 
        
       % Atribuindo um valor diferente ao flag do grupo físico de 
       % superfícies 
        
       flagpsurface = 1; 
        
       % AuxPhySurf 
       % 
       % Numeração dos grupos físicos dos planos 
    
       AuxPhySurf = fscanf(fid,'urface(%d)',1); 
        
       Descartar = 'a'; 
        
       while Descartar ~= ';' 
            
          Descartar = fscanf(fid,'%c',1); 
            
       end   
        
     % Incremento no 'ips' 
      
     ips = ips+1; 
      
     % Construção de PhysicalSurface (Infor.Var.Acima). 
      
     PhysicalSurface(ips) = AuxPhySurf; 
     
        
   end              
    
end 
  
end 
  
end 
  
% Os comandos abaixo atribuem o valor numo aos grupos físicos se esses não 
% forem atribuídos. 
  
if flagpsurface == 0 
     
    PhysicalSurface = 0; 
     
end 



142 

 

  
if flagppoint1 == 0 
     
    PhysicalPoint = 0; 
     
end 
  
if flagplines1 == 0 
  
    PhysicalLine = 0; 
     
end 
     
end 
 

PreprocessorMsh.m 

%-------------------------------------------------------------------------% 
%                              ROTINA                                     % 
%-------------------------------------------------------------------------% 
% TÍTULO: MÉTODO DOS ELEMENTOS FINITOS MISTOS PARA A SOLUÇÃO DO PROBLEMA  % 
% DE ACOMPLAMENTO GEOMECÂNICO DADO PELA TEORIA DE BIOT                    % 
%-------------------------------------------------------------------------% 
                                                                            
%-------------------------------------------------------------------------% 
%                          SUB-ROTINA                                     % 
%-------------------------------------------------------------------------% 
% TÍTULO: Preprocessormsh                                                 % 
% DESCRIÇÃO: Rotina de preprocessamento utilizada para a leitura de dados % 
% para arquivos .msh de modelos feitos no Gmsh                            % 
%-------------------------------------------------------------------------% 
% Programador: Lucíolo Victor (DECIVIL-UFPE)                              % 
% Orientador: Prof. Dr. Ivaldo Dário (DECIVIL - UFPE)                     % 
% Data de criação: 28-08-2015                                             % 
% Última modificação: 29-10-2015                                          % 
%-------------------------------------------------------------------------% 
  
function [PropPoint, PropLines, PropElem, Coord] = PreprocessorM-
sh(filename) 
  
%-------------------------------------------------------------------------% 
%                Variáveis construídas nessa função                       % 
%-------------------------------------------------------------------------% 
  
% PropPoint 
% 
% Essa variável contém as informações acerca dos pontos que formam a 
% geometria da malha 
% 
% formatação 
% 
% PropPoint(i,:) = [flag,Gfp,no,no], onde Gfp é o grupo físico no qual o  
% ponto está inserido e no é a numeração do ponto na malha do Gmsh. 
  
% PropLines 
% 
% Essa variável contém as informações acerca das linhas que formam as 



143 

 

% arestas de contorno da malha computacional  
% 
% PropLines(i,:) = [flag,Gfl, Nlg, no1, no2, no3] onde Gfp o grupo físico 
% associado a linha da geometria, Nlg é a numeração da linha na geometria 
% que essa aresta está inserida e os outros valores são os nós que formam a 
% aresta avaliada 
  
% PropElem 
% 
% Essa variável contém as informações acerca dos elementos da malha. 
% 
% formatação 
% 
% PropElem(i,:) = [flag,Gfe, no1,no2,no3,no4,no5,no6], onde Gfe é o grupo 
% físico associado ao elemento e os outros valores são associado aos nós 
% que formam o elemento triangular de seis nós que formam a malha 
% computacional, no nosso caso esse elemento é o LST. 
% 
%-------------------------------------------------------------------------% 
%-------------------------------------------------------------------------% 
%-------------------------------------------------------------------------% 
  
% flagppoint 
% 
% Esse flag é utilizado para identificar se há um grupo físico atricuído 
% aos pontos ou esse não foi definido. Essa situação pode acontecer quando, 
% por exemplo, só são intoduzidos carregamentos linearmente distribuídos 
% nas linhas da geometria e os apoios são atribuídos nas linhas. 
  
flagppoint = 1; 
  
% flagpline 
% 
% Esse flag é unitilizado para identificar se foi atribuído um grupo físico 
% para os pontos e a condição é semelhante à flagpoint. 
  
flagpline = 1; 
  
% flagpsurf 
% 
% Esse flag é unitilizado para identificar se foi atribuído um grupo físico 
% para as superfícies. 
  
flagpsurf = 1; 
  
  
% fid 
% 
% Identificador do arquivo referente a 'fid'. 
  
fid = fopen(filename); 
  
% ipropp 
% 
% Índice de PropPoint 
  
ipropp = 0; 
  
% ipropp 



144 

 

% 
% Índice de PropLines 
  
ipropl = 0; 
  
% ipropp 
% 
% Índice de PropElem 
  
iprope = 0; 
  
  
% Nnodes 
% 
% Número de nós da malha computacional modelada no Gmsh 
  
Nnodes = fscanf(fid,'%*s %*s %*s %*s %*s %*s %d',1); 
  
for i=1:Nnodes 
  
  % Aux_Coord 
  % 
  % Variável auxiliar relativa a leitura das coordenadas de cada elementos 
         
  Aux_Coord =  fscanf(fid,'%d %f %f %f',4); 
     
  % Coord  
  % 
  % Coordenadas do arquivo .msh gerado no Gmsh 
  % 
  % formatação 
  % 
  % Coord(i,:) = (Coordx Coordy), onde Coordx e Coordy são as coordenadas x 
  % e y do nó i, respectivamente. 
   
   Coord(i,:) = Aux_Coord(2:3); 
  
end 
  
% NelemMsh 
% 
% Essa variável contém o número de elementos da malha, onde esse número de 
% elementos é relativo a soma do número de arestas de contorno, número de 
% pontos gerados na geometria e número de elementos da malha computacional. 
% É dado no arquivo de malha e esses valores são gerados pelo próprio Gmsh. 
  
NelemMsh = fscanf(fid,'%*s %*s %d',1); 
  
for i=1:NelemMsh 
  
 % AuxElementsMsh 
 % 
 % Essa variável consiste na variável que contém o vetor lido nas linhas 
 % relativos aos elementos no arquivo .msh.  
         
 AuxElementsMsh = fscanf(fid,'%*d %d',1); 
  
 % O 'if' abaixo identifica na segunda coluna da linha equivalente aos 



145 

 

 % elementos se o tipo de elemento que está sendo lido é um ponto da  
 % geometria. 
  
 if AuxElementsMsh == 15 
    
     % AuxPoints 
     % 
     % Essa variável é utilizada como auxiliar e consiste em um vetor 
     % relativo a leitura da linha realizada no arquivo .msh onde são 
     % identificados os pontos que foramam a geometria. 
      
     AuxPoints = fscanf(fid,'%d %d %d %d',4); 
      
     % Incremento no índice ipropp 
      
     ipropp = ipropp + 1; 
      
     % PropPoint 
     % 
     % A variável PropPoint está sendo preenchida abaixo (Infor.Var.Acima) 
      
     PropPoint(ipropp,:) = AuxPoints'; 
  
     % Atribuindo o valor igua a zero para identificar que há um grupo 
     % físico de pontos 
      
     flagppoint = 0; 
  
 end 
  
 % O 'if' abaixo identifica na segunda coluna da linha equivalente aos 
 % elementos se o tipo de elemento que está sendo lido é uma aresta. 
   
 if AuxElementsMsh == 8 
    
     % AuxLines 
     % 
     % Essa variável é utilizada como auxiliar e consiste em um vetor 
     % relativo a leitura da linha realizada no arquivo .msh. onde são 
     % identificadas as arestas de contorno 
         
     AuxLines = fscanf(fid,'%d %d %d %d %d %d',6); 
    
     % Incremento no índice. 
      
     ipropl = ipropl + 1; 
      
     % PropLines 
     % 
     % A variável PropLines está sendo preenchida abaixo (Infor.Var.Acima) 
      
     PropLines(ipropl,:) = AuxLines'; 
             
     % Atribuindo o valor para identificar que foram atribuídos grupos 
     % físicos às linhas na geometria. 
      
     flagpline = 0; 



146 

 

      
 end 
  
 % O 'if' abaixo identifica na segunda coluna da linha equivalente aos 
 % elementos se o tipo de elemento que está sendo lido é um elemento da 
 % malha. 
   
 if AuxElementsMsh == 9 
    
     % AuxElem 
     % 
     % Essa variável é utilizada como auxiliar e consiste em um vetor 
     % relativo a leitura da linha realizada no arquivo .msh onde são 
     % identificados os elementos da malha. 
         
     AuxElem = fscanf(fid,'%d %d %d %d %d %d %d %d %d',9); 
    
     % Incremento no índice iprope 
      
     iprope = iprope + 1; 
      
     % PropElem 
     % 
     % A variável PropPoint está sendo preenchida abaixo (Infor.Var.Acima) 
      
     PropElem(iprope,:) = AuxElem'; 
  
     % Flag para identificar se foi atribuido valores aos grupos físicos de 
     % superfícies. 
      
     flagpsurf = 0; 
      
 end 
   
end 
     
  disp('|---------------------------------------------------------------|') 
  disp('|              INFORMAÇÕES SOBRE OS GRUPOS FÍSICOS              |') 
  disp('|---------------------------------------------------------------|') 
    
% Comando que atribui o valor das variáveis PropPoint e PropElem iguais a 
% zero se eles não forem lidos no arquivo de malha, isso é utilizado para a 
% introdução das condições de contorno. 
  
if flagppoint == 0 
     
   disp(' ') 
   disp('Foi(ram) atribuído(s) grupo(s) físico(s) para o(s) ponto(s)')  
   disp(' ') 
    
elseif flagppoint == 1 
    
    disp(' ') 
    disp('Não foi(ram) atribuído(s) grupo(s) físico(s) para o(s) ponto(s)') 
    disp(' ') 
     
    PropPoint = 0; 



147 

 

     
end 
  
if flagpline == 0 
     
    disp(' ') 
    disp('Foi(ram) atribuído(s) grupo(s) físico(s) para a(s) linha(s)') 
    disp(' ') 
     
elseif flagpline == 1 
     
    disp(' ') 
    disp('Não foi(ram) atribuído(s) grupo(s) físico(s) para a(s) linha(s)') 
    disp(' ') 
     
    PropLines = 0; 
     
end 
  
  
if flagpsurf == 0 
     
    disp(' ') 
    disp('Foi(ram) atribuído(s) grupo(s) físico(s) para a(s) superfí-
cie(s)') 
    disp(' ') 
     
elseif flagpsurf == 1 
     
    disp(' ') 
    disp('Não foi(ram) atribuído(s) grupo(s) físico(s) para a(s) superfí-
cie(s)') 
    disp(' ') 
    PropElem = 0; 
     
end 
  
  
% Fechando o arquivo de malha 
  
fopen(fid); 
  
end 
 

ProcessoBiot.m 

%-------------------------------------------------------------------------% 
%                              ROTINA                                     % 
%-------------------------------------------------------------------------% 
% TÍTULO: MÉTODO DOS ELEMENTOS FINITOS MISTOS PARA A SOLUÇÃO DO PROBLEMA  % 
% DE ACOMPLAMENTO GEOMECÂNICO DADO PELA TEORIA DE BIOT                    % 
%-------------------------------------------------------------------------% 
                                                                            
%-------------------------------------------------------------------------% 
%                          SUB-ROTINA                                     % 
%-------------------------------------------------------------------------% 



148 

 

% TÍTULO: ProcessoBiot                                                    % 
% DESCRIÇÃO: Processamento de dados dos arquivos .msh,.geo e da           % 
% entrada de dados para o problema mecânico.                              % 
%-------------------------------------------------------------------------% 
% Programador: Lucíolo Victor (DECIVIL-UFPE)                              % 
% Orientador: Prof. Dr. Ivaldo Dário (DECIVIL - UFPE)                     % 
% Data de criação: 29-10-2015                                             % 
% Última modificação: 23-03-2016                                          % 
%-------------------------------------------------------------------------% 
  
function [X,Glp,K,Ce] = ProcessoBiot( PropPoint, PropLines, PropElem,... 
    Coord, CaracPlan, CaracPoint, CaracLine, TipProb, MetCon,Nmaxint,... 
    DeltaT, Theta,Nint0) 
  
if PropElem ~= 0 
  
% Glp 
% 
% Essa variável contém uma numeração associada aos graus de liberdade das 
% tensões médias, essa será explicada, de mneira detalhada, na função 
% GlPressure. 
  
[ Glp, GlpCC ] = GlPressure(PropElem, Coord); 
  
% A função abaixo calcula as matrizez Kup, Kpp e Kuu para o problema do  
% método de Elementos Finitos Mistos. 
  
[L,H,K] = MontMatSist(PropElem,Coord,Glp,CaracPlan); 
  
save '-ascii' 'K.dat' 'K' 
save '-ascii' 'H.dat' 'H' 
save '-ascii' 'L.dat' 'L' 
  
% A função abaixo introduz as condições de contorno nas matriz acima e cria 
% os vetores independentes do problema hidráulico e do problema mecânico. 
  
[F,Kf,Hf,Q] = CondContorno(K,CaracPoint,CaracLine,Coord,PropPoint,... 
    PropLines,Glp,H,GlpCC,CaracPlan,PropElem,L); 
  
save '-ascii' 'Kf.dat' 'Kf' 
save '-ascii' 'Hf.dat' 'Hf' 
  
%% 
  
%-------------------------------------------------------------------------% 
%            SOLUÇÃO DO PROBLEMA MECÂNICO ELÁSTICO - INÍCIO               % 
%-------------------------------------------------------------------------% 
  
if TipProb == 1 
     
% U V 
% 
% Vetor de deslocamentos   
disp('Kf') 
Kf 
disp('F') 
F 
disp('U') 
U = inv(Kf)*(-F); 



149 

 

  
disp(' ') 
disp('Vetor de deslocamentos nodais') 
disp(U) 
  
% X 
% 
% Vetor de resultados do problema 
  
X = U; 
  
Ce = 1;     
%-------------------------------------------------------------------------% 
%            SOLUÇÃO DO PROBLEMA MECÂNICO ELÁSTICO - FIM                  % 
%-------------------------------------------------------------------------% 
  
%-------------------------------------------------------------------------% 
%              SOLUÇÃO DO PROBLEMA HIDRÁULICO - INÍCIO                    % 
%-------------------------------------------------------------------------% 
  
elseif TipProb == 2 
     
% P 
% 
% Velor de pressões. 
     
P = inv(Hf)*Q; 
  
% X  
% 
% Vetor de resultados do problema. 
  
X = P; 
  
disp(' ') 
disp('Vetor de pressões nodais') 
  
disp(P) 
  
disp('Q') 
Q 
  
disp('Graus de liberdade da pressão') 
disp(Glp) 
  
Ce = 1; 
  
%-------------------------------------------------------------------------% 
%               SOLUÇÃO DO PROBLEMA HIDRÁULLICO - FIM                     % 
%-------------------------------------------------------------------------% 
  
%-------------------------------------------------------------------------% 
%         SOLUÇÃO DO PROBLEMA ACOPLADO (HIDROMECÂNICO) - INÍCIO           % 
%-------------------------------------------------------------------------% 
  
elseif TipProb == 3 
  
 [X,Ce] = ElasticConsolidation(K,L,H,MetCon,Nmaxint,DeltaT,Theta,... 



150 

 

 CaracPoint,CaracLine,Coord,PropPoint,PropLines,GlpCC,CaracPlan,... 
 PropElem,Nint0); 
  
end 
  
%-------------------------------------------------------------------------% 
%           SOLUÇÃO DO PROBLEMA ACOPLADO (HIDROMECÂNICO) - FIM            % 
%-------------------------------------------------------------------------% 
  
%% 
  
else 
  
% Erro para que o programa só rode se forem inseridos os valores referentes 
% aos materiais. 
  
  disp('|---------------------------------------------------------------|') 
  disp('|                          ERRO                                 |')     
  disp('|---------------------------------------------------------------|') 
  disp('|As propriedades dos matariais da análise presição ser inseridas|') 
  disp('|---------------------------------------------------------------|') 
  disp(' ') 
  disp(' ') 
  disp(' ') 
   
end 
  
end 
 

GlPressure.m 

%-------------------------------------------------------------------------% 
%                              ROTINA                                     % 
%-------------------------------------------------------------------------% 
% TÍTULO: MÉTODO DOS ELEMENTOS FINITOS MISTOS PARA A SOLUÇÃO DO PROBLEMA  % 
% DE ACOMPLAMENTO GEOMECÂNICO DADO PELA TEORIA DE BIOT                    % 
%-------------------------------------------------------------------------% 
                                                                            
%-------------------------------------------------------------------------% 
%                          SUB-ROTINA                                     % 
%-------------------------------------------------------------------------% 
% TÍTULO: GlPressure                                                      % 
% DESCRIÇÃO: Rotina para a montagem do vetor contendo os graus de liberda-% 
% de pressões no elemento                                                 % 
%-------------------------------------------------------------------------% 
% Programador: Lucíolo Victor (DECIVIL-UFPE)                              % 
% Orientador: Prof. Dr. Ivaldo Dário (DECIVIL - UFPE)                     % 
% Data de criação: 16-09-2015                                             % 
% Última modificação: 16-11-2015                                          % 
%-------------------------------------------------------------------------% 
  
% Glp 
% 
% Vetor contendo a numeração dos graus de liberdade contendo as pressões 
% calculadas 
% 
% Formatação: Glp(1,i) = nói 
%             Glp(2,i) = graude liberdade correspondente ao nói 



151 

 

  
function [ Glp,GlpCC ] = GlPressure(PropElem, Coord) 
  
% AuxCoord    
%     
% Vetor que contem as numerações dos nós da malha     
     
 AuxCoord = 1:size(Coord,1); 
  
% Glp 
% 
% Esse vetor contém os graus de liberdade onde as pressões são calculadas. 
% A primeira linha consiste no sistema local e a segunda linha consiste na 
% numeração global. o procedimento de tirar coluna por coluna foi feito 
% desta maneira por conta da versão do MATLAB 2009 que só trabalha dessa 
% forma. 
  
Glp1 = setdiff(AuxCoord, PropElem(:,7)); 
Glp2 = setdiff(Glp1, PropElem(:,8)); 
Glp = setdiff(Glp2, PropElem(:,9)); 
  
% Preenchimento da numeração dos graus de liberdade para a as matrizes L 
% e H. 
% 
% Obs: os graus de liberdade para a pressão são numerados da seguinte 
% maneira:  
% A partir dos graus de liberdade globais que, neste caso, são iguais a 
% numeração dos nós, são retirados os nós onde são calculados 
% exclusivamente deslocamentos. Sendo assim, a numeração local (referente a 
% numeração das matrizes L e H), é estelecida da maneira como se segue 
% no exemplo abaixo 
% 
% Nós da malha: 1 2 3 4 5 6 7 8 9 10 
% 
% Nós onde são calculados apenas deslocamentos: 2 3 7 8  
% 
% Nós restantes: 1 4 5 6 9 10 
% Grau de liberdade local equivalente para os nós acima: 1(1) 4(2) 5(3) 
% 6(4) 9()5) 10(6) 
% 
% O GlpCC indexa os valores nodais no coluna com seu próprio índice, nesse 
% caso teremos 
% 
% GlpCC = [ 1 0 0 4 5 6 0 0 9 10 ; 
%           1 0 0 2 3 4 0 0 5 6 ]; 
  
Glp(2,:) = 1:size(Glp,2);  
  
% GlpCC 
% 
% Gaus de liberdade utilizados par a aintrodução das condições de contorno. 
  
for i=1:size(Glp,2) 
     
 GlpCC(:,Glp(1,i)) = Glp(:,i);          
     
end 
  
end 



152 

 

 
MontMatSist.m 

%-------------------------------------------------------------------------% 
%                              ROTINA                                     % 
%-------------------------------------------------------------------------% 
% TÍTULO: MÉTODO DOS ELEMENTOS FINITOS MISTOS PARA A SOLUÇÃO DO PROBLEMA  % 
% DE ACOMPLAMENTO GEOMECÂNICO DADO PELA TEORIA DE BIOT                    % 
%-------------------------------------------------------------------------% 
                                                                            
%-------------------------------------------------------------------------% 
%                          SUB-ROTINA                                     % 
%-------------------------------------------------------------------------% 
% TÍTULO:  MontMatSist                                                    % 
% DESCRIÇÃO: Rotina de montegam daa amtrizes do problema mecânico para a  % 
% sólução pelo Método dos Elementos Finitos Mistos                        % 
%-------------------------------------------------------------------------% 
% Programador: Lucíolo Victor (DECIVIL-UFPE)                              % 
% Orientador: Prof. Dr. Ivaldo Dário (DECIVIL - UFPE)                     % 
% Data de criação: 22-10-2015                                             % 
% Última modificação: 13-01-2016                                          % 
%-------------------------------------------------------------------------% 
  
function [L,H,K] = MontMatSist(PropElem,Coord,Glp,CaracPlan) 
  
% nump 
% 
% Número de pressões calculadas 
  
nump = size(Glp,2); 
  
% Nnode 
% 
% Número de nós da malha 
  
Nnode = size(Coord,1); 
  
% Inicializaçao de L 
  
L = zeros(Nnode*2,nump); 
  
% Inicializaçao de H 
  
H = zeros(nump,nump); 
  
% K 
% 
% Inicialização de K 
  
K = zeros(Nnode*2); 
  
% Nelem 
% 
% Número de elementos da malha 
  
Nelem = size(PropElem,1); 
  
for k=1:Nelem 



153 

 

  
% Gfelem  
% 
% Essa variável infica o grupo físico que o elemento faz parte 
     
Gfelem = PropElem(k,2); 
  
% Ex 
% 
% Módulo de elasticidade na direção x. 
  
Ex = CaracPlan(Gfelem,1); 
  
% Ex 
% 
% Módulo de elasticidade na direção y. 
  
Ey = CaracPlan(Gfelem,2); 
  
% vxy 
% 
% Coeficiente de Poisson associado às direções x e y. 
  
vxy = CaracPlan(Gfelem,3); 
  
% kxx 
% 
% Permeabilidade do meio na direção x. 
  
kxx = CaracPlan(Gfelem,4); 
  
% kyy 
% 
% Permeabilidade do meio na direção y. 
  
kyy = CaracPlan(Gfelem,5); 
  
  
% kxy 
% 
% Permeabilidade do meio na direção xy. 
  
kxy = CaracPlan(Gfelem,6); 
  
% yw 
% 
% Peso específico do material. 
  
yw = CaracPlan(Gfelem,10); 
  
  
% Kmat 
% 
% Matriz de permeabilidades do material. 
  
Kmat = [ kxx kxy ; kxy kyy ]; 
  



154 

 

% C1,C2,C3 
% 
% Coeficientes para a matriz constitutiva. 
  
C1 = Ex*(1-vxy)/((1+vxy)*(1-2*vxy)); 
  
C2 = Ey*vxy/((1+vxy)*(1-2*vxy)); 
  
C3 = ((Ex+Ey)/2)/(2*(1+vxy)); 
  
% D 
% 
% matriz constitutiva referente ao estado plano de tensões 
  
D = [ C1 C2 0 ; C2 C1 0 ; 0 0 C3 ]; 
  
% dg 
% 
% dg consiste nos ponteiros para o elemento avaliado para a construção da 
% matriz de rigidez global 
       
  dg(1) = 2*PropElem(k,4)-1; 
  dg(2) = 2*PropElem(k,4); 
  dg(3) = 2*PropElem(k,5)-1; 
  dg(4) = 2*PropElem(k,5); 
  dg(5) = 2*PropElem(k,6)-1; 
  dg(6) = 2*PropElem(k,6); 
  dg(7) = 2*PropElem(k,7)-1; 
  dg(8) = 2*PropElem(k,7); 
  dg(9) = 2*PropElem(k,8)-1; 
  dg(10) = 2*PropElem(k,8); 
  dg(11) = 2*PropElem(k,9)-1; 
  dg(12) = 2*PropElem(k,9); 
  
 [L_local, H_local, K_local] = Calc_Matrizes_locais(k, Coord, ... 
     PropElem ,D, Kmat, yw); 
  
% dgp 
% 
% dgp consiste nos ponteiros relativos a pressão para o elemento avaliado  
% na para a construção das matrizes Kup e Kpp 
  
for i=1:size(Glp,2) 
        
   if PropElem(k,4) == Glp(1,i)  
    
   dgp(1) = Glp(2,i); 
    
   end 
    
   if PropElem(k,5) == Glp(1,i)  
    
   dgp(2) = Glp(2,i); 
    
   end 
    
   if PropElem(k,6) == Glp(1,i)  
    



155 

 

   dgp(3) = Glp(2,i); 
    
   end    
    
end 
  
%% 
  
 for ii=1:12 
       
     for jj=1:3 
          
         % L 
         % 
         % Montagem da Matriz L 
  
         L(dg(ii),dgp(jj)) = L(dg(ii),dgp(jj)) + L_local(ii,jj);   
          
      end 
          
 end 
  
%% 
  
for ii=1:3 
       
     for jj=1:3 
          
         % H 
         % 
         % Montagem da H 
       
         H(dgp(ii),dgp(jj)) = H(dgp(ii),dgp(jj)) + H_local(ii,jj);   
          
      end 
          
end 
  
%% 
  
for ii=1:12 
       
     for jj=1:12 
          
         % K 
         % 
         % Montagem da Matriz de rigidez Global 
       
         K(dg(ii),dg(jj)) = K(dg(ii),dg(jj)) + K_local(ii,jj);    
          
      end 
          
end 
   
  
  



156 

 

  
%% 
  
end 
  
disp('|---------------------------------------------------------------|') 
disp('|              MONTAGEM DAS MATRIZES - STATUS                   |')     
disp('|---------------------------------------------------------------|') 
disp(' ') 
disp('/!\ Montagem de L OK! /!\') 
disp('/!\ Montagem de H OK! /!\') 
disp('/!\ Montagem de K OK! /!\') 
  
end 
 

Calc_Matrizes_locais.m 

%-------------------------------------------------------------------------% 
%                              ROTINA                                     % 
%-------------------------------------------------------------------------% 
% TÍTULO: MÉTODO DOS ELEMENTOS FINITOS MISTOS PARA A SOLUÇÃO DO PROBLEMA  % 
% DE ACOMPLAMENTO GEOMECÂNICO DADO PELA TEORIA DE BIOT                    % 
%-------------------------------------------------------------------------% 
                                                                            
%-------------------------------------------------------------------------% 
%                          SUB-ROTINA                                     % 
%-------------------------------------------------------------------------% 
% TÍTULO: Calc_Matrizes_locais                                            % 
% DESCRIÇÃO: Rotina para a montagem da matrizes locais para a solução do  % 
% problema mecânico pelo Método dos Elementos Finitos Mistos              % 
%-------------------------------------------------------------------------% 
% Programador: Lucíolo Victor (DECIVIL-UFPE)                              % 
% Orientador: Prof. Dr. Ivaldo Dário (DECIVIL - UFPE)                     % 
% Data de criação: 22-10-2015                                             % 
% Última modificação: 13-01-2016                                          % 
%-------------------------------------------------------------------------% 
  
  
function  [L_local, H_local, K_local] = Calc_Matrizes_locais(m, Coord, ... 
     PropElem ,D ,Kmat, yw) 
   
  % nen 
  % 
  % Número de nós por elemento 
  
  nen  = 6;          
  
  % ndof 
  %  
  % Número de graus de liberdade por nó 
  
  ndof = 2;           
  
  
  
  % L_local   
  % 



157 

 

  % Inicialização da L_local 
   
  L_local  = zeros(12,3);  
     
  % K_local 
  % 
  % Matriz da K_local 
  
  K_local  = zeros(nen*ndof,nen*ndof);  
   
  % Nós que formam o elemento i 
  % Coordenadas de nada nó 
   
  x1 = Coord(PropElem(m,4),1); 
  x2 = Coord(PropElem(m,5),1); 
  x3 = Coord(PropElem(m,6),1); 
  x4 = Coord(PropElem(m,7),1); 
  x5 = Coord(PropElem(m,8),1); 
  x6 = Coord(PropElem(m,9),1); 
   
  y1 = Coord(PropElem(m,4),2); 
  y2 = Coord(PropElem(m,5),2); 
  y3 = Coord(PropElem(m,6),2); 
  y4 = Coord(PropElem(m,7),2); 
  y5 = Coord(PropElem(m,8),2); 
  y6 = Coord(PropElem(m,9),2); 
   
  
  % CC 
  % 
  % Matriz de Coordenadas nodais 
   
  CC=[x1 x2 x3 x4 x5 x6; 
      y1 y2 y3 y4 y5 y6]'; 
  
  % Essa matriz são os valores dos pontos de Gauss e seus respectivos pesos 
   
  Int_Gauss_Aux = [ 1/6 1/6 1/6 
                    1/6 2/3 1/6  
                    1/6 1/6 2/3]; 
                 
  % npg 
  % 
  % Número de pontos de Gauss por elementos 
   
  npg = size(Int_Gauss_Aux,1);   
  
  % Comandos de repetição  
  % 
  % Os comandos de repetição abaixo estão fazendo a integração numérica 
  % para a construção da matriz de rigidez. 
   
  for i=1:npg; 
       
       
      epsilon = Int_Gauss_Aux(i,2);         
      neta = Int_Gauss_Aux(i,3);  
      gama = 1 - epsilon - neta ;     



158 

 

        
      w = Int_Gauss_Aux(i,1); 
       
  % N    
  %      
  % Funçaõ de forma mapeada 
   
  %N1 = -gama*(1-2*gama); 
  %N2 = -epsilon*(1-2*epsilon); 
  %N3 = -neta*(1-2*neta); 
  %N4 = 4*epsilon*gama; 
  %N5 = 4*epsilon*neta; 
  %N6 = 4*neta*gama; 
   
  
  % GN 
  % 
  % Gradiente de N 
   
   
  GN    = [ 1-4*gama    -1+4*epsilon         0        4*(gama - epsilon)   
4*neta         -4*neta; 
            1-4*gama           0       -1+4*neta          -4*epsilon      
4*epsilon   4*(gama - neta) ]; 
  % J 
  % 
  % Matriz jacobiana 
         
  J = GN*CC;         
  
  % detJ 
  % 
  % Determinante do jacobiano 
           
  detJ  = det(J);    
       
  % BB 
  % 
  % Derivada da matriz de forma 
  
  BB     = J\GN;        
   
  B1x     = BB(1,1); 
  B2x     = BB(1,2); 
  B3x     = BB(1,3); 
  B4x     = BB(1,4); 
  B5x     = BB(1,5); 
  B6x     = BB(1,6); 
  B1y     = BB(2,1); 
  B2y     = BB(2,2); 
  B3y     = BB(2,3); 
  B4y     = BB(2,4); 
  B5y     = BB(2,5); 
  B6y     = BB(2,6); 
         
         
         



159 

 

  B = [  B1x      0     B2x     0      B3x    0      B4x     0      B5x     
0      B6x     0; 
          0      B1y     0     B2y      0     B3y     0      B4y     0     
B5y     0      B6y; 
         B1y     B1x    B2y    B2x     B3y    B3x    B4y     B4x    B5y    
B5x    B6y     B6x ]; 
      
      
  % Np 
  % 
  % Matriz contendo as funções de forma para a pressão 
  % 
  % OBs: Elemento triangular com 3 nós. 
  % REFERÊNCIA 4. 
   
  Np = [ 1-epsilon-neta epsilon neta]; 
          
  % Dup 
  % 
  % Vetor 'm' 
   
  Dup = [ 1 1 0 ]; 
   
  % Construção das matrizes locais pelo Método da Integração Numérica de 
  % Gauss 
    
  L_local = L_local - w*B'*Dup'*Np*detJ;  
   
  K_local = K_local + w*B'*D*B*detJ; 
   
  end  
    
  % Matriz dos coeficientes. 
   
  A = [ 1 x1 y1 ; 
        1 x2 y2 ; 
        1 x3 y3 ]; 
        
  % Gradiente das funções de forma das poropressões.     
        
  Bp =  [ 0 1 0 ; 0 0 1 ]*inv(A); 
   
  % Ae 
  % 
  % Área do elemento. 
   
  Ae = det(A)/2; 
    
  % Construção da matriz H local, observe que essa matriz não é calculada a 
  % partir de um processo iterativo, seu cálculo é explítico. 
    
  H_local = -Bp'*Kmat*Bp*Ae/yw; 
   
   
  end  
 
   



160 

 

CondContorno.m 

%-------------------------------------------------------------------------% 
%                              ROTINA                                     % 
%-------------------------------------------------------------------------% 
% TÍTULO: MÉTODO DOS ELEMENTOS FINITOS MISTOS PARA A SOLUÇÃO DO PROBLEMA  % 
% DE ACOMPLAMENTO GEOMECÂNICO DADO PELA TEORIA DE BIOT                    % 
%-------------------------------------------------------------------------% 
                                                                            
%-------------------------------------------------------------------------% 
%                          SUB-ROTINA                                     % 
%-------------------------------------------------------------------------% 
% TÍTULO: CondContorno                                                    % 
% DESCRIÇÃO: Rotina para introdução das condições de contorno na matriz   % 
% de rigidez e para a construção do vetor de forças.                      % 
%-------------------------------------------------------------------------% 
% Programador: Lucíolo Victor (DECIVIL-UFPE)                              % 
% Orientador: Prof. Dr. Ivaldo Dário (DECIVIL - UFPE)                     % 
% Data de criação: 24-10-2015                                             % 
% Última modificação: 01-12-2015                                          % 
%-------------------------------------------------------------------------% 
  
  
function [F,Kf,Hf,Q] = CondContor-
no(K,CaracPoint,CaracLine,Coord,PropPoint,... 
    PropLines,Glp,H,GlpCC,CaracPlan,PropElem,L) 
  
%% 
  
 %------------------------------------------------------------------------% 
 % Incialização das matrizes - Início 
 %------------------------------------------------------------------------% 
  
 % Kf  
 % 
 % Matrz K final. 
  
 Kf = K; 
  
 % Hf 
 % 
 % Matriz hidráulica final 
  
 Hf = H; 
  
 % Matriz de acoplamento final 
  
 Lf = L; 
  
 % Inicialização do vetor de forças associado ao Kuu. 
  
 F = zeros(size(Coord,1)*2,1); 
  
 % Q 
 % 
 % Inicialização do vetor independente para os fluxos. 
  
 Q = zeros(size(Glp,2),1); 



161 

 

  
 %------------------------------------------------------------------------% 
 % Incialização das matrizes - Fim 
 %------------------------------------------------------------------------% 
  
 %% 
  
  
 %------------------------------------------------------------------------% 
 % Introdução das condições de contorno das arestas - Início 
 %------------------------------------------------------------------------% 
  
  
 % O comando de repetição abaixo introduz os condições de contorno 
 % associadas às linhas da geometria 
  
 if PropLines ~= 0 
  
for i=1:size(PropLines,1) 
     
 % inicialização do vetor de forças locais do elemento    
     
 felem = zeros(6,1);    
  
 % no1, no2, no3 
 % 
 % Nós que formama a aresta avaliada. 
  
 no1 = PropLines(i,4); 
 no2 = PropLines(i,6); 
 no3 = PropLines(i,5); 
  
 % x1, y1, x2, y2, x3, y3 
 % 
 % Coordenadas x e y dos três nós que formam a aresta avaliada. 
  
 x1 = Coord(no1,1); 
 y1 = Coord(no1,2);   
 x2 = Coord(no2,1); 
 y2 = Coord(no2,2); 
 x3 = Coord(no3,1); 
 y3 = Coord(no3,2); 
  
 % pg 
 % 
 % Matriz que contém os valores da integração de Gauss. A primeira coluna 
 % contém as coordenadas mapeadas e a segunda os pesos associadas a cada 
 % coordenada. 
  
 pg = [ -0.7746 0.55556; 
         0.0000 0.88889; 
         0.7746 0.55556 ]; 
   
 % npg 
 % 
 % Número de pontos de Gauss utilizados na integração numérica. 
      
 npg = size(pg,1); 



162 

 

  
 % Numgf 
 % 
 % Número do grupo físico que a aresta pertence. 
  
 Numgf = PropLines(i,2); 
 %% 
  
 %------------------------------------------------------------------------% 
 % Valores das condições de contorno mecânica  nas arestas - Início  
 %------------------------------------------------------------------------% 
  
 % fx,fy 
 % 
 % Forças distribuídas nas direções x e y. 
  
 fx = CaracLine(Numgf,1); 
 fy = CaracLine(Numgf,2); 
  
 % fn,ft 
 % 
 % Forças distribuídas nas direções normal e tangencial à areasta avaliada. 
  
 fn = CaracLine(Numgf,3); 
 ft = CaracLine(Numgf,4); 
   
 % ux,uy 
 % 
 % Deslocamentos prescritos nas direções x e y na aresta avaliada. 
  
 ux = CaracLine(Numgf,5); 
 uy = CaracLine(Numgf,6); 
  
 % kx,ky 
 % 
 % São os flags relativos às condições de contorno na aresta avaliada. 
   
 kx = CaracLine(Numgf,7); 
 ky = CaracLine(Numgf,8); 
  
 %------------------------------------------------------------------------% 
 % Valores das condições de contorno mecânicas  nas arestas - Fim                             
 %------------------------------------------------------------------------% 
  
 %% 
  
 %------------------------------------------------------------------------% 
 % Valores das condições de contorno hidráulicas  nas arestas - Início 
 %------------------------------------------------------------------------% 
 % v 
 % 
 % Fluxo imposto na aresta. 
  
 v = CaracLine(Numgf,9); 
  
 % p 
 % 
 % Pressão imposta na aresta. 



163 

 

  
 p = CaracLine(Numgf,10); 
  
 % y 
 % 
 % Valor de gama para a condição de contorno hidráulica. 
   
 y = CaracLine(Numgf,11); 
  
 %------------------------------------------------------------------------% 
 % Valores das condições de contorno hidráulicas  nas arestas - Fim 
 %------------------------------------------------------------------------% 
  
 %% 
  
 %------------------------------------------------------------------------% 
 % Introdução das condições de contornos mecânicas  nas arestas - Início 
 %------------------------------------------------------------------------% 
  
  
 % O comando de repetição abaixo é relativo à introdução das condições de 
 % contorno associadas as arestas de contorno. 
 for j=1:npg 
      
    % S1 
    % 
    % Valor da coordenada mapeada. 
      
    S1 = pg(j,1); 
     
    % w 
    % 
    % Peso da integração de Gauss. 
     
    w = pg(j,2); 
     
    % N1,N2,N3 
    %  
    % Valores das funções de forma na coordenada S1. 
      
    N1 = ((S1^2) - S1)/2; 
    N2 = 1 - (S1^2); 
    N3 = ((S1^2) + S1)/2; 
     
    % dN1S1,dN2dS1,dN3dS1 
    % 
    % Derivadas das funções de forma em relação à coordenada do mapeamento 
     
    dN1dS1 = S1 - 1/2; 
    dN2dS1 = -2*S1; 
    dN3dS1 = S1 + 1/2; 
     
    % dxdS1,dydS1 
    % 
    % derivadas das direções coordenadas em relação à coordenada do 
    % mapeamento. 
     
    dxdS1 = dN1dS1*x1 + dN2dS1*x2 + dN3dS1*x3; 



164 

 

    dydS1 = dN1dS1*y1 + dN2dS1*y2 + dN3dS1*y3; 
     
    % PrimNMatriz 
    % 
    % Primeira matriz associada às funções de forma presente na expressão 
    % para a integral. 
     
    PrimNMatriz = [ N1 0  ; 
                     0 N1 ; 
                    N2 0  ; 
                     0 N2 ; 
                    N3 0  ; 
                     0 N3 ]; 
              
    % MatrizDeriv 
    % 
    % Matriz que contém as derivadas, essa matriz é utilizada na integração 
    % das cargas 
                  
     MatrizDeriv = [ dxdS1 -dydS1 ; 
                     dydS1  dxdS1 ]; 
     
    % Matrizp 
    % 
    % Essa amtriz é associada as cargas aplicadas na linhas, ela será 
    % utilizada na integração numérica. 
                  
     Matrizp = [ ft ft ft ; 
                 fn fn fn ]; 
                  
    % dLdS1 
    % 
    % Jacobiano das transformadas 
      
    dLdS1 = sqrt( dxdS1^2 + dydS1^2 ); 
              
    % SegNMatriz 
    % 
    % Segunda matriz associada às funções de forma presente na expressão 
    % para a integral. 
     
              
     SegNMatriz = [ N1 N2 N3 ]'; 
     
    % Determinação do vetor de forças nodais equivalentes  
      
    felem = felem + PrimNMatriz*MatrizDeriv*Matrizp*SegNMatriz*w + ... 
      PrimNMatriz*[ fx fy ]'*dLdS1*w ; 
     
 end 
  
 % auxK 
 %  
 % Matriz auxiliar para a introdução dos apoios. 
  
 auxK = zeros(size(K,1),1); 
  
 % auxL 



165 

 

 % 
 % Matriz auxiliar para introdução dos apoios na matriz de acomplamento. 
  
 auxL = zeros(size(H,1),1); 
  
 % glno1x,glno1y,glno2x,glno2y,glno3x,glno3y 
 % 
 % Graus de liberdade para os nós da aresta avaliado onde serão 
 % introduzidas as forças nodais equivalentes. 
  
 glno1x = no1*2-1; 
 glno1y = no1*2; 
  
 glno2x = no2*2-1; 
 glno2y = no2*2; 
  
 glno3x = no3*2-1; 
 glno3y = no3*2; 
  
  % Introdução das condições de contorno no vetor de forças  
  
 F(glno1x) = F(glno1x) + felem(1); 
 F(glno1y) = F(glno1y) + felem(2); 
 F(glno2x) = F(glno2x) + felem(3); 
 F(glno2y) = F(glno2y) + felem(4); 
 F(glno3x) = F(glno3x) + felem(5); 
 F(glno3y) = F(glno3y) + felem(6); 
   
 % Introdução das condições de contorno na matriz de rigidez global. 
  
 if kx == 1  
  
 Kf(glno1x,:) = auxK; 
 Kf(glno2x,:) = auxK; 
 Kf(glno3x,:) = auxK; 
 Kf(glno1x,glno1x) = 1; 
 Kf(glno2x,glno2x) = 1; 
 Kf(glno3x,glno3x) = 1; 
 Lf(glno1x,:) = auxL; 
 Lf(glno2x,:) = auxL; 
 Lf(glno3x,:) = auxL; 
 F = F - K(:,glno1x)*ux; 
 F = F - K(:,glno2x)*ux; 
 F = F - K(:,glno3x)*ux; 
  
 end 
  
 if ky == 1  
  
 Kf(glno1y,:) = auxK; 
 Kf(glno2y,:) = auxK; 
 Kf(glno3y,:) = auxK;  
 Kf(glno1y,glno1y) = 1; 
 Kf(glno2y,glno2y) = 1; 
 Kf(glno3y,glno3y) = 1;  
 Lf(glno1y,:) = auxL; 
 Lf(glno2y,:) = auxL; 
 Lf(glno3y,:) = auxL; 
 F = F - K(:,glno1y)*uy; 



166 

 

 F = F - K(:,glno2y)*uy; 
 F = F - K(:,glno3y)*uy; 
  
 end 
  
  
  
 %------------------------------------------------------------------------% 
 % Introdução das condições de contornos mecânicas nas arestas - Fim 
 %------------------------------------------------------------------------% 
  
%% 
  
 %------------------------------------------------------------------------% 
 % Introdução das condições de contornos hidráulicas nas arestas - Início 
 %------------------------------------------------------------------------% 
  
 % noh1, noh2 
 % 
 % Primeiro e segundo nó da aresta considerando apenas o problema 
 % hidráulico. 
  
 noh1 = no1; 
 noh2 = no3; 
  
 % xh1, yh1, xh2, yh2 
 % 
 % Coordenadas x e y dos nós noh1 e noh2. 
  
 xh1 = Coord(noh1,1); 
 yh1 = Coord(noh1,2); 
 xh2 = Coord(noh2,1); 
 yh2 = Coord(noh2,2); 
  
 % L 
 % 
 % Comprimento da aresta avaliada. 
  
 L = sqrt( (xh1 - xh2)^2 + (yh1 - yh2)^2); 
  
 % vce 
 % 
 % Vazão concentrada equivalente. 
  
 vce = v*L/2; 
  
 % Introdução da vazão concentrada equivalente no vetor independente de 
 % fluxos. 
  
 Q(GlpCC(2,noh1)) = vce + y*p; 
 Q(GlpCC(2,noh2)) = vce + y*p; 
  
 % Introdução da condição de contorno na matriz H. 
  
 Hf(GlpCC(2,noh1),GlpCC(2,noh1)) = Hf(GlpCC(2,noh1),GlpCC(2,noh1)) + y; 
 Hf(GlpCC(2,noh2),GlpCC(2,noh2)) = Hf(GlpCC(2,noh2),GlpCC(2,noh2)) + y; 
  
 %------------------------------------------------------------------------% 



167 

 

 % Introdução das condições de contornos hidráulicas nas arestas - Fim 
 %------------------------------------------------------------------------% 
  
  
end 
  
 end 
  
  
  
 %------------------------------------------------------------------------% 
 % Introdução das condições de contorno das arestas - Fim 
 %------------------------------------------------------------------------% 
  
 %% 
  
  
 %------------------------------------------------------------------------% 
 % Introdução das condições de contorno dos pontos - Início 
 %------------------------------------------------------------------------% 
  
  
% O comando de repetição abaixo introduz as condições de contorno  
% associadas aos pontos nodais.  
  
if PropPoint ~= 0 
  
for i=1:size(PropPoint,1) 
     
 % NumGfPoint 
 % 
 % Número do grupo físico dos pontos. 
     
 NumGfPoint = PropPoint(i,2);  
  
 % no 
 % 
 % Nó avaliado. 
  
 no = PropPoint(i,3); 
  
  
 %------------------------------------------------------------------------% 
 % Valores e introdução das condições de contorno mecânicas nos pontos 
 % - Início 
 %------------------------------------------------------------------------% 
  
 % fx,fy 
 % 
 % Forças nodais concentradas. 
     
 fx = CaracPoint(NumGfPoint,1); 
 fy = CaracPoint(NumGfPoint,2); 
  
 % ux,uy 
 % 
 % Deslocamentos prescritos nos nós. 



168 

 

  
 ux = CaracPoint(NumGfPoint,3); 
 uy = CaracPoint(NumGfPoint,4); 
     
 % kx,ky 
 % 
 % Flag associado à restrição de apoio do nó. 
  
 kx = CaracPoint(NumGfPoint,5); 
 ky = CaracPoint(NumGfPoint,6); 
  
 % glnox,glnoy 
 % 
 % Gruas de liberdade em x e y do nó avaliado. 
  
 glnox = no*2 - 1; 
 glnoy = no*2; 
  
 % AuxKp 
 % 
 % Essa variável é uma variável auxiliar utilizada para a introdução dos 
 % apoios. 
  
 AuxKp = zeros(size(K,1),1); 
  
 % Cotribuição na matriz de rigidez global das condições de contorno 
 % associadas aos nós. 
  
 if kx == 1  
  
 Kf(glnox,:) = AuxKp; 
 Kf(glnox,glnox) = 1; 
% Lf(glnox,:) = AuxLp; 
 F = F - K(:,glnox)*ux; 
  
 end 
  
 if ky == 1  
  
 Kf(glnoy,:) = AuxKp; 
 Kf(:,glnoy) = AuxKp'; 
 Kf(glnoy,glnoy) = 1; 
% Lf(glnox,:) = AuxLp; 
 F = F - K(:,glnoy)*uy; 
  
 end 
  
 % Introdução das forças concentradas. 
  
  
 F(glnox) = F(glnox) + fx; 
 F(glnoy) = F(glnoy) + fy; 
  
 %------------------------------------------------------------------------% 
 % Valores e introdução das condições de contorno mecânicas nos pontos 
 % - Fim 
 %------------------------------------------------------------------------% 
  



169 

 

 %% 
  
 %------------------------------------------------------------------------% 
 % Valores e introdução das condições de contorno hidráulicas nos pontos 
 % - Início 
 %------------------------------------------------------------------------% 
  
 % v 
 % 
 % Valor de fluxo prescrito. 
  
 v = CaracPoint(NumGfPoint,7); 
  
 % p 
 % 
 % Valor de pressãao prescrita no ponto. 
  
 p = CaracPoint(NumGfPoint,8); 
  
 % y 
 % 
 % Valor de gama para o ponto. 
  
 y = CaracPoint(NumGfPoint,9); 
  
 Q(GlpCC(2,no)) = v + y*p; 
  
 % Introdução da condição de contorno na matriz H. 
  
 Hf(GlpCC(2,no),GlpCC(2,no)) = Hf(GlpCC(2,no),GlpCC(2,no)) + y; 
  
 %------------------------------------------------------------------------% 
 % Valores e introdução das condições de contorno hidráulicas nos pontos 
 % - Fim 
 %------------------------------------------------------------------------% 
  
 %% 
end 
  
end 
  
 %------------------------------------------------------------------------% 
 % Introdução das condições de contorno dos pontos - Fim 
 %------------------------------------------------------------------------% 
  
  
 %% 
  
  
  
 %------------------------------------------------------------------------% 
 % Introdução das condições de contorno dos elementos - Início            % 
 %------------------------------------------------------------------------% 
  
 for k=1:size(PropElem,1) 
  
  % F_local é o vetor de cargas nodais equivalentes para as forças de corpo 



170 

 

  % para cada elemento avaliado.    
      
  F_local = zeros(12,1);    
      
  % Nós que formam o elemento i 
  % Coordenadas de nada nó 
   
  x1 = Coord(PropElem(k,4),1); 
  x2 = Coord(PropElem(k,5),1); 
  x3 = Coord(PropElem(k,6),1); 
  x4 = Coord(PropElem(k,7),1); 
  x5 = Coord(PropElem(k,8),1); 
  x6 = Coord(PropElem(k,9),1); 
   
  y1 = Coord(PropElem(k,4),2); 
  y2 = Coord(PropElem(k,5),2); 
  y3 = Coord(PropElem(k,6),2); 
  y4 = Coord(PropElem(k,7),2); 
  y5 = Coord(PropElem(k,8),2); 
  y6 = Coord(PropElem(k,9),2); 
   
  % gfelem 
  % 
  % Grupo correspondente ao elemento. 
   
  gfelem = PropElem(k,2); 
   
  % bx,by 
  % 
  % Componentes do vetor de forças de corpo. 
   
  bx = CaracPlan(gfelem,7); 
  by = CaracPlan(gfelem,8); 
   
  % Vetorb 
  % 
  % Vetor de forças de corpo. 
   
  Vetorb = [ bx ; by ]; 
   
  % CC 
  % 
  % Matriz de Coordenadas nodais 
   
  CC=[x1 x2 x3 x4 x5 x6; 
      y1 y2 y3 y4 y5 y6]'; 
     
  % Essa matriz são os valores dos pontos de Gauss e seus respectivos pesos 
   
  Int_Gauss_Aux = [ 1/6 1/6 1/6 
                    1/6 2/3 1/6  
                    1/6 1/6 2/3]; 
  
  % npg 
  % 
  % Número de pontos de Gauss por elementos 
   
  npg = size(Int_Gauss_Aux,1);               



171 

 

                 
    for i=1:npg; 
       
       
     epsilon = Int_Gauss_Aux(i,2)  ;       
     neta = Int_Gauss_Aux(i,3) ; 
     gama = 1 - epsilon - neta;      
        
     w = Int_Gauss_Aux(i,1); 
       
     % N    
     %      
     % Funçaõ de forma mapeada 
   
     N1 = -gama*(1-2*gama); 
     N2 = -epsilon*(1-2*epsilon); 
     N3 = -neta*(1-2*neta); 
     N4 = 4*epsilon*gama; 
     N5 = 4*epsilon*neta; 
     N6 = 4*neta*gama; 
   
     % MatrizN 
     % 
     % Matriz das funções de forma 
   
     MatrizN = [ N1  0   N2  0    N3  0   N4  0  N5  0    N6  0;  
                  0  N1  0   N2   0   N3  0   N4  0   N5  0   N6]; 
       
     % GN 
     % 
     % Gradiente de N 
   
   
     GN    = [ 1-4*gama    -1+4*epsilon         0        4*(gama - epsilon)   
4*neta         -4*neta; 
               1-4*gama           0       -1+4*neta          -4*epsilon      
4*epsilon   4*(gama - neta) ]; 
  
            
     % J 
     % 
     % Matriz jacobiana 
         
     J = GN*CC ;        
   
     % detJ 
     % 
     % Determinante do jacobiano 
           
     detJ  = det(J);      
          
     % Np 
     % 
     % Matriz contendo as funções de forma para a pressão 
     % 
     % OBs: Elemento triangular com 3 nós. 
     % REFERÊNCIA 4. 
   



172 

 

     %Np = [ 1-epsilon-neta epsilon neta]; 
          
     % Construção das matrizes locais pelo Método da Integração Numérica de 
     % Gauss 
      
     F_local = F_local + w*MatrizN'*Vetorb*detJ; 
      
     % dg(i) 
     % 
     % Contadores para a indexação do vetor local de forças nodais 
     % equivalentes. 
  
     dg(1) = 2*PropElem(k,4)-1; 
     dg(2) = 2*PropElem(k,4); 
     dg(3) = 2*PropElem(k,5)-1; 
     dg(4) = 2*PropElem(k,5); 
     dg(5) = 2*PropElem(k,6)-1; 
     dg(6) = 2*PropElem(k,6); 
     dg(7) = 2*PropElem(k,7)-1; 
     dg(8) = 2*PropElem(k,7); 
     dg(9) = 2*PropElem(k,8)-1; 
     dg(10) = 2*PropElem(k,8); 
     dg(11) = 2*PropElem(k,9)-1; 
     dg(12) = 2*PropElem(k,9); 
      
     for r=1:12 
      
     F(dg(r)) = F(dg(r)) + F_local(r);  
   
     end 
      
   end  
    
 end 
   
 %------------------------------------------------------------------------% 
 % Introdução das condições de contorno dos elementos - Fim               % 
 %------------------------------------------------------------------------% 
     
      
 end 
  
  

ElasticConsolidation.m 

%-------------------------------------------------------------------------% 
%                              ROTINA                                     % 
%-------------------------------------------------------------------------% 
% TÍTULO: MÉTODO DOS ELEMENTOS FINITOS MISTOS PARA A SOLUÇÃO DO PROBLEMA  % 
% DE ACOMPLAMENTO GEOMECÂNICO DADO PELA TEORIA DE BIOT                    % 
%-------------------------------------------------------------------------% 
                                                                            
%-------------------------------------------------------------------------% 
%                          SUB-ROTINA                                     % 
%-------------------------------------------------------------------------% 
% TÍTULO: ElasticConsolidation                                            % 
% DESCRIÇÃO: Rotina para a solução do problema de adensamento elástico .  % 
%-------------------------------------------------------------------------% 



173 

 

% Programador: Lucíolo Victor (DECIVIL-UFPE)                              % 
% Orientador: Prof. Dr. Ivaldo Dário (DECIVIL - UFPE)                     % 
% Data de criação: 17-11-2015                                             % 
% Última modificação: 23-03-2016                                          % 
%-------------------------------------------------------------------------% 
  
% O problema de adensamento é dado pelo seguinte sistema de equações 
% lineares 
% 
% Ce*dX + Ch = F(t). onde: 
% 
% Ce = | Kf L |  Ch = | 0  0 |  
%      | L' 0 |       | 0  H | 
  
  
function [X,Ce] = ElasticConsolidati-
on(K,L,H,MetCon,Nmaxint,DeltaT,Theta,... 
 CaracPoint,CaracLine,Coord,PropPoint,PropLines,GlpCC,CaracPlan,... 
 PropElem,Nint0) 
  
% Aux1 e Aux2 são variáveias auxiliares para a construção das matrizes Ch e 
% Ce 
  
Aux1 = zeros(size(K)); 
Aux2 = zeros(size(L)); 
Aux3 = zeros(size(H)); 
  
% Ce 
% 
% Essa matriz foi definida anteriormente. 
  
Ce = [ K   L   ; 
       L'  Aux3 ]; 
  
% Ch 
% 
% Essa matriz foi definida anteriormente. 
  
Ch = [ Aux1 Aux2; 
       Aux2' H];    
    
save '-ascii' 'Ce.dat' 'Ce' 
save '-ascii' 'Ch.dat' 'Ch' 
  
% O comando a seguir apresenta as soluções para a integração no tempo da 
% equação de consolidação. 
  
if strcmp(MetCon,'Theta') == 1 
     
    % Solução da integração direta pelo Método Theta. 
      
    X = ECThetaMethod(Ce,Ch,Nmaxint,DeltaT,Theta,CaracPoint,... 
 CaracLine,Coord,PropPoint,PropLines,GlpCC,CaracPlan,PropElem,K,H,Nint0); 
  
save '-ascii' 'X.dat' 'X' 
     
elseif strcmp(MetCon,'T&amp;amp;G') == 1 
     



174 

 

    % Solução da integração direta pelo Método de Thomas e Gladwell 
  
    X = ECThomasAndGladwell(Ce,Ch,Fg,Nmaxint,DeltaT,Theta);    
     
end 
  
end 
 

ECthetaMethod.m 

%-------------------------------------------------------------------------% 
%                              ROTINA                                     % 
%-------------------------------------------------------------------------% 
% TÍTULO: MÉTODO DOS ELEMENTOS FINITOS MISTOS PARA A SOLUÇÃO DO PROBLEMA  % 
% DE ACOMPLAMENTO GEOMECÂNICO DADO PELA TEORIA DE BIOT                    % 
%-------------------------------------------------------------------------% 
                                                                            
%-------------------------------------------------------------------------% 
%                          SUB-ROTINA                                     % 
%-------------------------------------------------------------------------% 
% TÍTULO: ECThetaMethod                                                   % 
% DESCRIÇÃO: Rotina para a solução do problema de adensamento elástico    % 
% pelo Método Theta                                                       % 
%-------------------------------------------------------------------------% 
% Programador: Lucíolo Victor (DECIVIL-UFPE)                              % 
% Orientador: Prof. Dr. Ivaldo Dário (DECIVIL - UFPE)                     % 
% Data de criação: 17-11-2015                                             % 
% Última modificação: 17-11-2015                                          % 
%-------------------------------------------------------------------------% 
  
% Função que soluciona a integração numérica da matriz pelo Método Theta. 
% Esse método será dade da seguinte maneira 
% 
% A*Xn = B*Xn-1 + C, onde o termo de C depende de Fg. E são defnidas 
% abaixo. 
  
function  X = ECThetaMethod(Ce,Ch,Nmaxint,DeltaT,Theta,CaracPoint,... 
 CaracLine,Coord,PropPoint,PropLines,GlpCC,CaracPlan,PropElem,K,H,Nint0) 
  
  
% X 
% 
% Matriz que fornece os resultados dos graus de liberdade ao longo do 
% tempo. 
  
X = zeros(size(Ce,1),Nmaxint); 
  
  
    for i=2:Nmaxint 
     
       A =  (Ce + Theta*DeltaT*Ch);  
         
       B = (Ce-(1- Theta)*DeltaT*Ch)*X(:,i-1);  
        
       TermInd = ConstrTermInd(CaracPoint,CaracLine,Coord,PropPoint... 
           ,PropLines,GlpCC,CaracPlan,PropElem,K,Ce,i,Nint0,DeltaT); 
     
       %TermInd' 



175 

 

        
       C = DeltaT*((1-Theta)*TermInd + Theta*TermInd); 
        
       M1 = (B + C); 
       
       % Introdução das condições de contorno nas matrizes do sistema. 
        
       [Af,M1f] =  CondContornoConsolidation(CaracPoint,CaracLine,... 
       PropPoint,PropLines,GlpCC,A,M1,K,H); 
        
%        save '-ascii' 'M1.dat' 'M1' 
%        save '-ascii' 'A.dat' 'A'    
%        save '-ascii' 'M1f.dat' 'M1f' 
%        save '-ascii' 'Af.dat' 'Af'        
%        save '-ascii' 'Ti.dat' 'TermInd'         
        
       X(:,i) = inv(Af)*M1f; 
        
        
        
       disp(i) 
    end 
  
    disp('t0') 
    t0 = Nint0*DeltaT; 
    disp(t0) 
    disp('tf') 
    tf = Nmaxint*DeltaT; 
    disp(tf) 
    disp('Passo de tempo') 
    disp(DeltaT) 
     
     
     
end 
 

ConstrTemInd.m 

function [TermInd] = ConstrTermInd(CaracPoint,CaracLine,Coord,PropPoint... 
    ,PropLines,GlpCC,CaracPlan,PropElem,K,Ce,intatual,Nint0,DeltaT) 
  
%% 
  
 %------------------------------------------------------------------------% 
 % Incialização das matrizes - Início 
 %------------------------------------------------------------------------% 
  
 % TermInd 
 % 
 % Inicialização do termo independente. 
  
 TermInd = zeros(size(Ce,1),1); 
  
 % nglm 
 % 
 % Número de graus de liberdades mecânicos. 



176 

 

  
 nglm = size(K,1);  
  
 %------------------------------------------------------------------------% 
 % Incialização das matrizes - Fim 
 %------------------------------------------------------------------------% 
  
 %% 
   
 %------------------------------------------------------------------------% 
 % Introdução das condições de contorno das arestas - Início 
 %------------------------------------------------------------------------% 
  
  
 % O comando de repetição abaixo introduz os condições de contorno 
 % associadas às linhas da geometria 
  
 if PropLines ~= 0 
  
for i=1:size(PropLines,1) 
     
 % inicialização do vetor de forças locais do elemento    
     
 felem = zeros(6,1);    
  
 % no1, no2, no3 
 % 
 % Nós que formama a aresta avaliada. 
  
 no1 = PropLines(i,4); 
 no2 = PropLines(i,6); 
 no3 = PropLines(i,5); 
  
 % x1, y1, x2, y2, x3, y3 
 % 
 % Coordenadas x e y dos três nós que formam a aresta avaliada. 
  
 x1 = Coord(no1,1); 
 y1 = Coord(no1,2);   
 x2 = Coord(no2,1); 
 y2 = Coord(no2,2); 
 x3 = Coord(no3,1); 
 y3 = Coord(no3,2); 
  
 % pg 
 % 
 % Matriz que contém os valores da integração de Gauss. A primeira coluna 
 % contém as coordenadas mapeadas e a segunda os pesos associadas a cada 
 % coordenada. 
  
 pg = [ -0.7746 0.55556; 
         0.0000 0.88889; 
         0.7746 0.55556 ]; 
   
 % npg 
 % 
 % Número de pontos de Gauss utilizados na integração numérica. 
      



177 

 

 npg = size(pg,1); 
  
 % Numgf 
 % 
 % Número do grupo físico que a aresta pertence. 
  
 Numgf = PropLines(i,2); 
 %% 
  
 %------------------------------------------------------------------------% 
 % Valores das condições de contorno mecânica  nas arestas - Início  
 %------------------------------------------------------------------------% 
  
 % fx,fy 
 % 
 % Forças distribuídas nas direções x e y. 
  
 fx = CaracLine(Numgf,1); 
 fy = CaracLine(Numgf,2); 
  
 % fn,ft 
 % 
 % Forças distribuídas nas direções normal e tangencial à areasta avaliada. 
  
 fn = CaracLine(Numgf,3); 
 ft = CaracLine(Numgf,4); 
  
 %------------------------------------------------------------------------% 
 % Valores das condições de contorno mecânicas  nas arestas - Fim                             
 %------------------------------------------------------------------------% 
  
 %% 
  
 %------------------------------------------------------------------------% 
 % Valores das condições de contorno hidráulicas  nas arestas - Início 
 %------------------------------------------------------------------------% 
 % v 
 % 
 % Fluxo imposto na aresta. 
  
 v = CaracLine(Numgf,9); 
  
 %------------------------------------------------------------------------% 
 % Valores das condições de contorno hidráulicas  nas arestas - Fim 
 %------------------------------------------------------------------------% 
  
 %% 
  
 %------------------------------------------------------------------------% 
 % Introdução das condições de contornos mecânicas  nas arestas - Início 
 %------------------------------------------------------------------------% 
  
 % O comando de repetição abaixo é relativo à introdução das condições de 
 % contorno associadas as arestas de contorno. 
 for j=1:npg 
      
    % S1 
    % 



178 

 

    % Valor da coordenada mapeada. 
      
    S1 = pg(j,1); 
     
    % w 
    % 
    % Peso da integração de Gauss. 
     
    w = pg(j,2); 
     
    % N1,N2,N3 
    %  
    % Valores das funções de forma na coordenada S1. 
      
    N1 = ((S1^2) - S1)/2; 
    N2 = 1 - (S1^2); 
    N3 = ((S1^2) + S1)/2; 
     
    % dN1S1,dN2dS1,dN3dS1 
    % 
    % Derivadas das funções de forma em relação à coordenada do mapeamento 
     
    dN1dS1 = S1 - 1/2; 
    dN2dS1 = -2*S1; 
    dN3dS1 = S1 + 1/2; 
     
    % dxdS1,dydS1 
    % 
    % derivadas das direções coordenadas em relação à coordenada do 
    % mapeamento. 
     
    dxdS1 = dN1dS1*x1 + dN2dS1*x2 + dN3dS1*x3; 
    dydS1 = dN1dS1*y1 + dN2dS1*y2 + dN3dS1*y3; 
     
    % PrimNMatriz 
    % 
    % Primeira matriz associada às funções de forma presente na expressão 
    % para a integral. 
     
    PrimNMatriz = [ N1 0  ; 
                     0 N1 ; 
                    N2 0  ; 
                     0 N2 ; 
                    N3 0  ; 
                     0 N3 ]; 
              
    % MatrizDeriv 
    % 
    % Matriz que contém as derivadas, essa matriz é utilizada na integração 
    % das cargas 
                  
     MatrizDeriv = [ dxdS1 -dydS1 ; 
                     dydS1  dxdS1 ]; 
     
    % Matrizp 
    % 
    % Essa amtriz é associada as cargas aplicadas na linhas, ela será 
    % utilizada na integração numérica. 



179 

 

                  
     Matrizp = [ ft ft ft ; 
                 fn fn fn ]; 
                  
    % dLdS1 
    % 
    % Jacobiano das transformadas 
      
    dLdS1 = sqrt( dxdS1^2 + dydS1^2 ); 
              
    % SegNMatriz 
    % 
    % Segunda matriz associada às funções de forma presente na expressão 
    % para a integral. 
     
              
     SegNMatriz = [ N1 N2 N3 ]'; 
     
    % Determinação do vetor de forças nodais equivalentes  
      
    felem = felem + PrimNMatriz*MatrizDeriv*Matrizp*SegNMatriz*w + ... 
      PrimNMatriz*[ fx fy ]'*dLdS1*w ; 
     
 end 
  
 % glno1x,glno1y,glno2x,glno2y,glno3x,glno3y 
 % 
 % Graus de liberdade para os nós da aresta avaliado onde serão 
 % introduzidas as forças nodais equivalentes. 
  
 glno1x = no1*2-1; 
 glno1y = no1*2; 
  
 glno2x = no2*2-1; 
 glno2y = no2*2; 
  
 glno3x = no3*2-1; 
 glno3y = no3*2; 
  
  % Introdução das condições de contorno no vetor de forças  
  
   
  % dfelem 
  % 
  % Esse valor é a derivada das forças aplicadas. 
     
    if intatual&amp;lt;= Nint0 
      
        dfelem = felem/(Nint0*DeltaT);    
      
    elseif intatual &gt; Nint0 
      
        dfelem = zeros(6,1);   
     
    end     
      
 TermInd(glno1x) = TermInd(glno1x) + dfelem(1); 



180 

 

 TermInd(glno1y) = TermInd(glno1y) + dfelem(2); 
 TermInd(glno2x) = TermInd(glno2x) + dfelem(3); 
 TermInd(glno2y) = TermInd(glno2y) + dfelem(4); 
 TermInd(glno3x) = TermInd(glno3x) + dfelem(5); 
 TermInd(glno3y) = TermInd(glno3y) + dfelem(6); 
   
 % Obs: é importante salientar que a imposição 
 % condição de contorno de pressão precisa ser colocada após a condição de  
 % contorno de vazão pois caso isso não ocorra, é possível que a vazão  
 % modifique o valor da pressão, se não houver cuidade nas imposições das  
 % consições de contorno. 
  
 %------------------------------------------------------------------------% 
 % Introdução das condições de contornos mecânicas nas arestas - Fim 
 %------------------------------------------------------------------------% 
  
%% 
  
 %------------------------------------------------------------------------% 
 % Introdução das condições de contornos hidráulicas nas arestas - Início 
 %------------------------------------------------------------------------% 
  
 % noh1, noh2 
 % 
 % Primeiro e segundo nó da aresta considerando apenas o problema 
 % hidráulico. 
  
 noh1 = no1; 
 noh2 = no3; 
  
 % xh1, yh1, xh2, yh2 
 % 
 % Coordenadas x e y dos nós noh1 e noh2. 
  
 xh1 = Coord(noh1,1); 
 yh1 = Coord(noh1,2); 
 xh2 = Coord(noh2,1); 
 yh2 = Coord(noh2,2); 
  
 % L 
 % 
 % Comprimento da aresta avaliada. 
  
 L = sqrt((xh1 - xh2)^2 + (yh1 - yh2)^2); 
  
 % vce 
 % 
 % Vazão concentrada equivalente. 
  
 vce = v*L/2; 
  
 % Introdução da vazão concentrada equivalente no vetor independente de 
 % fluxos. 
  
 TermInd(nglm+GlpCC(2,noh1)) = TermInd(nglm+GlpCC(2,noh1)) + vce; 
 TermInd(nglm+GlpCC(2,noh2)) = TermInd(nglm+GlpCC(2,noh2)) + vce; 
  
 %------------------------------------------------------------------------% 



181 

 

 % Introdução das condições de contornos hidráulicas nas arestas - Fim 
 %------------------------------------------------------------------------% 
  
end 
  
 end 
  
 %------------------------------------------------------------------------% 
 % Introdução das condições de contorno das arestas - Fim 
 %------------------------------------------------------------------------% 
  
 %% 
  
 %------------------------------------------------------------------------% 
 % Introdução das condições de contorno dos pontos - Início 
 %------------------------------------------------------------------------% 
  
% O comando de repetição abaixo introduz as condições de contorno  
% associadas aos pontos nodais.  
  
if PropPoint ~= 0 
  
for i=1:size(PropPoint,1) 
     
 % NumGfPoint 
 % 
 % Número do grupo físico dos pontos. 
     
 NumGfPoint = PropPoint(i,2);  
  
 % no 
 % 
 % Nó avaliado. 
  
 no = PropPoint(i,3);  
  
 %------------------------------------------------------------------------% 
 % Valores e introdução das condições de contorno mecânicas nos pontos 
 % - Início 
 %------------------------------------------------------------------------% 
  
 % fx,fy 
 % 
 % Forças nodais concentradas. 
     
 fx = CaracPoint(NumGfPoint,1); 
 fy = CaracPoint(NumGfPoint,2); 
  
 % glnox,glnoy 
 % 
 % Graus de liberdade em x e y do nó avaliado. 
  
 glnox = no*2 - 1; 
 glnoy = no*2; 
   
  % dfx,dfy 
  % 
  % Esse valor é a derivada das forças aplicadas. 



182 

 

     
    if intatual&amp;lt;= Nint0 
      
        dfx = fx/(Nint0*DeltaT);    
        dfy = fy/(Nint0*DeltaT); 
         
    elseif intatual &gt; Nint0     
      
        dfx = 0;    
        dfy = 0; 
         
    end     
  
 % Introdução das forças concentradas. 
   
 TermInd(glnox) = TermInd(glnox) + dfx; 
 TermInd(glnoy) = TermInd(glnoy) + dfy; 
  
 %------------------------------------------------------------------------% 
 % Valores e introdução das condições de contorno mecânicas nos pontos 
 % - Fim 
 %------------------------------------------------------------------------% 
  
 %% 
  
 %------------------------------------------------------------------------% 
 % Valores e introdução das condições de contorno hidráulicas nos pontos 
 % - Início 
 %------------------------------------------------------------------------% 
  
 % v 
 % 
 % Valor de fluxo prescrito. 
  
 v = CaracPoint(NumGfPoint,7); 
  
 % Introdução da condição de contorno na matriz H. 
  
 TermInd(nglm + GlpCC(2,no)) = TermInd(nglm + GlpCC(2,no)) + v; 
  
 %------------------------------------------------------------------------% 
 % Valores e introdução das condições de contorno hidráulicas nos pontos 
 % - Fim 
 %------------------------------------------------------------------------% 
  
 %% 
  
end 
  
end 
  
 %------------------------------------------------------------------------% 
 % Introdução das condições de contorno dos pontos - Fim 
 %------------------------------------------------------------------------% 
  
 %% 
   



183 

 

 %------------------------------------------------------------------------% 
 % Introdução das condições de contorno dos elementos - Início            % 
 %------------------------------------------------------------------------% 
  
 for k=1:size(PropElem,1) 
  
  % F_local é o vetor de cargas nodais equivalentes para as forças de corpo 
  % para cada elemento avaliado.    
      
  F_local = zeros(12,1);    
      
  % Nós que formam o elemento i 
  % Coordenadas de nada nó 
   
  x1 = Coord(PropElem(k,4),1); 
  x2 = Coord(PropElem(k,5),1); 
  x3 = Coord(PropElem(k,6),1); 
  x4 = Coord(PropElem(k,7),1); 
  x5 = Coord(PropElem(k,8),1); 
  x6 = Coord(PropElem(k,9),1); 
   
  y1 = Coord(PropElem(k,4),2); 
  y2 = Coord(PropElem(k,5),2); 
  y3 = Coord(PropElem(k,6),2); 
  y4 = Coord(PropElem(k,7),2); 
  y5 = Coord(PropElem(k,8),2); 
  y6 = Coord(PropElem(k,9),2); 
   
  % gfelem 
  % 
  % Grupo correspondente ao elemento. 
   
  gfelem = PropElem(k,2); 
   
  % bx,by 
  % 
  % Componentes do vetor de forças de corpo. 
   
  bx = CaracPlan(gfelem,7); 
  by = CaracPlan(gfelem,8); 
   
  % Vetorb 
  % 
  % Vetor de forças de corpo. 
   
  Vetorb = [ bx ; by ]; 
   
  % CC 
  % 
  % Matriz de Coordenadas nodais 
   
  CC=[x1 x2 x3 x4 x5 x6; 
      y1 y2 y3 y4 y5 y6]'; 
     
  % Essa matriz são os valores dos pontos de Gauss e seus respectivos pesos 
   
  Int_Gauss_Aux = [ 1/6 1/6 1/6 
                    1/6 2/3 1/6  



184 

 

                    1/6 1/6 2/3]; 
  
  % npg 
  % 
  % Número de pontos de Gauss por elementos 
   
  npg = size(Int_Gauss_Aux,1);               
                 
    for i=1:npg; 
       
       
     epsilon = Int_Gauss_Aux(i,2)  ;       
     neta = Int_Gauss_Aux(i,3) ; 
     gama = 1 - epsilon - neta;      
        
     w = Int_Gauss_Aux(i,1); 
       
     % N    
     %      
     % Funçaõ de forma mapeada 
   
     N1 = -gama*(1-2*gama); 
     N2 = -epsilon*(1-2*epsilon); 
     N3 = -neta*(1-2*neta); 
     N4 = 4*epsilon*gama; 
     N5 = 4*epsilon*neta; 
     N6 = 4*neta*gama; 
   
     % MatrizN 
     % 
     % Matriz das funções de forma 
   
     MatrizN = [ N1  0   N2  0    N3  0   N4  0  N5  0    N6  0;  
                  0  N1  0   N2   0   N3  0   N4  0   N5  0   N6]; 
       
     % GN 
     % 
     % Gradiente de N 
   
     GN    = [ 1-4*gama    -1+4*epsilon         0        4*(gama - epsilon)   
4*neta         -4*neta; 
               1-4*gama           0       -1+4*neta          -4*epsilon      
4*epsilon   4*(gama - neta) ]; 
             
     % J 
     % 
     % Matriz jacobiana 
         
     J = GN*CC ;        
   
     % detJ 
     % 
     % Determinante do jacobiano 
           
     detJ  = det(J);      
          
     % Np 
     % 



185 

 

     % Matriz contendo as funções de forma para a pressão 
     % 
     % OBs: Elemento triangular com 3 nós. 
     % REFERÊNCIA 4. 
   
     %Np = [ 1-epsilon-neta epsilon neta]; 
          
     % Construção das matrizes locais pelo Método da Integração Numérica de 
     % Gauss 
      
     F_local = F_local + w*MatrizN'*Vetorb*detJ; 
      
     % dg(i) 
     % 
     % Contadores para a indexação do vetor local de forças nodais 
     % equivalentes. 
  
     dg(1) = 2*PropElem(k,4)-1; 
     dg(2) = 2*PropElem(k,4); 
     dg(3) = 2*PropElem(k,5)-1; 
     dg(4) = 2*PropElem(k,5); 
     dg(5) = 2*PropElem(k,6)-1; 
     dg(6) = 2*PropElem(k,6); 
     dg(7) = 2*PropElem(k,7)-1; 
     dg(8) = 2*PropElem(k,7); 
     dg(9) = 2*PropElem(k,8)-1; 
     dg(10) = 2*PropElem(k,8); 
     dg(11) = 2*PropElem(k,9)-1; 
     dg(12) = 2*PropElem(k,9); 
      
  % dF_local 
  % 
  % Esse valor é a derivada das forças aplicadas. 
     
    if intatual&amp;lt;= Nint0 
      
        dF_local = F_local/(Nint0*DeltaT);    
         
    elseif intatual &gt; Nint0     
      
        dF_local = zeros(size(F_local));            
         
    end      
      
     for r=1:12 
      
     TermInd(dg(r)) = TermInd(dg(r)) + dF_local(r);  
   
     end 
      
   end  
    
 end 
   
 %------------------------------------------------------------------------% 
 % Introdução das condições de contorno dos elementos - Fim               % 
 %------------------------------------------------------------------------%    
   



186 

 

  
 % qglt 
 % 
 % Quantidade de graus de liberdade totais. 
  
  qglt = size(Ce,1); 
  
 % nglm 
 % 
 % Número de graus de liberdades mecânicos. 
  
 nglm = size(K,1);  
  
 % Correção do termo independente. 
 TermInd(1:nglm) = -TermInd(1:nglm); 
 TermInd'; 
 %TermInd(nglm+1:qglt) = -TermInd(nglm+1:qglt);  
  
End 
 

CondContornoConsolidation.m 

%-------------------------------------------------------------------------% 
%                              ROTINA                                     % 
%-------------------------------------------------------------------------% 
% TÍTULO: MÉTODO DOS ELEMENTOS FINITOS MISTOS PARA A SOLUÇÃO DO PROBLEMA  % 
% DE ACOMPLAMENTO GEOMECÂNICO DADO PELA TEORIA DE BIOT                    % 
%-------------------------------------------------------------------------% 
                                                                            
%-------------------------------------------------------------------------% 
%                          SUB-ROTINA                                     % 
%-------------------------------------------------------------------------% 
% TÍTULO: CondContornoConsolidation                                       % 
% DESCRIÇÃO: Rotina para introdução das condições de contorno na matriz   % 
% de rigidez e para a construção do vetor de forças.                      % 
%-------------------------------------------------------------------------% 
% Programador: Lucíolo Victor (DECIVIL-UFPE)                              % 
% Orientador: Prof. Dr. Ivaldo Dário (DECIVIL - UFPE)                     % 
% Data de criação: 24-02-2016                                             % 
% Última modificação: 24-02-2016                                          % 
%-------------------------------------------------------------------------% 
  
  
function [Af,M1f] =  CondContornoConsolidation(CaracPoint,CaracLine,... 
    PropPoint,PropLines,GlpCC,A,M1,K,H) 
  
%% 
  
 %------------------------------------------------------------------------% 
 % Incialização das matrizes - Início 
 %------------------------------------------------------------------------% 
  
 % Af  
 % 
 % Matriz A final. 
  
 Af = A; 
  



187 

 

 % M1f 
 % 
 % Vetor M1 final. 
  
 M1f = M1; 
  
 % nglm,nglh 
 % 
 % Número de graus de liberdades mecânicos, número de graus de liberdade 
 % hidráulicos. 
  
 nglm = size(K,1);  
 nglh = size(H,1); 
  
 %------------------------------------------------------------------------% 
 % Incialização das matrizes - Fim 
 %------------------------------------------------------------------------% 
  
 %% 
  
 %------------------------------------------------------------------------% 
 % Introdução das condições de contorno das arestas - Início 
 %------------------------------------------------------------------------% 
  
 % O comando de repetição abaixo introduz os condições de contorno 
 % associadas às linhas da geometria. 
  
 if PropLines ~= 0 
  
for i=1:size(PropLines,1) 
      
 % no1, no2, no3 
 % 
 % Nós que formama a aresta avaliada. 
  
 no1 = PropLines(i,4); 
 no2 = PropLines(i,6); 
 no3 = PropLines(i,5); 
  
 % Numgf 
 % 
 % Número do grupo físico que a aresta pertence. 
  
 Numgf = PropLines(i,2); 
 %% 
  
 %------------------------------------------------------------------------% 
 % Valores das condições de contorno mecânica  nas arestas - Início  
 %------------------------------------------------------------------------% 
   
 % ux,uy 
 % 
 % Deslocamentos prescritos nas direções x e y na aresta avaliada. 
  
 ux = CaracLine(Numgf,5); 
 uy = CaracLine(Numgf,6); 
  
 % kx,ky 



188 

 

 % 
 % São os flags relativos às condições de contorno na aresta avaliada. 
   
 kx = CaracLine(Numgf,7); 
 ky = CaracLine(Numgf,8); 
  
 %------------------------------------------------------------------------% 
 % Valores das condições de contorno mecânicas  nas arestas - Fim                             
 %------------------------------------------------------------------------% 
  
 %% 
  
 %------------------------------------------------------------------------% 
 % Valores das condições de contorno hidráulicas  nas arestas - Início 
 %------------------------------------------------------------------------% 
  
 % p 
 % 
 % Pressão imposta na aresta. 
  
 p = CaracLine(Numgf,10); 
  
 % y 
 % 
 % Valor de gama para a condição de contorno hidráulica. 
   
 y = CaracLine(Numgf,11); 
  
 %------------------------------------------------------------------------% 
 % Valores das condições de contorno hidráulicas  nas arestas - Fim 
 %------------------------------------------------------------------------% 
  
 %% 
  
 %------------------------------------------------------------------------% 
 % Introdução das condições de contornos mecânicas  nas arestas - Início 
 %------------------------------------------------------------------------% 
  
 % auxK 
 %  
 % Matriz auxiliar para a introdução dos apoios. 
  
 auxA = zeros(nglm+nglh,1); 
  
 % glno1x,glno1y,glno2x,glno2y,glno3x,glno3y 
 % 
 % Graus de liberdade para os nós da aresta avaliado onde serão 
 % introduzidas as forças nodais equivalentes. 
  
 glno1x = no1*2-1; 
 glno1y = no1*2; 
  
 glno2x = no2*2-1; 
 glno2y = no2*2; 
  
 glno3x = no3*2-1; 
 glno3y = no3*2; 
   



189 

 

 % Introdução das condições de contorno mecânica na matriz A.Essa condição 
 % de contorno é associada à condição de contorno de pressão prescrita. 
  
 if kx == 1  
  
 Af(glno1x,:) = auxA; 
 Af(glno2x,:) = auxA; 
 Af(glno3x,:) = auxA; 
 Af(:,glno1x) = auxA; 
 Af(:,glno2x) = auxA; 
 Af(:,glno3x) = auxA; 
 Af(glno1x,glno1x) = 1; 
 Af(glno2x,glno2x) = 1; 
 Af(glno3x,glno3x) = 1; 
 M1f(glno1x) = ux; 
 M1f(glno2x) = ux; 
 M1f(glno3x) = ux; 
  
 end 
  
 if ky == 1  
  
 Af(glno1y,:) = auxA; 
 Af(glno2y,:) = auxA; 
 Af(glno3y,:) = auxA; 
 Af(:,glno1y) = auxA; 
 Af(:,glno2y) = auxA; 
 Af(:,glno3y) = auxA;  
 Af(glno1y,glno1y) = 1; 
 Af(glno2y,glno2y) = 1; 
 Af(glno3y,glno3y) = 1;  
 M1f(glno1y) = uy; 
 M1f(glno2y) = uy; 
 M1f(glno3y) = uy; 
  
 end 
  
 %------------------------------------------------------------------------% 
 % Introdução das condições de contornos mecânicas nas arestas - Fim 
 %------------------------------------------------------------------------% 
  
%% 
  
 %------------------------------------------------------------------------% 
 % Introdução das condições de contornos hidráulicas nas arestas - Início 
 %------------------------------------------------------------------------% 
  
 % noh1, noh2 
 % 
 % Primeiro e segundo nó da aresta considerando apenas o problema 
 % hidráulico. 
  
 noh1 = no1; 
 noh2 = no3; 
  
 % Introdução da condição de contorno hidráulica na matriz A. Essa condição 
 % de contorno é associada à condição de contorno de pressão prescrita. 
  
 if y == 1  



190 

 

     
 Af(nglm+GlpCC(2,noh1),:) = auxA;      
 Af(nglm+GlpCC(2,noh2),:) = auxA;      
 Af(:,nglm+GlpCC(2,noh1)) = auxA;      
 Af(:,nglm+GlpCC(2,noh2)) = auxA;    
 Af(nglm+GlpCC(2,noh1),nglm+GlpCC(2,noh1)) = 1;     
 Af(nglm+GlpCC(2,noh2),nglm+GlpCC(2,noh2)) = 1; 
 M1f(nglm+GlpCC(2,noh1)) = p; 
 M1f(nglm+GlpCC(2,noh2)) = p; 
      
 end 
  
  
 %------------------------------------------------------------------------% 
 % Introdução das condições de contornos hidráulicas nas arestas - Fim 
 %------------------------------------------------------------------------% 
  
end 
  
 end 
  
 %------------------------------------------------------------------------% 
 % Introdução das condições de contorno das arestas - Fim 
 %------------------------------------------------------------------------% 
  
 %% 
   
 %------------------------------------------------------------------------% 
 % Introdução das condições de contorno dos pontos - Início 
 %------------------------------------------------------------------------% 
  
  
% O comando de repetição abaixo introduz as condições de contorno  
% associadas aos pontos nodais.  
  
if PropPoint ~= 0 
  
for i=1:size(PropPoint,1) 
     
 % NumGfPoint 
 % 
 % Número do grupo físico dos pontos. 
     
 NumGfPoint = PropPoint(i,2);  
  
 % no 
 % 
 % Nó avaliado. 
  
 no = PropPoint(i,3); 
   
 %------------------------------------------------------------------------% 
 % Valores e introdução das condições de contorno mecânicas nos pontos 
 % - Início 
 %------------------------------------------------------------------------% 
  
 % ux,uy 
 % 



191 

 

 % Deslocamentos prescritos nos nós. 
  
 ux = CaracPoint(NumGfPoint,3); 
 uy = CaracPoint(NumGfPoint,4); 
     
 % kx,ky 
 % 
 % Flag associado à restrição de apoio do nó. 
  
 kx = CaracPoint(NumGfPoint,5); 
 ky = CaracPoint(NumGfPoint,6); 
  
 % glnox,glnoy 
 % 
 % Gruas de liberdade em x e y do nó avaliado. 
  
 glnox = no*2 - 1; 
 glnoy = no*2; 
  
 % AuxAp 
 % 
 % Essa variável é uma variável auxiliar utilizada para a introdução dos 
 % apoios para os pontos. 
  
 AuxAp = zeros(size(K,1)+size(H,1),1); 
  
  % Cotribuição na matriz de rigidez global das condições de contorno 
 % associadas aos nós. 
  
 if kx == 1  
  
 Af(glnox,:) = AuxAp; 
 Af(:,glnox) = AuxAp; 
 Af(glnox,glnox) = 1; 
 M1f(glnox) = ux; 
  
 end 
  
 if ky == 1  
  
 Af(glnoy,:) = AuxAp; 
 Af(:,glnoy) = AuxAp; 
 Af(glnoy,glnoy) = 1; 
 M1f(glnoy) = uy; 
  
 end  
   
 %------------------------------------------------------------------------% 
 % Valores e introdução das condições de contorno mecânicas nos pontos 
 % - Fim 
 %------------------------------------------------------------------------% 
  
 %% 
  
 %------------------------------------------------------------------------% 
 % Valores e introdução das condições de contorno hidráulicas nos pontos 
 % - Início 
 %------------------------------------------------------------------------% 



192 

 

  
 % p 
 % 
 % Valor de pressãao prescrita no ponto. 
  
 p = CaracPoint(NumGfPoint,8); 
  
 % y 
 % 
 % Valor de gama para o ponto. 
  
 y = CaracPoint(NumGfPoint,9); 
  
 % Introdução da condição de contorno de fluxo na matriz A. Esse 
 % procedimento está associado à introdução das pressões prescritas. 
  
 if y == 1  
      
 Af(nglm + GlpCC(2,no),:) = AuxAp; 
 Af(:,nglm + GlpCC(2,no)) = AuxAp; 
 Af(nglm + GlpCC(2,no),nglm + GlpCC(2,no)) = 1;  
 M1f(nglm + GlpCC(2,no)) = p;  
  
 end 
   
 %------------------------------------------------------------------------% 
 % Valores e introdução das condições de contorno hidráulicas nos pontos 
 % - Fim 
 %------------------------------------------------------------------------% 
  
 %% 
  
end 
  
end 
  
 %------------------------------------------------------------------------% 
 % Introdução das condições de contorno dos pontos - Fim 
 %------------------------------------------------------------------------% 
        
 end 
  

PosProcessoBiot.m 

%-------------------------------------------------------------------------% 
%                              ROTINA                                     % 
%-------------------------------------------------------------------------% 
% TÍTULO: MÉTODO DOS ELEMENTOS FINITOS MISTOS PARA A SOLUÇÃO DO PROBLEMA  % 
% DE ACOMPLAMENTO GEOMECÂNICO DADO PELA TEORIA DE BIOT                    % 
%-------------------------------------------------------------------------% 
                                                                            
%-------------------------------------------------------------------------% 
%                          SUB-ROTINA                                     % 
%-------------------------------------------------------------------------% 
% TÍTULO: ProcessoMecMefMistos                                            % 
% DESCRIÇÃO: Processamento de dados dos arquivos .msh,.geo e da           % 
% entrada de dados para o problema mecânico.                              % 
%-------------------------------------------------------------------------% 



193 

 

% Programador: Lucíolo Victor (DECIVIL-UFPE)                              % 
% Orientador: Prof. Dr. Ivaldo Dário (DECIVIL - UFPE)                     % 
% Data de criação: 29-10-2015                                             % 
% Última modificação: 18-10-2016                                          % 
%-------------------------------------------------------------------------% 
  
function PosProcessoBiot(K,Ce,iaval1,X,Coord,Glp,PropElem,CaracPlan,... 
Imprimir_Desloc,Imprimir_Tens,fator,Imprimir_Pres,Imprimir_Px,... 
Imprimir_Py,Imprimir_Desloc_x,Imprimir_Desloc_y,xsup,xinf,ysup,yinf... 
,xpinf,xpsup,ypinf,ypsup,Nmaxint,DeltaT,Theta,Nint0) 
  
  
% Nelem 
% 
% Número de elementos. 
  
Nelem = size(PropElem,1); 
  
% Nnodes 
% 
% Números de nós da malha 
  
Nnodes = size(Coord,1); 
  
% Qgld 
% 
% Quantidade de graus de liberdade de deslocamento 
  
Qgld = size(K,1); 
  
% Qgl 
% 
% Quantidade de graus de liberdade 
  
Qgl = size(Ce,1); 
  
disp('Número de elementos da malha') 
disp(Nelem) 
disp('Número de nós da malha') 
disp(Nnodes) 
  
for i=1:size(iaval1,2) 
     
% iaval 
% 
% Iteração avaliada 
     
iaval = iaval1(i); 
  
disp('ITERAÇÃO AVALIADA') 
disp(iaval) 
  
% niaval 
% 
% Strig correspondente a iaval. 
  
niavalaux = num2str(iaval); 
  



194 

 

niaval = strcat('Nit=',niavalaux); 
  
% Criando o diretório correspondente a iaval. 
  
mkdir(niaval) 
  
[TxMax,TxMin,TyMax,TyMin,TxyMax,TxyMin] = PosImprimirMec(Coord,Qgld,... 
Nelem,fator,Imprimir_Tens,Imprimir_Desloc,Imprimir_Desloc_x,... 
Imprimir_Desloc_y,xsup,xinf,ysup,yinf,PropElem,iaval,X,CaracPlan,niaval); 
  
[MaxP,MinP] = PosImprimirHid(X,Coord,Qgld,Qgl,iaval,Imprimir_Px,xpsup,... 
    xpinf,Imprimir_Py,ypsup,ypinf,Imprimir_Pres,Glp,Nelem,PropElem,niaval); 
  
% Salvando os resultados do pós processamento 
  
local = strcat('/',niaval,'/','Resultados.dat'); 
fileID = fopen( [pwd '/' local], 'wt' ); 
  
txmaxima = 'Tensão Máxima em X'; 
txminima = 'Tensão Mínima em X'; 
tymaxima = 'Tensão Máxima em Y'; 
tyminima = 'Tensão Mínima em Y'; 
txymaxima = 'Tensão Máxima em XY'; 
txyminima = 'Tensão Mínima em XY'; 
pmaxima = 'Pressão máxima'; 
pminima = 'Pressão mínima'; 
nmi = 'Número Máximo de Iterações'; 
dtaval = 'Delta t = Intervalo de Tempo adotado'; 
thetaaval = 'Theta'; 
n0 = 'Número da iteração Nit0'; 
  
fprintf(fileID,'%s = %d\n', txmaxima,TxMax,txminima,TxMin,... 
tymaxima,TyMax,tyminima,TyMin,txymaxima,TxyMax,txyminima... 
,TxyMin,pmaxima,MaxP,pminima,MinP,nmi,Nmaxint',dtaval... 
,DeltaT,thetaaval,Theta,n0,Nint0); 
  
fclose(fileID); 
  
end 
  
end 
 

PosImprimirMec.m 

%-------------------------------------------------------------------------% 
%                              ROTINA                                     % 
%-------------------------------------------------------------------------% 
% TÍTULO: MÉTODO DOS ELEMENTOS FINITOS MISTOS PARA A SOLUÇÃO DO PROBLEMA  % 
% DE ACOMPLAMENTO GEOMECÂNICO DADO PELA TEORIA DE BIOT                    % 
%-------------------------------------------------------------------------% 
                                                                            
%-------------------------------------------------------------------------% 
%                          SUB-ROTINA                                     % 
%-------------------------------------------------------------------------% 
% TÍTULO: PosImprimirMec                                                  % 
% DESCRIÇÃO: Pós-processamento de dados para o problema mecânico.         % 
%-------------------------------------------------------------------------% 



195 

 

% Programador: Lucíolo Victor (DECIVIL-UFPE)                              % 
% Orientador: Prof. Dr. Ivaldo Dário (DECIVIL - UFPE)                     % 
% Data de criação: 16-08-2016                                             % 
% Última modificação: 16-08-2016                                          % 
%------------------------------------------------------------------------- 
  
function [TxMax,TxMin,TyMax,TyMin,TxyMax,TxyMin] = PostImprimirMec(Coord... 
 ,Qgld,Nelem,fator,Imprimir_Tens,Imprimir_Desloc,Imprimir_Desloc_x,... 
 Imprimir_Desloc_y,xsup,xinf,ysup,yinf,PropElem,iaval,X,CaracPlan,niaval) 
  
  
% Post_Processor 
% 
% Esta função imprime os resultados da análise  
  
  
%% 
%-------------------------------------------------------------------------% 
%                       Cálculo das Tensões Totais                        % 
%-------------------------------------------------------------------------% 
  
% Inc 
% 
% Matriz de incidência. 
  
Inc(1,:) = PropElem(:,4)'; 
Inc(2,:) = PropElem(:,7)'; 
Inc(3,:) = PropElem(:,5)'; 
Inc(4,:) = PropElem(:,8)'; 
Inc(5,:) = PropElem(:,6)'; 
Inc(6,:) = PropElem(:,9)'; 
  
% Construção de dg 
  
for m=1:Nelem 
  
  dg(1,m) = 2*Inc(1,m)-1; 
  dg(2,m) = 2*Inc(1,m); 
  dg(3,m) = 2*Inc(2,m)-1; 
  dg(4,m) = 2*Inc(2,m); 
  dg(5,m) = 2*Inc(3,m)-1; 
  dg(6,m) = 2*Inc(3,m); 
  dg(7,m) = 2*Inc(4,m)-1; 
  dg(8,m) = 2*Inc(4,m); 
  dg(9,m) = 2*Inc(5,m)-1; 
  dg(10,m) = 2*Inc(5,m); 
  dg(11,m) = 2*Inc(6,m)-1; 
  dg(12,m) = 2*Inc(6,m); 
   
end 
  
% Deslocamento 
% 
% Deslocamentos na iteração i 
  
Deslocamento = X(1:Qgld,iaval); 
  
  



196 

 

for m=1:Nelem 
         
   for i=1:12 
     
    dnelem(i) = Deslocamento(dg(i,m)); 
    
   end  
    
   % A matriz DNE guarda os valores dos deslocamentos de cada elemento. 
    
   DNE(m,:) = dnelem; 
   
end 
  
% Comando de repetição com cálculo das tensões nos pontos de Gauss. 
  
for m=1:Nelem 
  
% Gfelem  
% 
% Essa variável infica o grupo físico que o elemento faz parte 
     
Gfelem = PropElem(m,2); 
  
% Ex 
% 
% Módulo de elasticidade na direção x. 
  
Ex = CaracPlan(Gfelem,1); 
  
% Ex 
% 
% Módulo de elasticidade na direção y. 
  
Ey = CaracPlan(Gfelem,2); 
  
% vxy 
% 
% Coeficiente de Poisson associado às direções x e y. 
  
vxy = CaracPlan(Gfelem,3); 
  
% C1,C2,C3 
% 
% Coeficientes para a matriz constitutiva. 
  
C1 = Ex*(1-vxy)/((1+vxy)*(1-2*vxy)); 
  
C2 = Ey*vxy/((1+vxy)*(1-2*vxy)); 
  
C3 = ((Ex+Ey)/2)/(2*(1+vxy)); 
  
% D 
% 
% matriz constitutiva referente ao estado plano de tensões 
  
D = [ C1 C2 0 ; C2 C1 0 ; 0 0 C3 ]; 



197 

 

  
% DeslocElement  
% 
% Deslocamento no elemento avaliado 
  
DeslocElement = DNE(m,:)'; 
  
% Tens_Gauss_Point 
% 
% Cálculo das tensões nos pontos de Gauss 
   
[X1,Y1,TensX,TensY,TensXY] = Tens_Gauss_Point(m,Coord,Inc,DeslocElement,D); 
  
% XX,YY  
% 
% Coordenadas. 
  
XX(m,:) = X1'; 
YY(m,:) = Y1'; 
   
% TensX_Elementos, TensY_Elements, TensXY_Elements. 
% 
% Valores de tensões em x, y e xy para os pontos de gauss nos elementos  
% avaliadas. 
  
TensX_Elements(m,:) = TensX; 
TensY_Elements(m,:) = TensY; 
TensXY_Elements(m,:) = TensXY; 
    
end 
  
%------------------------------------------------------------------------% 
% Impressão a deformada                                                  % 
%------------------------------------------------------------------------% 
  
% Imprimir_Desloc 
% 
% Essa variável é um flag para a impressão dos deslocamentos, se 
% Imprimir_Desloc = 1 os deslocamentos são imprimidos 
  
if Imprimir_Desloc == 1 
  
  
f1 = figure('Position', [100 100 752 350]); 
set(f1,'name','SAEUFPE:Estrutura deformada','numbertitle','off') 
clf; 
  
  
for i=1:Nelem, 
    
    xd1=Coord(Inc(1,i),1)+fator*DNE(i,1); 
    xd2=Coord(Inc(2,i),1)+fator*DNE(i,3); 
    xd3=Coord(Inc(3,i),1)+fator*DNE(i,5); 
    xd4=Coord(Inc(4,i),1)+fator*DNE(i,7); 
    xd5=Coord(Inc(5,i),1)+fator*DNE(i,9); 
    xd6=Coord(Inc(6,i),1)+fator*DNE(i,11); 
     
    yd1=Coord(Inc(1,i),2)+fator*DNE(i,2); 



198 

 

    yd2=Coord(Inc(2,i),2)+fator*DNE(i,4); 
    yd3=Coord(Inc(3,i),2)+fator*DNE(i,6); 
    yd4=Coord(Inc(4,i),2)+fator*DNE(i,8); 
    yd5=Coord(Inc(5,i),2)+fator*DNE(i,10); 
    yd6=Coord(Inc(6,i),2)+fator*DNE(i,12); 
     
  x1 = Coord(Inc(1,i),1); 
  x2 = Coord(Inc(2,i),1); 
  x3 = Coord(Inc(3,i),1); 
  x4 = Coord(Inc(4,i),1);   
  x5 = Coord(Inc(5,i),1); 
  x6 = Coord(Inc(6,i),1); 
   
  y1 = Coord(Inc(1,i),2); 
  y2 = Coord(Inc(2,i),2); 
  y3 = Coord(Inc(3,i),2); 
  y4 = Coord(Inc(4,i),2);   
  y5 = Coord(Inc(5,i),2); 
  y6 = Coord(Inc(6,i),2); 
     
  plot([x1 x2 x3 x4 x5 x6 x1],[y1 y2 y3 y4 y5 y6 y1],'b','LineWidth',2); 
hold on 
  plot([xd1 xd2 xd3 xd4 xd5 xd6 xd1],[yd1 yd2 yd3 yd4 yd5 yd6 
yd1],'r','LineWidth',2);hold on; 
        
           
axis equal; 
axis off     
end 
  
  
% Variável avaliada. 
  
caracaval = 'Deslocamento'; 
  
% local 
% 
% Local onde será salva a imagem. 
  
local = strcat('/',niaval,'/',caracaval); 
  
% figaval 
% 
% Figura que será salva. 
  
figaval = f1; 
  
% salvando a Figura no diretório associado. 
  
saveas(figaval,[pwd local]); 
  
% fechando a figura 
  
close(f1) 
  
end 
  
  



199 

 

%-------------------------------------------------------------------------% 
% Imprimir deslocamentos de uma superfície definida entre xinf e xsup     % 
%-------------------------------------------------------------------------% 
  
  
% Imprimir_Desloc_x 
% 
% Essa variável é um flag para a impressão dos deslocamentos ao longo de  
% uma superfície x, se Imprimir_Desloc_x = 1 os deslocamentos são 
% imprimidos 
  
if Imprimir_Desloc_x == 1 
  
  
f1 = figure('Position', [100 100 752 350]); 
 set(f1,'name','\dx','numbertitle','off') 
  
cont = 0; 
  
for i=1:Nelem, 
    
    for j=1:6 
           
    xaux=Coord(Inc(j,i),1); 
   
        if xaux &gt; xinf &amp;amp;&amp;amp; xaux &amp;lt;xsup 
            cont = cont + 1; 
            yp2(cont)=Coord(Inc(j,i),2);         
            xp2(cont)=DNE(i,j*2-1); 
             
        end 
                 
    end    
           
axis equal; 
axis off     
  
end 
  
title('dx') 
plot(xp2,yp2,'o') 
  
% Variável avaliada. 
  
caracaval = 'DeslocamentoX'; 
  
% local 
% 
% Local onde será salva a imagem. 
  
local = strcat('/',niaval,'/',caracaval); 
  
% figaval 
% 
% Figura que será salva. 
  
figaval = f1; 



200 

 

  
% salvando a Figura no diretório associado. 
  
saveas(figaval,[pwd local]); 
  
% fechando a figura 
  
close(f1) 
  
end 
  
  
%-------------------------------------------------------------------------% 
% Imprimir deslocamentos el uma superfície definida entre yinf e ysup     % 
%-------------------------------------------------------------------------% 
  
% Imprimir_Desloc_y 
% 
% Essa variável é um flag para a impressão dos deslocamentos ao longo de  
% uma superfície y, se Imprimir_Desloc_y = 1 os deslocamentos são 
% imprimidos 
  
if Imprimir_Desloc_y == 1 
  
f1 = figure('Position', [100 100 752 350]); 
 set(f1,'name','\dy','numbertitle','off') 
  
cont = 0; 
  
for i=1:Nelem, 
    
    for j=1:6 
           
    yaux=Coord(Inc(j,i),2); 
   
        if yaux &gt; yinf &amp;amp;&amp;amp; yaux &amp;lt;ysup 
            cont = cont + 1; 
            xp1(cont)=Coord(Inc(j,i),1);         
            yp1(cont)=DNE(i,j*2); 
             
        end 
                 
    end    
           
axis equal; 
axis off     
end 
  
plot(xp1,yp1,'o') 
% Variável avaliada. 
  
caracaval = 'DeslocamentoY'; 
  
% local 
% 
% Local onde será salva a imagem. 
  



201 

 

local = strcat('/',niaval,'/',caracaval); 
  
% figaval 
% 
% Figura que será salva. 
  
figaval = f1; 
  
% salvando a Figura no diretório associado. 
  
saveas(figaval,[pwd local]); 
  
% fechando a figura 
  
close(f1) 
  
end 
  
%------------------------------------------------------------------------% 
% Impressão das tensões                                                  % 
%------------------------------------------------------------------------% 
  
% Imprimir_Tens 
% 
% Essa variável é um flag para a impressão ddas tensões, se 
% Imprimir_Tens(1) = 1 oas tensões em x serão impressas 
  
  
if Imprimir_Tens(1) == 1 
  
 %Tensões em diresão x    
  
 f1 = figure('Position', [100 100 752 350]); 
 set(f1,'name','\sigma_x_x contours','numbertitle','off') 
  
   for e=1:Nelem 
         
       XX1 = [XX(e,1) XX(e,2) XX(e,3) XX(e,1)]; 
       YY1 = [YY(e,1) YY(e,2) YY(e,3) YY(e,1)]; 
       dd1  = [TensX_Elements(e,1) TensX_Elements(e,2) TensX_Elements(e,3) 
TensX_Elements(e,1)]; 
       patch(XX1,YY1,dd1,'EdgeColor','none'); 
        
   end 
    
 axis equal; 
 axis off 
 title('Tensão X'); xlabel('X'); ylabel('Y'); colorbar 
  
 % Variável avaliada. 
  
caracaval = 'TensaoX'; 
  
% local 
% 
% Local onde será salva a imagem. 
  



202 

 

local = strcat('/',niaval,'/',caracaval); 
  
% figaval 
% 
% Figura que será salva. 
  
figaval = f1; 
  
% salvando a Figura no diretório associado. 
  
saveas(figaval,[pwd local]); 
  
% fechando a figura 
  
close(f1) 
  
end  
  
% Imprimir_Tens 
% 
% Essa variável é um flag para a impressão ddas tensões, se 
% Imprimir_Tens(2) = 1 oas tensões em y serão impressas 
  
  
if Imprimir_Tens(2) == 1 
  
 %Tensões em diresão y 
 f1 = figure('Position', [100 100 752 350]); 
 set(f1,'name','\sigma_y_y contours','numbertitle','off') 
  
   for e=1:Nelem 
         
       XX1 = [XX(e,1) XX(e,2) XX(e,3) XX(e,1)]; 
       YY1 = [YY(e,1) YY(e,2) YY(e,3) YY(e,1)]; 
       dd2  = [TensY_Elements(e,1) TensY_Elements(e,2) TensY_Elements(e,3) 
TensY_Elements(e,1)]; 
              
        patch(XX1,YY1,dd2,'EdgeColor','none'); 
        
   end 
   
 axis equal; 
 axis off 
 title('Tensão Y'); xlabel('X'); ylabel('Y'); colorbar 
  
 % Variável avaliada. 
  
caracaval = 'TensaoY'; 
  
% local 
% 
% Local onde será salva a imagem. 
  
local = strcat('/',niaval,'/',caracaval); 
  
% figaval 
% 



203 

 

% Figura que será salva. 
  
figaval = f1; 
  
% salvando a Figura no diretório associado. 
  
saveas(figaval,[pwd local]); 
  
% fechando a figura 
  
close(f1) 
  
end 
  
% Imprimir_Tens 
% 
% Essa variável é um flag para a impressão ddas tensões, se 
% Imprimir_Tens(3) = 1 oas tensões em xy serão impressas 
  
  
if Imprimir_Tens(3) == 1 
   %Tensão em direção xy 
 f1 = figure('Position', [100 100 752 350]); 
 set(f1,'name','\sigma_x_y contours','numbertitle','off') 
  
   for e=1:Nelem 
         
       XX1 = [XX(e,1) XX(e,2) XX(e,3) XX(e,1)]; 
       YY1 = [YY(e,1) YY(e,2) YY(e,3) YY(e,1)]; 
     dd3  = [TensXY_Elements(e,1) TensXY_Elements(e,2) TensXY_Elements(e,3) 
TensXY_Elements(e,1)]; 
        
        patch(XX1,YY1,dd3,'EdgeColor','none'); 
   end 
   
 axis equal; 
 axis off 
 title('Tensao XY'); xlabel('X'); ylabel('Y'); colorbar 
  
% Variável avaliada. 
  
caracaval = 'TensaoXY'; 
  
% local 
% 
% Local onde será salva a imagem. 
  
local = strcat('/',niaval,'/',caracaval); 
  
% figaval 
% 
% Figura que será salva. 
  
figaval = f1; 
  
% salvando a Figura no diretório associado. 
  



204 

 

saveas(figaval,[pwd local]); 
  
% fechando a figura 
  
close(f1) 
  
end 
  
TxMax = max(max(TensX_Elements)); 
TxMin = min(min(TensX_Elements)); 
TyMax = max(max(TensY_Elements)); 
TyMin = min(min(TensY_Elements)); 
TxyMax = max(max(TensXY_Elements)); 
TxyMin = min(min(TensXY_Elements)); 
  
disp('Máxima Tensão Normal em X') 
disp(TxMax) 
disp('Mínima Tensão Normal em X') 
disp(TxMin) 
disp('Máxima Tensão Normal em Y') 
disp(TyMax) 
disp('Mínima Tensão Normal em Y') 
disp(TyMin) 
disp('Máxima Tensão de Cisalhamento') 
disp(TxyMax) 
disp('Mínima Tensão de Cisalhamento') 
disp(TxyMin) 
  
end 

 
PosImprimirHid.m 

%-------------------------------------------------------------------------% 
%                              ROTINA                                     % 
%-------------------------------------------------------------------------% 
% TÍTULO: MÉTODO DOS ELEMENTOS FINITOS MISTOS PARA A SOLUÇÃO DO PROBLEMA  % 
% DE ACOMPLAMENTO GEOMECÂNICO DADO PELA TEORIA DE BIOT                    % 
%-------------------------------------------------------------------------% 
                                                                            
%-------------------------------------------------------------------------% 
%                          SUB-ROTINA                                     % 
%-------------------------------------------------------------------------% 
% TÍTULO: PosImprimirHid                                                  % 
% DESCRIÇÃO: Pós-processamento de dados para o problema hidráulico.       % 
%-------------------------------------------------------------------------% 
% Programador: Lucíolo Victor (DECIVIL-UFPE)                              % 
% Orientador: Prof. Dr. Ivaldo Dário (DECIVIL - UFPE)                     % 
% Data de criação: 16-08-2016                                             % 
% Última modificação: 16-08-2016                                          % 
%------------------------------------------------------------------------- 
  
function [MaxP,MinP] = PosImprimirHid(X,Coord,Qgld,Qgl,iaval,Imprimir_Px... 
,xpsup,xpinf,Imprimir_Py,ypsup,ypinf,Imprimir_Pres,Glp,Nelem,PropElem... 
,niaval) 
  
  
%-------------------------------------------------------------------------% 
%    Pressões ao longo de uma seção definida por um intervalo em x        % 
%-------------------------------------------------------------------------% 



205 

 

  
% Pressões na iteração i 
  
Pi = X((Qgld+1):Qgl,iaval); 
  
  
if Imprimir_Px == 1 
  
    contx = 0; 
         
    for i=1:size(Pi,1) 
     
        no = Glp(1,i); 
        paux = Pi(Glp(2,i)); 
        cxaux = Coord(no,1); 
        cyaux = Coord(no,2); 
     
        if cxaux &amp;lt;xpsup &amp;amp;&amp;amp; cxaux &gt; xpinf 
         
            contx = contx + 1; 
             
            pressurey(contx) = paux; 
            cy(contx) = cyaux; 
         
        end 
     
    end     
                 
    % Plotagem dos valores das pressões ao longo da coordenada x. 
    f1 = figure('Position', [100 100 752 350]); 
    set(f1,'name','PressureX','numbertitle','off') 
    clf; 
    plot(pressurey,cy,'o','color','r') 
     
    xlabel('Pressão') 
    ylabel('y') 
    legend('Solução Numérica','Location','northwest') 
    save '-ascii' 'PressureY.dat' 'pressurey' 
    save '-ascii' 'PressureYCoord.dat' 'cy'    
     
    % Variável avaliada. 
  
caracaval = 'PressaoX'; 
  
% local 
% 
% Local onde será salva a imagem. 
  
local = strcat('/',niaval,'/',caracaval); 
  
% figaval 
% 
% Figura que será salva. 
  
figaval = f1; 
  
% salvando a Figura no diretório associado. 



206 

 

  
saveas(figaval,[pwd local]); 
  
% fechando a figura 
  
close(f1) 
  
end 
  
%-------------------------------------------------------------------------% 
%    Pressões ao longo de uma seção definida por um intervalo em y        % 
%-------------------------------------------------------------------------% 
   
if Imprimir_Py == 1 
     
    conty = 0; 
         
    for i=1:size(Pi,1) 
     
    no = Glp(1,i); 
    cxaux = Coord(no,1); 
    cyaux = Coord(no,2); 
    paux = Pi(Glp(2,i)); 
     
        if cyaux &amp;lt;ypsup &amp;amp;&amp;amp; cyaux &gt; ypinf 
         
            conty = conty + 1; 
             
            pressurex(conty) = paux; 
            cx(conty) = cxaux; 
         
        end 
     
    end                 
         
    % Plotagem dos valores das pressões ao longo da coordenada y. 
    f1 = figure('Position', [100 100 752 350]); 
    set(f1,'name','PressureY','numbertitle','off') 
    clf; 
    plot(cx,pressurex,'o','color','r') 
    xlabel('x') 
    ylabel('Pressão') 
    legend('Solução Numérica','Location','northwest') 
    save '-ascii' 'PressureX.dat' 'pressurex' 
    save '-ascii' 'PressureXCoord.dat' 'cx'    
% Variável avaliada. 
  
caracaval = 'PressaoY'; 
  
% local 
% 
% Local onde será salva a imagem. 
  
local = strcat('/',niaval,'/',caracaval); 
  
% figaval 
% 
% Figura que será salva. 



207 

 

  
figaval = f1; 
  
% salvando a Figura no diretório associado. 
  
saveas(figaval,[pwd local]); 
  
% fechando a figura 
  
close(f1) 
  
end 
    
if Imprimir_Pres == 1 
  
f1 = figure('Position', [100 100 752 350]); 
set(f1,'name','Pressure','numbertitle','off') 
clf; 
     
 for k=1:Nelem 
           
  % dgp 
  % 
  % dgp consiste nos ponteiros relativos a pressão para o elemento avaliado  
  % na para a construção das matrizes Kup e Kpp 
  
  for i=1:size(Glp,2) 
        
     if PropElem(k,4) == Glp(1,i)  
    
     dgp(1) = Glp(2,i); 
    
     end 
    
     if PropElem(k,5) == Glp(1,i)  
    
     dgp(2) = Glp(2,i); 
    
     end 
    
     if PropElem(k,6) == Glp(1,i)  
    
     dgp(3) = Glp(2,i); 
    
     end    
      
  end 
    
     p1 = Pi(dgp(1)); 
     p2 = Pi(dgp(2)); 
     p3 = Pi(dgp(3)); 
     x1 = Coord(PropElem(k,4),1); 
     x2 = Coord(PropElem(k,5),1); 
     x3 = Coord(PropElem(k,6),1); 
     y1 = Coord(PropElem(k,4),2); 
     y2 = Coord(PropElem(k,5),2); 
     y3 = Coord(PropElem(k,6),2); 



208 

 

   
     % Plotar malha 
     % plot([x1 x2 x3 x1],[y1 y2 y3 y1],'b','LineWidth',2); hold on 
   
     XX1 = [x1 x2 x3 x1]; 
     YY1 = [y1 y2 y3 y1]; 
     P = [p1 p2 p3 p1]; 
              
     patch(XX1,YY1,P,'EdgeColor','none'); 
     title('Pressure'); colorbar 
           
     axis equal; 
     axis off     
      
      
 end 
  
 % Impressão dos valores extremos da pressão 
  
     
      
     % Variável avaliada. 
  
caracaval = 'Pressao'; 
  
% local 
% 
% Local onde será salva a imagem. 
  
local = strcat('/',niaval,'/',caracaval); 
  
% figaval 
% 
% Figura que será salva. 
  
figaval = f1; 
  
% salvando a Figura no diretório associado. 
  
saveas(figaval,[pwd local]); 
  
% fechando a figura 
  
close(f1) 
  
end 
  
     MaxP = max(Pi); 
     MinP = min(Pi); 
     disp('Máxima Pressão') 
     disp(MaxP) 
     disp('Mínima Pressão') 
     disp(MinP)   
  
end 
 



209 

 

APÊNDICE B 
 

Esse apêndice apresenta as soluções analíticas dos problemas apresentados 

SOLUÇÃO ANALÍTICA PARA O PROBLEMA DE TERZAGHI 
 

O Problema de Terzaghi consiste em um problema de um meio homogêneo e isotrópico, co-
mo permeabilidade E , coeficiente de Poisson ? , permeabilidade yk , densidade do fluido w?

, espessura H , sujeito, na sua face superior, por um carregamento f . O problema de desen-

volve em uma das direções coordenadas. A base da camada permanece impermeável e indes-
locável ao longo do adensamento e o seu topo, onde é aplicada a carga, se mantém drenante. 

As pressões são dadas pela expressão 

( )
( ) ( )2 2

2
0

2 1 2 14 2, exp
2 4

v

j

y
j j c tHp y t f sen

H H

?
??

?

?

=

? ?? ? ?? ? ?
= ?? ?? ?

? ?? ? ? ?
? ?

?  
          (A.1) 

Onde o coeficiente de consolidação é dado por 

( )
( ) ( )

1

1 1 2
y

v
w

k E
c

?
? ? ?

?
=

+ ?
 

          (A.2) 

e o fator tempo por 

2

y
v

tc E
T

H
=            (A.3) 

 

A solução da equação foi implementada no código computacional abaixo.
 

%-------------------------------------------------------------------------% 
%-------------------------------------------------------------------------% 
%                                                                         % 
%           PROGRAMA DE PÓS GRADUAÇÃO EM ENGENHARIA CIVIL - UFPE          % 
%                                                                         % 
%-------------------------------------------------------------------------% 
%-------------------------------------------------------------------------% 
  
%-------------------------------------------------------------------------% 
%                              LMCG - UFPE                                % 
%-------------------------------------------------------------------------% 
% ÁREA DE CONCENTRAÇÃO: GERENCIAMENTO E SIMULAÇÃO DE RESERVATÓRIOS DE     % 
% PETRÓLEO                                                                % 
% ALUNO: LUCÍOLO VICTOR MAGALHÃES E SILVA                                 % 
% PROF. ORIENTADOR: IVALDO DÁRIO PONTES SILVA FILHO                       % 
%-------------------------------------------------------------------------% 
  
clc 
clear all 



210 

 

  
%-------------------------------------------------------------------------% 
%                              ROTINA                                     % 
%-------------------------------------------------------------------------% 
% TÍTULO: SOLUÇÃO DA EQUAÇÃO DE TERZAGUI PARA O PROBLEMA DE ADENSAMENTO   % 
% UNIDIMENSIONAL.                                                         % 
% CRIAÇÃO: 30-11-2015                                                     % 
% ÚLTIMA MODIFICAÇÃO: 30-11-2015                                          % 
%-------------------------------------------------------------------------% 
  
%-------------------------------------------------------------------------% 
%                        ENTRADA DE DADOS DO PROBLEMA                     % 
%-------------------------------------------------------------------------% 
  
  
% E  
% 
% Módulo de Elasticidade do solo. 
% UNIDADE: MPa. 
  
E = 10^7; 
  
% v 
% 
% Coeficiente de Poisson do solo. 
  
v = 0.20; 
  
% Kv  
% 
% Permeabilidade vertical do solo. 
% UNIDADE: cm/s 
  
%Kv = 10^-6; 
Kv = 10^-6; 
  
% H 
%  
% Altura da camada. 
% UNIDADE: m 
  
H = 5; 
  
% yw 
% 
% Densidade da água. 
% UNIDADE: kgf/m^3 ( Ex: água 1000kgf/m^3 ) 
  
yw = 1000; 
  
% p0 
% 
% Poro pressão inicial. 
% UNIDADE: Pa. 
  
%p0 = 1000 
p0 = 10^3; 
  



211 

 

% T 
% 
% Fator tempo 
  
T = 1; 
  
  
% nd 
% 
% Número de divisões da camada. 
  
nd = 40; 
  
% 
%% 
%-------------------------------------------------------------------------% 
%                               PROCESSAMENTO                             % 
%-------------------------------------------------------------------------% 
  
% Tratamento dos dados para mudança de unidade. 
  
% Módulo de elasticidade de Pa para N/cm^2. 
  
%E = E*0.0001; 
%E = 10^7 
% Densidade do fluido de kgf/m^3 para N/cm^3. 
  
%yw = yw*(10/(100^3)); 
%yw= 1500 
  
% Altura da camada e profundidade analisada de m para cm. 
  
%H = 100*H; 
%H=5 
% cv 
% 
% Coeficiente de consolidação. 
  
cv = Kv*E*(1-v)/(yw*(1+v)*(1-2*v)); 
  
% tempo da análise em função do fator tempo; 
  
t = T*(H^2)/cv 
  
% Dz 
% 
% Variação na profundidade. 
  
Dz = H/nd; 
  
z = 0:Dz:H; 
  
for i=1:size(z,2) 
    
   pn = 0; 
     
    for n=1:2000 



212 

 

     
    pn = pn + (sin((2*n-1)*(pi/2)*((H-z(i))/H))/(2*n-1))*exp(-((2*n-
1)^2)*((pi^2)/4)*cv*(t/(H^2))); 
         
    end 
     
    u(i) = p0*(4/pi)*pn; 
  
end 
  
% Poropressão adimensional 
  
%u = u/p0; 
  
%z = z/H; 
  
hold on 
  
%plot(z(2:size(z,2)),u(2:size(u,2))); 
  
  
plot(u(2:size(u,2)),z(2:size(z,2)),'-'); 
legend('Solução Analítica') 
 

SOLUÇÃO ANALÍTICA PARA O PROBLEMA DE TERZAGHI MODIFICADO 
 

Esse problema consiste na consolidação de um meio de solo estratificado composto por duas 
camadas verticias. A primeira camada é definida pelos pontos 0y &gt;  e a segunda 0y &amp;lt;. A pri-

meira camada possui espessura 1h , a segunda 2h . A permeabilidade da camada 1 é dada por 

1yk  e da camada 2 por 2yk . Os parâmetros de Lammé da camada 1 são dados por 1K  e 1G  e da 

camada 2 por 2K  e 2G . Todo o domínio é saturado por um fluido homogêneo com densidade 

w? . O topo da camada é drenante e submetido a um carregament de valor f  e assim como o 

Problema de Terzaghi a base da camada é impermeável e indeslocável. 

A solução analítica das pressões é dada por  

( ) ( ) ( )
( ) ( ) ( ) ( ) ( ) ( )

( ) ( ) ( )
( ) ( ) ( ) ( ) ( ) ( )

2

21 1

1

2

2 2

expcos cos sen sen
,

0 : 2
1 cos sen sen cos

expcos cos sen sen
,

0 : 2
1 cos sen sen cos

jj j
j j

j jj j j j

jj j
j j

j j j j

x tx y x y
x x

tp y t h h
y

f xx x x x

x tx y x y
x x

p y t h h
y

f x x x x

? ?
?

?? ? ? ? ?

?? ? ? ? ?

?

=

? ??? ? ? ?
? ??? ? ? ? ? ?

? ? ? ? ? ?&gt; =
? + +

?? ? ? ?
?? ? ? ?

? ? ? ?&amp;lt;=
+ + +

?

2

1j j

t

x

?

=

? ?
? ?? ?
? ??

 

                  
(44) 

 



213 

 

onde o meio é dividido em duas camadas. A camada correspondendo a 0y &gt;  é a camada 1, a 

camada correspondendo a 0y &amp;lt; é a camada 2. Senso assim, os subescritos 1 e 2 nas proprie-

dades apresentadas são relativos às camadas avaliadas. 

Os temos jx  são as raízes da equação 

( ) ( ) ( ) ( )sen sen cos cos 0x x x x? ? ?? + =            (A.4) 
onde 

1

2

t

t
? =            (A.5) 

que é a relação entre os tempos de consolidação calculdados em cada camada, dados por 

2
1

1
1

t
t

c
=            (A.6) 

2
2

2
2

t
t

c
=            (A.7) 

Os coeficientes de consolidação de cada camada são dados por 

1
1

1

y

w

k
c

m?
=            (A.8) 

2
2

2

y

w

k
c

m?
=            (A.9) 

onde são definidos. 

2 2

1 1

y

y

k m

k m
? =  

        (A.10) 

1

1 1

1
4
3

m
K G

=
+

         (A.11) 

2

2 2

1
4
3

m
K G

=
+

         (A.12) 

A seguir é apresentada a implementação dessa solução analítica 

%-------------------------------------------------------------------------% 
%-------------------------------------------------------------------------% 
%                                                                         % 
%           PROGRAMA DE PÓS GRADUAÇÃO EM ENGENHARIA CIVIL - UFPE          % 
%                                                                         % 
%-------------------------------------------------------------------------% 
%-------------------------------------------------------------------------% 
  
%-------------------------------------------------------------------------% 
%                              LMCG - UFPE                                % 
%-------------------------------------------------------------------------% 
% ÁREA DE CONCENTRAÇÃO: GERENCIAMENTO E SIMULAÇÃO DE RESERVATÓRIOS DE     % 
% PETRÓLEO                                                                % 



214 

 

% ALUNO: LUCÍOLO VICTOR MAGALHÃES E SILVA                                 % 
% PROF. ORIENTADOR: IVALDO DÁRIO PONTES SILVA FILHO &amp;amp;                     % 
% LEONARDO GUIMARÃES                                                      % 
%-------------------------------------------------------------------------% 
  
clc 
clear all 
  
%-------------------------------------------------------------------------% 
%                              ROTINA                                     % 
%-------------------------------------------------------------------------% 
% TÍTULO: SOLUÇÃO DA EQUAÇÃO DE TERZAGUI PARA O PROBLEMA DE ADENSAMENTO   % 
% UNIDIMENSIONAL PARA MEIOS HETEROGÊNEOSS.                                                         
% 
% CRIAÇÃO: 30-11-2015                                                     % 
% ÚLTIMA MODIFICAÇÃO: 30-11-2015                                          % 
%-------------------------------------------------------------------------% 
  
%-------------------------------------------------------------------------% 
%                        ENTRADA DE DADOS DO PROBLEMA                     % 
%-------------------------------------------------------------------------% 
  
% k1 
% 
% Permeabilidade do meio 1, permeabilidade do meio 2. 
  
k1 = 3*10^-6; 
  
k2 = 10^-6; 
  
% y1,y2 
% 
% Peso específico do meio 1, peso específico do meio 1. 
  
y1 = 1000; 
  
y2 = 1000; 
  
% E1,E2 
% 
% Módulo de elasticidade do meio 1, módulo de elasticidade do meio 2. 
  
E1 = 10^7; 
  
E2 = 10^7; 
  
% v1,v2 
% 
% Coeficiente de Poisson do meio 1, Coeficiente de Poisson do meio 2. 
  
v1 = 0.2; 
     
v2 = 0.2; 
     
% h1,h2 
% 
% Espessura da camada 1, espessura da camada 2. 
  



215 

 

h1 = 2; 
     
h2 = 3; 
  
% t 
% 
% Tempo  
  
t = 22.5; 
  
%2250 
%1800 
%1350 
%900 
%450 
  
  
% p0 
% 
% Carga aplicada no topo 
  
p0 = 100; 
    
     
%-------------------------------------------------------------------------% 
%                              PROCESSAMENTO                              % 
%-------------------------------------------------------------------------% 
  
  
  
% K1, K2 
% 
% Módulo volumétrico do meio 1, módulo volumétrico do meio 2. 
  
K1 = E1/(3*(1-2*v1)); 
  
K2 = E2/(3*(1-2*v2)); 
  
% G1, G2 
% 
% Módulo de cisalhamento do meio 1, módulo de cisalhamento do meio 2. 
  
G1 = E1/(2*(1+v1)); 
  
G2 = E2/(2*(1+v2)); 
  
% m1,m2 
% 
% Compressibilidade do meio 1, compressibilidade do meio 2. 
  
m1 = 1/(K1 + (4/3*G1)); 
  
m2 = 1/(K2 + (4/3*G2)); 
  
% alpha 
% 
% Variável auxiliar para a determinação da solução analítica. 



216 

 

  
alpha = sqrt(k2*m2)/sqrt(k1*m1); 
  
% c1,c2 
% 
% Coeficiente de consolidação do meio 1, coeficiente de consolidação do 
% meio 2. 
  
c1 = k1/(y1*m1); 
  
c2 = k2/(y2*m2); 
  
% t1,t2 
% 
% Variáveis auxiliares associadas ao tempo, necessárias para a construção 
% da solução analítica. 
  
t1 = (h1^2)/c1; 
  
t2 = (h2^2)/c2; 
  
% beta 
% 
% Variável auxiliar para a determinação da solução analítica. 
  
beta = sqrt(t1/t2); 
  
% Procedimento para a solução das raizes necessárias para a obtenção das 
% soluções analíticas do problema. 
  
% X 
% 
% Vetor contendo as raízes. 
  
X = zeros(400,1); 
  
x1 = 0; 
  
% Deltax 
% 
% Incremento em x para avaliação da função. 
  
Deltax = 0.001; 
  
% Inicializando o contador, onde i é o indice associado à raiz. 
  
i = 0; 
  
% Método da bisseção 
  
 while i&lt;400 
  
      x2 = x1 + Deltax;   
      
      f1 = -alpha*sin(beta*x1)*sin(x1) + cos(beta*x1)*cos(x1); 
              
      f2 = -alpha*sin(beta*x2)*sin(x2) + cos(beta*x2)*cos(x2); 



217 

 

       
      if f1*f2 &amp;lt;0 
           
          i = i+1; 
         
           
          xaux1 = x1; 
           
          xaux2 = x2; 
           
          xauxm = xaux1/2+xaux2/2; 
           
          fauxm = -alpha*sin(beta*xauxm)*sin(xauxm) + 
cos(beta*xauxm)*cos(xauxm);  
           
          while norm(fauxm) &gt; 0.001 
                         
               faux1 = -alpha*sin(beta*xaux1)*sin(xaux1) + 
cos(beta*xaux1)*cos(xaux1);                                          
               
               faux2 = -alpha*sin(beta*xaux2)*sin(xaux2) + 
cos(beta*xaux2)*cos(xaux2); 
               
               xauxm = xaux1/2+xaux2/2; 
               
               fauxm = -alpha*sin(beta*xauxm)*sin(xauxm) + 
cos(beta*xauxm)*cos(xauxm); 
               
                 
              if faux1*fauxm &amp;lt;0 
                  
                  xaux2 = xauxm; 
                   
              elseif faux2*fauxm &amp;lt;0 
                   
                  xaux1 = xauxm; 
              end 
                   
          end 
       
          X(i) = xauxm; 
           
      end 
       
      x1 = x2; 
       
 end 
  
  
  
 % As solução são apresentadas em duas expressões para x &amp;lt;0 e x &gt; 0. 
  
 Z = (-h2:0.1:h1); 
  
% Procedimento iterativo para a obtenação da solução analítica, que é dada 
% por um somatório. 



218 

 

  
 for k=1:size(Z,2) 
      
    % z 
    % 
    % Valor da coordenada vertical avaliada. 
      
    z = Z(k); 
     
    % Obtenção da solução para z &gt;= 0. 
  
    if z &gt;= 0 
     
        Soma = 0;       
  
        for n=1:size(X,1) 
             
            % xx 
            % 
            % Valor da raiz de número n. 
          
            xx = X(n); 
             
            % Num, Den, Mult 
            % 
            % Numerador, denominador e multiplicador dos termos 
            % correnpondentes ao somatório. 
  
            Num = cos(xx)*cos(beta*xx*z/h1) - al-
pha*sin(xx)*sin(beta*xx*z/h1); 
             
            Den = (1+alpha*beta)*cos(beta*xx)*sin(xx) + (al-
pha+beta)*sin(beta*xx)*cos(xx); 
             
            Mult = (1/xx)*exp(-xx*xx*t/t2); 
             
            % Soma 
            % 
            % Somatório. 
             
            Soma = Soma + Mult*Num/Den; 
         
        end 
         
        % p  
        % 
        % Pressão associada a z. 
         
        p = 2*p0*Soma; 
         
    elseif z &amp;lt;0 
         
         
    % Obtenção da solução para z &amp;lt;0. 
       
        Soma = 0;       
      



219 

 

        for n=1:size(X,1) 
  
            % xx 
            % 
            % Valor da raiz de número n. 
             
            xx = X(n); 
             
            % Num, Den, Mult 
            % 
            % Numerador, denominador e multiplicador dos termos 
            % correnpondentes ao somatório. 
  
            Num = cos(xx)*cos(xx*z/h2) - sin(xx)*sin(xx*z/h2); 
             
            Den = (1+alpha*beta)*cos(beta*xx)*sin(xx) + (al-
pha+beta)*sin(beta*xx)*cos(xx); 
             
            Mult = (1/xx)*exp(-xx*xx*t/t2); 
             
            % Soma 
            % 
            % Somatório. 
             
            Soma = Soma + Mult*Num/Den; 
         
        end     
         
        % p  
        % 
        % Pressão associada a z. 
     
        p = 2*p0*Soma; 
     
    end 
     
    % P 
    % 
    % Vetor contendo as pressões. 
  
    P(k) = p; 
  
 end 
  
 % Plogatem da solução 
  
 hold on 
  
 plot(P,Z) 
  
disp('fim') 
 

 



220 

 

SOLUÇÃO ANALÍTICA PARA O PROBLEMA DE MANDEL 
 

O Problema de Mandel consiste em um meio poroelástico sujeito a um carregamento f  em 

seu topo e sua base por uma chapa rígida. O  topo e base são impermeáveis. As laterais do 
domínio são drenantes e o carregamento é nulo. A solução analítica é dada ao longo da linha 
central do domínio, coincidente com o eixo x considerando a direção horizontal. O domínio 

possui comprimento em xigual a

 

a , os Parametros de Lammé são dados por K  e G . O flui-
do tem peso específico

 

w?  e k  é a permeabilidade do meio 

Sendo assim a solução analítica do problema é dada por 

( )
( ) ( )

( )
2

22
1

cos cos cos

, 2 exp
1 2 cos

j
j j

j v

j j

x

a c t
p x t f

a

?
? ?

?
?

? ?

?

=

? ?? ?
?? ?? ?

? ??? ?? ?= ? ?? ?? ? ?
?  

          (A.13) 

O coeficiente de consolidação é dado por 

4
3

v
w

k K G
c

?

? ?+? ?
? ?=  

          (A.14) 

sendo 

4
3

2

K G

G
?

? ?+? ?
? ?=  

          (A.15) 

Os valores de j?  são dados pelas raízes da equação não-linear abaixo 

( ) ( )
sen

2 cos 0
?

?? ?
?

? =            (45) 

 Abaixo está apresentado o código computacional implementado para a solução do 
problema 
 
%-------------------------------------------------------------------------% 
%-------------------------------------------------------------------------% 
%                                                                         % 
%           PROGRAMA DE PÓS GRADUAÇÃO EM ENGENHARIA CIVIL - UFPE          % 
%                                                                         % 
%-------------------------------------------------------------------------% 
%-------------------------------------------------------------------------% 
  
%-------------------------------------------------------------------------% 
%                              LMCG - UFPE                                % 
%-------------------------------------------------------------------------% 
% ÁREA DE CONCENTRAÇÃO: GERENCIAMENTO E SIMULAÇÃO DE RESERVATÓRIOS DE     % 
% PETRÓLEO                                                                % 
% ALUNO: LUCÍOLO VICTOR MAGALHÃES E SILVA                                 % 
% PROF. ORIENTADOR: IVALDO DÁRIO PONTES SILVA FILHO                       % 
%-------------------------------------------------------------------------% 
  
clc 



221 

 

clear all 
  
%-------------------------------------------------------------------------% 
%                              ROTINA                                     % 
%-------------------------------------------------------------------------% 
% TÍTULO: SOLUÇÃO DA EQUAÇÃO QUE REGE O PROBLEMA DE MANDEL DE ANDESAMENTO % 
% BIDIMENSIONAL.                                                          % 
% CRIAÇÃO: 19-04-2016                                                     % 
% ÚLTIMA MODIFICAÇÃO: 19-04-2016                                          % 
%-------------------------------------------------------------------------% 
  
%-------------------------------------------------------------------------% 
%                        ENTRADA DE DADOS DO PROBLEMA                     % 
%-------------------------------------------------------------------------% 
  
% E 
% 
% Módulo de Elasticidade do solo. 
  
E = 10^8; 
  
% v 
% 
% Coeficiente de Poisson. 
  
v = 0.4; 
  
% yw 
% 
% Peso específico do fluido. 
  
yw = 1000; 
  
% Kp 
% 
% Coeficiente de permeabilidades do solo. 
  
Kp = 10^-6; 
  
% t 
% 
% Fator tempo. 
  
t = 1.0; 
  
% p0 
% 
% Pressão aplicada no topo da camada. 
  
p0 = 1000; 
  
% comp 
% 
% Comprimento da metade da camada em y. 
  
comp = 1; 
  
%-------------------------------------------------------------------------% 



222 

 

%                              PROCESSAMENTO                              % 
%-------------------------------------------------------------------------% 
  
% K 
% 
% Módulo volumétrico 
  
K = E/(3*(1-2*v)); 
  
% G 
% 
% Módulo de cisalhamento 
  
G = E/(2*(1+v)); 
  
% cv 
% 
% Coeficiente de consolidação 
  
cv = Kp*(K+(4/3)*G)/yw; 
  
% Tempo 
% 
% Tempo associado ao fator tempo  
  
Tempo = t*(comp^2)/cv; 
  
% eta 
% 
% Variável utilizada para a solução analítica 
  
eta=(1-v)/(1-2*v); 
  
% Inicialização da variável x(coordenada) 
  
x = 0; 
  
% N 
% 
% Número de iterações para a construção da solução analítica 
  
N=200; 
  
% nd 
% 
% Número de divisões para a obtenção da solução analítica 
  
nd = 100; 
  
% dx 
% 
% Acréscimo de coordenada para a obtenção da solução analítica em vários 
% pontos 
  
dx = 1/nd; 
  
% O comando de repetição abaixo é para a construção da solução analítica 



223 

 

  
for mm=1:nd 
     
% xx 
% 
% Variável contendo as coordenadas que serão plotadas 
  
xx(mm) = x; 
     
% eps 
% 
% Variável auxiliar para a determinação das raízes utilizadas na construção 
% da solução analítica 
  
eps=0.000001; 
  
% O comando de repetição abaixo estabelece os valores das raízes utilizadas 
% na construção da solução numérica. 
  
for i=1:N 
  
    a1=(i-1)*pi+pi/4; 
    a2=a1+pi/2-eps; 
  
    for j=1:40 
  
       y1=tan(a1)-2*eta*a1; 
       y2=tan(a2)-2*eta*a2; 
       am=(a1+a2)/2; 
       ym=tan(am)-2*eta*am; 
  
        if ym*y1&gt;0 
         
            a1=am; 
        
        else 
         
            a2=am; 
     
        end 
     
        if abs(y2)&lt;eps       
     
            am=a2; 
        
        end 
     
            % ZERO 
            %  
            % Variável que contém as raízes da solução do método não 
            % linear. 
         
            ZERO(i)=am; 
  
    end 
  
end 



224 

 

  
% Inicialização da pressão que é calculada como sendo uma série. 
  
p=0; 
  
for i=1:N 
  
s=sin(ZERO(i)); 
c=cos(ZERO(i)); 
cx=cos(x*ZERO(i)); 
a=2*eta*ZERO(i)*s-(2*eta-1)*c; 
b=ZERO(i)*ZERO(i)*t; 
  
%if b&lt;20 
     
    p=p+2*eta*(cx-c)*exp(-b)/a;      
    % 
    %p=p+2*((cx-c)/(ZERO(i)-s*c))*exp(-((ZERO(i))^2)*t) 
     
%else 
     
    i=N+1; 
  
%end 
  
end 
  
% pp  
% 
% Vetor que contém as pressões associadas à cada coordenada do vetor xx. 
  
pp(mm) = p; 
  
x = x + dx; 
  
end 
  
% Estabelecimento do valor da condição de contorno em x = comp. 
  
pp(1,nd) = 0; 
  
% A seguir há a desnormalização das pressões e das coordenadas. 
  
xx = xx*comp; 
pp = pp*p0; 
xx(1,nd) = comp; 
  
  
% Pós processamento. 
  
hold on 
  
plot(xx,pp) 
disp('Tempo equivaliente ao Tv') 
xlabel('x') 
ylabel('Pressure') 
title('Mandel is Problem') 



225 

 

disp(Tempo) 
 

 

 

 


</field>
	</doc>
</add>