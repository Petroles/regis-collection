<?xml version="1.0" encoding="utf-8"?>
<add>
	<doc>
		<field name="docid">BR-TU.19429</field>
		<field name="filename">2779_Cardoso_ClaudioGuidoSilva_M.pdf</field>
		<field name="filetype">PDF</field>
		<field name="text">
Grades diádicas adaptativas para simulação de 
escoamento de petróleo 

Claudio Guido S. Cardoso 

Dissertação de Mestrado 

p 



Instituto de Computação 
Universidade Estadual de Campinas 

Grades diádicas adaptativas para simulação de 

escoamento de petróleo 

Cardoso 

Outubro de 2004 

Banca Examinadora: 

• Prof. Dr. Jorge Stolfi 
IC- UNICAMP (Orientador) 

• Pro f. Dr. Denis J. Schiozer 
CEPETRO - UNICA:VlP 

o Profa. Dra. :Vlaría Cristina de Castro Cunha 
IMECC - UNICAMP 

o Prof. Dr. Cid Carvalho de Souza 
IC- UNICAMP 

i i 



UNIDADE 

)1 Nll CHAMADA 

I ~-
jv_~ 
' ( PRQC, 

I PREÇO 
I DATA ~fL~kL=~~··~~-

N12CPD 

Cl79g 

FICHA CATALOGRÁFICA ELABORADA PELA 
DO IMECC DA UNICAMP 

Cardoso, Claudio Guido Silva 

Grades diádicas adaptativas para simulação de escoamento de 

petróleo I Claudio Guido Silva Cardoso-- Campinas, (S.P. :s.n.], 2004. 

Orientadores :Jorge Stolfi ; Anamaria Gomide 

Dissertação (mestrado) - Universidade Estadual de Campinas, 

Instituto de Computação. 

L Simulação (Computadores digitais). 2. Equações diferenciais. 3. 

Galerkin, Métodos de. 4. Reservatório de petróleo. L Stolfi, Jorge. n. 

Gomide, Anamaria. IH. Universidade Estadual de Campinas. Instituto de 

Computação. IV. Título. 



Grades diádicas adaptativas para simulação de 

de petróleo 

Este exemplar corresponde à redação final da 
Dissertação devidamente corrigida e defendida 
por Claudio Guido S. Cardoso e aprovada pela 
Banca Examinadora. 

Campinas. I\ovembro de 2004. 

/j // ///u-RH.t: 
/~~~: Dr. Jorge Stolfi 

IC- UNICAMP (Orientador) 

Ó'vtev...-./\_ U41__0, ' ..:::;r- ~ 
Profa. Dra. Ana aria Gomide 

I ~ ~0- - ~JJ. 
·~ - UNICAMP (. o-orientadora) 

1V 



Dissertação apresentada ao Instituto de Com-
putação, UNICAMP, como requisito parcial para 
a obtenção do título de é\Iestre em Ciência da 
Computação. 



TERMO DE APROVAÇÃO 

Tese defendida e aprovada em 01 de dezembro de 2004, pela Banca 

Professores Doutores: 

(\ 

' 

Prof. D~ s'étuó'zer 
CEPET - UNIC MP 

1\ 

\J;;\, \ 

Profa. Ora. Maria Cristina de Castro Cunha 
!MECC - UNICAMP 

Prd. o{.Cid CaRfa1ho i!~a ' 
!C- UNICAMP 

Pr9f." Dr. Jorge Stolfi 
-lê- UNICAMP 



© Claudio Guído S. Cardoso, 2004. 
Todos os direitos reservados. 

Vll 



"A vida é um cubo. Não sei porque, mas é." 

Comado Gomes 

Vll1 



Resumo 

Nesta dissertação, estudamos as aplicações de splines construídos sobre grades 
diádicas na aproximação de funções e solução de equações diferenciais. Nosso 
foco principal é a simulação de escoamento de petróleo em reservatórios naturais. 

lma grade diádica é construída através de divisões sucessivas de uma célula 
raiz retangular, sempre pela metade, alternando a direção do corte ciclicamente 
pelos eixos de coordenadas. Desta forma, os splines diádicos podem ser refina-
dos adaptativamente de acordo com as funções a serem aproximadas, até que 
satisfaçam o grau de precisão exigido. As grades diádicas também possuem uma 
estrutura muito simples e podem ser representadas e manipuladas computacio-
nalmente com grande eficiência e facilidade. 

Trabalhamos em particular com uma família de splines diádicos multilineares 
e contínuos para uma grade arbitrária G, que denominamos por E 1[GJ. Desen-
volvemos algoritmos que geram duas bases padrões de elementos finitos (tendas 
diádicas) Bmax e Bmin para estes espaços. Para testarmos as potencialidades dos 
espaços [ 1 [G], realizamos experimentos numéricos utilizando a técnica de apro-
ximação por mínimos quadrados, e resolvemos alguns casos de equações diferen-
ciais parciais lineares. Nestes experimentos, estudamos o uso de malhas diádicas 
de resolução variável no espaço e no tempo. Concluímos que grades adaptativas 
podem produzir os mesmos resultados que uma grade uniforme fina, a uma fração 
do custo. 

A última parte deste trabalho descreve em detalhes a construção e teste de 
um simulador para escoamento bifásico óleo/água (Simóleo), baseado em gra-
des diádicas adaptativas. Revisamos, em linhas gerais, as equações que regem 
este processo, e sua discretização pelo método de elementos finitos (Galerkin). 
Desta forma, obtemos um sistema de equações diferenciais não linear, dependente 
do espaço e do tempo, que resolvemos de maneira iterativa. O desempenho do 
Simóleo foi avaliado utilizando um modelo popular de reservatório (5 poços). 

lX 



Abstract 

In this dissertation we study the application of splines built over dyadic grids for 
function approxirnation and integration of differential equations. Our rnain focus 
is the sirnulation of oi! fiow in natural reservoirs. 

A dyadic grid is built by recursively splitting a rectangular root cell into equal 
nHlves. alternating the orientatíon of the cut cyclically over the coordinate axis. 
Therefore, dyadic splines may be refined adaptatively to fit the functíons they are 
approximating, unti! a certain precision leve! is reached. Dyadic grids also have a 
simple structure which rnay be easily and efficiently represented and manipulated 
by computers. 

vVe worked in particular with a family of multilinear and continuous dyadic 
splines for a certain grid G, denoted by E1 [G]. Algorithms were developed to 
build two standard basis of finite elements ( dyadic tents ), Bmax and Bmin, for 
such function spaces. In order to test the potentialities of the spaces [ 1 [G], we 
performed some numerical experirnents of least squares approximations and inte-
gration of linear partia! differential equations. In these experiments, we studied 
the use of adaptive dyadic grids, whose resolution varies in time and space. \Ve 
conclude that adaptive grids can produce the same results as a fine uniforrn grid, 
at a fraction of the cost. 

The last part of this work describes in detail the developrnent and tests of an 
oil/water ilow simulator (Simóleo ), based on adaptive dyadic grids. We review 
the oi! ilow equations, and their discretization by the finite elernent (Galerkin) 
rnethod. Thus, we obtain a non linear differential equation system, depending 
on space and time, which we solve iteratívely. The prograrn's performance is 
measured with experirnents using a popular reservoir model (5-spot). 

X 



Agradecimentos 

Para não fugir à regra, agradeço logo ao Divino por ter enfim chegado nesta parte 
da tese, e pela profunda paz de espírito que ele tem sempre dado a mim e aos 
meus. Obrigado também aos meus fantásticos país Oscaríto e "Wilma, que me 
apóiam até mesmo quando resolvo deixá-los pra passar um tempo longe da velha 
Bahia. Um grande beijo pra minha querida irmã Carmélia (Mel), que perdeu um 
carnaval inteiro tomando chuva aqui comigo, em um dos períodos mais divertidos 
da minha estada em Campinas! Para comparar com estes dias, somente a visita 
do vó Cleber (Varvito) que fez com que me sentisse um pouco em casa uo primeiro 
aniversário longe (e ainda trouxe um bolo da vó). Um enorme abraço pra vocês, 
vovôs Oscar e ClebeL vovós Lacy e Carmélia. Este livro é apenas um dos muitos 
frutos do que vocês semearam. 

A minha princesa Priscila (a chú 1), meus agradecimentos de coração pelo 
enorme carinho, paciência e companheirismo expressos no pouco tempo que pas-
samos juntos, e ao longo de muitos e muitos dias do outro lado da linha. 

Desejo tudo de bom para a dupla dinâmica de orientadores Stolfi e Ana, 
exímios computeiros, matemáticos, físicos e comedores de pizza! Sempre foi uma 
enorme satisfação trabalhar com vocês. 

Um forte abraço aos irmãos pistolinhas: Zeh (pistolinha aposentado, churras-
queiro profissional e também o consumidor mais chat... digo, mais exigente do 
mundo), Triste Toy Boy (cuja gargalhada sutil tem até eco), Guto (miseravão 
e quem devo meu próprio título pistolístico), Daniel Linux (hora Baêêêaaaa!), 
Bart (pistolinha adjunto, o terrível), Glauber (pístolínha honorário, o bonecão 
de Olinda); e a todos os seus agradabilíssimos agregados: Carmen, Yeda, Celso, 
lVlara, Marcão e o pessoal da física, meu recém-chegado sobrinho Gutinho, sua 
mamãe Tina, Mércia, Messias, Daniela e a todo O•resto do povo' 

Aos grandes amigos de caminhadas pelos corredores do IC: :Vlarcão (Vinícius), 
Magrâo, Bila, Bazinho, Pará, Silvana, Borin, .Jú (do Borin), Jú (do Tio Sam), 
Márcio, Felipe (Ozzy), Silvania, Cesar (fala miseravation!), Jean, Amanda, Greg 

xi 



Skywalker, Larissa, Lázaro, Chenca (e a todos os mardito), Daniel Andrade (e 
aL novidades? 1), Nielsen, Wesley, Daniela, Thaísa, Sandro, Luís, Nilton, Cle-
ber, Evandro, Norton, Fernando (monstro), Fernando (do Pará), Luciana, Fábio, 
Schubert, Sheila, Marília, Luciano, os infalíveis úgias Nelson, 
juntamente com os professores, pessoal da administração, e a todo mundo que fi-
cou faltando na lista (agora é melhor correr atrás da próxima tese, meu chapa'), 
um axé caloroso, e nos vemos por aí! 

Meus agradecimentos ao pessoal da engenharia de petróleo (Valmir, Eliana. 
prof. Denis), à profa. Cristina e a todos que ajudaram a fazer a água deste 
simulador andar' 

E obrigado também à CAPES, CNPq e à UNI C AMP pelo auxilio financeiro' 
(ufa' Essa foi por pouco') 

DD 
' f: ?A~Uf 

' Q\l" AC A So..J ... 

xii 



Sumário 

Resumo 

Abstract 

Agradecimentos 

1 Introdução 
Ll 

L2 
Splines diádicos adaptativos 
Simulação do escoamento de petróleo 
1.2.1 Diferenças finitas _____ _ 

1.2.2 Métodos de resolução variável 
1.2.3 Vantagens dos splines diádicos _ 

1.3 Estrutura do trabalho 
1.4 Revisão bibliográfica _ _ _ _ _ _ ___ _ 

1.4.1 Splines diádicos _ _ _ _ _ ___ _ 

1.4.2 Simulação de escoamento multifásico 

2 Grades Adaptativas 
2.1 Grades diádicas _ 
2.2 Orientação, indexação e profundidade _ 
2.3 Posicionamento e tamanho das células 
2.4 Geometria canônica _ 

3 Splínes diádicos 
3.1 Splines ___ _ 
3.2 Elementos finitos _ _ _ _ _ _ _ _ _____ _ 

3.3 splines multilineares sobre grades diádicas 

Xlll 

viii 

ix 

X 

xi 

1 

1 
2 

3 
3 
4 
4 

o 
5 
5 

9 
9 

11 

12 
14 

15 
15 
16 
16 



3.4 As funções tenda . . . .... 

3.5 As bases Bmax e Bmin 
3.5.1 Independência linear das bases Bmax e Bmin 
3.5.2 Interpolação usando tendas 
3.5.3 Cobertura das bases Bmax e 

3.6 Determinação de bases Bmax e Bmin 
3.6.1 Lugares e o conjunto estrela 
3.6.2 
3.6.3 

3.6.4 

O algoritmo Gera_Bmax . . 
O algoritmo Gera_Bmin . 
A complexidade de Gera_Bmax e Gera..Bmin . 

4 Aproximação por mínimos quadrados 
4.1 Aproximação por mínimos quadrados 
4.2 O produto escalar de funções tenda 
4.3 

4.4 

4.6 

Produto escalar de funções gerais 
4.3.1 Quadratura de Gauss . 
4.3.2 Integração em k variáveis 
4.3.3 Produtos escalares 
Exemplos usando grades regulares 
Aproximações com refinamento da grade 
4.5.1 Exemplos usando grades refinadas . 

5 Solução de equações diferenciais parciais lineares 
5.1 O método dos resíduos ponderados 
5.2 O método de Galerkin ......... . 
5.3 Equações lineares ............ . 

5.3.1 Reduzindo a ordem das derivadas 
5.3.2 A equação de Helmholtz . . ... 
5.3.3 Produto escalar de gradientes de funções tenda 

5.4 Exemplo . . . . . . . . . . . . . . . . . . . . . . .... 

17 
18 
19 

19 

20 
23 
23 
24 
27 

28 

31 
31 

32 
35 

35 

36 
37 

37 

42 

43 

47 
47 
48 
48 

49 

50 
51 
53 

6 Solução de equações diferenciais lineares e dependentes do tempo 57 
6.1 A difusão do calor. . . 58 
6.2 Exemplo de simulação . . 59 

7 As equações de escoamento 
7.1 :V!odelagem matemática 

7.1.1 A lei de Darcy . 

xiv 

67 
67 

69 



7.2 Escoamento bifásico óleo/ água . 70 
7.2.1 Saturações relativas . 70 
7.2.2 Pressões capilares 70 
7.2.3 A equação geral 71 

8 Discretização das equações 73 
8.1 Discretização das equações de escoamento 73 

8.1.1 Discretização das variáveis 73 
8.1.2 Critério de Galerkin 74 
8.1.3 Termo do fluxo 74 

8.2 Forma matricial das equações 75 
8.3 Integração no tempo 76 

8.3.1 Dados da simulação . 77 
8.3.2 Cálculo das pressões e fluxos 77 
8.3.3 Cálculo das taxas de injeção 77 

8.4 Adaptação dinâmica da grade 78 
8.4.1 A grade inicial Gini 79 
8.4.2 Escolha de uma nova grade 79 
8.4.3 Mudança de base 79 
8.4.4 Estratégia adaptativa . 79 

8.5 Cálculo das matrizes e vetores do sistema . 80 
8.5.1 Decomposição em células . 80 
8.5.2 Determinação dos termos constantes 81 

9 O simulador Simóleo 83 
9.1 O Simóleo 83 

9.1.1 Funcionalidades 83 
9.1.2 Estrutura 84 

9.2 Testes de simulação . 86 
9.2.1 Dados de simulação . 85 
9.2.2 Resultados . 87 
9.2.3 Evolução da pressão média . 96 
9.2.4 Produção de óleo e água 96 
9.2.5 Tempo de simulação 97 
9.2.6 Análise dos resultados 97 

XV 



10 Conclusões e trabalhos futuros 
10.1 Conclusões . 

10.1.1 Simplicidade de grades e bases diádicas 
10.1.2 Aproximação com splines diádícos. 
10.1.3 Grades adaptativas 

10.2 Propostas futuras 
10.2.1 Splines de graus mais elevados . 
10.2.2 Escolha da base 
10.2.3 Passo de tempo adaptativo .. 
10.2.4 Novas estratégias para integração no tempo 
10.2.5 Sugestões para o Simóleo . 

Bibliografia 

xvi 

99 
99 
99 
99 

100 
100 
100 

100 
100 
101 
101 

102 



a de Tabelas 

4.1 Valores de t1 e CJ, para n = 10 .. 36 
4. 2 Funções para testes do método de mínimos quadrados. 37 
4.3 Distâncias I lu- u' li caculadas para cada base de aproximação. O 

parâmetro À é o diâmetro das células da grade. 38 
4.4 Dimensões das bases e distâncias !lu- u'll das aproximações. . 45 

5.1 Dimensões das bases e distâncias llu- u•11 das soluções aproxima-
das de uma equação de Helmholtz. 55 

6.1 Dimensões das bases e distâncias !I TI- r·Ijl entre os resultados 
finais de quatro simulações de um processo de difusão. 65 

9.1 Tempo total em minutos das simulações com as grades regulares e 
com a grade adaptativa. . . . . . . . . . . . . . . . . . 97 

xvii 



Lista Figuras 

L 1 Exemplos de splines em uma e duas dimensões. 1 
1.2 Exemplo de grade diádica bidimensionaL 2 
1.3 Processo de explotação de petróleo. 3 

2.1 Criação de uma grade diádica bidimensionaL 10 
2.2 Criação de uma grade diádica tridimensionaL 10 
2.3 Uma célula mãe, com duas células filhas e quatro células netas. . 10 
2.4 Arvore binária correspondente a uma grade. . 11 
2.5 A origem coincide com um dos vértices da célula raiz. 11 
2.6 Distribuição dos índices em uma grade 2d. 12 
2. 7 Nível 5 de uma grade diádica. . . . . . . 12 
2.8 Célula C com vetores Q(C) = (4,4,2) e o(C) (2,3,0). 14 

3.1 Suporte de um spline de aproximação. . ... 16 
3.2 Função tenda com uma e duas dimensões. . . . . . 17 
3. 3 A base mínima! do espaço [ 1 de uma grade bidimensional irregular 

G. ............. ... . 18 
3.4 A base maximal do espaço [ 1 de uma grade bidimensional irregular 

G. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18 
3.5 Um vértice completo A, esquina das células C1, C4, C6 e C7; um 

vértice incompleto B, esquina das células C2, C5 e intermediário à 
célula C3; e um vértice de fronteira C. . . . . . . . . . . . . . . . 21 

3.6 Cada vértice incompleto (B, D, E, F, H, 1 e J) é intermediário a 
uma célula de profundidade menor do que todas as células das quais 
são esquinas. . . . . . . . . 

3.7 Lugares incompletos cujas faces são respectivamente um segmento 
de reta e um ponto, na primeira e terceira grade a partir da posição 
mais à esquerda. Na segunda e quarta grade, as células em destaque 

22 

são divididas para que estes lugares tornem-se completos. . . . . . 24 

XVlll 



3.8 Nas duas grades tridimensionais, uma mesma face F plana determi-
nada por células de profundidade 3 ou 4. Na grade bidimensionaL 
uma face F (ponto) determinada por células de profundidade 2 ou 3. 24 

3.9 Um lugar aresta em uma grade bidimensional e em uma grade 
tridimensional. 

3.10 Na grade à esquerda, o eixo de divisão 
destaque. 

é ortogonal à face em 

3.11 Gera_Bmax executado sobre duas faces determinadas por células 
cujos eixos de divisão são paralelos a estas faces. 

24 

26 

27 

4.1 Tendas T 1, T", e a região R comum aos suportes destas funções. 33 
4.2 A célula C' de T 1 está contida na célula C" de T". . . . 33 
4.3 A função sxsy e suas aproximações por mínimos quadrados nas 

bases Bmin de níveis 6, 8, e 10, traçadas com 61 =O, 08 e Ôz = 1, 2_ 
Os resíduos li - li' foram traçados com a1 = O, 008 e 62 = O, 12. . 39 

4.4 Função galiss e aproximações nas bases Bmin de níveis 6, 8, e 10, 
com 61 = O, 08 e o2 = 1, 2. Para os resíduos li - u•, foram usados 
61 =O, 008 e 62 =O, 12. . . . . . . . . . . . 40 

4.5 Função tendaR e aproximações nas bases Bmin de níveis 6, 8, e 10 
com 61 =O, 08 e 62 = L 2. Os resíduos u- u' possuem 51 =O, 008 
e 62 = O, 12. . . . . . . . . . . . . . . . . . . . . . . 41 

4.6 Função gauss e aproximações nas bases Bmin regulares de níveis 8, 
lO e em uma base Bmin irregular de nível máximo 10, com 0 1 =O, 08 
e i52 = 1, 2. Os resíduos li- li' possuem 61 O, 008 e 62 =O, 12. 44 

5.1 Funções A (esquerda) e r (direita). . . . . . . . . . . . . . . . . 52 
5.2 Solução exata da equação (5.23) de Helmholtz, com 61 = O, l e 

Ôz = l, 1. . . . . . . . . . . . . . - . . . . . . . . . . . . . 53 
5.3 Solução da equação de Helmholtz usando bases minimais definidas 

sobre grades regulares de níveis 6, 8, 10 e uma grade irregular de 
profundidade máxima lO, com 61 = O, l e 62 = 1. l. Os resíduos 
li- li• possuem o1 =O, 006 e o2 =O, 07 ..... 

6.1 Simulação da difusão do calor com uma base regular de profundi-
dade 6. A última linha mostra o resultado final da integração (r" f), 
a aproximação por mínimos quadrados da solução exata correspon-
dente (Tf), e a diferença entre estas duas. Todas as imagens têm 

54 

parâmetro 62 = 188, O. . . . . . . . . . . . . . . . . 61 

XlX 



6.2 Simulação da difusão do calor com uma base regular de profundi-
dade 8. A última linha mostra o resultado final da integração (I' f), 
a aproximação por mínimos quadrados da solução exata correspon-
dente (Tf), e a diferença entre estas duas. Todas as imagens têm 
parâmetro o2 = 188, O. 62 

6.3 Simulação da difusão do calor com uma base regular de profun-
didade 10. A última mostra o resultado final da integração 
(T'f), a aproximação por mínimos quadrados da solução exata cor-
respondente (Tf), e a diferença entre estas duas. Todas as imagens 
têm parâmetro o2 = 188, O. . . . . . . . . . . . . . . . . . . . . . 63 

6.4 Simulação da difusão do calor com uma base irregular de profun-
didade máxima 10. A última linha mostra o resultado final da in-
tegração (Y'f), a aproximação por mínimos quadrados da solução 
exata correspondente (T f), e a diferença entre estas duas. Todas 
as imagens têm parâmetro 152 188, O. 64 

7.1 Elemento infinitesimal dx x dy x dz . 67 

9.1 J\lódulos do programa Simóleo. 84 
9.2 Disposição dos cinco poços no teste com o Simóleo. 86 
9.3 Saturação da água Sa em 5 estagws de simulação utilizando as 

grades regulares de níveis 6, 8 e 10. Todos os gráficos possuem 
o, =O, 08 e 62 = 1, O. . ............ - . . . . . . . . 88 

9.4 Perfis da saturação da água Sa sobre três grades regulares. Todos 
os gráficos possuem valor mínimo -1 e máximo 1 na escala verticaL 
A escala horizontal vai do poço injetor central até um poço de 
extração (1,2 km). . . . . . . . . . . . . . . . . . . . . . . . . . 89 

9.5 Pressão p em 5 estágios de simulação utilizando as grades regulares 
de níveis 6, 8 e 10, com 01 = 20000 e 52 = 400000. A pressão é 
positiva (acima de p) em volta do poço de injeção, e negativa nos 
poços de extração. . . . . . . . . . . . . . . . .. _ . . . . . . . . 90 

9.6 Perfis da pressão p sobre três grades regulares. A escala vertical 
varia de -400000 Pa a 400000 Pa. A escala horizontal vai do poço 
injetor central até um poço de extração (1,2 km). . . . . . . . . 91 

9. 7 Saturação da água Sa sobre grades regulares de níveis 8, 10 e uma 
grade adaptativa dinâmica de nível má.,ximo 10. Todos os gráficos 
possuem 51 =O, 08 e 62 = 1, O. . . . . . . . . . . . . . . . . . . 92 

XX 



9.8 Perfis da saturação da água Sa sobre duas grades regulares e uma 
grade refinada adaptativamente, com valor mínimo -1 e má.-ximo 1 
na escala vertical. A escala horizontal vai do poço injetor central 
até um poço de extração (1,2 km). . . . . . . 93 

9.9 Pressão p utilizando grades regulares de níveis 8, 10, e uma grade 
com refinamento local dinâmico. Gráficos traçados com 61 = 20000 
e o2 = 400000. 94 

9.10 Perfis da pressão p sobre duas grades regulares e uma grade com 
refinamento locai gerada dinamicamente. A escala vertical tem 
valor mínimo de -400000 P a e máximo de 400000 P a. A escala 
horizontal vai do poço injetor central até um poço de extração (1,2 
km). . . . . . . . . . . . . . . . . . 95 

9.11 Pressão média do reservatório (em kPa) por tempo (em dias), nas 
simulações com grades regulares de níveis 6, 8, 10 e com a grade 
adaptativa de profundidade máxima 10. . 96 

9.12 Taxas de produção de óleo (esquerda) e água (direita) em m 3 /dia, 
nas simulações com grades regulares e com a grade refinada dina-
micamente. 96 

XX! 



Capítulo 1 

Introdução 

Propomos neste trabalho o uso de bases de .splines definidas sobre grades diádicas 
adaptativas para a aproximação de funções e solução de equações diferenciais, 
tendo como foco principal a simulação de escoamento de petróleo em reservatórios 
naturais. 

1.1 Splines diádicos adaptativos 

É comum usarmos espaços de aproximação para lidarmos com problemas envol-
vendo funções muito irregulares e equações diferenciais, porque desta forma con-
seguimos simplificá-los e manipulá-los por meio de computadores. Estes espaços 
podem conter por exemplo séries trigonométricas ou polinômios. Aqui utilizamos 
funções de aproximação muito populares: os splines [BBB87, BQDY89, Mor85], 
cujos domínios são divididos em regiões distintas, onde possuem comportamento 
essencialmente polinomiaL Na figura 1.1 mostramos um spline unidimensional, 
linear em cada segmento do eixo x (esquerda), e um spline bidimensional em 
curvas de nível (direita). 

Figura 1.1: Exemplos de splines em uma e duas dimensões. 

1 



1.2. Simulação do escoamento de petróleo 2 

Trabalhamos especificamente com splines diádicos, ou splines definidos sobre 
grades diádicas. Uma grade diádica é construída basicamente através de divisões 
sucessivas de uma célula raiz retangular, sempre pela metade. A figura 1.2 abaixo 
mostra a grade diádica sobre a qual o spline bidimensional da figura 1.1 está 
definido. 

Figura 1.2: Exemplo de grade diádica bidimensional. 

A vantagem do uso de grades diádicas é que elas possuem uma estrutura 
muito simples, e podem ser representadas e manipuladas computacionalmente 
com grande economia e facilidade. Ao mesmo tempo, podemos refinar um spline 
diádico até que ele esteja suficienteiliente próximo de uma função qualquer. 

1.2 Simulação do escoamento de petróleo 

Nossa principal motivação é investigar a aplicação de splines diádicos na simulação 
do escoamento de petróleo em reservatórios naturais [AS79, Cri77, Str88]. Esta 
simulação é complexa devido à presença de outros fluidos (água e/ou gás) que 
se movem com velocidades diferentes da do óleo. Além disso, métodos modernos 
de extração de petróleo utilizam o bombeamento de água ou outras substâncias 
em determinados poços de injeção, criando diferenças de pressão que empurram 
o óleo presente nos meios porosos subterrâneos na direção dos poços de extração 
(figura 1.3). 



1.2. Simulação do escoamento de petróleo 3 

Figura 1.3: Processo de explotação de petróleo. 

1.2.1 Diferenças finitas 

O movimento dos fluidos num reservatório é descrito por equações diferenciais 
parciais não lineares. Os primeiros simuladores utilizaram o método de diferenças 
finitas, em que o estado do reservatório é amostrado numa grade regular. 
método continua sendo o mais usado nos simuladores comerciais. 

1.2.2 Métodos de resolução variável 

Porém, o escoamento geralmente inclui várias regiões criticas, onde as grande-
zas relevantes variam rapidamente no espaço. Essas regiões podem ser estáticas, 
como nas proximidades dos poços, falhas geológicas, aquíferos, etc; ou dinâmicas 
(variáveis no tempo), como as interfaces razoavelmente abruptas entre as substâncias 
móveis (óleo I água, óleo I gás, etc). A diferença de escala necessária para a si-
mulação nestes pontos e no restante do domínio é muito grande e pode variar de 
dezenas de quilõmetros a poucos metros. 

Devido à extensão dos campos típicos, é inviável representar todo o reservatório 
na escala mais detalhada, ainda mais quando consideramos que é necessário exe-
cutar centenas de simulações, abrangendo décadas de funcionamento. 

Por esta razão, boa parte da pesquisa na área objetiva reduzir o custo computa-
cional das simulações sem prejudicar significativamente a precisão dos resultados. 
As idéias propostas para este fim incluem o uso de sistemas híbridos de coorde-
nadas [NLP+9ü], abordagens multiescalas [Gue98], simulação por linhas de fluxo 
[dCS98], entre outras. Neste sentido, uma das técnicas mais comuns é o refina-
mento local, na qual apenas as regiões críticas do reservatório são representadas 
com maior riqueza de detalhes [ATL91, GE97, HGH83, NLP+go, Ris02, Was87]. 
Muitas dessas abordagens sofrem de dois problemas: a natureza e representação 
da grade, que dificultam sua modificação dinâmica; e a restrição a poucos níveis 



1.3. Estrutura do trabalho 4 

de refinamento, com escalas muito diferentes entre si, que implica em desperdício 
de trabalho. 

1.2.3 Vantagens dos splines diádicos 

Os splines diádicos proporcionam refinamento local dinâmico e gradual: o espaço 
de funções aproximadoras pode ser adaptado ao longo do processo de escoamento. 
Nos locais onde apresentam pouca variação, aproximamos as propriedades pe-
trofísicas com segmentos mais grosseiros da grade diádica, acelerando os cálculos 
e economizando recursos do simulador. 

1.3 Estrutura do trabalho 

No capítulo 2 descrevemos em detalhes as grades diádicas, mostrando a corres-
pondência entre elas e as árvores binárias. No capítulo 3 definimos os splines 
diádicos, associados a uma determinada grade diádica, e em particular os splines 
multilineares de continuidade zero, que utilizaremos nesta dissertação. Exibimos 
duas bases padrões de elementos finitos para este espaço, as bases Bmax (maximal) 
e Bmin {mínima!), que nos permitem representar sucintamente os splines multili-
neares contínuos, pois as restrições de grau e continuidade estão automaticamente 
asseguradas. A base minimal, quando extraída a partir de grades regulares, é 
similar a esquemas de diferenças finitas com interpolação linear [Cri77]. A base 
maximal, por outro lado, apresenta um caráter multiescala. Encerramos o capítulo 
descrevendo dois algoritmos eficientes que encontram respectivamente Bmax e Bmin 
com tempo de execução m&lt;Lximo da ordem do número de células folha das grades 
diádicas a partir das quais foram extraídas. 

Nos capítulos seguintes, descrevemos uma série de aplicações para splines 
diádicos. No capítulo 4 consideramos a aproximação de funções pelo método 
de mínimos quadrados. Neste capítulo também apresentamos um algoritmo que 
realiza o refinamento de uma grade diádica G a partir de uma função f qualquer, 
tornando G mais segmentada nas regiões do domínio onde f possui um compor-
tamento não linear mais acentuado. Mostramos por experimentos que o uso de 
grades diádicas adaptativas proporciona resultados tão precisos quanto o de uma 
grade uniforme de mesma resolução máxima, a uma fração do custo. 

No capítulo 5 revisamos a técnica de Galerkin para a solução de equações 
diferenciais parciais. Ilustramos essa técnica resolvendo um problema linear, a 



1.4. Revisão bibliográfica 5 

equação de Helmholtz [Gom99]. No capítulo 6, estendemos essa técnica a equações 
diferenciais variáveis no tempo. Para autenticarmos essa nova abordagem, si-
mulamos um processo de difusão do calor em meio isotrópico e comparamos os 
resultados com dados obtidos analiticamente. 

Nos capítulos 7 a 9 enfocamos o problema da simulação do escoamento de 
petróleo. No capítulo 7 introduzimos as equações de escoamento multifásico 
óleo/água que, no capítulo 8, discretizamos e adaptamos à modelagem por ele-
mentos finitos. O capítulo 9 descreve os módulos do programa de simulação que 
desenvolvemos (Simóleo), e apresenta alguns testes realizados para avaliá-lo. Con-
cluímos, no capítulo 10, com observações principalmente a respeito destes testes 
e outras considerações finais. 

1.4 

1 Splínes diádicos 

Existe uma grande variedade de trabalhos baseados em splines na literatura 
([Gom99, BBB87] por exemplo). Em geometria computacional e outras áreas, 
as grades diádicas são conhecidas como k-d trees íHS99]. Duchaineau [Duc96] 
estudou especificamente os splines diádicos, e mostrou que eles podem ser usados 
em esquemas de aproximação, compactação e projeto interativo de funções. 

1.4.2 Simulação de escoamento multifásico 

No tocante à simulação do escoamento de petróleo, diversos experimentos encora-
jam o uso de refinamento locaL Esta técnica vem tradicionalmente sendo utilizada 
com modelagens por diferenças finitas, método que emprega grades uniformes e 
portanto dificulta abordagens dinâmicas e com muitos níveis de refinamento. A 
maioria das propostas nesse sentido envolvem uma malha grosseira global e al-
gumas malhas mais finas nas regiões críticas do domínio. As iterações numéricas 
são realizadas alternadamente entre a malha grosseira e as malhas finas, sendo 
que os resultados de cada uma gera as condições de contorno para a outra. Além 
disso, esquemas especiais são necessários para traduzir as propriedades entre os 
níveis de refinamento. As pressões, normalmente representadas por funções su-
aves, são obtidas por meio de interpolação. As saturações, por outro lado, são 
dadas por funções mais irregulares e portanto são estimadas geralmente por meio 
de replicação de valores. Citamos a seguir alguns destes trabalhos. 



lA. Revisão bibliográfica 6 

Heínemann et al [HGH83] desenvolveram um simulador que permite a rea-
lização de refinamento local dinâmico de malhas tridimensionais com um limite 
de 8 divisões das células iniciais em cada direção. Este simulador foi criado para 
dar a várias formulações, como esquemas Black-Oil e fluxos de vapor, que 
podem ser avaliadas como processos simultâneos. Os escoamentos baseados no 
modelo Black-Oil usam equações no formato IMPES (Implicit Pressure Explicit 
Saturation [Cri77]), com passo de tempo também variáveL 

Estes pesquisadores concluíram que o refinamento local é capaz de reduzir o 
tempo de execução do sistema se o número de células empregadas nas malhas 
pode ser reduzido em 20%. 

Wasserman [Was87] sugeriu uma técnica na qual o refinamento local é aplicado 
em janelas, que são regiões retangulares com até três dimensões. Em seu trabalho 
as janelas são refinadas estaticamente, e a partir das propriedades do reservatório 

suas sub-regiões. Nestes cáículos, as pressões são obtidas por interpolação, e as 
saturações por meio de replicação. 

A solução dos sistemas de equações resultantes é feita de maneira que a adição 
de novas janelas ao modelo aumenta linearmente, e não exponencialmente, seu 
número de operações. Exemplos de simulação mostraram que o refinamento ver-
tical é importante. 

Nacul et al [NLP+9ü] mostraram algumas formas de acelerar a convergência de 
sistemas com refinamento local associados à técnica de decomposição de domínios. 
Esta técnica consiste em dividir a ampla região do reservatório em subdomínios e 
resolver os sistemas numéricos referentes a cada um deles separadamente. 

O uso de pré-condicionadores, ou seja, a aplicação de resultados obtidos por 
simulações sobre malhas grosseiras como valores iniciais dos métodos iterativos 
reduziu o tempo de convergência de todos os experimentos realizados. A quanti-
dade de iterações também foi reduzida fazendo um tipo de relaxação nas variáveis 
dos sistemas. Analisando os casos nos quais os subdomínios possuíam regiões em 
comum, Nacul et al verificaram que quando estas regiões são pequenas as taxas de 
convergência podem ser melhoradas, ao passo que regiões comuns muito grandes 
em geral aumentam o tempo de processamento. 

Duas técnicas foram investigadas por Risso [Ris02] com a finalidade de reduzir 
o tempo das simulações: o refinamento local e as fronteiras abertas. Para reali-
zar esta investigação, construiu um modelo base contendo certas regiões críticas 
próximas aos poços. Risso dividiu seus experimentos com refinamento local em 



1.4. Revisão bíblíográflca 7 

três etapas, nas quais realizou testes com refinamentos graduais e abruptos, restri-
tos ou além das regiões de interesse e com grades de resoluções, com ou sem 
refinamento das regiões críticas em cada uma delas. Após um estudo comparativo, 
verificou que o refinamento locaL além das regiões críticas, é indesejável porque 
reduz pouco o erro em relação ao aumento no tempo de simulação causado pelo 
uso de grades mais finas. Os menores tempos de simulação foram obtidos usando a 
malha grosseira, que entretanto mostrou-se inviável em função da baixa qualidade 
dos resultados. A melhor escala de refinamento tanto do modelo base quanto das 
regiões críticas foi de com consideráveis ganhos nos tempos de execução. Risso 
concluiu que o refinamento local é mais indicado para reservatórios pequenos com 
poucos poços, e sugeriu que as regiões críticas de reservatórios muito grandes de-
vem ser estudadas como reservatórios individuais, juntamente com uma avaliação 
cuidadosa dos fluxos em suas fronteiras. 



1.4. Revisão bibliográfica 8 



Grades Adaptativas 

Neste capítulo descrevemos as grades diádícas, que permitem a discretização he-
terogênea dos domínios de integração. Através desta heterogeneidade podemos 
melhorar a precisão das soluções obtidas, refinando as bases de aproximação onde 
estas soluções possuem comportamento mais irregular. A estrutura simples das 
grades diádicas também facilita a representação e manipulação destas estruturas 
em computadores. 

2.1 Grades diádicas 

Podemos obter uma grade diádica através de divisões sucessivas de uma célula 
inicial ou célula raiz, correspondente à totalidade do domínio, sempre pela metade. 
Cada nova divisão é feita por um plano perpendicular a um eixo de coordenadas 
diferente, numa ordem cíclica. Por exemplo, para um domínio tridimensional 
com eixos cartesianos x, y e z, se a primeira divisão for perpendicular a x, então 
a segunda deverá ser perpendicular ao eixo y, a terceira perpendicular a z, a 
quarta perpendicular a x, e assim por diante, ciclicamente (figuras 2.1 e 2.2). 
Esta organização pode ser aplicada a um número arbitrário de dimensões k ;::: 1, 
e faz com que o refinamento da grade ocorra gradativamente. Por fim, obtemos 
um conjunto sub-regiões retangulares. 

9 



2.1. Grades diádicas 

I I I 
I I 

I 

. 
I I I i I '' I I , i I : 

i ' I I ' I I ! ; I 
I ' I ; I I ; I ; ,i 

! ; i ! " ' ' ' I I I ' I I ! 

Figura 2.1: Criação de uma grade diádica bidimensional. 

/ 

X 
-&gt; 

Figura 2.2: Criação de uma grade diádica tridimensional. 

10 

I 
I 

Assim, cada célula pode ser dividida em duas células filhas (figura 2.3 ) e, a 
menos que seja a célula raiz, equivale à metade de sua célula mãe. 

w 
• I 

I ' I n 

H 

ir 
' 

célula mãe 

f-i . ' ; 
i H 

i-
2 células filhas 4 células netas 

Figura 2.3: Uma célula mãe, com duas células filhas e quatro células 
netas. 

Prolongando-se esta disposição indefinidamente obtemos a grade diádica infi-
nita c·. Na prática usamos uma grade diádica finita, em que o processo termina 
depois de um número finito de divisões e portanto todas as grades mencionadas 
no restante deste trabalho devem ser consideradas finitas. 



2.2. Orientação, indexação e profundidade 11 

As cél-ulas folha são o conjunto de células da grade que não sofrem divisões. 
!\a figura 2.3, entre as células destacadas, a célula mãe e as células filhas não são 
folhas, ao contrário das células netas. 

Logicamente, grades díádicas correspondem a árvores binárias (figura 2.4), e 
modelar uma grade diádica equivale a escolher uma árvore binária correspondente 
limitando adequadamente sua profundidade em cada região do domínio. 

Figura 2.4: Arvore binária correspondente a uma grade. 

2.2 Orientação, indexação e profundidade 

Para simplificar os cálculos, vamos supor que a origem do sistema de coordenadas é 
um vértice da célula raiz, e que todas as arestas são paralelas aos eixos coordenados 
( " ? -) ngura __ o . 

i 
i I 

'I I 
I 
' ! ,0)1 (0 

i i 

' I 

' 
• 

' 

l 

;t~~~~~~2_ 
' ' 

i y . 
(0,0,0) 

Figura 2.5: A origem coincide com um dos vértices da célula raiz. 

Atribuímos a cada célula da grade diádica um índice, que é um valor inteiro 
positivo. A célula raiz, a única que não provem da partição de outras, tem índice 
L Uma célula filha de uma célula de índice I recebe índice 21 ou 21 + 1, conforme 
esteja respectivamente mais próxima ou distante da origem. Assim, podemos 
representar cada célula de maneira compactada com apenas 1 bit. Veja a distri-
buição dos índices em uma grade bidimensional na figura 2.6. 



2.3. Posicionamento e tamanho das células 12 

1 I 1. i5l7l 
I 

2 
I 

3 lc:&gt;l416l 
1 

4 7 

Figura 2.6: Distribuição dos índices em uma grade 2d. 

Toda célula também tem uma profundidade na árvore binária derivada da 
grade diádica: a célula raiz tem profundidade O, e cada filha de uma célula de 
profundidade P tem profundidade P + 1. Ou seja, a profundidade de uma célula 
C indica o número de cortes necessários para transformar a célula raiz na célula 
C. O nível P da grade é o conjunto de todas as células com profundidade P, que 
pode ter no má.ximo 2P células. A figura 2.1 contém os 8 (do zero 
ao sétimo) da grade diádica infinita . Na figura 2. 7 as células de profundidade 
5 (o nível 5) estão em destaque. 

Figura 2.7: Nível 5 de uma grade diádica. 

2.3 Posicionamento e tamanho das células 

Cada nível de profundidade da grade infinita G' funciona como uma espécie de 
tabuleiro regular, com espaçamentos iguais ao longo de cada eixo, sempre em 
quantidades equivalentes a alguma potência negativa de 2 vezes a dimensão cor-
respondente da célula raiz. Portanto a posição e tamanho de uma célula podem 
ser obtidos facilmente a partir de sua profundidade P e índice I. 

Como a profundidade reflete a quantidade de cortes necessários para gerar 
uma determinada célula, e lembrando que estes cortes ocorrem alternando os 
eixos ciclicamente, então podemos calcular a quantidade máxima de células Qi 



2.3. Posicionamento e tamanho das células 13 

que podem ser dispostas ao longo do eixo i de uma grade G com k dimensões, a 
um de profundidade P: 

qi=IPI+{l se 
LkJ O se 

Pmod k &gt;i 
Pmod k :&lt;::i 

Para encontrarmos, por exemplo, o vetor Q das possíveis posições distintas de 
uma célula com profundidade P = 5 em G, sendo k = 3, fazemos: 

i=O (eixo X), l"l+l Q0 = 2 L = 4 (5 mod 3 &gt;O) 
(eixo 

I e I . 1 
(5mod3&gt; 1) i= 1 Q. = 2.3F = 4 

"' 
i=2 (eixo Z), i" J~o " Qo = 2" · =L (5 mod 3 :&lt;:: 2) 

A posição de uma célula C é o vetor 6(C) = (60 , ... , ók-J que dá o número 
de células de profundidade P entre C e a origem em cada eixo. Os valores 
50 , J1 , ... , Ok-! podem ser extraídos do índice I de C, bastando apenas desen-
trelaçar seus P bits menos significativos, organizando-os em k grupos. :Vlais pre-
cisamente, a representação binária de cada J1 é composta pelo i-ésimo bit menos 
significativo de I somado aos demais bits tomados de k em k, até a última casa 
antes do bit 1 mais significativo. 

Assim, por exemplo, se a grade G for dividida até que todas as suas células 
alcancem profundidade 5, com um total de 25 = 32 células, então cada eixo terá 
respectivamente Q = (4, 4, 2) células. Se uma célula C tiver índice I 57, de 

-'&lt;01201 
representação binária 1110012, então sua posição é obtida separando-se os 5 bits 

menos significativos como o(C) = ( l02 , H,, 02 ) = (2, 3, 0). Observe a estrutura 
da grade G e a posição da célula C na figura 2.8. 



2.4. Geometria canônica 14 

Figura 2.8: Célula C, com vetores Q(C) = (4, 4, 2) e o(C) = (2, 3, 0). 

2.4 Geometria canônica 

Numa grade diádica, como a divisão das células segue sempre a mesma ordem 
cíclica de eixos, a escolha das proporções da célula raiz interfere diretamente na 
velocidade com que os refinamentos trazem ganhos de precisão numérica. Isto 
ocorre porque os erros de aproximação de espaços de spiines são proporcionais 
ao diâmetro das células, isto é, às suas maiores arestas. Portanto, uma célula 
isométrica (com todas as arestas iguais) precisa ser dividida ao menos k vezes, em 
uma grade de dimensão k, para que o erro atribuído às células resultantes seja 
reduzido significativamente. Além disso a divisão produziria 2k células isométricas 
e consequentemente este problema se repetiria em todos os níveis. 

Para que as células em todos os níveis de profundidade mantenham-se propor-
cionais, a célula raiz deve ter no eixo i tamanho z-i/k com i variando entre O e 
k-1. Uma célula raiz bidimensional assim definida terá lados de tamanho 1 : 2- 1 / 2 

ou 1 : Vü,i). Em 3 dimensões, estas proporções tornam-se 1 : 2-113 : 2-z;a Todas 
as células de profundidade P serão similares à célula raiz, submetida a uma escala 
linear de fator 2-P/k, e rodada por uma permutação de eixos. 

Desta forma, o diâmetro das células é reduzido por um fator constante de 2- 1 /k 
a cada níveL Embora as células apresentem maior precisão em eixos diferentes de 
nível para nível, esta abordagem leva a refinamentos graduais da grade diádica, e 
é isotrópica se considerarmos todos os níveis em conjunto. 



Capítulo 3 

Splines diádicos 

Mostramos em detalhes neste capítulo a família das funções tenda, um subespaço 
multilinear do espaço de splines gerais definidos sobre grades diádicas, Destaca-
mos duas bases específicas para estas funções multilineares, e mostramos algorit-
mos discretos para encontrá-las além de um algoritmo simples capaz de interpolar 
uma função qualquer usando funções tendas, Analisando os algoritmos que en-
contram as bases, mostramos que possuem um tempo de execução proporcional 
ao número de células folha das grades diádicas sobre as quais são chamados, 

3.1 Splines 

Um spline é uma função polinomial por partes, ou seja, uma função f sobre 
cujo domínio rl existe uma partição (grade) em regiões distintas (células), sendo 
que f possui comportamento polinomial em cada célula, Quando o domínio rl 
está estruturado como uma grade diádica G, f é um spline diádico, A função f 
restrita a alguma destas células do domínio é chamada de retalho polinomial (ou 
simplesmente retalho), A continuidade mínima de f nas fronteiras entre todos os 
retalhos indica a continuidade de r o grau máximo de f é dado pelo grau máximo 
de todas as variáveis independentes sobre todos seus retalhos. A vantagem do uso 
de splines está na reconhecida simplicidade dos polinômios combinada com a 
possibilidade de melhorar a qualidade da aproximação numa região arbitrária de 
rl, usando uma partição mais fina nesta região, 

15 



32 Elementos finitos 16 

3.2 Elementos finitos 

O suporte de um splíne é o conjunto células onde ele não é identicamente nulo. 

Assim, outra vantagem de splines como funções aproximadoras é que seus espaços 
muitas vezes possuem bases cujos elementos (funções das bases) têm suporte muito 
pequeno, independente do número total de células na grade (figura 3.1). 

DDíiDB 
n. ,noo, IDO 
LJ ~ OOL.-...l 1' L) 

[].
, ,_;.DI. I' I 
D, ,noo uuo 

I 
H= I ~ 

I 
I 1-

grade diádica retalhos suporte limitado 

Splines com esta característica são chamados elementos finitos. Para obtermos 
o valor de uma função u'(x) =E ai'Pi(x) num dado ponto x combinando elemen-
tos finitos de uma base :p, só é necessário calcularmos os termos 'Pi(x) tais que x 
pertença ao suporte de 'fi, o que normalmente ocorre com poucas funções da base. 
Na aplicação de métodos numéricos, como o método de Galerkin ou aproximações 

por mínimos quadrados, os sistemas de equações montados com estas bases nor-
malmente são representáveis por matrizes esparsas. A escolha de alguma base de 
aproximação depende do grau de suavidade buscado. Splines de graus elevados 
podem gerar aproximações mais fiéis a funções suaves, usando menos retalhos. 

As funções aproximadoras que escolhemos neste trabalho são elementos finitos 
multilineares, ou seja, splines multilineares definidos sobre uma grade diádica 
finita G de dimensão k. 

3.3 splines multilineares sobre grades diádicas 

Um splíne multilinear de domínio k-dimensional definido sobre uma grade diádica 
G possui um retalho sobre cada célula de G, tem continuidade O e grau máximo 
1 em suas k variáveis. Embora paralelamente a cada eixo a variação de um 

spline multilinear seja linear, em outras direções a variação pode ser quadrática 
ou cúbica, em decorrência do produto de suas k variáveis (grau total k). 

Chamaremos de [ 1 [G] o espaço das funções multilineares de fronteira nula de-

finido sobre uma grade G diádica. Modificando a estrutura da grade G, alteramos 
em geral o espaço E 1 [G] e portanto suas bases. 



3.4. As funções tenda 17 

3.4 As funções tenda 

Nas bases que consideramos neste trabalho, o suporte de um elemento k-dimensional 
T é composto por 2k células de mesmo tamanho e profundidade, agrupadas em 
torno de um vértice central v. Neste ponto o elemento da base, r, possui valor 1, 
caindo linearmente ao longo de cada eixo para O na fronteira do suporte. No caso 
particular de k = 2, o gráfico do elemento genérico assemelha-se a uma tenda e 
por isso os elementos (para qualquer k ) serão aqui designados funções tenda ou 
simplesmente tendas (figura 3.2). 

1 

-1 

1 -1 

Figura 3.2: Função tenda com uma e duas dimensões. 

A profundidade (posto) de uma tenda é a profundidade das células de seu 
suporte. Uma tenda pode ser identificada unicamente por sua célula superior C, 
a célula de seu suporte mais distante da origem. Denotaremos por Te a tenda de 
uma grade diádica G cuja célula superior é C, e podemos escrevê-la como 

k-l 
Te(xo, ... 'Xk-l) =TI A (2'1kQixi- oi) (3.1) 

i=O 

onde Qi é o número de células de profundidade P na grade infinita G" ao longo 
da direção i: íii é a componente i do vetor posição 6 de C; e A é a função definida 
por 

A(x) = max{O, 1 
{ 

1 X 

lx} = O 
l+x 

seO:s;x:s;l 

se \x11 &gt; 1 
se-1:&lt;:;x&lt;0 

(3.2) 

É importante observar que esta definição da tenda Te admite que a grade G mede 
2-i/k em cada direção i. Se ao longo de cada eixo a grade G variasse apenas de 
zero a um, a fórmula de Te seria n:,;:-~ A (Qixi- lii)· 



3.5. As bases Bmax e Bmin 18 

3.5 As bases Bmax e Bmin 

tílí:zami)S para cada espaço de splines E1[G] duas bases, Bmax e Bmin· Em ambas 
bá uma tenda para cada vértice completo de G, ou seja, para cada vértice que 
tem 2k células incidentes. A base Bmax (maximal) consiste nas tendas de maior 
suporte possível (figura 3.4), eu quanto Bmin (mínima/) consiste nas tendas de me-
nor suporte possível (figura 3.3). Quando G é uma grade regular de profundidade 
P, Bmax possuí tendas em todos os níveis de k; até P, e Bmin possui tendas apenas 
de nível P. 

To Tz 

Ty Tg Tg 

Figura 3.3: A base minimal do espaço [ 1 de uma grade bidimensional 
irregular G. 

Note que nas figuras 3.3 e 3.4 as tendas numeradas iguais possuem o mesmo 
vértice central, e a diferença entre as duas bases está nas tendas 7 2 , 7 6 e 7 8 . 

Ts Tg 

Figura 3.4: A base maximal do espaço [ 1 de uma grade bidimensional 
irregular G. 

A bases Bmax podem ser encontradas mais facilmente do que as bases Bmin, 
mas possuem como desvantagem numérica uma tendência a gerar matrizes den-
sas do produto escalar de suas funções. Por outro lado, como suas tendas são 
mais abrangentes, permitem realizar aproximações grosseiras de amplas regiões 
do domínio utilizando apenas subconjuntos delas. 



3.5. As bases Bmax e Bmin 19 

As bases Bmin têm como propriedade gerar as matrizes de produtos escalares 
mais esparsas possíveis~ pois as regiões comuns ao suporte de suas tendas são 
minimizadas. Isso aumenta a estabilidade numérica porque reduz ao máximo a 
interferência no sistema de alterações na base. 

.1 bases Bmax e Bmín 

Provaremos que Bmax e Bmin são de fato bases para um espaço [ 1 [G] mostrando 
que as funções tenda destes conjuntos são linearmente independentes (LI) e geram 
o espaço [ 1 [G]. Começaremos mostrando a independência linear de todo conjunto 
simples, ou todo conjunto de tendas que possui no máximo uma tenda para cada 
vértice. 

Lema 3.1 Seja B um conjunto simples de tendas, e r uma tenda de profundidade 
mínima em B com vértice central v. Qualquer combinação linear do conjunto 
B' B-r énulaemv. 

Prova: Para qualquer tenda r' de B' o ponto v está situado na fronteira ou no 
exterior do suporte de r', e é zero neste ponto. O 

Teorema 3.1 Qualquer conjunto simples B de tendas é linearmente indepen-
dente. 

Prova: Suponhamos que B não seja LL ou seja, existe alguma tenda de B que 
pode ser escrita corno combinação linear das demais. Neste caso, seja r urna 
tenda nestas condições com profundidade P mínima em B e vértice central v. 
Obviamente ela pode ser escrita como combinação linear das outras tendas, com 
profundidades maiores ou iguais à P. Contudo, pelo lema 3.1 isto não é possível 
porque qualquer combinação linear das outras tendas de B terá valor zero em v, 
onde r é um e portanto B só pode ser LI. O 

3.5.2 Interpolação usando tendas 

Antes de prosseguir com as provas, mostraremos um algoritmo simples de inter-
polação usando tendas. Seja G urna grade diádica k-dimensional, B um conjunto 
qualquer de tendas e f urna função arbitrária definida sobre G. O algoritmo 3.5.1 



3.5. A.s bases l3max e Bmin 

algoritmo 3.5.1 Interpola(B, f) 

L Seja V o conjunto dos vértices centrais das tendas de B: 
2: Ordene Bem ordem de profundidade, obtendo"" .. Jn: 
3: for i : 1 -+ n do 
4: Seja v o vértice central de T;; 
5: if v é/ V then 
5: O; f- O; 
7: else 
8: o; f- f(v)- L{OjT;(v): j&amp;lt;i e v E Dom(T;)}; 
9: V+-V {v}; 

10: end if 
11: end for 

20 

(Interpola) encontra uma combinação linear g = L~=o o;T: de B que interpola f 
nos vértices centrais das tendas de B. 

Lema 3.2 A função g resultante do algoritmo 3.5.1 tem g(v) = f( v) em todo 
vértice central v das tendas do conj-unto B. 

Prova: No passo 8, cada coeficiente ai é calculado de forma que f( v) = L; OjT;( v), 
para j :Si (a restrição v E Dom(T;) é supérfula pois T;(v) O se v é/ Dom(T;)), 
onde v é o vértice central de T;. Verifica-se que a combinação linear L; a;T;(v), 
com j &gt; i das demais tendas de B é sempre nula. Isto ocorre porque as tendas 
com j &gt; i ou têm centro em v, e portanto terão a; = O (pelos passos 5 e 9), ou 
têm centro diferente de v e profundidades maiores ou iguais à profundidade de T,, 
e portanto T; (v) = O pelo lema 3. L O 

3.5.3 Cobertura das bases Bmax e Bmin 

Vamos mostrar agora que as bases Bmax e Bmin de uma grade k-dimensional G 
geram todo o espaço E1 [G]. Na verdade provaremos que qualquer conjunto de 
tendas que incluí pelo menos uma tenda para cada vértice completo de G (um 
conjunto completo de tendas) gera todo o espaço [ 1 [ G]. 

Diremos que um vértice v é esquina de uma face F de G se v for face (de 
dimensão O) de F. Se v está sobre alguma face F (com dimensão d :S k) de 
alguma célula folha C de G mas não é esquina de F, então v é intermediário 
de F e de C. Diremos que v é incompleto se não está na fronteira da grade e é 
intermediário de alguma célula folha. 



3.5. A.s bases Bmax e Bmin 

I 
A 

C6/ 
j 

' 
\ 

/ incompleto 

C2[ l:l 
C3 

C4,C5 

C7 

completo 

c 
' de 

fronteira 

Figura 3.5: Um vértice completo esquina das células Cl, C4, C6 e 
C7; um vértice incompleto B, esquina das células C2, C5 e intermediário 
à célula C3; e um vértice de fronteira C. 

21 

Em uma grade diádica G, para todo vértice v seja o conjunto das células 
folha incidentes a v. Se v é completo então ele é esquina de todas as células de 
l'i(v). Quando v é incompleto, ele sempre é esquina de pelo menos duas células 
de N( v) e intermediário de pelo menos uma destas células. 

Lema 3.3 Seja G uma grade diádica k-dimensional, f uma função de E1 [G], e 
v um vértice intermediário de uma face F de alguma célula folha C. Se f é nula 
em todos os vértices de F, é nula em v. 

Prova: Não pode haver mais do que um retalho polinomial de f em C, porque C 
é uma célula folha. Este retalho é multilinear dentro de Q_ Como f é contínua, 
então a restrição fi F também deve ser uma função multilinear. Assim, a variação 
de f entre quaisquer dois vértices adjacentes de F é linear e consequentemente f 
terá valor O sobre toda a aresta entre estes dois pontos. Repetindo este argumento 
em todos os eixos, concluímos que f é zero em toda face F, e portanto no vértice 
v. o 

Lema 3.4 Seja v um vértice incompleto. Se v é intermediário de uma célula C, 
então C tem profundidade menor que a profundidade de qualquer célula da qual 
v é esquzna. 



35 As bases Bmax e Bmin 

/C3&gt;C2&gt;C5 

{' 
C2 \ B E C9 

C3 
H C10 

Cll 
Cll &gt; C3 &gt; C10 

C7 &gt; C4 = CS 

Figura 3.6: Cada vértice incompleto (B, D, E, F, H, I e J) é 
intermediário a uma célula de profundidade menor do que todas as 
células das quais são esquinas. 

22 

Prova: Seja G uma grade diádica k-dimensíonal. Se v é um vértice completo 
de G e C é a célula folha de menor profundidade da qual v é esquina, então v 
também é esquina de outras 2k - 1 células (não necessariamente folhas) de G de 
mesma profundidade. Agora seja v um vértice incompleto (como ilustrado na 
figura 3.6) e N( v) o conjunto das células folha incidentes em v. Seja C1 a célula 
de menor profundidade P 1 em N (v) que tem v como esquina e C2 uma célula de 
N(v) com profundidade P2 , da qual v é intermediário. Refinemos G até encontrar 
uma grade G', onde todas as células têm profundidade mínima P1 . O vértice v 
será completo em G' e esquina de 2k células de profundidade P1 . Como G' é um 
refinamento de G, algumas destas células serão descendentes de C2 e portanto 
A&lt;~ D 

Lema 3.5 Seja G uma grade diádica k-dimensional e f uma função do espaço 
E1 [G]. Se f é zero em todos os vértices completos de G então é zero também em 
todos os vértices incompletos de G. 

Prova: Seja H o grafo orientado cujos nós são os vértices de G, e no qual cada 
vértice incompleto v aponta para as esquinas de todas as faces das quais ele é 
intermediário. Note que se f é zero nessas esquinas, então pelo lema 3.3, f é zero 
também em v. Denotaremos por r;( v) a profundidade da maior célula de quem v 
é esquina. Este grafo não pode ter ciclos, porque para qualquer aresta de v1 para 
v2 , pelo lema 3.4 r;( vi) &gt; r;( !J:2). Os sorvedouros de H são vértices completos ou 
de fronteira. Como f é nula nestes pontos, então (por indução na distância ao 
sorvedouro mais distante)/ é nula em todos os vértices de G. D 



3. 6. Determinação de bases Bmax e Bmin 23 

Teorema 3.2 Todo conjunto completo de tendas B definido sobre uma grade 
diádica G gera o espaço E1 [G]. 

Prova: Sejam f um spline de E1 [G] e B um conjunto completo de tendas sobre 
G. Pelo lema 3.2 podemos encontrar uma combinação linear g de B tal que 
g( v) = em todos os vértices completos de G. Vamos mostrar que g = f. 
Como as tendas de B pertencem ao espaço E 1 [ G], a diferença r = g - f também 
pertence a este espaço; ela é zero na fronteira de G e é zero em todos os vértices 
completos de G. Pelo lema 3.5, r também é zero em todos os vértices incompletos 
de G e, pelo lema 3.3, r é identicamente nula em G. O 

As bases Bmax e Bm;n são conjuntos simples e completos, de maneira que pelos 
teoremas 3.1 e 3.2 são de fato bases do espaço E1[G]. 

3.6 Determinação de bases Bmax e Bmin 

É importante que tenhamos algoritmos eficientes para encontrar as bases Bmax e 
Bmin de uma grade diádica G, porque qualquer alteração em G normalmente modi-
fica estas bases. Como há uma correspondência entre tendas e vértices completos, 
então obteremos Bmax e Bmin em princípio encontrando os vértices completos de 
G. Se para cada vértice v encontrado guardarmos uma tenda T cujo suporte é 
composto pelas células de menor profundidade que têm v como esquina, chegare-
mos a Bmax. Fazendo o mesmo, mas escolhendo as células de maior profundidade, 
chegaremos a Bmin· 

3.6.1 Lugares e o conjunto estrela 

Antes de mostrarmos os algoritmos que encontram as bases, precisaremos de duas 
definições úteis para trabalharmos com sub-regiões de grades diádicas, os lugares 
e suas estrelas. Um lugar L de uma grade diádíca G k-dimensional consiste de 
uma profundidade P(L), e uma face F(L) de alguma célula de nível P(L) da 
grade G que não está na fronteira de G. Dizemos que a dimensão do lugar L é 
a dimensão d de F(L). Na grade diádica infinita c• há exatamente 2k-d células 
de profundidade P(L) incidentes à face F( L). Se todas estas células também são 
células da grade G (não necessariamente folhas) então L é dito um lugar completo 
de G. Veja a figura 3.7 abaixo. A lista destas células é a estrela de L, denotada 
por L'. 



3.6. Determinação de bases Bmax e Bmin 

Figura 3. 7: Lugares incompletos cujas faces são respectivamente um 
segmento de reta e um ponto, na primeira e terceira grade a partir da 
posição mais à esquerda. segunda e quarta grade, as células em 
destaque são divididas para que estes lugares tornem-se completos. 

24 

Note que uma mesma face F pode ser parte de dois lugares distintos, com 
níveis diferentes (figura 3.8). 

Figura 3.8: Nas duas grades tridimensionais, uma mesma face F plana 
determinada por células de profundidade 3 ou 4. Na grade 
bidimensional, uma face F (ponto) determinada por células de 
profundidade 2 ou 3. 

Se F(L) é uma célula, então L é sempre completo e L' tem uma única célula, 
a própria F(L). Numa grade bidimensional, a estrela de um lugar aresta consiste 
de duas células (figura 3.9, esquerda), enquanto em uma grade tridimensional a 
estrela de um lugar aresta tem 4 células (figura 3.9, direita). Os lugares completos 
de dimensão zero são os vértices completos de G. 

Figura 3.9: Um lugar aresta em uma grade bidimensional e em uma 
grade tridimensional. 

3.6.2 O algoritmo Gera_Bmax 

Gera_Bmax é um procedimento recursivo que encontra a base Bmax de uma grade 
G de dimensão k, fazendo um percurso em profundidade nos lugares de G em busca 



3. 6. Determinação de bases Bmax e Bmin 

de vértices completos. As entradas do algoritmo são uma sequência (!0 , ... , In_ 1 ) 
de índices que representam as células da estrela V de um lugar completo L de 
G; a dimensão d deste lugar; o eixo de divisão i = P(L) mod k; e a lista H = 
(h0 , ... , hm- 1 ) dos eixos ortogonais a F( L), onde m = k- d. O algoritmo devolve 
a lista dos índices das células superiores das tendas da base. Para todo r E 
O, ... , m- 1 e todo j E O, ... , n - l, o bit 2' do índice j diz se a célula Ij está 
mais perto (O) ou mais longe da origem do que a face F(L) na direção do eixo 

hr· 

algoritmo 3.6.1 Gera.Bmax( (!0 , ... , In- 1), d, i, (h0 , ... , hm-l)) 

1: if d = O then L é um ponto. 
2: Devolve {In-d; Inclui a nova tenda (Bmax +-- Bmax U {In-i}). 
3: else 
4: if (10 , ... , In-J não possuí folhas then 
5: Calcule A = (Ih) ... 1 1~_ 1 ) 7 tal que 1;. = 
6: Calcule B = (Ig, ... ,1~_ 1 ), tal que Ij' = (2Ij + 
7: l +-- (i + 1) mod k; 
8: if i hr para algum r em O, ... , m - 1 then 
9: Calcule C+-- {Cj =Ai se o bit r de j é 1, ou Ci =Bise este bit é O}; 

10: B' +-- Gera.Bmax(C, d, I, H); 
ll• Devolve B'; 
12: else 
13: B' +-- Gera_Bmax(A, d, l, H); 
14: B" +-- Gera.Bmax(B, d, I, H); 
15: B 111 +-- Gera_Bmax(A · B, d- L I, H· (i)): 
16: Devolve B' U B" U B 111 ; 
17: end if 
18: else 
19: Devolve {}; 
20: end if 
21: end if 

A chamada inicial é Gera.Bmax((l), k, O,()). 

Lema 3.6 O algoritmo Gera_Bmax executado sobre um lugar completo L encon-
tra todos os lugares completos de dimensão zero ( 1) cujo vértice está em F (L) e 
(2) cuja profundidade P é a menor possível mas P 2: P(L). 

Prova: Precisamos mostrar que o algoritmo Gera_Bmax encontra todos os vértices 
completos (e consequentemente as tendas) existentes no interior da face F( L), e 



3. 6. Determinação de bases Bmax e Bmin 26 

que as células do suporte destas tendas são escolhidas de forma que elas têm a 
menor profundidade possível em F( L). Seja V o conjunto de todos estes vértices 
completos. 

Primeiro o algoritmo verifica a dimensão d, na linha l. Se esta for zero então 
L é um vértice; como L é completo, ele determina uma tenda cujo suporte é L', 
com vértice central F(L) =v. Neste caso V= {v}, m = k, e o algoritmo devolve 
a célula , que é a célula de L' incidente a v mais distante da origem em todas 
as direções (linha 2). 

Na linha 4, se alguma célula da lista (10 , ... , é folha, então, como L tem 
dimensão d &gt; O, não há vértices completos em F (L) e portanto o conjunto V é 
vazio (linha 19). Caso contrário, as células de L' podem ser todas divididas ao 
longo do eixo i (linhas 5 e 6), criando os conjuntos A e B. 

Essa divisão pode acompanhar uma divisão de L ou não, conforme a posição do 
eixo i em relação a F (L). Quando i é ortogonal a F (L) (linha 8, figura 3.1 O), a face 
F(L) não é modificada, mas L é substituído por um lugar L' tal que F(L') = F(L) 
e P(L') = P(L) + 1. Cada célula Cj de L" é uma das filhas (AJ ou Bj) da célula 
correspondente de L'. Especificamente, suponha que i = hr; então CJ é Ai se o 
bit r de j é 1, senão CJ é BJ (linha 9). Como F(L') = F(L), a lista B' de índices 
devolvida na linha 10 representa tendas com os mesmos vértices centrais V. 

X 
--!&gt; 

Figura 3.10: Na grade à esquerda, o eixo de divisão ( x) é ortogonal à 
face em destaque. 

Quando o eixo i é paralelo a F( L) (linha 12), os índices de A e B representam 
respectivamente L'" e L"', as estrelas dos lugares L' e L" resultantes da divisão 
de L ao meio. A concatenação de A e B, por sua vez, representa L"'", a estrela 
do lugar com dimensão d- 1 que separa L' e L" (figura 3.11). Neste caso três 
instâncias de GeraJ3max são chamadas, nas linhas 13, 14 e 15, para procurarem 
os vértices completos V', F", e V"' sobre F( L'), F( L") e F(L"'). Como estas faces 
são disjuntas e sua união é F( L), então V' n V" n V 111 ={}e V= V' U F" U V"'. 



3.6. Determinação de bases Bmax e Bmin 27 

Figura 3.11: Gera_Bmax executado sobre duas faces determinadas por 
eixos de são paralelos a estas faces. 

Para todo vértice v E V, a profundidade de qualquer lugar que tem v como 
face será pelo menos P(L) (se F(L) for um ponto) e portanto a condição (2) do 
lema será respeitada. O 

Teorema 3.3 O algoritmo 3Ji.1 (Gera_Bmax) executado sobre uma grade diádica 
G k-dimensional encontra a base Bmax de G. 

Prova: Executando Gera.Bmax sobre o lugar L, cuja estrela U contém apenas 
a célula raiz de G, encontraremos pelo lema 3.6 todos os vértices completos no 
domínio de G, (F(L)), além de um conjunto de índices representando as tendas 
de maiores suportes em G com centro nestes vértices. O 

3.6.3 O algoritmo Gera_Bmin 

O algoritmo Gera.Bmin é uma modificação de Gera_Bma.x, com uma condição 
adicional no comando if na linha 1: 

if d = O e (J0 , ... , In_ 1 ) possui alguma folha then 

end if 



3. 6. Determinação de bases Bmax e Bmin 28 

Lema 3. 7 O algoritmo Gera_Bmin executado sobre um lugar completo L encontra 
todos os lugares completos de dimensão zero (1) cujo vértice está em e (2) 
cuja profundidade P é a maior possível. 

Prova: A demonstração é análoga à do lema 3.6. A úníca diferença é que no 
passo 1, se a condição é satisfeita, obviamente L é o lugar de maior profundidade 
centrado no vértice v = F (L)_ 

Se d = O mas L' não possui folhas, então F(L) será um vértice v ortogonal 
a todos os k eixos de coordenadas e o algoritmo será chamado recursivamente 
(linhas 9 e 10) sobre as células filhas de L' que têm v como esquina, até chegar a 
um lugar L', onde L'" tem alguma célula folha. Neste caso, a tenda T cujo suporte 
é L'" tem profundidade máxima em F(L). D 

Teorema 3.4 O algoritmo (Gera_Bmín) executado sobre uma grade diádíca G 
k-dímensíonal encontra a base Bmin de 

Prova: Também executando Gera_Bmin sobre o lugar L, cuja estrela L' contém 
apenas a célula raiz de G, encontraremos pelo lema 3.7 todos os vértices completos 
no domínio de G, (F(L)), e um conjunto de índices representando as tendas de 
menores suportes em G com centro nestes vértices. D 

3.6.4 A complexidade de Gera_Bmax e Gera_Bmin 

Calcularemos o tempo de execução dos algoritmos GeraJ3max e Gera_Bmin, ca-
pazes de encontrar respectivamente as bases Bmax e Bmin de uma grade diádica G 
de dimensão k, em função do número n de células folha de G. Este número reflete 
a complexidade da grade G, independente da forma com que ela foi refinada. 

Toda grade diádica é o resultado de uma série de divisões de sua célula raiz. 
Cada divisão acrescenta exatamente duas células à grade, o que em sua estrutura 
de árvore binária significa transformar uma célula folha na mãe de duas novas 
células folha. Da mesma forma, o número de células folha é incrementado de uma 
unidade. Assim, se G tem n células folha, então foi gerada a partir de n - 1 
divisões de sua célula raíz, e possui (2 x n)- 1 células ao totaL 

Suponhamos que G é bidimensional, e seja G uma célula de G. A célula G 
pode, no máximo, pertencer à estrela de 4 lugares de dimensão O + 4 lugares de 
dimensão 1 + um lugar de dimensão 2 = 9 lugares distintos. Como Gera_Bmín 



3. 6. Determinação de bases Bmax e Bmin 29 

verifica cada lugar de G uma única vez, então não pode ter um tempo de execução 
superior a 9 x x n) -1), ou seja, sua complexidade é da ordem de 8(n) quando 
executado sobre grades bidimensionais. 

Se C é uma célula de uma grade G tridimensional, uma verificação análoga 
nos indica que no máximo C pode fazer parte da estrela de 27 lugares distintos. 
Portanto, como G também possui (2 x n)- 1 células neste caso, então Gera_Bmin 
também tem complexidade da ordem de 8(n) quando executado sobre grades 
tridimensionais. Considerando que o algoritmo Gera.J3max verifica uma quanti-
dade de lugares menor ou igual ao número total de lugares de G, então possui 
complexidade máxima igual à de Gera_Bmin. 



3. 6. Determinação de bases Bmax e Bmin 30 



Capítulo 4 

Aproximação por 
quadrados 

, . 
illllllillOS 

A aproximação por mínimos quadrados é uma técnica bastante conhecida, O uso 
de tendas nestes casos pode ser vantajoso, considerando a estrutura simples destas 
funções, de fácil armazenamento e manipulação, Além disso, na aproximação de 
funções muito irregulares, podemos refinar as bases até alcançarmos o grau de 
precisão requerido, sem desperdício de recursos, 

4.1 Aproximação por mínimos quadrados 

Seja u(x) uma função que queremos aproximar, definida sobre um domínio rl 
de dimensão k, Buscamos uma aproximação que seja uma combinação linear 
u' (x) =I:;,;;~ aj'Pj(x), onde tp é um conjunto linearmente independente de funções 
definidas sobre [L Seja S' o espaço gerado pela base (tpo,,,., 'Pn- 1 ). Segundo o 
critério dos mínimos quadrados, a melhor aproximação para u no espaço s· é a 
que minimiza a distância 

!lu- u'll =(L (u(x)- u'(x)) 2 dx) 112 
onde dx = dxk- 1 .•• dx 0 . A eqnação (4.1) pode ser escrita também como 

llu u'll = (u- u', u- u') 112 

onde (,) denota o produto escalar de duas funções sobre rl, definido por 

(f, g) =In f(x)g(x)dx 
31 

(4.1) 

(4.2) 



4.2. O produto escalar de funções tenda 32 

Por brevidade, omitiremos o argumento "(x)" nas integrais a seguir. 
Verifica-se que minimizar (4.1) equivale a tomar u' a projeção ortogonal deu 

sobre o espaço de aproximação s·' ou seja, resolver as equações 

(u-v:,cp;)=O = i(u-u')cp1dx=O i = O, ... , n - 1 

Ou seja, 
n-1 

i ( u- L OJ'PJ)cp1dx =O 
n J=O 

i = O, ... , n - 1 (4.4) 

Desenvolvendo o lado direito desta equação para um dado i, obtemos 

n-l n-l 

i u cp,dx- 1 (L OJ'P;)'P1dx = 1 u 'Ç1dx- L aJ 
n n j=O n j=O 

de maneira que podemos reescrever as equações ( 4.4) como 

n-1 

L aJ 1 'PJ'Pidx = 1 u cp,dx 
j=O n n 

O, .. . ,n- 1 (4.5) 

Esta fórmula é o Sistema Normal de n equações lineares sobre n variáveis, os 
coeficientes a0 , ..• , On-l· Sua representação matricial tem a forma E a = b, onde 
E é uma matriz n x n, e b é um vetor coluna de tamanho n, definidos por 

EiJ =('?i, 'P;) bi = (u, 'Pi) i, j = O, ... , n- 1 

4.2 O produto escalar de funções tenda 

Nesta seção mostramos como calcular o produto escalar (cp;, 'Pj) de duas funções 
tenda, necessário à composição da matriz E do sistema (4.5). Na seção 4.3 
mostraremos uma fórmula genérica para o cálculo aproximado de um elemento 
b; = (u, cp;), para uma função qualquer f. 

Sejam r' e r" duas tendas definidas sobre uma grade diádica G de dimensão k. 
Obviamente, para calcular o produto escalar (r', r") precisamos calcular a integral 
(4.2) apenas na região R (figura 4.1) coberta pelos suportes das duas tendas. 



4.2. O produto escalar de Íunções tenda 33 

T R 

~1 1 .~1. I ; ' . I I l t 
Figura 4.1: Tendas T', , e a região R comum aos suportes destas 
funções. 

Supondo sem perda de generalidade que o posto de .,-' é maior ou igual ao 
posto P" de r', verifica-se que esta região é a união de no máximo 2k células 
Cb, ... , c;,_ 1 de posto P', contidas no suporte de r'. Portanto, podemos escrever 

f,,..! 
\' ) T

1T"dx 

No restante desta seção veremos como calcular a integral fc r'r"dx, para uma 
célula C' = Cj. 

Pela definição (3.1), 

k-l k-1 

r'(x) = IJ A(2ifkQ;x;- o;) e r'(x) IJ A(21/kQ;'x1 - 6;') (4.7) 
i=O i:::::O 

Seja C" a célula do suporte de r" que contém a célula C' (figura 4.2). 

Figura 4.2: A célula C' de r' está contida na célula C" de r". 

Para x em C', podemos reescrever a fórmula da tenda r" como 

k~l k-l 

r"(x) = lJ J\(2 1/kQ;'x;- 5;') = lJ A(a;(2'fkQ;x1 - 5;) + 8;) 
i=O i=O 

Nestas fórmulas, a 1 é o tamanho do suporte de r' em relação ao suporte de r" 
na direção i, e (31 = (2ifkQ;' v[ - íi;') onde v' é o vértice central do suporte de r'. 



4,2. O produto escalar de funções tenda 34 

Portanto, a parcela do produto escalar (T1, r') correspondente a C' é a integral 

k-1 k-1 

A(2'ikQ;x,- á;) A(a,(21/kQ;x,- o;)+ 31)dxk-l,,, dx 0 (4.8) 
i=O 

onde xi e são respectivamente as posições de C' mais próxima e mais distante 
da origem ao longo do eixo i, Uma vez que cada fator da produtória depende de 
uma única coordenada x1, podemos separar as integrais, ou seja, usar a identidade 

E' i:! f(x)g(y)dydx = (Ef f(x)dx) (l~f g(y)dy) 
e reordenar a expressão ( 4.8) como segue: 

( 4.9) 

Para simplificar, fazemos as seguintes mudanças de variáveis 

2ifkQt ó'' u1- = -x-- . I I I portanto (4.10) 

e transformamos a equação (4.9) em 

k-1 uf 

IJ(2i/kQ;)- 11o' A(u1)A(cqu; + p;)du; 
i=O ui 

Se C' for uma célula inferior de T 1 na direção i, isto é, se ao longo do eixo i a célula 
C' estiver entre o vértice central v' e a origem, os limites de integração [uf, u{J 
nesta direção serão [-L O] e A(u,) será 1 + u,. Por outro lado, se C' for superior 
na direção i, isto é, se v' estiver entre C' e a origem nesta direção, estes limites 
de integração serão [0, 1] e A(u;) será 1- u;. Analogamente, se C" for uma célula 
inferior de T 11 na direção i, então A(aiui+/3,) = l+o:;ui+/3,; caso contrário, temos 
que A(aiui + p;) = 1- a;u;- ,81. Portanto, a integral no fator i da produtória 
pode ser desenvolvida de quatro meneiras: 

" C' e C" inferiores, 

l o ( a B· 1) (1 +u)(1 +au + B)du = _ _:. + ~ +-&amp;lt;t tt ,! l 6 2 2 -1 ( 4.11) 



4.3. Produto escalar de funções gerais 

e C' inferior e C" superior~ 

(1 + u)(l- Oi u - 31du = ' ~ ~ ~ ' !; z 

e C' superior e cn inferior) 

[(1-
e C' e C" superiores, 

1' (l u;)(l- Oi; ui- 8i)du; 
4.3 

--+ 
6 2 

8 
+ ' ' -

5 2 

germs 

35 

1 

1 

2 

(4.14) 

Para calcular um elemento do vetor b do sistema ( 4.5) precisamos calcular a 
integral fn u pdx onde u é uma função arbitrária. Normalmente esta integral não 
possui uma fórmula explícita. Portanto, devemos usar um método de integração 
numérica para calcular uma aproximação da mesma. 

4.3.1 Quadratura de Gauss 

Uma boa escolha neste sentido é a quadratura de Gauss, que em uma dimensão é 

a aproximação 

1~
1 

j(t)dt o:e ~ Cjj(tj) (4.15) 

para certos pontos tj E [ -1, + 1] e certos coeficientes cj. Os pontos tj são as raízes 
de algum polinômio de grau n + 1 de uma família H de polinômios ortogonais no 
intervalo [ -1, + 1], e os coeficientes Cj são 

+1 

cj =f lj(x)dx, 
-1 

onde 10 , ... , ln são os polinômios de Lagrange sobre esses pontos [Pis80]. Esco-

lhendo para H os polinômios de Legendre, podemos usar valores já tabelados de 
Cj e tj· Quanto maior o n, melhor será a precisão do resultado. Em particular, 
se f for um polinômio de grau 2n + L o resultado da integração é exato. 



4,3, Produto escalar de funçôes gerais 36 

Os pontos e coeficientes da fórmula de quadratura de Gauss-Legendre são 
tabelados para o intervalo de integração [-1 1 1]. Para calcular a integral num 
intervalo genérico b], 

1&amp;amp; f(x)dx 
precisamos fazer a substituição de variável 

b-a b+a 
X= --t+--

2 2 
de modo que se x = a, t = ex= b, t =+L Temos então 

t 1' b - a b - a b + a la f(x)dx = -l ~ J(-
2
-t + - 2-)dt 

e portanto a fórmula ( 4,15) fica 

b-a~ 
f(x )dx = -

2
- L-

J=ü 

Para n = 10, usamos os seguintes valores de tj e C1: 

tj cj 

-0,973906528517172 0,066671344308688 
-0,865063366688985 0,149451349150581 
-0,679409568299024 

I 
0,219086362515982 

-0,433395394129247 1 0,269266719309996 
-0,148874338981631 0,295524224714753 
0,148874338981631 0,295524224 714 753 
0,433395394129247 0,269266719309996 
0,679409568299024 0,219086362515982 
0,865063366688985 0,149451349150581 
0,973906528517172 0,066671344308688 

Tabela 4,1: Valores de tJ e Cj, para n = 10, 

4.3.2 Integração em k variáveis 

(4,16) 

Se f é uma função de k variáveis, e fl é uma caixa com projeções [-1, +1] em 
cada eixo i, então a fórmula de quadratura de Gauss fica 

( 4.17) 



4.4. Exemplos usando grades regulares 37 

Ou seja, a função f é calculada numa grade com ( n + 1 )k pontos cujas co-
ordenadas são todas as combinações , tj,, . .. , dos pontos t1o 
da fórmula 15); e os valores obtidos são somados com pesos correspondentes 
c]O' cj;' ... ' CJk-'. Quando o domínio Q é uma caixa geraL com projeção bj 
em cada eixo i, a fórmula (4.17) deve ser ajustada conforme a fórmula (4.16). 

A integral J" u cp onde cp(x) é uma função da base e u(x) é uma função geraL 
pode ser então aproximada aplicando-se a quadratura de Gauss à função f = 
u x :p. No caso particular em que cp é uma tenda r, é preferível calcular a integral 
separadamente sobre cada uma das células do suporte de r(x). 

Para testar a qualidade dos espaços de splines diádicos E 1 [ G] como espaços apro-
ximantes, aplicamos o método dos mínimos quadrados para as funções da tabela 
4.2 usando várias grades regulares G. Uma vez que todas as funções do espaço 
E1 [G] são nulas na fronteira da célula raiz, escolhemos para teste funções com esta 
mesma característica. 

nome fórmula 
sxsy 

gauss exp(-((x- 0,5) 2 + (-/2y- 0,5) 2 )/0,005) i 
tendaR A(2x- 1)A(2-/2y- 1) \ 

Tabela 4.2: Funções para testes do método de mínimos quadrados. 

Utilizamos as bases de tendas maximais (Bmax) e minimais (Bmin) obtidas a 
partir dos níveis 6, 8 e 10 da grade diádica bidimensional infinita. Para avaliarmos 
numericamente cada aproximação, calculamos a distância li u - u'\\ pela fórmula 
(4.1) entre as funções originais e as funções aproximadas. Neste cálculo, a integral 
(4.1) foi obtida por quadratura de Gauss (seção 4.3.1) aplicada separadamente 
para cada célula da grade G. Os resultados destes cálculos são mostrados na 
tabela 4.3. Esta tabela serve tanto para a base Bmax quanto para a base Bmin, 
pois os resultados obtidos foram praticamente idênticos para ambas as bases. 



4.4. Exemplos usando grades regulares 

nível 6 s 1 10 
,\ 0,1531 o,o765 1 o,o3ss 

\ sxsy 1
1 

0,01468220 o,oo3479ü7 I o,ooos5685 
gauss I 0,01386992 0,00297978 I o,oo068360 

1 tendaR I 6,3x 10 17 6,8x10 17 I 6,0xl0 17 

Tabela 4.3: Distâncias li u - u' li cacuíadas para cada base de 
aproximação. O parâmetro .\ é o diâmetro das células da grade. 

38 

As figuras 4.3 a 4.5 ilustram estas funções, suas aproximações nas três grades 
e os respectivos resíduos u - u•. Cada função f está representada em curvas de 
nível. O parâmetro 61 é o espaçamento entre os níveis, sendo o primeiro nível 
(~) aJ/2. O parâmetro 62 é o último nível traçado. A região entre os níveis -5!/2 
e não é pintada; tons vermelhos indicam valores positivos e tons azuis 
nHlJC,am valores negativos. Os valores de o1 e 52 estão indicados nas legendas de 
cada figura. Todos os gráficos de funções em curvas de nível no restante deste 
trabalho devem ser interpretadas da mesma forma. 



4.4. Exemplos usando grades regulares 

nível 6 

u- u* 

nível 10 u- u* 
-'T,-, ,----c :_:c·:-- : __ C:::J 

fc)i 
,_,_::,-&amp;lt;: :.: 

H 

?::: '::.: ' 
-+-- : ,_ : --:, 

Figura 4.3: A função sxsy e suas aproximações por mínimos quadrados 
nas bases Bmin de níveis 6, 8, e 10, traçadas com :h = O, 08 e 62 = 1, 2. 
Os resíduos u - u* foram traçados com o1 = O, 008 e 82 = O, 12. 

39 



4.4. Exemplos usando grades regulares 

u = gauss 

nível 6 u - u* 

nível 8 u -u* 

nível 10 u - u* 
.. ,., .... , T c· '·- ... , .......... 
c ' .. 

' '"'"' 

• .., •. , '''[C:: ····- :-: ... r. ·' L•:' 
•.......... 

Figura 4.4: Função gauss e aproximações nas bases Bmin de níveis 6, 8, e 
10, com o1 = O, 08 e o2 = 1, 2. Para os resíduos u- u*, foram usados 
61 = O, 008 e o2 = O, 12. 

40 



4.4. Exemplos usando grades regulares 

u = tendaR 

nível 6 u - u* 

nível 8 u- u* 
' --~---- ·:_c··--

..... __ -··,···-· .. i : 
.. ·······- ····-

' -· 
[ t . --t:-:. - ·- ---

i 
.. ' - - . - -

1-----·--;--- - - ' -- ·-' ' - 1- i 

'r--T 
' ' 

. 

nível 10 u - u* 
-, --- - ' ,,.. --- ... 

r ,_' 
r •• --

: 

' ' .- ' . ,_. _____ - ' ' -
h 

,_ . -. ,_,_, '• r- -,--. ·+ri·• ' - - c•c+. 
---, 

_,_ 

Figura 4.5: Função tendaR e aproximações nas bases Bmin de níveis 6, 8, 
e 10 com 81 = O, 08 e o2 = 1, 2. Os resíduos u -- u* possuem 61 = O, 008 e 
02 =o, 12. 

41 



4.5. Aproximações com refinamento da grade 42 

Como previsto, todas as aproximações da função tendaR (que pertence ao 
espaço E1 [G], apesar de não estar na base Bmin) são praticamente iguais à função 
original; os resíduos são desprezíveis e refletem apenas erros de arredondamento. 
No caso das funções sxsy e gauss, o erro é aproximadamente proporcional ao 
quadrado do diâmetro À das células, como esperado pela teoria para aproximações 
de grau um. 

4.5 Aproximações com refinamento da grade 

Os gráficos do resíduo u- u' evidenciam que os erros de aproximação normalmente 
concentram-se onde as funções originais possuem maior curvatura ao longo dos 
eixos. Interessa portanto escolher uma grade irregular G mais refinada onde é 
mais difícil simular o comportamento de u usando tendas. Isto permite obter uma 
aproximação u" bastante precisa, com uma base B de dimensão muito menor. 

Para fins de teste, usamos grades construídas pelo algoritmo recursivo 4.5.1 
(Refina_Grade). Suas entradas são a função a a ser aproximada; a dimensão k; o 
índice I e profundidade P de uma célula C; um parâmetro lim; e a profundidade 
máxima Pmax· O algoritmo divide a célula C e suas descendentes até que o 
seguinte critério de divisão não seja mais satisfeito. Chamamos de canto inferior 
o ponto r de C mais próximo da origem e de canto superior o ponto s de C mais 
distante da origem. A face inferior de C na direção i é o subconjunto dos pontos 
da face F( C) com coordenada r[i] no eixo i (com dimensão k -1) e a face superior 
de C na direção i é a face análoga. O critério de divisão consiste em verificar se a 
diferença máxima max_ var entre o valor de u no ponto central de C (linha 5) e as 
interpolações dos valores de u nos pontos centrais das faces inferiores e superiores 
em cada direção (linhas 6 a 19) é maior do que o parãmetro lim, respeitando o 
limite de profundidade Pmax (linha 20). 

O tempo de execução de Refina_Grade é obviamente proporcional ao tamanho 
da árvore construída, que é proporcional ao número de células folha da mesma. 
No pior caso, este algoritmo retoma uma grade G uniforme, onde todas as células 
folha têm profundidade Pmax, com 2Pmox células folha, 2 x 2Pmox - 1 células no 
total (seção 3.6.4), com tempo de execução da ordem de 8(2Pm""). 



4.5. Aproximações com refinamento da grade 

algoritmo 4.5.1 Refina_Grade(u, k, I, P, lim, Pmax) 

1: C +- célula de índice I; 
2: ctr +- centro de (C); 
3: r +- canto inferior de (C); 
4: s +-canto superior de (C); 
5: max_var +-O; vaLctr +- u(ctr); 
6: for i : 1 -+ k do 
7: for j : 1 -+ k do 
8: if (j # i) then 
9 p'[j] +- ctr[j]; p"[j] +- ctr[j]; 

10: else 
11: p'[i] +- r[i]; p"[i] +- s[i]; 
12: end if 
13: end for 
14: vaLest +- + u(p"))/2; 
15: 5 +- lvaLctr- vaLestl: 
16: if (o &gt; max_ var) then 
17: max_var +- 5; 
18: end if 
19: end for 
20: if (max_var &gt; lim) and (P &amp;lt;Pmax) then 
21: D +- Refina_Grade( u, k, 21, P + 1, lim, Pmax); 
22: E+- Refina_ Grade( u, k, 21 + 1, P + 1, lim, Pmax); 
23: devolva uma árvore G com sub-árvores D e E; 
24: else 
25: devolva uma árvore G com uma única célula folha I; 
26: end if 

4.5.1 Exemplos usando grades refinadas 

43 

Avaliamos a estratégia de refinamento local executando o algoritmo Refina_Grade 
(4.5.1) sobre a função gauss mostrada na tabela 4.2. Desta forma, encontramos 
uma base Bmin irregular de tendas com profundidade máxima 10, que utilizamos 
para encontrar uma nova aproximação u' para a função gauss, também aplicando 
a técnica de mínimos quadrados. 

Na figura 4.6 mostramos em curvas de nível o resultado desta aproximação, 
juntamente com as funções u' obtidas através das bases Bmin regulares de níveis 
8 e 10, para fins de comparação. 



4.5. Aproximações com refinamento da grade 

u = gauss 

nível 8 u- u* 

u - u* 

nível 10 u - u* 
--'- ' _,_ ' ,_,,,, 

' 

- -

,_ 

-- llll '- Li:::_;_ 
' ----

'---

Figura 4.6: Função gauss e aproximações nas bases Bmin regulares de 
níveis 8, 10 e em uma base Bmin irregular de nível máximo 10, com 
51 =O, 08 e 52 = 1, 2. Os resíduos u- u* possuem o1 =O, 008 e 
ó2 =o, 12. 

--

-



4.5. Aproximações com refinamento da grade 45 

As distâncias !I u - u' jj e a dimensão de cada base são dadas pela tabela 4.4 
abaixo: 

I nível 1 6 i 8 i máximo 10 lO 
961 dimensão I 49 I 225 ' 389 

I Jju- u'IJ i 0,01386992 [ 0,00297978 O 00069021 0,00068360 i 

Tabela 4.4: Dimensões das bases e distâncias Jlu- u'JI das 
aproximações. 

A tabela 4.4 e a figura 4.6 indicam que com o refinamento local obtivemos 
uma aproximação da função gauss quase tão boa quanto a aproximação realizada 
através da base regular mais fina. Além disso, a base irregular possui dimensão 
próxima à dimensão da base regular de nível 8, com bem menos tendas do que a 
base regular de nível 10. Isto confirma as vantagens do refinamento local neste 
tipo de aproximação e a eficácia do algoritmo Refina_ Grade. 



4.5. Aproximações com refinamento da grade 46 



Capítulo 5 

Solução de equações diferenciais 
parciais lineares 

Neste capítulo mostramos corno resolver equações diferenciais parciais lineares 
pelo método de Galerkin, descrito num contexto geral. 

5.1 O método dos resíduos ponderados 

Consideremos urna equação diferencial geral, 

L:(u)(x) =O xES1 (5.1) 

onde ,C é um operador diferencial (possivelmente não linear), e u ( x) é a função 
que queremos determinar, definida sobre um domínio S1 de dimensão k. Uma 
vez que em geral não existe uma expressão analítica para u ( x), buscamos uma 
aproximação u'(x) dentro de um espaço de funções S' com dimensão finita n- po-
linômios, séries trigonométricas, etc. A função u'(x) é portanto uma combinação 
linear das funções de uma base qualquer 'P = (&lt;p 0 , ..• , 'Pn-r) de S': 

n-1 

u*(x) =L ai'PJ(x) 
j=O 

Desta forma, para obtermos u'(x) ce u(x), basta encontrarmos os coeficientes 
a 1, a2, ... , an mais adequados. 

Idealmente, deveríamos procurar os coeficientes que minimizam a diferença 
iiu(x)- u'(x)ll entre a solução aproximada e a solução exata. Entretanto, isto 

47 



5.2. O método de Galerkin 48 

não é praticável em geraL No método dos resíduos ponderados, escolhemos os 
coeficientes que minimizam o lado esquerdo da equação diferencial (5.1). Embora 
não seja possível exigir que C(u')(x) seja zero para todo x, podemos exigir que 
ele satisfaça n equações integrais da forma 

C(u*)(x)wi(x)dx =O i= O, ... , n- l 

onde cada wi é uma função-peso arbitrária e dx = dxk-l ... dx 0 . 

5.2 O método de Galerkin 

No método de Galerkin, as funções de ponderação wi são as próprias funções 'Pi 
da base de aproximação. Portanto, as equações ficam 

C(u*) ·i= o) .. •jn- 1 (5.2) 

que podem ser escritas como 

(C( u'), 'Pi) = O i= O, ... , n- 1 

Ou seja, no método de Galerkin procuramos tornar o lado esquerdo de (5.1) 
ortogonal às funções da base. Substituindo u'(x) por I:;j;;;~ aj'{Jj(x), podemos 
escrever a equação (5.2) como r;(a) =O, onde a é o vetor (a 1 , ... , an) e 

n-1 

ri( a)= 1 cri&gt;j'fJj)(x)'Pi(x)dx 
n J=O 

i= O, ... , n- 1 (5.3) 

5.3 Equações lineares 

Note que se C tem a forma C(u) = A(u)+g(x), onde A é um operador diferencial 
linear, esta expressão pode ser reescrita na forma 

ri(a) = 1 (A(I: aJ'PJ)(x) + g(x)) 'Pi(x)dx = i= O, ... , n- 1 (5.4) 
n ;=O 

n-l 
"L aj 1 A('PJ)(x)'Pi(x)dx + 1 g(x)'Pi(x)dx i= O, ... , n- 1 (5.5) 
j=O n n 

Portanto, as equações ri (a) = O formam um sistema também linear de n equações, 
nas variáveis a 1 , ... , an, que pode ser resolvido diretamente. Neste caso, o método 
de Galerkin geralmente é bastante eficaz [Joh87]. 



5.3. Equações lineares 

5.3.1 Reduzindo a ordem das derivadas 

Quando a equação (3.2) possui alguma integral na forma 

r (v· W)pdx 
lr.l 

49 

(5.6) 

onde W é uma fórmula vetorial envolvendo derivadas e 'Pé uma função da base, po-
demos reduzir a ordem das derivadas utilizando o teorema da divergência [Lei94]. 
Este teorema afirma que 

v. (Wp) = w. (vp) +(v. W)p (5.7) 

portanto 
(v. W)p v. (Wp)- w. (vp) 

r (v. W)pdx = r v. (W p)dx- r W · (vp)dx 
Jn Jn ln 

(3.8) 

Pelo teorema de Green [Lei94], o primeiro termo no lado direito da fórmula (5.8) 
pode ser reescrito como 

rv.(Wp)dx= r (WiD)·ads 
lo. lao. 

onde ()Q representa a fronteira da região Q, a é o vetor normal à fronteira num 
determinado ponto, e ds é um elemento infinitésimo dessa fronteira. Logo, a 
fórmula (5.8) fica 

r (v· W)pdx = r (Wp) · ads- r W · (v\D)dx 
Jn lan Jn 

(5.9) 

No nosso caso, Q é a célula raíz de uma grade diádica e cp é uma tenda, que é zero 
na fronteira ()Q da mesma. Portanto a expressão (5.6) reduz-se a 

r iD(V · W)dx =- r (Vp) · !Vdx 
ln Jn 

(5.10) 



5.3. Equaç5es lineares 50 

5.3.2 A equação de Helmholtz 

Como exernpío consideremos a equação de Helmholtz 

(5.11) 

é o operador lapladano, b é urna constante e f é urna função de 11 e de 
x. Note que, quando f não depende da solução 11, a equação (5.11) é linear. A 
equação de Helmholtz é muito usada em geodência, meteorologia, etc. [Gorn99, 
Vve93] 

Substituindo u pela aproximação u', e aplicando o método de Galerkin (equação 
(5.2)), obtemos 

('\72 u' + bu')(x):p,(x)dx = f(u* x)cpi(x)dx i= O, .. , n- 1 (5.12) 

Para simplificar, omitiremos novamente o argumento nas integrais que se-
guem. Escrevendo u* como a. combinação linear I:;,:~ airpJ e desenvolvendo o 
lado esquerdo da equação (5.12), obtemos 

n-l n-1 

L a, 1 ('\l 2 cp,)tprdx + b L a, 1 'f'jridx 
J=O n J=O n 

(5.13) 

Reduzindo a ordem das derivadas, conforme a seção 5.3.1, decompomos o operador 
laplaciano na expresão (5.13) em termos de gradientes, na forma 

n-1 

L aj 1 ('17 if'j) · ('V 'Pr) + b( if!j'Pr)dx 
j=O Q 

de maneira que obtemos o sistema 

i= O, ... , n- 1 



5.3. Equações lineares 51 

Em forma matricial, o sistema é Ea g, onde a é o vetor (coluna) dos coeficientes 
deu~, E é a matriz n x n tal que 

(vcc 1 ·(V c;)'-'- b,1 cJcc ldx , T)J , Z I ,rJrl; 

e g é o vetor (coluna) tal que g1 = fcpidx. 

o produto escalar (v r', v r") dos gradientes de duas tendas, assim como o produto 
escalar entre elas (seção 4.2), também pode ser decomposto na soma de integrais 

sobre as células da tenda de maior profundidade contidas no domínio da tenda de 

menor profundidade. Ou seja, 

(5.14) 

onde Cj é uma célula do suporte D' da tenda r', o qual supomos ser menor do 
que o suporte D" da tenda r", e Cj E (D' n D"). 

Desta forma, usamos a mesma técnica da seção ( 4.2) para calcularmos (VT', v r"). 
A partir da definição ( 3.1) de uma tenda, podemos escrever os gradientes V r' e 
v r" como dois vetores de k elementos tais que 

e 

k-l 

(v r'),= (2ifkQ;) r(2i/kQ;xi- o;) I1 A(2iikQjx1 - oj) 
j=O,j:f;i 

k-1 

(5.15) 

(VT")i = (2ifkrJ;a,) f(ai(2ifkrJ;xi- o;)+ Pi) I1 A(aj(2jfkQjxj- ój) + PJ) 
j=O,j:f:-i 

onde r é a derivada da função A (figura 5.1), definida por 

{ 

-1 

f(x) = O 
+1 

se0:&lt;;x:S:1 

se lxi &gt; 1 
se -l:S:x&lt;O 

(5.16) 

(5. 17) 



5.3. Equações lineares 52 

1,0 1,0 

0,0~0,0 0,0 0,0 
( -1) (1) (·1) (1) 

·1,0 

Figura 5.1: Funções A (esquerda) e r (direita). 
O produto escalar (vr', vr"), restrito a C', é dado por 

xf xf k-l k-1 1 o ... r k-1 I:&gt;i TI i\(2jfkQjx;- oj)A(ai(2jfkQjx; oj) + ,Bi)dxk-1 ... dxo 
xg "xk-1 i=D j=O,j:P,i 

(5.18) 

tal que 

Jl.i = f(2'1•Q;xi- 6,) (2ifkQ;) r(ai(2ifkQ;x,- ói) + Pi) (2iikQ;a;) 

onde os valores de xf, x{, a 1 e (31 são os mesmos da seção 4.2, usados na equação 
(4.8). Desenvolvendo a equação (5.18), obtemos 

(5.19) 

Separando as integrais, e observando que p 1 é constante dentro da célula C', 

~ Jl.i (E{ ldxi) fi (EJ A(zilkQjx;- oj)A(ai(2jfkQjx,- oj) + Pi)dx,) 
z=O x, J=Ü,Jr~ i 

(5.20) 

Considerando que fx~{ ldx1 = x{- xf = (211•Q;J- 1 , e realizando as mudanças de 
variáveis ( 4.10), obte'mos 

k-1 k-1 ~ 

I&gt;i(2ifkQ;)-l TI (2JikQj)-l L' A(uJ)i\(aiUJ + (J,)dui 
i=O j=O,j:;ii uj 

(5.21) 

l k-1 k-1 uf_ 

k 1 . I&gt;i TI 1 'A(u,)i\(aiu; + Pi)du1 (5.22) 
nj=O (2JfkQj) i=O j=O,J?'i uj 

f 

As integrais J:J A(uJ)A(a(UJ + (31)du1 podem ser calculadas através das fórmulas 
J 

(4.11) a (4.14). 



5.4. Exemplo 53 

5.4 Exemplo 

Para testar numericamente esta 
equação de Helmholtz: 

resolvemos especificamente a seguinte 

+O, 5u = -911 2 +O, 5(sin(rrx) sin(2v'21ry)) 

cuja solução exata é a função 

u = sin( 1rx) sin(2Y21ry) 

(5.23) 

(5.24) 

Usamos 4 bases Bmin de aproximação, extraídas das grades diádicas uniformes de 
profundidades 6, 8, 10, e de uma grade irregular de profundidade 10. Construímos 
a grade executando o algoritmo 4.5.1 (Refina_Grade) sobre a função 
(5.24), representada em curvas de nível na figura 5.2. As soluções aproximadas e 
o erro llu- u*ll de cada teste são mostrados na figura 5.3. 

Figura 5.2: Solução exata da equação (5.23) de Helmholtz, com ó1 = O, 1 
e Ó2 1,1. 



5.4. Exemplo 

nível 6 u - u* 

nível 8 u - u* 

nível máximo 10 u - u* 

nível 10 u - u* 

Figura 5.3: Solução da equação de Helmholtz usando bases minimais 
definidas sobre grades regulares de níveis 6, 8, 10 e uma grade irregular 
de profundidade máxima 10, com&amp;lt;h = O, 1 e 52 = 1, 1. Os resíduos 
u - u* possuem 81 = O, 006 e 52 = O, 07. 

54 



5.4. Exemplo 55 

Na tabela 5.1 a seguir, estão as distâncias !lu u'll, as dimensões das bases 
utilizadas e os valores dos diâmetros À das menores células de cada grade. 

I nível 6 8 I máximo 10 10 
I À ' 0,1531 0,0765 0,0383 I 0.0383 
j dimensão I 49 i 225 I 439 · 961 , 
I llu- u"ll I 0,02192191 ! 0,00550957 I 0,00331064 I 0,00137926 1 

Tabela 5.1: Dimensões das bases e distâncias llu- u'll das soluções 
aproximadas de uma equação de Helmholtz. 

Assim como nos exemplos anteriores, os erros de aproximação são quase pro-
porcionais a À 2 nas aproximações pelas bases regulares de níveis 6, 8 e 10 (com 
proporções de aproximadamente 16: 4 : 1). Utilizando a base adaptativa, redu-
zimos a dimensão do espaço de aproximação para menos da metade da dimensão 
da base regular de nível lO (dimensão 439 &amp;lt;961/2), diminuindo portanto o custo 
computacionaL O erro relativo a esta base adaptativa, contudo, foi maior do que 
o dobro do erro relativo à mesma base regular para o caso estudado. 



5.4. Exemplo 
56 



Capítulo 6 

Solução de equações diferenciais 
lineares e dependentes do tempo 

Estenderemos agora a discussão do capítulo anterior para abordarmos um caso 
particular de equação diferencial parcial, com a forma 

L(u)(x, t) =O xEfl (6.1) 

onde L é novamente um operador diferencial, x é um ponto do domínio fl, com 
dimensão k, e u(x, t) é a função que queremos encontrar, variável no espaço (x) e 
no tempo (t). Poderíamos simplesmente usar o método de Galerkin mostrado na 
seção 5.2 e resolver a equação (6.1) tratando o tempo te as outras x; dimensões da 
mesma forma. Entretanto, para utilizarmos tendas como base de aproximação, 
teríamos que construir urna grade diádica G' com dimensão k + 1, na qual os 
refinamentos no tempo estariam atrelados a refinamentos no espaço e vice-versa, o 
que pode ser altamente indesejável considerando que estas grandezas não possuem 
urna relação direta. 

Nestas situações, é comumente utilizada uma solução alternativa em que o 
método de Galerkin é aplicado apenas nas dimensões espaciais (x), e o método de 
integração de Euler [PFTV86] é usado na direção temporaL Mais precisamente, 
para cada instante t, usamos o método de Galerkin para calcular a derivada tem-
poral ~;. Calculamos então a função u em um instante posterior t + b.t como 

( 
&amp;amp; ) (t) 

u&lt;t+~t) +- u&lt;') + ;: x b.t (6.2) 

Na verdade, trabalhamos com uma aproximação u• deu, u• = 2::7:o' a,cp, onde as 

57 



6.1 A difusão do calor 58 

funções 'Pi não variam com o tempo t. Portanto precisamos calcular coeficientes 
b b . ou b - c o,.-., n-1 ta1s que Ot = zt.Pii e entao ,_azer 

X Ót (6.3) 

6.1 A difusão calor 

Para avaliar os espaços de splines diádicos E1 [G] neste tipo de aplicação, realiza-
mos testes com a equação de difusão do calor em meio isotrópico. O fenômeno 
da transferência de calor é amplamente citado no estudo de equações diferenciais 
parciais porque serve de modelo para outros fenômenos de difusão [Men 77, Twi84, 
Vic81]. A difusão do calor em meio isotrópico é descrita pela seguinte equação: 

onde T(x, t) é a temperatura em um ponto x = (x 0, ... , Xk-:) de um domínio \1 
k-dimensional, no instante t e K ( x) é a função de condutividade térmica em x. 
Esta expressão indica que quando há uma distribuição de temperatura irregular 
em um corpo ou superfície, então ocorre transferência de calor dos pontos de 
maior temperatura para os pontos de menor temperatura, até que o corpo alcance 
temperatura constante. 

Esta equação é linear na solução T(x, t). Se o meio for homogêneo- isto é, a 
função K(x) é constante em [l-e a distribuição do calor no instante t =O for um 
impulso de Dirac [Bra78] centrado no ponto x 0 , então a solução analítica [Sew88] 
da equação (6.4) é 

e h 
T(x) = 4r.Kt' 

h= _I:(x; -xf)2 
4Kt 

Esta função é uma gaussiana simétrica com centro em ( xg, ... , x%_ 1). 

(6.5) 

Na solução numérica, começamos aplicando a condição de Galerkin (seção 5.2) 
à equação (6.4) apenas no domínio espacial 11, obtendo 

i= O, .. . ,n- 1 

ou seja 

i= O, ... ,n- 1 (6.6) 



6.2. Exemplo de simulação 59 

onde dx = dxk-r ... dx 0 . Substituindo T por 2::;7;;:5 a1r.pj e ffJ; por E;;;:J bjr.pj, 
reescrevemos a equação (6.6) para cada i como 

n-1 n-l 

L bj 1 'P1'Pidx = K L a1 ('V 2 r.p1)r.pidx 
j;:;;;O n j:O 

(6 7) 

Reduzindo a ordem das derivadas no lado direito da equação (6.7) através dos 
teoremas de Green e da divergência (seção 5.3.1), obtemos 

n-1 

([)·wdx = -K"' a· f(vw 1. ('V0)dx 
, 1 , z L 1 Jr: r]J , z 

J=O n 
(6.8) 

ou seja, a equação (6.6) corresponde a um sistema com representação matricial 
Eb = c, no qual E é a matriz n x n com Eij = (rpi, r.p1), e c é o vetor (coluna) 
tal que e; = K I:;j;;:~ aj (Yrpi, vrp,). Supondo que os coeficientes aj em um dado 
instant.e sejam conhecidos, resolvendo o sistema encontramos os coeficientes b; 
nes.te mesmo instante. Com estes valores, calculamos os coeficientes a(t+At) em 
função dos coeficientes a(t) através da fórmula (6.3) da integração de Euler. 

6.2 Exemplo de simulação 

Nos testes numéricos, simulamos o processo descrito pela equação (6.4) no inter-
valo de t 0 = O, 0004s a tf = O, 006s, com f:o.t = 0.000007s, usando como vetor 
inicial a os coeficientes da aproximação por mínimos quadrados na base r.p Bmin 
(seção 4.1) da solução exata (6.5), para o instante inicial (t = t0 ). Compara-
mos o resultado final da integração T'f(x) = T'(x, tf) com a aproximação Tf(x) 
da solução exata T(x, tf) (6.5) no instante final (t = tf). Desta forma, o erro 
IITf- T'fll reflete apenas os erros de integração no tempo, e não o erro (ine-
vitável) da aproximação da solução Tf no espaço E1 [G]. 

Empregamos as mesmas bases regulares usadas nos experimentos anteriores, 
com tendas de profundidades 6, 8 e 10- Utilizamos também uma base irregular, 
contendo tendas de profundidade máxima 10, sendo que todas as 4 bases citadas 
são minimais. A base irregular foi obtida através do algoritmo 4.5.1, Refina_ Grade, 
aplicado à solução final T(x, tf). 



6.2. Exemplo de simulação 60 

Nas figuras 6.1 a 6.4 exibimos 10 estágios de simulação para cada base, desde 
a temperatura no instante inicial (T'(x, t 0 )) até o resultado de ínt.egraç:ão 
(T•f). Na última linha de cada sequêncía mostramos também a solução (Tf) e o 
erro (Tf -r f). 



6.2. Exemplo de simulação 61 

t =O, 00045s, 51 = 14,5 t = O, 00049s, 51 = 13,8 

t =O, 0005ls, J, = 13,6 t =O, 00108s, J 1 = 8, O t =O, 00178s, J, = 4, 9 

t =O, 00248s, J, = 3, 4 t = O, 00318s, 51 = 2, 6 t =o, 004588, J, = 1, 8 

Figura 6.1: Simulação da difusão do calor com uma base regular de 
profundidade 6. A última linha mostra o resultado final da integração 
(T*f), a aproximação por mínimos quadrados da solução exata 
correspondente (Tf), e a diferença entre estas duas. Todas as imagens 
têm parâmetro li2 = 188, O. 



6.2. Exemplo de simulação 62 

t =O, 00040s, J, = 23, 5 t = O, 00045s, J 1 = 20, O t =O, 00049s, J1 = 18,1 

t =O, 00051s, J 1 = 17, 5 t =O, 00108s, J1 = 7, 5 t=0,00178s,J1 =4,4 

t =O, 00248s, 51 = 3, 2 t = O, 00318s, 51 = 2, 5 t =O, 00457s, ó1 = 1, 7 
- ----- ~- - - . ··•····· ...... ,., '.··· , .. , 

T 
..... 

... ' I 
..•. 

··~ 

, ... \• ,,f&amp;lt;~ 
. , .. 

. .L. L . I .. L ' ..•... L. 

(T*f), 51 = 1,3 solução "exata" (Tf), 01 = 1, 3 erro (Tf - T*f), 51 = O, 1 

' i i i ... 

'... i (:i ',!;i; ( 
······i~·· 

i i \ \(0 

..... . ..... 

Figura 6.2: Simulação da difusão do calor com uma base regular de 
profundidade 8. A última linha mostra o resultado final da integração 
(T*f), a aproximação por mínimos quadrados da solução exata 
correspondente (Tf), e a diferença entre estas duas. Todas as imagens 
têm parâmetro ii2 = 188, O. 

i 
. 

'··· !·· ... 
f~ 

i· ..... 

.. 

i 



6.2. Exemplo de simulação 63 

t =O, 00040s, J, = 23, 5 t = O, 00045s, 81 = 18,3 t = O, 00049s, 51 = 16,5 

t =O, 00051s, /h = 16, O t = 0,00108s, 51 = 7,3 t = 0,00178s, J, = 4,5 

t = O. 00248s, o1 = 3, 2 
; ,_; . ;;:::.:. 

t = 0,00318s, 51 = 2,5 t = O, 00458s. o, = 1, 7 
• ;:c:• 

.. "' ; ;,;· • '!; ••••. , :tr: 

=·-· 
; . 

-· ··_ ; . ::..é .. 

;c:; ···=· 

... ; . 

(T''), o1 = 1, 3 solução "exata" (Tf), 51 = 1, 3 erro (Ti- T'f). 81 =O, 1 

;:; ··:; - ·;; ;,:;; 

~f'~'. . :;';;-
i :•1• 
. -

.CTT ,· · .. ·.:.c•: ·"?~ '/, ,,,. '; l'T'l 
'.:0···· . ; •:: 
~c; . ;:; :. ,. ''""':,:c: 

.. . •:::-. , . . ,-;·., : .. ,. .: ·l;1rl '' 
. 

Figura 6.3: Simulação da difusão do calor com uma base regular de 
profundidade 10. A última linha mostra o resultado final da integração 
(T'f), a aproximação por mínimos quadrados da solução exata 
correspondente (Tf), e a diferença entre estas duas. Todas as imagens 
têm parâmetro Oz = 188, O. 

~~~·i . ;. ~ti 
.. ,,, 

! ;· ~ ···! .;;; 
;:•;;;.t. ; .• ;· 



6.2. Exemplo de simulação 64 

t =O, 00040s, J, = 23, 5 t =O, 00045s, o1 = 18,3 t =O, 00049s, J, = 16,5 
-~- --· -' ------

t =O, 0005ls, 51 = 16, O t =O, 00108s, J, = 7, 3 t = O, 00178s, J, = 4, 5 

t = 0,00248s, 51 =3,2 t = O, 00318s, li1 = 2, 5 t = 0,00458s, J, = 1, 7 

Figura 6.4: Simulação da difusão do calor com uma base irregular de 
profundidade máxima 10. A última linha mostra o resultado final da 
integração (T*f), a aproximação por mínimos quadrados da solução 
exata correspondente (Tf), e a diferença entre estas duas. Todas as 
imagens têm parâmetro 62 = 188, O. 



6.2. Exemplo de simulação 65 

Na tabela 6.1 a seguir mostramos as distâncias IIT'- T''ll, as dimensões das 
bases e o diâmetro À das menores células de cada grade. 

Tabela 6.1: Dimensões das bases e distâncias - T'f li entre os 
resultados finais de quatro simulações de um processo de difusão. 

De acordo com as distâncias !lu- u'll (tabela 6.1), o ganho de precisão devido 
ao refinamento das grades na integração no tempo foi um pouco menor do que 
o ganho de precisão obtido com este refinamento nos exemplos de integração 
espacial (seção 5.4). na simulação realizada com a grade de 
profundidade máxima 10, obtivemos um resultado tão preciso quanto o resultado 
obtido por intermédio da grade regular mais fina, de nível lO, com uma quantidade 
significativamente menor de elementos na base. Neste sentido a integração no 
tempo com refinamento local mostrou-se bastante vantajosa. 



6.2. Exemplo de simulação 66 



Capítulo 7 

As equações de escoamento 

A partir deste capítulo nos voltamos especificamente para o problema do escoa-
mento bifásico óleo/água em meios porosos. Começamos revisando o sistema de 
equações diferenciais não linear e dependente do tempo que descreve este processo 
físico [AS79, desde uma abordagem geral até nosso caso particular, que 
depois será discretizado e modelado por funções tenda. 

7.1 Modelagem matemática 

O escoamento de petróleo em meios porosos pode ser descrito por um conjunto 
de equações diferenciais parciais não lineares. As equações refletem as leis de 
conservação de massa, viscosidade e pressão. Para obter as equações consideradas, 
tomamos como base um elemento infinitesimal de volume com dimensão dx, dy e 
dz, contendo rocha e fluidos, como ilustrado na figura 7.L 

Figura 7.1: Elemento infinitesimal dx x dy x dz 

67 



7.1. Modelagem matemática 68 

A lei da conservação de massa diz que, num determinado intervalo de tempo 
dt, 

onde: 

m, - m, é a diferença entre a massa que entra e a massa que sai através de todas 
as faces do elemento; 

mp é a massa que entra ou saí do elemento através dos poços produtores ou 
injetores; 

ma é o incremento na massa de fluido presente no volume. 

Definimos a velocidade de escoamento Vx, v, da seguinte forma: Vx é o 
volume fluido dV que atravessa um elemento infinitesimal de área d"4 perpen-
dicular ao eixo x, num intervalo de tempo dt, dividido por estes dois, 

dVx 
Vx = ---

dtdAx 

e igualmente para os demais eixos 

dv.·· 
V 

- y 
"-dtdA' y 

e 
dVz 

Vz = dtdA, 

O vetor v= (vx, vy, v,) é a velocidade do escoamento. 
Portanto, se considerarmos apenas as faces perpendiculares ao eixo x, a parcela 

correspondente da diferença m, - m, é dada por 

onde p é a densidade. Se considerarmos o fluxo nas direções x, y e z, temos 

Em forma vetorial, usando o operador V = ( ;x, ;. , /iz) podemos escrever 
m,- m, = -v.(pv)dxdydzdt 

Por outro lado, a massa dos poços pode ser escrita como 

mP = pQBdt 



Tl. Modelagem matemática 69 

onde Q é a vazão (volume por unidade de tempo) medida na superfície, e B é o 
fator volume de formação, que representa a relação entre o volume do íluido no 
reservatório e seu volume em condições padrões. Finalmente, a variação na massa 
acumulada é dada por 

ma= :t (,Pp)dxdydzdt 

onde q, é a porosidade da rocha. A porosidade 6 indica a fração do que 
não está ocupada pela rocha, mas pelo íluido. 

Assim, a equação (7.1) assume a forma 

-v.(pv)dxdydzdt = :t (óp)dxdydzdt- pQBdt (7.2) 

7.1 A lei de Darcy 

A velocidade Vx do escoamento, por sua vez, é dada pela fórmula empírica conhe-
cida como Lei de Darcy. Para meios isotrópicos, 

Vz =- K (f}p- pgx) V =- K (iJp- pg) Vz =- K (~p- pgz) 
~ iJx y ~ oy y ~ dz 

onde K é uma propriedade do meio chamada permeabilidade, ~ é a viscosidade 
do fluido, e gx é a componente do vetor gravidade na direção do eixo x (que não 
é necessariamente zero, porque o eixo z não é necessariamente vertical). O fator 
~- pgx é denominado diferencial do potencial, e é a força que obriga as partículas 
do fluido a se moverem. Em forma vetorial 

K 
v=-- (vp- pg) 

~ 
(7.3) 

No caso de meios não isotrópicos, o fator K deve ser substituído por um tensor, 
representável por uma matriz 

[ 

kx kxy kxz l 
K = kyx ky kyz 

kxx kzy kz J 
Frequentemente as direções principais do tensor coincidem com os eixos de coor-
denadas. Nestes casos K tem a forma 

[ 

kx O O ] 
K = O ky O 

o o k, 
Chamamos K de tensor de permeabilidade absoluta. 



7.2. Escoamento bifásico óleojágua 70 

7.2 Escoamento bifásico óleo/ água 

Saturações relativas 

As leis de escoamento exigem algumas adaptações quando descrevem o fluxo de 
dois ou mais fluidos imiscíveis, chamados fases. Nesta situação, utilizamos o con-
ceito de saturação relativa, no qual o volume de escoamento é compartilhado entre 
estes fluidos. As saturações são expressas como frações do volume de poros, ou 
seja, do volume total menos o volume ocupado pelas rochas. Consequentemente, 
não podem assumir valores negativos nem superiores a 1, e sua soma é sempre L 
Considerando duas fases apenas, digamos óleo (o) e água (a), temos portanto a 
equação 

(7.4) 

onde So é a saturação de óleo e Sa é a saturação de água. 
Observa-se que o escoamento de uma fase é dificultado pelas outras, mais do 

que seria causado apenas pela redução do volume de poros. Ou seja, cada fase 
atrapalha o escoamento das outras de maneira que o fluxo multifásico total é 
sempre mais lento do que o mesmo fluxo com apenas uma de suas fases. Portanto 
nas equações a permeabilidade K deve ser multiplicada por um fator k1, chamado 
permeabilidade relativa, que expressa essa redução. O valor de k1 é próprio de cada 
fase. A soma das permeabilidades relativas é sempre menor ou igual a L Onde 
uma fase está sozinha ( S1 = 1) a permeabilidade relativa k1 será 1, mas cada k1 
pode ser maior que o S1 correspondente. 

7.2.2 Pressões capilares 

As pressões de cada fase também possuem diferenças, porque normalmente algu-
mas delas aderem às rochas mais facilmente e exercem uma força de compressão 
sobre as demais, que precisam compensá-la para manterem o equilíbrio_ Portanto 
em vez de uma única pressão p, devemos considerar uma pressão p1 diferente para 
cada fase l. 

Esta pressão adicional é chamada pressão capilar. Quando o meio possui 
apenas d nas fases, a fase m que adere mais facilmente à rocha é dita molhante 
(ou molhada) e a outra fase n é dita não molhante. Nesse caso a pressão de 
capilaridade é definida por 



7.2. Escoamento bifásico óleo/água 71 

onde Pcnm é uma função da saturação destas fases, Sn e Sm. Em um sistema 
contendo apenas água e óleo, normalmente a água é a fase molhante e o óleo é a 
fase não molhante, e portanto escrevemos a pressão de capilaridade Pwa do óleo 
sobre a água como 

.5) 

7.2 geral 

Levando em conta estas características, podemos re-escrever a relação (7.2) para 
uma fase l de um fluxo multifásico não miscível como 

- PtK-- -- - PtYx dydzdxdt + 8 [ kt (8p1 )] 
8x f11B1 8x 

(7.6) 

8 r b )l -
8 

lp1K -B· 
8 

- p1gy 1 dzdxdydt + 
y J.ll i y -

~ [p,K kB, - PtYz) l dxdydzdt = 
OZ Jll i j 

8 ( S1dJ) at PIE, dxdydzdt- p1Q1dt 

Escrevendo-a na forma de divergente, 

(7.7) 

onde q1 é a taxa de injeção (volumétrica), que representa o volume de fluido 
introduzido num dado volume, proveniente de fontes externas ao sistema (no caso, 
poços de injeção e extração), por unidade de tempo. Quanto q1 assume valores 
negativos, determina uma taxa de extração. A relação entre a vazão Q1 e a taxa 
de injeção q1 é expressa por 

Ql 
q1 = -;dx-d7y'-d,--z 

O termo k1 depende da saturação da fase l e os termos lll, B 1 e p1 dependem 
da pressão e temperatura da fase l, logo não podem ser retirados das derivadas da 
equação (7.7). Além disso, os termos K e&amp;lt;f.&gt; dependem da posição no reservatório. 
Estas dependências constituem propriedades de estado dos fluidos, da rocha ou 
propriedades rocha-fluido, e são responsáveis pela não linearidade acentuada do 
sistema final. 



7.2. Escoamento bifásico óleojágua 72 



Capítulo 8 

Discretização das equações 

Este capítulo mostra a discretização matemática das equações de escoamento vi-
sando a aplicação do método de Galerkin com as bases de funções tenda. Além 
disso, explica em detalhes a integração no tempo e no espaço destas equações, 
utilizando tanto grades diádicas estáticas quanto dinâmicas. 

8.1 Discretização das equações de escoamento 

Neste trabalho utilizamos o modelo físico conhecido na indústria como Black-Oil, 
restrito a duas fases apenas- água (l 'a') e óleo (l = 'o'), com pressão de ca-
pilaridade nula (p0 = p0 ). Neste modelo, as duas fases líquidas são consideradas 
imiscíveis. Uma vez que as variações de pressão de ponto a ponto são pequenas 
comparadas com a pressão média no reservatório, é conveniente trabalhar ape-
nas com a diferença p(x, y, z, t) p0 (x, y, z, t)- p = Pa(x, y, z, t)- p, onde pé 
uma pressão típica constante no espaço e no tempo, próxima da pressão média. 
Podemos portanto resolver a equação (7.7) encontrando as funções 

p(x, y, z, t) e Sz(x, y, z, t) 

que a satisfazem, dadas as demais funções e parâmetros (p, k, Jl, B,&amp;lt;f;, q, etc). 

8.1.1 Discretização das variáveis 

As funções p e 5 1 serão aproximadas por combinações lineares 

n-1 n-l 

p'(x, y, z, t) =L a1(t)cpJ(x, y, z) e Sz'(x, y, z, t) = L(b1) 1(t)cpJ(x, y, z) 
j=O j=O 

73 



8.1. Discretízação das equações de escoamento 74 

onde cada cp;(x, y, z) é uma função de base do espaço de aproximação, que depende 
apenas da posição (x, y, z), e os coeficientes aj(t) e (b1);(t) variam com o tempo. 
A solução será calculada apenas para valores discretos de tempo t. 

8.1 Critério de 

A discretização das equações de escoamento (7.7) é feita pelo método de Galerkin 
(seção 5.2), aplicado às coordenadas espaciais para um instante t fixo, como no 
capítulo 6. Lembramos que este método exige que o resíduo das equações diferen-
cias (7.7) seja ortogonal às funções da base. Obtemos então para cada fase l as 
equações 

l ( ~ ( s·.) ) 7 o 1 cp . -v· n,-- p,-- _,_ p,q, \Didv =o . " &amp;amp;t B, 'o, ... ,n-1 
onde dV = dxdydz, o símbolo'-' indica o produto escalar no lll:.3 e ~V1 é o campo 
vetorial 

W 1 p1K kBz ("Vp' pzg) 
f.Ll I 

Ou seja, 

' o, ... ,n-1 (8:1) 

Observe que, de modo geral, o lado esquerdo da equação (8.1) mede o desloca-
mento dos fluidos, e o lado direito mede a variação local das saturações com o 
tempo. 

8.1.3 Termo do fluxo 

Desenvolveremos primeiro o lado esquerdo da igualdade ( 8.1) acima. Aplicando 
a redução de derivadas descrita na seção 5.3.1, reescrevemos esta fórmula como 

Expandindo o termo W 1, obtemos 

-i ("Vcp,) · W,dV 



8.2. Forma matricial das equações 75 

(8.2) 

Expandindo agora o lado direito da igualdade (8.1), obtemos 

(8.3) 

Para simplificar estas equações, vamos supor que as variações de pressão dentro 
do reservatório têm efeito desprezível sobre a densidade dos fluidos e sobre a 
porosidade da rocha. Portanto podemos considerar 

~ (p'rjJ) =o 
at B, (8.4) 

Como as funções 'P não dependem do tempo t, a fórmula (8.3) fica 

(8.5) 

8.2 Forma matricial das equações 

A fórmula (8.2) do lado esquerdo da equação (8.1), na forma matricial, pode ser 
escrita como E1a + fz, onde a é o vetor (coluna) dos coeficientes da pressão p; E1 
é a matriz n x n definida por 

i,j =O, ... , n 1 (8.6) 



8.8. Integração no tempo 76 

e j 1 é o vetor (coluna) definido por 

(fi),= r (vcp,) · (p,K kB, )(p,g)d\7 
Jo fti 1 

i= O,. ,n -1 (8.7) 

A fórmula (8.5) do lado direito, por sua vez, torna-se G,b; + onde b; é o vetor 
(coluna) das derivadas dos coeficientes (b1)J da saturação S1, (b;)i = e(~),; G1 é a 
matriz n x n definida por 

e h1 é o vetor (coluna) definido por 

(h,),= - r p,q,cp,d\7 ), 

i,j=O, ... ,n-1 

i= O, ... , n- 1 

As equações (8.1), portanto, podem ser escritas como 

+ !t = +h, 

(8.8) 

(8.9) 

(8.10) 

Colocaremos agora a saturação do óleo em função da saturação da água, usando 
a identidade So + Sa = L Sejam c, ... , Cn tais que L CJ'PJ (x) = l para todo x em 
rt De So = l- Sa, concluímos que (bo)j = Cj- (ba)j e portanto (b~); = -(b~);. 
Podemos então escrever as equações de fluxo destas duas fases como o sistema 
final 

(8.11) 

Este sistema possui 2n equações, sendo n equações para cada fase, e 2n variáveis, 
que são os vetores a e b~. 

8.3 Integração no tempo 

A simulação do escoamento de petróleo consiste em resolver o sistema (8.11) 
para cada instante t fixo. Com isso obtemos os coeficientes das pressões aj e as 
derivadas temporais (b~)j da saturação da água. Usamos então as derivadas (b~)j 
para calcular o estado do reservatório no instante seguinte, depois de um certo 
intervalo de tempo L':.t, como no capítulo 6. Mais precisamente, as saturações para 
o próximo instante t são recalculadas pelo método de integração de Euler, 

j = 0, . .. ,n -1 (8.12) 

Finalmente avançamos para o próximo instante ( t +- t+L':.t) e repetimos o processo 
todo. 



8.3. Integração no tempo 77 

8.3.1 Dados da simulação 

No início do processo (t = t 0 ) fornecemos ao simulador a pressão tipica j5 (cons-
tante ao longo da simulação) e a distribuição iniciai da saturação da água Sa. 
descrita pelo vetor de coeficientes b~o). Supomos também que as taxas de injeção 
(as distribuições q1) são conhecidas em cada instante t. A evolução do estado do re-
servatório ocorre devido à vazão dos poços (q1 f 0), gerando diferenças de pressão 
que por sua vez causam movimento do fluido, ou seja, variação nas saturações ao 
longo do tempo. 

8.3.2 Cálculo das pressões e fluxos 

Note que o sistema (8.11) não é linear, pois tanto as matrizes E1 e G1 quanto os 
vetores h, e f, dependem dos coeficientes a1 (eles dependem também dos coefici-
entes mas estes são conhecidos num dado instante Portanto a solução do 
sistema é determinada através do método iterativo de Newton [PFTV86]. Usamos 
como aproximações iniciais para os coeficientes da pressão os mesmos coeficientes 
do instante anterior: 

j =O, ...• n- 1 

A cada iteração do método de Newton, recalculamos as matrizes E1 e G1 e os 
vetores h1 e / 1 usando os valores mais recentes de a, e os valores de ba (que são 
fixos para cada t). Em seguida resolvemos o sistema (8.11) supondo que essas 
matrizes e vetores são independentes de a. 

Efetuamos várias destas iterações até o vetor a convergir. 
Note que a suposição de que os fluidos são incompressíveis (8.4) implica que a 

pressão Pl não tem 'memória', isto é, ela depende apenas dao saturações e taxas 
de injeção nos poços q1 no instante t, e não da pressão nos instantes anteriores. 

8.3.3 Cálculo das taxas de injeção 

As funções q1 deveriam ser zero em todo o reservatório, exceto nas vizinhanças 
imediatas dos poços. Na nossa formulação, entretanto, estas funções são apro-
ximadas por combinações q1 = L: e11 cpi de tendas da base. Também adotamos 



8.4. Adaptação dinâmica da grade 78 

sempre a base Bmin, colocando os poços sobre vértices completos da grade, de 
maneira que nas combinações cada poço é representado por uma única tenda 'Pi. 

A taxa de injeção qa normalmente é diferente de zero apenas na vizinhança dos 
poços onde ocorre injeção de água. Nestes pontos qa é positivo. Entretanto, q0 
pode assumir valores negativos em algum poço de extração se a saturação de água 
nesse ponto for positiva. A vazão q0 , por outro lado, em geral nunca é positiva 
porque não há injeção de óleo, e assume valores negativos somente nos poços de 
extração. 

Na prática são dadas apenas as vazões totais Q11 em cada poço, em função do 
tempo. Se a vazão da fase l no poço j é representada na taxa q, pelo termo eli'Pi, 
então devemos ter 

Q11 = h e1,&lt;p,dV 
Na verdade para poços de Qaj é dado e Q01 é sempre zero. Para 

poços extração, conhecemos apenas a soma Q1 = Qaj + Q 0 ; (vazão total de 
fluido bombeado). A proporção de água e óleo no fluido obtido depende de suas 
saturações e mobilidades relativas das duas fases. Portanto, recalculamos as vazões 
em cada poço de extração j a cada instante de tempo usando a seguinte relação: 

onde 

Qoj Qaj 

moj maj 

mlj = 1-'::!_&lt;p,dV 
n p,B, 

e 'Pi é a tenda que representa o poço j [MD90j. 

8.4 Adaptação dinâmica da grade 

O processo descrito na seção 8.3 supõe que a grade G é fixa durante toda a si-
mulação. Para realizar o processo iterativo de integração com uma grade variável, 
é necessário acrescentar alguns passos adicionais entre um instante e outro de 
simulação. 

Após calcularmos a saturação (ba)(t+"t) pela equação (8.12), e fazer t = t+L'l.t, 
procuramos uma nova grade diádica G', que seja mais adequada a representar o 
novo estado do reservatório. De posse de G', calculamos uma base B' para o espaço 
de splínes E1 [G'] correspondente, usando os algoritmos da seção 3.6 (Gera_Bmax 
ou Gera.J3min). 



8.4. .4daptação dinâmica da grade 79 

8.4.1 A grade inicial Gini 

Existem diversos critérios que podemos usar para escolher a nova grade G'. Em 
nossa abordagem; a grade G' é sempre um refinamento de uma grade inicial Gini· 

A grade Gini, por sua vez, é gerada no começo da simulação. Ela possui um 
refinamento máximo dado P max na vizinhança dos poços e na fronteira do reser-
va•tór·io, pois estas são regiões críticas que não variam com o tempo. O tamanho 
das células de G;ni aumenta gradualmente com a distância a estas regiões. Supo-
mos que na grade Gini as propriedades petrofísicas estão representadas com um 
grau suficiente de detalhamento, o que garante que elas serão também adequada-
mente representadas em qualquer refinamento G' da mesma. 

8.4.2 Escolha de uma nova grade 

Escolhemos a nova grade G' executando o algoritmo (4.5.1) sobre a 
saturação da água (S~ = E7~~(ba)j\Oj), com a profundidade máxima dada Pmax, 
em cada célula da grade fixa Gini· 

8.4.3 Mudança de base 

Cada vez que a grade G' muda, calculamos os coeficientes (ba)i da saturação da 
água S~(t+ê.tJ e aJ da pressão p*(t+t:.t) na nova base B' através de aproximações 
por mínimos quadrados (seção 4.1) destas funções. Em particular, quando a nova 
grade G' é um refinamento da grade anterior G (ou seja, nenhuma célula de G foi 
reagrupada em G') então estas aproximações são iguais às funções originais. 

No calculo das taxas de injeção q1 =E eli\Oi na nova base, temos que encontrar 
para cada poço j do reservatório o índice i da tenda :p; de B' cujo centro é esse 
poço. Vale notar que estas tendas sempre existem e têm o mesmo suporte, pois 
G' e G;ni têm profundidade igual a Pmax em volta de cada poço e portanto todos 
os poços são vértices completos de G;ni e G'. 

8.4.4 Estratégia adaptativa 

Com objetivo de manter a precisão dos dados, trabalhamos na verdade com duas 
malhas G' e G"- A malha grossa G' é obtida pelo algoritmo Refina_Grade como 
descrito na seção 8.4.2. A malha fina G" é um refinamento de G', onde cada 
uma de suas células folha é dividida em até k níveis adicionais, sem exceder a 
profundidade máxima Pmax· Este refinamento excedente da malha fina (supérfulo 



8. 5. Cálculo das matrizes e vetores do sistema 80 

em algumas regiões do reservatório) serve para manter a fidelidade do processo 
dinâmico. 

Na versão atual do nosso simulador, a grade grossa G' é usada durante um 
fixo de tempo Ao final desse intervalo, a grade fina G" é cons-

truída. A grade fina G" é usada durante um intervalo fixo de tempo !::,.t !in· Após 
o término de !::,.t f in, recalculamos a grade grossa G'. 

Uma abordagem mais correta seria efetuar a simulação com as duas grades 
G' e , e comparar os resultados, procurando manter o refinamento mínimo que 
produz uma resposta semelhante nas duas. 

8.5 Cálculo das matrizes e vetores do sistema 

Vamos detalhar agora o cálculo das matrizes 
(8.6) a (8.9). 

G; e dos vetores / 1 e h1 - equações 

Observe que as integrais que aparecem nas fórmulas das matrizes E1 e G1, 
embora estejam definidas em todo o domínio fl, podem ser calculadas apenas na 
interseção flij do suporte das tendas&amp;lt;p; e '{j, porque fora desta região o resultado 
da integração será sempre zero. O mesmo vale para as integrais presentes nos 
vetores ft e h~, que podem ser calculadas apenas no suporte fl, das tendas 'Pi· 

8.5.1 Decomposição em células 

Nos dois casos, a região de integração consiste de zero ou mais células inteiras do 
nível P = max{P(&lt;p;),P(&lt;pj)}. Podemos portanto decompor estas integrais em 
somatórias de integrais parciais, sobre cada uma das células do nível P, obtendo 

onde D;j é o conjunto de células do nível P que compõem fl,j, ou 

L f(r)&lt;p;(r)dr = I; 1 f(r)&lt;p;(r)dr 
n~ CEDi C 

onde D, é o conjunto de células do nível P que compõem fli· 



8.5. Cálculo das matrizes e vetores do sistema 81 

8.5.2 Determinação dos termos constantes 

Além disso, nas integrais vamos supor que as propriedades p, k, 11, o e o 
tensor K são praticamente constantes no interior de cada célula C pertencente 
aos conjunto Dij (região rti1) ou (região rli), respectivamente. Assin1: podemos 
fazer as seguintes simplificações 

tal que r é o ponto central de C, e 

p1(r)K(r)kr(r) 
11t{r)Br(r) 

1(\7· ·). ( K}5_!_)( )dV~ '\:"" p,(r)2K(r)kr(r) Jrv·c·. )dV , 'f!, Pr B Pl9 - L,. ( )B ( ) "'' g n f-tl 1 CED~ J.LI r l r c 
A permeabilidade K é portanto considerada um escalar, e não um tensor. 
cando o mesmo princípio à matriz G1: temos 

No caso do vetor hh substituindo a ta.xa q1 pela combinação linear L e1;'P;, po-
demos escrever 

Se tomarmos apenas a tenda 'P; cujo suporte possui interseção não nula com o 
suporte de cp1, então chegamos a 

Assim, é possível calcular as matrizes E1, G1 e os vetores f 1 e h1 integrando somente 
tendas e gradientes de tendas (sendo a aceleração da gravidade g invariável no 
domínio) e multiplicando os resultados pelos valores das propriedades tomados em 
pontos específicos do domínio de integração. Contudo, para um mesmo instante 
t, recalculamos estas matrizes e vetores a cada iteração na solução de (8.11), pois 
as propriedades p, 11 e B dependem das pressões e variam conforme as mudanças 
no vetor a. 



8.5. Cálculo das matrizes e vetores do sistema 82 



Capítulo 9 

O simulador Simóleo 

Descrevemos neste capítulo os módulos que compõem o simulador de escoamento 
de petróleo que desenvolvemos neste projeto, chamado Simóleo, e alguns experi-
mentos que realizamos para testá-lo. 

9.1 O Simóleo 

9.1.1 Funcionalidades 

As principais características do Simóleo são: 

• Modularidade: Oferece conjuntos independentes de bibliotecas de suporte 
para (1) construção de grades diádicas, (2) determinação das bases Bmax 
ou Bmin de splines, (3) aproximação usando bases de splines e (4) visua-
lização dos resultados. Cada uma destas bibliotecas pode ser substituída 
com relativamente pouco impacto; 

e Grades adaptativas: Implementa a discretização e integração das equações 
de escoamento (capítulo 8), com grade estática ou adaptativa; 

e Dimensão variável: O programa pode ser usado sobre domínios com L 2 ou 
3 dimensões. As bibliotecas de grades diádicas e determinação de bases de 
splines têm esta mesma flexibilidade; 

e Visualização gráfica off-line de resultados (no momento restrita a repre-
sentações em 1 ou 2 dimensões)_ 

83 



9.1. O Simóleo 84 

9.1.2 Estrutura 

O Simóleo consiste de um programa integrador propriamente dito, e vários pro-
gramas auxiliares para geração de grades, bases, etc. Suas bibliotecas e programas 
foram criados em linguagem C padrão sobre plataforma Unix. Conceitualmente, 
estes programas podem ser divididos e reagrupados num conjunto de módulos 
funcionais com interfaces relativamente restritas e abstratas. Estes módulos são: 

o SPL: geração e manipulação de grades diádicas, splines diádicos e respec-
tivas bases; 

" EQS: discretização e integração das equações de escoamento; 

o LIN: álgebra de matrizes esparsas e resolução de sistemas lineares; 

o VIS: visualização de grades e resultados. 

ou, graficamente: 

Dadooda 

! Simulação 

O módulo SPL 

i:L 
':I . ' 

SPl 

EQS 

! 

' 
UN 

VIS 
h_ 

' : ArquiVos de : i 

~VIsualização j ! 

Figura 9.1: Módulos do programa Simóleo. 

O módulo SPL é responsável pelo gerenciamento das grades e splines diádicos. 
Estes splines são formados por bases de tendas e combinações lineares destas 
bases. As grades diádicas são armazenadas como árvores binárias onde cada nó 
guarda um índice, dado por uma variável inteira. Cada tenda é representada pelo 
índice e profundidade de sua célnla superior, também inteiros. Uma base é um 



9.1. O Simóleo 85 

vetor destas estruturas. Um spline diádico genérico, por sua vez, é codificado como 
um vetor de coeficientes em ponto flutuante, referente a uma base especificada em 
separado. 

Os algoritmos Interpola (3.5.1 ), Gera_Bmax/Gera_Bmin (3.6.1) e Refina_Grade 
(4.5.1) fazem parte do módulo SPL. Além disso, os procedimentos oferecidos 
por este módulo também incluem a manipulação das grades (inserção, remoção, 
busca), os produtos escalares entre tendas (seção 4.2) e entre o gradiente de tendas 
(seção 

O módulo EQS 

Estão reunidas no módulo EQS as bibliotecas de discretização e integração (capítulo 
8) das equações de escoamento multifásico óleo/ água (capítulo 7). Estas bi-
bliotecas utilizam as estruturas definidas no módulo para representar os 
reservatórios e suas propriedades físicas. Cada reservatório é construído como 
uma grade diádica, refinada conforme a posição de seus poços. sua geometria e 
grau de detalhamento requerido. Suas propriedades mais importantes (saturações, 
pressões e taxas de fi uxo) são guardadas como combinações lineares de tendas, e as 
demais (permeabilidades, viscosidades, etc) são codificadas como procedimentos. 

Para realizar as integrações no espaço, os programas do módulo EQS montam 
sistemas lineares através do método iterativo de Newton que são resolvidos por . 
rotinas providas pelo módulo LIN. Todas as propriedades petrofísicas podem ser 
visualizadas por métodos fornecidos pelo módulo VIS. 

O módulo VIS 

O módulo de visualização VIS inclui rotinas para plotar qualquer função do sis-
tema. As imagens geradas por este módulo podem ser gráficos unidimensionais 
ou curvas de nível bidimensionais. Os gráficos unidimensionais servem para mos-
trar tanto funções de domínio com uma dimensão quanto cortes de funções k-
dimensionais entre dois pontos especificados. 

O módulo LIN 

O módulo LIN consiste de rotinas para resolução de sistemas lineares. Na im-
plementação atual, usamos apenas algoritmos simples baseados em eliminação de 
Gauss e fatoração de Cholesky [PFTV86]. 



9.2. Testes de simulação 86 

Vale observar que as matrizes de produtos escalares de elementos finitos são 
esparsas. Portanto, para a eficiência do simulador, é indispensável utilizar algo-
ritmos específicos para matrizes esparsas. Esta modificação deveria ser objeto de 
trabalho futuro. 

9.2 Testes de 

Realizamos alguns experimentos com o objetivo de avaliar os efeitos dos refina-
mentos diádicos estático e dinâmico nas simulações. Para isso simulamos em 
duas dimensões um mesmo reservatório fictício utilizando três grades regulares, 
de níveis 6, 8 e 10, e uma grade irregular adaptativa dinâmica com profundidade 
máxima 10 (Pmax = 10), obtida segundo o método descrito na seção 8.4. Todos os 
experimentos foram conduzidos em um computador contendo dois processadores 
A'v!D Athlon funcionando a uma frequência de com 2G de m&lt;emória, 
rígido SCSI com 40G e sistema operacional UNIX (Linux). 

9.2.1 Dados de simulação 

Os testes são baseados no modelo popular de cinco poços [PGOO]. Usamos um 
reservatório fictício medindo 3, O km x 3, O f v'2 km de área, com 1 m de espessura, 
plano e sem nenhuma inclinação (gx = gy = O). Há um poço de injeção no centro 
do domínio, no ponto(*, ~v'2). e quatro poços de extração equidistantes do poço 
de injeção nos pontos -(f IT;v'2), (t, ;iv'2), (~, 

1
3
6
v'2) e (%. 

1
3
6
v'2); todas as 

coordenadas em quilômetros. Veja a figura 9.2. 

111111 111111 

Figura 9.2: Disposição dos cinco poços no teste com o Simóleo. 

Em todos os testes, o reservatório no início possui saturação da água uniforme 
Sa = O, L A pressão típica usada é p = 15000 kPa. O poço de injeção possui 
uma vazão de água constante Q 691m3 /dia, e cada poço de extração tem uma 



9.2. Testes de simulação 87 

vazão total (água+ óleo) Q = 172, 75m3/dia. As permeabilidades relativas k~, 
viscosidades Jlt, e fatores volume de formação B1 das duas fases são dadas pelas 
equações: 

ka = s~ 

Jla =O, 004 

Ba = 1 

ko = (1- Sa) 2 

f.to = -2, 6 X 10-9 X (p + p) + Ü, 1 
Ba = 2, 3 X 10-8 X (p + p) + 1 

sendo que a pressão é medida em Pa e a viscosidade em Pa x s- 1 Consideramos 
as densidades constantes, com Pa = 1000 kg/m3 e p0 = 887 kgjm3 . 

A porosidade&amp;lt;P tem valor unitário em todo o domínio, com exceção da região 
limitada por uma margem de 150m a partir da fronteira. Nesta região&amp;lt;P decai 
de um para zero, proporcionalmente à distância da fronteira. A permeabilidade 
absoluta K, que juntamente com a porosidade depende apenas da posição espacial, 
é dada por K 5 X w- 10&amp;lt;/J (em m 2 ). 

As simulações englobam os primeiros dois anos e cinco meses (888 dias) de 
funcionamento do reservatório. Usamos um passo de tempo fixo de 6.t = 4 dias. 
Na simulação com adaptação dinâmica da grade adotamos os intervalos 6.t9 , 0 , = 
20 dias para a grade grossa G' e 6.tfin = 20 dias para a grade fina G". 

9.2.2 Resultados 

A figura 9.3 mostra a saturação da água Sa em 5 estágios de simulação, desde o 
dia 8 até o dia 888, envolvendo as três grades regulares (níveis 6, 8 e 10) usadas 
nos testes. Na figura 9.4 estão representadas as mesmas funções da figura 9.3, mas 
na forma de gráficos unidimensionais da saturação da água entre o poço injetor 
e algum dos poços de extração (por simetria, a figura vale para todos eles). As 
figuras 9.5 e 9.6 mostram a pressão p de forma análoga às figuras 9.3 e 9.4. 

As figuras 9.7 a 9.10 seguem o mesmo esquema das figuras 9.3 a 9.6, subs-
tituindo contudo os resultados obtidos através da grade regular de nível 6 pelos 
resultados provenientes da simulação com refinamento adaptativo e grade de pro-
fundidade máxima 10. 



9.2. Testes de simulação 

nível 6, t = 8 dias nível 8, t = 8 dias nível 10, t = 8 dias 

nível 6, t = 168 dias nível 8, t = 168 dias nível 10, t = 168 dias 

nível 6, t = 328 dias nível 8, t = 328 dias nível 10, t = 328 dias 

nível 6, t = 488 dias nível 8, t = 488 dias nível 10, t = 488 dias 

nível 6, t = 888 dias nível 8, t = 888 dias nível 10, t = 888 dias 

Figura 9.3: Saturação da água Sa em 5 estágios de simulação utilizando 
as grades regulares de níveis 6, 8 e 10. Todos os gráficos possuem 
51 = O, 08 e 62 = 1, O. 

88 



; 

I 

9.2. Testes de simulação 89 

nível 6, t = 8 dias nível 8, t = 8 dias nível 10. t = 8 dias 

\ 

nível 6, t = 168 dias nível 8, t = 168 dias nível 10, t = 168 dias 

nível 6. t = 328 dias nível 8. t = 328 dias nível 10. t = 328 dias 

nível 6, t = 488 dias nível 8, t = 488 dias nível 10. t = 488 dias 

I 
nível 6, t = 888 dias nível lO. t = 888 dias nível 8, t = 888 dias 

r---· 

c--~ ~~-~----\'----! 
I . 
i 

Figura 9.4: Perfis da saturação da água Sa sobre três grades regulares. 
Todos os gráficos possuem valor mínimo -1 e máximo 1 na escala 
verticaL A escala horizontal vai do poço injetor central até um poço de 
extração (1,2 km). 



9.2. Testes de simulação 

nível 8, t = 8 dias nível 10, t = 8 dias 

nível 8, t = 168 dias 

nível 6, t = 488 dias 

nível 6, t = 888 dias nível 8, t = 888 dias nível 10, t = 888 dias 

Figura 9.5: Pressão p em 5 estágios de simulação utilizando as grades 
regulares de níveis 6, 8 e 10, com 51 = 20000 e 52 = 400000. A pressão é 
positiva (acima de p) em volta do poço de injeção, e negativa nos poços 
de extração. 

90 



i 

9.2. Testes de simulação 

nível 6, t = 8 dias nível 8, t = 8 dias nível 10, t = 8 dias 

nível 6, t = 168 dias nível 8. t = 168 dias nível 10, t = 168 dias 

nível 6. t = 328 dias nível 8. t = 328 dias nível 10, t = 328 dias 

nível 6, t = 488 dias nível 8, t = 488 dias nível 10, t = 488 dias 

nível 6, t = 888 dias nível 8, t = 888 dias nível 10, t = 888 dias 
···-~~--~···-~ c-_ 

I -===J 

l -- ·~· .. --·' 
Figura 9.6: Perfis da pressão p sobre tres grades regulares. A escala 
vertical varia de -400000 Pa a 400000 Pa. A escala horizontal vai do 
poço injetor central até um poço de extração (1,2 km). 

91 



9.2. Testes de simulação 

nível 8, t = 8 dias nível máximo 10, t = 8 dias nível 10, t = 8 dias 

nível 8, t = 168 dias nível máximo 10, t = 168 dias nível 10, t = 168 dias 

nível 8, t = 328 dias nível máximo 10, t = 328 dias nível 10, t = 328 dias 

nível 8, t = 488 dias 

nível 8, t = 888 dias nível máximo 10, t = 888 dias nível 10, t = 888 dias 

Figura 9.7: Saturação da água Sa sobre grades regulares de níveis 8, 10 e 
uma grade adaptativa dinâmica de nível máximo 10. Todos os gráficos 
possuem th =O, 08 e 82 = 1, O. 

92 



9.2. Testes de simulação 93 

nível 8, t = 8 dias nível máximo 10, t = 8 dias nível lO, t = 8 dias 

nível 8, t = 168 dias nível máximo 10, t = 168 dias nível 10. t = 168 dias 

nível 8, t = 328 dias nível máximo 10, t = 328 dias nível 10, t = 328 dias 

nível 8, t = 488 dias nível máximo 10. t = 488 dias nível lO, t = 488 dias 

' 

nível 8, t = 888 dias nível máximo 10. t = 888 dias nível 10, t = 888 dias 
---

~~ I~ . ! 
----~-\__ I --~_j 

I 
L~---~-------

Figura 9.8: Perfis da saturação da água Sa sobre duas grades regulares e 
uma grade refinada adaptativamente, com valor mínimo -1 e máximo 1 
na escala vertical. A escala horizontal vai do poço injetor central até um 
poço de extração (1,2 km). 



9.2. Testes de simulação 

nível 8, t = 168 dias nível 10, t = 168 dias 

nível 10, t = 328 dias 

nível 8, t = 488 dias nível 10, t = 488 dias 

nível 8, t = 888 dias 

Figura 9.9: Pressão p utilizando grades regulares de níveis 8, 10, e uma 
grade com refinamento local dinâmico. Gráficos traçados com 
81 = 20000 e 82 = 400000. 

94 



! 

9.2. Testes de simulação 

nível 8, t = 8 dias nível máximo 10, t = 8 dias nível 10, t = 8 dias 

nível 8, t = 168 dias nível máximo 10, t = 168 dias nível 10, t = 168 dias 

nível 8, t = 328 dias nível máximo 10, t = 328 dias nível 10, t = 328 dias 

nível 8, t = 488 dias nível máximo 10. t = 488 dias nível 10, t = 488 dias 

! 

nível 8, t = 888 dias nível máximo 10. t = 888 dias nível 10. t = 888 dias 
I 

Figura 9.10: Perfis da pressão p sobre duas grades regulares e uma grade 
com refinamento local gerada dinamicamente. A escala vertical tem 
valor mínimo de -400000 Pa e máximo de 400000 Pa. A escala 
horizontal vai do poço injetor central até um poço de extração (1,2 km). 

95 

. 



9.2. Testes de simulação 96 

9.2.3 Evolução da pressão média 

No gráfico 9.11 mostramos a pressão média do reservatório durante as simulações. 

á' 13040 

130451~~~~~~~~~~~~~~~~~~ .:r: 13035 ...... 13030 :ã •!);! 13025 E 13020 ,g 13015 
~ 130"10 

ã. 13005 t=================;:j 13000 
&lt;o '?J&lt;o ...,r:o&lt;o ~'O "'&gt;'1-&lt;o ~Ç)&lt;o t.&lt;o&lt;o&amp;lt;:oro&lt;o 'ót;.'b '\'1-&lt;o&amp;lt;or:::.'b&amp;lt;o&lt;o&lt;c 

tempo [dias] 

~adaptativa- nível mâximo 1 O ---e- regular- nível 6 
-a- regular- nive! 8 -f::- regular- níve11D 

Figura 9.11: Pressão média do reservatório (em kPa) por tempo (em 
dias), nas simulações com grades regulares de níveis 6, 8, 10 e com a 
grade adaptativa de profundidade máxima 10. 

9.2.4 Produção de óleo e água 

A figura 9.12 mostra a produção total de óleo e água nos poços de extração. 
Observe que com a grade regular de nível 6, os poços começam a produzir água 
mais cedo, porque a frente de saturação desta fase é mais gradual (figura 9.4) e a 
área efetiva de cada poço é maior. 

,. 30 

• 125 
~ 20 

:; 15 

010 

i 
• o 

I 
I ~ 

f 
i 

I 
i 

/ 

'O q,'t&gt; ,_~&lt;:&gt;'&lt;&gt; 4:-'0 ":;"'"" -,.&lt;::&gt;'1:&gt; lj&lt;,'b"':&gt; ":Jr;,'b vt""' '\'1-'b 'bo:;:,'b 'b&lt;o'b 
tempo (dias) 

'b 'b'b '"''b '"Í!''õ "'"'"b ._.r::,"b "''b'/) ":!..,'b&amp;lt;o.,.,"b .-,_'1.,'1:&gt; 'b&lt;::J"b 'bq,'b 
tempo{dias) 

~ adap!atiV&lt;&gt;- nível má&gt;imo 10 -B- regular- níveiS 

-e- regular- níveiS -er- regular- nivel10 
~adaptativa- nívei máximo 10 -e-regular-níveiS 

--e--- regular- nivel8 -k-- regular- nivel1 O 

Figura 9.12: Taxas de produção de óleo (esquerda) e água (direita) em 
m 3 /dia, nas simulações com grades regulares e com a grade refinada 
dinamicamente. 

; 

' 



9.2. Testes de simulação 

9.2.5 Tempo de simulação 

A tabela 9.1 mostra o tempo total de cada simulação, em minutos. 

Tabela 9.1: Tempo total em minutos das simulações com as grades 
regulares e com a grade adaptativa. 

97 

No teste com a grade adaptativa dinâmica, devido ao tamanho limitado do re-
servatório, não houve "engrossamento" da grade em nenhum estágio de simulação; 
ou seja, a cada iteração a grade era igual à anterior, ou mais refinada. Esta não 
é uma limitação do programa, mas apenas dos testes realizados. 

Análise dos resultados 

Analisando os gráficos apresentados podemos concluir que o refinamento da grade 
diádíca gera uma melhora substancial na qualidade das simulações até o nível 
10. A figura 9.4, em particular, mostra que a frente de saturação da ágna fica 
bem abrupta à medida que a resolução da grade aumenta. Este fato também é 
demonstrado pelos gráficos de produção mostrados na figura 9.12. O tempo total 
de simulação (tabela 9.1) aumentou bastante com o uso de grades mais finas. 

Por outro lado, nos testes com refinamento adaptativo, obtivemos um resultado 
praticamente igual ao da simulação com a grade regular de nível 10, porém com 
aproximadamente 63% do tempo correspondente de execução. 



9.2. Testes de simulação 98 



Capítulo 10 

Conclusões e trabalhos futuros 

Neste capítulo relacionamos as principais conclusões deste trabalho, e sugerimos 
direções para pesquisas futuras. 

10.1 Conclusões 

10.1.1 Simplicidade de grades e bases diádicas 

Conforme exposto nos capítulos 2 e 3, verificamos que as grades diádicas em 
qualquer dimensão podem ser criadas e manipuladas com facilidade. A estrutura 
regular das malhas permite uma representação muito simples, baseada em árvores 
binárias. Cada célula pode ser convenientemente especificada por um índice inteiro 
que determina completamente sua posição, profundidade e geometria. Isto nos 
permite construir algoritmos simples e eficientes para determinar as bases padrões 
Bmax e Bmrn de elementos finitos (funções tenda) do espaço E1[G] associado a uma 
dada grade G. A estrutura regular das grades também nos permite pré-calcular 
os produtos escalares envolvendo estas funções. 

10.1.2 Aproximação com splines diádicos 

Através de testes numéricos (capítulos 4, 5 e 6) constatamos que os espaços E1 [G] 
são bastante eficazes na aproximação de funções e solução de equações diferenciais. 

99 



10.2. Propostas futuras 100 

10.1.3 Grades adaptativas 

Por meio de testes concluímos também que o refinamento adaptativo da grade 
melhora a precisão dos resuítados sem aumentar exageradamente a dimensão dos 
espaços de aproximação, reduzindo portanto o tempo de execução dos experimen-
tos. 

Na simulação do escoamento multífásico de petróleo (capítulo 9), compro-
vamos as vantagens do refinamento dinâmico adaptativo da grade diádica. No 
teste realizado com este recurso, obtivemos dados com precisão equivalente aos 
da simulação feita com a grade regular mais fina, consumindo aproximadamente 
metade do tempo de execução gasto. Este resultado foi considerado bastante sa-
tisfatório, tendo em vista o custo adicional do refinamento dinâmico, que envolve 
a geração de novas grades e mudança de base das funções aproximadas. 

10.2 Propostas futuras 

10.2.1 Splines de graus mais elevados 

Uma sugestão clara para trabalhos futuros é pesquisar os espaços de splines 
diádicos com graus e ordens de continuidade superiores às dos espaço E1 [G}. 
Nestes espaços (E2 [G], E3 [GJ, etc) é provável que a relação entre a qualidade 
das aproximações e a necessidade de refinamento diádico seja melhor do que em 
E1 [G]. Entretanto, precisaríamos avaliar se este ganho compensaria o custo de 
trabalharmos com funções de base mais complexas. 

10.2.2 Escolha da base 

Outra opção de trabalho futuro é realizar um estudo comparativo mais detalhado 
entre as bases padrões Bmax e Bmin. O primeiro passo neste ser: 
a velocidade de convergência da solução iterativa de equações c:' 
lineares usando estas duas bases. Devido ao seu caráter multiescilh 
que a base Bmax apresente convergência mais rápida. 

10.2.3 Passo de tempo adaptativo 

verificar 

Na solução de equações diferenciais lineares dependentes do tempo, com a técnica 
descrita no capítulo 6, é de grande importância que possamos determinar valores 



10.2. Propostas futuras lül 

apropriados do passo de tempo ê.t usado na integração de Euler. Simulações 
com valores muito grandes de !:::..t geram resultados imprecisos ou dh·ergentes: 
ao passo que valores muito pequenos de t::.t ocasionam atrasos desnecessários de 
processamento. Além disso, uma boa opção é ter um passo de tempo variável de 
acordo com a estrutura da grade G e o resultado das integrações espaciais . 

.4 Novas estratégias para integração no tempo 

Um ponto interessante seria pesquisar estratégias mais sofisticadas de refinamento 
local dinâmico, para serem aplicadas na solução de equações diferenciais depen-
dentes do tempo (capítulo 6). A princípio, isto englobaria a criação de novos 
algoritmos para a obtenção de grades adaptativas, em substituição ao procedi-
mento Refina_Grade (4.5.1), e métodos mais eficientes para fazer a mudança de 
base das funções aproximadas. 

10.2.5 Sugestões para o Simóleo 

Entre os próximos testes com o programa Simóleo, devem ser incluídas simulações 
de reservatórios com variações na escala vertical (domínio tridimensional) e em 
regiões inclinadas (gx i O ou gy i O). Para visualizar o resultado destes testes, 
entretanto, novas rotinas deveriam ser incorporadas ao módulo VIS (seção 9.1.2) 
para criação de gráficos 3D. 

Com relação aos sistemas numéricos, é preciso adicionar ao módulo LIN (seção 
9.1.2) rotinas com métodos iterativos para solução de matrizes grandes de sistemas 
lineares, bem como matrizes esparsas destes sistemas. Também deve ser realizado 
um estudo detalhado para tratar os problemas de instabilidade numérica do mo-
delo discreto adotado (capítulo 8), especialmente considerando as diferenças de 
escala das propriedades petrofísicas e malhas diádicas. 

Por fim, deveria ser adicionada ao simulador a fase gás, também presente no 
modelo físico Black- Oil. 



Referências Bibliográficas 

[AS79} K Azize A. Settari. Petroleum Reservoir Simulation. Applied Science, 
1979. 

[ATL91] H. S. Al-Towailib e J. S. L in. The application of local grid refinement 
to simulate a large hydrocarbon reservoir as an alternative to a two-
model approach. Em SPE l1Jiddle East Oil Show, Bahrain, number 
paper SPE 21392, Novembro 1991. 

[BBB87} H. Bartels, J. C. Beatty, e B. A. Barsky. An Introduction to Spli-
nes for Use in Computer Graphics and Geometria Modeling. Morgan 
Kanfmann, 1987. 

[BQDY89] S. Bu-Qing e L. Ding-Yuan. Computational Geometry Curve and Sur-
face Modeling. Academic Press, 1989. 

[Bra78} 

[Cri77] 

[dCS98] 

[Duc96] 

[GE97] 

R. N. BracewelL The Fourier Transform and Its Applications. 
McGraw-Hill, 1978. 

H. B. Crichlow. Modem Reservoir Engineering- A Simulation Appro-
ach. Prentice-Hall, 1977. 

C. de C. Santos. Modelo para análise de deslocamento miscível no meio 
poroso usando a teoria dos canais de fluxo. Dissertação de Mestrado, 
UNICAMP - Universidade Estadual de Campinas, Brasil, 1998. 

M. A. Duchaineau. Dyadic Splines. Tese de Doutorado, University of 
California, Davis, 1996. 

E. N. Gourley e T. Ertekin. Application of a local grid refinement 
technique to model impermeable barriers in reservoir simulation. Em 
1997 SPE Eastem Regional Meeting, Laxington, KY, number paper 
SPE 39216, Outubro 1997. 

102 



REFERÊNCIAS BIBLIOGRlÍ.FICA.S 103 

[Gom99] A. Gomide. Splines Polinomiais Não Homogêneos na Esfera. Tese de 
Doutorado, UNICAMP - Universidade Estadual de Campinas, BrasiL 
1999. 

[Gue98] 

[HS99] 

[Joh87] 

[Lei94] 

[MD90] 

[Men77] 

[Mor85] 

S. S. Guedes. Uma abordagem multiescala na simulação numérica de 
reservatórios. Tese de Doutorado, UNICAMP- Universidade Estadual 
de Brasil, 1998. 

Z. E. Heinemann, G. Gerken, e G. V. Hantelmann. Using local gríd 
refinement in a multiple-application reservoir simulator. Em Reservoir 
Simulation Symposium, San Francisco, C A, number paper SPE 12255, 
Novembro 1983. 

G. R. Hjaltason e H. Samet. Improved bulk-loading algorithms for 
quadtrees. Em 7th International ACM Workshop on Advances in Ge-
ographic lnformation Systems, Kansas City, MO, number paper 
20740, Novembro 1999. 

C. Johnson. Numerical Solution of Partia/ Differential Equations by 
the Finite Element Method. Cambridge University Press, 1987. 

L. Leithold. O Cálculo com Geometria Analítica. Editora Harbra, 
1994. 

C. ?v!attax e R. L. Dalton. Reservoir Simulation AIME. Society of 
Petroleum Engineers, 1990. 

G. P. Menzala. Introdução às Equações Diferenciais Parciais. IMPA, 
1977. 

M. E. Mortenson. Geometric Modeling. John Wiley and Sons, 1985. 

[NLP+9o] E. C. Nacul, C. Leprete, O. A. Jr. Pedrosa, P. Girard, e K. Aziz. Effici-
ent use of domain decomposition and local grid refinement in reservoir 
simulations. Em 65th Annual Technícal Conference and Exhibition of 
the Society of Petroleum Engineers, New Orleans, LA, number paper 
SPE 20740, Setembro 1990. 

[PFTV86] W. H. Press, B. P. Flannery, S. A. Teukolsky, e W. T. Vetterling. 
Numerical Recípes: The Art of Scientific Computing. Cambridge Uni-
versity Press, 1986. 



REFERÊNCIAS BIBLIOGRlÍ.FICAS 104 

[PGOO] 

[Pis80] 

[Ris02] 

[Sew88] 

[Str88] 

[Twi84] 

[Vic81] 

[Vve93] 

[Was87] 

K Pruess e J. Garcia. A systematic approach to local grid refinement 
in geothermal reservoir simulation. Em Proceedings World Geothermal 
Congress 2000, Kyushu - Tohoku, Japão, Maio 2000. 

N. Piskunov. Differential and Integral Calculas. Mir Publishers, 1980. 

V. F. Risso. Simulação numérica de fluxo em regiões de reservatórios 
de petróleo com refinamento local e fronteiras abertas. Dissertação de 
Mestrado, - Universidade Estadual de Campinas, BrasiL 
2002. 

G. SewelL The Numerical Solution of Ordinary and Partia! Differential 
Equations. Academic Press, 1988. 

T. D. Streltsova. Well Testing in Heterogeneous Formations. Exxon, 
1988. 

E. H. TwizelL Computational Methods for Partia/ Differential Equa-
tions. Ellis Horwood Limited, 1984. 

R Vichnevetsky. Computational Methods for Partia! Differential 
Equations. Prentice-Hall, 1981. 

D. Vvedensky. Partial Differential Equations with Mathematica. 
Addison-Wesley, 1993. 

M. L Wasserman. Local grid refinement for three-dimensional si-
mulators. Em Ninth SPE Symposium on Reservoir Simulation, San 
Antonio, Texas, number paper SPE 16013, Fevereiro 1987. 


</field>
	</doc>
</add>