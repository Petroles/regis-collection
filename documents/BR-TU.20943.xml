<?xml version="1.0" encoding="utf-8"?>
<add>
	<doc>
		<field name="docid">BR-TU.20943</field>
		<field name="filename">4607_000882460.pdf</field>
		<field name="filetype">PDF</field>
		<field name="text">
 
 

  
 
 
 
 

BRAULIO MANENTE DUTRA  
 
 
 
 
 
 
 
 
 
 
 

Novas metodologias e métodos de análise de dados de perfuração de poços de petróleo e 
gás natural, e de implementação de curvas de drill-rate test em tempo real visando 

otimização do processo 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

Guaratinguetá - SP 
2016 

 
  



 
 

Braulio Manente Dutra 
 
 
 
 
 
 

Novas metodologias e métodos de análise de dados de perfuração de poços de petróleo e 
gás natural, e de implementação de curvas de drill-rate test em tempo real visando 

otimização do processo 
 
 
 
 
 
 
 
 

 
Trabalho de Graduação apresentado ao 
Conselho de Curso de Graduação em 
Engenharia Mecânica da Faculdade de 
Engenharia do Campus de Guaratinguetá, 
Universidade Estadual Paulista, como parte dos 
requisitos para obtenção do diploma de 
Graduação em Engenharia Mecânica. 
 
 
Orientador: Prof. Dr. Andreas Nascimento 
Coorientador: Prof. Dr. Mauro Pedro Peres 

 
 
 
 
 
 
 

Guaratinguetá - SP 
2016 

  



 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

 

D978n 

Dutra, Braulio Manente 
      Novas metodologias e métodos de análise de dados de perfuração de 
poços de petróleo e gás natural, e de implementação de curvas de drill-rate 
test em tempo real visando otimização do processo / Braulio Manente 
Dutra – Guaratinguetá, 2017. 
      57 f : il.  
      Bibliografia: f. 45 

      

      Trabalho de Graduação em Engenharia Mecânica – Universidade 

Estadual Paulista, Faculdade de Engenharia de Guaratinguetá, 2017. 

      Orientador: Prof. Dr. Andreas Nascimento 
      Co-orientador: Prof. Dr. Mauro Pedro Peres 
 

 

1. Poços de petróleo – perfuração. 2. Perfuração e broqueamento. 

3. Engenharia do petróleo.  I. Título 

  

CDU 622.323                                                                        

 

 

 

 



 
 

 



 
 

AGRADECIMENTOS 
 
 

Aos meus pais e irmãos, pelo apoio e incentivo durante meus anos de graduação e nesse 

período de pesquisa para a realização do trabalho de conclusão de curso. 

Ao meu orientador Prof. Dr. Andreas Nascimento, por me apresentar o tema proposto e 

auxiliar na minha contextualização aos métodos de perfuração e exploração de petróleo. 

À Agência Nacional do Petróleo, Gás Natural e Biocombustíveis (ANP), à Financiadora 

de Estudos e Projetos (FINEP) e ao Ministério da Ciência, Tecnologia e Inovação (MCTI) pelo 

apoio financeiro através do Programa de Recursos Humanos da ANP para o Setor Petróleo e 

Gás PRH-ANP/MCTI no 48. 

E às pessoas com quem convivi ao longo da minha vida e que, de alguma forma, 

colaboraram para o desenvolvimento da pessoa que sou hoje.  



 
 
DUTRA, B. M. Novas metodologias e métodos de análise de dados de perfuração de poços 

de petróleo e gás natural, e de implementação de curvas de drill-rate test em tempo real 

visando otimização do processo. 2016. 57 f. Trabalho de Graduação (Graduação em 

Engenharia Mecânica) – Faculdade de Engenharia do Campus de Guaratinguetá, Universidade 

Estadual Paulista, Guaratinguetá, 2016. 

 

RESUMO 

 

Com o objetivo de um desenvolvimento de metodologias e métodos de processamento e análise 

matemática dos dados de perfuração de poços de petróleo e gás natural, foram utilizados dados 

de um poço perfurado na região de pré-sal, que apresentou inúmeras dificuldades relacionadas 

à alta dureza e heterogeneidade das rochas carbonáticas, e aplicadas ferramentas estatísticas de 

filtragem e avaliação das distribuições desses dados, como o diagrama de caixa, de modo a 

prepara-los para o modelamento da relação entre as variáveis envolvidas de forma análoga ao 

realizado em testes de perfuração periódicos. Foi confirmada a possibilidade de geração das 

curvas utilizando dados de perfuração de testes e de operação normal, inclusive de curvas 

qualitativas para situações com pouca informação disponível, tornando possível uma futura 

implementação de ferramentas programáticas de geração e atualização de curvas de drill-rate 

em tempo real, auxiliando na escolha dos parâmetros ótimos de perfuração e otimizando o 

processo.  

 
 

PALAVRAS-CHAVE: Perfuração. Pré-sal. Drill-rate test. ROP. Otimização. Tempo real.  

 
  



 
 
DUTRA, B. M. New methodologies and methods of petroleum and natural gas well drilling 

data analysis, and real time drill-rate test curve implementation aiming process 

optimization. 2016. 57 p. Graduate Work (Graduate in Mechanical Engineering) – Faculdade 

de Engenharia do Campus de Guaratinguetá, Universidade Estadual Paulista, Guaratinguetá, 

2016. 

 

ABSTRACT 

 

Aiming the development of a methodology and methods of processing and mathematically 

analyzing oil and natural gas well drilling data, a case study was conducted using the data from 

a well drilled in the pre-salt region, which presented countless difficulties related to the high 

hardness and heterogeneity of the carbonate rocks, and statistical tools for the filtration and 

evaluation of the distribution of these data were employed, such as the boxplot, in order to 

prepare them for the modelling of the relationship between the variables involved in a similar 

manner to how it’s done with periodic drill tests. The possibility for the generation of curves 

using drilling data from tests and regular operation was confirmed, including for qualitative 

curves in situations where very few information is available, making it possible for a future 

implementation of programmatic tools to generate and update drill-rate curves in real time, 

assisting in the decision to adjust the drilling parameters optimally and improving the overall 

development of the operation. 

 

KEYWORDS: Drilling. Pre-salt. Drill-rate test. ROP. Optimization. Real time. 



 
 

LISTA DE FIGURAS 

 

Figura 1 - Componentes de uma sonda de perfuração rotativa. (1) Torre de perfuração, (2) 

Mangueira de perfuração, (3) Standpipe, (4) Swivel, ou cabeça de injeção, (5) Bell nipple, (6) 

BOP, (7) Dutos do BOP, (8) Coluna de perfuração, (9) Comandos, (10) Broca, (11) Annulus, 

ou anular de perfuração, (12) Tubo de revestimento, (13) Bomba do sistema de lama ........... 15 

Figura 2 - Tipos de sonda de perfuração para uso em alto-mar ............................................... 16 

Figura 3 - Curva de drill-rate típica encontrada ao realizar testes de perfuração .................... 17 

Figura 4 - Curvas do primeiro drill-rate test geradas com dados do relatório e calculados .... 20 

Figura 5 - Curvas do segundo drill-rate test geradas com dados do relatório e calculados ..... 21 

Figura 6 - Curvas de drill-rate aproximadas para dados de rotação entre 100 e 140 rpm, e 

fluxo entre 750 e 800 gpm, evidenciando diferentes comportamentos .................................... 23 

Figura 7 - Curvas de drill-rate aproximadas para dados filtrados de rotação 120 rpm e fluxo 

800 gpm, destacando mudança no sentido das curvas.............................................................. 24 

Figura 8 - Curvas aproximadas por regressão linear, utilizando os dados originais e os dados 

reduzidos à média ..................................................................................................................... 26 

Figura 9 - Ferramenta de diagrama de caixa, estabelecendo um intervalo de confiança de 

99,3% ........................................................................................................................................ 28 

Figura 10 - Ferramenta de diagrama de caixa ajustado, estabelecendo um intervalo de 

confiança para uma distribuição assimétrica ............................................................................ 29 

Figura 11 - Curvas aproximadas por regressão linear, utilizando os dados originais e os dados 

filtrados (com valores ponderados) .......................................................................................... 31 

Figura 12 - Distribuição da diferença entre a média de uma população de 32 dados e as 

médias de amostras de 5 dados coletados aleatoriamente ........................................................ 32 

Figura 13 - Gráfico de dispersão das margens de erro máximas esperadas para um intervalo de 

confiança de 95%, em relação ao tamanho das amostras ......................................................... 33 

Figura 14 - Dados de perfuração do poço Ogonga-1. Em destaque (vermelho), os valores 

detectados como aberrantes pelos métodos de filtragem inicial............................................... 38 

Figura 15 - Curvas calculadas ao longo do progresso dos métodos, para rotação de 110 rpm e 

fluxo de 600 gpm ...................................................................................................................... 39 

Figura 16 - Curvas calculadas ao longo do progresso dos métodos, para rotação de 140 rpm e 

fluxo de 650 gpm ...................................................................................................................... 40 

Figura 17 - Curvas calculadas ao longo do progresso dos métodos, para rotação de 160 rpm e 

fluxo de 700 gpm ...................................................................................................................... 40 



 
 
Figura 18 - Curvas calculadas ao longo do progresso dos métodos, para rotação de 120 rpm e 

fluxo de 600 gpm ...................................................................................................................... 42 

 

 



 
 

LISTA DE TABELAS 

 

Tabela 1 - Dados do drill-rate test realizado no sexto RIH, retirados do relatório de operação

 .................................................................................................................................................. 19 

Tabela 2 - Dados do drill-rate test no sexto RIH, calculados a partir dos dados originais ...... 19 

Tabela 3 - Dados do drill-rate test realizado no sétimo RIH, retirados do relatório de operação

 .................................................................................................................................................. 20 

Tabela 4 - Dados do drill-rate test no sétimo RIH, calculados a partir dos dados originais .... 21 

Tabela 5 - Tamanhos amostrais calculados para diferentes valores de margem de erro máxima 

para ROP .................................................................................................................................. 33 

Tabela 6 - Valores de margem de erro máxima para WOB calculados para tamanhos 

amostrais determinados na tabela 5 .......................................................................................... 34 

Tabela 7 - Distribuição de probabilidades de curvas perfeitas com 6 pontos e valores de range 

entre 0,5 e 6, ao serem aplicadas variações em y de até 1,2, gerem curvas aproximadas com 

valores de range entre 0,5 e 8,5 ................................................................................................ 36 

Tabela 8 - Probabilidades de curvas aproximadas com 6 pontos e valores de range entre 0,5 e 

8,5 apresentarem a coordenada horizontal de seus vértices deslocada do vértice real em até 10 

a 30%, em relação ao founder point ......................................................................................... 36 

 

 
  



 
 

LISTA DE QUADROS 

 

Quadro 1 - Classificação de poços ........................................................................................... 14 

Quadro 2 - Detalhes da operação de perfuração do poço Ogonga-1 ........................................ 18 

Quadro 3 - Código fonte de rotina no MATLAB para organizar e filtrar dados, e gerar curvas 

de drill-rate ............................................................................................................................... 46 

Quadro 4 - Código fonte de rotina no MATLAB para determinar curva de drill-rate ótima 

utilizando as tabelas de confiança ............................................................................................ 52 

Quadro 5 - Código fonte de rotina auxiliar no MATLAB, desenvolvido como função 

checkcurve, para determinar a confiabilidade das curvas de drill-rate utilizando as tabelas de 

confiança ................................................................................................................................... 56 

  

file:///C:/Users/Braulio%20Dutra/Desktop/TG/Tese/TG.docx%23_Toc474078392
file:///C:/Users/Braulio%20Dutra/Desktop/TG/Tese/TG.docx%23_Toc474078392


 
 

LISTA DE ABREVIATURAS E SIGLAS 

 

ANP  Agência Nacional do Petróleo, Gás Natural e Biocombustíveis 

BDEP  Banco de Dados de Exploração e Produção 

BHA  Bottom hole assembly (Conjunto de instrumentos e ferramentas de poço) 

BOP  Blowout preventer 

FLO   Fluxo do fluido de perfuração 

PDC   Polycrystalline Diamond Compact (Broca de diamante policristalino) 

RIH   Run-in-hole (Descida das ferramentas no poço) 

ROP  Rate of penetration (Taxa de penetração) 

RPM  Rotação do eixo de perfuração 

WOB   Weight on bit (Peso na broca) 

 
  



 
 

SUMÁRIO 

 
1 INTRODUÇÃO ....................................................................................................... 12 

1.1 MOTIVAÇÃO .......................................................................................................... 12 

1.2 OBJETIVOS ............................................................................................................. 12 

1.3 ORGANIZAÇÃO DO TRABALHO ....................................................................... 12 

2 FUNDAMENTAÇÃO TEÓRICA .......................................................................... 14 

2.1 OPERAÇÃO DE PERFURAÇÃO DE POÇOS ....................................................... 14 

2.2 TESTE DE PERFURAÇÃO (DRILL-RATE TEST) ................................................. 16 

2.3 DADOS DO POÇO PERFURADO ......................................................................... 18 

3 DESENVOLVIMENTO .......................................................................................... 19 

3.1 ANÁLISE INICIAL ................................................................................................. 19 

3.2 GERAÇÃO DE CURVAS DE DRILL-RATE .......................................................... 22 

3.3 FILTRAGEM E ANÁLISE DOS DADOS .............................................................. 24 

3.3.1 Metodologia de filtragem ........................................................................................ 24 

3.3.2 Ferramentas estatísticas de determinação de outliers .......................................... 26 

3.3.2.1 Diagrama de caixa ajustado ....................................................................................... 29 

3.3.3 Confiabilidade em amostras pequenas .................................................................. 30 

3.3.4 Aproximação de curvas de drill-rate com tabelas de confiança........................... 37 

4 RESULTADOS ........................................................................................................ 38 

5 CONCLUSÃO .......................................................................................................... 43 

BIBLIOGRAFIA ..................................................................................................... 45 

APÊNDICE A – CÓDIGO FONTE DE ROTINAS NO MATLAB .................... 46 

 

 



12 
 

 

1 INTRODUÇÃO  

 
1.1 MOTIVAÇÃO 

 
O processo de perfuração de poços de petróleo vem evoluindo constantemente de modo 

a reduzir os custos envolvidos e o tempo de operação através de medidas de otimização como 

a melhoria na geometria e composição dos elementos das brocas utilizadas, análises litológicas 

da região a ser perfurada, e testes de perfuração realizados periodicamente, como o drill-rate 

test, que auxiliam na escolha dos parâmetros de operação adequados. Entretanto, poços 

perfurados em rochas de composição heterogênea, particularmente as encontradas nas regiões 

de pré-sal entre as costas africana e sul-americana, além de apresentam uma baixa taxa de 

penetração por conta da alta dureza dos depósitos carbonáticos que as compõem, sofrem de 

uma constante variação litológica que torna necessária a realização de testes de perfuração com 

maior frequência, demandando muito tempo e atrasando o avanço do processo (HBAIEB e 

AZAR, 2013). Além disso, de modo a atualizar os parâmetros utilizados durante a perfuração, 

os dados da operação normalmente são analisados de uma forma manual e dependente da 

experiência e intuição dos engenheiros e operadores envolvidos (MITCHELL e MISKA, 2011), 

o que pode resultar em um subaproveitamento dos recursos utilizados. 

 
1.2 OBJETIVOS 

 
Desenvolvimento da metodologia e métodos para a implementação de ferramentas de 

análise dos dados de perfuração em tempo real de modo a gerar curvas análogas as de drill-rate 

test, visando auxílio na tomada de decisão para a escolha de parâmetros de perfuração ótimos, 

garantindo um aumento da taxa de penetração e eficiência do processo, e uma possível redução 

da necessidade de realização de testes de perfuração. 
 
 

1.3 ORGANIZAÇÃO DO TRABALHO 

 
Este trabalho está estruturado em cinco capítulos, sendo este primeiro capítulo destinado 

à introdução do projeto, com uma visão geral dos fatos que motivaram o seu desenvolvimento, 

os objetivos esperados, e a estruturação da tese. 

O segundo capítulo se foca na fundamentação teórica do tema, apresentando os conceitos 

básicos e a terminologia utilizados como base para o desenvolvimento da tese, assim como os 

dados utilizados para a análise e generalização dos resultados obtidos. 



13 
 

 

No terceiro capítulo inicia-se o desenvolvimento do projeto, apresentando análises iniciais 

para justificar os métodos utilizados, a evolução dos critérios utilizados para a filtragem dos 

dados, e a geração das curvas e cálculo dos parâmetros de interesse para a otimização do 

processo. 

No quarto capítulo, os resultados obtidos são analisados criticamente e comparados com 

os resultados esperados, ilustrando as vantagens dos métodos e melhorias a serem 

implementadas no futuro. 

Por fim, o quinto capítulo conclui a tese expondo as necessidades atuais da indústria e 

como a geração das curvas de forma automatizada oferece uma solução simples e de baixo 

investimento, finalizando com as perspectivas para a continuidade do desenvolvimento da 

pesquisa. 

  



14 
 

 

2 FUNDAMENTAÇÃO TEÓRICA 

 

2.1 OPERAÇÃO DE PERFURAÇÃO DE POÇOS 

 
Iniciada após estudos sísmicos e geológicos da região, a perfuração de poços moderna é 

uma atividade complexa que depende de fatores como o tipo de poço a ser perfurado, o seu 

propósito, localização e profundidade. Algumas classificações de poços foram especificadas no 

Quadro 1. 

 

Quadro 1 - Classificação de poços 

Objetivo Trajetória Localização 
Exploração (pioneiro, 

estratigráfico, extensão) 
Direcional (inclinado, 

horizontal) 
Terra firme 
(Onshore) 

Produção ou 
Desenvolvimento Vertical Mar (Offshore) 

Injeção   
Especial   

Fonte: Adaptado (MITCHELL e MISKA, 2011) 

 

Entretanto, apesar de diferenças em tamanho, função ou capacidade de perfuração, quase 

todas as operações atualmente são realizadas utilizando sondas de perfuração rotativa, em que 

uma força e rotação são aplicados na broca causando a remoção de material da rocha (Figura 

1). A força aplicada é resultado do peso da própria coluna de perfuração, abreviado por WOB, 

que é controlado através de um sistema de polias, enquanto a rotação (RPM) é gerada na 

superfície por motores que aplicam um torque na coluna de perfuração, que transmite a energia 

para a broca. Com o progresso da operação, novos tubos são adicionados à coluna. 

O material removido pela broca é lavado por um fluxo de fluido de perfuração (FLO), 

também conhecido como lama, que circula através da coluna e é ejetado por orifícios na broca, 

retornando à superfície através do poço perfurado e do tubo anular que envolve a coluna, sendo 

filtrado para reutilização da lama e descarte dos detritos. 

Para perfurações no mar o processo é similar ao realizado em terra firme, mas é resultado 

de uma logística mais complexa, com a necessidade de estabilização da sonda por conta de 

correntes marítimas e movimentação das ondas, e de um preparo do leito do mar para a 

cementação do revestimento anular que contém os fluidos de perfuração e o eventual fluxo de 

hidrocarbonetos para a superfície. 

 



15 
 

 

Figura 1 - Componentes de uma sonda de perfuração rotativa. (1) Torre de perfuração, (2) Mangueira 

de perfuração, (3) Standpipe, (4) Swivel, ou cabeça de injeção, (5) Bell nipple, (6) BOP, (7) Dutos do 

BOP, (8) Coluna de perfuração, (9) Comandos, (10) Broca, (11) Annulus, ou anular de perfuração, 

(12) Tubo de revestimento, (13) Bomba do sistema de lama 

 
Fonte: Adaptado (BOURGOYNE, MILLHEIM et al., 1991) 

 

Algumas das formas de perfuração de poços em alto-mar incluem o uso de plataformas 

fixas ou auto eleváveis, que são fixadas ao leito do mar e viáveis para até uma profundidade 

300 metros, plataformas semissubmersíveis, que possuem flutuadores submersos e âncoras que 

garantem estabilidade e manutenção do posicionamento, utilizados para profundidades de até 

2500 metros, ou navios-sonda, que são embarcações adaptadas ou construídas para esse fim, e 

possuem sistemas de localização dinâmicos que permitem a correção do posicionamento em 

relação ao poço sendo perfurado (Figura 2). 

 



16 
 

 

Figura 2 - Tipos de sonda de perfuração para uso em alto-mar 

 
Fonte: (Galp Energia, 2014) 

 

2.2 TESTE DE PERFURAÇÃO (DRILL-RATE TEST) 

 

Uma das formas de avaliação das rochas a serem perfuradas é através da realização de 

testes de perfuração, onde os parâmetros que influenciam a taxa de penetração são variados e 

aplicados, e seus efeitos são registrados em gráficos ou tabelas, que posteriormente são 

analisados para determinar a configuração ideal de perfuração almejando uma melhor 

performance, considerando os limites operacionais da sonda de perfuração e o trade-off 

econômico dessa escolha.  

Antes do início do processo de perfuração, e a cada novo bit run (descida de coluna), 

sobretudo quando a broca é substituída por um outro modelo, testes de perfuração devem ser 

realizados, e o mais comum na indústria petrolífera é o drill-rate test, ou teste de taxa de 

penetração (BERG e TVEIT, 2016). Esse teste consiste de uma escolha dos parâmetros FLO e 

RPM, baseando-se em uma faixa de valores ideal determinada ao longo da perfuração ou 

através de dados de poços similares perfurados anteriormente, e mantendo-os constantes são 

aplicadas medidas incrementais de WOB, resultando em uma distribuição de ROP crescente até 

atingido um peso que resulta na taxa de penetração máxima possível para essa configuração, 

com uma conseguinte distribuição decrescente para valores acima desse peso. O teste é repetido 

quantas vezes necessário para diferentes valores de rotação do eixo e fluxo do fluido de 

perfuração. Ao final, os dados coletados são analisados e os parâmetros ideais são 

determinados. 



17 
 

 

Como um dos fatores que influencia a remoção de material pela broca é a dureza das 

rochas, novos testes podem ser realizados quando há uma diminuição no desempenho da 

operação antes do final de vida projetado para a broca, o que sinaliza uma variação litológica. 

 

Figura 3 - Curva de drill-rate típica encontrada ao realizar testes de perfuração 

 
Fonte: Adaptado (DUPRIEST e KOEDERITZ, 2005) 

 

As curvas determinadas pela função entre o peso na broca aplicado e a taxa de penetração 

obtida exibem um comportamento padrão, com três regiões bem definidas. Na região I, um 

aumento em ROP é resultado de um aumento desproporcional de WOB pois, para qualquer tipo 

de broca utilizada, a remoção de material é determinada pela profundidade de indentação do 

elemento cortante, atingindo seu valor máximo no início da região II. Essa faixa é definida por 

uma reta crescente, de maior eficiência possível, onde um aumento na energia mecânica 

aplicada – na forma de WOB ou RPM – resulta em um aumento proporcional na taxa de 

penetração, até o chamado founder point, onde iniciam-se processos que restringem a 

transferência de energia e reduzem a eficiência do processo. Essa é a região III, que é 

caracterizada por fatores como aumento na vibração, fenômenos de stick-slip, que podem 

danificar o BHA, e o enceramento de broca (bit balling), um acúmulo do material removido 

nas faces da broca que reduz a profundidade de corte. Algumas medidas podem ser tomadas 



18 
 

 

para mitigar o efeito dessas ineficiências, deslocando o founder point e aumentando a faixa 

eficiente do processo (IADC Drilling Manual, 2014). 

Apesar dos problemas encontrados na terceira região da curva de drill-rate, é importante 

a determinação do seu ponto de inflexão de forma a estabelecer um limite operacional e projetar 

a faixa ideal de WOB para ser aplicada, maximizando a taxa de penetração e evitando um uso 

excessivo de energia mecânica.   

 

2.3 DADOS DO POÇO PERFURADO 

 
De modo a auxiliar no desenvolvimento dos métodos propostos, um estudo de caso foi 

conduzido com o poço de exploração Ogonga-1, perfurado pela Petrobras na Bacia de Kwanza, 

em Angola. O poço, o primeiro realizado pela empresa, foi completo em agosto de 2012 após 

oito meses de operação, devido à formação geológica extremamente dura e heterogênea abaixo 

da camada de sal, o que resultou em uma baixa taxa de penetração e paradas frequentes para a 

troca de brocas danificadas, além de problemas de perda de lama (ou fluido de perfuração) para 

fraturas nas rochas. 

Os dados de perfuração foram adquiridos através do Banco de Dados de Exploração e 

Produção (BDEP) da Agência Nacional de Petróleo, Gás Natural e Biocombustíveis (ANP). 

 
Quadro 2 - Detalhes da operação de perfuração do poço Ogonga-1 

País Angola 
Operação Offshore 

Bacia Kwanza 
Bloco 26 

 Empresa  Petrobras 
Nome do poço Ogonga-1 
Coordenadas 12° 46' 38.7156" S, 12° 27' 52.1604" L 

Empresa operadora Schlumberger 
Data de início da perfuração Jan/2012 
Data de fim da perfuração Ago/2012 

Profundidade de lamina de água 5050 m 
Profundidade final 5840 m 

Fonte: Banco de Dados de Exploração e Produção (BDEP, 2016) 

 

Também foram adquiridos os relatórios de operação para dois testes de perfuração 

realizados durante as descidas de coluna 6 e 7, utilizando brocas de PDC e tricônica, 

respectivamente. 



19 
 

 

3 DESENVOLVIMENTO 

 

3.1 ANÁLISE INICIAL 

 

Antes de realizar a análise de todos os dados de perfuração, uma comparação qualitativa 

entre as curvas de drill-rate test descritas nos relatórios de operação e as geradas a partir da 

planilha de dados foi realizada, de modo a confirmar a possibilidade do uso desses dados para 

desenvolver os métodos propostos. 

O primeiro teste a ser analisado ocorreu no sexto RIH, utilizando uma broca de PDC e 

perfurando de uma profundidade de 5294 a 5301 metros com peso na broca entre 15 e 30 klbf 

(kilolibra-força), rotação entre 80 e 140 rpm (rotação por minuto) e fluxo de fluido de 

perfuração constante de 600 gpm (galão por minuto). 

 
Tabela 1 - Dados do drill-rate test realizado no sexto RIH, retirados do relatório de operação 

WOB 
(klbf) 

RPM 
(rpm) 

FLO 
(gpm) Resultados 

15 80-120 600 Sem problemas, ROP = 1,13 m/h 
20 80-110 600 Stick-slip, ROP = 2,26 m/h 
20 120-140 600 Sem problemas, ROP = 2,50 m/h 
25 80-120 600 Stick-slip, ROP = 2,57 m/h 
25 130-140 600 Sem problemas, ROP = 3,45 m/h 
30 80-100 600 Stick-slip, ROP = 3,98 m/h 
30 100-140 600 Drill-rate test cancelado por perda de lama 

Fonte: Adaptado de relatório de operação (2016) 

 
Apesar de o objetivo do teste ser perfurar até o fim da vida da broca, por conta de perdas 

de circulação do fluido de perfuração e de fenômenos de stick-slip e shock and vibration (S&amp;amp;V) 

ele foi finalizado antes do previsto e, portanto, uma curva típica não pôde ser gerada. Entretanto, 

os dados apresentados na Tabela 1 ainda podem ser utilizados para realizar a comparação. 

Utilizando os dados para a faixa de rotação entre 80 e 120 rpm, pois garantem o maior 

número de pontos, foram calculados os valores médios de ROP para um passo de 5 klbf, 

dispostos na Tabela 2. 

 
Tabela 2 - Dados do drill-rate test no sexto RIH, calculados a partir dos dados originais 

WOB 
(klbf) 

RPM 
(rpm) 

FLO 
(gpm) 

ROP 
(m/h) 

Diferença 
(%) 

15 100 600 1,76 56 
20 95 600 1,97 13 
25 85 600 2,87 12 
30 95 600 4,16 5 

Fonte: Produção do próprio autor 



20 
 

 

Traçadas as curvas com os dados calculados e relatados, percebe-se uma razoável 

similaridade entre as duas, comportando-se aproximadamente da mesma forma. Apesar disso, 

os valores de ROP calculados diferiram consideravelmente do esperado, o que pode ser 

explicado por diferenças no método de cálculo da média. 

 
Figura 4 - Curvas do primeiro drill-rate test geradas com dados do relatório e calculados 

 
Fonte: Produção do próprio autor 

 

O segundo teste a ser analisado ocorreu no sétimo RIH, utilizando uma broca tricônica e 

perfurando de uma profundidade de 5326 a 5440 metros, com peso na broca entre 25 e 70 klbf, 

rotação entre 80 e 100 rpm e fluxo de fluido de perfuração constante de 600 gpm. 

 
Tabela 3 - Dados do drill-rate test realizado no sétimo RIH, retirados do relatório de operação 

WOB 
(klbf) 

RPM 
(rpm) 

FLO 
(gpm) Resultados 

25 90-100 600 Sem problemas, ROP = 1,8 m/h 
30-35 80-90 600 Sem problemas, ROP = 1,8 m/h 

35 100 600 S&amp;amp;V, ROP = 1,5 m/h 
40 90-100 600 Sem problemas, ROP = ? 
45 90 600 Stick-slip e S&amp;amp;V, ROP = ? 
50 90 600 Sem problemas, ROP = 3,78 m/h 
60 100 600 Stick-slip e S&amp;amp;V, ROP = 3,1 m/h 
65 90-100 600 Sem problemas, ROP = 5,5 m/h 
70 80-90 600 Stick-slip, ROP = 4,6 m/h 
70 100 600 Sem problemas, ROP = 5,0 m/h 

Fonte: Adaptado de relatório de perfuração (2016) 

 
Durante o teste ocorreram intermitentemente fenômenos de stick-slip e S&amp;amp;V, mas com menos 

severidade que no anterior, o que possibilitou a sua continuação. Houveram perdas de circulação 

0,0
0,5
1,0
1,5
2,0
2,5
3,0
3,5
4,0
4,5

15 20 25 30

R
O

P 
(m

/h
)

WOB (klbf)

Relatório Calculado



21 
 

 

constantes e por duas vezes o teste teve de ser parado pois ocorreu perda total de circulação. Apesar do 

teste ter sido concluído, não foram declaradas no relatório as taxas de penetração médias para WOB de 

40 e 45 klbf, o que impede a geração de uma curva de drill-rate completa. 

Analisando os dados para essa faixa de profundidade, percebe-se na representação gráfica das 

variáveis envolvidas (em relação à profundidade perfurada) que há picos ao longo da distribuição, que 

representam erros de leitura (registrados como -999,25) ou valores aberrantes. Removendo-os, e atendo-

se às mesmas faixas de RPM declaradas no relatório, foram calculados os valores médios de ROP para 

um passo de 5 klbf, dispostos na Tabela 4. 
 

Tabela 4 - Dados do drill-rate test no sétimo RIH, calculados a partir dos dados originais 

WOB 
(klbf) 

RPM 
(rpm) 

FLO 
(gpm) 

ROP 
(m/h) 

Diferença 
(%) 

25 90 600 2,60 44 
30 90 600 2,11 17 
35 90 600 2,29 53 
40 90 600 2,90 - 
45 95 600 4,05 - 
50 85 600 4,90 30 
55 95 600 7,30 135 
60 90 600 8,37 52 
65 90 600 8,26 65 

Fonte: Produção do próprio autor 

 

Traçadas as curvas com os dados calculados e relatados, percebe-se imediatamente que escassez 

de dados do relatório impede uma comparação definitiva entre as curvas, o que ilustra a importância de 

um sistema automatizado que as construa a partir dos dados originais. Mas ainda que essa comparação 

não seja possível, destaca-se como a curva gerada a partir dos dados calculados comporta-se exatamente 

como o esperado para um drill-rate test, com o founder point e a região de máximo ROP facilmente 

deduzíveis. 

 

Figura 5 - Curvas do segundo drill-rate test geradas com dados do relatório e calculados 

 
Fonte: Produção do próprio autor 

0

2

4

6

8

10

20 25 30 35 40 45 50 55 60 65 70 75

R
O

P 
(m

/h
)

WOB (klbf)

Relatório Calculado



22 
 

 

Novamente, houveram diferenças consideráveis entre os valores de ROP, mas que provavelmente 

provém de disparidades nos métodos de filtragem e de cálculo da média dos dados de perfuração. 

Entretanto, os valores de WOB que garantem um ROP máximo em ambas as curvas coincidem, 

considerando uma margem de erro para a taxa de penetração de, pelo menos, 0,1 m/h, o que é 

perfeitamente razoável. 

Conclui-se, ao fim dessa análise, que é possível gerar curvas qualitativamente semelhantes às 

descritas nos relatórios a partir dos dados originais de forma automatizada, com a vantagem de 

demandarem menos tempo para serem construídas e estarem menos sujeitas a erros de leitura. 

 

3.2 GERAÇÃO DE CURVAS DE DRILL-RATE 

 

Uma vez estabelecida a possibilidade de geração de curvas de drill-rate test em intervalos 

de profundidade onde foram realizados testes de perfuração, foi testada a viabilidade de geração 

de curvas análogas para intervalos de operação normal. 

Utilizando como base para essa análise os dados de perfuração de 5198 a 5241 metros, 

por apresentarem uma variação controlada e regular da rotação do eixo e do fluxo do fluido de 

perfuração, o que facilita a separação dos demais parâmetros. 

Excluindo manualmente os pontos onde há uma variação brusca na rotação, foi criada 

uma rotina no software MATLAB para separar os valores de WOB e ROP automaticamente 

por valores de FLO múltiplos de cinquenta (750 e 800 gpm) e valores de RPM múltiplos de dez 

(100, 110, 120, 130 e 140 rpm). Assumindo inicialmente que todos os dados foram coletados 

na região III da curva de drill-rate, e que o comportamento das curvas nessa região pode ser 

aproximado pela equação (1), que representa um polinômio de segundo grau, com concavidade 

voltada para baixo (a &amp;lt;0) (NASCIMENTO, ELMGERBI et al., 2015), as curvas foram 

geradas através de uma ferramenta do programa que aproxima os dados por um cálculo de 

regressão linear. 

 

?(x) = ax2 + bx + c                (1) 

 

As duas curvas iniciais comportarem-se como o esperado, com a concavidade voltada 

para baixo, mas as outras quatro curvas apresentam uma concavidade voltada para cima, o que 

não condiz com o comportamento padrão das curvas dos testes (Figura 6). Nesses casos, os 

dados utilizados possivelmente não foram coletados na região III, como o assumido 

inicialmente, mas sim na região II, que se comporta como uma reta crescente. Uma nova 



23 
 

 

regressão linear dos dados foi calculada, adicionando à rotina do MATLAB uma cláusula que 

analisa o primeiro coeficiente polinomial da equação aproximada e, caso seja um número 

positivo, recalcula a equação como linear. 

 

Figura 6 - Curvas de drill-rate aproximadas para dados de rotação entre 100 e 140 rpm, e fluxo entre 

750 e 800 gpm, evidenciando diferentes comportamentos 

 
Fonte: Produção do próprio autor 

 

Os dados com rotação do eixo de 140 rpm e fluxo de 800 gpm, após uma nova regressão 

linear assumindo um polinômio de primeiro grau, apresentou uma reta decrescente que, ao 

contrário das outras curvas, aparenta ter dados o suficiente para garantir com uma boa confiança 

de que essa curva os representa bem, assumindo que possíveis erros de leitura ou valores 

aberrantes não sejam os causadores desse comportamento inesperado. Portanto, a explicação 

mais plausível é a de que esses dados foram coletados na segunda metade da região III, após o 

vértice da parábola, que apresentam um comportamento decrescente, aproximadamente como 

o ilustrado nesse gráfico. 

Nota-se, também, que a quarta curva apresenta alguns pontos que parecem fugir da 

tendência geral da dispersão (ROP &gt; 8 m/h), e que se removidos mudam completamente o 

sentido da reta aproximada, de crescente para decrescente, o que é uma mudança significativa 



24 
 

 

e que não pode ser ignorada. Portanto, na análise geral dos dados de perfuração, esses valores 

aberrantes devem ser apropriadamente localizados e tratados. 

 
Figura 7 - Curvas de drill-rate aproximadas para dados filtrados de rotação 120 rpm e fluxo 800 gpm, 

destacando mudança no sentido das curvas 

 
Fonte: Produção do próprio autor 

 

3.3 FILTRAGEM E ANÁLISE DOS DADOS 
 

3.3.1 Metodologia de filtragem 
 

Estabelecida a possibilidade de geração de curvas análogas às de drill-rate test com dados 

de operação normal, e determinada a necessidade de uma filtragem desses dados de modo a 

excluir valores com erros de leitura e que fujam da tendência geral da amostra (outliers), 

iniciou-se a análise dos dados de perfuração do poço Ogonga-1 de todo o seu intervalo de 

profundidade.  

Inicialmente, utilizando as ferramentas de filtragem do programa Microsoft Excel, foram 

removidos os pontos que contenham valores nulos, que totalizaram 219 ocorrências. Esses 

valores ocorrem quando há uma vibração excessiva no fundo do poço, havendo uma perda de 

sinal com o BHA, o conjunto de instrumentos e ferramentas responsáveis pela perfuração e 

limpeza do poço (AL DUSHAISHI, 2012). 

De modo a excluir os outliers mais evidentes das distribuições ao longo da profundidade 

perfurada, alguns critérios foram estabelecidos. Para a distribuição de ROP, qualquer sequência 



25 
 

 

de até dois dados – pois uma parábola é definida por, pelo menos, três pontos – que difiram em 

mais de 10 m/h dos dados anteriores e posteriores foi marcada. Esse valor foi estabelecido como 

o dobro da média geral de ROP, aproximado para o múltiplo de cinco mais próximo. 

Similarmente, para as distribuições de RPM e FLO, qualquer sequência de até dois dados de 

valores iguais foi marcada. Nessa inspeção, todos os valores são arredondados para o múltiplo 

de dez mais próximo – no caso da rotação – ou para o múltiplo de cinquenta mais próximo – 

no caso do fluxo – pois os incrementos durante o processo de perfuração ocorreram em passos 

de 10 rpm e 50 gpm. 

Uma rotina foi desenvolvida no Excel para implementar esses critérios de filtragem, e 

todos os dados identificados como aberrantes foram destacados na cor vermelha nos gráficos 

de distribuição de seus respectivos parâmetros. Em seguida, todas as linhas na planilha de dados 

que continham um desses valores destacados foram excluídas. 

Adaptando a rotina de MATLAB criada anteriormente, todos os valores de ROP e WOB 

foram separados por rotações e fluxos arredondados, de forma que se comportem 

aproximadamente como o esperado para curvas de drill-rate. 

Durante a análise inicial, realizada anteriormente, as curvas foram examinadas de forma 

visual para determinar a correlação com os dados que aproximam. Entretanto, de forma a 

facilitar essa determinação nesse novo estudo, uma ferramenta estatística para esse fim teve de 

ser escolhida. 

Uma medida de averiguação da qualidade de ajuste bastante utilizada é o coeficiente de 

determinação, ou R2, que indica a proporção percentual da variabilidade da variável dependente 

y que é explicada pela variável independente x, determinado pela equação (2), onde yi é o valor 

observado, y?i é o valor estimado e y? é a média das observações. 

 

R2 = 1 ?
? (y?i ? yi)

2n
i=1

? (yi ? y?)
2n

i=1
?               (2) 

 

Como todo processo mecânico está sujeito a variações de causas aleatória e especial, que 

ocorrem de acordo com uma função densidade de probabilidade, dispersando os dados em torno 

de um valor médio (COSTA NETO, 2002), é natural que a medida R2 de uma regressão linear 

desses dados apresente um valor baixo, como é o caso da curva aproximada com os dados para 

uma rotação de 160 rpm e fluxo de 700 gpm, ilustrado na Figura 8 (R2 = 20%). Logo, esses 

dados devem ser reduzidos aos seus valores médios para passos pré-determinados de WOB, 

pois assim eles se encontram mais próximos à curva aproximada, e o coeficiente de 



26 
 

 

determinação cresce e pode ser utilizado como uma medida rápida de avaliação da regressão. 

Para as mesmas condições mencionadas anteriormente, os dados foram separados em passos de 

3 klbf, e o R2 passou a ser 98%. Uma comparação visual entre as duas curvas mostra que não 

há uma diferença qualitativa significante, e estabelece uma base intuitiva para o relacionamento 

entre a qualidade de ajuste visual e a implícita pela medida estatística. 

 

Figura 8 - Curvas aproximadas por regressão linear, utilizando os dados originais e os dados reduzidos 

à média 

 
Fonte: Produção do próprio autor 

 

Entretanto, apesar do bom ajuste da curva ilustrada, percebe-se que alguns dos dados 

originais diferem muito dos valores médios calculados e, como demonstrado anteriormente, há 

situações em que esses valores aberrantes podem causar uma variação significante na curva 

aproximada. Portanto, um método de determinação matemática para esses dados deve ser 

utilizado. 

 

3.3.2 Ferramentas estatísticas de determinação de outliers 

 

As formas mais comuns de detecção de valores aberrantes incluem os métodos de desvio 

padrão, de desvio médio (ou mediano) absoluto (MAD) e de diagrama de caixa (boxplot), sendo 



27 
 

 

que nos três casos são estabelecidos limites inferior e superior de um intervalo de confiança, e 

os valores que se encontram além dos limites são evidenciados (LEYS, KLEIN et al., 2013). 

No método de desvio padrão, é calculado o desvio padrão da amostra de acordo com a 

equação (3), onde xi é um valor da amostra, x? é a média e N é o tamanho amostral, e um limite 

de 2 a 3 desvios padrões em torno da média dos dados é estabelecido, dependendo da robustez 

estatística desejada. 

 

? = ?
1

N
? (xi ? x?)

2N
i                 (3) 

 

O método de desvio médio (ou mediano) absoluto determina um limite de 2 a 3 vezes o 

valor MAD em torno da média, determinado pela equação (4), ou em torno da mediana, 

determinado pela equação (5), onde “med” é o operador para o cálculo da mediana. 

 

MAD =
1

N
? |xi ? x?|

N
i                 (4) 

MAD = med(? |xi ? med(x)|
N
i )               (5) 

 

Já no método de diagrama de caixa, os limites são determinados em função da distância 

interquartil IQR, entre os finais do primeiro quartil (Q1) e do terceiro quartil (Q3), e estabelece 

um intervalo de confiança entre Q1-1,5IQR e Q3+1,5IQR. O diferencial dessa ferramenta é sua 

forma conveniente de representar graficamente esse intervalo e os valores aberrantes, como na 

Figura 9. 

 



28 
 

 

Figura 9 - Ferramenta de diagrama de caixa, estabelecendo um intervalo de confiança de 99,3% 

 
Fonte: Produção do próprio autor 

 

Um problema comum entre ferramentas desse tipo é a dependência do valor médio para 

determinar os limites, que é fortemente influenciado pela presença de outliers e, portanto, pode 

distorcer o intervalo de confiança para marcar valores normais como aberrantes, ou ainda 

aceitar valores aberrantes. Como os métodos de desvio padrão e MAD (média) sofrem desse 

problema, e alguns dos valores aberrantes localizados visualmente apresentaram um desvio 

demasiadamente grande em relação à média, eles não serão adequados para o uso nesse projeto. 

Já os métodos de diagrama de caixa e MAD (mediana), por utilizarem percentis como base para 

o cálculo desses valores, não sofrem desse problema e são muito mais indicados para esse fim 

(LEYS, KLEIN et al., 2013). 

Ambos os métodos se baseiam na premissa de que a função distribuição de probabilidade 

que descreve o processo se comporta como uma gaussiana (distribuição normal), o que ocorre 

quando o processo está sob controle estatístico, e não há influência de variações de causa 

especial. Apesar de essa ser a situação ideal para qualquer operação, nem sempre é possível 

manter esse controle, especialmente durante a perfuração de poços na região III das curvas de 

drill-rate, onde há uma maior influência das ineficiências do processo. Sendo assim, é 

necessário o uso de uma ferramenta estatística que leve em consideração uma possível 

assimetria da distribuição. 



29 
 

 

3.3.2.1 Diagrama de caixa ajustado 

 

Um ajuste matemático do diagrama de caixa foi proposto por Hubert e Vanderviere 

(2004) para adequar o método a assimetrias, utilizando uma medida estatística robusta para a 

determinação da obliquidade da distribuição, chamada medcouple (MC). Os limites superior e 

inferior desse ajuste são mostrados na Figura 10, e os valores “a” e “b” são definidos de acordo 

com a expressão (6). 

 

{
a = ?4  e  b = 3, MC ? 0
a = ?3  e  b = 4, MC &amp;lt;0

               (6) 

 

A medida medcouple é calculada através de um algoritmo computacional complexo, que 

foi implementado em conjunto da ferramenta de diagrama de caixa ajustado no software 

MATLAB (HUBERT e VERBOVEN, 2005). Um valor positivo indica uma distribuição com 

uma “cauda” direita longa, e um valor negativo indica uma distribuição com uma “cauda” 

esquerda longa. Quando o valor é zero, a distribuição é simétrica, e os limites do diagrama de 

caixa ajustado tornam aos limites do diagrama de caixa original. 

 
Figura 10 - Ferramenta de diagrama de caixa ajustado, estabelecendo um intervalo de confiança para 

uma distribuição assimétrica 

 
Fonte: Produção do próprio autor 

 



30 
 

 

Com essa ferramenta, é possível determinar os valores aberrantes das distribuições de 

ROP. Utilizando os dados aproximados por uma curva anteriormente, e empregando diagramas 

de caixa ajustados para cada passo de 3 klbf, foram detectados 30 outliers, evidenciados na cor 

laranja na Figura 11.  

 

3.3.3 Confiabilidade em amostras pequenas 

 

Como cada ponto de uma curva de drill-rate é definido pelo valor médio x? da dispersão 

de dados, e o espalhamento desses dados é descrito por uma função densidade de probabilidade, 

quanto menor o tamanho de uma amostra, maior é a incerteza em relação a esse valor médio 

calculado. Para uma distribuição normal, o cálculo da margem de erro ME é descrito pela 

equação (7), onde Z?/2 é o escore definido por tabelas estatísticas para um determinado 

intervalo de confiança (1 ? ?). Ao reduzir o tamanho amostral N, aumenta-se a margem de 

erro da média, ou diminui-se o intervalo de confiança. 

 

x? ± ME, ME =
Z?/2 ? ?

?N
?                (7) 

 

Apesar da equação não poder ser empregada para os intervalos de ROP, pois apresentam 

uma distribuição oblíqua, o mesmo princípio se aplica, o que torna os pontos resultados de uma 

média de poucos números pouco confiáveis, e uma medida de confiabilidade nova deve ser 

definida. 

 



31 
 

 

Figura 11 - Curvas aproximadas por regressão linear, utilizando os dados originais e os dados filtrados 

(com valores ponderados) 

 
Fonte: Produção do próprio autor 

 

Para situações onde há muitos pontos com o valor de N associado relativamente alto, em 

relação aos poucos pontos originários de tamanhos de amostra baixos, a curva aproximada por 

regressão linear pode ser distorcida e ter seu vértice deslocado. Uma forma simples de evitar 

isso é realizar uma regressão linear com dados ponderados com os valores de seus tamanhos 

amostrais, como exemplificado na Figura 11. O último ponto, com WOB em torno de 37 klbf, 

é resultado da média de apenas 12 dados, ante os quatro pontos mais confiáveis que representam 

separadamente mais de 100 dados, e aparenta estar deslocado em 0.5 m/h para cima, o que 

diminui o coeficiente de determinação em pouco mais de 1 ponto percentual, mas garante uma 

curva mais confiável.  

Entretanto, em algumas situações a maioria dos pontos são pouco confiáveis, e o método 

de valores ponderados não assegura uma melhoria na aproximação das curvas. De forma a 

determinar uma relação entre o tamanho amostral e a confiabilidade nas aproximações, uma 

rotina foi criada para simular situações, para cada passo de WOB, em que amostras aleatórias 

de ROP, de tamanhos incrementais, sejam selecionadas e tenham suas médias comparadas com 

a média total da população daquele passo. 



32 
 

 

De acordo com o teorema central do limite (TCL), a média aritmética de valores aleatórios 

de qualquer tipo de distribuição, após um número suficientemente grande de iterações, se 

comporta aproximadamente como uma função de distribuição normal (RICE, 2007). Portanto, 

de modo a facilitar a análise posterior, o erro em relação à média foi calculado em um laço 

repetido mil vezes, e os valores foram distribuídos em uma gaussiana. 

 

Figura 12 - Distribuição da diferença entre a média de uma população de 32 dados e as médias de 

amostras de 5 dados coletados aleatoriamente 

 
Fonte: Produção do próprio autor 

 

Após cada iteração, para todos os passos de todas as curvas de drill-rate, os valores 

absolutos máximos de cada distribuição, assumindo uma região de confiança de 95%, são 

extraídos e dispostos em um gráfico de dispersão em função do tamanho das amostras (Figura 

13). Com esses dados, uma função de distribuição de lei de potência foi aproximada por 

regressão linear, descrita pela equação (8), onde f(x) é a margem de erro máxima e x é o 

tamanho da amostra. 

 

?(x) = 2,555x?0,5893 ? 0,07585              (8) 



33 
 

 

Figura 13 - Gráfico de dispersão das margens de erro máximas esperadas para um intervalo de 

confiança de 95%, em relação ao tamanho das amostras 

 
Fonte: Produção do próprio autor 

 

Para valores de margem de erro de 0,2 a 2,0 m/h, a passos de 0,2 m/h, foram calculados 

os tamanhos amostrais, que foram aproximados para cima de forma a aumentar a robustez dos 

cálculos, e dispostos na Tabela 5. 

 

Tabela 5 - Tamanhos amostrais calculados para diferentes valores de margem de erro máxima para 

ROP 

Tamanho 
amostral 

Margem de erro máxima 
(m/h) 

44 0,2 
18 0,4 
10 0,6 
7 0,8 
5 1,0 
4 1,2 
3 1,4 
2 1,6 
2 1,8 
2 2,0 

Fonte: Produção do próprio autor 



34 
 

 

O mesmo processo iterativo foi realizado para as variações de WOB para cada passo, e 

uma função similar foi aproximada, descrita pela equação (9). Utilizando os valores de tamanho 

amostral encontrados, as margens de erro máximas foram calculadas e dispostas na Tabela 6. 

 

?(x) = 1,626x?0,545 ? 0,06671               (8) 

 

Tabela 6 - Valores de margem de erro máxima para WOB calculados para tamanhos amostrais 

determinados na tabela 5 

Tamanho 
amostral 

Margem de erro máxima 
(klbf) 

44 0,15 
18 0,25 
10 0,4 
7 0,5 
5 0,6 
4 0,7 
3 0,85 
2 1,0 

Fonte: Produção do próprio autor 
 

Como os valores de margem de erro encontrados são baixos em relação à faixa de WOB 

utilizada para a construção de curvas de drill-rate na região III, seus efeitos serão 

negligenciados. 

Apesar de agora se ter uma ideia dos valores de erro esperáveis para pontos pouco 

confiáveis, ainda é preciso determinar a confiabilidade estatística nas curvas que os aproxima. 

Para isso, uma nova rotina foi desenvolvida para testar todas as situações possíveis de margens 

de erro em parábolas com 3 a 12 pontos, analisar os efeitos causados e estabelecer uma 

porcentagem de confiança no valor de WOB calculado nessas curvas para um ROP máximo. 

Uma medida análoga ao conjunto imagem de uma função quadrática com concavidade 

voltada para baixo – descrito pela expressão (9) – foi especificada para facilitar a separação das 

curvas geradas pela rotina, diferindo da imagem ao especificar um limite inferior ymin, que é o 

menor valor no eixo y para o intervalo conhecido no eixo x. A distância entre esses pontos foi 

definida pela variável range pela equação (10). 

 

Im = {y ? ?|y ? yv =
??

4a? }               (9) 

rng = yv ? ymin                (10) 

 



35 
 

 

Para simplificar o cálculo das curvas pela rotina, foi escolhida uma parábola com o 

coeficiente c = 0, para que o menor valor da curva no eixo y seja a origem, e coeficiente a =

?1 para que tenha uma concavidade para baixo e raízes {0; b}. Como o valor de range será a 

coordenada vertical do vértice (pois ymin = 0) deduz-se, enfim, que o coeficiente b = 2?rng. 

Foram criadas curvas com valores de range entre 0,5 e 6, determinado pelos valores 

encontrados nas curvas de drill-rate calculadas anteriormente, definindo a posição de seus 

pontos aleatoriamente (com exceção do primeiro e último pontos, que são as raízes), e aplicando 

mil diferentes medidas de margem de erro escolhidas aleatoriamente de distribuições normais 

com média zero e desvio padrão determinado pela equação (11), onde x é o valor encontrado 

na posição definida pelo escore Z, e ? é a média da distribuição. Para um intervalo de confiança 

de 95%, Z = 1,96 e a diferença entre o valor x e a média é a margem de erro máxima calculada 

anteriormente. Portanto, o desvio padrão utilizado foi ? = ME 1,96? , variando os valores de 

ME de acordo com os definidos na Tabela 5. 

 

Z =
(x ? ?)

??                (11) 

 

Para cada erro aplicado aos pontos das curvas, uma nova curva é aproximada por 

regressão linear, e o seu novo valor de range é calculado e armazenado. Ao final de todas as 

iterações, foram criadas tabelas com a distribuição de proporções dos novos valores de range 

por curva original (e.g. 28% das curvas com 6 pontos de range 1,5 foram aproximadas por 

curvas de range 2,0 para uma margem de erro máxima de 1,2, como demonstrado na Tabela 7), 

assim como tabelas de probabilidade de uma curva aproximada ter sua coordenada horizontal 

do vértice (WOB para ROP máximo) deslocada da coordenada real em até 10 a 30%, em relação 

à origem (founder point), como demonstrado na Tabela 8 (e.g. 56% das curvas aproximadas 

com 6 pontos e range 2,0 apresentam a coordenada horizontal de seus vértices deslocada em 

até 10%). 

  



36 
 

 

Tabela 7 - Distribuição de probabilidades de curvas perfeitas com 6 pontos e valores de range entre 

0,5 e 6, ao serem aplicadas variações em y de até 1,2, gerem curvas aproximadas com valores de range 

entre 0,5 e 8,5 

  Range (curva perfeita) 

  0.5 1 1.5 2 2.5 3 3.5 4 4.5 5 5.5 6 

R
a

n
g

e
 (

cu
rv

a
 a

p
ro

x
im

a
d

a
) 

0.5 13% 5% 1% 0% 0% 0% 0% 0% 0% 0% 0% 0% 

1 32% 22% 7% 2% 1% 0% 0% 0% 0% 0% 0% 0% 

1.5 30% 32% 23% 8% 2% 0% 0% 0% 0% 0% 0% 0% 

2 16% 24% 28% 21% 10% 2% 0% 0% 0% 0% 0% 0% 

2.5 7% 14% 26% 30% 22% 7% 2% 1% 0% 0% 0% 0% 

3 1% 5% 13% 25% 28% 22% 9% 2% 1% 0% 0% 0% 

3.5 1% 1% 3% 11% 25% 30% 21% 9% 2% 0% 0% 0% 

4 0% 0% 1% 3% 9% 24% 30% 21% 9% 2% 0% 0% 

4.5 0% 0% 0% 1% 4% 11% 23% 31% 22% 9% 2% 0% 

5 0% 0% 0% 0% 1% 3% 12% 24% 31% 22% 8% 2% 

5.5 0% 0% 0% 0% 0% 1% 3% 10% 23% 32% 21% 10% 

6 0% 0% 0% 0% 0% 0% 1% 3% 11% 23% 30% 21% 

6.5 0% 0% 0% 0% 0% 0% 0% 1% 3% 10% 25% 30% 

7 0% 0% 0% 0% 0% 0% 0% 0% 1% 4% 11% 23% 

7.5 0% 0% 0% 0% 0% 0% 0% 0% 0% 1% 3% 12% 

8 0% 0% 0% 0% 0% 0% 0% 0% 0% 0% 1% 3% 

8.5 0% 0% 0% 0% 0% 0% 0% 0% 0% 0% 0% 1% 
Fonte: Produção do próprio autor 

 

  Máxima variação de xv 

 &amp;lt;10%&amp;lt;20%&amp;lt;30% 

R
a

n
g

e
 (

cu
rv

a
 a

p
ro

x
im

a
d

a
) 

0.5 29% 52% 62% 

1 36% 58% 70% 

1.5 48% 70% 82% 

2 56% 80% 88% 

2.5 63% 87% 94% 

3 77% 95% 99% 

3.5 84% 98% 100% 

4 92% 100% 100% 

4.5 93% 100% 100% 

5 95% 100% 100% 

5.5 98% 100% 100% 

6 99% 100% 100% 

6.5 99% 100% 100% 

7 98% 100% 100% 

7.5 100% 100% 100% 

8 100% 100% 100% 

8.5 100% 100% 100% 
 

 

Tabela 8 - Probabilidades de curvas aproximadas com 6 

pontos e valores de range entre 0,5 e 8,5 apresentarem a 

coordenada horizontal de seus vértices deslocada do 

vértice real em até 10 a 30%, em relação ao founder point 

Fonte: Produção do próprio autor 

 



37 
 

 

3.3.4 Aproximação de curvas de drill-rate com tabelas de confiança 

 

Determinadas as medidas de avaliação da confiabilidade em curvas aproximadas com 

pontos de baixo tamanho amostral, foi possível desenvolver um novo método de geração de 

curvas de drill-rate, que leva em consideração o número de dados originais e o valor de range 

calculado. 

Utilizando os dados já filtrados por erros de leitura e valores aberrantes, determinados 

pela ferramenta de diagrama de caixa, uma rotina de MATLAB foi desenvolvida para testar 

todas as possibilidades de combinação dos pontos para um valor de RPM e FLO qualquer, de 

acordo com a equação (12) de combinação simples, para curvas com 3 pontos até o número 

total de pontos disponível, excluindo da análise pontos que representem um tamanho amostral 

de apenas 1 dado. Todas as possíveis combinações são utilizadas para aproximar curvas 

polinomiais de segundo grau, e as curvas com concavidade para baixo tem seus valores de 

range calculados e utilizados, juntos das margens de erro máximas esperadas para os pontos de 

menor confiança, para averiguar as probabilidades do vértice estar deslocado em proporções 

relativas ao founder point. 

Em seguida, as curvas com probabilidade de deslocamento menor que 10% acima de 90% 

são separadas e passam por uma nova análise. São selecionadas as curvas com a menor margem 

de erro possível e, entre elas, é selecionada a que tiver mais pontos e que tenha a coordenada 

horizontal do vértice dentro de um intervalo determinado por um diagrama de caixa aplicado à 

todos os valores das curvas (de modo a excluir curvas com coordenadas suspeitamente distantes 

da mediana da população). 

Caso não existam curvas com essas características, são separadas aquelas com 

probabilidade de deslocamento menor que 20% acima de 90%, e os mesmos critérios acima são 

utilizados para a escolha da curva ideal. No caso extremo em que nenhuma curva seja 

selecionada, são separadas as curvas com maior probabilidade de deslocamento menor que 

30%, e caso haja mais de uma com a probabilidade máxima, os mesmos critérios de escolha 

anteriores são utilizados. 

  



38 
 

 

4 RESULTADOS 

 

Figura 14 - Dados de perfuração do poço Ogonga-1. Em destaque (vermelho), os valores detectados 

como aberrantes pelos métodos de filtragem inicial 

    
Fonte: Produção do próprio autor 

 

Na Figura 14, foram representados os dados de perfuração Ogonga-1 em função da 

profundidade em relação ao nível do mar. Com o método de filtragem inicial, foram destacados 

os valores aberrantes mais evidentes da distribuição, que poderiam a distorcer as curvas geradas 

em seguida. 

5
0
5
0
 

5
8
4
0
 

P
ro

fu
n
d
id

a
d

e
 (

m
) 



39 
 

 

A separação dos dados em categorias distintas utilizando os valores da rotação RPM e do 

fluxo de fluido de perfuração FLO, e a utilização da ferramenta de diagrama de caixa ajustado 

para passos de WOB, em conjunto com o método de regressão linear com valores ponderados 

em relação aos tamanhos amostrais de origem, resultou em curvas bem definidas e de fácil 

análise pelos operadores da sonda de perfuração. As rotinas utilizadas para a realização desses 

passos foram detalhadas no Apêndice A. 

Algumas das curvas geradas em momentos distintos do desenvolvimento do projeto, com 

seus respectivos parâmetros de operação e WOB do ponto de inflexão da parábola, foram 

representadas na Figura 15. As curvas pontilhadas foram aproximadas antes da utilização do 

diagrama de caixa ajustado, seguida das curvas azuis, após a retirada dos outliers e, por fim, as 

curvas em laranja, traçadas ao aplicar pesos para os dados reduzidos às suas médias. Apesar do 

menor valor de R2 para alguns casos, elas representam as melhores aproximações possíveis com 

a quantidade de dados disponíveis. 

 

Figura 15 - Curvas calculadas ao longo do progresso dos métodos, para rotação de 110 rpm e fluxo de 

600 gpm 

 
Fonte: Produção do próprio autor 



40 
 

 

Figura 16 - Curvas calculadas ao longo do progresso dos métodos, para rotação de 140 rpm e fluxo de 

650 gpm 

 
Fonte: Produção do próprio autor 
 
 

Figura 17 - Curvas calculadas ao longo do progresso dos métodos, para rotação de 160 rpm e fluxo de 

700 gpm 

 
Fonte: Produção do próprio autor 



41 
 

 

Pela Figura 15, percebe-se que algumas curvas não necessitam de todo o processamento 

que passaram, pois já tem pontos bem definidos ainda antes da aplicação do diagrama de caixa. 

Entretanto, as Figura 16 e Figura 17 apresentam curvas que se comportaram muito diferentes 

da tendência dos pontos, quando analisados visualmente.  

Na primeira, o último ponto, apesar de ser o resultado da média de apenas dois dados, 

induz a aproximação da curva passando por ele, apesar de não ser muito confiável. Quando 

utilizado o método de valores ponderados, os outros pontos que têm tamanhos amostrais 

maiores induzem a aproximação da curva na direção mais precisa, modificando o WOB do 

vértice de 63 klbf para a primeira regressão linear, para 46 klbf, um valor mais condizente com 

os valores de WOB utilizados ao longo da perfuração do poço.  

Entretanto, apesar dos valores ponderados, o método de regressão linear não descarta 

nenhum ponto e tenta aproximá-los todos da melhor forma possível, o que acaba gerando curvas 

incorretas. Os dois primeiros pontos da segunda Figura 16 aparentam pertencerem à região II 

da curva de drill-rate, e consequentemente não deveriam ser utilizados para traçar uma parábola 

aproximada. Isso acabou por modificando o valor calculado para WOB do vértice de 17 klbf 

para 6 klbf, o que é demasiadamente baixo e foge da tendência geral dos dados disponíveis. 

As curvas calculadas com os métodos anteriores nem sempre representaram bem os 

pontos, especialmente quando há uma escassez de dados. Nesses casos, foi utilizado o método 

com as tabelas de probabilidade por valor de range, como na Figura 18. As três primeiras 

curvas, calculadas da mesma forma que a das figuras anteriores, foram aproximadas como retas 

decrescentes, o que explica o comportamento geral dos dados, mas deixa por desejar o valor do 

WOB do vértice. A curva aproximada com as tabelas utilizou os quatro pontos mais confiáveis 

disponíveis, evitando assim uma distorção muito grande de seu comportamento, e calculou a 

posição do vértice com a probabilidade de 72% de estar deslocada do valor real em apenas 10%, 

em relação ao founder point. Para intervalos de deslocamento maiores, a probabilidade 

ultrapassa 90%, que por ser uma medida calculada utilizando valores de margem de erro 

máximos para uma distribuição normal (com intervalo de confiança de 95%), é um valor 

bastante confiável. 



42 
 

 

Figura 18 - Curvas calculadas ao longo do progresso dos métodos, para rotação de 120 rpm e fluxo de 

600 gpm 

 
Fonte: Produção do próprio autor 
 



43 
 

 

5 CONCLUSÃO 

 
 

Poços perfurados em água ultraprofundas, sobretudo na região de pré-sal no Atlântico 

Sul, apresentam maiores dificuldades que resultam em uma taxa de penetração média 

consideravelmente baixa. Por conta da imprevisibilidade das formações rochosas, as brocas 

utilizadas apresentam em média vidas úteis de 20 a 250 metros por descida para brocas PDC, 

100 a 250 metros por descida para brocas tricônicas, e 400 a 500 metros por descida para brocas 

de coroa impregnada, resultando em custos entre US$30.000 e US$50.000 por metro, o que é 

um custo consideravelmente alto, sobretudo quando o valor do barril de petróleo mundial está 

em baixa (HBAIEB e AZAR, 2013). Entretanto, a tecnologia de exploração desses poços ainda 

está em desenvolvimento, e há espaço para melhorias e interesse em técnicas de otimização de 

perfuração em tempo real (WOOD, 2015). 

Com os métodos propostos para a filtragem e organização dos dados de perfuração, foi 

possível a aproximação de curvas análogas às obtidas durante a realização de drill-rate tests, 

comportando-se como o esperado, explicitando o valor de WOB para o ponto de inflexão e o 

ROP máximo possível para a configuração utilizada, garantindo a estipulação de um limite 

operacional para auxiliar na escolha dos novos parâmetros de perfuração pelo operador. 

Destaca-se que as curvas geradas a partir desses métodos mostraram-se mais precisas e 

confiáveis que as construídas manualmente durante os testes de perfuração periódicos, 

utilizando os mesmos dados dos registros ASCII coletados pelos sensores da sonda. Além disso, 

conferem uma diminuição no tempo de análise dos dados de testes, acelerando o progresso da 

operação. 

Entretanto, uma quantidade alta de curvas geradas com dados de operação corrente se 

comportaram como retas crescentes ou decrescentes, diferentemente do comportamento 

esperado. Realizando uma análise visual dessas curvas, percebe-se que muitas estão 

“contaminadas” com dados das outras duas regiões das curvas de drill-rate e, inclusive, com 

dados de trechos de profundidade distantes um do outro, pois a única forma utilizada para 

separar esses dados foi com os valores de RPM e FLO, que acabam sendo utilizados diversas 

vezes ao longo do processo. 

Portanto, para futuras análises, uma forma de separação desses dados por trechos de 

litologia similar e de utilização do mesmo modelo de broca deve ser desenvolvido, aprimorando 

o método aqui proposto. Há também espaço para a inclusão de um método de previsão das 

curvas, utilizando dados de energia específica hidromecânica, possibilitando uma comparação 



44 
 

 

gráfica entre o comportamento previsto e o observado, explicitando ineficiências na 

configuração utilizada e garantindo mais um nível de auxílio na tomada de decisões. 

A partir dos métodos desenvolvidos nesse trabalho, torna-se possível o desenvolvimento 

de um sistema computacional em conjunto com a indústria petrolífera, de modo a atualizar as 

curvas geradas em tempo real com os dados correntes de operação, representando uma inovação 

para a área.  



45 
 

 

BIBLIOGRAFIA 

 
 
AL DUSHAISHI, M. F. Investigation of Drillstring Vibration Reduction Tools. Missouri 
University of Science and Technology. [S.l.]. 2012. 
 
BERG, P. V.; TVEIT, Ø. S. Model for evaluating drilling efficiency based on the concept 
of Mechanical Specific Energy. Norwegian University of Science and Technology. 
Trondheim. 2016. 
 
BOURGOYNE, A. T. et al. Applied Drilling Engineering. [S.l.]: Society of Petroleum 
Engineers, v. SPE Textbook Series Vol. 2, 1991. 
 
COSTA NETO, P. L. D. O. Estatística. 2. ed. São Paulo: Edgard Blücher, 2002. 
 
DUPRIEST, F. E.; KOEDERITZ, W. L. Maximizing Drill Rates with Real-Time 
Surveillance of Mechanical Specific Energy. SPE/IADC Drilling Conference. [S.l.]: Society 
of Petroleum Engineers. 2005. 
 
GALP Energia. Galp Energia, 2014. Disponivel em: 
&lt;http://www.galpenergia.com/PT/agalpenergia/os-nossos-negocios/Exploracao-
Producao/fundamentos-engenharia-petroleo/Paginas/Perfuracao.aspx&gt;. Acesso em: Dezembro 
2016. 
 
HBAIEB, S.; AZAR, M. Hybrid Bit Improves Drilling Efficiency in Brazil's Pre-salt 
Formations. World Oil, p. B154-B157, Setembro 2013. 
 
HUBERT, M.; VANDERVIERE, E. An Adjusted Boxplot for Skewed Distributions. 
Proceedings in Computational Statistics, p. 1933-1940, Janeiro 2004. 
 
HUBERT, M.; VERBOVEN, S. LIBRA: a MATLAB Library for Robust Analysis. 
Chemometrics and Intelligent Laboratory Systems, v. 75, n. 2, p. 127-136, Fevereiro 2005. 
 
IADC Drilling Manual. 12. ed. [S.l.]: International Association of Drilling Contractors, 2014. 
 
LEYS, C. et al. Detecting Outliers: Do Not Use Standard Deviation Around The Mean, Use 
Absolute Deviation Around The Median. Journal of Experimental Social Psychology, v. 
49, n. 4, p. 764–766, Julho 2013. 
 
MITCHELL, R. F.; MISKA, S. Z. Fundamentals of Drilling Engineering. [S.l.]: Society of 
Petroleum Engineers, 2011. 
 
NASCIMENTO, A. et al. Dynamic Drill-rate Test Approach Applied to a Pre-salt Case 
Study. SPE Latin American and Caribbean Petroleum Engineering Conference. Quito: [s.n.]. 
2015. 
 
RICE, J. A. Convergence in Distribution and the Central Limit Theorem. Mathematical 
Statistics and Data Analysis. 3. ed. [S.l.]: Duxbury Press, 2007. Cap. 5.3. 
 
  



46 
 

 

APÊNDICE A – CÓDIGO FONTE DE ROTINAS NO MATLAB 

 

Os quadros apresentados nesse apêndice contêm os códigos fonte das rotinas 
desenvolvidas no software MATLAB, com descrições detalhadas das linhas de código mais 
importantes na cor verde, de modo a facilitar o entendimento da lógica programática das 
rotinas. 

(continua) 

 

%% Organiza os dados originais em campos de gpm/rpm específicos 
 

load drillingdata %carrega os dados filtrados no Excel 

 
RPMmin = 0; GPMmin = 0; RPMmax = 0; GPMmax = 0; 
H = height(drillingdata2); %número de linhas na tabela 
datadr = []; %cria uma matriz vazia 
for i = 1:H 
    rpm = round(drillingdata2{i,1}/10,0)*10; %aproxima para o múltiplo 

de 10 mais próximo 
    gpm = round(drillingdata2{i,5}/50,0)*50; %aproxima para o múltiplo 

de 50 mais próximo 
    f = sprintf('gpm%drpm%d',gpm,rpm); %nome do campo gpm/rpm 
    if isfield(datadr, f) == 0 %checa se o campo gpm/rpm não existe 
        datadr.(f) = []; %cria campo gpm/rpm 
    end    
    datadr.(f) = [datadr.(f); drillingdata2{i,2:4}]; %adiciona linhas na 

matriz existente 
    % Designa valores mínimo e máximo para rpm e gpm 
    if i == 1; RPMmin = rpm; GPMmin = gpm; end 
    if rpm &amp;lt;RPMmin; RPMmin = rpm; end 
    if rpm &gt; RPMmax; RPMmax = rpm; end 
    if gpm &amp;lt;GPMmin; GPMmin = gpm; end 
    if gpm &gt; GPMmax; GPMmax = gpm; end 
end 

 
%% Filtra e separa dados organizados em passos de WOB 
 

datadr_p = []; 
for gpm = GPMmin:50:GPMmax 
    for rpm = RPMmin:10:RPMmax 
        f = sprintf('gpm%drpm%d',gpm,rpm); %nome do campo gpm/rpm 
        if isfield(datadr, f) == 0 %checa se o campo gpm/rpm não existe 
            continue 
        end 
        datadr.(f) = sortrows(datadr.(f)); %organiza linhas em ordem 

ascendente 
        H = size(datadr.(f),1); %número de linhas no campo 
        p = 10; %número de pontos no gráfico 
        ss = round(range(datadr.(f)(:,1))/(p*0.5))*0.5; %tamanho do 

passo de WOB a partir do primeiro valor [klbf] 
        if ss &amp;lt;1 
            ss = 1;    
        elseif ss &gt; 5 
            ss = 5; 
        end 

Quadro 3 - Código fonte de rotina no MATLAB para organizar e filtrar dados, e gerar curvas de drill-

rate 



47 
 

 

Quadro 3 - Código fonte de rotina no MATLAB para organizar e filtrar dados, e gerar curvas 
de drill-rate 

(continuação) 

 

        j = ss; 
        i = 1; wob_p = []; rop_p = []; depth_p = []; 
        while i&amp;lt;= H 
            while (i&amp;lt;= H) &amp;amp;&amp;amp; (datadr.(f)(i,1)&amp;lt;= datadr.(f)(1,1)+j) 
                wob_p = [wob_p; datadr.(f)(i,1)]; 
                rop_p = [rop_p; datadr.(f)(i,2)]; 
                depth_p = [depth_p; datadr.(f)(i,3)]; 
                i = i + 1; 
            end 
            n = size(wob_p,1); 
            if n ~= 0 %checa se há valores que correspondem com o atual 

passo de WOB 
                if isfield(datadr_p, f) == 0 %checa se o campo gpm/rpm 

não existe 
                    datadr_p.(f) = []; 
                end 
                datadr_p.(f) = [datadr_p.(f);[mean(wob_p) mean(rop_p) n 

mean(depth_p)]]; %adiciona linhas na matriz existente 
                datadr.(f)((i-n):(i-1),4) = mean(wob_p); 
                datadr.(f)(1,5) = ss; 
                wob_p = []; rop_p = []; depth_p = []; 
            end 
            j = j + ss; %aumenta o tamanho do passo a partir do primeiro 

valor em um passo 
        end 
    end 
end 

 
%% Identifica valores aberrantes e traça curvas de drill-rate 
 

for gpm = GPMmin:50:GPMmax 
    for rpm = RPMmin:10:RPMmax 
        f = sprintf('gpm%drpm%d',gpm,rpm); %nome do campo gpm/rpm 
        if isfield(datadr_p, f) == 0 %checa se o campo gpm/rpm não 

existe 
            continue 
        end 
        if size(datadr_p.(f),1) &amp;lt;3 %ignora campos com menos de três 

dados 
            continue 
        end 
        figure; 
        set(gcf,'units','normalized','outerposition',[0 0 0.5 1]) 

%estabelece posição na imagem no lado esquerdo da tela 
        clear title 
        wob = datadr_p.(f)(:,1); %[klbf] 
        rop = datadr_p.(f)(:,2); %[m/h] 
        n = datadr_p.(f)(:,3); %número de dados reduzidos à média 
        [eq,gof,output] = fit(wob,rop,'poly2'); %aproximação para uma 

função quadrática 
        % Gera os diagramas de caixa e dispersão de dados 
            adjustedboxplot(datadr.(f)(:,2),'groupvalid', 

datadr.(f)(:,4),'positions',unique(datadr.(f)(:,4)),'colors',[0.4 0.6 

1],'widths',0.3,'symbol','.w'); 



48 
 

 

Quadro 3 - Código fonte de rotina no MATLAB para organizar e filtrar dados, e gerar curvas 
de drill-rate 

(continuação) 

 
 
 
 

            % Estabelece estilo dos diagramas de caixa 
            bp_obj = findobj(gca,'Tag','Box'); 
            set(bp_obj,'LineWidth',1.5) 
            whisk = findobj(gca,'-regexp','Tag','\w*Whisker'); 
            set(whisk,'LineStyle','-') 
            for j = 1:length(bp_obj) 
                patch(get(bp_obj(j),'XData'),get(bp_obj(j),'YData'),[0.4 

0.6 1],'FaceAlpha',0.5,'LineWidth',1.5,'EdgeColor',[0.4 0.6 1]); 
            end 
            bp_median = findobj(gca,'Tag','Median'); 
            for j = 1:length(bp_median) 
                line(get(bp_median(j),'XData'), 

get(bp_median(j),'YData'),'Color','w','LineWidth',1.5); 
            end 
            bp_out = findobj(gca,'Tag','Outliers'); 
            set(gca,'xtickmode','auto','xticklabelmode','auto') 
            hold on 
            scatter(datadr.(f)(:,4),datadr.(f)(:,2),20,'o', 

'MarkerEdgeColor',[0.6 0.6 0.6],'MarkerFaceColor','w'); %dispersa dados 

no centro de cada passo, para facilitar a visualização gráfica 
            for j = 1:length(bp_out) 
                scatter(get(bp_out(j),'XData'),get(bp_out(j),'YData'), 

20,'o','MarkerEdgeColor',[1 0.5 0]) 
            end 
        % Procura por valores aberrantes no diagrama de caixa 
            H = size(datadr_p.(f),1); 
            if isempty(bp_out) == 0 
                out = get(bp_out(:),'YData'); %grava valores aberrantes 

do diagrama de caixa 
                if iscell(out) == 0 
                    out = num2cell(out); 
                end 
                out_log = ismember(datadr.(f)(:,2),cat(2,out{:})', 

'rows'); %cria matriz lógica para indicar valores aberrantes 
            else 
                out_log = 0; 
            end 
            if sum(out_log) &gt;= 1 %checa se há valores aberrantes 
                wob_out = ~out_log.*datadr.(f)(:,1); 
                rop_out = ~out_log.*datadr.(f)(:,2); 
                n_new = zeros(H,1); wob_new = zeros(H,1); rop_new = 

zeros(H,1); k = 1; 
                for j = 1:H %remove valores aberrantes dos dados 
                    n_new(j,1) = datadr_p.(f)(j,3)-

sum(out_log(k:k+n(j,1)-1,1)); 
                    wob_new_temp = wob_out(k:k+n(j,1)-1,1); 
                    wob_new(j,1) = mean(wob_new_temp(wob_new_temp~=0)); 
                    rop_new_temp = rop_out(k:k+n(j,1)-1,1); 
                    rop_new(j,1) = mean(rop_new_temp(rop_new_temp~=0)); 
                    k = k+n(j,1); 
                end 
            end 



49 
 

 

Quadro 3 - Código fonte de rotina no MATLAB para organizar e filtrar dados, e gerar curvas 
de drill-rate 

(continuação) 

 

            if sum(out_log) &amp;lt;1 
                n_new = n; 
                wob_new = wob; 
                rop_new = rop; 
                output_new = output; 
            end 
        % Gera dados ponderados  
            wob_w = []; rop_w = []; 
            for j = 1:H 
                wob_w = [wob_w; repmat(wob_new(j,1),n_new(j,1),1)]; 
                rop_w = [rop_w; repmat(rop_new(j,1),n_new(j,1),1)]; 
            end 
        % Aproxima e gera curvas de drill-rate 
        if eq.p1 &gt; 0 %se a parábola tiver concavidade para cima 
            % Aproxima curva com dados originais 
                [eq,gof,output] = fit(wob,rop,'poly1'); %aproximação 

para uma equação linear 
                pl = plot(eq,':k',wob,rop,'^'); 
                set(pl,'MarkerEdgeColor','k','MarkerFaceColor','w', 

'DisplayName',['Curva original (R^{2} = ' num2str(gof.rsquare) ')']) 
                leg = legend(pl(2),'Location','Northwest'); 
                set(leg,'FontSize',16); 
            % Aproxima curva com dados sem valores aberrantes 
                if sum(out_log) &gt;= 1 %checa se há valores aberrantes 
                    % Aproxima curva com novos dados 
                    [eq_new,gof_new,output_new] = 

fit(wob_new,rop_new,'poly2'); %aproximação para uma equação quadrática 
                    if eq_new.p1 &gt; 0 %se a parábola tiver concavidade 

para cima 
                        [eq_new,gof_new,output_new] = 

fit(wob_new,rop_new,'poly1'); %aproximação para uma equação linear 
                    end 
                    pl_new = plot(eq_new,'-k',wob_new,rop_new,'^'); 
                    set(pl_new,'MarkerEdgeColor','k','MarkerFaceColor', 

'g','DisplayName',['Curva nova (R^{2} = ' num2str(gof_new.rsquare) ')']) 
                    leg = legend([pl(2),pl_new(2)],'Location', 

'Northwest'); 
                    set(leg,'FontSize',16); 
                end 
            % Aproxima curva com dados ponderados 
                [eq_w,gof_w,output_w] = fit(wob_w,rop_w,'poly2'); 

%aproximação para uma equação quadrática 
                if eq_w.p1 &gt; 0 %se a parábola tiver concavidade para 

cima 
                    [eq_w,gof_w,output_w] = fit(wob_w,rop_w,'poly1'); 

%aproximação para uma equação linear 
                end 
                pl_w = plot(eq_w,'-r',wob_w,rop_w,'^'); 
                set(pl_w,'MarkerEdgeColor','none','MarkerFaceColor', 

'none','DisplayName',['Curva ponderada (R^{2} = ' num2str(gof_w.rsquare) 

')']) 
                if sum(out_log)&amp;lt;= 1 
                    leg = legend([pl(2),pl_w(2)],'Location', 

'Northwest'); 

                    set(leg,'FontSize',16); 



50 
 

 

Quadro 3 - Código fonte de rotina no MATLAB para organizar e filtrar dados, e gerar curvas 
de drill-rate 

(continuação) 

 

                else 
                    leg = legend([pl(2),pl_new(2),pl_w(2)],'Location', 

'Northwest'); 
                    set(leg,'FontSize',16); 
                end 
            % Mostrar tamanho amostral no gráfico 
                for j = 1:H 
                    text(min(get(whisk(2*H+1-

2*j),'XData')),min(get(whisk(2*H+1-2*j),'YData')),{['n = ' 

num2str(n_new(j))]},'FontSize',10,'HorizontalAlignment','Center','Vertic

alAlignment','Top'); 
                end 
        else %se a parábola tiver concavidade para baixo 
            % Aproxima curva com dados originais 
                wob_max = -eq.p2/(2*eq.p1); %coordenada horizontal do 

ponto de inflexão 
                rop_max = feval(eq,wob_max); %coordenada vertical do 

ponto de inflexão 
                pl = plot(eq,':k',wob,rop,'^k'); 
                set(pl,'MarkerEdgeColor','k','MarkerFaceColor','w', 

'DisplayName',['Curva original (R^{2} = ' num2str(gof.rsquare) ')']) 
                leg = legend(pl(2),'Location','Northwest'); 
                set(leg,'FontSize',16); 
            % Aproxima curva com dados sem valores aberrantes 
                if sum(out_log) &gt;= 1 %checa se há valores aberrantes 
                    [eq_new,gof_new,output_new] = 

fit(wob_new,rop_new,'poly2'); %aproximação para uma equação quadrática 
                    if eq_new.p1 &gt; 0 %se a parábola tiver concavidade 

para cima 
                        [eq_new,gof_new,output_new] = 

fit(wob_new,rop_new,'poly1'); %aproximação para uma equação linear 
                    end 
                    pl_new = plot(eq_new,'-k',wob_new,rop_new,'^'); 
                    set(pl_new,'MarkerEdgeColor','k','MarkerFaceColor', 

'g','DisplayName',['Curva nova (R^{2} = ' num2str(gof_new.rsquare) ')']) 
                    leg = 

legend([pl(2),pl_new(2)],'Location','Northwest'); 
                    set(leg,'FontSize',16); 
                end 
            % Aproxima curva com dados ponderados 
                [eq_w,gof_w,output_w] = fit(wob_w,rop_w,'poly2'); 

%aproximação para uma equação quadrática 
                if eq_w.p1 &gt; 0 %se a parábola tiver concavidade para 

cima 
                    [eq_w,gof_w,output_w] = fit(wob_w,rop_w,'poly1'); 

%aproximação para uma equação linear 
                end 
                pl_w = plot(eq_w,'-r',wob_w,rop_w,'^'); 
                set(pl_w,'MarkerEdgeColor','none','MarkerFaceColor', 

'none','DisplayName',['Curva ponderada (R^{2} = ' num2str(gof_w.rsquare) 

')']) 
                if sum(out_log)&amp;lt;= 1 
                    leg = legend([pl(2),pl_w(2)],'Location', 

'Northwest'); 
                    set(leg,'FontSize',16); 



51 
 

 

Quadro 3 - Código fonte de rotina no MATLAB para organizar e filtrar dados, e gerar curvas 
de drill-rate 

(conclusão) 

 
Fonte: Produção do próprio autor 
 
  

                else 

                    leg = legend([pl(2),pl_new(2),pl_w(2)],'Location', 

'Northwest'); 
                    set(leg,'FontSize',16); 
                end 
            % Mostrar tamanho amostral no gráfico 
                for j = 1:H 
                    text(min(get(whisk(2*H+1-

2*j),'XData')),min(get(whisk(2*H+1-2*j),'YData')),{['n = ' 

num2str(n_new(j))]},'FontSize',10,'HorizontalAlignment','Center','Vertic

alAlignment','Top'); 
                end 
        end 
        % Identifica curva traçada 
        title(['RPM: ' num2str(rpm) ' rpm, FLO: ' num2str(gpm) ' gpm'], 

'FontSize', 30, 'FontWeight', 'normal') 
        xlabel('WOB (klbf)', 'FontSize', 20) 
        ylabel('ROP (m/h)', 'FontSize', 20) 
        % Espera ação para continuar laço 
        w = waitforbuttonpress; 
        if w == 0 %encerra laço ao clicar em qualquer lugar 
            return 
        else %continua laço ao pressionar qualquer tecla 
            close all 
            continue 
        end 
    end 

end 



52 
 

 

Quadro 4 - Código fonte de rotina no MATLAB para determinar curva de drill-rate ótima utilizando 

as tabelas de confiança 

(continua) 

 

%% Analisa todas as possibilidades de curvas possíveis e traça as mais 

confiáveis 

 
ax = gca; %grava os eixos do gráfico original (gerado a partir da função 

anterior) 
ntemp = n_new(n_new~=1); %remove valores onde n = 1 
wobtemp = wob_new(n_new~=1); 
roptemp = rop_new(n_new~=1); 
if size(ntemp,1) &amp;lt;3 %ignora campos com menos de três dados  
    return 
end 
% Gera e analisa todas as curvas possíveis 
points = 3; %número de pontos na curva 
savedfunc = []; 
while points &amp;lt;size(ntemp,1) 
    combinations = combnk(1:size(ntemp,1),points); %calcula todas as 

possíveis combinações dos dados agrupados em três ao valor máximo de 

pontos 
    maxlog = zeros(size(ntemp,1),size(combinations,1)); %cria uma matriz 

nula para posteriormente identificar quais dados serão utilizados 
    for comb = 1:size(combinations,1) 
        savedfunc = cat(2,savedfunc,checkcurve(combinations(comb,:), 

maxlog(:,comb),ntemp,wobtemp,roptemp)); %chama a função checkcurve para 

determinar a confiança nas curvas utilizando as tabelas 
    end 
    points = points + 1; 
end 
% select best curve 
if isempty(savedfunc) == 0 
    if max(savedfunc(1,:)) &gt; 0.9 
        savedfunctemp = savedfunc(:,savedfunc(1,:)&gt;0.9); %seleciona 

curvas com confiança acima de 90% 
        [~,ii] = min(savedfunctemp(4,:)); %seleciona curvas com a menor 

margem de erro 
        repeatedlog = ismember(savedfunctemp(4,:),savedfunctemp(4,ii)); 

%checa por duplicatas 
        % Calcula e seleciona curvas similares 
        if sum(repeatedlog) &gt; 1 
            mlogtemp = savedfunctemp(7:end,:).*repmat(repeatedlog, 

size(savedfunctemp(7:end,:),1),1); %matriz maxlog para todas as curvas 

selecionadas 
            mlogtemp = evalmaxfunc(mlogtemp,ntemp,wobtemp,roptemp); 

%grava a coordenada horizontal do vértice 
            figure; bp = boxplot(mlogtemp); 
            out = get(findobj(bp,'Tag','Outliers'),'YData'); %grava 

valores muito distantes da mediana 
            close %fecha diagrama de caixa 
            out = +~(ismember(mlogtemp,out)); 
            out(out==0) = nan();  
            repeatedlog = mlogtemp.*out; 
        end 
        [~,i] = max(sum(savedfunctemp(7:end,:).*repmat(ntemp,1, 

size(savedfunctemp,2)).*repmat(repeatedlog,size(savedfunctemp(7:end,:),1

),1))); %escolhe curva com mais pontos 



53 
 

 

Quadro 4 - Código fonte de rotina no MATLAB para determinar curva de drill-rate ótima utilizando 

as tabelas de confiança 

(continuação) 

 

        savedmlogtemp = mlogtemp; 
        % Seleciona uma curva com a segunda menor margem de erro (caso a 

curva anteriormente selecionada tenha apenas três pontos) 
        if savedfunctemp(6,i) == 3 &amp;amp;&amp;amp; size(ntemp,1) &gt; 3 
            smallest = savedfunctemp(4,ii); 
            [~,ii] = min(savedfunctemp(4,savedfunctemp(4,:)~=smallest)); 

%seleciona curvas com menor margem de erro 
            repeatedlog = ismember(savedfunctemp(4,:),savedfunctemp(4, 

ii)); %checa por duplicatas 
            % Calcula e seleciona curvas similares 
            if sum(repeatedlog) &gt; 1 
                mlogtemp = savedfunctemp(7:end,:).*repmat(repeatedlog, 

size(savedfunctemp(7:end,:),1),1); %matriz maxlog para todas as curvas 

selecionadas 
                mlogtemp = evalmaxfunc(mlogtemp,ntemp,wobtemp,roptemp); 

%grava a coordenada horizontal do vértice 
                figure; bp = boxplot(mlogtemp); 
                out = get(findobj(bp,'Tag','Outliers'),'YData'); %grava 

valores muito distantes da mediana 
                close %fecha diagrama de caixa 
                out = +~(ismember(mlogtemp,out)); 
                out(out==0) = nan();  
                repeatedlog = mlogtemp.*out; 
            end 
            [~,i] = max(sum(savedfunctemp(7:end,:).*repmat(ntemp,1, 

size(savedfunctemp,2)).*repmat(repeatedlog,size(savedfunctemp(7:end,:),1

),1))); %escolhe curva com mais pontos 
        end 
        maxlog = savedfunctemp(7:end,i); 
        curveprob = savedfunctemp(1:3,i); 
    elseif max(savedfunc(2,:)) &gt; 0.9 
        savedfunctemp = savedfunc(:,savedfunc(2,:)&gt;0.9); %seleciona 

curvas com confiança acima de 90% 
        [~,ii] = min(savedfunctemp(4,:)); %seleciona curvas com menor 

margem de erro 
        repeatedlog = ismember(savedfunctemp(4,:),savedfunctemp(4,ii)); 

%checa por duplicadas 
        % Calcula e seleciona curvas similares 
        if sum(repeatedlog) &gt; 1 
            mlogtemp = savedfunctemp(7:end,:).*repmat(repeatedlog, 

size(savedfunctemp(7:end,:),1),1); %matriz maxlog para todas as curvas 

selecionadas 
            mlogtemp = evalmaxfunc(mlogtemp,ntemp,wobtemp,roptemp); 

%grava a coordenada horizontal do vértice 
            figure; bp = boxplot(mlogtemp); 
            out = get(findobj(bp,'Tag','Outliers'),'YData'); %grava 

valores muito distantes da mediana 
            close %fecha diagrama de caixa 
            out = +~(ismember(mlogtemp,out)); 
            out(out==0) = nan();  
            repeatedlog = mlogtemp.*out; 
        end 

        [~,i] = max(sum(savedfunctemp(7:end,:).*repmat(ntemp,1, 

size(savedfunctemp,2)).*repmat(repeatedlog,size(savedfunctemp(7:end,:),1

),1))); %escolhe curva com mais pontos 

 



54 
 

 

Quadro 4 - Código fonte de rotina no MATLAB para determinar curva de drill-rate ótima utilizando 

as tabelas de confiança 

(continuação) 

 
 

        % Seleciona uma curva com a segunda menor margem de erro (caso a 

curva anteriormente selecionada tenha apenas três pontos) 
        if savedfunctemp(6,i) == 3 &amp;amp;&amp;amp; size(ntemp,1) &gt; 3 
            smallest = savedfunctemp(4,ii); 
            [~,ii] = min(savedfunctemp(4,savedfunctemp(4,:)~=smallest)); 

%seleciona curvas com menor margem de erro 
            repeatedlog = ismember(savedfunctemp(4,:), 

savedfunctemp(4,ii)); %checa por duplicatas 
            % Calcula e seleciona curvas similares 
            if sum(repeatedlog) &gt; 1 
                mlogtemp = savedfunctemp(7:end,:).*repmat(repeatedlog, 

size(savedfunctemp(7:end,:),1),1); %matriz maxlog para todas as curvas 

selecionadas 
                mlogtemp = evalmaxfunc(mlogtemp,ntemp,wobtemp,roptemp); 

%grava a coordenada horizontal do vértice 
                figure; bp = boxplot(mlogtemp); 
                out = get(findobj(bp,'Tag','Outliers'),'YData'); %grava 

valores muito distantes da mediana 
                close %fecha diagrama de caixa 
                out = +~(ismember(mlogtemp,out)); 
                out(out==0) = nan();  
                repeatedlog = mlogtemp.*out; 
            end 
            [~,i] = max(sum(savedfunctemp(7:end,:).*repmat(ntemp,1, 

size(savedfunctemp,2)).*repmat(repeatedlog,size(savedfunctemp(7:end,:),1

),1))); %escolhe curva com mais pontos 
        end 
        maxlog = savedfunctemp(7:end,i); 
        curveprob = savedfunctemp(1:3,i); 
    else 
        [~,ii] = max(savedfunc(3,:)); %seleciona curvas com a maior 

confiança 
        repeatedlog = ismember(savedfunc(3,:),savedfunc(3,ii)); %checa 

por duplicatas (mais de uma curva com a mesma confiança) 
        % Calcula e seleciona curvas similares 
        if sum(repeatedlog) &gt; 1 
            mlogtemp = savedfunc(7:end,:).*repmat(repeatedlog, 

size(savedfunc(7:end,:),1),1); %matriz maxlog para todas as curvas 

selecionadas 
            mlogtemp = evalmaxfunc(mlogtemp,ntemp,wobtemp,roptemp); 

%grava a coordenada horizontal do vértice 

            figure; bp = boxplot(mlogtemp); 
            out = get(findobj(bp,'Tag','Outliers'),'YData'); %grava 

valores muito distantes da mediana 
            close %fecha diagrama de caixa 
            out = +~(ismember(mlogtemp,out)); 
            out(out==0) = nan();  
            repeatedlog = mlogtemp.*out; 
        end 
        [~,i] = max(sum(savedfunc(7:end,:).*repmat(ntemp,1, 

size(savedfunc,2)).*repmat(repeatedlog,size(savedfunc(7:end,:),1),1))); 

%escolhe curva com mais pontos 



55 
 

 

Quadro 4 - Código fonte de rotina no MATLAB para determinar curva de drill-rate ótima utilizando 

as tabelas de confiança 

(continuação) 

 
 

        % Seleciona uma curva com a segunda menor margem de erro (caso a 

curva anteriormente selecionada tenha apenas três pontos) 
        if savedfunc(6,i) == 3 &amp;amp;&amp;amp; size(ntemp,1) &gt; 3 
            highest = savedfunc(3,ii); 
            [~,ii] = max(savedfunc(3,savedfunc(3,:)~=highest)); 

%seleciona curvas com a maior confiança 
            repeatedlog = ismember(savedfunc(3,:),savedfunc(3,ii)); 

%checa por duplicatas (mais de uma curva com a mesma confiança) 
            % Calcula e seleciona curvas similares 
            if sum(repeatedlog) &gt; 1 
                mlogtemp = 

savedfunc(7:end,:).*repmat(repeatedlog,size(savedfunc(7:end,:),1),1); 

%matriz maxlog para todas as curvas selecionadas 
                mlogtemp = evalmaxfunc(mlogtemp,ntemp,wobtemp,roptemp); 

%grava a coordenada horizontal do vértice 
                figure; bp = boxplot(mlogtemp); 
                out = get(findobj(bp,'Tag','Outliers'),'YData'); %grava 

valores muito distantes da mediana 
                close %fecha o diagrama de caixa 
                out = +~(ismember(mlogtemp,out)); 
                out(out==0) = nan();  
                repeatedlog = mlogtemp.*out; 
            end 
            [~,i] = max(sum(savedfunc(7:end,:).*repmat(ntemp,1, 

size(savedfunc,2)).*repmat(repeatedlog,size(savedfunc(7:end,:),1),1))); 

%escolhe curva com mais pontos 
        end 
        maxlog = savedfunc(7:end,i); 
        curveprob = savedfunc(1:3,i); 
    end 
else 
    return 
end 
% Traça curva selecionada 
maxlog = logical(maxlog); 
wob_weighted = []; 
rop_weighted = []; 
ntemp = ntemp(maxlog); 
wobtemp = wobtemp(maxlog); 
roptemp = roptemp(maxlog); 
for j = 1:sum(maxlog) %gera dados ponderados 
    wob_weighted = [wob_weighted; repmat(wobtemp(j),ntemp(j),1)]; 
    rop_weighted = [rop_weighted; repmat(roptemp(j),ntemp(j),1)]; 
end 
[f1,gof1] = fit(wob_weighted,rop_weighted,'poly2'); %aproximação para 

uma equação quadrática 
figure; 
set(gcf,'units','normalized','outerposition',[0.5 0 0.5 1]) %estabelece 

posição na imagem no lado esquerdo da tela 
scatter(datadr.(f)(:,1),datadr.(f)(:,2),'.b') 
hold on 



56 
 

 

Quadro 4 - Código fonte de rotina no MATLAB para determinar curva de drill-rate ótima utilizando 

as tabelas de confiança 

(conclusão) 

 
Fonte: Produção do próprio autor 
 
 
Quadro 5 - Código fonte de rotina auxiliar no MATLAB, desenvolvido como função checkcurve, para 

determinar a confiabilidade das curvas de drill-rate utilizando as tabelas de confiança 

(continua) 

 

scatter(wob_new,rop_new,'^b') 
fplot(f1,[wobtemp(1)-range(wobtemp)/2 wobtemp(end)+range(wobtemp)/2],'--

k') 
pl1 = plot(f1,'-k',wobtemp,roptemp,'ok'); 
scatter(-f1.p2/(2*f1.p1),feval(f1,-f1.p2/(2*f1.p1)),100,'xk') 
set(pl1,'Markersize',10,'DisplayName',['Curva original (R^{2} = ' 

num2str(gof1.rsquare) ')' 10 ... 
    'Probabilidade da posição do WOB ideal (em relação ao founder 

point):' 10 ... 
    '&lt;10%: ' num2str(curveprob(1)*100) '%,&amp;lt;20%: ' 

num2str(curveprob(2)*100) '%,&amp;lt;30%: ' num2str(curveprob(3)*100) '%']) 
legend(pl1(2),'Location','Northeast') 
axis([ax.XLim ax.YLim]) %define os mesmos eixos que a curva original 

%% Função checkcurve utilizada na rotina descrita no quadro 4 

 

function sf = checkcurve(comb, mlog, n, wob, rop) 

  
load tableme %carrega as tabelas de confiança 
wob_weighted = []; 
rop_weighted = []; 
for j=1:length(comb) 
    mlog(comb(j)) = 1; %identifica quais dados serão utilizados 
end 
if sum(mlog) &gt; 12 %limita curvas com mais de 12 pontos às tabelas de 12 

pontos 
    sheet = 10; 
else 
    sheet = sum(mlog)-2; 
end 
smallpoint = n.*mlog; %tamanho amostral de cada ponto 
smallpoint = min(smallpoint(smallpoint~=0)); %menor tamanho amostral 
% Define a margem de erro de acordo com o menor tamanho amostral 

if smallpoint &amp;lt;44 
    if smallpoint &amp;lt;18 
        if smallpoint &amp;lt;10 
            if smallpoint &amp;lt;7 
                 if smallpoint &amp;lt;5 
                     if smallpoint &amp;lt;4 
                         if smallpoint &amp;lt;3 
                             marginerror = 2; 
                         else 
                             marginerror = 1.4; 
                         end 
                     else 
                         marginerror = 1.2; 
                     end 
                 else 



57 
 

 

Quadro 5 - Código fonte de rotina auxiliar no MATLAB, desenvolvido como função checkcurve, para 

determinar a confiabilidade das curvas de drill-rate utilizando as tabelas de probabilidade 

(conclusão) 

 
Fonte: Produção do próprio autor 
 

                     marginerror = 1; 
                 end 
            else 
                marginerror = 0.8; 
            end 
        else 
            marginerror = 0.6; 
        end 
    else 
        marginerror = 0.4; 
    end 
else 
    marginerror = 0.2; 
end 
n = n.*mlog; 
n = n(n~=0); 
wob = wob.*mlog; 
wob = wob(wob~=0); 
rop = rop.*mlog; 
rop = rop(rop~=0); 
for j=1:length(n) %gera dados ponderados 
    wob_weighted = [wob_weighted; repmat(wob(j),n(j),1)]; 
    rop_weighted = [rop_weighted; repmat(rop(j),n(j),1)]; 
end 
f1 = fit(wob_weighted,rop_weighted,'poly2'); %aproximação para uma 

função quadrática 
x_v = -f1.p2/(2*f1.p1); %componente horizontal do vértice da parábola 
if f1.p1 &gt; 0 || x_v &amp;lt;min(wob) || x_v &gt; max(wob) 
    sf = []; 
    return 
end 
y_max = feval(f1,x_v); %maior valor de y descrito pela curva 
y_min = min([feval(f1,min(wob_weighted)) feval(f1,max(wob_weighted))]); 

%menor valor de y descrito pela curva, dentro do intervalo de WOB 
rnge = ceil((y_max - y_min)/0.5)*0.5; %range arredondado para cima, 

múltiplo de 0.5 
if rnge &gt; 0 %se a parábola tiver concavidade para baixo 
    mytable = ['tableme' strrep(sprintf('%.1f',marginerror),'.','_')]; 
    mytable = eval(mytable); 
    prob = [mytable(mytable(:,1,sheet)==rnge,2,sheet); 

mytable(mytable(:,1,sheet)==rnge,3,sheet); 

mytable(mytable(:,1,sheet)==rnge,4,sheet)]; 
    if isempty(prob) == 1 %se range for maior que o valor máximo 

descrito pela tabela 
        prob = [mytable(end,2,sheet); mytable(end,3,sheet); 

mytable(end,4,sheet)]; 
    end 
    sf = [prob; marginerror; rnge; sum(mlog); mlog]; %grava os valores 

de confiabilidade, variação percentual de WOB, ponto de menor tamanho 

amostral e matriz maxlog 
else 
    sf = []; 
end 

 


</field>
	</doc>
</add>