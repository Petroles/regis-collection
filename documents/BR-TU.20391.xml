<?xml version="1.0" encoding="utf-8"?>
<add>
	<doc>
		<field name="docid">BR-TU.20391</field>
		<field name="filename">3884_Tese_FernandoJose.pdf</field>
		<field name="filetype">PDF</field>
		<field name="text">
 

 

UNIVERSIDADE  DE SÃO PAULO 

ESCOLA POLITÉCNICA 

 

 

 

 

 
FERNANDO JOSÉ DE MOURA MARCELLINO 

 

 

 

 

 

Planejamento Integrado da Cadeia de 

Suprimentos da Indústria do Petróleo Baseado 

em Agentes Holônicos 

 

 

 

 

 

 

 

 

 

 

 

 

 
São Paulo 

 

2013 
 



 

 

FERNANDO JOSÉ DE MOURA MARCELLINO 
 
 
 
 
 
 

Planejamento Integrado da Cadeia de 

Suprimentos da Indústria do Petróleo Baseado 

em Agentes Holônicos 
 
 
 
 
 
 
 
 
 

 
Tese apresentada à Escola Politécnica da 
Universidade de São Paulo para obtenção 
do título de Doutor em Ciências. 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

São Paulo 

 

2013 



 

 

FERNANDO JOSÉ DE MOURA MARCELLINO 
 
 
 
 
 
 

Planejamento Integrado da Cadeia de 

Suprimentos da Indústria do Petróleo Baseado 

em Agentes Holônicos 
 
 
 
 
 
 
 
 
 

 
Tese apresentada à Escola Politécnica da 
Universidade de São Paulo para obtenção 
do título de Doutor em Ciências. 
 
Programa:                       Engenharia Elétrica 
Área de Concentração:  Sistemas Digitais 
 
 
 
Orientador: 
 
Prof. Dr. Jaime Simão Sichman 

 
 
 
 
 
 
 
 
 
 

São Paulo 

 

2013 



 

 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

FICHA CATALOGRÁFICA 
 
 

 
Este exemplar foi revisado e alterado em relação a versão 
original, sob responsabilidade única do autor com a anuência de 
seu orientador.                                                                                        
 
 
São Paulo, 18 de julho de 2013 
 
 
 
Fernando José de Moura Marcellino 
 
 
 
Jaime Simão Sichman 

 
 

 

 
 
Marcellino, Fernando Jose de Moura 

Planejamento integrado da cadeia de suprimentos da indús- 
tria do petróleo baseado em agentes holônicos / F.J.M. 
Marcellino. -- versão corr. -- São Paulo, 2013. 

270 p. 
 

Tese (Doutorado) - Escola Politécnica da Universidade de  
São Paulo. Departamento de Engenharia de Computação e Sis-
temas Digitais. 
 

1. Programação por restrições 2. Cadeia de suprimentos 
3. Petróleo 4. Planejamento integrado 5. Holons I. Universidade 
de São Paulo. Escola Politécnica. Departamento de Engenharia 
de Computação e Sistemas Digitais II. t. 

 



Agradecimentos

À minha família pela paciência e incentivo em todos os momentos. Em especial à minha filha

Camilla pela ajuda na revisão do texto.

Ao meu orientador pelo apoio e paciência ao longo de todo o trabalho.

À PETROBRAS pelo patrocínio e por todo o suporte oferecido, que tornaram este trabalho

possível.

À toda minha equipe de pesquisa operacional da área de TIC da PETROBRAS em São Paulo

pelas discussões e críticas. Em especial, aos analistas Tiago Montagner e Daniel Ferber pela

contribuição na implementação do protótipo utilizado nos experimentos.

Ao engenheiro de processamento Marcel Joly da área de refino da PETROBRAS e a toda a

equipe do sistema SIPP pelo subsídio de informações relativas à programação de produção das

refinarias.

À analista de sistemas Wanda Teixeira e à equipe da área de planejamento de logística da

PETROBRAS pelo fornecimento do histórico de informações do sistema PLANAB para o caso

de estudo utilizado neste trabalho.

Ao engenheiro de petróleo Ricardo Accioly da área de exploração e produção da PETROBRAS

pelas conversas e recomendações relacionadas a reservatórios e extração de petróleo, que fazem

parte deste trabalho.

A Thomas Leaute, um dos criadores do FRODO, pelas sugestões e suporte para os ajustes e

modifições necessários para o uso da versão 2.10.4 do FRODO neste trabalho.

A todos que, de alguma forma, contribuíram para que este trabalho fosse realizado.



Resumo

A área do petróleo é uma das que mais podem se beneficiar da melhoria de eficiência da
gestão da cadeia de suprimentos. Entretanto, o comportamento dinâmico de tais cadeias é muito
complexo para ser modelado de forma analítica. Por outro lado, estas cadeias mostram várias
características intrínsecas em comum com sistemas multiagentes, que oferecem a flexibilidade
necessária para modelar as complexidades e a dinâmica das cadeias de suprimentos reais sem
a necessidade de premissas muito simplificadoras. Como o problema de gerenciamento da ca-
deia de suprimentos apresenta uma estrutura recursiva, torna-se ainda mais conveniente usar
um modelo baseado em agentes holônicos, que mostram uma estrutura do tipo fractal. Além
disso, o tipo de relacionamento entre as entidades da cadeia e a necessidade de uma otimiza-
ção global sugerem modelar suas interações na forma de restrições. Por esta razão, esta tese
propõe um modelo distribuído de otimização através da definição de um novo problema denomi-
nado Problema de Satisfação de Restrições Holônico com Otimização (HCOP), que é baseado
nos conceitos do Problema de Satisfação de Restrições Distribuído com Otimização (DCOP)
e agentes holônicos. Além disso foi desenvolvido um meta-algoritmo baseado no algoritmo
DTREE para solucionar este tipo de problema, onde vários algoritmos disponíveis de otimiza-
ção centralizados podem ser embutidos e integrados de tal forma a obter a configuração mais
adequada para cada caso. Assim, uma típica cadeia de suprimentos da indústria do petróleo foi
modelada como um HCOP, e foi desenvolvido um protótipo que implementa o meta-algoritmo
proposto em um ambiente que integra sistemas de otimização de produção e logística, que são
representativos em relação a situações reais. Finalmente foram realizados experimentos sobre
um estudo de caso da empresa PETROBRAS, que permitiram a verificação da viabilidade deste
modelo e a comprovação de suas vantagens em relação às abordagens convencionais.



Abstract

The oil area is one of those that may most benefit from the improved efficiency of supply
chain management. However, the dynamic behavior of such chains is too complex to be mode-
led analytically. Moreover, these chains show several intrinsic characteristics in common with
multiagent systems, which offer the required flexibility to model the complexities and dynamics
of real supply chains without rather simplifying assumptions. As the problem of managing the
supply chain has a recursive structure, it becomes more convenient to use a model based on ho-
lonic agents, which show a fractal-type structure. Furthermore, the type of relationship between
entities in the chain and the need for global optimization suggest to model their interactions in
the form of constraints. For this reason, this thesis proposes an optimization distributed model
by defining a new problem called Holonic Constraint Optimization Problem (HCOP), which
is based on concepts from Distributed Constraint Satisfaction Optimization Problem (DCOP)
and holonic agents. In addition we developed a meta-algorithm based on DTREE algorithm for
solving this type of problem, where several algorithms available for centralized optimization
algorithms can be embedded and integrated so as to obtain the most suitable configuration for
each case. Thus, a typical supply chain of the petroleum industry was modeled as a HCOP, and
we developed a prototype that implements the meta-algorithm in an environment that integra-
tes the optimization systems for production and logistics, which are representative in relation
to actual situations. Finally experiments were performed on a case study of the company PE-
TROBRAS, which allowed the verification of the feasibility of this model and the proof of their
advantages over conventional approaches.



Sumário

Lista de Figuras

Lista de Tabelas

Lista de Acrônimos

1 Introdução p. 15

1.1 Motivação . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 15

1.2 Objetivos . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 17

1.3 Metodologia . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 18

1.4 Contribuições . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 19

1.5 Organização do Texto . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 20

I Planejamento da Cadeia de Suprimentos 22

2 Cadeias de Suprimentos p. 23

2.1 Introdução . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 23

2.2 Definições Básicas . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 24

2.2.1 Gerenciamento da Cadeia de Suprimentos . . . . . . . . . . . . . . . p. 24

2.2.2 Planejamento Integrado da Cadeia de Suprimentos . . . . . . . . . . p. 26

2.2.3 Logística . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 27

2.2.4 Gestão e Políticas de Estoque . . . . . . . . . . . . . . . . . . . . . p. 27

2.2.5 Previsão de Demanda . . . . . . . . . . . . . . . . . . . . . . . . . . p. 28



2.2.6 Gestão da Produção . . . . . . . . . . . . . . . . . . . . . . . . . . p. 28

2.2.7 Métricas de Desempenho . . . . . . . . . . . . . . . . . . . . . . . p. 28

2.3 Cadeia de Suprimentos da Indústria do Petróleo . . . . . . . . . . . . . . . . p. 30

2.3.1 Introdução . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 30

2.3.2 Extração de Petróleo . . . . . . . . . . . . . . . . . . . . . . . . . . p. 33

2.3.3 Refino de Petróleo . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 36

2.3.4 Gestão de Estoques de Petróleo e seus Derivados . . . . . . . . . . . p. 37

2.3.5 Distribuição de Derivados de Petróleo . . . . . . . . . . . . . . . . . p. 40

2.4 Conclusão . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 42

3 Modelos do Planejamento Integrado da Cadeia de Suprimentos p. 43

3.1 Introdução . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 43

3.2 Abordagens de Simulação . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 44

3.3 Abordagens Analíticas . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 45

3.4 Desafios para o Planejamento Integrado com Otimização . . . . . . . . . . . p. 49

3.4.1 Modelagem . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 50

3.4.2 Multi-Escala (Espaço e Tempo) . . . . . . . . . . . . . . . . . . . . p. 51

3.4.3 Esforço Computacional . . . . . . . . . . . . . . . . . . . . . . . . p. 55

3.5 Problema de Otimização . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 56

3.5.1 Programação Linear (LP) e Programação Linear Inteira Mista (MILP) p. 58

3.5.2 Programação Não-linear (NLP) . . . . . . . . . . . . . . . . . . . . p. 59

3.5.3 Programação de Restrições . . . . . . . . . . . . . . . . . . . . . . p. 61

3.6 Estratégia de Solução . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 63

3.6.1 Métodos Hierárquicos . . . . . . . . . . . . . . . . . . . . . . . . . p. 64

3.6.2 Métodos Iterativos . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 65

3.6.3 Métodos Full-space . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 65

3.7 Conclusão . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 67



II Abordagem Distribuída 69

4 Agentes Holônicos p. 70

4.1 Introdução . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 70

4.2 Agentes em Cadeias de Suprimentos . . . . . . . . . . . . . . . . . . . . . . p. 71

4.3 Paradigma Holônico . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 73

4.3.1 Holons e Agentes . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 75

4.3.2 Modelos de Agentes Holônicos . . . . . . . . . . . . . . . . . . . . p. 75

4.3.3 Organização Holônica . . . . . . . . . . . . . . . . . . . . . . . . . p. 78

4.4 Trabalhos Relacionados . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 79

4.4.1 Sistema Holônico de Manufatura (HMS) . . . . . . . . . . . . . . . p. 79

4.4.2 TELETRUCK . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 80

4.4.3 Sistema de Transporte Automático Global (GATS) . . . . . . . . . . p. 82

4.4.4 Sistemas Multiagentes Holônicos . . . . . . . . . . . . . . . . . . . p. 83

4.5 Conclusão . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 84

5 Problema de Satisfação de Restrições Distribuídas com Otimização (DCOP) p. 86

5.1 Introdução . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 86

5.2 Formalização do Problema de Satisfação de Restrições Distribuído com Oti-

mização (DCOP) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 87

5.3 Generalização do DCOP para Problemas Locais Complexos . . . . . . . . . p. 88

5.4 Algoritmos para DCOP . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 90

5.5 Protocolo de Mensagens . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 96

5.6 Ferramentas para DCOP . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 99

5.7 Representação XML de Instâncias de DCOP . . . . . . . . . . . . . . . . . . p. 100

5.8 Trabalhos Relacionados . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 100

5.9 Conclusão . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 104



III Contribuições 105

6 Problema de Satisfação de Restrições Holônico com Otimização (HCOP) p. 106

6.1 Introdução . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 106

6.2 Descrição do HCOP . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 107

6.3 Formalização do HCOP . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 110

6.4 Relação entre DCOP e HCOP . . . . . . . . . . . . . . . . . . . . . . . . . p. 115

6.4.1 Decomposição . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 117

6.4.2 Compilação . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 117

6.5 Meta-Algoritmos para a Solução do HCOP . . . . . . . . . . . . . . . . . . p. 119

6.5.1 Adaptação de um Algoritmo DCOP para o HCOMA . . . . . . . . . p. 121

6.5.2 HCOMA Baseado no ADOPT . . . . . . . . . . . . . . . . . . . . . p. 128

6.5.3 HCOMA Baseado no DPOP . . . . . . . . . . . . . . . . . . . . . . p. 129

6.6 Representação XML de Instâncias de HCOP . . . . . . . . . . . . . . . . . p. 135

6.7 Conclusão . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 138

7 Modelagem do Planejamento Integrado da Cadeia de Suprimentos da Indús-

tria do Petróleo como um HCOP p. 140

7.1 Introdução . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 140

7.2 Definição do Problema . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 141

7.3 Modelo de Referência . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 142

7.3.1 Modelo Multi-Período . . . . . . . . . . . . . . . . . . . . . . . . . p. 142

7.3.2 Variáveis do Modelo . . . . . . . . . . . . . . . . . . . . . . . . . . p. 144

7.3.3 Modelo Holônico . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 150

7.3.4 Modelo de Organização . . . . . . . . . . . . . . . . . . . . . . . . p. 155

7.3.5 Submodelos . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 156

7.3.6 Função de Emergência . . . . . . . . . . . . . . . . . . . . . . . . . p. 165

7.3.7 Métricas de Desempenho e Função Objetivo . . . . . . . . . . . . . p. 168



7.4 Modelo Formal do Planejamento Integrado . . . . . . . . . . . . . . . . . . p. 171

7.5 Representação XML de Instâncias de HCOPs Complexos . . . . . . . . . . p. 175

7.6 Conclusão . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 176

8 Experimentos p. 181

8.1 Introdução . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 181

8.2 Ferramenta FRODO . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 181

8.3 Fase I: HCOP Genérico . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 183

8.3.1 Introdução . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 183

8.3.2 Descrição dos Experimentos . . . . . . . . . . . . . . . . . . . . . . p. 183

8.3.3 Análise dos Resultados . . . . . . . . . . . . . . . . . . . . . . . . . p. 187

8.3.4 Resumo dos Resultados . . . . . . . . . . . . . . . . . . . . . . . . p. 190

8.4 Fase II: Planejamento Integrado da Cadeia de Suprimento do Petróleo como

HCOP . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 191

8.4.1 Introdução . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 191

8.4.2 Descrição do Caso de Estudo . . . . . . . . . . . . . . . . . . . . . . p. 191

8.4.3 Formalização da Instância do Caso de Estudo . . . . . . . . . . . . . p. 193

8.4.4 Caso Padrão . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 199

8.4.5 Apresentação Resumida do Processo de Solução do Caso Padrão . . p. 200

8.4.6 Análise do Caso Padrão . . . . . . . . . . . . . . . . . . . . . . . . p. 206

8.4.7 Análise de Cenários com Contingência . . . . . . . . . . . . . . . . p. 209

8.5 Conclusão . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 216

9 Conclusões p. 219

Referências p. 223

Anexo A -- Prova do Algoritmo ADOPT p. 236



Anexo B -- Prova do Algoritmo DPOP p. 240

Anexo C -- Representação de Instâncias de Problemas de Restrições com XML p. 241

Anexo D -- Solução Completa do Caso Padrão no Caso de Estudo do Capítulo 8 p. 246



Lista de Figuras

1 Esquema Resumido da Tese . . . . . . . . . . . . . . . . . . . . . . . . . . p. 19

2 Processos de uma Típica Cadeia de Suprimentos . . . . . . . . . . . . . . . . p. 25

3 Cadeia de Suprimentos da Indústria do Petróleo . . . . . . . . . . . . . . . . p. 31

4 Curva de Produção Teórica de um Campo de Petróleo . . . . . . . . . . . . . p. 34

5 Fluxograma de uma Refinaria Genérica . . . . . . . . . . . . . . . . . . . . p. 38

6 Ligação entre Tancagem de Petróleo e Unidade de Destilação em uma Refinaria p. 40

7 Diagrama de Distribuição por Oleodutos . . . . . . . . . . . . . . . . . . . . p. 41

8 Visão Hierárquica da Otimização da Cadeia (baseada em (Shapiro, 2006)) . . p. 50

9 Classes de Problemas de Otimização (baseada em (Papadimitriou e Steiglitz,

1998)) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 58

10 (a) Hierárquico (b) Iterativo (c) Full-space (baseada em (Maravelias e Sung,

2009)) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 64

11 (a) Federação (b) Grupo Moderado (c) Fusão . . . . . . . . . . . . . . . . . p. 77

12 Organização Holônica . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 79

13 Exemplo de um Problema com 4 Agentes, cada um com 4 Variáveis . . . . . p. 89

14 Fluxo de Mensagens de um Algoritmo Genérico p/ DCOP . . . . . . . . . . p. 99

15 Restrições do HCOP . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 108

16 Diagrama Básico do HCOP . . . . . . . . . . . . . . . . . . . . . . . . . . p. 109

17 Exemplo de Modelagem Holônica . . . . . . . . . . . . . . . . . . . . . . . p. 110

18 (a) Decomposição (b) Compilação . . . . . . . . . . . . . . . . . . . . . . . p. 116

19 Transformação de HCOP para DCOP . . . . . . . . . . . . . . . . . . . . . p. 120

20 Relação entre HCOMA e o Algoritmo de DCOP Base . . . . . . . . . . . . . p. 128



21 Ilustração do HCOMA ADOPT . . . . . . . . . . . . . . . . . . . . . . . . p. 129

22 Ilustração do HCOMA DPOP . . . . . . . . . . . . . . . . . . . . . . . . . p. 135

23 Ilustração do Escopo do Problema Tratado . . . . . . . . . . . . . . . . . . . p. 143

24 Modelo Holônico do Problema . . . . . . . . . . . . . . . . . . . . . . . . . p. 151

25 Exemplo de Agregação Temporal . . . . . . . . . . . . . . . . . . . . . . . . p. 152

26 Ilustração de uma Agregação Genérica . . . . . . . . . . . . . . . . . . . . . p. 153

27 Ilustração da Organização Holônica da Cadeia de Suprimentos da Indústria

do Petróleo . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 157

28 Modelo Organizacional do Problema . . . . . . . . . . . . . . . . . . . . . . p. 157

29 Conjunto Completo das Restrições do HCOP Complexo . . . . . . . . . . . p. 176

30 Diagrama do Processo Holônico . . . . . . . . . . . . . . . . . . . . . . . . p. 180

31 Fluxo do Processo de Solução . . . . . . . . . . . . . . . . . . . . . . . . . p. 184

32 Gráfico do Tempo pelo Número de Holons . . . . . . . . . . . . . . . . . . . p. 187

33 Gráfico do Tempo pelo Tamanho do Domínio . . . . . . . . . . . . . . . . . p. 188

34 Gráfico do Tempo pelo Número de Variáveis Locais . . . . . . . . . . . . . . p. 188

35 Gráfico do Tempo pelo Número de Camadas . . . . . . . . . . . . . . . . . . p. 189

36 Visão Geral do Escopo e Topologia do Caso de Estudo . . . . . . . . . . . . p. 195

37 Gráfico de Tempo de Processamento . . . . . . . . . . . . . . . . . . . . . . p. 207

38 Gráfico da Função Objetivo . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 208

39 Gráficos da Solução Vetorial . . . . . . . . . . . . . . . . . . . . . . . . . . p. 210

40 Submodelo Simplificado Linear de uma Refinaria . . . . . . . . . . . . . . . p. 214

41 Submodelo Simplificado Realista de uma Refinaria . . . . . . . . . . . . . . p. 214

42 Gargalo na Distribuição de Petróleo entre a Refinaria2 e a Refinaria3 . . . . . p. 215

43 Exemplo de um Arquivo XCSP do FRODO p/ DCOP . . . . . . . . . . . . . p. 242

44 Representação da Instância da Fig. 36 em XCSP . . . . . . . . . . . . . . . p. 245



Lista de Tabelas

1 Resumo das Unidades de uma Refinaria . . . . . . . . . . . . . . . . . . . . p. 37

2 Algoritmos para DCOP . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 91

3 Parâmetros de Entrada do Submodelo Logístico . . . . . . . . . . . . . . . . p. 161

4 Variáveis de Decisão do Submodelo Logístico . . . . . . . . . . . . . . . . . p. 162

5 Comparação entre a Fase I e a Fase II . . . . . . . . . . . . . . . . . . . . . p. 190

6 Tabela de Petróleos . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . p. 192

7 Tabela de Plataformas de Petróleos . . . . . . . . . . . . . . . . . . . . . . . p. 192

8 Preços de Venda dos Derivados . . . . . . . . . . . . . . . . . . . . . . . . p. 192

9 Relação de Contratos para Derivados . . . . . . . . . . . . . . . . . . . . . . p. 193

10 Relação de Contratos para Petróleos . . . . . . . . . . . . . . . . . . . . . . p. 194

11 Limitações e Preços de Venda e Compra do SpotMarket para Derivados . . . p. 194

12 Limitações e Preços de Venda e Compra do SpotMarket para Petróleos . . . . p. 194

13 Solução de Venda e Compra do SpotMarket . . . . . . . . . . . . . . . . . . p. 203



Lista de Acrônimos

ADOPT Asynchronous Distributed Optimization

API American Petroleum Institute

CSOP Constraint Satisfaction Optimization Problem

CSP Constraint Satisfaction Problem

DCOP Distributed Constraint Optimization Problem

DisCSP Distributed Constraint Satisfaction Problem

DPOP Distributed Pseudotree Optimization Procedure

DTREE Distributed Tree-Optimization

FRODO FRamework for Open/Distributed constraint Optimization

HCOMA Holonic Constraint Optimization Meta-Algorithm

HCOP Holonic Constraint Optimization Problem

HMS Holonic Manufacturing System

JaCoP Java Constraint Programming solver

LP Linear Programming

MILP Mixed Integer Linear Programming

MINLP Mixed Integer Nonlinear Programming

NLP Nonlinear Programming

XCSP XML Representation of Constraint Networks

XML Extensible Markup Language



15

1 Introdução

1.1 Motivação

Cadeias de suprimentos são redes de entidades autônomas de negócio que coletivamente

intermedeiam, produzem, e distribuem produtos. A gestão da cadeia de suprimentos pode ser

definida como a configuração, coordenação e melhoria contínua de um conjunto sequencial-

mente organizado de operações. Seu objetivo é prover o melhor nível de serviço ao cliente ao

mais baixo custo possível (CHIMA; HILLS, 2007). O gerenciamento da cadeia de suprimentos

exige coordenação tanto com clientes quanto com fornecedores. A dinâmica do mercado torna

isto difícil: são necessárias respostas rápidas a suas alterações, que ao mesmo tempo minimizem

tanto o tempo de espera do cliente como os estoques (FOX; CHIONGLO; BARBUCEANU, 1993).

Desta forma, não é suficiente que as cadeias de suprimentos sejam apenas adequadamente pla-

nejadas: elas também devem ser gerenciadas de forma flexível e robusta, pois suas operações

freqüentemente são postas em risco por muitos fatores externos de influência, tais como mudan-

ças de taxas do mercado financeiro, atrasos nas entregas dos fornecedores, e falhas de produção

e transporte. Por este motivo, tem sido defendido que a cadeia de suprimentos seja gerenciada

como um sistema integrado e coordenado (FORRESTER, 1958).

Curiosamente, o principal desafio da indústria de petróleo e gás não é a disponibilidade

de suas reservas, mas sim a colocação destas reservas em produção e a entrega dos produ-

tos finais aos consumidores com o mínimo custo possível. O produto é exatamente o mesmo

para todas as empresas competidoras: derivados de petróleo com diferenciação muito pequena.

Conseqüentemente, muitas destas empresas não podem se diferenciar umas das outras através

de novos produtos, mas somente através de uma operação mais eficiente que a de seus com-

petidores, o que resulta de um bom gerenciamento da cadeia de suprimentos (CHIMA; HILLS,

2007). Entretanto, a cadeia de suprimentos da indústria de petróleo apresenta vários problemas

desafiadores. A partir da matéria-prima, que é o petróleo, são produzidos uma ampla gama

de produtos, que vão do asfalto e óleo combustível, até o querosene de aviação e a nafta pe-

troquímica, passando pela gasolina e o diesel. O grande número de diferentes produtos finais



16

demandados pelos consumidores exige um planejamento prudente e flexível, além de uma coor-

denação cuidadosa do processo de produção. As etapas dentro da cadeia de suprimentos devem

satisfazer restrições tecnológicas complexas e diversas. Finalmente, as grandes empresas de pe-

tróleo atuam de forma complexa e possuem relacionamentos produtor–consumidor entre suas

próprias unidades, que podem atravessar as fronteiras nacionais. Isto requer que as operações

de planejamento logístico e de produção das diferentes unidades de produção sejam adequada-

mente sincronizadas e intimamente acopladas.

Por outro lado, sabe-se que o comportamento dinâmico de uma complexa cadeia de supri-

mentos é difícil de ser modelado de forma analítica. Recentemente, observa-se na literatura o

uso da técnica de sistemas multagentes para modelar tais cadeias. Basicamente, consistem de

uma coleção de entidades autônomas que coexistem em um mesmo ambiente e que eventual-

mente podem se coordenar para realizar tarefas conjuntas (YUAN; LIANG; ZHANG, 2003). Assim,

cadeias de suprimentos e sistemas multiagentes mostram numerosas características intrínsecas

em comum. Indo mais além, como o problema de gerenciamento da cadeia de suprimentos

apresenta uma estrutura recursiva onde seus diversos componentes podem ser desmembrados

em subcomponentes integrados, torna-se conveniente que o sistema de agentes que modela tal

problema tenha uma estrutura recursiva semelhante. Para isso, a abordagem de agentes holôni-

cos se mostra bastante adequada, e este será o paradigma específico de agentes a ser utilizado

neste trabalho.

Em princípio, o termo gestão da cadeia de suprimentos (SHAPIRO, 2006) pode ser conside-

rado equivalente ao planejamento integrado da cadeia de suprimentos adotado neste trabalho.

Entretanto, o primeiro enfatiza mais as áreas de logística e distribuição, enquanto o último fo-

caliza também o processo de produção. O desafio maior que está envolvido com a cadeia de

suprimentos de uma indústria de transformação, como a do petróleo, é a tomada de decisão

integrada e coordenada através de várias áreas funcionais de uma grande empresa, através de

entidades distribuídas geograficamente, e através de vários níveis de decisão (estratégico, tá-

tico e operacional). A tomada de decisão envolvendo tanto áreas funcionais, quanto entidades

separadas geograficamente basicamente lida com a integração espacial no que diz respeito a

coordenar atividades de vários subsistemas de uma empresa. Já a decisão que engloba vários

níveis hierárquicos lida com a integração temporal naquilo que envolve decisões coordenadas

através de diferentes escalas de tempo. O tratamento destes problemas de integração espacial e

temporal é fundamental para otimizar a tomada de decisão ao longo de toda a cadeia.



17

1.2 Objetivos

O objetivo desta tese é propor um modelo distribuído de otimização, baseado em satisfação

de restrições e utilizando um sistema multiagentes holônico, que sirva para solucinar uma classe

de problemas como a mencionada na Seção 6.3. Tal modelo, genérico, será aplicado para

solucionar o problema de planejamento integrado da cadeia de suprimentos da indústria do

petróleo, utilizando os submodelos de otimização já disponíveis e com a maximinação do lucro

e o atendimento aos clientes.

Até o momento não existem soluções disponíveis para enfrentar os grandes desafios desta

classe de problemas em termos de modelagem, escalabilidade, algoritmos e computação. As-

sim, esta tese representa um novo passo nesta direção.

A aplicação do modelo desenvolvido ao domínio do petróleo deverá ser capaz de cumprir

as seguintes metas:

1. Analisar o impacto de mudanças imprevisíveis do ambiente, tais como problemas ope-

racionais como indisponibilidades de recursos, tanto na extração de petróleo quanto na

produção de seus derivados, ou de transporte, sobre o desempenho da cadeia;

2. Analisar o impacto do escalonamento no nível operacional sobre o desempenho da cadeia;

3. Comparar o uso de um submodelo não-linear no nível operacional com um modelo geral

linear;

4. Permite através do seu uso a comparação dos seus resultados com aqueles obtidos a partir

da otimização centralizada simplificada, nos moldes do que é utilizado da forma conven-

cional pela indústria do petróleo, utilizando cénarios representativos.

A aplicação do modelo permitirá tratar o planejamento integrado desta cadeia de suprimentos da

indústria do petróleo, que abrange desde a extração do petróleo a partir dos poços produtores,

até o transporte dos derivados de petróleo para os terminais de distribuição, de onde serão

entregues aos clientes, que, neste trabalho, são as companhias distribuidoras. Este processo

engloba os principais componentes da cadeia de suprimentos, i.e., extração do petróleo, seu

refino para a produção de derivados, armazenagem tanto do petróleo quanto dos seus derivados,

e as atividades de transporte de ambos através dos meios (ou modais, como são chamados na

área de logística) mais importantes neste tipo de cadeia, ou seja, oleodutos e navios. Entretanto,

não são consideradas as atividades anteriores à entrada de um poço de petróleo em produção,

como aquelas de exploração e perfuração, nem aquelas posteriores à entrega de derivados nos



18

terminais, como as de distribuição para os postos de venda no varejo. O modelo proposto

não é estocástico, mas sim determínistico. Entretanto, sua natureza distribuída permitirá uma

reação rápida por parte de uma possível ferramenta baseada neste modelo, de modo a tratar as

mundanças imprevistas.

1.3 Metodologia

As atividades principais deste trabalho podem ser divididas em cinco etapas, que são des-

critas a seguir:

• A primeira etapa consistiu, essencialmente, em uma revisão bibliográfica sobre o estado

da arte das pesquisas sobre modelagem de cadeia de suprimentos de maneira geral, e da

indústria do petróleo em particular, mais especificamente considerando otimização inte-

grada, e principalmente dentro do paradigma de agentes. Foram pesquisados aspectos

do problema propriamente dito, trabalhos pré-existentes visando sua modelagem, arqui-

teturas e algoritmos disponíveis para implementação dos modelos. Portanto, o resul-

tado esperado desta primeira etapa era o conhecimento mais profundo do problema, com

a identificação de seus principais aspectos, a avaliação das alternativas existentes para

modelá-lo e para implementar um protótipo;

• Na segunda etapa, as diferentes abordagens para a modelagem do problema, que foram

pesquisadas na etapa anterior, foram comparadas de forma qualitativa em busca da me-

lhor alternativa. Foram apresentadas as vantagens da modelagem baseada em agentes,

particularmente dentro do paradigma holônico, levando em conta as características do

problema de planejamento integrado da cadeia de suprimentos da indústria do petróleo;

• Na terceira etapa, o modelo distribuído baseado em agentes holônicos foi formalmente

descrito, resultando no problema denominado HCOP (Problema de Satisfação de Restri-

ções Holônico com Otimização);

• Na quarta etapa, foi desenvolvido o meta-algoritmo denominado HCOMA (Meta-Algoritmo

para o Problema de Satisfação de Restrições Holônico com Otimização), que possibilitou

a obtenção de uma solução para o HCOP de forma computacional;

• Finalmente, na quinta etapa, um caso de estudo da empresa PETROBRAS foi modelado

utilizando o formalismo do HCOP e implementado através do HCOMA. Assim, foram

realizados experimentos utilizando esta implementação, e seus resultados foram analisa-



19

Figura 1: Esquema Resumido da Tese

dos e comparados usando os diferentes cenários pertencentes a este caso de estudo, de

modo a permitir a avaliação da eficácia e da eficiência do modelo proposto.

A sequência destas atividades encontra-se representada na Fig. 1, que apresenta um esquema

resumido das ideias e contribuições deste trabalho.

1.4 Contribuições

A principal contribuição deste trabalho foi a definição do Problema de Satisfação de Res-

trições Holônico com Otimização (HCOP), baseado tanto no Problema de Satisfação de Restri-

ções Distribuído com Otimização (DCOP) como no modelo de agentes holônicos. Além da sua

formulação, especificou-se uma arquitetura distribuída para a solução de um HCOP utilizando

otimizadores locais, e o desenvolvimento de um meta-algoritmo, denominado HCOMA, para

possibilitar o processamento de soluções para este problema utilizando a arquitetura proposta.

Para ilustrar o interesse no modelo, uma contribuição secundária foi a sua aplicação em um

caso de estudo da empresa PETROBRAS, utilizando submodelos de otimização de produção e

logístico, já disponíveis em empresas de petróleo. Isto ocorreu tanto no nível formal como na

sua efetiva implementação, que possibilitou a realização de experimentos como uma prova de



20

conceito. Seus resultados justificaram o interesse nesta aplicação do modelo.

1.5 Organização do Texto

Este trabalho foi dividido em 3 partes: Planejamento da Cadeia de Suprimentos, Aborda-

gem Distribuída e Contribuições. A parte I é constituída de 2 capítulos, onde o Capítulo 2

apresenta uma revisão bibliográfica de temas relativos a cadeias de suprimentos em geral e a

cadeias de suprimentos da indústria do petróleo em particular. Assim, são introduzidos os con-

ceitos associados à gerência de cadeia de suprimentos e suas peculiaridades para a cadeia do

petróleo. O Capítulo 3 faz um resumo das tentativas de abordagem para modelar o problema de

planejamento integrado da cadeia de suprimentos do ponto de vista centralizado. Além disso,

ele apresenta um resumo do estado da arte dos modelos de planejamento recentes, suas vanta-

gens e limitações, e os desafios para futuros modelos.

A parte II possui 2 capítulos. No Capítulo 4 são analisados os modelos de agentes, e

suas vantagens em relação à abordagem centralizada. Particularmente o paradigma de agentes

holônicos é introduzido, além de mostrar a conveniência da escolha deste tipo de organização

específica para o problema em foco. O Capítulo 5 define o problema de satisfação de restrições

distribuídas com otimização (DCOP), discutindo sua importância para se alcançar uma otimiza-

ção global em problemas complexos. Além disso, são apresentados os algoritmos disponíveis

para sua solução.

A parte III, que apresenta as principais contribuições do trabalho, consiste de 4 capítulos. O

Capítulo 6 define o Problema de Satisfação de Restrições Holônico com Otimização (HCOP),

indicando como este foi formulado através de uma composição das idéias de DCOP e agentes

holônicos. O problema é descrito informalmente e, então, convenientemente formalizado. Em

seguida é apresentado o meta-algoritmo desenvolvido, denominado HCOMA, cujo objetivo é a

solução do HCOP através da possibilidade de integrar de forma distribuída outros algoritmos

de otimização existentes, mesmo que de natureza centralizada. A modelagem do problema de

Planejamento Integrado da Cadeia de Suprimentos da Indústria de Petróleo como um Problema

de Satisfação de Restrições Holônico com Otimização (HCOP) é detalhada no Capítulo 7, uti-

lizando o formalismo apresentado no Capítulo 6. O Capítulo 8 descreve então os experimentos

realizados, que foram divididos em duas fases. A primeira fase compara o meta-algoritmo com

um algoritmo centralizado, utilizando um HCOP genérico. Já a segunda fase modela um caso

de estudo da empresa PETROBRAS relativo ao planejamento integrado como um HCOP com-

plexo, que foi implementado através do HCOMA. Em seguida os resultados destes experimen-



21

tos são apresentados e analisados, a fim de avaliar o modelo proposto. Finalmente, o Capítulo 9

apresenta as conclusões do trabalho, bem como uma perspectiva sobre possíveis extensões em

trabalhos futuros.

O texto contém ainda 4 anexos. Nos Anexos A e B apresentam-se respectivamente as

provas de corretude e completude dos algoritmos ADOPT e DPOP, utilizados como base do

HCOMA. Uma representação típica em XML de uma instância de HCOP é ilustrada no Anexo

C. Finalmente, o Anexo D descreve a solução completa obtida pelo HCOMA para o caso padrão

apresentado no Capítulo 8.



22

Parte I

Planejamento da Cadeia de Suprimentos



23

2 Cadeias de Suprimentos

2.1 Introdução

De acordo com Muckstadt e seus colegas (MUCKSTADT et al., 2001) existem muitas defi-

nições e interpretações para o termo “cadeia de suprimentos”. Estes autores definiram uma

cadeia de suprimentos como o conjunto de empresas atuando para projetar, engendrar, comer-

cializar, manufaturar e distribuir produtos e serviços para consumidores finais. Por outro lado,

Simchi-levi e seus colegas (SIMCHI-LEVI; KAMINSKY; SIMCHI-LEVI, 2000) definiram este termo

como um conjunto de abordagens utilizadas para integrar fornecedores, fabricantes, depósitos

e lojas eficientemente, de forma que mercadorias sejam produzidas e distribuídas nas quanti-

dades certas, para os locais certos, e no tempo certo, a fim de minimizar custos globais, e ao

mesmo tempo satisfazer requisitos de qualidade de serviço. Poirier e Reiter (POIRIER; REITER,

1996) perceberam que o conceito de cadeia de suprimentos melhora a posição competitiva de

empresas que colaboram, porque ele leva à criação de sinergias entre estas empresas. Em par-

ticular, tais sinergias são devido ao fato que uma cadeia de suprimentos é um sistema, e como

conseqüência, este sistema é superior à soma das empresas constituintes. Desta forma, po-

demos definir cadeia de suprimentos como um processo integrado onde um certo número de

entidades de negócio (i.e., fornecedores, produtores, distribuidores e revendedores) trabalham

em conjunto em um esforço para: (1) adquirir matérias-primas, (2) converter estas matérias-

primas em produtos finais específicos, e (3) entregar estes produtos finais aos revendedores.

Esta cadeia é tradicionalmente caracterizada por um fluxo de materiais para frente e um fluxo

de informações para trás (BEAMON, 1998). Diferentes entidades em uma cadeia de suprimentos

operam sujeitas a diferentes conjuntos de restrições e objetivos. Entretanto, estas entidades são

altamente interdependentes quando se deseja melhorar o desempenho da cadeia de suprimentos

em termos de objetivos tais como entrega no prazo, garantia de qualidade e minimização do

custo. Como resultado, o desempenho de qualquer entidade em uma cadeia de suprimentos

depende do desempenho das outras, e a disposição e habilidade delas para coordenar ativida-

des dentro da cadeia de suprimentos. Uma economia global e o aumento nas expectativas dos



24

clientes com relação a custo e serviço tem influenciado os produtores a se empenharem na me-

lhoria dos processos dentro de suas cadeias de suprimentos, o que frequentemente se denomina

reengenharia da cadeia de suprimentos (SWAMINATHAN, 1996). Durante anos, pesquisadores

e tecnólogos tem investigado os vários processos da cadeia de suprimentos principalmente de

forma individual. Recentemente, entretanto, tem havido uma atenção crescente com relação ao

desempenho, projeto e análise da cadeia de suprimentos como um todo.

2.2 Definições Básicas

2.2.1 Gerenciamento da Cadeia de Suprimentos

Em seu mais alto nível uma cadeia de suprimentos é constituída de dois processos básicos

integrados: (1) o Planejamento de Produção e o Controle de Estoque, e (2) o Processo de Dis-

tribuição e Logística (BEAMON, 1998). O Planejamento de Produção e o Processo de Controle

de Estoque incluem os subprocessos de produção e armazenagem, e suas interfaces. Mais es-

pecificamente, o planejamento de produção descreve o gerenciamento completo do processo de

produção, incluindo aquisição e escalonamento de matéria-prima, escalonamento do processo

de produção, e controle da manipulação de material. O controle de estoque descreve o gerenci-

amento das Políticas de Estoque e procedimentos para estoque de matérias-primas, de produtos

intermediários e de produtos finais. O Processo de Distribuição e Logística determina como os

produtos são retirados e transportados do depósito para os revendedores. Estes produtos podem

ser transportados para os revendedores diretamente ou podem primeiro ser transferidos para

instalações de distribuição, que, por sua vez, transportam os produtos para os revendedores.

Este processo inclui o gerenciamento da retirada do estoque, transporte e a entrega do produto

final. A Logística é a parte mais crítica da cadeia de suprimentos, pois de nada adianta produzir

ou disponibilizar a mercadoria ou serviço que o cliente deseja, sem entregar este produto ou

serviço na quantidade e no prazo desejados pelo cliente. Assim, não é possível a melhoria da

cadeia de suprimentos sem a adaptação da rede de logística. Estes processos interagem uns com

os outros para produzir uma cadeia de suprimentos integrada. O projeto e gerenciamento destes

processos determinam a extensão na qual a cadeia de suprimentos funciona como uma unidade

para satisfazer os objetivos de desempenho exigidos (BEAMON, 1998). A Fig. 2 representa estes

processos (elipses) juntamente com os atores (retângulos) em uma típica cadeia de suprimentos

de 4 níveis.

A cadeia de suprimentos de uma empresa é composta por instalações geograficamente dis-

persas, onde as matérias-primas, produtos intermediários ou produtos acabados são adquiridos,



25

Figura 2: Processos de uma Típica Cadeia de Suprimentos

transformados, armazenados ou vendidos, e ligações de transporte que conectam instalações ao

longo das quais os produtos fluem.

Este fluxo de produtos pode ser no sentido downstream de fornecedores para as fábricas,

delas para os centros de distribuição e, finalmente, destes para os mercados. Em geral, uma

rede de fornecimento de corrente pode ser constituída por um número arbitrário de níveis. Por

outro lado, o fluxo de produtos pode ir no sentido upstream quando produtos intermediários são

devolvidos às fábricas para reciclagem ou produtos reusáveis são retornados dos mercados para

os centros de distribuição para reciclagem.

A meta da empresa é agregar valor aos seus produtos à medida que passam através de sua

cadeia de suprimentos e transportá-los para mercados geograficamente dispersos nas quantida-

des corretas, com as especificações corretas, no momento certo, e com um custo competitivo.

Podemos distinguir entre plantas, que são instalações de fabricação de produtos onde trans-

formações físicas ocorrem e centros de distribuição, que são instalações onde os produtos são

recebidos, classificados, guardados em estoque, colhidos de volta e despachados, mas não fi-

sicamente transformados. O foco principal e requerido no estudo de cadeias de suprimentos

apresenta, em sua grande maioria, uma visão global do sistema, buscando avaliar as conjunções

e interferências entre os processos envolvidos. O sistema a ser estudado envolve uma rede de

atividades, cada uma com sua funcionalidade específica, eficiência e desempenho.

Outras dificuldades também podem surgir quando diferentes empresas ou departamentos

de uma mesma empresa tomam decisões tecnológicas independentes ao longo da cadeia de

suprimentos. Desta forma, seus sistemas de informação não são nem coordenados, nem com-

patíveis e, consequentemente, as informações não são prontamente compartilhadas para trás

e para frente ao longo da cadeia de suprimentos. À medida que as empresas passam por um



26

processo contínuo e acelerado de consolidação, a necessidade de um sistema de informações

flexível, extensível, escalável e adaptável se torna cada vez maior. Como resultado, ferramentas

de suporte a decisão que permitam a análise de várias alternativas podem ser úteis para a quan-

tificação imparcial de ganhos e para ajudar a organização a tomar a decisão certa (FEIGIN et al.,

1996).

As funções de gerenciamento das cadeias de suprimentos em geral operam em 3 níveis:

estratégico, tático e operacional (FOX; CHIONGLO; BARBUCEANU, 1993). Cada nível se caracte-

riza pelo período de tempo no qual as decisões são tomadas e pela granularidade das decisões

durante aquele período.

2.2.2 Planejamento Integrado da Cadeia de Suprimentos

A gestão da cadeia de suprimentos refere-se ao planejamento integrado. Primeiramente ele

está relacionado com integração funcional, tal como compra, fabricação, transporte e ativi-

dades de armazenagem. Por outro lado, ele se refere à integração espacial destas atividades

através de mercados e instalações dispersas geograficamente. Finalmente, ele se refere à inte-

gração intertemporal destas atividades sobre horizontes de planejamento estratégicos, táticos

e operacionais. Integração intertemporal, que também é chamada planejamento hierárquico,

requer consistência e coerência entre decisões da cadeia de suprimentos sobrepostas em varios

niveis de planejamento. De forma aproximada, planejamento estratégico envolve as decisões de

aquisição de recursos sobre horizontes de planejamento longos, planejamento tático envolve as

decisões de alocação de recursos ao longo de horizonte de planejamento médios, e planejamento

operacional envolve decisões afetando a execução do curto prazo dos negócios da companhia

(SHAPIRO, 2006).

O Planejamento Integrado ou Agregado é o processo pelo qual a empresa determina os

níveis de capacidade de produção, subcontratação e estoque, sobre um horizonte de tempo

específico. Seu objetivo é atender à demanda de modo a maximizar os lucros da empresa.

Assim, ele pode ser definido da seguinte maneira: dada uma previsão de demanda para cada

período ao longo do horizonte de planejamento, determinar os níveis de produção, estoque e

capacidade para cada período, maximizando o lucro da empresa ao longo de todo o horizonte

de planejamento (CHOPRA; MEINDL, 2001). Para criar um plano agregado são necessárias as

seguintes informações:

• Previsão de Demanda

• Custos de Produção



27

• Capacidades de Produção,

• Tempos de Produção

• Custos de Manutenção de Estoques

• Custos de Atrasos

• Restrições Operacionais e Organizacionais

A qualidade de um planejamento integrado exerce um impacto significativo sobre a lucrativi-

dade da empresa. Assim, um planejamento deficiente pode resultar em perda de vendas e perda

de lucros, caso o estoque e a capacidade disponíveis forem insuficientes para atender à de-

manda. Além disso, um planejamento deficiente pode resultar também em um nível de estoque

excessivo, elevando os custos.

2.2.3 Logística

Pela definição do Council of Supply Chain Management Professionals (CSCMP, 2000), "Lo-

gística é a parte do gerenciamento da cadeia de suprimentos que planeja, implementa e controla

o fluxo e armazenamento eficiente e econômico de matérias-primas, materiais semi-acabados e

produtos acabados, bem como as informações a eles relativas, desde o ponto de origem até o

ponto de consumo, com o propósito de atender às exigências dos clientes”.

A área de logística está preocupada em gerenciar o transporte, armazenagem e estocagem de

materiais e produtos. Planejamento de transporte é um campo vasto por si mesmo que envolve

decisões complexas sobre os modos de transporte, transportadores, agendamento de veículos

e roteamento, e muitas outras atividades que servem para movimentar os produtos através da

cadeia de suprimentos da empresa. Modelos de otimização e sistemas de modelagem têm sido

aplicados com sucesso na solução destes problemas de decisão, e certas linhas de pesquisa apli-

cada continuam a procurar métodos mais rápidos e mais poderosos (CHOPRA; MEINDL, 2001).

2.2.4 Gestão e Políticas de Estoque

Se por um lado baixos níveis de estoque podem levar a perdas de economias de escala

e a altos custos por falta de produto, por outro lado o excesso de estoques representa custos

operacionais e de oportunidade do capital empatado. Encontrar o ponto ótimo não é em geral

uma tarefa simples. Este é o objetivo do processo de gestão de estoques em uma cadeia de

suprimentos. Para lidar com as incertezas associadas tanto à previsão de demanda de produtos



28

finais, quanto ao plano de produção e fornecimento destes produtos e da matéria-prima, torna-

se necessário utilizar estoques de segurança. Se por um lado o excesso de produtos resulta em

custos extras de manutenção de estoques, por outro lado a falta de estoques de segurança leva a

perdas de venda, com consequente prejuízo e além de deterioração do nível de serviço ao cliente

(GARCIA et al., 2006). Assim, um ponto chave dentro da logística de uma organização é a não

utilização de regras simplistas e generalistas para calcular os estoques de segurança, que devem

ser estimados para cada situação específica através de modelos analíticos ou de simulação.

2.2.5 Previsão de Demanda

A previsão de demanda refere-se a métodos quantitativos para a previsão de demanda fu-

tura pelos produtos vendidos pela empresa, sendo, obviamente, essenciais para a construção de

um modelo de gestão da cadeia de suprimentos. Técnicas de previsão de demanda são princi-

palmente métodos estatísticos, e são aplicados para projetar padrões futuros de vendas a partir

de dados históricos sobre vendas passadas e, possivelmente, outros dados sobre a empresa, a

economia global, etc. A análise de séries temporais é uma grande classe de métodos para o de-

senvolvimento de previsões simplesmente a partir de bases de dados históricos. Na construção

de um modelo de série de tempo, se tenta encontrar padrões nestes dados históricos, tais como

os efeitos sazonais ou tendências (SHAPIRO, 2006).

2.2.6 Gestão da Produção

O planejamento de produção varia significativamente entre as indústrias. Assim, no nível

operacional, os modelos de otimização e sistemas de modelagem para escalonamento de pro-

dução devem ser personalizados para as peculiaridades do ambiente de produção. Nos níveis

do planejamento tático e estratégico, onde detalhes de tempo são menos importantes, as várias

classes de problemas de planejamento de produção muitas vezes podem ser modeladas com

precisão por modelos de uso geral e sistemas de modelagem que lidam com decisões de pla-

nejamento multi-período. Ainda assim, a coordenação inter-temporal dos planos de produção

estratégico, tático e operacional é muito importante, pois permite ligar coerentemente modelos

operacionais detalhados com modelos táticos agregados (SHAPIRO, 2006).

2.2.7 Métricas de Desempenho

Um componente importante no projeto e análise de cadeias de suprimentos é a determi-

nação de medidas de desempenho apropriadas. Medidas de desempenho são utilizadas para



29

determinar a eficiência e/ou efetividade de um sistema existente ou comparar sistemas alterna-

tivos concorrentes. A literatura disponível sobre o assunto classifica as medidas de desempenho

como qualitativas ou quantitativas. As medidas de desempenho qualitativas são aquelas para

as quais não existe nenhuma medida numérica direta, embora alguns aspectos delas possam ser

quantificados. São apontadas medidas de desempenho deste tipo, como por exemplo, satisfação

de clientes, fluxo da informação, desempenho dos fornecedores e gerenciamento de risco, mas

sendo qualitativas, se tornam mais difíceis de serem incorporadas em modelos quantitativos.

Um indicador único é normalmente inadequado, em função de sua dificuldade em abranger

todos os aspectos importantes que devem ser mensurados (BEAMON, 1999). Beamon se reportou

a trabalhos de outros pesquisadores para afirmar que os sistemas de avaliação de desempenho

de cadeias de suprimentos predominantemente têm utilizado duas medidas de desempenho:

1. Custo

2. Combinação de custo e atendimento aos clientes

As medidas de desempenho quantitativas são aquelas que podem ser diretamente descritas atra-

vés de valores numéricos. Estas medidas podem ser divididas em duas categorias:

1. Medidas baseadas diretamente em custos ou lucro, como p. ex.:

• Custo total: total dos custos, que envolve, p. ex., os seguintes componentes:

(a) Custos de distribuição: total dos custos de distribuição, incluindo transporte e ma-

nuseio.

(b) Custos de produção: total dos custos de produção, incluindo processamento, manu-

tenção e custos relacionados ao retrabalho.

(c) Custos de estoque: total de custos em estoques, que incluem custos de produtos e

de estocagem.

• Faturamento: valor monetário das vendas ou o volume total vendido;

• Lucro: valor da receita menos os custos;

2. Medidas baseadas no atendimento aos clientes, como p. ex.:

• Índice de pontualidade das entregas: fração dos pedidos dos clientes atendidos no prazo;

• Atraso nas entregas: intervalo de tempo entre a data prometida para a entrega de um

produto e a data real de entrega deste produto;



30

• Tempo de resposta para o cliente: intervalo de tempo exigido desde o momento em

que um pedido é feito por um cliente até o momento em que a entrega correspondente é

realizada;

• Tempo de fabricação: intervalo de tempo exigido desde o momento em que começa a

fabricação de um produto até o momento em que este produto está completamente pronto.

2.3 Cadeia de Suprimentos da Indústria do Petróleo

2.3.1 Introdução

Segundo Eichmann (EICHMAN, 2000), a gestão da cadeia de suprimentos do petróleo tem

sido um dos mais difíceis desafios encontrados por pesquisadores desta área no mundo. Esta

cadeia de suprimentos é ilustrada na Fig. 3, cobrindo desde o estágio da extração de petró-

leo até o de distribuição de produtos derivados incluindo uma complexa rede logística e vários

processos de transformação que ocorrem nas refinarias. As atividades que constituem a cadeia

de suprimentos do petróleo são divididas em três grandes segmentos: upstream, midstream e

downstream. O segmento upstream inclui a exploração e a extração de petróleo. A explora-

ção inclui atividades sísmicas, geofísicas e geológicas, enquanto a extração inclui perfuração,

completação, ligação de linhas e a efetiva entrada em produção dos poços. O midstream é um

segmento intermediário e consiste na atividade de transporte do local de extração até as refi-

narias, e na atividade de refino. O transporte do petróleo envolve o bombeamento através de

oleodutos e a carga e descarga de navios. O refino, por sua vez, é a fase de manufatura da cadeia

e sua saída são os produtos finais que são a entrada para a comercialização, onde produtos de-

rivados do petróleo como a gasolina e o óleo diesel são vendidos para as empresas de revenda.

Finalmente, as tarefas de logística necessárias para levar os produtos refinados da refinaria para

os pontos de consumo estão no segmento downstream. Para que estes produtos cheguem a seu

destino, representado pelas empresas, que são os clientes da cadeia, eles devem ser transpor-

tados através de diferentes modais de transporte, como oleodutos, ferrovias ou rodovias, e em

geral passam antes por terminais de distribuição.

Cada estágio da cadeia pode ser uma empresa independente ou uma unidade de uma em-

presa integrada, e se comporta como cliente e produtor ao mesmo tempo, dependendo do sentido

considerado ao longo da cadeia. Assim, a fase de refino pode ser vista como cliente do estágio

de extração de petróleo, e ao mesmo tempo como produtor em relação ao processo de distribui-

ção. As companhias distribuidoras se localizam em um dos extremos da cadeia e representam

o cliente final de uma empresa de petróleo que possua o segmento de refino. Para estas compa-



31

Figura 3: Cadeia de Suprimentos da Indústria do Petróleo

nhias, por outro lado, o cliente final é o posto de gasolina, para o qual, por sua vez, o cliente é

aquele que abastece seu veículo com combustível.

Devido à natureza dinâmica do negócio do petróleo, as empresas petrolíferas estão cada vez

mais interessadas em melhorar o planejamento de suas operações. Aplicativos de planejamento

são de particular interesse devido à sua natureza inerentemente incerta, altos incentivos econô-

micos e importância estratégica. Como já foi dito, o planejamento pode ser classificado nos

seguintes níveis: estratégico (longo prazo), tático (médio prazo), e operacional (curto prazo).

O planejamento de longo prazo cobre o horizonte de tempo de um a vários anos, o de médio

prazo de alguns meses a um ano, e o de curto prazo cobre de uma semana a três meses (GROS-

SMAN; HEEVER; HARJUNKOSKI, 2001). Decisões são tomadas em diferentes estágios da cadeia

de suprimentos e em diferentes níveis da hierarquia de planejamento. Estas decisões diferem

principalmente com relação ao escopo do negócio, horizonte de tempo e detalhe do processo

(agregação de dados) (LASSCHUIT; THIJSSEN, 2004).

Na indústria do petróleo o planejamento estratégico determina a estrutura da cadeia de su-

primentos (e.g., localização da refinaria, expansão da sua capacidade, etc). O planejamento

tático afeta decisões tais como a atribuição de metas de produção às refinarias e o transporte

das refinarias aos centros de distribuição. Uma decisão tática poderia ser a escolha de que tipo

de petróleo comprar em cada período de tempo, que produtos derivados comercializar e em



32

que quantidades serão produzidos, comprados, armazenados, transferidos e vendidos. Por ou-

tro lado, o planejamento operacional determina a atribuição de tarefas às diferentes unidades

de produção de cada refinaria e aos modais de transporte de petróleo e produtos, considerando

restrições de recursos e de tempo. Neste nível são escolhidos os modos de operação, os níveis

de estoque, as quantidades produzidas em cada unidade para atender as demandas do mercado

e a forma do escalonamento do transporte de produtos. Além disso, o escalonamento diz res-

peito às informações detalhadas sobre decisões tais como sequenciamento e alocação de tarefas

a recursos de forma a atender as metas estabelecidas pelo planejamento. O escalonamento con-

sidera períodos de tempo tais como dias ou semanas (MAGALHAES et al., 1998). A combinação

destas variáveis de decisão é que dará subsídios suficientes para um bom acompanhamento e

gestão da cadeia do petróleo. Assim, uma ferramenta de planejamento capaz de integrar os

dados adequadamente e fornecer soluções para estas variáveis se torna um grande trunfo para a

gestão da cadeia de suprimentos do petróleo.

O petróleo é uma mercadoria (commodity) com características extremamente dependentes

da conjuntura global. O preço do barril do petróleo varia e oscila de acordo com o comporta-

mento dos fatores sócio-econômicos do mundo, o que faz com que pequenas turbulências no

mercado possam causar enormes danos ao longo dessa cadeia. Portanto, é importante um bom

planejamento logístico, que mantenha a dinâmica e a rapidez no tempo de resposta, de forma

a minimizar os efeitos nocivos à cadeia. Além disso, existem diferentes tipos de petróleo, com

diferentes qualidades, variando de petróleos mais leves e caros como o Árabe Leve, até os pe-

sados como o venezuelano ou o Marlim produzido na Bacia de Campos, Brasil. A cada tipo de

petróleo está associado um diferente perfil de produção, com diferentes proporções de produ-

tos refinados. Assim, um petróleo leve é responsável pelo refino de uma maior quantidade de

produtos nobres (denominados “claros”), como gasolina e nafta, enquanto um petróleo pesado

gera uma maior proporção de produtos de maior densidade (“escuros”) e mais baratos, como

óleo combustível e asfalto. A sincronia do planejamento e da produção pressupõe que o sistema

esteja inserido em uma condição ambiental conhecida e previsível. À medida que fatores exó-

genos interferem nesse sistema, o sincronismo existente pode sofrer perturbações que muitas

vezes o abalam e o desestruturam. Nestes casos, todas as estimativas e previsões, incluindo

projetos de investimentos, níveis de oferta e demanda, podem sofrer graves impactos. Dessa

maneira, pode-se concluir que a cadeia de suprimentos do petróleo é extremamente sensível às

condições do mercado em geral. Nos últimos anos, a indústria do petróleo tem verificado que as

empresas têm reduzido ou eliminado significativamente as margens operacionais no sentido de

reduzir níveis de estoque e ociosidades, tornando o sistema ainda mais suscetível e vulnerável às

oscilações da oferta e da demanda. Além disso, normas e regulamentos de preservação do meio



33

ambiente se intensificaram e tornaram-se uma causa dramática para o aumento de restrições

operacionais, agravando ainda mais a produtividade das operações.

Nas próximas seções, o escopo da cadeia de suprimentos do petróleo é descrito, bem como

um breve resumo de seus subsistemas.

2.3.2 Extração de Petróleo

Todos os campos de petróleo representam uma estrutura geológica limitada e conseqüen-

temente, possuem um limite superior em relação à quantidade de hidrocarbonetos que podem

conter. O tamanho do reservatório, que pode ser definido por métodos geológicos e geofísicos,

dá uma estimativa do volume potencial de óleo no campo, antes que a perfuração tenha início.

À medida que os dados de perfuração e produção ficam disponíveis, a estimativa da reserva

tende para uma acurácia cada vez maior (DAKE, 2004). O volume total de óleo em um campo

é normalmente denominado oil initially in place (OIIP) ou oil originally in place (OOIP), ou

algumas vezes apenas oil in place (OIP). Isto é equivalente à quantidade total de petróleo exis-

tente nos poros das rochas de um ou mais reservatórios que compõem um campo (ROBELIUS,

2007). É relativamente direto calcular o OIIP se a extensão em área e a espessura do reserva-

tório são conhecidas, juntamente com a porosidade média e os níveis de saturação (ROBELIUS,

2007). Na prática, as estimativas do OIIP ficam mais complicadas porque tanto a porosidade

quanto a saturação variam por todo o reservatório. Campos de petróleo convencionais capturam

somente uma pequena quantidade de todo o petróleo contido nas rochas-fonte do sistema petro-

lífero, ou seja, a quantidade total de petróleo que pode ser extraída de um dado reservatório é

bem menor que seu OIP, sendo esta quantidade recuperável do OIIP classificada como a reserva

do campo (vide Eq. 2.1). O fator de recuperação FR é um valor dinâmico, representando a

percentagem estimada do OIIP total que pode ser recuperado. O FR depende de numerosos pa-

râmetros, tais como propriedades de rochas e fluidos, tecnologia de produção, localização dos

poços, e seqüencia de perfuração e de entrada em produção dos poços.

TotalReservaPetroleo = FR ?OIP (2.1)

A percentagem recuperável do OIIP pode variar de menos de 10% até mais de 80%, depen-

dendo das propriedades individuais do reservatório e dos métodos de recuperação, mas a média

global é baixa e em torno de 20% (MILLER, 1995). Uma vez que um reservatório é localizado,

o processo de extração de petróleo pode começar. Este processo de extração é normalmente de-

nominado produção, embora se possa concluir que extração é um termo mais adequado, pois o



34

Figura 4: Curva de Produção Teórica de um Campo de Petróleo

petróleo é simplesmente removido do reservatório. A produção de um campo de petróleo tende

a passar por diversos estágios, que podem ser descritos por uma curva de produção idealizada.

Uma versão desta curva está representada na Fig. 4 , que ilustra uma curva de produção teórica

descrevendo os vários estágios de maturidade dentro do ciclo de vida de um campo de petróleo

(ROBELIUS, 2007). Após a descoberta do poço, um poço piloto é perfurado para determinar o

potencial de desenvolvimento do reservatório. O desenvolvimento adicional prossegue e a pri-

meira produção de petróleo marca o início da fase de crescimento da produção do campo. Mais

tarde o campo entra na fase de platô, onde a capacidade máxima de produção é alcançada antes

de finalmente chegar ao início de seu declínio, que termina com seu abandono, quando o limite

econômico é atingido. Para muitos campos, especialmente os menores, a fase platô pode ser

muito curta e se assemelhar mais a um pico acentuado, enquanto campos maiores podem per-

manecer várias décadas no nível de produção do platô. O tempo de vida de um campo e a forma

da curva de produção estão em geral relacionados com o tipo de petróleo que é produzido.

Fluxos de fluidos em meios porosos podem ser simulados com grande nível de complexi-

dade ou simplicidade, dependendo em grande parte dos detalhes do modelo de fluxo. Estes tipos

de processos de fluxo geralmente levam a comportamentos complicados, e os modelos matemá-

ticos devem incluir análise estatística, fractal e/ou procedimentos estocásticos (RAMIREZ et al.,

2008). Muitos modelos de simulação de reservatórios são dependentes de vários modelos numé-

ricos. Um exemplo é o simulador de petróleo ECLIPSE da empresa Schlumberger Information

Solutions (ECLIPSE, 2007), que utiliza uma abordagem de diferenças finitas em três dimensões

para solucionar equações de balanço energético e de massa em sistemas de fluido multifase com

até quatro componentes em um reservatório com geometria complexa. Tradicionalmente os mé-

todos de diferenças finitas dominam, mas elementos finitos e modelos numéricos também são



35

usados. Recentemente até técnicas computacionais mais avançadas, tais como redes neurais e

lógica nebulosa (ZELLOU; OUENES, 2007) ou multigrids algébricos (STUBEN et al., 2007), foram

utilizados para modelar fluxos de reservatórios. A combinação de modelos de fluxo de reserva-

tórios com planos de perfuração e desenvolvimento, juntamente com modelos econômicos de

investimento para o campo, podem resultar em descrições acuradas da produção real e de como

ela mudará ao longo do tempo. Entretanto, a predição precisa dos fluxos de fluido normalmente

exige dados detalhados e conhecimento de muitas propriedades importantes do reservatório,

além de parâmetros, tais como permeabilidade, pressão e similares. Em casos práticos, muitos

dos dados necessários para esta modelagem acurada raramente estão disponíveis para pessoas

externas à empresa petrolífera, já que estas empresas não os liberam. Conseqüentemente, mode-

los simplificados têm de ser desenvolvidos por vários pesquisadores e engenheiros para mitigar

esta deficiência. Alguns exemplos de modelos simplificados para previsão de produção são a

análise da taxa de depleção, que é o esgotamento provocado pela extração contínua do petróleo

do reservatório, e a utilização de curvas de declínio, que são aplicáveis a campos individuais.

A análise da curva de declínio tem uma longa história e tem sido usada por mais de 50 anos

pela indústria do petróleo. De forma similar, a depleção é fortemente ligada às relações fun-

damentais do fluxo de reservatórios e, por este motivo, a análise da taxa de depleção é uma

abordagem confiável. A taxa de declínio se refere ao decréscimo da extração de petróleo ao

longo do tempo. Em muitos casos a taxa de declínio é calculada em termos anuais, revelando

a mudança no volume produzido de um ano para outro. A Eq. 2.2 mostra uma definição geral

para a taxa de declínio.

TaxaDeclinio =
produc?a?ot ?produc?a?ot?1

produc?a?ot?1
(2.2)

O declínio de produção pode ser causado por várias razões, mas principalmente acidentes e

depleção. Esta última é a mais comum, conseqüência das próprias forças da natureza. A deple-

ção das reservas acarreta o declínio da pressão do reservatório, reduzindo a vazão do fluxo de

produção. Em campos onde a estratégia de produção é manter a pressão do reservatório, através

da injeção de água ou gás, os volumes extraídos de petróleo e água permanecerão relativamente

constantes por toda a vida do campo, de acordo com a equação de balanço de massa (SATTER;

IQBAL; BUCHWALTER, 2008). Entretanto, a produção de petróleo irá afinal decair, e a produção

de água aumentar à medida que mais e mais água injetada começar a se difundir dentro dos

poços de produção. Eventualmente o reservatório se esgota, já que seus poços passam a pro-

duzir muita água e ele deixa de ser economicamente viável, apesar do fato de que a pressão do

reservatório ainda possa ser alta. Em (ARPS, 1945) foram criados os fundamentos da análise



36

de curva de declínio, propondo curvas matemáticas simples, i.e. exponencial, harmônica ou

hiperbólica, como uma ferramenta para gerar uma previsão razoável para a produção de um

campo de petróleo uma vez que ele atinja o início de seu declínio. Sua abordagem original foi

mais tarde aperfeiçoada, e é ainda usada como uma referência padrão na indústria para análise

e interpretação de dados de produção devido a sua simplicidade. Uma curva de declínio expo-

nencial ajustada à fase de declínio dos campos fornece uma taxa de declínio anual de 15.3%.

Analisando as curvas de declínio associadas a vários dos mais importantes campos de petróleo

em produção ao redor do mundo, que são mostradas em (HOOK, 2009), é possível constatar

que as taxas de declínio não se afastam muito deste valor, o que representa um declínio mensal

aproximado de 1 %.

2.3.3 Refino de Petróleo

O principal objetivo de uma refinaria é transformar óleo bruto em produtos de maior valor

agregado, além de maximizar o lucro. A refinaria produz frações leves (propeno, gás lique-

feito de petróleo, gasolina e nafta), médias (querosene de aviação e óleo diesel) ou pesadas

(parafina, lubrificantes, óleo leve, gás, coque e óleo combustível) de acordo com a extensão e

complexidade das suas cadeias de carbono. Os produtos refinados têm muitas aplicações, tais

como combustível automotivo, combustível de aviação, solventes, lubrificantes, asfaltos, coque

e matéria-prima para a indústria petroquímica. O perfil de produção depende da mistura de óleo

processada pela refinaria. O American Petroleum Institute classifica o petróleo bruto de acordo

com sua densidade, que vai de leve (menos densa) à pesada (mais denso), através de um índice

conhecido como API. Quanto mais baixa a densidade do óleo, maior o índice API e maior o

valor comercial do óleo e os produtos dele derivados.

Os processos de separação (destilação de petróleo bruto e destilação a vácuo) são concebi-

dos, para separar o óleo nas suas frações básicas, cujo rendimento depende do óleo processado,

ou para processar uma fração previamente gerada para produzir um determinado grupo de com-

ponentes. Dependendo das metas de produção, diferentes processos de conversões e tratamen-

tos são aplicados para as frações do petróleo. Processos de conversão, tais como craqueamento,

craqueamento catalítico, reformação catalítica e hidrocraqueamento, transformam uma fração

em uma outra, ou alteram a estrutura molecular de uma fração (por exemplo, produtos pesa-

dos podem ser transformados em produtos leves ou médios, que têm maior valor comercial).

Os processos de tratamento (hidrodessulfurização e hidrotratamento) proporcionam um melhor

corte de produtos semi-acabados, reduzindo contaminantes, como nitrogenio, enxofre e metais,

ou removendo-os de sua estrutura. A Tab. 1 descreve a matéria-prima e os produtos derivados



37

Unidade de processo Entrada Produto

Destilação Atmosférica petróleo gas comb., glp, nafta leve e pesada, resíduo,

qav /querosene, gasóleo leve e pesado

Destilação a Vácuo resíduo atmosférico gasóleo, matéria-prima p/ lubrificante, resíduo

Coque gasóleo, destilado de coque gasolina, matéria-prima petroquímica

Fluid Catalytic Cracker gasóleo, óleo reciclado, destilado de coque, gas combustível, propano, butano, nafta,

(FCC) oleo comb. resídual, cru reduzido gasóleo leve, gasóleo pesado, óleo decantado

Reforma Catalítica nafta, coque, nafta hidrocraqueada mistura de gasolina, gas combustível H2,

C3 e C4, aromático

Hidrocraqueamento gasóleo, óleo reciclado/ óleo craqueado, produtos leves e de alta qualidade (nafta,

destilado de coque, resíduo gas combustível, destilados de C3 e C4)

Hidrodesulfurização resíduo de alto teor de enxofre/ gasóleo oelofinas desulfurados

Hidrotratamento faixa de produtos desde nafta até matéria-prima p/ craqueamento,

cru reduzido de hidrocarbonos craqueados destilados, lubrificante

Tabela 1: Resumo das Unidades de uma Refinaria

dos processos descritos por unidades (KHOR; ELKAMEL, 2008). Uma unidade é definida como

um elemento de processamento contínuo que transforma correntes de entrada em várias corren-

tes de saída, cada uma associada a um produto. As propriedades físicas / químicas, tais como o

teor de enxofre e a viscosidade, e os rendimentos de tais produtos estão relacionados tanto com

o fluxo de entrada e com suas propriedades quanto como com as variáveis operacionais (MORO;

PINTO, 1998). As unidades de processamento estão sujeitas a condições especiais (variáveis de

operação), como temperaturas, altas pressões, e a adição de insumos que participam das reações

físicas e químicas necessárias para obter os fluxos de saída.

Além das unidades de processo, as refinarias possuem também tanques para armazenar e

misturar produtos finais e correntes intermediárias, de modo a especificar um produto final com

diferentes graus de qualidade, que devem satisfazer demandas do mercado. A topologia da refi-

naria é definida por um conjunto de unidades de processamento, tanques de armazenamento e de

mistura, e dutos interligando todos os componentes. A Fig. 5 ilustra um fluxograma detalhado

de uma refinaria em que são representadas as unidades de processo, correntes e tanques.

2.3.4 Gestão de Estoques de Petróleo e seus Derivados

Tipicamente uma refinaria de petróleo recebe seu petróleo bruto através de um oleoduto,

que, em geral, está ligado a um terminal portuário onde os navios petroleiros descarregam. A

programação de descarga destes petroleiros é geralmente definida no nível tático e não pode ser

alterada facilmente. Assim, para um determinado horizonte de programação, o número, tipo

e tempos de início e fim das parcelas de petróleo são conhecidos a priori. No oleoduto, tipos



38

Figura 5: Fluxograma de uma Refinaria Genérica



39

de petróleo adjacentes compartilham uma interface comum, que tem de ser manipulada corre-

tamente. Se estes lotes adjacentes de petróleo (conhecidos como parcelas) têm propriedades

significativamente diferentes, torna-se necessário levar em conta a mistura que sempre ocorre

dentro do oleoduto, causando degradação de parte do petróleo de maior qualidade. Por isso, é

necessário enviar esse óleo misto para o armazenamento, juntamente com o petróleo de qua-

lidade inferior ou para um designado para receber tais misturas. Esta operação é denominada

separação de interface, e o volume desta interface é definido com base na experiência anterior.

Na refinaria, o petróleo bruto é armazenado em tanques cilíndricos com uma capacidade total da

ordem de dezenas de milhares de metros cúbicos, que é geralmente suficiente para alguns dias

de operação de uma refinaria. Estes tanques exigem um volume mínimo de produto de cerca de

20% da capacidade total, de modo a evitar um dano no equipamento. O petróleo deve ser arma-

zenado nestes tanques durante um intervalo de tempo específico até que possa ser processado

nas unidades de destilação. Existe um intervalo mínimo de tempo para permitir a separação da

salmoura que forma uma emulsão com o óleo. Assim, não é possível alimentar as unidades de

destilação diretamente a partir do oleoduto, mesmo se um tanque intermediário é utilizado (vide

Fig. 6).

É possível transferir petróleo entre tanques, embora estas operações sejam raramente reali-

zadas, uma vez que são longas e geralmente é mais simples misturar tipos de petróleo a partir de

dois ou mais tanques durante a alimentação das unidades de destilação. Se a qualidade do óleo

em um determinado tanque e as condições de operação da unidade de destilação não são com-

patíveis, é necessário processar este óleo simultaneamente com o petróleo de um outro tanque.

Normalmente estas propriedades são conhecidas a priori pelo refinador e podem ser correla-

cionadas com a origem do petróleo. É imperativo que estas unidades sejam continuamente

alimentadas com petróleo, porque uma parada é uma operação muito onerosa e indesejável.

Questões quantitativas relativas à gestão de estoques são tratadas em uma grande parte da

literatura da área conhecida como Teoria de Estoque Estocástica. Por exemplo, o levantamento

feito em (PORTEUS, 1990) lista 122 referências sobre investigações desta área. Baseado em tra-

balhos fundamentais tais como o clássico modelo EOQ (economic order quantity), o modelo

de Newsvendor, e as políticas de pedidos ótimas, bem como as políticas de estoque básicas

(vide Seção 2.2.4), a pesquisa em teoria de estoque tem avançado no sentido de estender estes

resultados analíticos para as condições experimentadas na operação do dia-a-dia e no projeto

de cadeias de suprimento do petróleo. Os trabalhos de DeCroix e Arreola-Risa (DECROIX;

ARREOLA-RISA, 1998), Zipkin (ZIPKIN, 1986) e Graves e Willems (GRAVES; WILLEMS, 2000)

fornecem exemplos destas extensões, onde a consideração da produção é incorporada nos pro-

blemas de gerenciamento de estoques. Uma limitação séria de todos estes estudos, entretanto,



40

Figura 6: Ligação entre Tancagem de Petróleo e Unidade de Destilação em uma Refinaria

é que os efeitos do planejamento da produção sobre os estoques não são considerados.

2.3.5 Distribuição de Derivados de Petróleo

Operações de transferência e distribuição de produtos derivados de petróleo podem ser rea-

lizadas por via rodoviária, ferroviária, navio e oleoduto. Neste trabalho foram considerados os

dois últimos, que são os mais utilizados na cadeia do petróleo. Assim, geralmente o transporte

de petróleo bruto dos terminais portuários para as refinarias é feito através dos oleodutos, que é

o modo mais confiável e econômico para grandes quantidades de produtos líquidos e gasosos.

Ele distingue-se dos modos restantes de transporte, uma vez que pode funcionar continuamente

(SASIKUMAR, 1997), e é particularmente importante quando grandes quantidades de produtos

têm de ser bombeadas por grandes distâncias. Oleodutos foram inicialmente utilizados pelas

empresas petrolíferas para transporte de petróleo a partir de terminais, onde navios tanque des-

carregam e abastecem refinarias de petróleo, e têm sido utilizados pela indústria do petróleo

durante os últimos 40 anos tanto para o transporte de petróleo quanto de seus derivados. Para

os grandes mercados consumidores, onde a demanda por petróleo e seus derivados é elevada,

as empresas petrolíferas estão dispostas a expandir a utilização do oleoduto levando em conta

seu baixo custo de operação. Assim, os oleodutos devem ligar refinarias a centros de distribui-

ção locais, de onde os produtos são enviados aos mercados consumidores. Como no caso do

fornecimento de petróleo, oleodutos devem ser operados de maneira eficiente, de forma que a

empresa possa melhorar a sua margem operacional (JONES; PADDOCK, 1982). Devido à mag-

nitude e complexidade de um sistema petrolífero, um projeto logístico completo com razoável

nível de detalhe torna-se inviável. Muitos autores propõem um modelo unificado para a produ-

ção e distribuição de mercadorias, tais como em (VAKHARIA; ERENGUC; SIMPSON, 1999) e (DAS;



41

Figura 7: Diagrama de Distribuição por Oleodutos

SARIN, 1994) no contexto de plantas situadas em local único, e em (WILKINSON; SHA; PANTELI-

DES, 1994) para plantas distribuídas em vários locais. Os produtos que são gerados na refinaria

devem ser armazenados em tanques dedicados. Segundo Sasikumar (1997), as decisões que são

tipicamente envolvidas na refinaria são a escolha do produto a ser enviado para o oleoduto, a sua

quantidade e a distribuição entre os diversos terminais. No oleoduto, cada segmento transfere

produtos para os terminais, ou então para o próximo segmento. Além disso, a transferência de

produto deve satisfazer as restrições de volume constante e vazão máxima no oleoduto. Existem

também seqüências de produtos proibidas no oleoduto. A operação de polidutos, i.e., oleodutos

que transportam diferentes produtos, apresenta uma característica única que é a contaminação

de produtos. Embora os oleodutos proporcionem um modo seguro e confiável de transporte,

a contaminação de produtos é inevitável (SASIKUMAR, 1997). Ela ocorre na interface de dois

produtos miscíveis. Em (JONES; PADDOCK, 1982) é mencionado que esta interface deve ser re-

cebida em um tanque segregado para reprocessamento na refinaria. A principal conseqüência

dessa contaminação é o aumento dos custos operacionais. Os custos relacionados são tão eleva-

dos que em (TECHO; HOLBROOK, 1974) é dito que o complexo de oleodutos estudado tem como

objetivo a minimização dos custos de interface que estão relacionados com a vazão do produto.

Um diagrama representando uma rede de oleodutos de distribuição com uma única refinaria e

vários terminais de distribuição é mostrada na Fig. 7.



42

2.4 Conclusão

Na primeira parte deste capítulo foram apresentados as definições básicas relativas a uma

cadeia de suprimentos genérica. Assim foi introduzido o problema do planejamento integrado

de forma ainda geral, que é focalizado neste trabalho. Além disso, foram mostradas as métricas

de desempenho disponíveis, bem como as possíveis variáveis de decisão do problema. Veremos

mais adiante que a métrica a ser utilizada será lucro como tipo quantitativo, e satisfação do

cliente como qualitativo. Quanto às variáveis de decisão, serão utilizadas todos as categorias

mostradas.

Na segunda parte, forneceram-se informações específicas sobre as cadeias de suprimentos

da indústria do petróleo. Foi, então, descrito o escopo do problema do planejamento integrado

considerado, que abrange desde a extração do petróleo a partir dos poços produtores, até o

transporte dos derivados de petróleo para os terminais de distribuição, de onde serão entregues

aos clientes, que, neste trabalho, são as companhias distribuidoras. Este processo engloba os

principais componentes da cadeia de suprimentos, i.e., extração do petróleo, seu refino para a

produção de derivados, armazenagem tanto do petróleo quanto dos seus derivados, e as ativida-

des de transporte de ambos através dos modais mais importantes, ou seja, oleodutos e navios.

Desta forma, este trabalho englobará tanto o segmento upstream quanto o downstream, não

considerando, no entanto, as atividades anteriores à entrada de um poço de petróleo em produ-

ção, como as de exploração e perfuração, nem aquelas posteriores à entrega de derivados nos

terminais, como as de distribuição para os postos de venda no varejo.

No próximo capítulo será apresentada uma revisão da literatura relativa aos modelos e às

estratégias de solução associados ao referido problema.



43

3 Modelos do Planejamento Integrado

da Cadeia de Suprimentos

3.1 Introdução

Geralmente modelos para projeto e análise da cadeia de suprimentos podem ser divididos

em quatro categorias com relação à abordagem da modelagem. Estas categorias são: (1) mode-

los analíticos determinísticos, nas quais as variáveis são conhecidas e especificadas, (2) modelos

analíticos estocásticos, onde se supõe que pelo menos uma das variáveis siga uma distribuição

probabilística particular, (3) modelos econômicos e (4) modelos de simulação (BEAMON, 1998).

A abordagem analítica se apoia em formalizações matemáticas, enquanto a modelagem da

cadeia de suprimentos através da simulação foi originalmente baseada em Dinâmica de Sistemas

(FORRESTER, 1958).

Nos modelos econômicos, a cadeia de suprimentos é interpretada através de teorias micro-

econômicas. Microeconomia trata da construção e interpretação de modelos que descrevem em

termos matemáticos como as empresas operam, se expandem, se fundem, e contratam de acordo

com príncipios econômicos. Estes modelos também descrevem porque e como consumidores

procuram produtos de uma empresa, e como empresas dentro de um segmento indústrial com-

petem entre si. Modelos econômicos são altamente relevantes para os modelos de otimização,

mas a maior diferença entre ambos são suas intenções ao invés de seus usos da matemática.

Modelos de otimização são empíricos, i.e., processam dados numéricos que descrevem um pro-

blema específico da cadeia de suprimentos a fim de identificar estrátegias ótimas para aquele

problema. Ao contrário, modelos econômicos visam prover um critério qualitativo com rela-

ção à economia da empresa e à competição entre as diversas empresas em um mesmo ramo da

indústria (BEAMON, 1998).

Este capítulo apresenta informações gerais sobre o planejamento integrado da cadeia de

suprimentos da indústria do petróleo. O objetivo não é uma revisão extensa, mas um resumo

do estado da arte dos modelos de planejamento propostos, que permita conhecer suas vanta-



44

gens e limitações. Inicialmente serão mostradas as abordagens de simulação, e em seguida as

analíticas.

3.2 Abordagens de Simulação

A simulação como um veículo para a compreensão de aspectos da tomada de decisão or-

ganizacional ganhou considerável atenção e momentum em anos recentes (FEIGIN et al., 1996)

(KUMAR; OW; PRIETULA, 1993) (MALONE, 1987). Uma ajuda substancial aos administrado-

res pode ser obtida dos sistemas de apoio à decisão onde técnicas de planejamento e geren-

ciamento, oriundas dos campos de Pesquisa Operacional e Inteligência Artificial, podem ser

acopladas com modelos de simulação e ferramentas estatísticas de análise de dados. Ferramen-

tas de simulação bem projetadas podem ser o ponto intermediário onde tomadores de decisão

comparam sua própria experiência com políticas de gerenciamento geradas por ferramentas de

otimização e as validam (GRAUDINA; GRUNDSPENKIS, 2005). Para tais problemas foi definida

uma arquitetura que consiste de três módulos diferentes, mas estritamente conectados:

1. um modelo de simulação,

2. um conjunto de modelos para análise de dados históricos e predição de eventos futuros, e

3. um sistema de planejamento para otimizar operações e alocação de recursos (RIZZOLI;

GAMBARDELLA; BONTEMPI, 1997).

As abordagens de simulação se baseiam em experimentação através de modelos executáveis,

se constituem em técnicas para compreender e prever o comportamento de sistemas (SIMON,

1996), e são reconhecidas por permitir uma observação mais realista do comportamento da

Cadeia de Suprimentos (PARUNAK; SAVIT; RIOLO, 1998). A simulação permite uma análise da

dinâmica da Cadeia de Suprimentos, e leva a uma observação do seu comportamento ao longo

do tempo, permitindo ao mesmo tempo compreender os processos decisórios organizacionais

(BISWAS; NARAHARI, 2004), analisar as interdependências entre os atores da Cadeia de Su-

primentos, e analisar a consistência entre os modos de coordenação e as políticas de decisão.

Além disso, a simulação pode ser conjugada com uma abordagem de otimização, que se guia

pelos seus resultados, e iterativamente aprimora a qualidade de acordo com o critério escolhido.

Towill, Naim e Wikner utilizaram técnicas de simulação para avaliar os efeitos de várias es-

tratégias de cadeia de suprimentos sobre a amplificação da demanda (TOWILL; NAIM; WIKNER,

1992). Swaminathan, Sadeh, e Smith utilizaram simulação para estudar o efeito de compar-

tilhar informação do fornecedor (SWAMINATHAN; SMITH; SADEH, 1998). O uso de simulação



45

para a modelagem da cadeia de suprimentos se baseou originalmente na Dinâmica de Sistemas

(FORRESTER, 1961), motivado pelo fato de que a estrutura da cadeia de suprimentos e o fluxo

de controle determinam seu desempenho. A modelagem e simulação da cadeia de suprimen-

tos foram mais tarde investigadas com simulação contínua e simulação por eventos discretos.

Atualmente esta última representa o método preferido a ser utilizado na simulação da cadeia de

suprimentos (TERZI; CAVALIERI, 2004).

A simulação é uma técnica amplamente utilizada para avaliar o desempenho e capacidade

de adaptação de sistemas em ambientes dinâmicos. Para muitos domínios, tais como redes de

logística ou comunicação, Simulação por Eventos Discretos (SED) tem sido a técnica de simu-

lação predominante no caso geral (GEHRKE, 2008), ou na simulação da cadeia de suprimentos

em particular (TERZI; CAVALIERI, 2004). Entretanto, a simulação não é adequada para o obje-

tivo de alcançar a otimização, particularmente no caso de sistemas da cadeia de suprimentos.

Isso foi feito em (LENDERMANN; BOON; MCGINNIS, 2001), onde um framework de simulação

distribuída foi utilizado visando uma otimização rápida no problema do planejamento. Assim,

o resultado se mostrou subótimo, e o tempo de resposta foi preocupante. O problema está na

conjunção dos métodos, pois apesar de outras vantagens, a simulação, por sua natureza, não se

presta a este fim. Portanto, a maior desvantagem desta abordagem é sua inadequação para a

otimização, que é um dos objetivos deste trabalho. Por este motivo, ela foi abandonada, e na

próxima seção são analisadas as abordagens analíticas.

3.3 Abordagens Analíticas

As abordagens analíticas se baseiam em formalizações matemáticas das cadeias de supri-

mentos. Os modelos obtidos necessitam de aproximações simplificadoras, usualmente restri-

tivas, e são limitados por levarem em conta o tempo. Duas abordagens comuns são a Teoria

de Controle, baseada em equações diferenciais, e a da Pesquisa Operacional, que se baseia em

teorias de otimização (LABARTHE et al., 2007). Neste último caso os modelos analíticos, tanto

determinísticos quantos estocásticos, são também chamados de modelos de programação ma-

temática, e têm sido estudados por pesquisadores por mais de 50 anos (WINSTON, 1995).

Uma outra forma de classificar os modelos matemáticos é entre modelos descritivos e mo-

delos normativos (SHAPIRO, 2006). Os primeiros são desenvolvidos para uma melhor compre-

ensão das relações funcionais da cadeia e do mundo exterior. Dentro deste grupo estão incluídos

também os modelos de simulação citados na seção anterior.

Em seguida estão os modelos normativos, que são desenvolvidos com a finalidade de ajudar



46

na tomada das melhores decisões. O termo normativo se refere a processos para identificar as

normas que a empresa deveria se empenhar em obter. Segundo alguns autores este tipo de

modelo se confunde com os modelos de otimização, e esta será a visão deste trabalho. Dentro

deste grupo estão os modelos analíticos (determinísticos ou estocásticos) que serão apresentados

a seguir.

Dentro dos modelos analíticos, a pesquisa em problemas de estoque multicamadas tem uma

longa história (CLARK; SCARF, 1958)(SVORONOS; ZIPKIN, 1991). Um sistema multicamada é

aquele que possui várias camadas que interagem entre si, onde cada camada representa um

tipo de participante da cadeia de suprimentos (fornecedor, indústria, centro de distribuição,

etc.). Esta linha de trabalho supõe um controle centralizado de toda a rede de suprimentos, e

desta forma ignora a possibilidade de tomada de decisão descentralizada. Estes modelos são

também limitados em lidar com aspectos relacionados à dinâmica da cadeia de suprimentos e

focalizam exclusivamente medidas de desempenho globais. É impossível ter modelos analíticos

tratáveis para estes problemas sob condições realistas (SWAMINATHAN; SMITH; SADEH, 1998).

O comportamento dinâmico de uma cadeia de suprimentos complexa e com muitos estágios

é difícil de ser modelado de forma analítica. A natureza errática do comportamento destes

sistemas não pode ser facilmente estudada com ferramenta de modelagens analíticas e estáticas.

Aplicações de programação matemática na indústria do petróleo datam dos anos 1950

(CHARNES; COOPER; MELLON, 1952) (SYSMONDS, 1955). Desde então, temos visto um enorme

avanço em algoritmos e técnicas de modelagem para solucionar problemas relacionados à indús-

tria do petróleo. Atualmente podemos dizer que a relevância das ferramentas de programação

matemática é ponto pacífico entre todas as companhias petrolíferas (FORREST; OETTLI, 2003).

Os benefícios potenciais da otimização de operações de processamento em refinarias de petróleo

com aplicações de programação linear em mistura de petróleo e agrupamento de produtos, tem

sido observados há muito tempo (SYSMONDS, 1955). A gestão da refinaria de petróleo está cada

vez mais preocupada em melhorar o planejamento das suas operações. O principal fator, entre

outros, é a natureza dinâmica do ambiente econômico. As empresas devem avaliar o potencial

impacto de variações nas demandas por especificações de produtos finais, preços e composi-

ções de petróleo, ou mesmo serem capazes de explorar oportunidades imediatas de mercado

(MAGALHAES et al., 1998). Coxhead identifica várias aplicações de modelos de planejamento na

refinaria e na indústria do petróleo, tais como a seleção de petróleo, alocação de petróleo para

várias refinarias, modelos de parceria para fornecimento de matérias-primas e planejamento de

operações (COXHEAD, 1994). A disponibilidade de softwares comerciais baseados em Progra-

mação Linear para planejamento de produção da refinaria, tais como o Aspen PIMS (Process

Industry Modeling System) (ASPENTECH, 2011), tem permitido o desenvolvimento de planos de



47

produção gerais para toda a refinaria, que podem ser interpretadas como tendências gerais. Na

literatura existem aplicações específicas baseadas em programação matemática, tais como para

a descarga de petróleo bruto e a combinação de gasolinas (BODINGTON, 1992) (RIGBY; LASDON;

WAREN, 1995) (SHAH, 1996) (LEE et al., 1996).

Foi demonstrado que os problemas de planejamento / escalonamento podem ser formula-

dos de forma eficiente como modelos MILP (Programação Linear Inteira Mista) de larga escala.

Questões importantes e mais gerais, tais como a integração das atividades de logística, planeja-

mento e escalonamento, bem como técnicas de modelagem e solução mais eficientes, persistem

como desafios a serem estudados (JOLY; MORO; PINTO, 2002). A maioria das ferramentas se

concentram em partes específicas da cadeia de suprimentos de petróleo, o que frequentemente

leva a uma falta de integração. Em (PINTO; NEIRO, 2004) foi chamada a atenção para a impor-

tância da indústria petrolífera possuir uma visão mais ampla de sua cadeia de suprimentos e ter

um framework geral para a modelagem de operações nesta cadeia.

Em (AIRES et al., 2004) é feito um modelo simplificado da cadeia de suprimentos da empresa

PETROBRAS, que é uma empresa petrolífera integrada verticalmente, e que se ocupa de uma

ampla gama de atividades, que vão da exploração até o refino e a distribuição. A atividade de

logística na PETROBRAS é dividida em três etapas, com informações sendo trocadas entre os

diferentes níveis. A primeira etapa, que trata da estratégia geral de planejamento de suprimento,

é realizada através do PLANAB, que é um sistema baseado em um modelo de programação

linear multiperíodo, executado a cada dois meses para um horizonte de planejamento de seis

meses. Os autores argumentam que não existia, até aquele momento, nenhuma ferramenta

disponível para a alocação de petróleo na empresa, de forma a integrar as atividades de logística

com as de extração e compra de petróleo por um lado, e as de refino de derivados pelo outro.

Além disso, é mencionado que não havia referências na literatura sobre algoritmos capazes de

atacar o problema como um todo. Eles concluem que sem um certo nível de simplificação e

abstração qualquer instância do mundo real permaneceria fora de alcance em termos práticos.

Tipicamente, na literatura, o problema focalizado é dividido em dois subproblemas: escalo-

namento de navios (ZABAL, 1984) (MILLER, 1987), e operações de planejamento em refinarias

(LEE et al., 1996) (PINTO; JOLY; MORO, 2000). A integração simplificada destes subproblemas foi

feita utilizando Programação Matemática, através de uma formulação com Programação Linear

Inteira Mista baseada em uma rede discretizada no espaço e no tempo. A conclusão do tra-

balho foi que embora tenha sido considerado um modelo simplificado do problema completo,

ele representou um avanço pela integração dos dois subproblemas. Em (ROCHA; GROSSMANNB;

ARAGAO, 2009) este problema foi estendido com a consideração da flexibilização dos planos



48

de produção das refinarias, e o modelo refinado com a inclusão de um algoritmo implementado

com base em uma heurística que possibilitava a obtenção de uma solução factível, que era então

melhorada por um procedimento de otimização conhecido como Local Branching. Os autores

afirmaram que enquanto antes instâncias realísticas do problema só eram solucionadas após 15

dias de computação, após a entrada do algoritmo elas passaram a ser resolvidas em menos de

5 horas, e dentro de uma margem de qualidade de 10% em relação ao limitante superior de

otimização obtido pela relaxação do problema.

Lasschuit e Thijssen enfatizam a importância de alcançar uma integração completa na ca-

deia de suprimentos da indústria química e petrolífera, e descrevem o desejo de uma ferramenta

com este objetivo (LASSCHUIT; THIJSSEN, 2004). O problema tratado considera além dos dife-

rentes estágios da cadeia de suprimentos (fornecimento, manufatura e distribuição), os diferen-

tes níveis da hierarquia de seu gerenciamento (planejamento, escalonamento e operações). Os

autores reconhecem as enormes diferenças entre as decisões tomadas ao longo deste espectro

de duas dimensões, com relação ao escopo do negócio, horizonte de tempo, tempo de resolu-

ção, certeza e acurácia dos dados, detalhamento do processo e mecanismo de otimização. É

explicitada a necessidade de ferramentas de suporte a decisão que permitam guiar de forma

consistente tanto os aspectos econômicos quanto operacionais da cadeia, levando em conta as

informações disponíveis tanto de natureza operacional quanto do mercado. Tal tipo de ferra-

menta satisfaria uma necessidade fundamental de que as decisões do nível estratégico e tático

pudessem levar em conta informações operacionais, tais como, utilização das capacidades de

produção, utilização dos modais de transporte e alocação de demanda. Ao mesmo tempo não

apenas capacidades já existentes seriam consideradas, mas conjuntamente novas oportunidades

seriam avaliadas, o que já era prerrogativa do nível estratégico.

A indústria petroquímica tem uma história de utilização de programação linear (PL) e/ou

programação linear inteira mista (MILP) para o planejamento e escalonamento da cadeia de

suprimentos. Em (KALLRATH, 2000), é dada uma visão geral dos benefícios em potencial da

programação matemática, que tipo de problemas podem ser atacados e um panorama do estado-

da-arte sobre boas práticas de modelagem e algoritmos. Entrando em mais detalhes sobre solu-

ção de problemas com MINLP, Grossmann faz uma revisão de possíveis algoritmos de solução

(GROSSMANN, 2002), enquanto a teoria detalhada e métodos para MINLP e suas aplicações

podem ser encontrados em (FLOUDAS, 1995).

Na prática, a demanda e outros parâmetros caracterizados pela incerteza, são acomodados

em parte pela utilização de modelos nos modo de horizonte de rolagem (vide a Seção 3.4)

(REKLAITIS, 1982). Neste modo o horizonte de operação é dividido em um certo número de



49

períodos de planejamento, e o modelo de planejamento com previsões de demanda determinís-

ticas é resolvido de forma a fornecer metas de produção específicas para cada período. Ao final

do primeiro período, o estado do sistema, incluindo níveis de estoque, é atualizado e o ciclo de

planejamento é repetido com o horizonte avançando por um período.

A análise resumida dos trabalhos anteriores leva à conclusão que somente subsistemas re-

lacionados à cadeia de suprimentos do petróleo tem sido estudados em um nível razoável de

detalhe. A razão disso é a complexidade resultante quando todas estas partes são colocadas jun-

tas dentro de um mesmo modelo. Apesar disso, existe grande motivação em aumentar o escopo

dos modelos da cadeia de suprimentos do petróleo sem reduzir a complexidade do problema

real (TURKAY; GROSSMANN, 1996) (HEEVER; GROSSMANN, 1999) (VECCHIETTI; GROSSMANN,

2000).

3.4 Desafios para o Planejamento Integrado com Otimização

Tem ficado cada vez mais claro que existe grande interesse dentro de várias áreas da indús-

tria de processos, tais como petróleo e química, em alcançar a meta da Otimização Integrada

de uma Empresa (LASSCHUIT; THIJSSEN, 2004) (PINTO; NEIRO, 2004). A área deste problema

se localiza na interface entre a engenharia de processos e a pesquisa operacional. Ele envolve a

otimização das operações de suprimento, produção e distribuição em uma empresa. As ativida-

des operacionais principais incluem planejamento, escalonamento, otimização em tempo-real,

e controle de estoque. A Gestão da Cadeia de Suprimentos poderia ser considerada um termo

equivalente para o problema que acabou de ser descrito (SHAPIRO, 2006). Entretanto, apesar da

interseção significativa entre os dois termos, uma distinção importante é que a gestão da cadeia

de suprimentos focaliza um conjunto mais amplo de aplicações do mundo real com enfâse em

logística e distribuição, e geralmente envolve modelos lineares, que pertencem tradicionalmente

ao domínio da pesquisa operacional. Por outro lado, na otimização integrada a ênfase está nas

instalações produtivas com maior foco no planejamento, escalonamento, e controle, que fre-

quentemente requerem o uso de modelos de processos não-lineares, e, por isso, conhecimento

de engenharia de processos. Uma das características chave do último problema é a integração

das informações e tomada de decisões entre várias funções que formam a cadeia de suprimen-

tos de uma empresa. Entretanto, as maiores barreiras são a falta de modelos computacionais de

otimização e ferramentas que deverão permitir a otimização integrada por toda a empresa. Isto

vai exigir uma nova geração de ferramentas que permitam a integração completa e solução em

grande escala dos modelos de otimização, bem como a incorporação de modelos acurados para

a área de produção (GROSSMANN, 2005).



50

Figura 8: Visão Hierárquica da Otimização da Cadeia (baseada em (Shapiro, 2006))

Um grande desafio que está envolvido na otimização integrada das indústrias de processos,

entre elas a petrolífera, é a tomada de decisão integrada e coordenada entre as diversas funções

da sua cadeia de suprimentos (compras, fabricação, distribuição, vendas), através de várias or-

ganizações distribuídas geograficamente (fornecedores, instalações e mercados), e através dos

vários níveis de tomada de decisão (estratégico, tático e operacional), como visto na Fig. 8

baseada em (SHAPIRO, 2006). Os dois primeiros itens conceitualmente lidam com questões re-

lacionadas com a integração espacial na medida em que envolvem a coordenação das atividades

dos diversos subsistemas de uma empresa. O terceiro item trata questões relacionadas com a in-

tegração temporal na medida em que envolvem coordenação das decisões através de diferentes

escalas de tempo. Enfrentar esses problemas de integração espacial e temporal é fundamental

para otimizar a tomada de decisão ao longo de toda a cadeia.

A fim de alcançar este objetivo por toda a organização, estas novas ferramentas computaci-

onais deveram enfrentar os três grandes desafios, que serão discutidos a seguir.

3.4.1 Modelagem

A otimização integrada envolve como atividades operacionais principais planejamento, es-

calonamento e controle. É imperativo que as instalações produtivas possam responder à de-

manda mesmo que sua capacidade esteja próxima do limite com um plajenamento de produção

sujeito a restrições operacionais complexas, e ainda assim alcançar metas de produção viáveis.



51

Para que isso seja possível, pesquisadores e engenheiros de processo têm proposto métodos de

planejamento de produção que incorporem submodelos de escalonamento (BASSETT; PEKNY;

REKLAITIS, 1996) (GROSSMANN, 2002).

Enquanto a área de planejamento e escalonamento tem visto o desenvolvimento de muitos

modelos em pesquisa operacional (PO) (PINEDO, 2001), durante a última década um número

significativo de modelos de planejamento e escalonamento têm sido propostos especificamente

para aplicações de processo (SHAH, 1998) (PEKNY; REKLAITIS, 1998). Em contraste com os

modelos genéricos de escalonamento de PO, os modelos orientados a processos tendem a exigir

o uso de fluxos de materiais, e muitas vezes topologias de rede que são bastante diferentes dos

sistemas de escalonamento tradicionais. Assim, as formulações de escalonamento podem ser

classificadas principalmente em duas:

1. Baseada em Redes (Orientada a Processos)

2. Baseada em Sequenciamento Tradicional

A primeira é usada para redes de processos complexos e gerais, enquanto a última é usada para

processos de fase única, fase múltipla e múltiplo propósito (MARAVELIAS; SUNG, 2009).

Além disso, tais formulações podem requerer o uso de modelos de processos detalhados

não-lineares. Por outro lado, há um bom número de modelos de processos específicos de es-

calonamento que foram desenvolvidos para melhor explorar a estrutura especial de alguns pro-

blemas. Outra ocorrência comum é que em longos modelos cíclicos de escalonamento a função

objetivo deve ser expressa na forma não-linear (PINTO; GROSSMANN, 1994). Entretanto, apesar

do progresso que tem sido feito, a disponibilidade de um modelo de planejamento e de escalo-

namento de propósito geral para as indústrias de processo ainda é enganosa. Tal fato decorre

não apenas por causa da grande variedade de problemas que surgem na prática, mas também por

causa de uma série de grandes problemas computacionais, ou seja, dificuldades na resolução de

problemas de grande escala de otimização e manipulação de modelos de processos não-lineares.

3.4.2 Multi-Escala (Espaço e Tempo)

Como coordenar a otimização de vários modelos ao longo de um determinado horizonte de

tempo (de semanas a anos), e como coordenar as decisões estratégicas de longo prazo (anos)

relacionadas com fornecedor e de investimento, com as decisões de médio prazo (meses) re-

lativas a decisões táticas de planejamento da produção e fluxo de materiais, e ainda com as

decisões operacionais de curto prazo (semanas, dias) em relação à escalonamento e controle?



52

As principais questões aqui envolvem as técnicas para lidar com as grandes escalas espaciais e

temporais.

Integração do Planejamento da Produção, Escalonamento e Otimização em Tempo Real.

A questão fundamental nesta área é a integração de modelos através de escalas de tempo muito

diferentes (SHAH, 1998). Tipicamente, o modelo de planejamento é uma representação linear

simplificada que é utilizada para prever as metas de produção e fluxo de material ao longo de

vários meses (até um ano). Além disso, neste nível os efeitos de trocas e estoques diários são

desprezados, o que tende a produzir estimativas otimistas que não podem ser realizadas no nível

de escalonamento. Modelos de escalonamento, por outro lado, tendem a ser mais detalhados

por natureza, mas presupõem que decisões importantes foram tomadas, por exemplo, metas de

produção.

Planejamento e escalonamento simultâneos sobre uma grade de tempo comum. A ideia

aqui é efetivamente “subir" o modelo de escalonamento até o nível do planejamento, o que leva

a um problema de otimização multiperíodo em escala muito grande, uma vez que é definido

sobre horizontes de longo prazo com uma discretização fina no tempo (por exemplo, intervalos

de um dia). Para superar o desafio de ter de resolver um problema com escala muito grande, as

estratégias baseadas na agregação e decomposição podem ser consideradas (BASSETT; PEKNY;

REKLAITIS, 1996) (WILKINSON, 1996). A primeira envolve tipicamente a agregação dos perío-

dos de tempo posteriores, dentro de um horizonte de tempo especificado, a fim de reduzir a

dimensão do problema.

Técnicas de decomposição para a integração de planejamento e escalonamento Esta téc-

nica geralmente é baseada em um processo de decomposição em dois níveis, onde o problema

de nível superior (problema de planejamento) é uma agregação do problema de nível inferior

(escalonamento). O desafio consiste no desenvolvimento de um modelo de planejamento agre-

gado que produz limites apertados para reduzir o número de problemas de nível superior e de

nível inferior (PAPAGEORGIOU; PANTELIDES, 1996). Outra abordagem de solução baseia-se em

usar uma abordagem de horizonte rolante, onde o problema de planejamento é resolvido atra-

vés do tratamento dos primeiros períodos em detalhe, enquanto que os períodos posteriores são

agregados de forma recursiva (DIMITRIADIS A. D.; PANTELIDES, 1997).

Formulações de escalonamento relaxados e agregados Embora modelos integrados com

formulações de escalonamento detalhadas podem, em princípio, fornecer metas de produção



53

ótimas, eles na maioria das vezes resultam em modelos MILP grandes que não podem ser resol-

vidos com otimização. Uma maneira de superar essa limitação é através do uso de estratégias de

solução avançadas, um tema que será revisto na próxima seção. Uma outra opção é desenvolver

uma aproximação do modelo original, que fornece alguma informação a curto prazo, que torne

mais fácil sua solução (MARAVELIAS; SUNG, 2009).

O modelo aproximado é obtido pela remoção de algumas das restrições, ou através da

agregação de algumas das decisões da formulação de escalonamento original. Uma estratégia

comum é manter as restrições e as variáveis associadas à atribuição de atividades, mas des-

cartar restrições e variáveis relativas ao seqüenciamento (HARJUNKOSKI; GROSSMANN, 2002)

(JAIN; GROSSMANN, 2001). Agregação reduz o número de variáveis e restrições em uma formu-

lação através de sua combinação de maneiras diferentes (BASSETT; PEKNY; REKLAITIS, 1996).

Em (WILKINSON; SHA; PANTELIDES, 1994) é proposto um modelo de escalonamento no qual

o horizonte de tempo foi originalmente composto de muitos sub-períodos. Os autores propu-

seram a agregação de sub-períodos em períodos maiores (ou seja, períodos de planejamento)

com a restrição de que variáveis e restrições perto dos limites de cada período permaneceram

desagregados.

Modelos simplificados podem também ser gerados a partir da análise do modelo de esca-

lonamento no que diz respeito a campanhas de produção. Em (SUKOYO; MATSUOKA; MURAKI,

2004) também foi discutido a enumeração de campanhas de produtos mistos, que foram usadas

como unidades de atribuição no problema de planejamento de produção.

Modelos substitutos off-line Um método alternativo para a geração de uma descrição acu-

rada, mas computacionalmente tratável das restrições de recursos e os custos de produção de

uma unidade é a realização de cálculos off-line. O objetivo desta abordagem é gerar restrições

que definam a região viável do modelo de escalonamento e os custos de produção em função

apenas das metas de produção. A geração destas restrições pode ser intensiva em termos de

recursos, mas uma vez que são gerados off-line podem ser incorporados na formulação inte-

grada sem computação adicional. Em (SUNG; MARAVELIAS, 2007) foi apresentado um método

baseado em projeção que utiliza cálculos off-line com base em um modelo de escalonamento

detalhado para gerar a casca convexa das metas de produção viáveis e uma subestimação con-

vexa do custo de produção total (vide (GRUNBAUM, 2003)). Estas funções aproximadas são

expressas em termos de variáveis de planejamento, ou seja, as variáveis de escalonamento são

projetadas como saída, além de fornecer todas as informações necessárias para resolver o pro-

blema de planejamento da produção de forma eficaz. Eles também propuseram a manutenção de

um repositório de soluções viáveis conhecidas para uso posterior em um algoritmo de horizonte



54

rolante.

Modelagem híbrida para abordagens de horizonte rolante Um compromisso entre pre-

cisão e carga computacional da modelagem é utilizar modelos de escalonamento detalhados

para alguns períodos iniciais e uma formulação relaxada, agregada ou substituta para períodos

posteriores. Como já explicado, as metas de produção são continuamente atualizadas, o que

em alguns casos implica que soluções aproximadas em períodos posteriores não afetam signifi-

cativamente a qualidade da solução. Assim, esta abordagem híbrida torna-se conveniente para

métodos de solução de rolamento horizontal.

De um ponto de vista operacional, as metas de produção obtidas pela resolução do pro-

blema de planejamento da produção são usadas como entradas para o escalonamento, levando

a um fluxo hierárquico de informações do planejamento de produção para o escalonamento.

No entanto, como explicado acima, para obter metas de produção viáveis e (quase) ótimas, a

capacidade de processamento e informações de custo têm que ser comunicadas a partir da for-

mulação do escalonamento para a do planejamento da produção através da integração de uma

forma do modelo de escalonamento. Em princípio, a ligação entre os dois problemas pode

ser conseguida através de restrições que impõem que as metas de produção para cada período

de planejamento sejam iguais às ordens previstas para o final do horizonte de escalonamento

correspondente.

Além disso, uma vez que tanto o ambiente de mercado quanto o de produção são dinâmicos,

as metas de produção devem ser constantemente atualizadas para responder às perturbações,

tais como atrasos de entrega de matérias-primas, falhas de equipamentos, atrasos de produção,

mudanças de demanda, etc Assim, uma solução de planejamento de produção é normalmente

usada apenas para alguns períodos iniciais, depois do qual os dados do problema são atuali-

zados, e o problema é solucionado de novo ao longo de um novo horizonte de planejamento.

Em outras palavras, pela sua própria natureza o planejamento de produção é resolvido na forma

de horizonte rolante. É importante notar que, embora esta implementação iterativa não esteja

relacionada com a modelagem ou a estratégia de solução, uma solução de planejamento de pro-

dução é implementada com forma de horizonte rolante, independentemente da forma como ela

é obtida. No entanto, como veremos mais tarde, esta implementação iterativa inspirou aborda-

gens de solução baseadas em horizonte rolante. Neste contexto, a integração do planejamento e

do escalonamento é necessária em primeiro lugar, a fim de obter uma solução de planejamento

de produção viável e (quase) ótima, ao contrário de obter uma solução de escalonamento que

será prontamente implementada.



55

Otimização das Cadeias de Suprimentos. Quando considerando um nível de decisão es-

pecífico (estratégico, tático ou operacional), é muitas vezes desejável considerar a cadeia de su-

primentos inteira de uma determinada empresa (ERENGUC; SIMPSON; VAKHARIA, 1999) (NEIRO;

PINTO, 2004). Aqui, novamente o tamanho do problema pode se tornar uma grande questão já

que temos de lidar com modelos em escalas grandes. Duas abordagens principais são: ou

considerar um modelo de otimização simultânea em grande escala, ou então a utilização de

decomposição tanto na formal espacial quanto na temporal, geralmente usando decomposição

Lagrangeana (GRAVES, 1982). No caso da decomposição espacial a ideia é separar as ligações

entre subsistemas (por exemplo, produção, distribuição e venda) através da dualização das res-

trições de interligação correspondentes, que, em seguida, requer a otimização multiperíodo de

cada sistema. No caso da decomposição temporal, a ideia é dualizar as restrições de estoque a

fim de dissociar o problema por períodos de tempo. A vantagem deste esquema de decomposi-

ção é que a consistência da decomposição é mantida durante todo período de tempo (JACKSON;

GROSSMANN, 2003).

Abordagens de otimização simultânea para a integração das cadeias de suprimentos in-

teiras, naturalmente, levam à definição de sistemas centralizados. Na prática, no entanto, o

funcionamento tende a acontecer como se a cadeia de suprimentos fosse um sistema descentra-

lizado. São necessários procedimentos de coordenação que possam manter um certo grau de

independência de subsistemas, enquanto que, ao mesmo tempo, visando objetivos pretendidos

pela otimização integrada do sistema global (PEREA et al., 2001).

3.4.3 Esforço Computacional

As dificuldades e alcance da otimização do problema de integração vai exigir o desenvol-

vimento de algoritmos avançados e novas arquiteturas computacionais a fim de solucionar os

modelos de otimização em grande escala de modo efetivo e confiável. Resolver os modelos

de grande escala deste problema vai exigir eforços computacionais significativos. Para alcan-

çar a meta de integrar o planejamento através de toda a empresa, serão necessários avanços

não só nos algoritmos e modelos, mas também ferramentas e recursos computacionais. Uma

abordagem promissora que tem surgido na última década é disponibilizar os recursos computa-

cionais na forma de uma grade computacional ou cluster, que é uma coleção de processadores

heterogêneos de baixo acoplamento e pontencialmente distribuídos geograficamente. O tempo

ocioso dos processadores dentro destas coleções é um recurso barato que pode prover poder

computacional significativo ao longo de grandes periodos de tempo.



56

3.5 Problema de Otimização

Muitos problemas tanto de importância teórica quanto prática dizem respeito à escolha

da “melhor” configuração ou conjunto de parâmetros de forma a atingir alguma meta. Ao

longo das últimas décadas emergiu toda uma hierarquia de tais problemas, juntamente com

uma correspondente coleção de técnicas para sua solução (PAPADIMITRIOU; STEIGLITZ, 1998).

Uma definição de um problema de otimização suficientemente geral para englobar quase todos

estes problemas pode ser a seguinte:

Definição 1 Uma “instância de um problema de otimização” é um par (X, c),

onde X é qualquer conjunto domínio de pontos factíveis, e

c é a função de custo c : X ? R

O problema é encontrar um x ? X para o qual c(x) ? c(y),?y ? X.

Tal ponto x é chamado uma solução ótima global para a instância dada do problema, ou

simplesmente uma solução ótima.

Em muitos exemplos a função de custo c assume apenas valores inteiros não negativos.

Definição 2 Um problema de otimização é um conjunto I de “instâncias de um problema de

otimização” (X, c).

Informalmente, em uma instância recebemos “dados de entrada” e temos informação sufi-

ciente para obter uma solução; um problema é uma coleção de instâncias, normalmente todas

geradas de forma similar.

Em uma das extremidades da ampla hierarquia dos problemas de otimização se encontra o

genérico “problema de programação não-linear, que pode ser definido da seguinte forma:

Definição 3 Determinar x de forma a

maximinizar f(x)

sujeito a

?

?

?

gi(x) ? 0, i = 1, . . . , m

hj(x) = 0, j = 1, . . . , p



57

onde f, gi e hjsão funções genéricas do parâmetro x ? R
n.

As técnicas para solucionar tais problemas são quase sempre iterativas, e sua convergência

é estudada usando o ramo da matemática conhecido como análise real.

Quando f é convexa, gi côncava, e hj linear, temos o que é denominado um “problema

de programação convexa” (vide (PAPADIMITRIOU; STEIGLITZ, 1998)). Este problema possui a

propriedade bastante conveniente que a otimalidade local implica na otimalidade global.

Quando f, gi, e hj são todas lineares, chegamos ao “problema de programação linear”. Vá-

rias mudanças importantes podem ser observadas nesta classe de problemas. Primeiro, qualquer

problema nesta classe se reduz à seleção de uma solução dentre um conjunto finito de soluções

possíveis. Assim, este tipo de problema pertence a uma categoria de problemas denominados

combinatórios. O conjunto finito de soluções candidatas é o conjunto de vértices do polítopo ou

poliedro convexo definido pelas restrições lineares. Para a solução destes problemas se utiliza

amplamente o algoritmo simplex criado por G. B. Dantzig (DANTZIG, 1951), que encontra uma

solução ótima em um número finito de passos. Este algoritmo se baseia na ideia de melhorar

o custo movendo-se de um vértice a outro do polítopo. Muitos anos de refinamento levaram a

formas bastante eficientes do algoritmo simplex, que resolvem rotineiramente problemas com

centenas de varáveis e milhares de restrições entre estas variáveis.

Dentro do conjunto de problemas lineares existe um subconjunto de problemas de otimi-

zação que podem ser solucionados de forma muito mais eficiente do que os demais. Por outro

lado, estes problemas estão intimamente relacionados com outros problemas que são muito di-

fíceis de serem tratados, como por exemplo o Problema do Caixeiro Viajante, que pertence à

classe de problemas NP-completos (vide (PAPADIMITRIOU; STEIGLITZ, 1998)). Estes problemas

são casos especiais de “problemas de programação linear inteira”, que ocorrem quando consi-

deramos problemas lineares que exigem que os valores de sua solução sejam inteiros (x ? Z).

Tal como os problemas de programação linear, estes problemas possuem um algoritmo finito

para solução. Entretanto, a semelhança termina aí, pois o problema geral de programação linear

inteira é ele próprio NP-completo. A Fig. 9 ilustra as diferentes categorias de problema de

otimização e seu relacionamento.

Além desta classificação, os problemas de otimização se dividem naturalmente em duas

categorias: aqueles com variáveis contínuas, e aqueles com variáveis discretas. Nos problemas

contínuos, em geral se procura um conjunto de números reais, ou mesmo uma função; na se-

gunda categoria de problemas, denominados “problemas combinatoriais”, se busca um objeto

de um conjunto finito, ou infinito mas contável, como por exemplo um número inteiro, um

conjunto, uma permutação, ou um grafo. Estes dois tipos de problemas geralmente possuem



58

Figura 9: Classes de Problemas de Otimização (baseada em (Papadimitriou e Steiglitz, 1998))

características bem distintas, o que resulta em métodos de solução bem divergentes.

Em seguida, cada um destes problemas da programação matemática será discutido com

relação a sua importância e uso na modelagem do planejamento integrado da cadeia de supri-

mentos do petróleo.

3.5.1 Programação Linear (LP) e Programação Linear Inteira Mista (MILP)

A programação linear (LP) é amplamente utilizada para o planejamento integrado com

otimização, através da completa segregação entre os diversos elementos da cadeia. O estado-da-

arte é usar LP ou a programação linear inteira mista (MILP) para o propósito de planejamento

integrado de todas as operações, por exemplo, otimizando petróleo e produtos finais (ZHANG;

ZHU, 2006). As técnicas de LP para a otimização de refinarias são relativamente maduras, sendo

representada pelo software comercial PIMS (ASPENTECH, 2011). Abordagens de modelagem

mais avançada foram desenvolvidas, mas principalmente focada em operações locais, tais como

o modelo do planejamento e escalonamento de mistura de produtos (PINTO; JOLY; MORO, 2000).

Muitas empresas de petróleo desenvolveram sua própria solução caseira, como é o caso da

PETROBRAS com o seu sistema PLANAB (AIRES et al., 2004). Ela não é apenas resultado da

velocidade e robustez do LP, mas uma estrutura completa de valor em termos de preço marginal,

que pode ser facilmente obtido e prover informação significativa sobre a justificativa da solução

e análise de sensibilidade. Entretanto, os modelos LP e MILP são construídos com base em

correlações simplificadas, que são apenas aproximações grosseiras de muitos processos com

natureza não-linear. Portanto, este tipo de modelo não pode descrever os aspectos não-lineares

acuradamente. Em geral, devido à natureza simplificada do LP, suas abordagens são restritas ao



59

planejamento integrado de longo prazo, não sendo conveniente para as operacões do dia a dia.

Quando modelos de processos detalhados não são usados, problemas de planejamento e

escalonamento acabam modelados como problemas lineares inteiros mistos (MILPs). Estes

problemas de otimização podem ser computacionalmente caros para solucionar, já que no pior

caso eles exibem complexidade exponencial com o tamanho do problema (NP-difícil). Por outro

lado, nos últimos 10 anos grande progresso foi feito tanto nos algoritmos quanto no hardware,

que resultou em uma melhora significativa na capacidade de solucionar MILPs em várias classes

de problemas, como as relacionadas a empresas aéreas (BIXBY et al., 2002). Entretanto, para

o tipo de problema como o de planejamento integrado da cadeia do petróleo, os softwares

baseados em LP não são capazes de resolver modelos MILP em escala indústrial.

3.5.2 Programação Não-linear (NLP)

Um modelo de Programação Não-linear (NLP) rigoroso para todas operações da refinaria

pode ser formulado através da junção de todos os modelos de processos. Atualmente já existem

softwares comerciais ou modelos satisfatórios para a otimização de uma refinaria. Entretanto,

segundo Grossmann, mesmo tendo tal modelo NLP disponível, temos ainda enormes dificul-

dades em termos algorítmicos e computacionais para integrar um problema tão complexo e

completo (GROSSMANN; BIEGLER, 1995).

Para otimizações de processos individuais, modelos rigosos são geralmente usados levando

em conta as condições operacionais detalhadas. Os resultados destes tipo de otimização são

muito mais próximos da realidade. Entretanto, não existe nenhuma coordenação própria en-

tre a otimização LP e as otimizações NLP das diferentes operações. Portanto, não existe ne-

nhum framework que permita chegar na otimização geral a partir das otimizações de processos

individuais, o que significa que cada um destes processos é otimizado de modo autônomo e

indenpendente. Consequentemente, a sinergia entre aspectos holisticos e operacões locais não

podem ser propriamente exploradas na realidade atual, o que limita enormemente a contribuição

econômica das otimizações de processos (ZHANG; ZHU, 2006).

Refinarias têm tipicamente solucionado o problema de planejamento utilizando métodos LP

desde a década de 1950. Entretanto, tanto a mistura de produtos, onde dois ou mais produtos

de diferentes unidades são combinados para formar um único produto, quanto o modelo de

operação do FCC (vide Seção 2.3.3) são altamente não-lineares. Assim, algumas ferramentas

baseadas em LP, tal como o Aspen PIMS, lidam com relações não-lineares utilizando técnicas

como a recursão, que é uma forma de LP sucessiva, onde o modelo linear executa muitas vezes

com diferentes coeficientes para tentar aproximar o comportamento não-linear e as técnicas de



60

programação não-linear (NLP). A fim de melhorar o modelo LP destinado à unidade FCC, pode

ser utilizada outra técnica mais sofisticada para lidar com o comportamento não-linear chamada

abordagem delta-base. Assim, o rendimento de uma unidade é representado por um vetor

base, que é suficiente para modelar a unidade FCC que processa um tipo único de entrada com

condições operacionais fixas. Para considerar variações na composição da entrada, o conceito

do vetor delta é útil e cada atributo (índice de enxofre, API, etc.) da entrada que pode afetar o

rendimento da unidade possui seu próprio vetor delta, que pode ser encarado como um gradiente

em relação ao vetor base para cada produto. No FCC os produtos de saída tipicamente são GLP,

gasolina, diesel e óleo combustível. Em suma, o modelo FCC não-linear é convertido em um

modelo linear. Entretanto, como a unidade FCC é o produtor de gasolina mais significativo

dentro da refinaria, o uso da LP pode comprometer a qualidade da otimização (PASHIKANTI;

LIU, 2011).

Um objetivo importante no planejamento integrado é a junção de todos estes modelos não-

lineares a fim de obter a otimização global. O trabalho desta tese é essencial neste sentido de

modo a garantir a viabilidade das decisões de mais alto nível, levando em conta os modelos in-

dividuais e envolvendo tanto logística quanto produção. Estes modelos representam mais acura-

damente graus de liberdade operacionais e expansões de capacidade no processo de produção.

Como resultado, a incorporação destes modelos leva a resultados significativamente superio-

res em relação às aproximações lineares típicas destes modelos. Vários estudos demonstram

a importância de incluir otimizações NLP (BHATIA; BIEGLER, 1996)(JACKSON; GROSSMANN,

2003)(JAIN; GROSSMANN, 1998), e os ganhos significativos que podem ser feitos no planeja-

mento e nas operacões de escalonamento. Por outro lado, o desafio é que modelos não-lineares

são mais difíceis de ser incorporados em um mesmo modelo maior, porque eles introduzem

comportamento não-monotônico, não-convexidades e soluções locais.

Nos métodos atuais não-linearidades são frequentemente modeladas introduzindo um grande

número de variáveis binárias auxiliares e restrições adicionais, que tipicamente dobram o nú-

mero de variáveis e aumentam o número de restrições pela mesma ordem de magnitude. Além

disso, com esta abordagem a estrutura combinatorial se torna confusa, e não é possível tirar

vantagem da estrutura. No caso do problema do planejamento integrado, onde muitas destas

restrições aparecem ao mesmo tempo e os tamanhos das instâncias são consideravelmente mai-

ores, estes aspectos são ainda mais sérios



61

3.5.3 Programação de Restrições

Programação de restrições é um paradigma que combina descrições declarativas de proble-

mas com algoritmos eficientes e técnicas de solução. Ela tem provado ser particularmente útil

para solucionar problemas combinatoriais, tal como aqueles que ocorrem nas áreas de planeja-

mento e escalonamento. Em problemas combinatoriais, existem diversas decisões (variáveis)

a que devem ser atribuidas alguma ação (valor). Há também regras (restrições) que impõem

uma restrição sobre os valores que 1 variável ou uma combinação de variáveis podem assumir.

À medida em que o número de variáveis e valores possíveis aumentam, o número de maneira

de se combinar atribuição de valores pode crescer exponencialmente. Desta forma, algoritmos

eficientes são frequentemente requisitados para explorar o espaço de busca de atribuições pos-

síveis a fim de encontrar soluções que sejam factíveis e/ou ótimas. Algoritmos de programação

de restrições habilitam isso atráves de técnicas que combinam:

1. inferência (consistência) – removem atribuições não factíveis por raciocínio lógico sobre

as restrições do problema

2. busca – explora as atribuições possíveis restantes seguindo um processo algorítmico de-

finido.

Definição 4 Um Problema de Satisfação de Restrições (CSP) é definido pela tripla (X, D, C),

onde

X é um conjunto finito de variáveis {x1, . . . , xn}, onde cada variável xi pode ser booleana,

numérica ou simbólica;

D é um conjunto finito{D1, . . . , Dn}, formado pelos conjuntos finitos Di que representam

o domínio de cada variável xi;

C é um conjunto finito de restrições {c1, . . . , cm} aplicadas sobre subconjuntos arbitrários

de variáveis de X.

O objetivo de um CSP é encontrar uma tupla (ou mais) de solução s ? S, onde S é produto

cartesiano D1× . . .×Dn dos domínios de todas as variáveis X que satisfaça todas as restrições

contidas em C. O tamanho de um CSP pode ser medido pelo número de variáveis, os tamanhos

dos domínios e o número das restrições (TSANG, 1993).

Existem muitas aplicações do CSP, tal como escalonamento, alocação de recursos, plane-

jamento de produção e leilões combinatoriais (DECHTER, 2003). Entretanto, um CSP é um

problema de decisão – i.e., se busca por soluções que satisfaçam todas as restrições. Em alguns



62

casos, pode-se não querer apenas encontrar qualquer solução, mas uma solução que também

otimize alguma função objetivo. Tal situação é tratada atráves do formalismo generalizado de-

nominado Problema de Satisfação de Restrições com Otimização (CSOP), que será apresentado

a seguir.

Problema de Satisfação de Restrições com Otimização (CSOP)

Definição 5 Um Problema de Satisfação de Restrições com Otimização (CSOP) é definido

como um CSP onde foi adicionada uma função de otimização f que mapeia toda possível solu-

ção x para um valor numérico. Ou seja, CSOP é definido pela quadra (X, D, C, f), onde

X é um conjunto finito de variáveis {x1, . . . , xn}, onde cada variável xi pode ser booleana,

numérica ou simbólica;

D é um conjunto finito {D1, . . . , Dn}, formado pelo conjunto finito Dique representa o

domínio de cada variável xi;

C é um conjunto finito de restrições {c1, . . . , cm} aplicadas sobre subconjuntos arbitrários

de variáveis de X, e

f : S ? R, é a função de otimização, cujo domínio é o produto cartesiano S = D1× . . .×

Dn.

O objetivo de um CSOP é encontrar a tupla de solução s ? S que satisfaça todas as restri-

ções contidas em C, e ao mesmo tempo minimize a função f.

CSP no Problema de Planejamento O campo relativamente novo do CSP tornou-se re-

centemente o estado da arte para alguns tipos importantes de problemas de sequenciamento,

particularmente problemas com restrições de recursos, que ocorrem com freqüência no con-

texto da cadeia de suprimentos. CSP pode trazer vantagens, tanto na modelagem quanto na

solução. Os modelos tendem a ser mais concisos e de fácil depuração, uma vez que as con-

dições lógicas e combinatórias são muito mais naturalmente expressas em um CSP do que em

um MILP (MILANO, 2003). Os solucionadores tiram proveito dos métodos de inferência lógica

(propagação de restrições), que se adaptam bem às restrições combinatórias que caracterizam

os problemas de escalonamento. Em particular, o aspecto de determinar em que ordem colocar

cada atividade nestes problemas, pode apresentar dificuldades para MILP, onde é difícil de ser

modelado e dá origem a relaxações fracas.

Em contraste, um modelo CSP prontamente formula problemas de sequenciação, e oferece



63

algoritmos especializados de propagação que exploram a sua estrutura. Além disso, a heurística

pode prontamente ser acomodadas em CSP. A maior promessa, no entanto, reside na integra-

ção entre métodos CSP e MILP, que é atualmente uma área de pesquisa muito ativa (HOOKER,

2000). A integração permite atacar os problemas em que algumas das restrições são mais ade-

quadas para uma abordagem MILP (talvez por terem boas relaxações contínuas) e outras são

mais adequadas para uma abordagem CSP (porque "propagam bem"). Isto é particularmente

verdade para os problemas de cadeia de suprimento, em que as restrições relativas à alocação

de recursos, roteamento e gerenciamento de estoque podem relaxar bem, enquanto as restrições

relacionadas ao escalonamento e outras condições lógicas ou combinatórias podem propagar

bem.

No contexto de problemas de escalonamento, estes modelos realizam a atribuição de tarefas

a máquinas com restrições de programação inteira-mista, enquanto que a sequencia de tarefas

é executada com a programação de restrição. A motivação por trás do primeiro é remover as

restrições associadas ao método de penalidades (big-M) (vide (WINSTON, 1995)) e explorar a

capacidade de otimização da programação inteira-mista. A motivação por trás do último é ex-

plorar a capacidade do CSP para tratar de forma eficaz subproblemas de viabilidade, bem como

as restrições de sequenciação. Métodos híbridos têm mostrado em alguns problemas sinergias

que levam a reduções significativas na computação (JAIN; GROSSMANN, 2001) (MARAVELIAS;

GROSSMANN, 2004) (HOOKER et al., 1999).

3.6 Estratégia de Solução

Estratégias de solução para o problema integrado planejamento-escalonamento podem ser

classificadas em três categorias como mostrado na Fig. 10. Usando métodos de decomposição

o problema é decomposto em um subproblema mestre (alto nível) utilizado para determinar

as metas de produção e em um subproblema escravo (baixo nível) com escalonamento deta-

lhado. As metas de produção ou outras decisões de alto nível são usadas com entradas para

o subproblema escravo. Se o fluxo de informações é somente do subproblema mestre para os

subproblemas escravos, então os métodos são hierárquicos. Se existe um ciclo de realimen-

tação dos submodelos de volta ao subproblema mestre, então os métodos são iterativos. Se

a formulação integrada contém submodelos de escalonamento detalhado para cada período de

planejamento, então sua solução provê todas as informações necessárias. Entretanto, estes mo-

delos são difíceis de resolver e requerem métodos de solução avançados. Estes últimos são

denominados métodos full-space (MARAVELIAS; SUNG, 2009).



64

Figura 10: (a) Hierárquico (b) Iterativo (c) Full-space (baseada em (Maravelias e Sung, 2009))

3.6.1 Métodos Hierárquicos

Nos métodos hierárquicos o problema mestre provê um conjunto de decisões de alto ní-

vel, tais como metas de produção e seleção de tarefas (MCKAY; SAFAYENI; BUZACOTT, 1995).

Esta informação é repassada como entrada para o subproblema de escalonamento baixo nível

com o objetivo de obter uma solução completa de escalonamento (AMARO; BARBOSA-POVOA,

2008). Se um escalonamento viável associado com os valores de produção previstos não existe,

então um escalonamento viável na vizinhança deste é procurado de forma a se ter uma solu-

ção “globalmente viável” (KELLY; ZYNGIER, 2008). A fim de prover previsões mais realistas,

em (SUBRAHMANYAM S.; REKLAITIS, 1996) foi proposto um modelo de escalonamento aproxi-

mado no nível mestre, que é uma abordagem amplamente seguida.

A decomposição hierárquica pode também ser usada dentro da estratégia de horizontes

rolantes, onde modelos de escalonamento detalhado são usados por alguns períodos iniciais

e modelos agregados são usados para os períodos posteriores. As metas de produção para

os períodos iniciais são exatas e desta forma diretamente implementadas, enquanto as metas

para períodos posteriores são atualizadas à medida que o horizonte rola (DIMITRIADIS A. D.;

PANTELIDES, 1997). Métodos de solução de horizontes rolantes são agrupados em geral como

hierárquico, pois não há informação voltando para o problema mestre durante o processo de

solução.

Em (HEEVER; GROSSMANN, 2003) foi apresentado um esquema de decomposição hierár-

quica para um problema integrado de planejamento e escalonamento reativo. O nível superior

é solucionado para determinar os valores de produção na presença de um modelo simplificado



65

de oleodutos, enquanto o nível inferior é solucionado no padrão de horizontes rolantes para

determinar a operação de unidade na presença de um modelo detalhado de oleodutos.

3.6.2 Métodos Iterativos

Na ausência de restrições de recursos e custos de produção detalhados, as metas de pro-

dução ou atribuições de tarefas a unidades obtidas pela primeira solução do problema mestre

serão provalmente inviáveis ou subótimas. A invés de tentar encontrar escalonamentos que es-

tejam nas vizinhanças dessas decisões, métodos iterativos tentam fechar o ciclo de informações

a partir dos subproblemas de escalonamento em relação ao problema mestre. O objetivo de

tal realimentação é encontrar as decisões de alto nível verdadeiramente ótimas. Isto pode ser

conseguido através da adição de cortes inteiros que excluem as soluções encontradas anterior-

mente. Portanto, diferentes soluções podem ser encontradas pelo problema mestre e avaliadas

pelo subproblema de nível inferior. Além disso, o problema mestre pode proporcionar um li-

mitante inferior crescente, enquanto o subproblema pode fornecer um limite superior. Assim,

métodos iterativos pode levar a soluções ótimas caso este intervalo entre os limitantes convirja.

Em (PAPAGEORGIOU; PANTELIDES, 1996) foi proposto um planejamento de campanhas e

um modelo de escalonamento integrados, onde cada período de tempo do nível mais alto é

composto de campanhas cíclicas. O problema do nível superior é resolvido para fixar um con-

junto de variáveis binárias, ou seja, escolher as campanhas. O problema do nível inferior é

usado para gerar campanhas. No fim de cada iteração, um corte inteiro é adicionado para evitar

que o mesmo conjunto de variáveis binárias seja encontrado mais uma vez.

Muitos pesquisadores também propuseram métodos iterativos, onde um modelo MILP mes-

tre é resolvido para obter atribuições de tarefas à unidades, e um subproblema de programação

de restrições para encontrar seqüências viáveis. (HOOKER et al., 1999) e (JAIN; GROSSMANN,

2001) consideraram o problema de fase única, enquanto (HARJUNKOSKI; GROSSMANN, 2002)

estudaram processos de fases múltiplas. (CHU; XIA, 2005) propuseram para um problema de es-

calonamento com restrição de recursos um método iterativo de dois níveis IP/CP que adiciona

cortes de Bender para o problema de alto nível. Em geral, os métodos iterativos tem prometido

muito, mas sua aplicação tem sido até agora muito dependente da formulação.

3.6.3 Métodos Full-space

Os métodos desta classe consideram o problema integrado, em que um modelo de esca-

lonamento detalhado é utilizado para a modelagem de restrições de recursos e os custos de



66

produção. A primeira abordagem é a solução do modelo full-space usando métodos de pro-

gramação matemática (BASSETT; PEKNY; REKLAITIS, 1996) (BLANCO et al., 2005) (KALLRATH,

2002) (KELLY, 2004) (PAPAGEORGIOU; PANTELIDES, 1996). Em (JOLY; MORO; PINTO, 2002) foi

proposto um modelo integrado de uma refinaria. O problema de planejamento definiu a topo-

logia e pontos de operação de uma refinaria, enquanto o problema de escalonamento cuidou da

descarga do petróleo dos oleodutos, transferencia para os tanques de armazenamento, e carga

nas unidades. Em (NEIRO; PINTO, 2005) foi considerado uma formulação multi-período para o

planejamento de produção da refinaria. Modelos de escalonamento por si só, no entanto, são de

difícil solução, apesar de só cobrirem um horizonte de vários dias ou semanas. Se o mesmo ní-

vel de detalhe é mantido, por conseguinte, a integração com o planejamento da produção que se

estende para o horizonte de vários meses resulta em modelos intratáveis computacionalmente.

Assim, a segunda abordagem é a utilização de métodos heurísticos tais como simulated annea-

ling (REKLAITIS, 1982) e algoritmos genéticos (BERNING et al., 2004) (YAN; ZHANG, 2007).

A terceira abordagem é decompor a formulação integrada através da exploração da sua es-

trutura. Os subproblemas decompostos podem então ser resolvidos iterativamente utilizando

métodos de programação matemática, tais como a decomposição de Bender (BENDERS, 1962)

(GEOFRION, 1972) ou o relaxamento/decomposição Lagrangiana (EVERETT, 1963) (FISHER,

1981) (GUIGNARD; KIM, 1987). Entretanto, estes métodos iterativos são diferentes dos apre-

sentados na subsecção anterior na medida em que consideram a formulação original integrada

(planejamento-escalonamento). A ideia principal da decomposição de Bender é resolver um

problema mestre relaxado que envolve apenas as variáveis de vinculação entre os dois sub-

problemas, corrigir os valores dessas variáveis para obter subproblemas dissociados, e usar a

solução destes subproblemas para melhorar a formulação do problema mestre.

A relaxação Lagrangiana é tipicamente usada quando um problema é constituído por um

conjunto de restrições fáceis e um conjunto de restrições difíceis, cuja remoção (e, adição, como

um termo de penalização no objectivo) leva a um problema fácil. No caso do planejamento da

produção, esta situação surge quando um problema de escalonamento único é usado ao longo

de vários períodos de planejamento. As restrições difíceis são aquelas que ligam blocos corres-

pondentes a períodos consecutivos. Decomposição Lagrangiana é uma variação da relaxação

Lagrangeana em que as variáveis complicadas que aparecem em várias restrições são desagre-

gadas em cópias. As cópias da mesma variável estão relacionadas por restrições de vinculação,

que são relaxadas pela decomposição (KELLY, 2002)(KELLY; ZYNGIER, 2008).



67

3.7 Conclusão

Este capítulo discutiu três desafios principais para enfrentar o problema de integração da

cadeia de suprimentos da indústria do petróleo. O problema de planejamento tratado deste tra-

balho tem a denominação dada em 2.2.2 com as características de uma cadeia genérica, mas

tem, principalmente, o enfoque da área de processos, já que focaliza a cadeia de suprimentos da

indústria petróleo que é um caso importante desta área. As ideias por trás do modelo proposto

neste trabalho vem diretamente ao encontro dos desafios de modelagem e multi-escala no es-

paço e no tempo. Por outro lado, trarão vantagens com relação ao último desafio, que é o poder

computacional.

A maioria das ferramentas discutidas se concentram em partes específicas da cadeia de

suprimentos de petróleo. A análise resumida dos trabalhos anteriores leva à conclusão que

somente subsistemas da cadeia de suprimentos do petróleo tem sido estudados em um nível

razoável de detalhe. Por outro lado, os modelos LP e MILP são construídos com base em corre-

lações simplificadas, que são apenas aproximações grosseiras de muitos processos com natureza

não-linear. Em geral, o emprego dos modelos LP é restrito ao planejamento integrado de longo

prazo, não sendo conveniente para o nível operacional do dia a dia. Os resultados da otimização

neste nível são muito mais próximos da realidade. Entretanto, não existe nenhuma coordena-

ção própria entre a otimização LP e as otimizações NLP das diferentes operações. Portanto,

não existe nenhum framework que permita chegar na otimização geral a partir das otimizações

de processos individuais, o que significa que cada um destes processos é otimizado de modo

autônomo e indenpendente. Consequentemente, a sinergia entre aspectos holisticos e operacões

locais não podem ser propriamente exploradas atualmente. Evidentemente, estes fatos são con-

sequência da grande complexidade do problema abordado neste trabalho, que exige que todas

estas partes sejam colocadas juntas dentro de um único modelo. Assim, vários trabalhos, por

exemplo (PINTO; NEIRO, 2004) e (LASSCHUIT; THIJSSEN, 2004), chamam a atenção para a im-

portância de alcançar uma integração completa na cadeia de suprimentos da indústria química

e petrolífera, e descrevem o desejo de uma ferramenta com este objetivo.

Um objetivo importante no planejamento integrado é a junção de todos estes modelos não-

lineares a fim de obter a otimização global. O trabalho desta tese é essencial neste sentido de

modo a garantir a viabilidade das decisões de mais alto nível, levando em conta os modelos

individuais e envolvendo tanto logística quanto produção. Apesar de nenhum dos submodelos

disponíveis poder resolver sozinho o problema considerado como um todo, eles podem ser uma

parte da solução dentro da estrátegia adotada neste trabalho, como será visto mais adiante.



68

As abordagens deste capítulo são do tipo centralizado, o que é a tendência dominante para

a maioria dos trabalhos considerando o problema de integração. Entretanto, a cadeia de su-

primentos é composta por entidades interdependentes que possuem papéis e responsabilidades

definidas a partir das suas competências e das atividades que elas são capazes de realizar. As-

sim, é necessário um modelo que leve em conta todas as dimensões da rede e os aspectos da

organização, bem como a natureza distribuída destas entidades que compõem a cadeia de su-

primentos, com sua dinâmica e autonomia de decisão. Por isso, será mostrada a abordagem

de agentes que cria uma dimensão nova com o ponto de vista distribuído e adaptado para a

representação de sistemas e organizações complexos (LABARTHE et al., 2007). Isto será feito

exatamente no próximo capítulo.



69

Parte II

Abordagem Distribuída



70

4 Agentes Holônicos

4.1 Introdução

Um sistema multiagentes é formado por uma coleção de entidades ativas, denominadas

agentes. Um agente pode ser definido como uma entidade teórica virtual ou física, capaz de

agir sobre si mesma e sobre o ambiente no qual evolui, e se comunicar com outros agentes. Seu

comportamento é a consequência de suas observações, conhecimento e interações com outros

agentes (FERBER, 1995). Um agente pode ser caracterizado por seu papel, seus objetivos, suas

funcionalidades, suas crenças, suas habilidades de decisão e suas capacidades de comunicação e

de aprendizagem. Um agente é definido por Jennings et al. (JENNINGS; WOOLDRIDGE; SYCARA,

1998) desta forma: ‘‘um agente é um sistema computacional, situado em algum ambiente, que

é capaz de ação autônoma flexível a fim de atingir seus objetivos projetados.’’ Em (WOOL-

DRIDGE; JENNINGS, 1995) um agente é definido como uma entidade que possui as seguintes

características:

• Autonomia: um agente opera sem a intervenção do ser humano ou outra intervenção

direta e nem as ações que ele realiza nem seu estado interno são submetidos a qualquer

controle.

• Reatividade: um agente percebe seu ambiente e reage de uma forma apropriada às mu-

danças do ambiente.

• Pró-atividade: um agente deve ser capaz de mostrar comportamentos direcionados por

objetivos internos, tomar iniciativas.

• Sociabilidade: os agentes interagem uns com os outros usando linguagens de comunica-

ção e regras comuns de sociabilidade.

De acordo com (HUHNS; STEPHENS, 1999) os sistemas multiagentes apresentam várias vanta-

gens. Em primeiro lugar, eles são mais fáceis de compreender e implementar quando o pro-

blema é intrinsicamente distribuído, como é o caso do gerenciamento da cadeia de suprimentos.



71

Desta forma, eles permitem maior flexibilidade quando se considera a modularidade do sis-

tema real a ser modelado. Além disso, a abordagem distribuída leva naturalmente à adoção de

algoritmos locais apropriados, que levam em conta as especificidades locais do modelo. Parti-

cularmente, a concorrência permite um certo nível de paralelismo que pode acelerar o processo

de solução do problema. Finalmente, uma solução centralizada pode ser impossível levando em

conta que sistemas e dados podem pertencer a organizações independentes.

Por outro lado, Jennings salienta que as interações entre os agentes são flexíveis e de alto-

nível, o que torna mais fácil a engenharia de sistemas complexos (JENNINGS, 2000). Este autor

lembra também que os sistemas complexos podem ser decompostos em subsistemas interde-

pendentes de modo a facilitar o tratamento da complexidade. Para este fim a modelagem com

agentes apresenta 3 vantagens, associadas com as ferramentas descritas em (BOOCH, 1994) para

lidar com a complexidade do software:

• Decomposição: particionamento eficiente do problema em subproblemas mais fáceis;

• Abstração: definição de um modelo mais simples que enfatiza os detalhes e propriedades

mais importantes, enquanto suprime outros mais supérfluos;

• Organização: focalização nos relacionamentos organizacionais entre os vários compo-

nentes relevantes para a solução do problema.

4.2 Agentes em Cadeias de Suprimentos

A tecnologia de agentes já é considerada uma abordagem importante para desenvolver sis-

temas de produção inteligentes distribuídos (HIKKANEN et al., 1997). Cadeias de suprimentos

incluem e estendem tais sistemas, e o paradigma de agentes permite modelar e simular de forma

distribuída o comportamento da cadeia de suprimentos e seus membros (GALLAND et al., 2003).

Cadeias de suprimentos e sistemas multiagentes mostram numerosas características intrínsecas

em comum (YUAN; LIANG; ZHANG, 2003). Tanto os sistemas multiagentes quanto as cadeias

de suprimentos são compostos de entidades que interagem de acordo com seus papéis e habi-

lidades dentro das estruturas organizacionais. Os agentes e os atores da cadeia de suprimentos

possuem meios, recursos e capacidades que lhes permitem realizar, de forma individual ou

coletiva, várias funções, tarefas ou atividades dentro de diferentes estruturas organizacionais.

Estas analogias naturalmente levam a abordagem multiagentes a ser uma forma privilegiada de

representar cadeias de suprimentos. Especificamente, ela permite levar em conta facilmente:



72

– a natureza distribuída das cadeias de suprimentos e a não-linearidade de seus comporta-

mentos;

– as modificações do ambiente, já que a flexibilidade do modelo de agentes permite que ele

se adapte através da adição e remoção de agentes;

– a variedade e complexidade da decisão, através da capacidade do sistema multiagentes de

se organizar para resolver problemas;

– um comportamento de cooperação sem altruísmo graças à definição das propriedades dos

agentes através de modos de interação.

A utilização de Sistemas Multiagentes (SMA) tem sido proposta por vários pesquisadores

a fim de melhorar os Sistemas Gerenciadores da Cadeia de Suprimentos (SGCS) (SADEH et al.,

1995). Eles são altamente aplicáveis em domínios de problemas onde as abordagens centra-

lizadas atingem seus limites. As abordagens baseadas em agentes são bem convenientes para

domínios que exijam a integração e interação de múltiplas fontes de conhecimento, a resolução

de conflitos de interesse e objetivo, ou processamento de dados com tempo limitado (WEISS,

1995). Agentes inteligentes podem também representar as organizações dentro do domínio de

logística e modelar as funções logísticas e seus processos, bem como as interações entre elas.

Devido à similaridade em características entre agentes inteligentes e organizações, a tecnologia

de agentes é uma escolha apropriada para a modelagem de organizações no domínio de logís-

tica (GRAUDINA; GRUNDSPENKIS, 2005). A organização de agentes é aderente a um sistema

sócio-técnico, que melhora a compreensão de decisões tomadas por agentes para atores. Es-

tes princípios organizacionais são genéricos para qualquer sistema logístico e permitem uma

adaptação rápida a condições variáveis (GRAUDINA; GRUNDSPENKIS, 2005). Em vários traba-

lhos, uma abordagem baseada em agentes foi proposta para o planejamento e programação de

produção e serviços de logística em empresas virtuais, onde agentes podem utilizar negociação

para reduzir a árvore de busca e chegar a um acordo sobre escalonamentos otimizados viáveis.

Assim, soluções ótimas locais podem ser encontradas em níveis mais baixos da organização, e

combinadas no nível mais elevado em soluções agregadas através de negociação (KARAGEOR-

GOS et al., 2003).

A justificativa para utilizar uma abordagem de agentes dentro da cadeia de suprimentos vem

do fato de ser difícil centralizar o problema devido a uma ou mais das seguintes razões: (i) cada

agente é uma unidade de negócios separada e pode não estar disposto a partilhar informação

local; (ii) o problema local de cada agente é grande e complexo, o que significa que o custo

envolvido na centralização esta informação é proibitivo, e tentar resolver tal problema centrali-

zadamente leva a modelos monolíticos extensos de grande complexidade; (iii) problemas locais



73

de baixo nível de cada agente (tais como o escalonamento da produção) são resolvidos de forma

mais adequada no local do agente, onde informações detalhadas estão prontamente disponíveis

(BURKE et al., 2007).

Sistemas complexos são caracterizados por múltiplas interações entre muitos componentes

diferentes. Eles são chamados complexos porque é difícil entender e verificar seu projeto e/ou

funcionalidade. O comportamento do sistema é o resultado da agregação não-linear de com-

portamentos locais de seus componentes. Como já foi visto, Sistemas MultiAgentes (SMA) se

tornaram uma ferramenta natural para modelar, simular e programar sistemas complexos, e são

compostos de agentes autônomos, reativos e proativos, que interagem entre si e estão engajados

na realização de uma meta conjunta. De fato, os sistemas complexos normalmente possuem um

grande número de entidades interagindo entre si, mas que também atuam em diferentes níveis

de abstração. Neste contexto, parece improvável que SMA seja capaz de representar fielmente

sistemas complexos sem habilidades para tratar múltiplas granularidades. Este é o motivo pelo

qual os sistemas holônicos atraíram a atenção dos pesquisadores (HILAIRE; KOUKAM; RODRI-

GUEZ, 2008). A seguir este paradigma será descrito com mais detalhes.

4.3 Paradigma Holônico

O termo holon, uma combinação do grego "holos" (todo) e do sufixo "on" (parte), foi origi-

nalmente introduzido em 1967 pelo filósofo húngaro Arthur Koestler (KOESTLER, 1967) a fim

de dar nome a estruturas recursivas e auto-semelhantes em entidades biológicas e sociológicas.

De acordo com Koestler, um holon é uma estrutura biológica ou sociológica que é estável e

coerente, e que consiste de mais holons que funcionam de acordo com princípios semelhantes.

Nenhuma estrutura natural é "todo" ou "parte" em um sentido absoluto, mas na verdade todo

holon é uma composição de partes subordinadas, bem como uma parte de um todo maior. Por

exemplo, uma pessoa humana é, por um lado, uma composição de órgãos constituídos por cé-

lulas que ainda podem ser decompostas, e por outro lado, ele ou ela é parte de um grupo que,

por sua vez, faz parte da sociedade humana. Assim, um holon pode ser visto, dependendo do

nível de observação, como uma entidade atômica e autônoma, tal como um agente, ou como

uma organização de outros holons. Esta dualidade é algumas vezes chamada “efeito Janus”, em

referência ao deus romano dos portões e entradas, que possuía duas faces (HILAIRE; KOUKAM;

RODRIGUEZ, 2008).

Uma estrutura hierárquica de holons compostos de holons como subestruturas é denomi-

nada holarquia (KOESTLER, 1967). Em contraste com hierarquias tradicionais, o poder de deci-



74

são dos níveis organizacionais mais baixos é respeitado em holarquias. A estrutura organizaci-

onal de uma sociedade holônica oferece vantagens das quais o projeto monolítico de artefatos

mais técnicos carece: ela é robusta quando deparada com perturbações externas e internas, ela

é eficiente em seu uso de recursos, ela pode se adaptar a mudanças ambientais. Outra vantagem

é a possibilidade de mapear um domínio de aplicação diretamente em um sistema multiagente

através da “agentificação” de entidades em qualquer nível de granularidade e sem perder abs-

trações de mais alto nível (GERBER; SIEKMANN; VIERKE, 1999). Devido à sua flexibilidade e

adaptabilidade, agentes de software são particularmente adequados para representar as organi-

zações empresariais holônicas (ULIERU; WALKER; BRENNAN, 2001) (LEITÃO; RESTIVO, 2002).

Esta ideia está presente até no texto original de Koestler, quando ele usa o termo “agência” para

definir o equilíbrio no sistema holônico como sendo consequência das relações entre partes e o

todo, onde este último é representado pela agência que controla a parte do próximo nível acima

(KOESTLER, 1967).

Desta forma, os termos agente holônico e sistema de agentes holônicos são utilizados para

referir-se a agentes e sistemas de agentes organizados de acordo com a metáfora holônica. Uma

das características marcantes do paradigma holônico é a grande variabilidade da autonomia de

um agente holônico. Por um lado um agente que não é incorporado dentro de qualquer es-

trutura holônica permanece completamente autônomo no âmbito da sua arquitetura. Por outro

lado, agentes que abrem mão de sua autonomia quando se tornam parte de um holon, por vezes

abdicam de sua autonomia completamente. Os agentes em uma sociedade holônica podem for-

mar, desmantelar e reconfigurar estruturas holônicas dinamicamente. Desta forma, eles ajustam

seu grau de autonomia de uma forma flexível.

Nas seções anteriores, a abordagem de multiagentes já se apresentava como a mais con-

veniente para a modelagem do gerenciamento da cadeia de suprimento. Levando em conta as

características dos sistemas holônicos, que podem ser, na verdade, um tipo de especialização

dos sistemas multiagentes, eles se mostram ainda mais promissores para o tratamento deste tipo

de problema. Entre outras coisas, devido a sua capacidade de tratar múltiplas granularidades, e

a sua estrutura recursiva, que são características observáveis em uma cadeia de suprimentos e

em suas entidades constituintes. O levantamento de aplicações utilizando esta abordagem, que

será apresentado mais adiante, vai reforçar ainda mais esta escolha. Mas antes disso, as alterna-

tivas disponíveis para a modelagem de um sistema com multiagentes holônicos serão descritas

na próxima seção.



75

4.3.1 Holons e Agentes

De acordo com (GIRET; BOTTI, 2004) as abordagens de holons e agentes diferem entre si

principalmente na motivação. Portanto, em geral a pesquisa com holons é orientada para nor-

mas, comunicação e comportamento de baixo nível. Por outro lado, a pesquisa MAS é motivada

pela programação de sistemas distribuídos. Este último visa o comportamento social de enti-

dades inteligentes e é principalmente envolvido na investigação de modelos comportamentais,

cooperação e estratégias de coordenação, aprendizagem com as experiências próprias, criação

de coalizão, etc. Em resumo, ao contrário do MAS, que é uma abordagem de software ampla, os

holons têm sido utilizados para o controle inteligente distribuído especificamente em sistemas

de manufatura desde o início da década de 1990 (HMS, 1994). Como já mencionado em seções

anteriores, o agente pode ser: autonômo, social, reativo, pró-ativo, racional, móvel, eles podem

aprender, etc (WOOLDRIDGE; JENNINGS, 1995). Holons, como um paradigma, têm as seguintes

características básicas: autonomia, cooperação e reorganização. Além destes, que poderiam ser

chamados propriedades comportamentais, holons têm propriedades estruturais. Uma delas é a

recursividade, que é a condição básica dos sistemas holônicos. Ela permite que um holon seja,

simultaneamente, um todo e uma parte de algum todo / parte. Isto significa que holons possam

conter outros níveis inferiores de holons, que também podem estar contidos em um outro nível

superior de holons, estando em uma arquitetura recursiva. Na literatura multiagente especia-

lizada, não encontramos referências sobre arquiteturas recursivas de agentes. No entanto, na

definição de agente, nada impede que os agentes possam ter uma estrutura interna composta

por entidades auto-similares.

Conceitualmente, um holon é um tipo especial de agente, e a tecnologia que é utilizada pela

maioria das pessoas que se dedicam à pesquisa de holons, é o MAS. Neste contexto, um agente é

especificado somente como uma entidade comunicativa ativa que desempenha papéis (FERBER;

GUTKNECHT, 1998). De fato agentes instanciam uma organização (papéis e interações), quando

eles exibem comportamentos definidos pelos papéis da organização e quando eles interagem de

acordo com os padrões de interação da organização. Isto acontece também para o caso particular

da organização holônica, que vai ser discutida em seguida.

4.3.2 Modelos de Agentes Holônicos

De acordo com (GERBER; SIEKMANN; VIERKE, 1999) existem diferentes possibilidades de

se modelar estruturas holônicas dentro de um sistema multiagentes, que diferem no grau de

autonomia assumido pelos holons. Estes modelos serão apresentados a seguir.



76

4.3.2.1 Holon como Federação de Agentes Autônomos

Uma forma direta de modelar estruturas holônicas é presumir que os holons são agentes

atômicos com suas arquiteturas predefinidas, e o holon do nível acima é apenas uma nova

instância conceitual da definição genérica de agente, cujos atributos são fornecidos pelo holons

constituintes e preenchidos dinamicamente. Neste caso, nenhum agente tem de renunciar à

sua autonomia, e o holon se concretiza exclusivamente por meio da comunicação e cooperação

entre os holons imediatos do nível abaixo.

4.3.2.2 Holon com Resultado da Fusão de vários Agentes

Outra forma de construir um holon é acabar com os subagentes participantes e criar um

novo agente com capacidades que englobam as funcionalidades destes agentes. Neste caso,

os agentes fundidos abdicam completamente da sua autonomia. Esta abordagem viola o pa-

radigma da autonomia, já que os agentes fundidos perdem completamente sua autonomia e

delegam-na para o holon criado. A realização desta abordagem exige procedimentos de fu-

são e divisão de holons, que conduzem à criação de um novo agente. Especialmente para um

grupo heterogêneo de agentes, isto pode ser intratável. No caso dos agentes do mesmo tipo

com representações explícitas de metas e crenças, por exemplo utilizando a abordagem BDI

(Belief-Desires-Intentions), a fusão pode ser realizada através da criação de um agente com a

união das crenças e metas dos sub-agentes, desde que a consistência seja garantida. De acordo

com este modelo, os agentes não podem participar em mais de um holon, a menos que sejam

copiados.

4.3.2.3 Holon como um Grupo Moderado

Como uma alternativa para as duas soluções extremas anteriores, existe uma forma híbrida

de formar um holon, onde agentes abrem mão apenas parcialmente de sua autonomia para o

holon criado. Isto é conseguido através de um holon especial que age como um representante ou

cabeça. Ele representa o holon para o mundo exterior, i.e., para o resto da sociedade de agentes,

pela sua capacidade de uma interação consistente com os agentes exteriores. Sua competência

abrange desde tarefas puramente administrativas, até a autoridade para emitir diretivas para os

outros subholons. Além disso, o cabeça pode ter a autoridade para alocar recursos para os

outros agentes no holon, para planejar e negociar para o holon com base nos planos e metas

de seus sub-agentes, e até mesmo para remover alguns holons do mesmo nível (sub-agentes),

ou para incorporar outros. Podemos distinguir dois métodos para determinar o cabeça: ou um



77

Figura 11: (a) Federação (b) Grupo Moderado (c) Fusão

novo agente é criado para o tempo de vida do holon, ou um dos membros do holon assume o

papel de cabeça e ganha a funcionalidade adicional. No segundo caso, ou um membro do holon

é a priori predestinado para a liderança, ou um processo eleitoral é necessário para promover

um dos agentes à liderança. Neste modelo, a autonomia dos agentes membros é parcialmente

negociada para controle. O cabeça sempre tem o papel de representar o holon com relação ao

restante da sociedade de agentes. Mas ele possui também outras competências, que variam de

acordo com o domínio da aplicação.

Dependendo do nível de autonomia, a estrutura do holon resultante pode variar de um grupo

livremente moderado, até uma estrutura hierárquica. No entanto, em qualquer caso, os membros

do holon ainda são representados por agentes, e, consequentemente, não perdemos a capacidade

de resolver problemas de uma forma distribuída. A Fig. 11 representa os diferentes modelos

holônicos com relação à autonomia entre os seus membros, e ilustra abaixo cada um dos 3

modelos correspondentes.

Neste trabalho será adotada a modelagem de sistemas multiagentes holônicos com a estru-

tura de gerenciamento do tipo “grupo moderado”, devido à ampla gama de configurações que

ela permite. Desta forma, um modelo organizacional terá que levar em conta uma organização

específica denominada “Organização Holônica” (HILAIRE; KOUKAM; RODRIGUEZ, 2008), que

será descrita a seguir.



78

4.3.3 Organização Holônica

Na organização holônica baseada no modelo de grupo moderado, podem ser diferenciados

dois tipos de membro. O primeiro deles, chamado “Cabeça”, age como representante de to-

dos os membros na comunicação com não-membros (entidades externas). O segundo tipo é

formado pelos membros propriamente ditos, que são mascarados no mundo exterior pelos seus

respectivos representantes (cabeças). Dentro da abordagem organizacional, é necessário iden-

tificar melhor este conjunto de papéis que representam este conceitos. A Fig. 12 representa a

organização holônica através da linguagem de modelagem Moise+ (HUBNER; SICHMAN; BOIS-

SIER, 2002). Além dos papéis principais, esta especificação estrutural define o papel do átomo,

que é o holon atômico dentro do qual não existem outros holons, e o papel do holon global, que

é o superholon principal e está acima de qualquer outro. Um mesmo holon pode ser visto como

superholon, se for um todo, ou subholon, se for parte.

Dentro de um superholon, os membros podem desempenhar 3 papeis diferentes: cabeça,

parte e multiparte. O papel de cabeça é o representante do grupo, como já foi dito. Os membros

representados podem desempenhar o papel de parte ou multiparte. O papel de parte é associado

com aqueles holons que pertencem a apenas um superholon, enquanto o papel de multiparte é

desempenhado pelos holons compartilhados por mais de um superholon ao mesmo tempo. Estes

papéis são chamados de papéis holônicos, onde o adjetivo ”holônico” é usado para distinguir

estes papéis, que estão presentes em qualquer holon, dos papéis associados a comportamentos

dependentes do domínio do problema específico.

Todo holon deve conter pelo menos uma instância da Organização Holônica, e deve desem-

penhar pelo menos um papel desta organização para definir seu status (por exemplo, superholon

ou subholon). Para realizar estas metas e tarefas, os membros devem interagir e coordenar suas

ações. Desta forma, existe um outro modelo de organização, que chamaremos de “organização

interna” (HILAIRE; KOUKAM; RODRIGUEZ, 2008), que é dependente do domínio do problema e

que modela este segundo aspecto dos superholons, relacionado às suas interações associadas a

suas metas. Estes comportamentos e interações dos membros podem então ser descritos nesta

organização interna independentemente de seus papéis como componentes do superholon, que

são descritos na Organização Holônica, e que é a única organização que deve obrigatoriamente

ser criada para um sistema deste tipo. Esta abordagem utilizada em (HILAIRE; KOUKAM; RODRI-

GUEZ, 2008), garante uma separação clara entre o gerenciamento do holon e comportamentos

específicos com relação às metas assumidas, e também possibilita modularidade e reusabili-

dade.



79

Figura 12: Organização Holônica

4.4 Trabalhos Relacionados

Sistemas holônicos têm sido utilizados em uma ampla gama de aplicações. Por este motivo,

inúmeros modelos e frameworks foram propostos para estes sistemas. Entretanto, a maioria

deles é fortemente vinculado ao domínio da aplicação, e usa arquiteturas de agentes específicas

(HILAIRE; KOUKAM; RODRIGUEZ, 2008). Não foi encontrada na literatura nenhuma ferramenta

ou framework holônico dedicado ao problema de gerenciamento da Cadeia de Suprimentos.

Entretanto, existem trabalhos que possuem aspectos e ideias que serviram como subsídio para

este trabalho, e que serão citados a seguir.

4.4.1 Sistema Holônico de Manufatura (HMS)

A aplicação de conceitos holônicos para a manufatura foi inicialmente motivada pela in-

capacidade dos sistemas de manufatura existentes (i) para lidar com a evolução dos produtos

dentro de uma instalação de produção existente e (ii) manter um desempenho satisfatório fora

das condições operacionais normais. O projeto HMS (Holonic Manufacturing System) tem

como objetivo desenvolver os aspectos genéricos das tecnologias holônicas e demonstrar a sua

adequação e benefícios com a ajuda de várias aplicações prototípicas industriais (HMS, 1994).

Os seus extensos esforços de pesquisa, bem como as atividades paralelas neste sentido em mui-

tas regiões do planeta ainda continuam. Este trabalho traduziu os conceitos holônicos para o



80

mundo da manufatura, visualizando o sistema de produção como sendo um conjunto de modu-

los autônomos (holons) com controle distribuído. O HMS combina as melhores características

de organização hierárquica e heterárquica. Ele preserva o estabilidade da hierarquia, proporcio-

nando a flexibilidade dinâmica da heterarquia. Em um HMS um holon é um bloco de construção

do sistema de manufatura autônomo e cooperativo para transformação, transporte, armazena-

mento e / ou validação de informações e objetos físicos. O holon consiste de uma parte de

processamento de informação e, muitas vezes um parte de processamento físico.

Assim, alguns resultados importantes destas pesquisa foram publicados, por exemplo, rela-

tivo manipulação de materiais (CHRISTENSEN, 1994). O grupo de pesquisa PMA / K.U.Leuven

desenvolveu PROSA, que é uma arquitetura de referência para HMS (BRUSSEL et al., 1998). A

estrutura desta arquitetura é construída em torno de três tipos de holons básicos: o holon pe-

dido, o holon produto e o holon recurso. Cada um deles é responsável, respectivamente, por um

aspecto do controle da produção: (i) logística interna, (ii) planos de processo, e (ii) utilização

dos recursos.

A tecnologia de agentes tem sido utilizada em Sistemas de Manufatura Holônica (SMH)

(GOU; LUH; KYOYA, 1998) (LEITÃO; RESTIVO, 2002) (BONGAERTS, 1998), visualizando os sis-

temas de manufatura a partir de uma perspectiva holônica. O tipo de arquitetura utilizada é

a holarquia, que permite a integração de elementos tanto de sistemas hierárquicos quanto he-

terárquicos em uma estrutura aberta e inteligente. Um exemplo de um sistema deste tipo é o

ADACOR (LEITÃO; RESTIVO, 2002), que é uma implementação concreta de um HMS usando

tecnologia de agentes. Entretanto, uma limitação do ADACOR, como é o caso do HMS em

geral, é que ele focaliza o escalonamento indústrial, mas não considera o planejamento e o

escalonamento do transporte de produtos entre as unidades de produção.

A arquitetura holônica a ser proposta neste trabalho permitirá uma ação rápida e ágil no caso

de perturbações externas, tal como os sistemas de manufatura holônicos. Mas, diferentemente

destes últimos, esta arquitetura não utilizará a inclusão ou a exclusão dinâmica de holons.

4.4.2 TELETRUCK

A metodologia de agentes holônicos foi empregada em um sistema multiagentes de es-

calonamento de uma frota de caminhões, denominado TELETRUCK, que foi desenvolvido no

DFKI (Deutsches Forschungszentrum für Künstliche Intelligenz) (BURCKERT; FISCHER; VIERKE,

1998). O objetivo do sistema TELETRUCK é modelar os processos de negócio, em particular

a alocação de recursos para requisições de transporte que chegam em uma empresa de trans-

porte. A empresa tem um número fixo de recursos de transporte como motoristas, caminhões



81

ou reboques. O tipo e tamanho do espaço de carga dos containers restringem o tipo de carga

que pode ser transportada. Também motoristas humanos diferem em seus tempos de expedi-

ente disponíveis e no tipo de carga que eles podem transportar, dependendo de questões como

treino especial ou determinadas licenças, por exemplo, para mercadorias perigosas. Recursos

têm que ser escalonados de tal forma que as tarefas de transporte à mão possam ser executadas

com custo mínimo. Na implementação adotada, o sistema multiagentes consiste de holons de

vários tipos. Para cada dispositivo de transporte da empresa, bem como para cada um dos seus

motoristas, existe um agente que administra estes recursos. Estes agentes têm seus próprios

planos, objetivos, e habilidades de comunicação a fim de prover seus recursos para os planos

de transporte, de acordo com o seu papel na sociedade. Estes agentes se fundem com um Pla-

nAndExecute Unity (PnEU) e formam um holon que representa um veículo completo, que é

realmente capaz de executar tarefas de transporte. Por exemplo, tal veículo holon pode consistir

de um PnEU, um motorista, um caminhão, um reboque, e dois containers, cada um modelado

como um subholon que se funde ao superholon.

Os PnEUs são subholons especiais, que coordenam a formação dos superholons, represen-

tando as entidades de transporte, e planejando as rotas dos veículos, as paradas para carga, e

tempos de locomoção. O PnEU é o cabeça do holon veículo, o representa para o mundo exterior,

e está autorizado a reconfigurá-lo. Um PnEU está equipado com habilidades de planejamento,

coordenação e comunicação, mas não tem os seus próprios recursos. Cada holon transporte

que tenha pelo menos uma tarefa a fazer é encabeçado por um PnEU. Além disso, sempre há

exatamente um PnEU ocioso com um plano vazio que coordena a formação de um novo holon

a partir de componentes ociosos se necessário. Os holons veículo são subholons do superho-

lon que representa toda a empresa de transporte. Este holon que engloba toda a sociedade de

agentes é o agente companhia, que anuncia e distribui as ordens recebidas, faz a aceitação das

propostas, controla a otimização global, coordena a execução, e canaliza toda a comunicação do

sistema com o usuário. O agente companhia representa a sociedade de agentes para o usuário

e, em uma futura extensão, para suas empresas parceiras, que serão representadas também por

seus respectivos agentes companhia. Ele coordena a cooperação interna e a interação entre os

pnEUs.

As estruturas holônicas para o projeto TELETRUCK foram implementadas através de gru-

pos moderados de agentes. Para a formação e coordenação de um holon, foi escolhida uma

extensão do protocolo Contract Net (CNP) (SMITH, 1980) e um mecanismo de mercado coor-

denado (FISCHER; MÜLLER; PISCHEL, 1996). Esta abordagem descentralizada é adequada para

este complexo cenário, já que a informação local é suficiente para uma distribuição de tarefas e

recursos globalmente eficiente. O modelo foi implementado e testado em cooperação com uma



82

empresa de transporte.

4.4.3 Sistema de Transporte Automático Global (GATS)

O sistema de transporte automatizado global (GATS) é um sistema de transporte integrado

sem a necessidade de motorista. Ele tem a capacidade de coordenar simultaneamente as neces-

sidades macro e micro das suas redes de transporte rodoviário. Seu objetivo futuro é que mi-

lhões de veículos possam ser conduzidos simultaneamente e automaticamente através de uma

região geográfica praticamente ilimitada, incluindo continentes inteiros, enquanto, ao mesmo

tempo, os requisitos de cada veículo e de seus passageiros tendam a ser atendidos em tempo

real (ZELINKOVSKY, 2011).

Resumindo a descrição do problema, existem unidades rodoviárias (RU) localizadas a dis-

tâncias fixas uma da outra e ligadas por um cabo de dados subterrâneo no centro da pista.

Enquanto o veículo se move, ele envia transmissões de rádio em intervalos regulares de tempo

para os RUs, que recebem estes sinais, os processam e respondem de volta para cada veículo,

que assim tem comunicação contínua com os RUs. Cada grupo contendo centenas de RUs

forma um Segmento, cujas funções são gerenciadas por um Controlador de Segmento, que é

responsável por “dirigir” os veículos que atravessam seu domínio. Em um nível mais acima,

um grupo de Controladores de Segmento adjacentes possui um Controlador superior, que por

sua vez é coordenado por um Controlador superior. Assim, isto continua hierárquicamente, sem

limite para o número de níveis ou para o tamanho do domínio geográfico do sistema.

Técnicas centralizadas tradicionais não conseguem modelar e implementar problemas deste

tipo, devido à seu tamanho e complexidade. Por outro lado, a arquitetura holônica se mostrou

apropriada, levando em conta a natureza descentralizada e modular do GATS e a necessidade

de um controle determinístico sobre ele. Foi utilizada a arquitetura holônica do HMS para or-

ganizar as entidades como holons, que são responsáveis pela resolução de cada subproblema

de escalonamento. Assim, um país pode ser um hólon (holon país). O conjunto de holons

país compõe uma holarquia (holon continente). Além disso, o holon país é composto por um

conjunto de holons (holon região). Cada holon região representa a sua própria rede com suas

próprias regras, políticas de tráfego, etc. No entanto, eles não representam problemas inde-

pendentes, uma vez que eles devem cooperar para conseguir uma solução global (VERSTEEGH;

SALIDO; GIRET, 2010).

Cada problema deve ser resolvido através de um solucionador do problema de satisfação

de restrições (CSP), que é mais adequado para problemas de escalonamento (vide Seção 3.5.3),

mas de uma forma distribuída, utilizando a cooperação para alcançar um solução global e subó-



83

tima. Portanto, ele não é tratado como um problema de otimização e é utilizada uma estratégia

de negociação. O solucionador de CSP é encapsulado no holon controlador, que é responsável

pela gestão do fluxo de tráfego ao longo do segmento sob seu controle. O principal benefí-

cio do gerenciamento distribuído do problema original, que é tratado como um problema de

restrições, é que ele pode ser dividido em um conjunto de subproblemas solúveis. Cada um

destes subproblemas deve ser resolvido simultaneamente para alcançar uma solução global em

um tempo aceitável. Entretanto, as técnicas tradicionais são ineficientes para a solução destes

subproblemas, que possuem milhares de variáveis e restrições. Desta forma, para vencer esta

dificuldade, foi utilizado o modelo distribuído baseado na idéia de sistemas holônicos, apresen-

tado em (SALIDO; GIRET, 2008), no qual o problema é particionado em subproblemas de acordo

com algumas regras definidas. Este trabalho será descrito no próximo capítulo, onde é tratado

o problema de restrições distribuídas.

Cada holon, que controla uma região ou um segmento de regiões, só tem informações sobre

o que acontece na área que controla. Este holon pode pedir informações sobre distâncias para

outros holons, mas nunca vai saber diretamente o que acontece em outras regiões. O algoritmo

proposto é escalável devido ao fato de que a arquitetura utiliza o mesmo algoritmo para cada

controlador em todos os níveis, todos os controladores determinam o caminho mais curto no

holon subordinado.

O modelo distribuído holônico do GATS possui alguns características a ser consideradas.

Assim, ele faz uma distribuição espacial dos holons, e trata todo o problema como um problema

de satisfação de restrições (CSP). Assim, ele pode, então, ser mais facilmente dividido em

um conjunto de subproblemas, que podem ser resolvidos simultaneamente para alcançar uma

solução global. Outra vantagem é que ele utiliza um mesmo algoritmo em todos os níveis de

forma recursiva. Entretanto, este modelo não trata o problema principal como um problema

de otimização, utilizando a cooperação entre os holons para alcançar um solução global apenas

subótima através de uma estratégia de negociação.

4.4.4 Sistemas Multiagentes Holônicos

Segundo (FISCHER; SCHILLO; SIEKMANN, 2003), embora similar no nome, existem várias

diferenças importantes entre os sistemas multiagentes holônicos e os sistemas de manufatura

holônicos:

• A modelagem da recursão do agente é parte integrante de sistemas multiagentes holô-

nicos. Espelhando a complexa composição de uma tarefa, os agentes holônicos pode



84

envolver-se em estruturas aninhadas complexas e com o número de níveis arbitrário. Este

não é o caso dos sistemas de manufatura holônicos;

• O HMS não fazem qualquer suposição sobre a arquitetura interna da cabeça de um hó-

lon, que é obrigado a agir como uma unidade de controle. Para sistemas multiagentes

holônicos, no entanto, o holon cabeça precisa possuir propriedades de agente;

• O holon cabeça de sistemas multiagentes holônicos não têm que coordenar o trabalho

de um recurso físico, mas sim o trabalho de vários agentes de informação que existem

apenas virtualmente (agentes de informação que colaboram para o aumento de eficiência,

combinar competências e recursos, etc.);

• Sistemas de manufatura holônica usam uma metáfora do mercado para projetar a coor-

denação interholon. A pesquisa em sistemas multiagentes holônicas se preocupa com a

escolha de parceiros de longo prazo, como também com a diversidade de possíveis estru-

turas organizacionais;

• Em um sistema multiagentes holônico, um holon não é meramente um pedaço de código.

É um conceito que é concretizado através de compromissos entre os agentes para manter

uma relação específica sobre as metas e tem como resultado uma estrutura emergente

entre agentes.

A arquitetura holônica proposta neste trabalho se adequa mais com o sistema multiagentes

holônico, possuindo holons com as propriedades de agentes. Assim, ela terá a modelagem da

recursão com o número de níveis arbitrário, o holon cabeça é um agente que coordena as ativida-

des dos outros subholons parceiros dentro do mesmo superholon, visando a meta da otimização

através dos compromissos entre eles. Como será visto mais a frente, esta relaçao específica

entre o holon cabeça e os subholons parte tem como resultado uma estrutura emergente entre

eles.

4.5 Conclusão

Existem várias vantagens no uso de uma abordagem distribuída e holônica e os agentes

representam bem este comportamento distribuído da cadeia de suprimentos. Desta forma, per-

mitem maior flexibilidade quando se considera a modularidade do sistema real a ser modelado,

e levam naturalmente à adoção de algoritmos locais apropriados, que levam em conta as espe-

cificidades locais do problema. Além disso, a concorrência permite um certo nível de parale-

lismo, que pode acelerar o processo de solução do problema total. Finalmente, uma solução



85

centralizada pode ser impossível, considerando que sistemas e dados podem estar separados ge-

ograficamente e pertencer a áreas diferentes, embora dentro da mesma organização. O problema

total é grande e complexo, o que significa que resolver tal problema centralizadamente leva a

modelos monolíticos extensos de grande complexidade. Além disso, os problemas locais de

cada agente são resolvidos de forma mais adequada no local do agente, onde informações deta-

lhadas estão prontamente disponíveis. Como já mencionado anteriormente, o modelo proposto

neste trabalho não é estocático, e, portanto, não trata das incertezas. Entretanto, sua natureza

distribuída ajuda a compensar, em parte, esta deficiência, como será discutido mais adiante.

A visão holônica torna possível representar a natureza recursiva intrínsica do problema de

planejamento integrado da cadeia de suprimentos. Em contraste com hierarquias tradicionais,

o poder de decisão dos níveis organizacionais mais baixos é levado em conta nas holarquias.

Outra vantagem é a possibilidade de mapear o domínio do problema diretamente em um sistema

multiagente através da “agentificação” de entidades em qualquer nível de granularidade, e sem

perder abstrações de mais alto nível. Esta organização holônica fará parte do problema geral

que será definido e utilizado em seguida no problema de planejamento integrado tratado neste

trabalho.

Por outro lado, o modelo em rede de restrições pode permitir uma integração consistente

das entidades principais da cadeia, que se espalham no espaço e no tempo, e também a otimiza-

ção global. Além disso, como o problema em foco apresenta uma série de restrições diferentes,

inclusive não-lineares, a abordagem mais recomendável é tratá-lo como um problema de res-

trições distríbuídas com otimização. Por este motivo, as definições e conceitos das restrições

distribuídas serão apresentadas no próximo capítulo, e suas características discutidas.



86

5 Problema de Satisfação de Restrições

Distribuídas com Otimização (DCOP)

5.1 Introdução

O problema básico de restrições distribuídas é o Problema de Satisfação de Restrições Dis-

tribuído (DisCSP), que foi formalizado por Yokoo et al. em (YOKOO et al., 1992). Nos últimos

anos, foi visto um interesse crescente em formulações de problemas de satisfação de restrições

distribuições (DisCSP) para modelar problemas combinatórios. Há um conjunto significativo

de aplicações distribuídas do mundo real, tais como sistemas de rede, planejamento, escalona-

mento, alocação de recursos, etc, para o qual o paradigma DisCSP é particularmente útil. Em

tais aplicações distribuídas, questões de privacidade, custos de transferência de conhecimento,

robustez contra falhas, etc, impedem a adoção de uma abordagem centralizada (FALTINGS; YO-

KOO, 2005).

Aqui o problema é dividido entre uma série de agentes independentes e restrições distribuí-

das, que têm de se comunicar um com o outro para solucioná-lo. Estes agentes não podem

acessar diretamente as variáveis de outros agentes, e devem trocar mensagens entre si. Cada

agente mantém sua rede de restrições locais, que conectam variáveis associadas a agentes di-

ferentes. Os agentes atribuem valores a variáveis tentando gerar uma atribuição localmente

consistente e que seja ao mesmo tempo consistente com todas as restrições entre agentes (YO-

KOO, 2001). Entretanto, o problema de planejamento tratado neste trabalho é um problema de

otimização. Portanto, dentro do ponto de vista distribuído e de restrições, o modelo adequado

é o Problema de Satisfação de Restrições Distribuído com Otimização (Distributed Constraint

Optimization Problems) ou DCOP (MODI et al., 2003).

Diferentemente do CSP, as restrições violadas do DCOP podem ser toleradas, mas a qua-

lidade da solução será otimizada de acordo com critérios bem definidos. Para entender melhor

o que é um DCOP, o problema centralizado mais próximo é denominado Problema de Satisfa-

ção de Restrições Valorado (VCSP) (SHIEX; FARGIER; VERFAILLIE, 1995). Nele cada restrição



87

possui um nível de satisfação associado, além de um peso, de forma que o peso representa a im-

portância da restrição, enquanto o nível de satisfação representa o quanto a restrição está sendo

satisfeita. Com outras palavras, o DCOP generaliza o DisCSP, de forma que ao invés de sim-

plesmente designar soluções como “satisfatórias” ou “insatisfatórias”, passa a considerar todas

as restrições como funções valoradas, e a função de avaliação global como o somatório de todas

as restrições do problema (MODI et al., 2003). Esta função de avaliação, tal como aquela definida

para o VCSP, representa o grau de utilidade ou custo de cada atribuição considerada. Assim, o

DCOP inclui um conjunto de variáveis, cada variável é associada a um agente que tem controle

sobre seu valor, e os agentes devem coordenar suas escolhas de valores de forma a otimizar uma

função de avaliação global, obtida como um somatório de cada restrição local, sendo que cada

agente conhece apenas as restrições locais nas quais suas variáveis estão envolvidas. Tal como

um CSOP (vide 3.5.3) , um DCOP também é um problema NP-completo.

5.2 Formalização do Problema de Satisfação de Restrições

Distribuído com Otimização (DCOP)

De acordo com (MODI et al., 2003):

Definição 6 Um Problema de Satisfação de Restrições Distribuído com Otimização (DCOP)

pode ser definido pela tupla (A, V, D, F) onde:

• A = {a1, . . . , an} é um conjunto de n agentes,

• V = {v1, . . . , vn} é um conjunto de n variáveis, uma por agente,

• D = {D1, . . . , Dn} é um conjunto de domínios finitos e discretos, cada um associado a

uma variável,

• F = {..., fi j, ...} é um conjunto de restrições valoradas fi j para cada par de variáveis

vi, vj ? V , onde fi j : Di ×Dj ? N?{?}e Di, Dj ? D

A meta é encontrar uma instanciação completa V ? para todas as variáveis vi que minimize

a função objetivo definida como

FO =
?

vi,vj?V

fi j(vi, vj)

As funções de utilidade do DCOP correspondem às restrições do CSP, e são denominadas



88

restrições valoradas. Por conveniência, daqui por diante elas serão denominadas simplesmente

restrições.

Os pressupostos respeitados no DCOP são os seguintes:

• uma variável por agente;

• intervalo de tempo aleatório mas finito entre envio e recepção de mensagem;

• manutenção da ordem de envio das mensagens na sua recepção;

• restrições binárias (aridade 2);

• as propriedades do operador de soma utilizado nas utilidades agregadas das componentes

das restrições impõem algumas limitações sobre o tipo de funções objetivo que podem

ser representadas. Segundo (MODI et al., 2003), os operadores de agregação devem ser

associativos, comutativos e monotônicos. Esta classe de funções de otimização é descrita

formalmente para VCSP em (SHIEX; FARGIER; VERFAILLIE, 1995);

• exceto as limitações anteriores, não existem outras imposições sobre o tipo de função de

restrição utilizada, que pode ser, em princípio, não-linear.

5.3 Generalização do DCOP para Problemas Locais Com-

plexos

De acordo com (BURKE, 2008) uma característica do DCOP com problemas locais com-

plexos é que cada agente tem muitas variáveis públicas (variáveis compartilhadas com outros

agentes), que levam a um espaço de busca distribuído extremamente grande, impondo desafios

significativos para algoritmos DCOP existentes. A Fig. 13 ilustra um exemplo de um DCOP

para problemas locais complexos com 4 agentes, cada um com 4 variáveis. As variáveis hachu-

radas representam as varíaveis públicas, aparecem dentro do agente que as controla e podem

ser mais de uma por agente. Quanto às variáveis brancas, elas representam variáveis locais, que

são opcionais, mas podem ser várias por agente.

Definição 7 Um DCOP com Problemas Locais Complexos pode ser definido por uma tupla

(A, V, D, F) onde:

• A = {a1, . . . , an} é um conjunto de n agentes,



89

Figure 13: Exemplo de um Problema com 4 Agentes, cada um com 4 Variáveis

• para cada agente ai, um conjunto Vi = {vi 1, . . . , vi mi} de variáveis que ele controla, tal

que ?i 6= j Vi ? Vj = ?; V = ?Vi é o conjunto de todas as variáveis no problema. Elas

podem ser classificadas em 2 categorias:

– variável local, que é opcional e só participa de restrições internas do agente corres-

pondente (restrições intra-agentes) ;

– variável pública, que é obrigatória e participa de restrições entre 2 ou mais agentes

(restrições inter-agentes) ou de restrições internas do agente correspondente (restri-

ções intra-agentes) ;

Podem existir várias variáveis por agente em relação a ambos os tipos de variável.

• D = {..., Di j, . . .} é um conjunto de domínios finitos e discretos, onde cada Di j está

associado à variável correspondente vi j,

• F = {f1, . . . , fi, ...fw} é um conjunto de restrições valoradas, onde cada restrição é uma

função fi : ...×Dj l ×Dk m × . . . ? N?{?}. O conjunto de variáveis deste domínio é

um subconjunto SV = {..., vj l, vk m, ...}? V , que pode ser um dos 2 casos seguintes:

– restrições intra-agentes, onde SV é formada por variáveis locais e públicas perten-

centes a um mesmo agente aj, i.e., j = k;

– restrições inter-agentes, onde SV é formada por variáveis públicas pertencentes a

2 ou mais agentes (j 6= k), mas pode conter variáveis públicas pertencentes a um

mesmo agente (j = k);



90

A meta é encontrar uma instanciação completa V ? para todas as variáveis vj l que otimize (max-

imize ou minimize) a função objetivo definida como

FO =
?

i

fi(..., vj l, ...)

5.4 Algoritmos para DCOP

Vários algoritmos distribuídos baseados em busca para solucionar DCOP têm sido propos-

tos na literatura, e muitos deles compartilham uma série de características comuns. Embora

haja um certo número de modelos de execução possíveis (BRITO; HERRERO; MESEGUER, 2004),

na maioria dos casos, cada agente irá executar repetidamente três tarefas principais, como parte

de um ciclo único de computação:

1. ler as mensagens recebidas de outros agentes;

2. executar alguma computação;

3. enviar mensagens para outros agentes.

Utilizando um ciclo como um bloco de construção básico, (BRITO; HERRERO; MESEGUER,

2004) amplamente categorizam algoritmos de restrições distribuídos de acordo com três dife-

rentes modelos de tempo propostos por (LYNCH, 1996):

1. síncrono - os ciclos de todos os agentes são executadas simultaneamente, e em alguns

casos, apenas um agente ativo é computacionalmente ativo em qualquer momento, ou

seja, os algoritmos síncronos exigem as ações dos agentes para serem executados de uma

maneira controlada e determinística;

2. assíncrona - os ciclos de todos os agentes são executados em paralelo em uma ordem

arbitrária, e têm tempos de início e durações arbitrárias, ou seja, nenhuma restrição ou

premissa é colocada na agenda de atividades dos agentes em algoritmos assíncronos;

3. parcialmente síncrono - os ciclos de todos os agentes são controlados, mas não tão estri-

tamente como no modelo síncrono, isto é, algoritmos parcialmente síncronos exigem que

os agentes realizem determinadas ações em uma ordem específica, enquanto que outras

ações podem ser executadas em uma ordem arbitrária.

A Tab. 2 mostra 3 algoritmos escolhidos devido a sua importância na comunidade de pesquisa

da área, e que representam diferentes modelos. Assim, ADOPT se caracteriza por ser assín-



91

algoritmo Ano de Criação Complexidade Espacial Número de Mensagens Correto/Completo Implementações

ADOPT 2003 Polinomial Exponencial Correto/Completo FRODO; DCOPolis

OptAPO 2004 Polinomial Exponencial Só Correto DCOPolis

DPOP 2005 Exponencial Linear Correto/Completo FRODO; DCOPolis

Tabela 2: Algoritmos para DCOP

crono, enquanto DPOP é baseado na programação dinâmica. Já OptAPO é um híbrido entre

métodos descentralizados e centralizados. De acordo com (TSANG, 1993), um algoritmo é cor-

reto se todo o resultado produzido por ele é de fato uma solução. Por outro lado, um algoritmo

é completo se toda solução pode ser encontrada por ele. Assim, pela definição anterior para um

DCOP, sua solução é sempre ótima. Portanto, um algoritmo completo para ele é aquele que tem

a garantia de encontrar uma solução ótima.

A seguir cada um deles é descrito de forma resumida.

ADOPT (Asynchronous Distributed Optimization) Em (MODI et al., 2003) o ADOPT

(Asynchronous Distributed Optimization) foi apresentado como um algoritmo capaz de encon-

trar soluções ótimas usando apenas comunicação assíncrona localizada e com complexidade

espacial polinomial em cada agente.

Inicialmente, ADOPT organiza agentes em uma busca em profundidade (DFS) da árvore,

em que as restrições são permitidas entre uma variável (agente) e qualquer um de seus ascen-

dentes ou descendentes, mas não entre as variáveis pertencentes a sub-árvores diferentes. Em

seguida ele usa quatro tipos de mensagens: VALUE, COST, THRESHOLD e TERMINATE. A

mensagem VALOR comunica a atribuição de uma variável a partir de ancestrais para os des-

cendentes que compartilham restrições com o remetente. Quando o algoritmo começa, cada

agente recebe um valor aleatório para sua variável e envia mensagens de valor apropriado. Uma

mensagem COST contém três parâmetros: context, lb e ub. O context é uma solução parcial,

e o CurrentContext é um context que apresenta a visão da variável em foco sobre as variáveis

ascendentes. Os valores lb e ub representam os limites inferior e superior, respectivamente, da

estimativa do custo da sub-árvore correspondente. Quando um nó xi recebe uma mensagem

COST do seu filho xl, ele guarda o parâmetro lb indexado pelo valor d atual da sua variável

xi como lb(d, xl). Da mesma forma, o parâmetro ub é armazenado como ub(d, xl) e o context

como context(d, xl). Neste momento ele adiciona lb(d, xl) ao seu custo local para obter o limi-

tante inferior associado ao valor d, que é denotado por LB(d), e do mesmo modo ele adiciona

lb(d, xl) ao seu custo local para obter o limitante superior UB(d) associado ao valor d. O limi-

tante inferior mínimo sobre todo o domínio de xi é chamado LB, enquanto o limitante superior



92

mínimo sobre todo o domínio de xi é chamado UB, ambos associados à variável xi.

A mensagem THRESHOLD é introduzida para melhorar a eficiência da busca. Um agente

tenta atribuir o seu valor, de modo que o custo estimado é menor que o limite indicado, que é

comunicado pela mensagem THRESHOLD de seu pai. Quando o valor threshold é igual a UB,

ele envia a mensagem TERMINATE ao seu filho e termina sua execução. Assim. os outros

agentes terminam de forma similar, até o fim completo do algoritmo.

O ADOPT usa busca best-first, i.e., uma estratégia oportunista onde cada agente escolhe o

melhor valor baseado na informação atual disponível. Além disso, possui operação assíncrona,

comunicação ponto-a-ponto entre agentes vizinhos no grafo de restrições e a árvore de restrições

como a principal topologia de comunicação. O ADOPT é apresentado nos Algoritmos 5.1, 5.2

e 5.3 (vide (MODI et al., 2005) para mais detalhes). Ele é comprovadamente correto e completo,

e sua prova está no Anexo A.

OptAPO (Optimal Asynchronous Partial Overlay) É um híbrido entre métodos descen-

tralizados e centralizados (MAILLER; LESSER, 2004). Ele opera como um processo de mediação

cooperativa, onde agentes designados como mediadores centralizam partes do problema em

sessões de mediação dinâmica e assíncrona. A complexidade das menssagens é significativa-

mente menor que a do ADOPT. Entretanto, ele pode ser ineficiente com alguns mediadores

solucionando problemas com interseção. Além disso, a natureza dinâmica das sessões de me-

diação tornam impossível prever que parte do problema será centralizada. Existe a prova de

que ele é correto, mas não de que seja completo (GRINSHPOUN et al., 2007). Por esta razão este

algoritmo não foi escolhido para ser utilizado neste trabalho.

DPOP (Distributed Pseudotree Optimization Procedure) É um algoritmo baseado em

programação dinâmica (PETCU; FALTINGS, 2005) como uma evolução do algoritmo DTREE

(Distributed Tree-Optimization) (PETCU; FALTINGS, 2004) para problemas de topologia arbi-

trária, mesmo com grafos cíclicos. Ele gera somente um número linear de mensagens, que,

entretanto, podem ter tamanho grande e exigir grandes quantidades de memória, até de forma

exponencial no espaço. Por esta razão ele foi estendido mais tarde, e um novo algoritmo híbrido

chanado PC-DPOP foi desenvolvido (PETCU; FALTINGS; MAILLER, 2007), que usa um tamanho

de mensagem limitado, e, consequentemente, o espaço de memória pode ser controlado.

No algoritmo DTREE, que é a forma original, existem um conjunto X de variáveis e um

conjunto A de agentes, onde cada agente Ai é responsável pela atribuição de uma variável Xi. O

gráfico de restrições é considerado na forma de árvore. Além disso, no protocolo que se segue,



93

Algorithm 5.1 ADOPT - Principal

1: Inicializar

2: threshold ? 0
3: CurrentContext ?{}
4: for all d ? Di, xl ? Filhos do
5: lb(d, xl) ? 0
6: t(d, xl) ? 0
7: ub(d, xl) ??
8: context(d, xl) ?{}
9: end for

10: di ? argmind(LB(d))
11: backTrack
12: return

13:

14:

15:

16:

17: backTrack

18: if threshold == UB then
19: di ? argmind(UB(d))
20: else if LB(di) &gt; threshold then
21: di ? argmind(LB(d))
22: end if

23: envia VALUE_msg((xi, di)) para cada Vizinho de menor prioridade
24: mantemAlocaçãoInvariante
25: if threshold == UB then
26: if TERMINATE recebido do Pai ou xi é Raiz then
27: envia TERMINATE_msg(CurrentContext? (xi, di)) para cada Filho
28: return

29: end if

30: end if

31: envia COST_msg(xi, CurrentContext, LB, UB) para o Pai
32: return

33:

34:

35:



94

Algorithm 5.2 ADOPT - Tratamento das Mensagens

1: THRESHOLD_msg_tratamento(t, context)
2: if context compatível com CurrentContext then
3: threshold ? t
4: mantemThresholdInvariante
5: backTrack
6: end if

7: return

8:

9: TERMINATE_msg_tratamento(context)
10: registrado Termino recebido do Pai
11: CurrentContext ? context
12: backTrack
13: return

14:

15: VALUE_msg_tratamento((xj, dj))
16: if Termino não recebido do Pai then
17: adicionar(xj, dj) a CurrentContext
18: for all d ? Di, xl ? Filhos do
19: if context(d, xl) incompatível com CurrentContext then
20: lb(d, xl) ? 0; t(d, xl) ? 0
21: ub(d, xl) ??; context(d, xl) ?{}
22: end if

23: end for

24: mantemThresholdInvariante
25: backTrack
26: end if

27: return

28:

29: COST_msg_tratamento(xk, context, lb, ub)
30: d ? valor de xi em context
31: remove (xi, d) de context
32: if TERMINATE não recebido do Pai then
33: for all (xj, dj) ? context e xj não é meu Vizinho do
34: adicionar(xj, dj) a CurrentContext
35: end for

36: for all d? ? Di, xl ? Filhos do
37: if context(d?, xl) incompatível com CurrentContext then
38: lb(d’, xl) ? 0; t(d’, xl) ? 0
39: ub(d’, xl) ??; context(d

?, xl) ?{}
40: end if

41: end for

42: end if

43: if context compatível com CurrentContext then
44: lb(d, xk) ? lb; ub(d, xk) ? ub
45: context(d, xk) ? context
46: mantemFilhoThresholdInvariante
47: mantemThresholdInvariante
48: end if

49: backTrack
50: return



95

Algorithm 5.3 ADOPT - Manutenção das Invariâncias

1: mantemThresholdInvariante

2: if threshold &amp;lt;LB then

3: threshold ? LB
4: end if

5: if threshold &gt; UB then

6: threshold ? UB
7: end if

8: return

9:

10: mantemAlocaçãoInvariante

11: while threshold &gt; ?(di) +
?

xl?Filhos
t(di, xl) do

12: escolha xl ? Filhos onde ub(di, xl) &gt; t(di, xl)
13: incrementar t(di, xl)
14: end while

15: while threshold &amp;lt;?(di) +
?

xl?Filhos
t(di, xl) do

16: escolha xl ? Filhos onde t(di, xl) &gt;lb(di, xl)
17: decrementar t(di, xl)
18: end while

19: enviar THRESHOLD_msg(t(di, xl), CurrentContext) para cada Filho xl
20: return

21:

22: mantemFilhoThresholdInvariante

23: for all d ? Di, xl ? Filhos do
24: while lb(d, xl) &gt; t(d, xl) do
25: incrementar t(d, xl)
26: end while

27: end for

28: for all d ? Di, xl ? Filhos do
29: while t(d, xl) &gt; ub(d, xl) do
30: decrementar t(d, xl)
31: end while

32: end for

33: return



96

cada agente (ou nó do grafo) é chamado de Xi por conveniência. Cada agente Xi executa o

Algoritmo 5.4, que é dividido em 3 fases:

Fase 1 - Inicialização É feito um percurso da árvore DFS, onde todos os agentes Xi

declaram seus domínios Dom(Xi) para os agentes envolvidos, que são seus agentes Pai e Filhos

correspondentes. Estes últimos são definidos pelas relações Ri, com a suposição de restrições

binárias, ou restrições unárias para um único agente. Durante o algoritmo, um agente se comu-

nica apenas com seus vizinhos (Pai e Filhos).

Fase 2 - Propagação de UTIL Cada agente determina se ele é uma folha na árvore de

restrições (se ele não tiver nenhum Filho) ou não. Os nós folha iniciam o processo, e se Xi é um

nó folha, então ele envia a mensagem UTIL ao seu Pai. Este processo é de baixo para cima, se

inicia nos nós folha e termina na raiz da árvore. Os agentes mandam para seu nó pai mensagens

UTIL, que contêm a utilidade ótima obtida na subárvore associada. As mensagens passadas

neste sistema são vetores de utilidade. Um agente Xi envia a seu Pai Xj um vetor de todas as

utilidades ótimas que podem ser alcançadas pela subárvore enraizada em Xj, que contém Xi,

para cada um dos possíveis valores de Xj. Assim, o tamanho de cada mensagem é | dom(Xj) |.

Fase 3 - Propagação de VALUE Eventualmente o nó raiz é capaz de obter o valor ótimo

para si, como o valor que maximiza a soma das utilidades de todas as subárvores enraizadas em

si mesmo, e de quaisquer restrições unárias associadas, se for o caso. É um processo de cima

para baixo, iniciado no nó raiz. Cada nó Xi determina seu valor ótimo baseado na mensagem

VALUE recebida do seu nó pai e nas utilidades recebidas através das mensagens da fase 2. En-

tão ele envia este valor para seu nó filho também através da mensagem VALUE. O algoritmo é

finalmente terminado quando Xi considerado for um nó folha (não tiver Filhos).

Este algoritmo é mostrado com mais detalhes em (PETCU; FALTINGS, 2004). Ele é compro-

vadamente correto e completo, e sua prova esta no Anexo B.

5.5 Protocolo de Mensagens

Neste trabalho serão utilizados apenas os algoritmos ADOPT e DPOP, que são corretos e

completos. Nesta tese não foi considerada a privacidade dos algoritmos de solução de DCOP.



97

Algorithm 5.4 DTREE

1: DTREE(A, X, D, R)
2: Fase 1: Inicialização(Xi, Ri)
3: Ri ?o conjunto de restrições de Xi
4: Pai(Xi) ? o pai de Xi (baseado em Ri)
5: Filhos(Xi) ? os filhos de Xi (baseado em Ri)
6: for all Xk ? Filhos(Xi) do
7: envia Dom(Xi) para Xk
8: end for

9: recebe e registra Dom(Pai(Xi)) do seu pai
10: Fase 2: Propagação da mensagem UTIL

11: if | Filhos(Xi) |== 0 then
12: {Xi é um nó folha}
13: utilsXi(Pai(Xi)) ? Computa_utils(Pai(Xi))
14: envia UTIL_msg(utilsXi(Pai(Xi))) para seu pai
15: end if

16: ativa o tratamento da mensagem UTIL
17: Fase 3: Propagação da mensagem VALUE

18: ativa o tratamento da mensagem VALUE
19: return

20:

21: UTIL_msg_tratamento(utilsXk(Xi)){recebida do seu filho Xk}
22: guarde utilsXk(Xi)
23: if mensagens UTIL de todos os Filhos(Xi) chegaram then
24: if Pai(Xi) == nulo then
25: {Isto significa que Xi é a raiz}
26: v?i ? argmaxvi(

?

Xl?Filhos(Xi)
UTILXl(Xi = vi))

27: Xi ? v
?
i

28: envia VALUE_msg(Xi, v
?
i ) para todos os Filhos(Xi)

29: else

30: utilsXi(Pai(Xi)) ? Computa_utils(Pai(Xi))
31: envia UTIL_msg(utilsXi(Pai(Xi))) para seu pai
32: end if

33: end if

34: return

35:

36: VALUE_msg_tratamento(Xk, value){recebida do seu pai}
37: v?i ? ProjecaoXi(UTILXi(Xk = value))
38: Xi ? v

?
i

39: envia VALUE_msg(Xi, v
?
i ) para todos os Filhos(Xi)

40: return

41:

42: Computa_utils(Xj)
43: for all xj ? Dom(Xj) do
44: for all xi ? Dom(Xi) do
45: x?i (xj) ? argmaxxi(UtilsXj (xi, xj))
46: end for

47: end for

48: return

49: {um vetor utilsXi(Xj) de todos {UtilsXj (x
?
i (xj), xj) | xj ? Dom(Xj)}}



98

Entretanto, existem trabalhos dedicados a este assunto, como por exemplo (GREENSTADT; PE-

ARCE; TAMBE, 2006), que apresenta uma pesquisa importante sobre alguns algoritmos princi-

pais, incluindo ADOPT e DPOP, mostrando que ambos podem manter a privacidade das infor-

mações sem perda de desempenho.

Independentemente do modelo de execução, ambos os algoritmos priorizam os agentes do

problema antes de começar o processo de busca da solução. Isto é fundamental para definir

uma ordem entre os agentes de modo que um algoritmo geral possa funcionar. Em alguns

algoritmos para DCOP, os agentes são priorizados em uma cadeia, ao passo que tanto ADOPT

quanto DPOP, priorizam os agentes em uma árvore de busca em profundidade (DFS) em um

ambiente descentralizado. A priorização dos agentes em uma árvore DFS tem a propriedade de

que quaisquer par de agentes vizinhos aparecem no mesmo ramo da árvore, i.e., para qualquer

agente ai em uma ordenação em árvore DFS, as restrições são apenas permitidas entre ai e seus

ascendentes ou descendentes.

Esta estrutura de priorização, combinada com um protocolo de mensagens definido no al-

goritmo, determina as mensagens que são enviadas entre os agentes. Enquanto o número de

mensagens trocadas varia, a maioria dos algoritmos possui pelo menos 2 tipos de mensagens:

• VALUE: representa o valor de atribuição corrente de uma certa variável;

• COST ou UTIL: representa o valor de otimizado corrente em relação a todas as variáveis

pertencentes a uma certa subárvore.

As mensagens VALUE são enviadas dos agentes de maior prioridade para os de menor priori-

dade, enquanto as mensagens COST (UTIL) são enviadas a partir dos agentes de menor priori-

dade para os de maior prioridade. As mensagens VALUE normalmente especificam a atribuição

atual do agente de envio (e, por vezes, as atribuições de outros agentes de maior prioridade). As

mensagens COST (UTIL) normalmente especificam um custo incorrido pelo agente de envio e

todos os agentes de menor prioridade. A Fig. 14 ilustra o protocolo de um algoritmo genérico

para DCOP.

No quadro definido pelo protocolo de mensagens, os agentes sistematicamente propõem

atribuições de valores e registram os custos (ou utilidades), explorando o espaço de busca de

atribuições possíveis. Isso continua até que o algoritmo encontra uma atribuição global ótima.



99

Figura 14: Fluxo de Mensagens de um Algoritmo Genérico p/ DCOP

5.6 Ferramentas para DCOP

Existem poucos frameworks disponíveis para implementar e testar algoritmos para DCOP:

FRODO (LEAUTE; OTTENS; SZYMANEK, 2009), DisChoco (EZZAHIR et al., 2007), DCOPolis

(SULTANIK; LASS; REGLI, 2007) e AgentZero (LUTATI; GONTMAKHER; LANDO, 2012). A im-

portância de uma ferramenta deste tipo advem da necessidade dos pesquisadores de DCOP

desenvolverem novos algoritmos, e compararem seu desempenho com outros algoritmos exis-

tentes. Um aspecto importante para uma ferramenta é ser uma plataforma de código aberto, pois

isto é essencial para integrar e testar novas ideias sem ter a obrigação de reimplementar do zero

um solucionador sob medida. Além disso, a ferramenta deveria ter as seguintes características:

• ser confiável e modular, de forma a poder facilmente personalizar e estender;

• permitir a simulação de sistemas multiagentes em uma única máquina;

• possuir um conjunto importante de algoritmos implementados embutidos ;

• ter uma interface gráfica para representar o grafo de restrições;

FRODO (FRamework for Open/Distributed constraint Optimization) é um framework aberto

em Java para otimização distribuída combinatorial e foi desenvolvido pelo Artificial Intelli-

gence Laboratory (LIA) da Ecole Polytechnique Federale de Lausanne (EPFL), Suíça (LEAUTE;

OTTENS; SZYMANEK, 2009). Ele utiliza o JDOM para tratar arquivos XML (Extensible Markup

Language) (W3C, 2012). Assim, embora seja possível usar objetos Java diretamente no FRODO

para criar dados de instâncias, este framework aceita arquivos XML em um formato que é um



100

superset do XCSP 2.1 (XML Representation of Constraint Networks 2.1) (ROUSSE; LECOUTRE,

2009), que foi projetado apenas para CSPs centralizados, de forma a representar também ins-

tâncias de DCOPs. Isto é apresentado com mais detalhe na próxima seção. Finalmente, ele é

integrado com um solucionador centralizado de CSP, que é o JaCoP (Java Constraint Program-

ming solver) (KUCHCINSKI; SZYMANEK, 2012). Tanto o FRODO quanto as outras ferramentas

são frameworks de código aberto em Java, possuindo algumas características em comum. Entre-

tanto, o FRODO apresenta um conjunto maior de algoritmos prontos. Em particular, ele possui

tanto o ADOPT quanto o DPOP embutidos, que foram utilizados neste trabalho. Devido a este

motivo e outros que serão apresentados mais adiante na Seção 8.2, o FRODO foi a ferramenta

escolhida.

5.7 Representação XML de Instâncias de DCOP

Originalmente foi criada uma representação XML (Extensible Markup Language ) das ins-

tâncias do Problema de Satisfação de Restrições (CSP). O objetivo desta representação XML,

denominada XCSP, foi facilitar o teste e comparação entre diferentes algoritmos para a solução

de CSP, provendo uma plataforma comum de testes de instâncias CSP. Mais precisamente, para

cada instância domínios, variáveis, relações, predicados e restrições são exaustivamente defi-

nidos. Mais tarde este formato foi estendido através da versão XCSP 2.1, com melhorias na

leitura, conteúdo e estruturação (ROUSSE; LECOUTRE, 2009).

Como o formato XCSP foi projetado para CSPs centralizados, e não problemas distribuídos

de otimização, foram necessárias algumas outras extensões sobre o formato XCSP 2.1 para

descrever instâncias DCOPs, de forma a representar os agentes, que variáveis pertencem a que

agente, e se o problema é de maximização ou minimização, por exemplo. O formato resultante

foi especificado no projeto da ferramenta FRODO, que foi utilizado neste trabalho, como foi

dito na seção anterior. Ele é um superconjunto do XDisCSP 1.0, criado para os problemas de

restrições distribuídos, mas sem otimização (DisCSP). O Anexo C apresenta as representações

de instâncias do DCOP e do HCOP, apresentado no Capítulo, através de XML.

5.8 Trabalhos Relacionados

Segundo Yokoo, em geral se supõe que cada agente tem apenas uma variável local. Em-

bora os algoritmos desenvolvidos possam ser aplicados ao caso em que um agente tem várias

variáveis locais através de dois métodos, ambos os métodos não são nem eficientes nem es-



101

caláveis para problemas grandes.(YOKOO; HIRAYAMA, 2000). Estes dois métodos gerais são

denominados: (i) Decomposição; (ii) Compilação. Eles têm sido tradicionalmente usados para

gerenciar diversas variáveis por agente. Entretanto, ambos têm sérias desvantagens que os tor-

nam ineficazes para resolver problemas reais diretamente. Estes métodos serão descritos com

mais detalhes mais a frente na Seção 6.4 do Capítulo 6. Enquanto a maioria dos algoritmos

distribuídos gerencia apenas uma variável por agente, não existem algoritmos específicos para

resolver problemas distribuídos do mundo real de uma forma eficiente. Muitos problemas reais

são distribuídos por sua própria natureza, mas essa distribuição não implica uma única variável

por agente. Apenas alguns trabalhos incluem um conjunto de variáveis em um agente único

(SILAGHI; FALTINGS, 2005) (SALIDO; BARBER, 2006) (EZZAHIR et al., 2007). No entanto, poucos

trabalhos se dedicaram a técnicas distribuídas para resolver problemas de grande escala (YOKOO

et al., 1998) (SALIDO; GIRET, 2008) (BURKE, 2008). Os dois últimos consideram aplicações em

problemas reais, e por isso, são descritos a seguir.

Em (SALIDO; GIRET, 2008) foi apresentado um modelo distribuído geral para a resolução

de problemas de escalonamento da vida real, utilizando DisCSP. Este modelo distribuído é ba-

seado na idéia de sistemas holônicos. Neste trabalho, questiona-se a suposição comum feita na

literatura sobre DisCSP, em que cada agente tem que cuidar de apenas uma única variável. Mui-

tos problemas reais podem ser modelados como um CSP, como foi visto na Seção 3.5.3, mas

eles não podem ser resolvidos usando técnicas DisCSP devido à enorme quantidade de mensa-

gens. Além disso, a maioria destes problemas são muito complexos e as técnicas tradicionais

de solução distribuída não são apropriadas.

Por outro lado, enquanto algoritmos distribuídos são projetados apenas para resolver pro-

blemas distribuídos, muitos problemas reais e centralizados podem ser modelados como um

DisCSP e podem ser resolvidos de forma mais eficiente utilizando técnicas de busca distribuí-

das. Normalmente, os problemas reais envolvem modelos com um grande número de variáveis

e restrições, levam a redes densas de inter-relações. Problemas deste tipo podem ser tratados

como um todo apenas com um custo computacional muito alto. Assim, foi concluído que é van-

tajoso decompor / particionar o problema em vários subproblemas mais simples interligados,

que podem ser mais facilmente resolvidos.

Por isso, foi desenvolvido um modelo distribuído para problemas de grande escala, prin-

cipalmente relacionados com escalonamento. São apresentadas diferentes alternativas, que são

baseadas em um conjunto de orientações para a distribuição destes problemas. O modelo geral

é baseado em um sistema multiagentes holônico, sendo que cada agente está comprometido

com multiplas variáveis e restrições locais. Ele é um modelo síncrono que utiliza a interação



102

e a cooperação entre os agentes holônicos. Sua idéia básica se originou em (SALIDO; GIRET;

BARBER, 2003), no qual o problema é dividido em um conjunto de subproblemas, que, em se-

guida, são classificados na ordem adequada e são resolvidos concorrentemente dependendo da

sua estrutura interna.

Foram propostas algumas diretrizes para a distribuição e a resolução de problemas comple-

xos, que fazem parte do processo de modelagem. Elas estão relacionadas a algumas questões

de modelagem importantes, como por exemplo: O problema é distribuído por natureza ? A

estrutura do problema é hierárquica ? É necessária uma autoridade central ? Assim, a resposta

para cada uma destas perguntas leva às seguintes diretrizes:

• O número de subproblemas (agentes), que deve estar em concordância com o tamanho do

problema;

• A ordem em que cada subproblema é solucionado (prioridade do agente). Às vezes, todos

os subproblemas podem ser solucionados simultaneamente. Em muitos outros casos, os

subproblemas são priorizados através de uma heurística selecionada;

• O gerenciamento do retrocesso (backtracking). Quando um agente não encontra uma

solução parcial, deve comunicar o seu estado atual para os agentes vizinhos relacionados,

de forma a evitar uma busca desnecessária;

• A necessidade de uma autoridade central. Dependendo das características do problema,

um controlador central pode ou não ser necessário. Alguns problemas são hierárquicos

por natureza, como por exemplo quem apresenta características holônicas. Neste caso,

aparecem diferentes níveis de abstração.

Portanto, o modelo distribuído não é completamente determinado, pois depende das característi-

cas do problema considerado, que pode pertencer a uma classe bastante genérica de problemas.

Da mesma forma, o próprio método de solução tem que se adequar a estas características de

cada caso.

Em (BURKE et al., 2007) o problema de Coordenação da Cadeia de Suprimentos (SCC)

é apresentado como um novo problema de referência adequado para ser modelado e resolvido

usando DCOP. Uma das contribuições deste trabalho é justamente propor a solução do problema

SCC como um DCOP. SCC envolve o planejamento e a coordenação do escalonamento da

produção e da entrega entre as várias unidades de negócios (agentes), que são naturalmente

distribuídas e operam de forma autônoma neste modelo proposto.



103

Tal como o modelo distribuído anterior (SALIDO; GIRET, 2008), aqui cada agente tem um

grande problema complexo com muitas variáveis públicas (variáveis restritas também por ou-

tros agentes), o qual conduz a um espaço de busca distribuído extremamente grande e traz novos

desafios aos algoritmos DCOP. Portanto, a segunda contribuição deste trabalho foi a introdução

de uma série de técnicas de modelagem e busca para lidar com estes desafios. Assim, estas

técnicas são responsáveis pela poda do espaço de busca inicial do problema, permitindo que

este espaço remanescente possa ser percorrido de forma mais eficiente. Para isso, foi utili-

zado apenas o algoritmo ADOPT para DCOP (vide Seção 5.4), que foi adaptado para aplicar

estas técnicas, de modo a resolver o problema SCC. Foi realizada uma série de experimentos

demonstrando as vantagens e limitações desta abordagem.

Para integrar o processo de solução local com a busca distribuída, foi usado o método de

compilação, que foi citado no início desta seção. Em uma fase de pré-processamento antes

da busca distribuída começar, é encontrada a solução local ótima para cada combinação válida

de atribuições para as variáveis públicas. Cada valor compilado contém uma única atribuíção

para as variáveis públicas (atribuição pública) e o custo local ótimo para essa atribuição. Não é

necessário armazenar as atribuições para as variáveis privadas, já que estas não são exigidas na

busca distribuída. Uma vez que o algoritmo distribuído terminou, então é possível recuperar a

atribuição ótima para as variáveis privadas relativa à atribuição pública escolhida. Existem algu-

mas razões para utilizar o método de compilação: (i) ele pode ser executado independentemente

por cada agente; (ii) ele atua como um mecanismo de cache, que evita busca local repetida, i.e.,

uma vez que uma solução local ótima foi encontrada para uma atribuição pública particular, en-

tão esta busca não precisa ser realizada novamente (exceto para a atribuição pública escolhida

final); e (iii) toda a informação de custo local é calculada antes do início da busca distribuída,

de modo a reduzir a computação e o tempo necessários para que a busca distribuída execute.

Além disso, foi criado um método de agregação, que é uma técnica independente do algo-

ritmo. Este método pode ser aplicado na modelagem de um problema para reduzir o domínio

das suas atribuições públicas, e, consequentemente, reduzir a complexidade do seu espaço de

busca. Assim, no problema SCC, quando o horizonte de planejamento, o número de compo-

nentes usados na fabricação e o número de lotes por componente crescem, o respectivo domínio

das atribuições públicas também cresce. Se estas variáveis são agregadas, é possível reduzir o

número de atribuições públicas possíveis.



104

5.9 Conclusão

Diante da decisão de usar a abordagem distribuída para o problema de planejamento in-

tegrado com otimização e da vantagem de modelá-lo como um problema de restrições, neste

capítulo foi apresentado o Problema de Satisfação de Restrições Distribuído com Otimização

(DCOP). Além disso, foram escolhidos dois conhecidos, corretos e completos algoritmos para

esta classe de problema, ou seja, ADOPT e DPOP, que serão utilizados na proposta deste tra-

balho. Ambos são algoritmos que priorizam os agentes em uma árvore de busca em profun-

didade (DFS), dentro de um ambiente descentralizado. ADOPT executa um método de busca

depth-first usando backtracking distribuído, enquanto DPOP implementa uma estratégia não

convencional baseada em programação dinâmica. Nesta tese não foi considerada a privacidade

dos algoritmos de solução de DCOP. Entretanto, existem trabalhos dedicados a este assunto,

que mostram que ambos os algoritmos utilizados podem manter a privacidade das informações

sem perda de desempenho.

Não existem algoritmos específicos de DCOP para resolver problemas distribuídos do mundo

real de uma forma eficiente. Além disso, muitos problemas reais e centralizados podem ser mo-

delados de forma distribuída. A maioria destes problemas são muito complexos e envolvem um

grande número de variáveis e restrições. Portanto, as técnicas tradicionais de solução distribuída

não são apropriadas. Por outro lado, nos trabalhos relacionados, foi observado que é vantajoso

particionar o problema em vários subproblemas mais simples interligados, que podem ser mais

facilmente resolvidos.

Em princípio, o problema de restrições distribuídas com otimização, em conjunto com o

paradigma holônico apresentado no capítulo anterior, formam o embrião para o modelo a ser

utilizado no problema principal da tese. Entretanto, além desta composição de ideias, é necessá-

rio incluir alguns aspectos observados em trabalhos anteriores. Assim, existe a necessidade de

criar uma base teória mais sólida, envolvendo todos estes elementos de forma consistente, antes

de iniciar o trabalho de modelagem. Isto é exatamente o que será feito no próximo capítulo.



105

Parte III

Contribuições



106

6
Problema de Satisfação de Restrições

Holônico com Otimização (HCOP)

6.1 Introdução

Como mostrado no Capítulo 3, satisfação de restrições e otimização são poderosos paradig-

mas que modelam um grande espectro de problemas, tais como planejamento, escalonamento,

controle otimizado de processos, etc. Tradicionalmente, tais problemas são simplificados e re-

unidos em um único modelo centralizado, que deve fornecer a melhor solução possível, mas

distante do ótimo. Entretanto, estes problemas são algumas vezes naturalmente distribuídos.

Se analisarmos alguns problemas de otimização com restrições, podemos perceber que

eles possuem uma natureza recursiva, que não é explorada atualmente pelos frameworks de

otimização disponíveis e seus algoritmos correspondentes. Um exemplo deste tipo de problema

é o planejamento integrado da cadeia de suprimentos. Normalmente cada entidade na cadeia

provavelmente age em nome de seus melhores interesses para otimizar seu próprio lucro. Entre-

tanto, em geral, isso não vai de encontro à meta de otimização de toda a cadeia de suprimentos.

Por outro lado, a complexidade da integração de toda a cadeia torna o desevolvimento de um

único sistema centralizado uma tarefa impraticável. Além disso, mesmo que isto fosse possível,

as mudanças frequentes e imprevisíveis no ambiente do problema tornariam os resultados da

solução de tal sistema obsoletos e inúteis muito rapidamente.

Assim, este capítulo define o Problema Holônico de Restrições com Otimização (Holonic

Constraint Optimization Problem - HCOP) como um novo paradigma para modelar problemas

distribuídos com otimização que apresentam estas características. Sua principal característica

é representar tais problemas através da integração de subproblemas solúveis, nos quais aqueles

podem ser naturalmente particionados. Como já foi dito, um exemplo de problema de otimiza-

ção distribuído com uma organização recursiva é o planejamento da cadeia de suprimentos da

indústria do petróleo. Em geral, as refinarias possuem seu sistema local específico de otimização



107

para o planejamento da produção, enquanto cada área de logística responsável por cada nível

da cadeia possui seu respectivo sistema de otimização para o correspondente planejamento de

transporte e distribuição. Entretanto, os diferentes sistemas não são convenientemente integra-

dos para permitir uma otimização global (MARCELLINO; SICHMAN, 2010). Este mesmo tra-

balho lançou os fundamentos para se perseguir a otimização integrada usando as características

holônicas presentes no problema em foco. Neste mesmo trabalho, este problema foi mode-

lado de forma distribuída, levando em conta sua natureza distribuída e a impossibilidade do seu

tratamento centralizado, usando DCOP. Entretanto, este último se mostrou uma ferramenta de

modelagem inadequada para enfrentar o objetivo proposto, como já mencionado no capítulo an-

terior. Assim, tal modelo estava ainda incipiente, mas sua evolução levou à definição do HCOP

como uma subclasse do DCOP, o que será mostrado a seguir.

6.2 Descrição do HCOP

Alguns problemas distribuídos de restrições com otimização possuem uma estrutura hi-

erárquica e recursiva, que é denominada holarquia. Este tipo de organização é caracterizada

por entidades com grande coesão interna, mas com um acoplamento relativamente menor com

o mundo exterior ao longo de todo o conjunto. Por esta razão, tais problemas de otimização

podem ser particionados em uma série de subproblemas de otimização menores, que, embora

não sejam independentes um do outro, apresentam tal nível de desacoplamento que possibilita

um certo paralelismo no processo de solução. Este ponto de vista facilita a modelagem da com-

plexidade de todo o sistema, que pode ser representado através de uma estrutura mais simples

que se repete recursivamente ao longo do modelo.

O HCOP consiste de um conjunto de agentes que são chamados holons. Estes holons

são distribuídos em diferentes níveis de abstração. Por definição, um holon contém outros

holons (seus subholons) e é parte de um outro holon maior (seu superholon). Entretanto, o

nível mais fundamental consiste somente de holons atômicos, i.e., um agente convencional

que não contém nenhum outro. Nos níveis superiores os holons podem ser atômicos ou não,

e neste último caso são chamados também de superholon, pois contêm outros holons no seu

interior. Cada holon é responsável por uma variável denominada variável holônica. No caso do

holon atômico, ela é chamada também de variável de decisão, enquanto a variável holônica de

cada superholon é denominada também de variável emergente, que é dependente das variáveis

holônicas associadas aos seus subholons, através de uma função de emergência. Assim, estas

variáveis holônicas, associadas a cada subholon correspondente dentro do mesmo superholon,

são ligadas pela restrição holônica de agregação à variável holônica do holon cabeça, que, por



108

Figure 15: Restrições do HCOP

sua vez, se conecta à variável emergente do próprio superholon através da restrição holônica

de emergência. Em suma, a função de emergência define a composição entre as restrições de

agregação e de emergência. A Fig. 15 apresenta as restrições do HCOP. A restrição local será

descrita ainda nesta seção.

Também se parte da premissa de que os holons cabeça, tal como os holons atômicos, não

possuem subholons. Devido ao comportamento singular do holon cabeça, que é responsável

pela comunicação com o mundo exterior, é natural tratá-lo de forma diferenciada em relação

ao restante do holon, que é formado por todos os holons parte e é chamado corpo. Como o

holon cabeça representa seu superholon para os outros holons externos, ele cuida também da

variável emergente deste último. Portanto, ele utiliza a restrição de emergência, que conecta sua

variável holônica com a variável emergente associada. Em geral, estas duas variáveis têm um

mesmo significado, de modo que esta restrição funciona apenas como uma transformação de

normalização, que pode estar relacionada, por exemplo, à ordem de grandeza das quantidades

ou ao ajuste do domínio.

A forte coesão interna dos subholons, e o acoplamento menos intenso entre um subholon

e seu superholon, ou seu subholon, torna possível visualizar um HCOP como uma partição de

problemas de otimização acoplados. Basicamente cada superholon é associado a um problema

deste tipo, que pode ser solucionado por um correspondente algoritmo de otimização central-

izado conhecido AO. Dentro de cada superholon existe uma outra organização denominada

interna, que é constituída por um conjunto de variáveis associadas ao problema de otimização

específico (vide a Seção 4.3.3). Elas são denominadas variáveis locais, e são ligadas apenas

por restrições locais entre si, e podem também se relacionar com as variáveis holônicas dos

subholons do mesmo superholon através do mesmo tipo de restrição. As variáveis locais de um



109

Figura 16: Diagrama Básico do HCOP

superholon e as variáveis holônicas dos seus subholons são as variáveis de entrada do algoritmo

de otimização AO, juntamente com a variável emergente do superholon correspondente. A Fig.

16 ilustra os elementos do HCOP.

A organização holônica adotada neste trabalho classifica os subholons em 2 papéis: cabeça,

que é único, e parte, que pode ser um ou mais, ambos dentro de cada superholon. Não será

considerado o papel multiparte, que é desempenhado pelos subholons compartilhados por mais

de um superholon ao mesmo tempo. Entretanto, levando em conta a característica descrita de

forte coesão dentro de cada superholon no modelo do HCOP, o conceito de holon multiparte é

dispensável. De fato, a Fig. 17a mostra um exemplo de modelagem holônica utilizando o holon

multiparte, com 4 superholons (holons 1, 2, 3 e 4), 4 holons cabeça (um para cada superholon)

e 6 holons atômicos (holons 5, 6, 7, 8, 9 e 10). Dentre estes últimos, o modelo utiliza 5 holons

parte (holons 5, 6, 8, 9 e 10) e também um holon multiparte (holon 7). A existência deste tipo

de holon indica que há forte coesão entre os superholons 2 e 3, o que foge da diretiva expressa

anteriormente para a modelagem holônica proposta nesta tese. Assim, o modelo para um HCOP

deveria ser aquele apresentado na Fig. 17b, onde os superholons 2 e 3 são fundidos em um único

superholon 2
?

, mostrando a afinidade entre os subholons 5 e 6, por um lado, e o subholon 8,

por outro, em relação ao subholon 7, que passou a ser apenas um holon parte. Justamente esta



110

(a) Utilizando Holon Multiparte (b) Utilizando HCOP

Figura 17: Exemplo de Modelagem Holônica

mudança torna natural a disponibilidade de um AO associado ao superholon 2
?

, ao invés de ser

preciso o desenvolvimento do AO 2 e do AO 3 dentro do modelo com holon multiparte, que

seriam completamente dependentes entre si e, portanto, descabidos dentro do HCOP.

6.3 Formalização do HCOP

Neste trabalho, um sistema de agentes holônicos A = {a1, . . . , ai, . . . , an} é constituído

por 2 tipos de agentes:

1. átomo, que é resultante de uma modelagem típica do problema tratado utilizando a tec-

nologia de agentes convencional;

2. cabeça, que é resultante da modelagem holônica do problema, e, portanto, não tem sen-

tido sem o uso do paradigma holônico.

Desta forma, o sistema holônico é formado por um conjunto H = {h, . . . , hi, . . . , hn} de todos

os holons do problema, tal que | H |= | A |, onde cada holon hi corresponde a um agente ai.

Um HCOP é formalizado como uma tupla (H, R, V, Dv, X, Dx, E, F, AO) onde:

• H = {H0, . . . , H?, . . . H?max} é uma partição do conjunto H de todos os holons formada

pelas classes de equivalência em relação a cada nível ?. Portanto, por definição H satisfaz

as seguintes condições:



111

1. H? 6= ?,??? N, ? ? ?max

2. ?
0????max

H? = H

3. Hi ?Hj = ?, i, j? N, i 6= j

Além disso, H? = {h? 1, . . . , h? i, . . . , h?N?} é o conjunto de holons do nível ?, que por sua

natureza são ao mesmo tempo conjuntos (todo) e elementos (parte), e também satisfazem

as seguintes condições:

h? i 6= ?,?i? N, 1 ? i ? N? (6.1)

h? i ?h? j = ?, i, j? N, i 6= j (6.2)

A segunda condição impõe que os holons de um mesmo nível ? sejam disjuntos, e, por-

tanto, não contenham subholons multi-parte, como é uma das suposições desta tese (vide

6.2).

Assim, cada um dos holons de H? consiste de um conjunto de outros holons, e pode ser

classificado em dois casos:

1. h? i é um holon atômico, que é equivalente ao agente atômico;

2. h? i = {C? i, B? i} é um holon não atômico, chamado superholon, onde:

– C? i = h??1 j é denominado a cabeça do holon h? i, sendo equivalente ao agente

cabeça;

– B? i = {h??1 ?1, h??1 ?2, . . .} 6= ? é denominado o corpo do holon h? i. Os

elementos h??1 ? são denominados partes do holon h? i.

Assim, existem dois níveis singulares:

– Para ? = 0 todos os holons são atômicos, formando o conjunto H0 do nível funda-

mental;

– Para ? = ?max existe apenas um único holon, formando o conjunto H?max =

{h?max1}. Este holon é denominado holon global.

Pode haver holons atômicos nos níveis intermediários entre estes dois extremos, que, no

entanto, não podem existir isolados. Assim, eles são partes de um superholon localizado

no próximo nível superior.

O elemento H da tupla define a estrutura da holarquia do problema.



112

• R = {r1, . . . , rR} é o conjunto de relações entre os holons, onde ri é uma das duas

relações primitivas definidas pelas Equações 6.3 e 6.4, onde ?? N, ? &gt; 0, H?? ? H? |

H?? = ?
i
B?+1 i para ? &amp;lt;?max ou H

?
? = H? para ? = ?max. Estas relações especificam a

topologia da holarquia do problema.

cabec?aDe? = {(h? i, h??1 j) ? H
?
? ×H??1 : h??1 j = C? i} (6.3)

parteDe? = {(h? i, h??1 j) ? H
?
? ×H??1 : h??1 j ? B? i} (6.4)

Outras relações importantes, mas derivadas das primitivas, são respectivamente a de sub-

holon, definida na Eq. 6.5, onde ?? N, ? &gt; 0, H?? ? H? | H
?
? = ?

i
B?+1 i para ?&amp;lt;

?max ou H
?
? = H? para ? = ?max, e a de superholon da Eq. 6.6, onde ?? N, ? &gt; 0, ?&amp;lt;

?max, H
?
?+1 ? H?+1 | H

?
?+1 = ?

i
B?+2 i para ? &amp;lt;?max ? 1 ou H

?
?+1 = H?+1 para ? =

?max ? 1. A primeira relação mostra que um subholon de um certo holon pode ser tanto

sua cabeça quanto qualquer de suas partes, enquanto a segunda é mostrada como a relação

inversa da anterior.

subholonDe? ? cabec?aDe? ? parteDe?{(h? i, h??1 j) ? H
?
? ×H??1} (6.5)

superholonDe? ? subholonDe
?1
? {(h? i, h?+1 j) ? H? ×H

?
?+1} (6.6)

A relação cabec?aDe? é também uma função por definição, já que na organização holônica

adotada neste trabalho existe um único cabeça associado a cada superholon. Por outro

lado, a relação parteDe? não é necessariamente uma função, pois isto não é verdade para

o caso de mais de uma parte em um mesmo superholon.

• V = {v0 1, ..., v? i,..., v?max1} é o conjunto de variáveis holônicas, onde cada variável v? i

é associada ao respectivo holon h? i do nível ? (uma variável holônica por holon). Cada

variável holônica pode ser classificada em umas das duas situações seguintes:

– variável de decisão, se o holon associado é atômico. Ela é uma variável indepen-

dente do problema;

– variável emergente, se o holon associado é um superholon. Ela é dependente das

variáveis holônicas dos subholons constituintes.

Elas devem participar nas restrições holônicas, mas podem participar também nas re-

strições locais dentro do seu correspondente holon.

• Dv = {Dv0 1, ..., Dv? i, ..., Dv?max1} é o conjunto de domínios, onde cada domínio Dv? i

é um conjunto discreto e finito associado a cada uma das variáveis v? i;



113

• X = {x0 1 1, ..., x? i j,..., x?max?1 imax jimax} é o conjunto de variáveis locais, onde cada

variável x? i j é uma das variáveis internas ao superholon h?+1 i. Elas são opcionais, mas

podem existir várias variáveis locais por superholon. Estas variáveis somente partici-

pam de restrições locais, que podem envolver também variáveis holônicas associadas a

subholons do mesmo superholon h?+1 i;

• Dx = {Dx0 1 1, ..., Dx? i j,..., Dx?max?1 imax jimax} é o conjunto de domínios, onde cada

domínio Dx? i j é um conjunto discreto e finito associado a cada uma das variáveis locais

x? i j ;

• E = {E1 1, ..., E? i,..., E?max1} é o conjunto de funções de emergência, onde cada função

E? i é associada ao respectivo superholon h? i, onde ? &gt; 0, na forma:

E?i : Dv?-1?1 × . . .×Dv??1?B?i ? Dv? i
(6.7)

onde o domínio é o produto cartesiano das variáveis holônicas dos subholons de h? i, e

v? i sua variável holônica emergente. Assim, esta última está conectada por uma restrição

n-ária c? i definida pela função de emergência E? i com as variáveis holônicas correspon-

dentes a cada um dos seus subholons. Como pode ser visto na Eq. 6.8, esta restrição c? i é

do tipo predicado, sendo, portanto, satisfeita ou violada. Além disso, como ela relaciona

a variável emergente do superholon com as variáveis holônicas dos seus subholons, não

faz sentido existir função de emergência para holons atômicos. Esta restrição definida

pela função de emergência é a força de ligação entre o cabeça e o corpo do superholon

correspondente de modo a criar as propriedades da sua variável emergente.

c? i = restri?ca?o
(

v? i == E? i

(

v??1?1, . . . , v??1?B?i

))

(6.8)

• F = {F11, . . . , F ? i,..., F?max1} é o conjunto de F? i, um para cada superholon h? i, onde

F? i = {f? i 1, . . . , f? i j, ..., f? i M? i} é o conjunto das restrições valoradas entre as var-

iáveis holônicas v??1 ?i j dos subholons do holon h? i, e/ou das variáveis locais x??1 i ?i j
do mesmo holon, M? i é o número de subholons do superholon h? i e ? &gt; 0. Es-

tas restrições são funções representadas na Eq. 6.9, cujo domínio é o produto carte-

siano destas variáveis holônicas{v??1?1, . . . , v??1?N?ij} e também destas variáveis locais

{x??1 i ?1, . . . , x??1 i ?O?ij}. Elas são apenas restrições locais do superholon considerado,

mas não restrições holônicas associadas à função de emergência, que, como já foi visto,

é uma restrição n-ária não valorada (vide Eq. 6.8).

f? i j : Dv??1?1 × . . .×Dv??1?N?ij ×Dx??1 i ?1 × . . .×Dx??1 i ?O?ij ? N (6.9)



114

• AO = {AO1 1, ..., AO? i,..., AO?max1} é o conjunto de algoritmos de otimização central-

izados, onde cada AO? i é associado ao respectivo superholon h? i, onde ? &gt; 0. Além de

serem corretos e completos, estes algoritmos devem respeitar os protocolos de entrada e

saída definidos pelas Equações 6.10 e 6.11, respectivamente, onde

– Entradas:

* c? i: restrição n-ária definida pela função de emergência E?i associada ao su-

perholon h? i (Eq. 6.8). Representa a restrição holônica para este holon;

* F? i é o conjunto {f? i 1, . . . , f? i j, ..., f? i M? i} associado ao superholon h? i, onde

os elementos são restrições valoradas entre as variáveis holônicas v??1 ? dos

subholons do holon h? i, e/ou das variáveis locais x??1 i ? do mesmo holon e

M? i é o número de subholons do superholon h? i. Representa as restrições

locais deste holon;

* utilidade??1 ? l: utilidade ótima do subholon h??1 ? associada ao valor d??1 ? l ?

Dv??1 ? da variável holônica v??1 ? do mesmo holon. Se h??1 ? é:

· superholon também, ela é obtida de AO??1 ? recursivamente;

· atômico, ela é igual a uma utilidade conhecida a priori;

* d? i ind : é o elemento ind do conjunto Dv? i, i.e., d? i ind ? Dv? i;

– Saídas:

* utilidade? i ind: utilidade ótima do superholon h? i associada ao valor d? i ind ?

Dv? i da variável emergente v? i do mesmo holon;

* v
?
??1?: representa a solução parcial da variável holônica v??1 ?associada ao

valor d? i ind ? Dv? i da variável emergente v? i do superholon h? i;

* x
?
??1 i ?: representa a solução parcial da variável local x??1 i ? do superholon h? i

associada ao valor d? i ind ? Dv? i da variável emergente v? i do mesmo super-

holon;

AO? i ? (c? i, F? i, . . . , utilidade??1 ? l, . . . , d? i ind) (6.10)

(

utilidade? i ind, (v
?
??1?1

, . . . , v???1?max), (x
?
??1 i ?1

, . . . , x???1 i ?max)
)

? AO? i (6.11)



115

A meta do HCOP é encontrar uma instanciação completa V ? para todas as variáveis holôni-

cas v? i, e também uma instanciação completa X
? para todas as variáveis locais x? i j, de modo

a obter a utilidade?max1 associada ao holon global h?max1, através da maximização da função

objetivo definida pela Eq. 6.12, onde N? é o número de holons no nível ? e M? i é o número

de subholons do superholon h? i. Como o holon global representa o sistema completo, sua

utilidade?max 1 = argmaxind(utilidade?=?max i=1 ind), tal que d?max 1 ind ? Dv?max 1, representa

o valor ótimo da utilidade total.

FO = utilidade?max 1 =

?max
?

?=0

N?
?

i=1

M? i
?

j=1

f? i j (6.12)

De acordo com a Eq. 6.9, é possível restrições de qualquer aridade, inclusive com uma

única variável (unária). É possível até mesmo utilizar uma restrição na forma de uma função

constante constituída por parâmetros de entrada do problema, cuja necessidade é suplementar

o significado dado à função objetivo FO. Esta definição reflete a característica do HCOP de

que não há uma restrição direta entre dois subholons pertencendo a diferentes superholons, já

que na organização holônica adotada não existem subholons multi-parte, como já mencionado

anteriormente.

HCOP, tal como DCOP, é definido por restrições entre as variáveis. A junção entre a restri-

ção de agregação e a restrição emergente para um mesmo superholon equivale à restrição n-ária

definida pela função de emergência (vide Eq. 6.8) entre a variável emergente do superholon e

todas as variáveis holônicas dos subholons constituintes, inclusive a do cabeça. Tal como no

DCOP (vide 5.2), o operador de agregação1 (soma) utilizado na função objetivo, bem como

dentro das utilidades agregadas nas restrições holônicas e locais, deve ser também associativo,

comutativo e monotônico. Por isso, esta mesma condição vale para o operador de agregação uti-

lizado na função de emergência. Exceto as limitações anteriores, não existem outras imposições

sobre o tipo de restrição utilizada, que pode ser, em princípio, não-linear.

6.4 Relação entre DCOP e HCOP

O Problema Holônico de Restrições com Otimização (HCOP) possue características es-

pecíficas que o tornam diferente de um DCOP, por exemplo, devido à existência de holons ao

invés de simples agentes. Entretanto, observando as propriedades que definem um HCOP é fácil

notar que ele contêm todas as propriedades do DCOP generalizado para problemas locais com-

1Não confundir com a restrição de agregação, que tem um outro significado.



116

Figura 18: (a) Decomposição (b) Compilação

plexos (vide 5.3), além de propriedades específicas como a holarquia, as funções de emergência

E? i e os algoritmos de otimização AO? i. Assim, podemos concluir que a classe dos proble-

mas HCOP é uma subclasse daquela formada por todos os DCOP, e portanto qualquer HCOP é

também um DCOP com problemas locais complexos.

A maioria dos algoritmos de DCOP admitem que cada agente controla somente uma única

variável. Esta suposição é justificada por duas reformulações que aqui são propostas por (YO-

KOO; HIRAYAMA, 2000), pelas quais qualquer DCOP com problemas locais complexos (i.e.,

múltiplas variáveis em cada agente) pode ser transformado para exatamente uma variável por

agente:

Definição 8 Compilação: para cada agente, define uma variável cujo domínio é o conjunto

de soluções do problema local original.

Definição 9 Decomposição: para cada variável em cada problema local, cria um agente

único para lidar com ele.

Portanto, é possível transformar um HCOP em um DCOP básico com uma variável por

agente através de uma das duas formas padrão, i.e., Compilação ou Decomposição (vide Fig.

18).

Existem vários algoritmos devenvolvidos para a solução de qualquer DCOP com a limitação

de que eles supõem que cada agente tem somente uma variável local. Para a transformação do

HCOP em um DCOP básico, o método de Compilação é o mais apropriado para o HCOP, como

será visto na próxima seção.



117

Os algoritmos atualmente disponíveis para DCOP não são nem eficientes nem escaláveis

para problemas mais complexos (YOKOO; HIRAYAMA, 2000). Além disso, pela definição do

HCOP, sua solução se baseada no uso de algoritmos de otimização pré-determinados associa-

dos aos vários superholons. Por isso, um dos objetivos deste trabalho é propor meta-algoritmos

que se integrem a estes algoritmos disponíveis, de modo a resolver um HCOP genérico, mesmo

no caso de problemas locais complexos como acontece no problema de planejamento integrado

da cadeia do petróleo. Para isso, os dois algorítmos para DCOP apresentados no Capítulo 5

foram utilizados como base para o desenvolvimento de dois meta-algoritmos correspondentes

para HCOP. Ambos foram adaptados para levar em conta a integração com os diversos algo-

ritmos de otimização associados a cada problema local complexo de cada superholon, como é

característica do HCOP.

6.4.1 Decomposição

O método de decomposição é o seguinte (BURKE, 2008): para cada variável xi j em cada

agente ai, criar um novo agente virtual axi j para gerenciar esta variável. Assim, o problema é

reduzido a uma única variável por agente virtual. O agente ai é então requisitado para gerenciar

as atividades de um conjunto de agentes virtuais AXi = {axi1, axi2, . . . , aximi} (vide Fig.

18(a)).

No HCOP cada superholon é associado a um problema local complexo com variáveis in-

ternas, que são tanto as variáveis holônicas dos subholons membros quanto as variáveis locais.

Cada subholon é naturalmente responsável pela variável holônica correspondente. Mas seria

preciso criar um agente virtual para cada variável local interna, já que cada um destes é inde-

pendente dos subholons membros. Entretanto, uma das características do HCOP é a integração

de subproblemas de otimização (POs), cada um associado a um superholon correspondente.

Portanto, a estratégia dos meta-algoritmos propostos é a utilização de diversos algoritmos de

otimização disponíveis (AO), cada um relacionado a um PO correspondente. Desta forma, o

método de compilação se adequada mais com esta caracterísca do HCOP, com será visto em

seguida.

6.4.2 Compilação

O método básico de compilação é o seguinte (BURKE, 2008):

(i) para cada agente ai criar uma nova variável zi, cujo domínio Dzi é o conjunto de todas

as soluções do problema interno do agente ai;



118

(ii) para cada agente ai criar uma função unária de restrição valorada fi, onde

?lm ? Dzi, sendo lm uma atribuição dentro do agente ai. e fi(lm) =
?

k j

ck(projec?a?oi j(lm))

é a soma das restrições ck que agem dentro do holon ai e projec?a?oi j é a função Dzi ? Dj que

projeta um valor de zi em um valor da variável interna vj do agente ai. A função fi é necessária

porque a função ck tem como domínio as variáveis internas do agente (vide 5.3).

No caso do HCOP, o método de compilação combina naturalmente com a organização

holônica. De fato, não é necessário criar a variável zi , pois ela já existe como a variável

holônica do holon cabeça associado a cada superholon. Assim, este método fica da seguinte

forma:

(i) para cada superholon h? i o domínio Dv??1 w da variável holônica v??1 w do seu holon

cabeça, i.e., h??1 w = cabec?aDe?(h? i), representa o conjunto de todas as soluções parciais do

problema interno deste superholon, que são relativas às variáveis holônicas v??1 ? dos seus sub-

holons e às variáveis locais x??1 i ? do mesmo superholon. Cada solução parcial está associada

a um correspondente valor d? i ind ? Dv? i da variável emergente v? i do superholon h? i, sendo

obtida através da chamada do algoritmo de otimização AO? i associado a este superholon, que

respeita os protocolos de entrada e saída definidos pelas Equações 6.10 e 6.11 da Seção 6.3.

Como já mencionado na Seção 6.2, a variável holônica v??1 w do holon cabeça está diretamente

ligada à variável emergente do seu superholon através da restrição de emergência. Assim,

ambas possuem o mesmo significado, de modo que existe um mapeamento entre o domínio

Dv??1 w do holon cabeça e o domínio Dv? i do seu superholon. Portanto, cada elemento do

domínio Dv??1 w está relacionado a uma solução parcial obtida para um valor d? i ind ? Dv? i

correspondente.

(ii) para cada superholon h? i existe uma função unária de restrição valorada definida pela

Eq. 6.13, que é dependente da atribuição d? i ind ? Dv? i da variável emergente v? i deste su-

perholon, onde f? i j é cada uma das restrições valoradas entre as variáveis holônicas v??1 ?i j
dos seus subholons e das variáveis locais x??1 i ?i j do mesmo superholon, M? i é o número dos

subholons deste superholon h? i e ? &gt; 0 (vide Seção 6.3).

utilidade? i ind =

M? i
?

j=1

f? i j (6.13)

Tanto esta utilidade do superholon h? i quanto as soluções parciais das variáveis holônicas

(v???1?1, . . . , v
?
??1?max

) dos seus subholons e das variáveis locais (x???1 i ?1, . . . , x
?
??1 i ?max

) do

mesmo superholon, que são utilizadas na soma das restrições de utilidade que agem dentro do

superholon, são obtidas através da invocação do AO? i para o valor d? i ind ? Dv? i, como pode



119

ser visto na Eq. 6.14 (baseada nas Equações 6.10 e 6.11).

(

utilidade? i ind, (v
?
??1?1

, . . . , v???1?max), (x
?
??1 i ?1

, . . . , x???1 i ?max)
)

? AO? i(..., d? i ind)

(6.14)

A Fig. 19 ilustra o processo de transformação do HCOP no DCOP básico através do método

de Compilação. Neste exemplo a Fig. 19a mostra o HCOP original com 3 níveis, 4 holons

atômicos no nível fundamental, 2 superholons com uma variável local cada e um holon atômico

no nível intermediário, 3 holons cabeças e o holon global com 2 variáveis locais no seu in-

terior. Na sequência a Fig. 19b apresenta o DCOP para problema local complexo resultante,

onde os 8 holons são substituídos por agentes convencionais (um para cada holon cabeça e

holon atômico, como já mencionado na Seção 6.3) e as 3 variáveis holônicas dos superholons

e dos 5 holons atômicos se transformam em variáveis públicas. As variáveis locais do DCOP

vieram das variáveis locais do HCOP, mas também das variáveis holônicos dos holons cabeça,

pois estas últimas funcionam como uma ligação interna entre as variáveis públicas, que têm

restrições com outros agentes. A exceção é a variável pública associada à variável holônico do

holon global, que precisa ser vista pelo mundo externo. Finalmente, a Fig. 19c mostra o DCOP

básico final, com agentes contendo uma única variável, que pertence a um único tipo. Assim,

existem 8 agentes com variáveis associadas às variáveis holônicas dos 3 superholons e dos 5

holons atômicos.

Após esta transformação o HCOP pode ser solucionado através de qualquer dos algorit-

mos completos para DCOP (vide 5.4), desde que seja criada uma interface levando em conta a

transformação considerada, que permita a integração com estes algoritmos. É exatamente o que

será feito na próxima seção com a proposta de meta-algoritmos específicos, que serão criados

através da adaptação dos algoritmos para DCOP escolhidos.

6.5 Meta-Algoritmos para a Solução do HCOP

Como já mencionado anteriormente, um HCOP pode ser visto como uma holarquia cujos

holons podem ser associados a Problemas de Otimização (PO) correspondentes. Cada um destes

problemas pode ser representado por um PO centralizado no caso de um holon com maior

coesão interna. Desta forma, podemos dizer que um HCOP é um PO distribuído, que pode ser

modelado como uma rede híbrida de subproblemas de otimização centralizados. Por esta razão,

para solucionar um HCOP torna-se mais apropriado um meta-algoritmo ao invés de um simples



120

(a) HCOP Original

(b) DCOP para Problema Local Complexo (c) DCOP Básico Final

Figura 19: Transformação de HCOP para DCOP



121

algoritmo. Assim, é possível embutir dentro desta estrutura mais abstrata diferentes algoritmos

de otimização centralizados, de tal forma a obter a configuração que mais se adeque a cada

caso. Este meta-algoritmo é denominado Meta-Algoritmo para o Problema de Satisfação de

Restrições Holônico com Otimização (Holonic Constraint Optimization Meta-Algorithm ) ou

HCOMA.

Como a organização holônica que foi considerada neste trabalho não inclui holons multi-

parte, o grafo global onde cada nó é formado por cada um dos holons possui uma estrutura em

árvore, que é um grafo conexo sem ciclos. Na Seção 5.4 foi feita uma descrição resumida dos

dois algoritmos de DCOP escolhidos. O primeiro é o algoritmo ADOPT (MODI et al., 2003), que

é assíncrono e adequado a uma estrutura em árvore, tal como a do HCOP. Pela mesma razão,

o segundo algoritmo usado é o DTREE (PETCU; FALTINGS, 2004), que foi a base original do

DPOP (PETCU; FALTINGS, 2005) para uma estrutura em árvore. Desta forma, neste trabalho foi

desenvolvido um meta-algoritmo para cada um destes algoritmos. Ambos foram desenvolvidos

a partir das características originais destes dois algoritmos e receberão as seguintes denomina-

ções daqui para frente:

• HCOMA ADOPT

• HCOMA DPOP

Antes de apresentar cada um destes meta-algoritmos, serão discutidos a seguir os pressupostos

considerados para utilizar um algoritmo de DCOP para solucionar HCOP.

6.5.1 Adaptação de um Algoritmo DCOP para o HCOMA

Na Seção 6.4.2 foi descrito o processo de transformação de um HCOP qualquer em um

DCOP básico (uma variável por agente), que pode então ser solucionado via qualquer algo-

ritmo DCOP completo. De acordo com a definição do DCOP, cada restrição é tratada por um

único agente. No caso da transformação de Compilação, as variáveis internas de cada super-

holon (variáveis holônicas dos seus subholons e as suas variáveis locais ) são representadas pela

variável holônica do holon cabeça. Como já foi visto na Seção 4.3.3, este é exatamente o papel

do cabeça, que representa o próprio holon, e portanto o conjunto dos seus subholons e variáveis

locais, para o mundo externo. Outra característica do HCOP é a função de emergência, que

define uma restrição n-ária c? i, onde a variável emergente do superholon está conectada com

as variáveis holônicas de todos os seus subholons, inclusive o holon cabeça. Através desta

restrição é possível obter a atribuição das variáveis holônicas de cada subholon e das variáveis



122

locais de um superholon, dada uma atribuição d? i ind para a variável emergente deste superholon

e utilizando o AO? i associado, como foi visto na última seção. Isso será feito mais adiante nesta

subseção.

A Seção 5.5 descreveu que a estrutura de priorização em árvore DFS e o protocolo de

mensagens, são similares na maioria dos algoritmos. No caso dos dois algoritmos escolhidos,

i.e., ADOPT e DPOP (DTREE), isto também é verdade. Em ambos as mensagens VALUE

são enviadas dos agentes de maior prioridade (camadas de cima) para os de menor prioridade

(camadas de baixo); e as mensagens COST, no caso do ADOPT, e UTIL, no caso do DPOP, são

enviadas a partir dos agentes de menor prioridade para os de maior prioridade. As mensagens

VALUE especificam a atribuição atual do agente de envio e as atribuições de outros agentes de

maior prioridade, enquanto as mensagens COST (UTIL) especificam um custo incorrido pelo

agente de envio e todos os agentes de menor prioridade. Assim, em ambos os algoritmos, de

maneira geral, cada agente irá executar repetidamente o seguinte ciclo de computação:

1. ler as mensagens recebidas de outros agentes;

2. executar as seguintes atividades principais:

(a) computar as restrições sob sua responsabilidade;

(b) atribuir o valor da variável sob sua responsabilidade;

3. enviar mensagens para outros agentes.

A seguir, serão descritas as principais etapas do ciclo de computação dos agentes no meta-

algoritmo HCOMA. Em tais etapas, serão indicadas, quando conveniente, as respectivas linhas

de código correspondentes dos meta-algoritmos baseados no ADOPT e no DPOP, que serão

respectivamente formalizadas nas seções 6.5.2 e 6.5.3:

1. ler as mensagens recebidas de outros holons;

1.1 receber a mensagem READY de cada subholon parte h??1 k do superholon h? i consi-

derado pelo holon cabeça deste superholon. Seu objetivo é preparar o holon cabeça para chamar



123

o AO? i. A diferença entre os dois meta-algoritmos é que no HCOMA ADOPT, que é assín-

crono, esta chamada é feita logo em seguida, enquanto o HCOMA DPOP espera antes receber

esta mensagem de todos os subholons. Em ambos meta-algoritmos é lido o parâmetro:

• Dv??1 k é o domínio da variável holônica do subholon h??1 k;

No caso específico do HCOMA ADOPT, são passados também os parâmetros:

• limitante inferior lbl referente ao subholon parte h??1 k, onde l representa cada elemento

do domínio Dv??1 k da variável holônica v??1 k associada a h??1 k;

• limitante superior ub referente ao subholon parte h??1 k, onde l representa cada elemento

do domínio Dv??1 k da variável holônica v??1 k associada a h??1 k;

No caso específico do HCOMA DPOP, é passado também o parâmetro:

• utilidade máxima MelhorUtill referente ao subholon parte h??1 k, onde l representa cada

elemento do domínio Dv??1 k da variável holônica v??1 k associada a h??1 k.

– HCOMA ADOPT: linha 1 do algoritmo 6.2.

– HCOMA DPOP: linha 10 do algoritmo 6.5.

2. executar as seguintes atividades principais:

2.1 definir a restrição n-ária c? i dada por d? i ind = E? i(v??1 ?) (vide Eq. 6.8), onde:

• d? i ind é a atribuição corrente da variável emergente v? i associada ao superholon h? i com

o índice ind dentro da sequência do seu domínio Dv? i;

• E? i é a função de emergência do superholon h? i.

– HCOMA ADOPT: linha 29 do algoritmo 6.3.

– HCOMA DPOP: linha 16 do algoritmo 6.5.

2.2 chamar o algoritmo de otimização AO? i centralizado associado ao superholon h? i.

Tanto no caso do HCOMA ADOPT, quanto no HCOMA DPOP, são passados os seguintes

parâmetros:

• restrição n-ária c? i definida em 2.1;



124

• valor da atribuição corrente d? i ind da variável emergente v? i associada ao superholon h? i.

No caso específico do HCOMA ADOPT, são passados também os parâmetros:

• limitante inferior lb? i k l armazenado referente a todos os subholons parte h??1 k de h? i,

onde k representa estes subholons e l representa cada elemento do domínio Dv??1 k da

variável holônica v??1 k associada a h??1 k;

• limitante superior ub? i k l armazenado referente a todos os subholons parte h??1 k de h? i,

onde k representa estes subholons e l representa cada elemento do domínio Dv??1 k da

variável holônica v??1 k associada a h??1 k.

Quanto ao HCOMA DPOP, é passado também o parâmetro:

• utilidade? i k l armazenado referente a todos os subholons parte h??1 k de h? i, onde k

representa estes subholons e l representa cada elemento do domínio Dv??1 k da variável

holônica v??1 k associada a h??1 k.

– HCOMA ADOPT: linha 30 do algoritmo 6.3.

– HCOMA DPOP: linha 17 do algoritmo 6.5.

Em ambos os meta-algoritmos foi pressuposto que o AO? i já conhece o conjunto de

restrições locais F? i associado ao superholon h? i, que faz parte dos seus parâmetros de

entrada (vide 6.10) e é o mesmo em todas as chamadas para o mesmo superholon.

3. enviar mensagens para outros agentes:

3.1 enviar a mensagem VALUE, no caso do HCOMA ADOPT, ou a mensagem SOLU-

TION, no caso do HCOMA DPOP, com destino a cada subholon h??1 k do superholon h? i

considerado. Em ambos são passados os parâmetros:

• o valor d??1 k da solução parcial obtida pelo algoritmo de otimização AO? i para cada

variável holônica v??1 k correspondente ao subholon h??1 k de h? i;

• o valor da atribuição corrente d? i ind da variável emergente v? i associada ao superholon

h? i, para o qual foi encontrada a solução parcial por AO? i.

– HCOMA ADOPT: linha 16 ou linha 17 do algoritmo 6.4.

– HCOMA DPOP: linha 13 ou linha 14 do algoritmo 6.6.



125

3.2 envia a mensagem VALUE no HCOMA DPOP com destino a cada subholon h??1 k

do superholon h? i considerado. É passado o seguinte parâmetro:

• o valor da solução final v?? i ind da variável emergente v? i associada ao superholon h? i

para que o subholon parte h??1 k possa acessar sua própria solução final, utilizando a es-

trutura de dados SolucaoHolonica e o subholon cabeça possa acessar a solução final das

variáveis locais do seu superholon, utilizando a estrutura de dados SolucaoLocal. O con-

teúdo desta estrutura foi enviado pela mensagem SOLUTION anteriormente e relaciona

as soluções parciais do superholon e dos seus subholon no caso da SolucaoHolonica, e

as soluções parciais do superholon e das suas variáveis locais no caso da SolucaoLocal.

– HCOMA DPOP: linhas 33 e 45 do algoritmo 6.5.

3.3 enviar a mensagem COST, no caso do HCOMA ADOPT, ou a mensagem UTIL, no

caso do HCOMA DPOP, com destino ao holon cabeça do superholon h? i considerado. Em

ambos é passado o parâmetro:

• valor da atribuição corrente d? i ind da variável emergente v? i associada ao superholon h? i,

para o qual foi encontrada a solução parcial por AO? i;

No caso específico da mensagem COST, são passados também os parâmetros:

• limitante inferior mínimo LB obtido pelo AO? i para o valor d? i ind da variável emergente

v? i associada ao superholon h? i;

• limitante superior mínimo UB obtido pelo AO? i para o valor d? i ind da variável emergente

v? i associada ao superholon h? i.

Quanto à mensagem UTIL, é passado também o parâmetro:

• utilidade máxima MelhorUtil obtida pelo AO? i para o valor d? i ind da variável emer-

gente v? i associada ao superholon h? i.

– HCOMA ADOPT: linha 14 do algoritmo 6.4.

– HCOMA DPOP: linha 11 do algoritmo 6.6.

3.4 enviar a mensagem READY para o holon cabeça do seu superholon, iniciando todo o

ciclo nos dois meta-algoritmos.



126

• Os parâmetros foram descritos no item 1.1.

– HCOMA ADOPT: linha 35 do algoritmo 6.2.

– HCOMA DPOP: linha 25 do algoritmo 6.5.

Estas adaptações não comprometem o corportamento e as propriedades dos algoritmos origi-

nais, que são herdados pelo correspondente meta-algoritmo obtido. Mais que isso, ele será

correto e completo, desde que os algoritmos de otimização AO o sejam, baseado na prova re-

conhecida dos algoritmos originais. Assim, utilizando o exemplo empregado na seção anterior

para a transformação de um HCOP em um DCOP básico (vide a Fig. 19), é possível mostrar

esta característica do HCOMA, que apenas integra um algoritmo funcional para DCOP com

algoritmos de otimização disponíveis. De fato, a Fig. 20 ilustra o comportamento do HCOMA

em relação a um algoritmo de DCOP no qual ele é baseado, mostrando o HCOP original e o

DCOP final deste exemplo de transformação e utilizando sua notação símbólica. Para maior fa-

cilidade de compreensão, aparecem apenas as mensagens envolvidas na interação intra-holon,

e desprezando as mensagens particulares do algoritmo não afetadas (por exemplo, a mensa-

gem THRESHOLD do ADOPT). A mensagem READY é comum aos dois meta-algoritmos,

enquanto as mensagens COST e UTIL possuem uma função afim e o mesmo sentido. Quanto à

mensagem VALUE do HCOMA ADOPT, ela tem uma função afim e o mesmo sentido em rela-

ção à mensagem SOLUTION do HCOMA DPOP, que possui também uma mensagem VALUE

com o mesmo sentido, mas um significado diferente.

O lado esquerdo da mesma figura mostra o protocolo particular do HCOMA. Em qualquer

holon de qualquer nível, seu subholon cabeça recebe uma mensagem READY de cada subholon

parte contendo as maiores utilidades (ou menores custos) associados aos valores do domínio de

sua variável holônica. Assim, este holon cabeça está apto a chamar seu AO? i fornecendo estas

informações e o valor corrente da variável emergente do seu superholon. Depois que a solução

é obtida, este algoritmo envia a mensagem COST (ou UTIL) para o holon cabeça do superholon

associado contendo a melhor custo (ou utilidade) encontrada, e envia a solução parcial para os

subholons através da mensagem VALUE, no HCOMA ADOPT, ou da mensagem SOLUTION,

no HCOMA DPOP. Esta solução parcial é relativa às variáveis holônicas no caso de subholons

parte, ou relativa às variáveis locais do superholon no caso do subholon cabeça. Devido à sua

característica diferente, no HCOMA ADOPT as soluções parciais continuam sendo enviadas

pelas mensagens VALUE, até que elas se transformem na solução final, obedecendo ao critério

de término próprio do ADOPT. Já no HCOMA DPOP a solução final é definida depois atra-

vés das suas mensagens VALUE, que são enviadas do holon cabeça para os subholons parte,



127

utilizando as soluções parciais fornecidas antes pelas mensagens SOLUTION.

No lado direito está a troca de mensagens do algoritmo DCOP associado. Assim, as men-

sagens específicas do HCOMA se restringem à interação holônica e ao algoritmo de otimização

AO? i, enquanto as mensagens próprias do algoritmo original valem no escopo intra-holon, mas

atravessam esta fronteira, interligando os diferentes níveis como já faziam entre agentes conven-

cionais. Desta forma, é possível observar que o HCOMA funciona com a mesma mecânica do

algoritmo DCOP original, mantendo o mesmo ciclo de operações dos dois algoritmos escolhi-

dos, que são semelhantes, como foi visto na síntese do HCOMA apresentada. Sua característica

fundamental está no passo 2 deste ciclo, onde são executadas as seguintes atividades:

(a) computação das restrições holônicas e locais, que são responsabilidade de cada AO? i

correspondente;

(b) atribuição do valor da variável holônica e local, que é delegada ao mesmo AO? i, que

devolve aos subholons parte e cabeça a responsabilidade através das mensagens pertinentes do

protocolo de cada algoritmo DCOP utilizado (VALUE ou SOLUTION);

(c) cálculo da utilidade (ou custo) destas restrições, que é feito também pelo mesmo AO? i,

que novamente devolve a informação ao holon cabeça, que é o responsável pelo superholon,

utilizando a mensagem adequada (COST ou UTIL).

Portanto, partindo do pressuposto feito na definição do HCOP de que cada AO? i é correto

e completo, se o algoritmo usado como base é correto e completo, então o HCOMA resultante

também o será. Com relação à complexidade no tempo e no espaço, ela será o pior caso entre a

complexidade do algoritmo de DCOP e a complexidade dos AO? i. Entretanto, a complexidade

ligadas a grandezas relacionadas à natureza distribuída, tal como o número ou o tamanho de

mensagens, é herdada do algoritmo de DCOP, pois o AO? i é centralizado por definição.

A seguir são apresentados cada um dos dois meta-algoritmos HCOMA implementados

nesta tese. Para maior simplicidade e clareza, foi utilizada neles uma outra relação, além do

predicado denominado cabeça(), que são derivados das relações especificadas na formalização

do HCOP (vide Seção 6.3). Eles são mostradas nas Equações 6.15 e 6.16, respectivamente,

onde ?? N, ? &amp;lt;?max, H
?
? ? H?, H? = H

?
? ?H

??
? e H

?
? ?H

??
? = ?.

cabec?aDeParte? ? cabec?aDe?(superholonDe?) : H
?
? ? H

??
? (6.15)



128

Figura 20: Relação entre HCOMA e o Algoritmo de DCOP Base

cabec?a(h?i) := ?h?+1 k ? H?+1|h?i = cabec?aDe?(h?+1 k), (6.16)

6.5.2 HCOMA Baseado no ADOPT

Foi desenvolvido um meta-algoritmo baseado no algoritmo ADOPT. Sua estratégia de uti-

lizar o backtracking permite o processamento síncrono entre diferentes níveis holônicos, resul-

tando em um maior paralelismo na integração entre os diversos algoritmos de otimização do

subproblemas de otimização do HCOP. Por outro lado, ele apresenta um comportamento que

mistura os diversos níveis da holarquia durante o processo de solução, sem permitir o desacopla-

mento entre os diferentes algoritmos de otimização associados a cada superholon. Assim, cada

algoritmo de otimização, em geral, é chamado várias vezes, de modo que o processo de solução

pode se tornar menos eficaz à medida que o tempo de otimizaçao de cada subproblema aumenta.

Isto será verificado no Cap. 8 mais adiante.

6.5.2.1 Formalização

Este meta-algoritmo utiliza como base o algoritmo ADOPT descrito na Seção 5.4. Entre-

tanto, além dos 4 tipos de mensagem (VALUE, COST, THRESHOLD e TERMINATE), foi

acrescentada a mensagem READY, que é responsável por um comportamento holônico. Ela



129

Figure 21: Ilustração do HCOMA ADOPT

agrega no holon cabeça as informações dos subholons para que o primeiro possa ativar o al-

goritmo de otimização correspondente. A parte principal do HCOMA ADOPT aparece no

Algoritmo 6.1, enquanto o tratamento das mensagens está no Algoritmo 6.2. Finalmente, a

parte relativa à manutenção das invariâncias do threshold, que é característica do ADOPT, se

encontra no Algoritmo 6.3.

Parte-se do pressuposto de que um algoritmo de otimização genérico e centralizado está

disponível dentro do escopo de cada superholon. Além de ser correto e completo, é exigido

também que ele siga o Algoritmo 6.4, respeitando o protocolo especificado pelas Eq. 6.10 e

6.11 na sua integração com este meta-algoritmo. A Fig. 21 ilustra o HCOMA ADOPT. A prova

de que o meta-algoritmo é correto e completo é consequência direta de que o algoritmo ADOPT

já o seja. A prova disso está no Anexo A.

6.5.3 HCOMA Baseado no DPOP

Este meta-algoritmo foi baseado no algoritmo DTREE, que, além da adequação a uma

estrutura em árvore, tem a característica de ser livre de backtracking. Ele se adequa melhor

às características da organização holônica, pois sendo baseado em programação dinâmica, é



130

Algorithm 6.1 HCOMA ADOPT - Principal

1: HCOMAADOPT(H, R, V, Dv, X, Dx, E, F, AO)
2: Inicializar

3: threshold ? 0
4: CurrentContext ?{}
5: if ? &gt; 0 then
6: for all d ? Dv? i do
7: lb(d) ? 0
8: t(d) ? 0
9: ub(d) ??

10: end for

11: for all h??1 k = parteDe?(h? i) do
12: for all l ?{1, . . . , | Dv??1 k |} do
13: lb? i[k][l] ? 0
14: ub? i[k][l] ??
15: end for

16: end for

17: else

18: for all d ? Dv? i do
19: lb(d) ? custo atômico conhecido
20: t(d) ? custo atômico conhecido
21: ub(d) ? custo atômico conhecido
22: end for

23: end if

24: d? i ind ? argmind(LB(d)){onde d? i ind representa o valor corrente de v? i}
25: backTrack
26: return

27:

28: backTrack

29: c? i ?restrição(d? i ind = E? i(v??1 ?)){d? i ind ? Dv? i}
30: call AO?i(c? i, lb? i, ub? i, d? i ind)
31: if threshold == UB then
32: d? i ind ? argmind(UB(d))
33: else if LB(d? i ind) &gt; threshold then
34: d? i ind ? argmind(LB(d))
35: end if

36: mantemAlocaçãoInvariante
37: if threshold == UB then
38: if TERMINATE_msg recebida do superholon ou holon h? i considerado é global then
39: envia TERMINATE_msg() para cada subholon
40: end if

41: end if

42: return



131

Algorithm 6.2 HCOMA ADOPT - Tratamento das Mensagens

1: READY_msg_tratamento(lb, ub, Dv??1 k){recebida pelo cabeça do holon h? i a partir do
subholon h??1 k}

2: for all l ?{1, . . . , | Dv??1 k |} do
3: lb? i[k][l] ? lb[l]
4: ub? i[k][l] ? ub[l]
5: end for

6: backTrack
7: return

8:

9: THRESHOLD_msg_tratamento(t){recebida do cabeça}
10: threshold ? t
11: mantemThresholdInvariante
12: backTrack
13: return

14:

15: TERMINATE_msg_tratamento(){recebida do cabeça}
16: registrado TERMINATE_msg recebida do superholon
17: backTrack
18: return

19:

20: VALUE_msg_tratamento(valor, (v?+1 i, d?+1 i ind)){recebida pelo subholon h? k a partir do
AO? i}

21: if TERMINATE_msg não recebida do cabeça then
22: adicionar (v? k, valor) a CurrentContext {recebido por um holon parte} ou
23: adicionar (x? i j, valor) a CurrentContext {recebido por um holon cabeça, ?j}
24: adicionar (v?+1 i, d?+1 i ind) a CurrentContext
25: mantemThresholdInvariante
26: backTrack
27: end if

28: return

29:

30: COST_msg_tratamento(d, LB, UB){recebida pela cabeça do holon h? i a partir do AO? i}
31: lb(d) ? LB
32: ub(d) ? UB
33: mantemSubholonThresholdInvariante
34: mantemThresholdInvariante
35: envia READY_msg(lb, ub, Dv? i) para cabecaDeParte(h? i)
36: backTrack
37: return



132

Algorithm 6.3 HCOMA ADOPT - Manutenção das Invariâncias

1: mantemThresholdInvariante

2: if threshold &amp;lt;LB then

3: threshold ? LB
4: end if

5: if threshold &gt; UB then

6: threshold ? UB
7: end if

8: return

9:

10: mantemAlocaçãoInvariante

11: while threshold &gt; ?(di) +
?

h??1 l?Subholons
t(di, h??1 l) do

12: escolha h??1 l ? Subholons onde ub(di, h??1 l) &gt; t(di, h??1 l)
13: incrementar t(di, h??1 l)
14: end while

15: while threshold &amp;lt;?(di) +
?

h??1 l?Subholons
t(di, h??1 l) do

16: escolha h??1 l ? Subholons onde t(di, h??1 l) &gt;lb(di, h??1 l)
17: decrementar t(di, h?+1 l)
18: end while

19: enviar THRESHOLD_msg(t(di, h??1 l)) para cada subholon h??1 l
20: return

21:

22: mantemSubholonThresholdInvariante

23: for all d ? Dvi, h??1 l ? Subholons do
24: while lb(d, h??1 l) &gt; t(d, h??1 l) do
25: incrementar t(d, h??1 l)
26: end while

27: end for

28: for all d ? Dvi, h??1 l ? Subholons do
29: while t(d, h??1 l) &gt; ub(d, h??1 l) do
30: decrementar t(d, h??1 l)
31: end while

32: end for



133

Algorithm 6.4 Algoritmo de Otimização do HCOMA ADOPT

1: AO? i(c? i, lb? i, ub? i, d? i ind)
2: Entrada:

3: - restrição n-ária c? i
4: - lb? i[k][l] correspondendo a cada d??1 k l ? Dv??1 k associado a cada subholon h??1 k de

h? i
5: - ub? i[k][l] correspondendo a cada d??1 k l ? Dv??1 k associado a cada subholon h??1 k de

h? i
6: - É pressuposto que o algoritmo conhece o conjunto de restrições locais F? i associado ao

superholon h? i
7: Saída:

8: - os limitantes LB e UB correspondendo ao valor d? i ind ? Dv? i serão tais que

9: UB ? minl(
M?i
?

j=1

f?ij(d??1 k l) +
?

k

ub?i[k][l])

10: LB ? minl(
M?i
?

j=1

f?ij(d??1 k l) +
?

k

lb? i[k][l])

11: - o valor d??1 k l de cada variável v??1 k dos subholons de h? i, correspondendo à solução
encontrada.

12: - o valor dx??1 i j m de cada variável local x??1 i j do superholon h? i, correspondendo à
solução encontrada.

13: executa o algoritmo de otimização do holon h? i
14: envia COST_msg(d? i ind, LB, UB) para cabecaDe?(h? i){onde d? i ind representa o valor

de v? i}
15: for all h??1 k = subholonDe(h? i) do
16: envia VALUE_msg(d??1 k l, (v? i, d? i ind)) para h??1 k{cada subholon parte h??1 k de h? i}

ou
17: VALUE_msg(d??1 i j m, (v? i, d? i ind)) para h??1 k{o subholon cabeça h??1 k de h? i, ?j}
18: end for

19: return



134

também recursivo por natureza. Além disso, ele chama cada algoritmo de otimização uma

única vez, o que sugere uma maior eficiência.

Formalização O meta-algoritmo proposto possui 3 fases e 4 mensagens, que estão descritas

no Algoritmo 6.5. Além das mensagens UTIL e VALUE que são originais do algoritmo DTREE

(vide Seção 5.4), foram criadas também as mensagens READY e SOLUTION. Tal como a men-

sagem homônima READY do primeiro HCOMA, ela também é ligada à atividade de agregação

das informações no holon cabeça, mas neste caso é utilizada para sincronizar a chamada de

cada algoritmo de otimização. Assim, esta invocação que é feita uma única vez e após todos os

subholons parte do superholon considerado terem preparado suas informações de entrada.

Quanto à mensagem SOLUTION, ela apenas explicita o registro das soluções parciais das

diversas variáveis holônicas e locais dentro de um certo superholon, de modo a facilitar seu

acesso posterior na fase 3. Assim, ela melhora a estruturação e a leitura do algoritmo, sem

alterar sua lógica de funcionamento, que é a mesma do DTREE.

Parte-se do pressuposto de que um algoritmo de otimização genérico e centralizado esteja

disponível dentro do escopo de cada superholon, e que ele seja correto e completo. Além disso,

é exigido também que ele siga o Algoritmo 6.6, respeitando o protocolo especificado pelas Eq.

6.10 e 6.11 na sua integração com este meta-algoritmo.

O meta-algoritmo possui também 3 fases como o algoritmo DTREE em que ele foi baseado,

mas estas fases são divididas de forma diferente, enfatizando o processo de obtenção do ótimo

global (fase 2).

A fase 1 (da linha 2 até a 9) é um processo de baixo para cima, que se inicia com os

holons atômicos e se propaga para cima até o holon global através das mensagens UTIL. Em

cada superholon seu algoritmo de otimização correspondente é chamado após o recebimento

de todas as mensagens READY vindas dos seus subholons. Depois da solução, cada subholon

parte fica ciente do seu valor para a solução parcial encontrada, bem como o subholon cabeça

sabe da solução parcial de todas as variáveis locais do seu superholon através da mensagem

SOLUTION. A mensagem UTIL informa o cabeça correspondente sobre a melhor utilidade

para cada atribuição.

Na fase 2 (da linha 27 até a 30) o holon global possui as utilidades totais do problema

associadas a cada valor de sua variável holônica emergente. Isto significa que ele tem a melhor

utilidade obtida para cada valor do domínio de sua variável. Assim, ele escolherá o valor maior,

que representará o valor ótimo da função objetivo global, enquanto o valor associado de sua



135

variável é a primeira atribuição da solução completa.

Finalmente, na fase 3 (da linha 31 até a 37) o holon global enviará o valor desta solução

para todos os seus subholons via uma mensagem VALUE. Através da utilização deste valor,

cada subholon parte determinará seu próprio valor dentro da solução final, enquanto o sub-

holon cabeça determinará os valores das variáveis locais do seu superholon, lançando mão da

estrutura de dados SolucaoHolonica, construída com o uso das mensagens SOLUTION, e tam-

bém da SoluçaoLocal. Recursivamente cada um destes holons enviará seu respectivo valor de

solução para seus subholons também através de mensagens VALUE. Esta fase é um processo de

cima para baixo, que é iniciado pelo holon global, se propaga até os holons atômicos, quando

finalmente o meta-algoritmo termina.

A Fig. 22 sintetiza o HCOMA DPOP. Ao contrário do HCOMA ADOPT, que é assíncrono,

neste caso faz sentido o eixo de tempo mostrado nesta figura, indicando a evolução do meta-

algoritmo tanto na fase 1 quanto na fase 3.

Já que o HCOMA DPOP é baseado no algoritmo DTREE, a prova de que este meta-

algoritmo é correto e completo é consequência direta de que o algoritmo DTREE já o seja.

A prova disso está no Anexo B. Além disso, ele tem o número de mensagens linear com relação

ao número de agentes (aqui holons), tal como o DTREE (Petcu and Faltings, 2004).

Figure 22: Ilustração do HCOMA DPOP

6.6 Representação XML de Instâncias de HCOP

Seguindo a mesma ideia usada para o DCOP e mostrada na Seção 5.7, neste trabalho foi

criada uma extensão XCSP para a representação de instâncias do HCOP a partir do formato



136

Algorithm 6.5 HCOMA DPOP

1: HCOMADPOP(H, R, V, Dv, X, Dx, E, F, AO)
2: Fase 1: Computação da Utilidade

3: for all h0 i ? H0 and not cabeca(h0 i) do
4: for all ind ?{1, . . . , | Dv0 i |} do
5: MelhorUtil0 i[ind] ? utilidade atômica conhecida
6: end for

7: envia READY_msg(MelhorUtil0 i, Dv0 i) para cabecaDeParte0(h0 i)
8: end for

9: return

10: READY_msg_tratamento(MelhorUtil, Dv??1 k){recebida pelo cabeça do holon h? i a par-
tir do subholon h??1 k}

11: for all l ?{1, . . . , | Dv??1 k |} do
12: utilidade? i[k][l] ? MelhorUtil[l]
13: end for

14: if READY_msg recebida de h??1 l,?l, h??1 l = parteDe?(h? i) then
15: for all d? i ind ? Dv? i do
16: c? i ?restrição(d? i ind = E? i(v??1 ?))
17: call AO? i(c? i, utilidade? i, d? i ind)
18: end for

19: end if

20: return

21: UTIL_msg_tratamento(d? i ind, MelhorUtil){recebida pelo cabeça de h? i do AO? i}
22: MelhorUtil? i[ind] ? MelhorUtil {ind é o índice de d? i ind ? Dv? i}
23: if UTIL_msg recebida para todo d? i ind ? Dv? i then
24: if ? &amp;lt;?max then

25: envia READY_msg(MelhorUtil? i Dv? i) para cabecaDeParte(h? i)
26: else {Holon Global}
27: Fase 2: Otimização Global

28: ind? ? argmaxind(MelhorUtil? i[ind])
29: OtimoUtil ? MelhorUtil? i[ind

?]
30: v?? i ? d? i ind?
31: Fase 3: Término

32: for all h??1 k = parteDe?(h? i) do
33: envia VALUE_msg(v?? i) para h??1 k{cada um de seus subholons}
34: end for

35: end if

36: end if

37: return

38: SOLUTION_msg_tratamento(valor, d? i ind){recebida pelo subholon h??1 k do AO? i}
39: SolucaoHolonica??1 k ou SolucaoLocal??1 k j[d? i ind] ? valor {parte ou cabeça,?j}
40: return

41: VALUE_msg_tratamento(v??+1 j) {recebida pelo holon h? i do seu superholon h?+1 j}
42: v?? i ? SolucaoHolonica? i[v

?
?+1 j] ou x

?
? j l ? SolucaoLocal? j l[v

?
?+1 j] {parte ou

cabeça,?l}
43: if ? &gt; 0 then
44: for all h??1 k = subholonDe?(h? i) do
45: envia VALUE_msg(v?? i) para h??1 k{cada um de seus subholons}
46: end for

47: end if

48: return



137

Algorithm 6.6 Algoritmo de Otimização do HCOMA DPOP

1: AO? i(c? i, utilidade? i, d? i ind)
2: Entrada:

3: - restrição n-ária c? i
4: - utilidade? i[k][l] correspondendo a cada d??1 k l ? Dv??1 k associado a cada subholon

h??1 k de h? i
5: - É pressuposto que o algoritmo conhece o conjunto de restrições locais F? i associado ao

superholon h? i
6: Saída:

7: - o máximo MelhorUtil correspondendo ao valor d? i ind ? Dv? i tal que

MelhorUtil ? argmaxl(
M? i
?

j=1

f? i j(d??1 k l) +
?

k

utilidade? i[k][l])

8: - o valor d??1 k l de cada variável holônica v??1 k dos subholons de h? i, correspondendo à
solução encontrada.

9: - o valor dx??1 i j m de cada variável local x??1 i j do superholon h? i, correspondendo à
solução encontrada.

10: executa o algoritmo de otimização do holon h? i
11: envia UTIL_msg(d? i ind, MelhorUtil) para cabecaDe?(h? i){onde d? i ind representa o

valor de v? i}
12: for all h??1 k = subholonDe?(h? i) do
13: envia SOLUTION_msg(d??1 k l, d? i ind) para parteDe?(h? i){cada um de seus subholons

parte} ou
14: envia SOLUTION_msg(dx??1 i j m, d? i ind) para cabecaDe?(h? i){o subholon cabeça,

?j}
15: end for

16: return



138

distribuído utilizado pela ferramenta FRODO. Esta extensão foi fundamental para a represen-

tação destas instâncias e a realização dos experimentos do Capítulo 8. O Anexo C resume as

características da representação de instâncias de problemas de restrições em geral, e o HCOP

em particular, através de XML.

6.7 Conclusão

Neste capítulo foi apresentado o HCOP, que é uma das contribuições deste trabalho. Ele

foi baseado nos conceitos de agentes holônicos e do modelo DCOP, resultando no problema

holônico HCOP como subclasse do DCOP. Como já mencionado, DCOP se mostrou um modelo

inadequado para enfrentar o objetivo principal deste trabalho, que é o problema planejamento

integrado e otimizado da cadeia de suprimentos da indústria do petróleo.

Por isso foi definido o HCOP, que é um problema holônico distribuído com otimização,

capaz de ser configurado como uma rede híbrida de subproblemas de otimização centralizados,

de acordo com as conveniências de cada caso. A flexibilidade e o caráter geral da sua abor-

dagem permitem a modelagem de problemas não-convencionais que fazem parte da cadeia de

suprimentos da indústria do petróleo. Foi discutido no Capítulo 3 a necessidade de uma função

objetivo não-linear, e as dificuldades em se fazer isso nos modelos convencionais (vide (PINTO;

GROSSMANN, 1994), por exemplo). Entretanto, o HCOP oferece a possibilidade de se utili-

zar funções não-lineares devido à propriedade mais geral da sua função objetivo, tal como o

DCOP. Além disso, sua natureza holônica intrínsica torna o HCOP adequado para modelar pro-

blemas como o planejamento integrado da cadeia de suprimentos, devido às suas propriedades

recursivas.

Finalmente, neste capítulo foram desenvolvidos dois meta-algoritmos (HCOMAs) para a

solução do HCOP. Eles foram baseados em ADOPT e DPOP, que são algoritmos para DCOP

conhecidos e utilizados dentro da comunidade acadêmica. ADOPT tem como vantagem o pro-

cessamento síncrono entre diferentes níveis, resultando em um maior paralelismo no tratamento

dos diversos algoritmos de otimização. Por outro lado, DPOP se adequa melhor às característi-

cas do HCOP, pois, sendo baseado em programação dinâmica, é também recursivo por natureza.

Além disso, ele chama cada algoritmo de otimização uma única vez, o que sugere uma maior

eficiência.

O modelo holônico desta tese não considera os subholons multiparte, como já mencionado

neste capítulo. Portanto, o grafo holônico associado, onde cada nó é formado por cada um dos

holons, possui uma estrutura em árvore. Em uma análise inicial, a exclusão deste tipo de holon



139

parece ser uma simplificação exagerada do modelo, visando sua redução a uma estrutura em

árvore. Entretanto, levando em conta as características do HCOP, foi mostrado que a utilização

do conceito de holon multiparte não é só dispensável, mas desvantajosa. Neste caso, sem a

possibilidade de representar o problema através da integração de algoritmos de otimização já

disponíveis, ele fica bem mais difícil de ser solucionado. Portanto, a inclusão do holon multi-

parte exigiria um novo modelo diferente do HCOP, que teria outros presupostos específicos e um

processo de solução diverso daquele do HCOMA. Entretanto, neste modelo multiparte um novo

HCOMA poderia ser desenvolvido também a partir tanto do ADOPT quanto do DPOP, pois

ambos são algoritmos baseados em pseudo-árvore. Portanto, da mesma forma que o algoritmo

DTREE evoluiu para o DPOP (vide Seção 5.4) através da transformação do grafo associado

para uma pseudo-árvore, o que é possível para qualquer grafo (vide (DIESTEL, 2005)), é pos-

sível adaptar o meta-algoritmo HCOMA DPOP seguindo a mesma linha. Assim, esta melhoria

incluiría holons multiparte e suportaria uma topologia genérica tal como a do DPOP. Como o

HCOMA DPOP foi, na verdade, baseado em uma versão original deste algoritmo (DTREE), ele

teria que ser baseado no DPOP atual. O mesmo racionício poderia ser utilizado com relação ao

algoritmo ADOPT, resultando em um HCOMA ADOPT expandido. Assim, ambos HCOMAs

novos lidariam com subholons multiparte.

No próximo capítulo o problema de integração otimizada da cadeia de suprimentos do

petróleo será finalmente modelado como um HCOP, como era uma das principais contribuições

deste trabalho.



140

7 Modelagem do Planejamento

Integrado da Cadeia de Suprimentos

da Indústria do Petróleo como um

HCOP

7.1 Introdução

Como mencionado antes, o problema de planejamento integrado da cadeia de suprimentos

é um candidato real a ser modelado como um HCOP. Em (MARCELLINO; SICHMAN, 2010) este

problema foi modelado como um DCOP, onde a função objetivo é o lucro total em toda a cadeia.

Foi utilizada uma abordagem holônica, onde alguns holons, como os Planejadores de Transporte

e os Produtores de Derivados, encapsulam otimizadores centralizados.

Um modelo de organização holônica pode ser construído de acordo com critérios geográ-

ficos, levando em conta o nível de integração do transporte. Assim há um holon global, que

contém vários holons continentais, que, por sua vez, são compostos de holons região. Estes úl-

timos holons podem conter subholons tais como refinarias, que são responsáveis pela produção

de produtos derivados de petróleo, terminais de distribuição, que armazenam estes produtos, e

plataformas de extração de petróleo, que produzem óleo cru (matéria-prima). Todas as áreas

são ligadas por modais de transporte, como o marítimo (navios) e o dutoviário (oleodutos), e

cada área possui uma entidade específica para cuidar de sua logística, que é responsável pelo

planejamento do transporte de produtos.

Em todos os níveis da cadeia de suprimentos o setor de logística é o “cabeça” de cada

holon, i.e., a logística interna para o holon refinaria ou terminal, a logística regional para o

holon região, e assim por diante, até a logística global para o holon global. Cada logística é

responsável pelo balanço de produtos entre os fornecedores e os clientes, e gerencia o plane-

jamento de transporte. O papel fornecedor se refere a qualquer entidade que proveja produtos

para outras entidades da cadeia, tal como uma refinaria, enquanto o papel cliente é desempen-



141

hado por qualquer entidade que necessite destes produtos, tal como um terminal. A diferença

entre disponibilidade e necessidade de um produto representa a variável holônica emergente do

holon correspondente.

Quanto mais perto do topo, maior o escopo espacial dos holons correspondentes. Da mesma

forma, quanto mais perto do topo, mais longo o período de tempo considerado pelo “cabeça”

logística no seu planejamento. Assim, os holons resultam de uma discretização espacial e tem-

poral ao longo de níveis de abstração crescente.

7.2 Definição do Problema

Este problema focaliza uma típica cadeia de suprimentos da indústria do petróleo, que se

inicia com a extração do óleo cru, e termina quando os produtos derivados deste óleo são entre-

gues a companhias distribuidoras, que são consideradas aqui como clientes finais. Assim, todas

as atividades que ocorrem antes, tais como exploração e perfuração de poços de petróleo, assim

como aquelas atividades que ocorrem depois, tais como a entrega de produtos para os postos de

combustíveis, estão fora do escopo deste trabalho. O fornecimento de petróleo e seus derivados

deve ser feito preferencialmente pela própria companhia de petróleo, que pode ser uma única

empresa verticalizada ou um conjunto de empresas que trabalham de forma cooperativa1 dentro

da área de petróleo. Daqui por diante denominaremos Empresa Estendida (EE) a situação geral

que contempla ambos os casos. Se necessário ou conveniente, uma EE pode comprar ou vender

petróleos e/ou derivados através de contratos com empresas localizadas em outros continentes.

No último caso, ela pode comprar do Spot Market (SM), que satisfaz quaisquer demandas ex-

tras de petróleo e seus derivados a preços mais altos, ou vender para ele quaisquer estoques

excedentes destes itens a preços mais baixos, dentro de limites oriundos de restrições de tempo

ou disponibilidade.

A área de atuação da EE se espalha geograficamente, e este espaço físico pode ser vi-

sualizado como uma partição de regiões, que estão por sua vez agrupadas em continentes, e

estes últimos finalmente formam a área global de atuação da EE. Uma região é dividida em

áreas comerciais ou áreas de extração de petróleo. Uma refinaria ou terminal de distribuição

é responsável por cada uma das áreas do primeiro tipo, que atendem clientes finais específicos

(companhias de distribuição). Por outro lado, cada uma das áreas do segundo tipo é composta de

plataformas de extração associadas a campos de petróleo, que produzem um certo tipo de petró-

leo com uma certa taxa de extração. Levando em conta os tempos característicos das curvas de

1O cenário de uma cadeia de suprimentos formada por empresas que competem entre si não é tratado neste
trabalho.



142

declínio da produção médias em relação ao horizonte de planejamento do problema analisado

neste trabalho, que se adequa ao nível tático, a taxa de extração foi considerada constante.

Todas as áreas são conectadas por modais de transporte, que são de dois tipos: navios

e oleodutos. Além disso, cada área possui uma entidade de logística, que é responsável pelo

planejamento de transporte dos petróleos e seus derivados. Todos os tipos de petróleo (matérias-

primas) e seus derivados (produtos finais) serão denominados, daqui por diante, simplesmente

“produtos”. Todo o transporte é feito através de um conjunto de arcos, que conectam duas

entidades da cadeia e possuem uma capacidade máxima de transporte associada. Esta entidade

pode ser uma base (plataforma, refinaria ou terminal), uma região, um continente ou o SM. Se

as entidades conectadas pertencem a uma mesma região, então o transporte é responsabilidade

da logística regional. Caso contrário, ele é responsabilidade da logística continental, ou mesmo

da logística global, dependendo do escopo do arco em particular.

Como as diferentes entidades da cadeia estão conectadas através de uma rede de transporte,

elas podem cooperar umas com as outras a fim de suprir as diferentes áreas comerciais, ao

invés de se restringir às suas próprias áreas. Neste trabalho é considerado como premissa que

o modal oleoduto é utilizado dentro de cada região, enquanto o modal navio interliga estes

últimos dentro de um mesmo continente, e também os continentes entre si e com o SM.

Uma refinaria pode produzir múltiplos derivados, e o faz de acordo com diferentes planos

de produção, que, em geral, se caracterizam pela produção de uma proporção bem definida de

cada um dos derivados a partir do processamento de um tipo particular de petróleo. A Fig. 23

ilustra um exemplo do problema considerado.

7.3 Modelo de Referência

7.3.1 Modelo Multi-Período

O modelo propõe uma abordagem multi-período, onde o sistema da cadeia de suprimen-

tos evolui ao longo de um dado horizonte de tempo ?, que é dividido em períodos P?, sendo

T? o número total de períodos em ?. O período P? e o respectivo número total de períodos

T? dependem do nível holônico ? associado. O horizonte de tempo ? é o mesmo para todo

o sistema, mas o período P? aumenta com o crescimento de ?, enquanto T? diminui com o

crescimento de ?, de acordo com a seguinte relação de invariância:

P? ·T? = ? (7.1)



143

Figura 23: Ilustração do Escopo do Problema Tratado



144

No início de cada período decisões devem ser tomadas baseadas tanto nos parâmetros as-

sociados àquele período quanto em parâmetros de períodos anteriores. A sequência de tais

decisões ao longo de ? será chamada uma estratégia de decisão E, onde decisão significa a

atribuição de valores a todas as variáveis de decisão do modelo, que serão descritas na Seção

7.3.2.

7.3.2 Variáveis do Modelo

Antes de apresentar as variáveis do modelo para cada uma destas categorias, serão discuti-

dos os domínios das variáveis.

Domínios Como o HCOP é uma subclasse do DCOP, ele herda a propriedade de domí-

nios das variáveis como conjuntos discretos e finitos, como é característica da programação de

restrições em geral.

Qualquer domínio discreto e finito pode ser representado por índices pertencentes a um

subconjunto dos números naturais, i.e., qualquer variável holônica v? i ou local x? i j do HCOP

pode ser representada como:

v? i ? Dv? i, Dv? i ? N

e x? i j ? Dx? i j, Dx? i j ? N

Entretanto, as variáveis reais do problema podem pertencer a um espaço de soluções mais

complexo. No caso do problema de planejamento integrado considerado, ele é um espaço

vetorial sobre o conjunto de inteiros Z de dimensão n, onde n é o número total de produtos

(produtos derivados + petróleos):

Rv? i ? DRv? i, DRv? i ? Z
n

e Rx? i j ? DRx? i j, DRx? i j ? Z
n

Na modelagem de um problema complexo com HCOP é necessário incluir o espaço con-

tendo as variáveis reais do problema, uma para cada variável holônica ou local básicas, associ-

adas a seus respectivos domínios. Para isso, é utilizada uma função de transformação (em geral

não-linear) para cada variável holônica ou local, que permite o mapeamento dos índices básicos

para os vetores reais:

Tv? i : N ?Z
n, Rv? i = Tv? i(v? i)

Tx? i j : N ?Z
n, Rx? i j = Tx? i j(x? i j)

(7.2)



145

Neste espaço real do problema RP , cada elemento Rp ? RP é definido por um vetor de

produtos com o seguinte formato:

Rp =

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

qtd_derivado1

· · ·

qtd_derivadod

· · ·

qtd_derivadonderivados

qtd_petro?leo1

· · ·

qtd_petro?leoo

· · ·

qtd_petro?leonpetro?leos

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

(7.3)

onde d ? ? (produtos derivados do petróleo), o ? O (tipos de petróleo) e nderivados +

npetro?leos = n.

Variáveis de Decisão Como já mencionado, uma refinaria pode produzir múltiplos produtos

derivados do petróleo, e faz isso de acordo com diferentes planos de produção, que são car-

acterizados pelo processamento de um tipo bem definido de petróleo, e pela produção de uma

proporção bem definida de cada derivado resultante a partir do processamento deste petróleo.

Esta escolha associada à atividade de produção representa a primeira categoria de variável de

decisão do modelo, ou seja, o plano de produção adotado por cada refinaria durante cada período

de tempo ?. Para cada refinaria deve ser gerado um conjunto discreto de planos de produção para

cada período ? pelo planejador de produção de cada refinaria, que é um sistema de otimização

de produção já disponível, que leva em conta todas as especificidades da refinaria, suas unidades

de produção, capacidades e restrições operacionais.

Além disso, cada refinaria ou terminal é responsável pelo gerenciamento dos estoques de

cada produto, ou seja, cada tipo de petróleo ou produto final derivado de petróleo. Assim,

a outra categoria de variável de decisão do modelo é o estoque de cada produto ou petróleo

em cada refinaria ou terminal ao final de cada período de tempo ?. O sistema de gerencia-

mento de estoques de cada terminal e refinaria define para cada produto p e cada período ? um

domínio discreto de valores de estoque, que varia entre um valor mínimo e um valor máximo,

baseados em limites operacionais e resultados estatísticos associados ao conceito de estoque

de segurança, como descrito na Seção 2.2.4. Assim, o limite inferior representa o estoque de



146

segurança, enquanto o superior o limite operacional da capacidade de estocagem. A política de

estoque a ser adotada deve garantir que o correspondente nível de estoque será igual ao valor

escolhido ao final do período ?, reabastecendo ou escoando a quantidade necessária do produto

correspondente no estoque.

Assim, cada holon atômico deve possuir uma destas duas variáveis de decisão, que serão

descritas com mais detalhes a seguir:

1. Plano de Produção

• A variável planr ? representa o plano de produção adotado pela refinaria r durante o

período de tempo ? ?{1, . . . , T }.

A variável real associada ao plano de produção é dada por um vetor Rplanr? ? RP com o

formato (vide Eq. 7.3):

Rplanr? =

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

qtd_derivado1r?
· · ·

qtd_derivadodr?
· · ·

qtd_derivadonderivadosr?
0

· · ·

qtd_petro?leoor?
· · ·

0

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

onde qtd_petro?leoor? representa a quantidade do único petróleo o que entra no processo de

produção (refino) da refinaria r durante o período de tempo ?. No outro lado, aparecem também

as quantidades de cada derivado d que são produzidas pela mesma refinaria durante o mesmo

período de tempo.

Assim, estas quantidades de entrada e saída associadas ao processo de refino estão ligadas

diretamente à variável básica planr ? através das seguintes relações:

Entradaro? = Projec?a?oo(Rplanr?) = Projec?a?oo(Tplanrp?(planr ?)) = Entrao(planr ?)

(7.4)



147

Saidard? = Projec?a?od(Rplanr?) = Projec?a?od(Tplanrp?(planr ?)) = Said(planr ?) (7.5)

As funções Entrao e Said são obtidas da composição entre a transformação de uma var-

iável básica em sua variável real correspondente (Eq. 7.2) e a projeção cartesiana sobre a

dimensão associada a um dado produto (petróleo ou derivado, respectivamente).

Os domínios básicos e os domínios reais correspondentes são os seguintes:

• planr ? ? Dplanr ? N

– Dplanr = {1, . . . , i, . . . , nPlanos}

• Rplanr ? ? DRplanr p ? Z
n

– DRplanr = {p1 r, . . . , pi r, . . . , pnPlanosr r},

onde pi r =

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

qtd_derivado1i r
· · ·

qtd_derivadodi r
· · ·

qtd_derivadonderivadosi r
qtd_petro?leo1i r

· · ·

qtd_petro?leooi r
· · ·

qtd_petro?leo
npetro?leos
i r

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

e ?o ? O, ?k ? O : o 6= k ? qtd_petro?leooi =0 ? qtd_petro?leo
k
i 6= 0.

Pode ser observado que o domínio dos planos de produção para cada refinaria é independente

do tempo, de modo que apenas a variável plano depende do tempo.

2. Estoque

• A variável estqb ? representa o nível de estoque de cada produto p (derivado ou tipo

de petróleo) na base b (refinaria r ou terminal t) ao final do período de tempo ? ?

{1, . . . , T }.



148

Apesar da base poder ser também uma plataforma, este tipo de base não aparece como possibil-

idade para o índice correspondente da variável estqb ? , pois neste trabalho foi considerado como

premissa que as plataformas não possuem capacidade de estoque do petróleo que produzem,

que deve escoar completamente através de oleodutos ou navios a medida que é extraído.

Os domínios básicos e os domínios reais correspondentes são os seguintes:

• estqb ? ? Destqb ? ? N

– Destqb ? = {1, . . . , m}

• Restqb ? ? DRestqb ? ? Z
n

– DRestqb ? = {estoqueMinb ?, . . . , estoqueMaxb ?}, onde:

estoqueMinb ? =

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

estoqueMin_derivado1b ?
. . .

estoqueMin_derivadodb ?
. . .

estoqueMin_petro?leo1b ?
. . .

estoqueMin_petro?leoob ?
. . .

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

,

estoqueMaxb ? =

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

estoqueMax_derivado1b ?
. . .

estoqueMax_derivadodb ?
. . .

estoqueMax_petro?leo1b ?
. . .

estoqueMax_petro?leoob ?
. . .

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

e

m = md · mo, onde

md =
?

d

(estoqueMax_derivadodb ? ?estoqueMin_derivado
d
b ? + 1)

mo =
?

o

(estoqueMax_petro?leoob ? ?estoqueMin_petro?leo
o
b ? + 1)

Diferentemente do plano de produção, o domínio da variável estoque é dependente do tempo,

pois seus limites podem mudar de acordo com restrições operacionais como, por exemplo, a

manutenção preventiva de tanques.



149

O domínio real da primeira variável é do tipo Conjugado, em que todos os produtos associ-

ados com o plano de produção aparecem conjuntamente em cada vetor real dentro do domínio.

Já o domínio real da segunda variável é Disjunto. Assim, apenas um produto específico

(derivado ou petróleo) aparece em cada elemento do domínio e os vetores de produto são inde-

pendentes entre si. Se fossem considerados todos os produtos de uma única vez, o domínio total

seria formado pelo produto cartesiano de todos os vetores de produto originais, o que resultaria

em um domínio, em geral, muito grande. Por isso, no caso do domínio do estoque, valeu a pena

representá-lo de uma forma mais prática, como de fato ocorreu neste modelo. Especificamente

no submodelo logístico, o nível holônico fundamental recebe apenas os valores de estoque mín-

imo e máximo para cada produto. Como este submodelo é MILP (vide Seção 3.5.1), ele trata

de forma eficiente este intervalo sequencial de valores inteiros, como veremos mais adiante na

Seção 7.3.5.

Variáveis Holônicas Emergentes As variáveis emergentes do holon h? i representam a

disponibilidade ou necessidade de cada produto no holon correspondente:

• v? i ? : diferença entre as quantidades de saída e entrada de cada produto com relação à

holon h? i durante o período ?.

O domínio real destas variáveis é do tipo Conjungado, como as variáveis plano de produção.

Variáveis Locais As variáveis locais são os fluxos de transporte de produtos entre cada par

de subholons de um mesmo nível, dentro de um holon considerado:

f? i j ? : fluxo de transporte do produto p, durante o período ? e entre os subholons h? i e h? j

associados a um arco de transporte correspondente.

Os domínios básico e real correspondentes são os seguintes:

• f? i j ? ? Df? i j ? ? N

– Df? i j ? = {1, . . . , w}

• Rf? i j ? ? DRf? i j ? ? Z
n

– DRf? i j ? = {pzero, . . . , Cp_Max? i j ?}, onde pzero ? Z
n é o vetor nulo de produtos

e Cp_Max? i j ? é o vetor representando a capacidade máxima de transporte de cada

produto p associado ao arco de transporte correspondente, i.e.:



150

Cp_Max? i j ? =

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

Cp_Max_derivado1? i j ?
· · ·

Cp_Max_derivadod? i j ?
· · ·

Cp_Max_petro?leo1? i j ?
· · ·

Cp_Max_petro?leoo? i j ?
· · ·

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

?

e

w = wd · wo, onde

?

d

(estoqueMax_derivadodb ? ?estoqueMin_derivado
d
b ? + 1) e

?

o

(estoqueMax_petro?leoob ? ?estoqueMin_petro?leo
o
b ? + 1)

O domínio real destas variáveis é do tipo Disjunto, como as variáveis estoque. Este domínio

é especificado pela capacidade máxima de transporte associada ao arco de transporte correspon-

dente, que depende do produto e do tempo. Tal como a variável estoque, esta capacidade podem

mudar de acordo com restrições operacionais como, por exemplo, a manutenção preventiva de

oleodutos.

7.3.3 Modelo Holônico

O problema do planejamento integrado da cadeia de suprimento do petróleo é baseada nos

seguintes níveis holônicos:

• o nível 4 que representa a empresa estendida (holon global);

• o nível 3 contém os continentes;

• o nível 2 consiste das regiões;

• o nível 1 é formado pelas bases (refinarias, terminais de distribuição e plataformas de

petróleo);

• o nível 0 é o fundamental, onde estão os holons atômicos e são representadas as funções

internas das bases (por exemplo, a unidade de produção de uma refinaria).

Estes níveis holônicos representam a topologia do problema em particular, enquanto os sub-

modelos de otimização (logísticos e de produção) são definidos à parte (vide Seção 7.3.5). O



151

Figure 24: Modelo Holônico do Problema

submodelo de produção é associado ao nível fundamental, ou seja, ao nível 0, onde estão as

unidades de produção, sendo parametrizado de acordo com as particularidades de cada refina-

ria. Por outro lado, o submodelo logístico é recursivo e único, sendo, portanto, independente do

nível holônico, como será visto na Seção 7.3.5.

Como já foi discutido na introdução, o modelo holônico permite uma agregação espacial

de acordo com critérios geográficos. A definição de um holon leva em conta também o nível de

integração dos transportes. Assim, há um holon global, que contém vários subholons continen-

tais, que, por sua vez, são compostos de subholons região. Estes últimos holons podem conter

subholons, tais como refinarias e terminais de distribuição (vide Fig. 24).

Por outro lado, este mesmo modelo holônico permite também uma agregação temporal, e à

medida que os holons se aproximam do holon global, eles gradualmente consideram períodos

de tempo de planejamento mais longos. De fato, a logística interna é responsável somente

por uma refinaria ou terminal em uma base diária, a logística regional cuida de uma região

inteira com o mês como a unidade de tempo de planejamento, por exemplo, e assim por diante,

até a logística global que focaliza a companhia como um todo na sua relação com o mundo

exterior, com horizonte de planejamento de vários meses. A Fig. 25 ilustra um exemplo de

agregação temporal. Neste exemplo, na camada 0 aparecem 8 holons com tempos diferentes

associados a uma mesma base (por exemplo, uma refinaria), na camada 1 são representados 4

holons com tempos diferentes associados à região da refinaria, na camada 2 há 2 holons com

tempos diferentes associados ao continente correspondente, e finalmente na camada 3 está o



152

Figure 25: Exemplo de Agregação Temporal

holon global com um único tempo, que é o horizonte de planejamento ?. Cada par de holons

na camada 0 se agrega em um único com o período equal à soma dos períodos dos subholons, e

assim por diante, até o holon global, de acordo com a Eq. 7.1, i.e.:

P3 ·T3 = P2 ·T2 = P1 ·T1 = P0 ·T0 = ?

Dentro de um mesmo holon, as responsabilidades no espaço, no tempo e em outras funções

pertinentes são divididas entre seus subholons sem redundância dentro do escopo importante

para o problema. Assim, estas fatias de responsabilidade dadas a cada subholon são disjuntas e

sua união forma o escopo completo do problema. Em outras palavras, este escopo é particionado

entre todos os holons atômicos, levando este particionamento para o próximo nível holônico,

até o holon global, que engloba o escopo total. A Fig. 26 ilustra esta ideia, que em seguida será

mais detalhada.

Agregação Holônica Como já foi visto, os holons se agregam em um mesmo superholon,

que passa a ter o espaço equivalente à junção dos espaços dos seus subholons (por exemplo

o holon região é a união dos espaços das suas bases). Por outro lado, este mesmo superho-

lon agrega todo o tempo dos seus subholons, resultando em um período total igual à soma dos

períodos de tempo dos seus subholons. O domínio da variável holônica emergente é obtido

diretamente da variável holônica do seu “cabeça” (restrição emergente), que, por sua vez, é

construído a partir dos domínios das variáveis holônicas dos subholons constituintes através da

restrição de agregação (vide Fig. 15). Além disso, a variável emergente tem a mesma ordem de



153

Figura 26: Ilustração de uma Agregação Genérica

grandeza da variável do “cabeça” do holon correspondente, pois na organização holônica esta

última representa este holon para o exterior, e vimos na Seção 6.4.2 sobre o método de compi-

lação que o domínio da variável “cabeça” é formado pelo produto cartesiano dos domínios dos

subholons “parte” associados. Portanto, em princípio o domínio da variável emergente será no

máximo igual ao produto cartesiano dos domínios dos subholons correspondentes, conforme a

Eq. 7.6, onde Dv? i é o domínio da variável emergente do (super)holon h? i, e Dv?-1? representa

o domínio da variável holônica de cada subholon agregado.

Dv? i = Dv?-1?1 × . . .×Dv??1?B?i (7.6)

Segundo a equaçao 7.6, à medida que cresce o nível holônico em direção ao holon global,

o domínio das variáveis holônicas se torna cada vez maior. Entretanto, o HCOP é um caso par-

ticular de CSP, onde o grau de dificuldade para a sua solução depende do número de variáveis,

o número das restrições e os tamanhos dos domínios. Por outro lado, é razoável supor que cada

holon, independente do seu nível, deve ter, em princípio, o mesmo grau de dificuldade para a

solução do seu problema de otimização associado (PO? i). Por isso, neste trabalho foi adotada

uma regra de bom senso, na qual foi considerado que o tamanho do domínio de cada variável

holônica é igual a um valor tamDomMax definido, exceto para as variáveis de decisão, cu-

jos domínios são conhecidos a priori, e são associadas a holons atômicos. Na Eq. 7.7 esta



154

relação de invariância é mostrada, onde tamDomMax ? N e v? i é qualquer variável holônica

emergente.

| Dv? i |= tamDomMax (7.7)

Resolvido o problema do tamanho do domínio, que é construído a partir da agregação

dos subholons do nível inferior, o próximo desafio foi como realizar a construção do domínio

da variável real Rv? i associada a cada variável emergente v? i a partir das variáveis reais dos

subholons agregados (vide Seção 7.3.2). Como o espaço das soluções do problema é o espaço

vetorial Zn e como o domínio das variáveis reais é um conjunto discreto e finito de elementos

deste espaço vetorial, não existe uma ordem pré-definida para criar este domínio, que não é

uma tarefa trivial. Assim, a solução encontrada foi fundamental para o sucesso do modelo,

onde foi definida uma ordem total no sentido algébrico dentro do domínio de cada variável real.

Esta relação de ordem total foi definida a partir da utilidade associada a cada elemento deste

domínio. Formalmente:

?x, y ? DRv? i((utilidade(x) ? utilidade(y) ? x ? y)?(utilidade(y) ? utilidade(x) ? y ? x))

(7.8)

Para construir o domínio DRv? i, que é formado pelo produto cartesiano dos domínios das

variáveis reais dos subholons agregados, qualquer candidato que satisfaça as equações 7.9 e

7.10 é válido, onde a Eq. 7.10 é a Eq. 7.7 aplicada aos domínios reais.

DRv? i ? DRv?-1?1 × . . .×DRv??1?B?i
(7.9)

| DRv? i |= tamDomMax (7.10)

Em particular, utilizando a relação de ordem total (Eq. 7.8), o seguinte domínio real foi

obtido:

DRv? i = {elm0, . . . , elmi, . . . , elmtamanhoDominio?1},

onde elm0 = elmin : elm ? DRv? i e elmin = argminelm(utilidade(elm)),

elmtamanhoDominio?1 = elmax : elm ? DRv? i e elmax = argmaxelm(utilidade(elm)),

elmi ? DRv? i : elmi = utilidade
?1(utilidadei),



155

utilidadei =
(utilMax?utilMin)
tamanhoDominio?1

i + utilMin,

utilMax = utilidade(elmax)

e utilMin = utilidade(elmin)

As utilidades utilMax e utilMin são obtidas pelo algoritmo de otimização centralizado

AO? i correspondente ao holon h? i. Dentre os possíveis candidatos, foi escolhido o que satisfaz

a ordem total definida, com uma diferença pro rata de utilidade entre os elementos sucessivos

dada por (utilMax?utilMin)
tamanhoDominio?1

.

Em seguida é mostrado um exemplo ilustrativo da criação de um domínio real segundo este

procedimento. Sendo dado :

n = 2 (nu?mero de produtos)

tamanhoDom??nio = 3

utilidade

(

x

y

)

= x + 2y

CandidatoDRv =

{(

1

1

)

,

(

0

0

)

,

(

1

0

)

,

(

2

0

)

,

(

2

1

)

,

(

2

2

)

,

(

1

2

)}

Foi obtido o domínio DRv =

{(

0

0

)

,

(

1

1

)

,

(

2

2

)}

, onde utilMin = 0,

utilMax = 6 e (utilMax?utilMin)
tamanhoDominio?1

= 3.

7.3.4 Modelo de Organização

Como resultado das características de um sistema de agentes holônicos, seu modelo de

organização pode ser representado em duas dimensões: organização holônica, que é comum

a todos os sistemas holônicos, e uma organização interna, que é específica a cada domínio

de problema (HILAIRE; KOUKAM; RODRIGUEZ, 2008). A organização holônica foi discutida

inicialmente na Seção 7.3.3. A Fig. 27 ilustra a organização holônica deste problema.

Por outro lado, um mesmo agente pode ter um papel na organização holônica, e um outro

papel na organização interna. A organização holônica é composta basicamente dos papéis

“cabeça” e “parte”, enquanto, em geral, a organização interna consiste de uma maior variedade

de papéis, que são associados a entidades físicas, serviços e funções da cadeia de suprimento.



156

Além destes papéis específicos da organização interna, dois papéis genéricos são compartilha-

dos por vários deles. O primeiro é o papel “fornecedor”, que se refere a qualquer entidade que

forneça produtos a outra entidade da cadeia. O outro é o papel “cliente”, que é desempenhado

por qualquer outra entidade que necessite destes produtos. A Fig. 28 representa os papéis da

organização interna, os relacionamentos entre eles e a relação com os papéis holônicos através

da linguagem de modelagem Moise+ (vide 4.3.3). Assim, a “refinaria” é modelada como um

“terminal” com um “produtor de derivados”, já que ambos possuem uma área “comercial” e

uma de “gerência de estoques”, além de uma “logística interna”. A “logística” é o “cabeça”

do respectivo holon em todos os níveis da cadeia, i.e., a “logística interna” para o holon “re-

finaria” ou “terminal”, a “logística regional” para o holon “região”, e assim por diante, até a

“logística global” para o holon “global”. Cada “logística” é responsável pelo equilíbrio entre

oferta e demanda de produtos entre “fornecedores” e “clientes”, e também pelo planejamento de

transporte de produtos. Quanto ao papel “planejador de produção”, ele é desempenhado dentro

da “refinaria” por um software ou uma equipe de especialistas humanos, que dão suporte ao

papel “produtor de derivados”. O papel “comercial”, por sua vez, é responsável pela previsão

da demanda total para cada derivado na área comercial correspondente.

A arquitetura de agentes holônicos permite que um processo complicado possa ser decom-

posto em processos menores, que são por sua vez decompostos, até que cada um deles possa

ser tratado por um único agente. O agente “cabeça” age como um mediador, que suporta a

comunicação e controle para cada nível do processo de decomposição. Embora seja possível

um modelo com menor granularidade, com agentes representando unidades operacionais da re-

finaria, neste trabalho este refinamento termina dentro da refinaria no “produtor de derivados”,

que disponibiliza um conjunto discreto de planos de produção, que são obtidos do “planejador

de produção” correspondente.

7.3.5 Submodelos

Nesta seção descrevem-se todos os submodelos que fazem parte do sistema completo. Eles

são importantes para o modelo principal, mas têm existência independente. Um é recursivo ao

longo dos diferentes níveis, como o submodelo logístico, enquanto os outros estão apenas no

nível fundamental. Eles são classificados em três categorias, que serão descritas em seguida.

Submodelos de Otimização Os submodelos de otimização fazem parte da definição do

HCOP, são integrados de uma forma distribuída e têm como objetivo resolver os subproblemas

de otimização associados com diferentes holons. Os submodelos de otimização correspondentes



157

Figure 27: Ilustração da Organização Holônica da Cadeia de Suprimentos da Indústria do
Petróleo

Figure 28: Modelo Organizacional do Problema



158

às áreas de logística e de produção são detalhados na sequência.

Submodelo Logístico Aqui será apresentado o modelo matemático para a solução do sub-

problema logístico embutido. Apesar de independente, ele leva em conta as características do

modelo holônico subjacente, de modo a ser utilizado recursivamente nos diversos níveis holô-

nicos do problema principal.

Assim G(V, E) representa um grafo direcionado com V = R?C ?I ?N, onde C e I são

plataformas e terminais, respectivamente, R pode representar uma refinaria no nível fundamen-

tal ou um superholon nos níveis superiores. O conjunto N é constituído de um único elemento

que representa o holon “cabeça”, que se comunica com o mundo exterior. Este vértice está

ligado a todos os demais e representa disponibilidades ou necessidades externas de petróleos e

derivados. O conjunto V é dividido, pois há restrições especiais para cada grupo. Dados dois

vértices i ? V e j ? V , então o par (i, j) pertence ao conjunto E se existe alguma relação entre

estes vértices.

Seja P o conjunto de produtos (petróleos ou derivados) e T o conjunto discreto de períodos

de tempo {1, . . . , T }. Para facilitar a exposição, dividimos a construção do modelo em subse-

ções e discutimos em cada uma delas as variáveis de decisão pertinentes, parâmetros de entrada

e as restrições.

Planos de Produção Um plano de produção é um vetor m ? Z|P |, cujos elementos repre-

sentam entradas e saídas de cada produto em um determinado vértice e instante de tempo. Tais

vetores estão definidos para v ? R?C. Dado v ? R?C e ? ? T, existe um conjunto de planos

de produção possíveis para o par (?, v), que será denotado por P(?, v). Sendo y?,vm a variável de

decisão binária definida para m ? P(?, v), se o plano de produção m é utilizado no par (?, v)

esta variável vale 1, e 0 em qualquer outro caso. Sendo ainda u?,vm a utilidade associada ao plano

m no par (?, v), definimos a seguinte utilidade global:

U =
?

v?R?C,??T

?

m?P(?,v)

u?,vm y
?,v
m . (7.11)

Uma vez que dado um par (?, v) podemos ter apenas um plano de produção, então temos

?

m?P(?,v)

y?,vm = 1 ?v ? V, ? ? T. (7.12)



159

Restrições nos Arcos Fluxo é uma função f : E x T x P ? Z+. Estabelecemos fi j p ? =

f((i, j), ?, p), onde (i, j) ? E. Para cada tripla ((i, j), ?, p) definimos um fluxo como variável

de decisão. Esta é a quantidade, em unidades, do produto p que deve escoar pelo arco (i, j) no

instante de tempo ?. Seja cpij o custo unitário de transferir o produto p por (i, j). Segue daí a

definição de custo logístico:

CL =
?

(i,j)?E

?

p?P

?

??T

fi j p ?ci j p. (7.13)

Como G é direcionado e dados dois vértices i, j é possível que (i, j) ? E e (j, i) ? E

definimos a direção do fluxo como sendo a variável de decisão binária s?,pi,j que assume 1 se o

sentido (i, j) é usado na transferência do produto p no instante ?. Denotamos por vpij a vazão

máxima do produto p no duto (i, j). Segue daí que:

fi j p ? ? s
?,p
i,j v

p
ij ?(i, j) ? E, p ? P, ? ? T. (7.14)

Além disso, não desejamos que produtos sejam transferidos em sentidos opostos em qual-

quer instante de tempo. Portanto estabelecemos

s
?,p
i,j + s

?,p
j,i ? 1 ?(i, j), (j, i) ? E, p ? P, ? ? T. (7.15)

Para evitar que o modelo produza soluções em ciclo, onde o fluxo transita por uma sequên-

cia de vértices antes de voltar ao vértice de origem, consideramos para cada v ? V , p ? P e

? ? T as variáveis de decisão binárias i?,pv e o
?,p
v , onde i

?,p
v = 1 se v recebe p no instante ?.

De forma análoga, o?,pv = 1 se v enviar p em ?. Estas variáveis se relacionam entre si e com

as varíáveis de fluxo conforme as Equações 7.16, 7.17 e 7.18, onde K é um inteiro positivo e

maior do que a soma das vazões dos fluxos incidentes nos vértices de G.

i?,pv + o
?,p
v ? 1 ?v ? V, p ? P, ? ? T (7.16)

?

(i,j)?E:j=v

fi j p ? ? Ki
?,p
v ?(i, j) ? E, p ? P, ? ? T (7.17)

?

(i,j)?E:i=v

fi j p ? ? Ko
?,p
v ?(i, j) ? E, p ? P, ? ? T. (7.18)



160

Estoques Considere as funções E : V x T x P ? Z+ e E : V x T x P ? Z+ que definem

limites mínimo e máximo de estoque para cada tripla (v, ?, p). É claro que 0 ? E(v, p, ?) ?

E(v, p, ?). Escrevemos também E(v, p, ?) = E?,pv e procedemos da mesma forma com E. Seja

e?,pv ? 0 a variável de decisão inteira que define a cada instante ? ? 1 a quantidade de estoque

de p armazenada no vértice v. Admitimos que e0,pv é conhecido. Segue dessas definições a

seguinte restrição:

E
?,p
v ? e

?,p
v ? E

?,p

v ?v ? V, p ? P, ? ? T. (7.19)

Demandas e Relação Emergente Seja d : V x T x P ? Z+ a demanda referente à tripla

(v, ?, p) representada por d(v, ?, p) = d?,pv . Considere ainda N
p como a variável de decisão

inteira que representa a quantidade do produto p excedente (ou deficitária) ao final da otimização

e que deve ser considerada no próximo nível da organização holônica através do “cabeça”.

Se cp é o custo por unidade do produto p, então temos:

RE =
?

p?P

Npcp. (7.20)

Finalmente, sejam N?,pR?C e N
?,p
I variáveis de decisão inteiras que representam o excedente

(ou deficitária) de p no momento ? nos vértices R ? C e I respectivamente. Assim como

Np essas variáveis podem assumir valores negativos, situação na qual entendemos que uma

quantidade do produto p deve ser comprada para atender a demanda nos momentos ? +1, ? +2,

. . . . Ao final da otimização, as diferenças dos produtos a cada instante de tempo devem ser

vendidas (ou compradas) no próximo nível holônico. Formalmente, temos:

?

??T

N
?,p
R?C + N

?,p
I = N

p ?p ? P (7.21)

?

(i,j)?E:j=N

?

??T

f
?,p
ij ?

?

(i,j)?E:i=N

?

??T

f
?,p
ij =

?

??T

N
?,p
R?C + N

?,p
I ?p ? P (7.22)

Restrições de Balanço Para cada par (?, p) as restrições dadas pelas Equações 7.23, 7.24,

7.25 e 7.26 garantem que o sistema é fechado. Não há excesso ou falta de produtos ao final de

cada instante de tempo.



161

Parâmetro Definição
V , E Conjunto de vértices e arestas em G.

R, C, I, N Vértices de refinarias, plataformas, terminais e “cabeça”
P Conjunto de produtos.
T Conjunto de períodos de tempo.

P(?, v) Conjunto de planos de produção para o par (?, v).
u?,vm Utilidade associada ao plano de produção m no par (?, v).
ci j p Custo do transporte de p por (i, j).
v
p
ij vazão máxima de p por (i, j).

E
?,p
v Estoque mínimo de p no vértice v no instante ?.

E
?,p

v Estoque máximo de p no vértice v no instante ?.
cp Custo do produto p.

Tabela 3: Parâmetros de Entrada do Submodelo Logístico

N
?,p
R?C =

?

v?R?C

e(??1),pv ?e
(?),p
v ?d

?,p
v +

?

m?P(v,?)

yv,?m u
v,?
m ?p ? P, ? ? T (7.23)

N
?,p
I =

?

v?I

e(??1),pv ?e
(?),p
v ?d

?,p
v ?p ? P, ? ? T (7.24)

e?,pv = e
(??1),p
v +

?

(i,j)?E:j=v

fi j p ??
?

(i,j)?E:i=v

fi j p ??d
?,p
v +

?

m?P(v,?)

yv,?m u
v,?
m ?v ? R?C, p ? P, t ? T

(7.25)

e?,pv = e
(??1),p
v +

?

(i,j)?E:j=v

fi j p ? ?
?

(i,j)?E:i=v

fi j p ? ?d
?,p
v ?v ? I, p ? P, ? ? T (7.26)

Resumo Nas Tabelas 3 e 4 é apresentado um resumo da notação introduzida nas subse-

ções anteriores com os parâmetros de entrada e as variáveis de decisão do submodelo logístico,

respectivamente. Ao definirmos as variáveis de decisão, explicitamos também seus respecti-

vos domínios. Aparecem tanto variáveis do modelo principal, como, por exemplo, o plano de

produção, quanto variáveis específicas do submodelo logístico.

A seguir é mostrado o modelo de otimização completo, que é a união de todas as restrições

já descritas, onde U, CL e RE são dados por (7.11), (7.13) e (7.20) respectivamente.



162

Variável de Decisão Definição
y?,vm ?{0, 1} 1 se o m plano de produção é aplicado no par (?, v).
fi j p ? ? Z+ Fluxo no arco (i, j) para o par (p, ?).
s
?,p
ij ?{0, 1} 1 se o sentido do fluxo do par (p, ?) é (i, j).
i?,pv ?{0, 1} 1 se v recebe p no instante ?.
o?,pv ?{0, 1} 1 se v envia p no instante ?.
e?,pv ? Z+ Estoque de p em v no momento ?.
Np ? Z Excedente (ou falta) do produto p ao fim da otimização.
N?,pv ? Z Excedente (ou falta) de p em v no momento ?.

Tabela 4: Variáveis de Decisão do Submodelo Logístico

max z = U + RE ?CL (7.27)
?

m?P(v,?)

y?,vm = 1 ?v ? V, ? ? T (7.28)

fi j p ? ? s
?,p
i,j v

p
ij ?(i, j) ? E, p ? P, ? ? T (7.29)

s
?,p
i,j + s

?,p
j,i ? 1 ?(i, j), (j, i) ? E, p ? P, ? ? T(7.30)

i?,pv + o
?,p
v ? 1 ?v ? V, p ? P, ? ? T (7.31)

?

(i,j)?E:j=v

fi j p ? ? Ki
?,p
v ?(i, j) ? E, p ? P, ? ? T (7.32)

?

(i,j)?E:i=v

fi j p ? ? Ko
?,p
v ?(i, j) ? E, p ? P, ? ? T (7.33)

E
?,p
v ? e

?,p
v ? E

?,p

v ?v ? V, p ? P, ? ? T (7.34)
?

??T

N
?,p
R?C + N

?,p
I = N

p ?p ? P (7.35)

?

(i,j)?E:j=N

?

??T

fi j p ? ?
?

(i,j)?E:i=N

?

??T

fi j p ? =
?

??T

N
?,p
R?C + N

?,p
I ?p ? P (7.36)

N
?,p
R?C =

?

v?R?C

e(??1),pv ?e
(?),p
v ?d

?,p
v +

?

m?P(v,?)

yv,?m u
v,?
m ?p ? P, ? ? T (7.37)

N
?,p
I =

?

v?I

e(??1),pv ?e
(?),p
v ?d

?,p
v ?p ? P, ? ? T (7.38)

e?,pv = e
(??1),p
v +

?

(i,j)?E:j=v

fi j p ??
?

(i,j)?E:i=v

fi j p ??d
?,p
v +

?

m?P(v,?)

yv,?m u
v,?
m ?v ? R?C, p ? P, ? ? T

(7.39)



163

e?,pv = e
(??1),p
v +

?

(i,j)?E:j=v

fi j p ? ?
?

(i,j)?E:i=v

fi j p ? ?d
?,p
v ?v ? I, p ? P, ? ? T (7.40)

Submodelo de Produção Ao contrário do submodelo logístico, o submodelo de otimização

da produção das refinarias não foi considerado diretamente neste trabalho. Caso contrário, um

modelo analítico de produção de uma refinaria teria que ser implementado, visando uma inte-

gração automática na solução do problema de planejamento integrado. Entretanto, foi utilizado

um recurso disponível no modelo do HCOP, devido ao fato dele ser um caso especial de CSP

(vide Seção 3.5.3). Como esta abordagem se baseia em variáveis com domínios discretos e

finitos, foi aplicado o método de Compilação já apresentado na Seção 6.4. Assim, o domínio da

variável de decisão plano de produção (vide Seção 7.3.2) para cada refinaria foi definido com

um conjunto de soluções do problema de otimização de produção da refinaria correspondente.

Este método permite o uso tanto dos resultados de uma aplicação computacional real destinada

a este fim quanto de informações disponíveis com o especialista da área de planejamento da

produção de uma refinaria. Neste trabalho foi utilizada a primeira opção com um submodelo de

produção já disponível, que funcionou como um modelo substituto off-line (vide Seção 3.4.2).

Este último é um método alternativo para a geração de uma região viável do espaço de soluções

a ser utilizada no modelo principal. Esta abordagem é intensiva em termo de recursos, mas uma

vez que as soluções são geradas off-line, elas podem ser incorporadas pelo modelo principal,

que se adequa naturalmente a este tipo de integração.

Este submodelo de produção tem como objetivo a enumeração de campanhas de produção,

que serão usadas como unidades de atribuição no problema de planejamento integrado principal

(SUKOYO; MATSUOKA; MURAKI, 2004). Assim, neste último o período de tempo do nível mais

alto é composto de campanhas cíclicas, que são geradas no nível inferior (PAPAGEORGIOU; PAN-

TELIDES, 1996). A diferença no modelo proposto é que a escolha das campanhas, assim como a

escolha das outras variáveis de decisão, é feita de forma holística nos níveis superiores. Entre-

tanto, no nível operacional são sugeridas as melhores opções dentro da sua visão de otimização

local.

Será visto no Capítulo 8 que a compilação foi aplicada inicialmente em um cenário pa-

drão com soluções provenientes de um modelo linear, e posteriormente em um outro cenário

comparativo onde os domínios dos planos vieram de um modelo não-linear.

Como foi dito na Seção 7.3.2, a variável de decisão planr? está associada a um domínio

real do problema formado por vetores de produtos, que contêm as quantidades de produtos



164

derivados produzidos no plano correspondente (parte de cima do vetor), e também contendo

as quantidades do petróleo consumido no mesmo plano (parte de baixo do vetor). Estas duas

partes do vetor são representadas pelas funções Entradaro? e Sa??dard? , que são definidas nas

Equações 7.4 e 7.5, respectivamente.

Além disso, o seguinte parâmetro é entrada tanto para o submodelo de produção, quanto

para o próprio modelo principal:

• prdCustord: custo de produção de uma unidade do derivado d na refinaria r;

Submodelo de Previsão de Extração de Petróleo Como foi visto na Seção 2.3.2, a pre-

visão do processo de extração do petróleo em um certo campo e poço, é bastante complexa.

Entretanto, levando em conta o intervalo de tempo de cada período de planejamento e a taxa

provável de declínio da extração, a taxa de extração é considerada constante para cada um destes

períodos.

Neste trabalho, com relação a esta parte do problema, os parâmetros relevantes para o mo-

delo principal são:

• extTaxa?o ? : quantidade de óleo cru o extraído na plataforma ? durante um período de

tempo ?;

• extCusto?o ? : custo de extração de uma unidade do óleo cru o na plataforma ? durante

um período de tempo ?;

Submodelo de Previsão de Demandas e Preços Como já dito na Seção 2.2.5, técnicas de

previsão de demanda são métodos estatísticos, e são aplicados para projetar padrões futuros de

vendas a partir de dados históricos sobre vendas passadas. Os preços também são analisados

estatisticamente, mas considerando um escopo maior, e mesmo a economia global.

O submodelo está preparado para ajustar a demanda de cada produto e cada área de co-

mercialização dentro de cada período de planejamento. Tal como no caso do submodelo de

produção, este submodelo seus resultados compilados diretamente no modelo principal. Os

parâmetros fornecidos são os seguintes:

• dmbd? : demanda total esperada do derivado d na área comercial da base b durante o

período ?;



165

• prcp? : preço de venda de uma unidade do produto p no mercado da EE durante o período

?;

• ContrV endaPrcCp? : preço de venda no contrato com o continente C de uma unidade

do produto p durante o período ?;

• ContrCompraPrcCp? : preço de compra no contrato com o continente C de uma unidade

do produto p durante o período ?;

• SMcompraPrcp? : preço ao qual SM compra uma unidade do produto p durante o

período ?;

• SMvendaPrcp? : preço ao qual SM vende uma unidade do produto p durante o período

?;

7.3.6 Função de Emergência

Cada variável emergente v? i de cada holon h? i do nível ? é conectada por uma restrição

booleana n-ária a todas as varíaveis dos seus subholons, definida pela função de emergência

E? i (vide Eq. 6.8). Pela definição do HCOP, existem infinitas possibilidades de funções de

várias variáveis que podem cumprir este papel da função de emergência, desde que satisfaça a

condição mencionada na definição do HCOP (vide Seção 6.3). No caso particular do Problema

de Planejamento de Suprimento, esta função é definida por:

v? i = E? i

(

v??1?1, . . . , v??1?B?i

)

= v??1 ?1 + . . . + v??1 ?B?i (7.41)

Assim a função de emergência é linear com coeficientes unitários. Esta escolha se deve à

característica do problema de planejamento integrado considerado, onde as variáveis emergen-

tes representam vetores de quantidades de produtos em cada holon. Assim, elas devem respeitar

uma restrição de agregação baseada no operador de soma aritmética (+). Se, por exemplo, se es-

tivesse interessado especificamente no acompanhamento de uma certa propriedade dos produtos

derivados do petróleo da mesma cadeia de suprimentos, e esta propriedade fosse a viscosidade

cinemática, a função de emergência, neste caso, seria um função não-linear na forma de uma

agregação de funções logarítmicas (MAPLES, 2000). Entretanto, qualquer que seja o tipo da

função de emergência, a restrição associada funciona como uma agregação holônica correspon-

dente a outro operador diferente (vide Seção 6.3).

As agregações holônicas são expressas em termos das variáveis holônicas (emergentes ou



166

de decisão). Entretanto, para maior clareza e legibilidade, a descrição das restrições de agre-

gação deste modelo utiliza uma notação especial para representar as variáveis holônicas emer-

gentes, que é mostrada a seguir:

• v?p? : diferença entre as quantidades de entrada e saída do produto p com relação ao holon

h?? , onde ? representa sua função e nível, e ? o período de tempo (vide 7.3.2);

• v+?p? =

?

?

?

v?p?, se v?p? ? 0

0, se v?p? &amp;lt;0

• v??p? =

?

?

?

?v?p?, se v?p? ? 0

0, se v?p? &gt; 0

Além disso, estas restrições dependem dos parâmetros de entrada, que são descritas a seguir :

• dmbd? : demanda total esperada do derivado d na área comercial da base b (refinaria r ou

terminal t) durante o período ?;

• extTaxa?o? : quantidade de petróleo o extraído na plataforma ? durante o período de

tempo ?;

• estqb p? representa o nível de estoque do produto p (derivado d ou tipo de petróleo o) na

base b (refinaria r ou terminal t) ao final do período de tempo ?;

• planr? representa o plano de produção adotado pela refinaria r durante o período de tempo

?;

• Said(planr ?) representa as quantidades de cada derivado d que são produzidas na refi-

naria r durante o período de tempo ? utilizando o plano de produção planr? ;

• v?p? representa a variável emergente do holon ? (global G, continente C, região R, refi-

naria r, terminal t e plataforma ?), i.e., a diferença entre as quantidades de entrada e saída

do produto p (derivado d ou tipo de petróleo o) neste holon durante o período ?.

Assim, as restrições de agregação holônica para cada nível da organização holônica são as

seguintes:



167

i. Nível Fundamental

refinarias:

vrd? = Said(planr?)?dmrd? + estqrd??1 ?estqrd?

vro? = estqro??1 ?estqro? ?Entrao(planr?)
(7.42)

terminais:

vtd? = estqtd??1 ?estqtd? ?dmtd?

vto? = estqto??1 ?estqto?
(7.43)

plataformas:

v?o? = extTaxa?o? (7.44)

ii. Nível Regional

vRp? =
?

f?R

vfp? (7.45)

iii. Nível Continental

vCp? =
?

R?C

(

v+Rp? ?v
?
Rp?+1

)

(7.46)

iv. Nível Global

vGp? =
?

C

(

v+Cp? ?v
?
Cp?+2

)

v+Gp? ?v
?
SMp?+2 = 0

v+SMp? ?v
?
Gp?+2 = 0

(7.47)



168

É importante salientar o relacionamento entre passado e futuro no modelo, que aparece

nos níveis continental e global. Ele resulta de restrições físicas temporais associadas com o

transporte de produtos entre as entidades da cadeia. De fato, neste trabalho se arbitra que os

produtos levam cerca de um período de tempo para serem transportados entre diferentes regiões

dentro de um continente (nível continental), enquanto eles levam cerca de dois períodos de

tempo para viajar entre dois continentes, ou entre um continente e SM (nível global). Quanto

ao nível regional, se parte do pressuposto que duas diferentes bases de uma mesma região estão

próximas o suficiente para que se possa mover produtos entre elas dentro de um único período

de tempo.

Outro ponto importante é que levando em conta que o período de tempo é limitado, i.e.,

? ?{1, . . . , T? }, torna-se necessário considerar as seguintes condições de contorno associadas

aos dois extremos:

v?R p?+1 = 0, v
?
C p?+1 = v

?
C p?+2 = 0, v

?
G p?+1 = v

?
G p?+2 = 0, v

?
SM p?+1 = v

?
SM p?+2 = 0, e

Estb p 0 = cte.

Na Fig. 24 da Seção 7.3.4 é possível compreender melhor as restrições apresentadas aqui,

que envolvem os diferentes papéis definidos no modelo de organização e seus principais fluxos

de informações.

7.3.7 Métricas de Desempenho e Função Objetivo

De forma genérica, o objetivo da solução do problema proposto se resume em escolher a es-

tratégia de decisão E(planr?, estqbp?), tal que a métrica de desempenho escolhida seja a melhor

possível. Neste trabalho, as métricas de desempenho adotadas são o lucro total da EE durante o

horizonte de tempo ?, e o nível de atendimento das demandas por produtos dos clientes finais

da EE. Em princípio, a existência de 2 métricas simultâneas, sendo uma quantitativa e outra

qualitativa, parece remeter o problema para uma abordagem multicritério, que exigiria tanto

a quantificação da métrica qualitativa de atendimento ao cliente quanto a atribuição de pesos

relativos a cada uma das duas métricas dentro da função objetivo global. Entretanto, devido à

flexibilidade oferecida pela SM, que de acordo com as premissas do problema, pode comprar ou

vender ilimitadas quantidades de qualquer produto, podemos considerar que todos os clientes

finais da EE serão necessariamente atendidos. A única variável é a que custo isto será feito. Em

outras palavras, esta premissa permite que se concentre em uma única métrica, i.e., o lucro total

da EE, que é função do faturamento e do custo total envolvido. Por esta razão, o objetivo deste

problema é maximizar o lucro total da EE, com a satisfação dos clientes finais automaticamente

garantida.



169

O lucro total da EE pode ser expresso através da Eq. 7.48, onde

• PetroleoFaturamento é o faturamento da venda do excedente do petróleo extraído

pela EE para outros continentes através de contratos, e também da venda para o SM,

se necessário;

• DerivadoFaturamento resulta da venda de todos os derivados de petróleo produzidos

em todas as refinarias, da venda dos derivados excedentes para outros continentes através

de contratos, e também para o SM, se necessário;

• PetroleoCusto é o custo total do petróleo resultante da extração pela EE, da compra

em outros continentes através de contratos, e da compra no SM, se necessário, a fim de

abastecer todas as refinarias;

• DerivadoCusto é o custo total de produção de derivados nas refinarias, da compra de

derivados em outros continentes através de contratos, bem como da compra no SM,

quando necessário, para suprir toda a demanda dos clientes finais;

• Frete é o custo total em fretes para o transporte de petróleo e derivados, sendo obtido

pela soma dos fretes de transferência de produtos dentro de cada região, entre diferentes

regiões em um mesmo continente, entre diferentes continentes e destes para o SM. Ele

é considerado dentro do submodelo logístico, onde o custo de transporte faz parte da

otimização. Como este submodelo é recursivo, este frete é considerado gradualmente

dentro de cada nível holônico correspondente (vide a Seção 7.3.5).

Lucro(E) = Faturamento(E)–Custo(E)

Faturamento(E) = PetroleoFaturamento(E) + DerivadoFaturamento(E)

Custo(E) = PetroleoCusto(E) + DerivadoCusto(E)+

+Frete(E)

(7.48)

Formalmente :



170

PetroleoFaturamento(E) =
?

Co?

ContrV endaPrcCo?·v
?
Co? +

?

o?

SMcompraPrco?·v
+
Go?

DerivadoFaturamento(E) =
?

bd?

prcd? ·dmbd?+
?

Cd?

ContrV endaPrcCd?·v
?
Cd?+

+
?

d?

SMcompraPrcd? ·v
+
Gd?

PetroleoCusto(E) =
?

?o?

extCusto?o? ·extTaxa?o? +
?

Co?

ContrCompraPrcCo?·v
+
Co?+

+
?

o?

SMvendaPrco?·v
?
Go?

DerivadoCusto(E) =
?

rd?

prdCustord ·Said(planr?)+
?

Cd?

ContrCompraPrcCd?·v
+
Cd?+

+
?

d?

SMvendaPrcd?·v
?
Gd?

(7.49)

Na função objetivo do problema tratado são utilizadas variáveis e parâmetros definidos

ao longo de todo este capítulo, e que são resumidos em seguida para melhor legibilidade e

compreensão:

• dmbd? : demanda total esperada do derivado d na área comercial da base b (refinaria r ou

terminal t) durante o período ?;

• prcp? : preço de venda de uma unidade do produto p no mercado da EE durante o período

?;

• ContrV endaPrcCp? : preço de venda no contrato com o continente C de uma unidade

do produto p durante o período ?;

• ContrCompraPrcCp? : preço de compra no contrato com o continente C de uma unidade

do produto p durante o período ?;

• SMcompraPrcp? : preço ao qual SM compra uma unidade do produto p durante o

período ?;

• SMvendaPrcp? : preço ao qual SM vende uma unidade do produto p durante o período

?;

• extTaxa?o? : quantidade de petróleo o extraído na plataforma ? durante o período de

tempo ?;

• extCusto?o? : custo de extração de petróleo o na plataforma ? durante o período de tempo

?;



171

• prdCustord: custo de produção de uma unidade do derivado d na refinaria r;

• estqb p? representa o nível de estoque do produto p (derivado d ou tipo de petróleo o) na

base b (refinaria r ou terminal t) ao final do período de tempo ?;

• planr? representa o plano de produção adotado pela refinaria r durante o período de tempo

?;

• Said(planr ?) representa as quantidades de cada derivado d que são produzidas na refi-

naria r durante o período de tempo ? utilizando o plano de produção planr? ;

• v?p? representa a variável emergente do holon ? (global G, continente C, região R, refi-

naria r, terminal t e plataforma ?), i.e., a diferença entre as quantidades de entrada e saída

do produto p (derivado d ou tipo de petróleo o) neste holon durante o período ?.

Além da representação utilizada na Seção 7.3.6 para variáveis emergentes, foi tirado proveito

também da sua notação, que denota por “+” a disponibilidade e “-” a necessidade de um certo

produto no holon correspondente. Por outro lado, um contrato de venda ou compra é da EE com

outros continentes (diferentes daquele da própria empresa). Assim, quando existe um contrato

venda de um derivado, por exemplo, aparece um termo ??Cd? , significando que o continente C

necessita aquele derivado, enquanto no caso contrário, contrato de compra, é a vez de um termo

?+Cd? , significando que C tem aquele derivado disponível.

Cumpre ressaltar que a exigência da propriedade monotônica para a função objetivo não foi

desrespeitada, pois apesar do lucro ser formado tanto por ganhos quanto por perdas, na chamada

de cada algoritmo de otimização AO? i estes termos envolvendo variáveis não se misturam,

sendo ou positivos ou negativos. Além disso, não faz sentido considerar dentro da função

objetivo um termo associado com o custo financeiro de estocagem dentro do modelo holônico.

A visão holística e integrada do modelo já leva necessariamente em conta a perda ou não de

oportunidade no uso do estoque com relação ao lucro total contabilizado pela própria função

objetivo.

7.4 Modelo Formal do Planejamento Integrado

Foi visto na Seção 6.3 que um HCOP é formalizado como uma tupla

(H, R, V, Dv, X, Dx, E, F, AO).

Levando em conta o conteúdo deste capítulo, o problema de planejamento integrado pode

ser modelado pela tupla específica, cujos elementos são mostrados a seguir:



172

• H = {H0, . . . , H4}, onde :

– H0 = {..., ProdutorDerivador ?0 , GerenciadorEstoquer ?0 , Comercialr ?0 , LogísticaInternar ?0 ,...,

GerenciadorEstoquet ?0 , Comercialt ?0 , LogísticaInternat ?0 ,...}

– H1 = {..., Refinariar ?1 ,..., Terminalt ?1 ,..., PlataformaPetróleo? ?1 ,..., LogísticaRegionalR ?1 ,...}

– H2 = {..., RegiãoR ?2 ,..., LogísticaContinentalC ?2 ,...}

– H3 = {..., ContinenteC ?3 ,..., LogísticaGlobal?3}

– H4 = {EE?4}

• R = {r1, . . . , rR}

– ? = 0:

* LogísticaInternar ?0 é o cabeça do holon Refinariar ?1 ;

* ProdutorDerivador ?0, GerênciaEstoquesr ?0eComercialr ?0 são as partes do holon

Refinariar ?1 ;

* LogísticaInternat ?0 é o cabeça do holon Terminalt ?1 ;

* GerênciaEstoquest ?0e Comercialt ?0 são as partes do holon Terminalt ?1 ;

– ? = 1:

* LogísticaRegionalR ?1 é o cabeça do holon RegiãoR ?2 ;

* Refinariar ?1 ,..., Terminalt ?1 ,..., PlataformaPetróleo? ?1 são as partes do holon

RegiãoR ?2 ;

– ? = 2:

* LogísticaContinentalC ?2 é o cabeça do holon ContinenteC ?3 ;

* RegiãoR ?2 ,... são as partes do holon ContinenteC ?3 ;

– ? = 3:

* LogísticaGlobal?3 é o cabeça do holon EE?4 ;

* ContinenteC ?3 ,... são as partes do holon EE?4 .

• V = {Rv0 1 ?0, ..., Rv? i ? ,..., v4 1 ?4}

– variável de decisão:

* Rplanr ?0 , representa o plano de produção adotado pela refinaria r durante o

período de tempo ?0 ?{1, . . . , T }, onde ?0 = ?1;



173

* Restqb ?0 , representa o nível de estoque do vetor de produtos na base b (refinaria

r ou terminal t) ao final do período de tempo ?0 ?{1, . . . , T }, onde ?0 = ?1;

– variável emergente:

* Rv? i ? : diferença entre as quantidades de saída e entrada do vetor de produtos

com relação à holon h? i durante o período ?.

• Dv = {DRv0 1 ?0, ..., DRv? i ?? ,..., DRv4 1 ?4}

– DRplanr = {p1 r, . . . , pi r, . . . , pnPlanosr r}

– DRestqb ?0 = {estoqueMinb ?0, . . . , estoqueMaxb ?0}

• X = {Rx111, ..., Rx? i ji ,..., Rx4 1 1, ...}

Rf? k l ? : fluxo de transporte do vetor de produtos durante o período ? e entre os subholons

h? k e h? l.

• Dx = {DRx1 1 1, ..., DRx? i ji ,..., DRx4 1 1, ...}

– DRf? k l ? = {pzero, . . . , Cp_Max? k l ?} , onde pzero ? Z
n

• E = {E11, ..., E? i,..., E4 1}

Rv? i ?? = E? i

(

Rv??1?1???1, . . . , Rv??1?B?i???1
)

=
?

???1

(

Rv??1 ?1???1 + . . . + Rv??1 ?B?i???1

)

• F = {F11, . . . , F ? i,..., F4 1} é o conjunto de subconjuntos, um para cada holon h? i, onde

F? i = {f? i 1, . . . , f? i j, ..., f? i M?i}

• AO = {AO1 1, ..., AO? i,..., AO4 1}

– Cada AO? i é definido no submodelo logístico, que é recursivo para cada nível

? &gt; 0.

A função objetivo FO =

4

?

?=0

N?

?

i=1

M?i

?

j=1

f? i j é formada pelos seguintes termos:

1. ? = 0:

(a)
?

bd?0

prcd?0 ·dmbd?0

• Constante



174

– Faturamento de vendas de produtos derivados d associadas a demandas da

base b no tempo ?0 (Comercialb ?0 )

– Tratado pelo submodelo de previsão de demanda e preços

(b) ?
?

rd?0

prdCustord ·Said(planr?0)

• Variáveis de decisão planr?0

– Custo de produção de produtos derivados d na refinaria r e no tempo ?0

– Tratado pelo submodelo de produção

2. ? = 1:

(a) ?
?

?o?1

extCusto?o?1 ·extTaxa?o?1

• Constante

– Custo de extração do petróleo o na plataforma ? e no tempo ?1

– Tratado pelo submodelo de previsão de extração de petróleo

(b) ?
?

?1

?

(R
klp

f?=1 k l ?1 · ck l )

• Variáveis locais Rf1 k l ?1

• Custo de transporte de cada produto em cada arco de transporte definido pelos

subholons associados k e l e no tempo ?1 dentro do superholon RegiãoR ?2

• Tratado recursivamente pelo submodelo logístico

3. ? = 2:

?
?

?2

?

(R
klp

f?=2 k l ?2 · ck l)

• Variáveis locais Rf2 k l ?2

– Custo de transporte de cada produto em cada arco de transporte definido pelos

subholons associados k e l e no tempo ?3 dentro do superholon ContinenteC ?3

– Tratado recursivamente pelo submodelo logístico

4. ? = 3:
?

Cp?3

ContrV endaPrcCp?3·v
?
Cp?3

• Variáveis emergentes vCp?3



175

– Faturamento de venda de cada produto p através de contrato com cada conti-

nente C e no tempo ?3

?
?

Cp?3

ContrCompraPrcCp?3·v
+
Cp?3

• Variáveis emergentes vCp?3

– Custo da compra de venda de cada produto p através de contrato com cada

continente C e no tempo ?3

?
?

?3

?

(R
klp

f?=3 k l ? · ck l)

• Variáveis locais Rf3 k l p ?3

– Custo de transporte de cada produto em cada arco de transporte definido pelos

subholons associados k e l e no tempo ?3 dentro do superholon global EE?4

– Tratado recursivamente pelo submodelo logístico

Na Seção 6.3 de formalização do HCOP foi descrita as restrições deste tipo de problema. Na

Seção 7.3.3 deste capítulo foi discutida a restrição de agregação, que pode envolver tanto o es-

paço quanto o tempo. Entretanto, na modelagem do problema de planejamento integrado como

um HCOP apareceu a necessidade prática de uma nova restrição holônica denominada com-

posição, como uma subclasse da restrição agregação, onde a escala de espaço e de tempo entre

o superholon e os seus subholons coincidem. Um exemplo da restrição composição acontece

entre uma refinaria e seu Produtor de Derivados (unidade de produção dentro da refinaria), que

estão nos níveis 1 e 0 do modelo holônico, respectivamente. A refinaria e sua unidade de produ-

ção estão praticamente no mesmo local dentro da escala espacial considerada, e seus processos

estão também em uma mesma escala de tempo. Por este motivo, aparece a relação ?0 = ?1 na

formalização do problema de planejamento nesta seção. A Fig. 29 mostra todas as restrições

disponíveis do HCOP, inclusive a composição .

7.5 Representação XML de Instâncias de HCOPs Complexos

Na Seção 6.6 foi apresentada a extensão do formato XCSP, que foi criado para os problemas

de restrição distribuída, para a representação de instâncias do HCOP. Com a modelagem do

Problema do Planejamento Integrado da Cadeia Suprimentos da Indústria do Petróleo como

um HCOP, apareceu a necessidade de novas construções que incluíssem informações relevantes

para HCOP com subproblemas locais complexos. A extensão feita no capítulo anterior para um



176

Figura 29: Conjunto Completo das Restrições do HCOP Complexo

HCOP genérico foi necessária para a realização de uma parte dos experimentos, como veremos

no Capítulo 8. Entretanto, esta nova extensão do formato XCSP para HCOP complexo foi

fundamental para a representação das instâncias do problema do planejamento integrado da

cadeia de suprimentos da indústria do petróleo tratado neste trabalho e, consequentemente, para

a realização dos experimentos associados à este problema. Para isso, foram introduzidos as

variáveis reais e seus domínios correspondentes na forma de vetores, que exprimem melhor o

problema real. Além disso, foi incluído o tempo, que é de enorme importância para descrever

os processos reais.

O Anexo C resume as características da representação de instâncias de um HCOP genérico,

e também de um HCOP complexo através de XML.

7.6 Conclusão

Com relação aos desafios para a integração otimizada do planejamento apresentados na

Seção 3.4 do capitulo 3, a seguir serão mostradas as conclusões a respeito de como o modelo

deste trabalho responde a estes desafios:

Multi-Escala Espacial e Temporal Através da restrição holônica de agregação, é possível

conseguir uma flexibilidade adequada para ajustar tanto os fatores geográficos e funcionais

quanto os relativos ao tempo de forma conjunta. O modelo holônico oferece uma ajuda para

lidar com grandes escalas espaciais e temporais simultaneamente, dividindo o problema em

holons associados a fatias de espaço e tempo de acordo com o nível holônico considerado.



177

Assim, é possível integrar tanto decisões relativas a locais muito distantes quanto a tempos com

escalas muito diferentes.

Tático e Operacional Os processos do nível tático e aqueles do nível operacional são fei-

tos em tempos harmonizados, mas diferentes (nível tático com unidade de tempo de mês ou

semana, enquanto o nível operacional com unidade semana ou dia), evitando resolver o pro-

blema conjunto no horizonte mais longo do nível operacional. Ao contrário, o objetivo passa

a ser a solução dos diversos subproblemas associados a cada holon, que tem um algoritmo de

otimização específico.

Com relação ao problema de escalonamento viável associado com as metas de produção,

os escalonamentos inviáveis não sobrevivem no nível operacional. Assim, somente os escalo-

namentos viáveis, e dentro de uma ordem definida pelas suas utilidades, “sobem” para o nível

tático. Portanto o planejamento e o escalonamento são automaticamente consistentes. Ou exis-

tem uma ou mais soluções que satisfazem os dois níveis, e neste caso se escolhe a de maior

utilidade, ou não existem soluções viáveis.

Considerar os períodos mais imediatos e agregar aqueles posteriores A agregação holô-

nica é naturalmente adequada para ser usada no método de agregação dos períodos de tempo

posteriores, devido tanto a seu caráter holônico quanto sua natureza distribuída, a fim de redu-

zir a dimensão do problema. Assim, são consideradas as informações imediatas e locais dos

primeiros períodos de tempo, que podem ser levadas em conta no nível mais acima. Mas nos

próximos períodos, onde a confiabilidade das informações se torna cada vez menor, podendo,

inclusive, mudar a qualquer momento, os holons relacionados ao nível de planejamento tático

podem se tornar holons atômicos, e, desta forma, ignorar os subholons associados ao nível

operacional, onde os escalonamentos são feitos. Fica evidente a sua natureza distribuída como

alternativa ao tratamento das incertezas.

Modelos substitutos off-line Os modelos substitutos off-line se adequam naturalmente ao

modelo deste trabalho, onde o problema em foco foi tratado como um HCOP, que é um caso

especial de CSP. Eles se constituem em um método alternativo para a geração de uma descrição

precisa, mas computacionalmente tratável, através de execuções de submodelos operacionais no

modo off-line. O objetivo desta abordagem é definir uma região viável do espaço de soluções a

ser utilizada em um nível mais acima. A geração destes espaços pode ser intensiva em termo de

recursos, mas uma vez que são gerados off-line, podem ser incorporados pelo modelo principal.



178

Esforço Computacional No ponto de vista centralizado, uma solução de um possível mo-

delo em grande escala do problema real de planejamento integrado com otimização iria exigir

recursos computacionais significativos e novas arquiteturas dentro desta área.

Uma abordagem que surgiu na última década é disponibilizar os recursos computacionais

na forma de uma grade computacional ou cluster, que é uma coleção de processadores hetero-

gêneos de baixo acoplamento e pontencialmente distribuídos geograficamente. Por outro lado,

o modelo proposto divide o problema completo em uma rede de vários subproblemas, compar-

tilham o esforço de solução. Isto, por si só, já o coloca em vantagem. Entretanto, como este

modelo é distribuído, os recursos computacionais já estão naturalmente distribuídos geografi-

camente, acarretando um efeito colateral benéfico na paralelização do processamento, embora

não tenha sido isto a motivação original.

Comparação com outras Estratégias de Solução Vimos na Seção 3.6 que as estratégias

de solução do problema do planejamento otimizado podem ser classificadas em três categorias:

métodos hierárquicos, métodos iterativos e métodos full-space.

Tanto os métodos hierárquicos quanto os métodos iterativos decompõem o problema em

um subproblema mestre (alto nível) utilizado para determinar as decisões de alto nível e em

um subproblema escravo (baixo nível) com soluções mais detalhadas. Uma diferença básica

entre eles é que nos primeiros o fluxo de informações é somente do subproblema mestre para

o subproblema escravo, enquanto nos últimos existe um ciclo de realimentação do submodelo

escravo de volta ao submodelo mestre. A principal desvantagem dos métodos hierárquicos é

que se não existe uma solução no nível operacional, uma solução subótima é procurada.

Quanto aos métodos iterativos, quando a solução do subproblema mestre é inviável ou

subótima, eles executam o ciclo de realimentação, cujo objetivo é encontrar as decisões de alto

nível verdadeiramente ótimas. Em príncipio, estes métodos são melhores que os hierárquicos

em relação à otimalidade da solução, mas não existe garantia na duração total dos ciclos de

realimentação, e mesmo se eles convergem.

A estratégia do modelo holônico e distribuído deste trabalho não pertence nem aos méto-

dos hierárquicos, nem aos métodos iterativos. De fato, a rede holônica não é uma hierarquia

tradicional, mas uma heterarquia específica chamada holarquia. Assim, o modelo holônico

não funciona a partir do holon global para baixo, e também não realiza iterações entre cama-

das como acontece nos métodos iterativos, já que os níveis mais altos na hierarquia não estão

diretamente em comunicação com os de baixo mais distantes, e vice versa. A informação é

transmitida através de "canais de regulação" providos pelos holons cabeça, um nível de cada



179

vez. Na verdade, o processo de solução se inicia na camada fundamental, onde estão os holons

atômicos (nível operacional), e evolui através de cada nível, até o holon global, onde a solução

é gerada levando em conta o processamento de todos os holons. Por isso, o meta-algoritmo ba-

seado em programação dinâmica se adequa melhor com o modelo holônico, como será provado

no próximo capítulo.

Com relação à terceira estratégia de solução, ela é a que se aproxima mais da usada pelo

modelo holônico. Ela é formada pelos métodos full-space, que possuem uma formulação in-

tegrada contendo os submodelos pertinentes para cada período de planejamento e sua solução

provê todas as informações necessárias. Sua desvantagem é que estes modelos são difíceis de

resolver e requerem métodos de solução avançados. Modelos de escalonamento, por si só, são

de difícil solução, apesar de só cobrir um horizonte de apenas alguns dias. Se o mesmo nível

de detalhe for mantido, a integração com o planejamento no nível acima leva o problema para

o horizonte de vários meses, o que resulta em modelos intratáveis computacionalmente. As

técnicas de solução principais deste método são duas:

• decomposicao espacial, que é baseada na interconexão entre bases (neste caso, refinarias,

terminais, etc), que são otimizadas individualmente para todos os períodos de tempo.

Finalmente estas otimizaçoes são agregadas;

• decomposicao temporal, que é baseada na interconexão entre períodos de tempo, de forma

que o planejamento total (produção e logístico) de todas as bases pode ser otimizado inde-

pendentemente em cada período de tempo. Finalmente estas otimizações são agregadas.

Como já foi dito, a modelagem holônica utiliza estas duas técnicas naturalmente, e o faz de

forma bastante flexível. A definição de cada holon no processo de modelagem é uma forma

particular do método de decomposição, que pode ser tanto espacial quanto temporal. Assim, a

decomposição espacial leva em conta critérios geográficos e também o nível de integração dos

transportes. Por outro lado, a decomposição temporal leva em conta os períodos de tempo, que

se tornam gradualmente mais longos na direção do holon global.

No processo de solução, a restrição holônica de agregação caminha no sentido inverso, en-

globando os holons com relação ao espaço e ao tempo. Portanto, o modelo holônico realiza

os dois processos de decomposição do full-space naturalmente. Mais do que isso, ele permite

qualquer forma intermediária entre estes dois extremos durante a definição dos holons. Para

isso, a chave para uma modelagem holônica bem-sucedida é a criação de holons guiada pela

existência de algoritmos de otimização, que solucionam subproblemas do problema total mo-

delado, e que são associados aos novos holons. A Fig. 30 ilustra o processo de modelagem e



180

Figura 30: Diagrama do Processo Holônico

solução do HCOP.

Finalmente, na estratégia de solução do modelo holônico, existe um grau de liberdade na

definição do parâmetro “tamanho do domínio”, que interfere ao mesmo tempo na dificuldade

do problema geral e no nível de qualidade da solução desejada.



181

8 Experimentos

8.1 Introdução

Neste capítulo são apresentados os experimentos realizados com o objetivo para mostrar

primeiramente a eficiência de solucionar o HCOP através do HCOMA, e principalmente a viabi-

lidade de utilizar o modelo HCOP para a representação do problema de planejamento integrado

da cadeia de suprimentos da indústria do petróleo com otimização. Por isso, estes experimentos

foram conduzidos em 2 fases diferentes.

Na primeira fase os dois meta-algoritmos HCOMA foram comparados de forma a avaliar

seu desempenho, e analisar suas diferenças e características. Além disso, estes foram também

comparados com o solucionador centralizado. Para isso foi usado um HCOP genérico.

Na segunda fase II, levando em conta os resultados da fase anterior, o HCOMA foi utilizado

e testado em um HCOP mais complexo, que é o problema de planejamento integrado com

otimização modelado no capítulo anterior.

8.2 Ferramenta FRODO

Vimos na Seção 5.6 que o FRODO é uma ferramenta poderosa para experimentos com

DCOPs. FRODO foi escolhido para os experimentos com HCOPs, porque ele contém embutido,

os algoritmos ADOPT (MODI et al., 2003) e DPOP (PETCU; FALTINGS, 2004), que representam

os dois tipos de algoritmos usados no desenvolvimento dos meta-algoritmos HCOMA. Além

disso, foi mostrado que ele aceita instâncias no formato XML e possui integrado o solucionador

centralizado JaCoP, que foi usado na fase I dos experimentos deste capítulo.

Dada a conveniência de se usar o FRODO versão 2.10.4 neste trabalho, surgiu imediata-

mente a necessidade de modificá-lo para trabalhos com o HCOP, e não apenas com DCOP. Já

que no Capítulo 6 foi mostrada a motivação de se desenvolver os meta-algoritmos HCOMA,

tornou-se imprescindível que estes meta-algoritmos fossem embutidos no FRODO. Antes de



182

mais nada, do FRODO teve de ser estudada em detalhes, e foi feito contato com os autores da

ferramenta em busca de informações não disponíveis nos manuais. Assim, foram desenvolvi-

das as duas versões do meta-algoritmo, i.e., o HCOMA ADOPT, e o HCOMA DPOP. Para isso,

foram utilizadas como base as versões de ambos os algoritmos já disponíveis no FRODO.

Para a fase I dos experimentos, foi usada a facilidade já existente de interagir com o JaCoP

(solucionador centralizado), já existente de forma independente do FRODO.

Para a fase II, FRODO foi modificado levando em conta as características do HCOP com

problemas locais complexos, i.e., para o planejamento integrado da cadeia do petróleo. Assim,

foram implementados os conceitos de domínios vetoriais, cujo espaço é formado pelas n dimen-

sões de produtos (produtos derivados + petróleos). Além disso, o FRODO foi adaptado para o

tratamento do tempo, e foi criada uma interface entre ele e o solucionador centralizado OPL

(IBM, 2009), que foi usado como solucionador centralizado na fase II. Para isso foi utilizada a

biblioteca em Java FacadeOPL (FERBER, 2012), que permitiu a ativação e controle do modelo

OPL dentro do próprio FRODO.

Além disso, foram implementadas as restrições holônicas já descritas nas seções 6.6 e 7.5.

Assim, foram embutidas as seguintes restrições holônicas:

• holonic: emergence

– entre superholon e sua cabeça

• holonic: aggregation

– entre cabeça e membros do superholon

• holonic: composition

– entre cabeça e membros do supeholon

– agregação no mesmo espaço e no mesmo tempo

• holonic: local

– entre variáveis locais e variáveis holônicas

De maneira geral, o FRODO foi preparado para ler e interpretar os elementos criados na exten-

são feita ao superset do XCSP 2.1 para representar instâncias do HCOP tanto genérico (fase I)

quanto complexo, associado ao problema de planejamento integrado (fase II). Isto permitiu que



183

os experimentos deste capítulo fossem realizados, já que todas as instâncias foram representadas

com arquivos XML (vide Anexo C).

Para a fase II foi desenvolvido um preprocessador que tem como entrada um conjunto de

arquivos XML que contêm todas as informações necessárias para a geração de uma instância do

problema de planejamento integrado. Assim, este processamento fornece um arquivo XCSP 2.1

estendido para este tipo de problema, que pode então ser lido pelo FRODO no processo de busca

da solução. A Fig. 31 mostra um esquema de todo o processo de solução, que envolve tanto o

pré-processamento quanto a busca da solução a partir da leitura do arquivo XML principal que

representa a instância. Ela mostra também todos os arquivos XML envolvidos.

Como já mencionado, os experimentos foram divididos em 2 fases diferentes. Na fase I os

dois HCOMAs foram comparados entre si e também com o solucionador centralizado utilizado

nesta etapa . Para isso foi usado um HCOP genérico, que permitiu esta comparação antes da

fase II. Assim, estes resultados foram utilizados na última fase, de modo que o HCOMA pode

ser testado no problema de planejamento integrado com otimização. As fases I e II são descritas

a seguir.

8.3 Fase I: HCOP Genérico

8.3.1 Introdução

Nesta fase dos experimentos a máquina usada foi um PC com um Intel Core i3 processador

2.53 GHz e 4 GB RAM. A ferramenta para a execução dos meta-algoritmos HCOMA foi o

FRODO versão 2.10.4, que foi modificado de modo a tratar o HCOP (vide Seção 8.2), e o

solucionador centralizado utilizado foi o JaCoP versão 3.2.

8.3.2 Descrição dos Experimentos

Em muitos experimentos o problema de otimização distribuído utilizado é o Max-DisCSP

aleatório, tal como o Max-CSP que é usado normalmente em avaliações experimentais de pro-

blemas de satisfação de restrições com otimização centralizados (COSP) (LARROSA; SCHIEX,

2004). O Max-DisCSP é uma subclasse dos problemas DCOP, onde todas as restrições são

binárias e os custos são iguais a 0 ou 1. Eles são problemas de minimização, considerando

um custo de 1 unidade para cada restrição violada, de forma que reduzir os custos significa

minimizar o número de restrições que são violadas (MODI et al., 2003).



184

Figura 31: Fluxo do Processo de Solução



185

A razão de se usar tanto este tipo de problema em teste de algoritmos é que os parâmetros

das instâncias do problema consideram as características mais importantes de um problema

de restrições, como a densidade das restrições, o grau de rigidez destas restrições, o número

de variáveis e o tamanho do domínio destas variáveis. Assim, foi criado um HCOP aleatório

baseado no Max-DisCSP, que foi utilizado nesta fase dos experimentos. Ele é caracterizado por

parâmetros holônicos pertinentes, que são os seguintes:

• ?: número de camadas ou níveis;

• nH =
?

?

| H? |: número de holons (= número das variáveis holônicas);

• | X |: número das variáveis locais (domínio binário), correspondente à densidade das

restrições dentro dos holons;

• k: tamanho do domínio das variáveis holônicas;

A formalização das instâncias deste HCOP é apresentada a seguir através da especificação de

cada um dos elementos da sua tupla (H, R, V, Dv, X, Dx, E, F, AO):

• H = {H0, . . . , H?max}, onde 0 &amp;lt;?max ? 3

• R = {r1, . . . , rR}

– Na topologia da holarquia cada superholon é constituído por 2 e até 4 subholons

parte, além do subholon cabeça;

• V = {v0 1, ..., v? i,..., v?max1}, onde 0 &amp;lt;?max ? 3

• Dv = {Dv0 1, ..., Dv? i, ..., Dv?max1}, onde 0 &amp;lt;?max ? 3

– Dv? i = {1, 2, . . . , k} e k = 5 |10 |15, assumindo um único valor ao longo de cada

instância;

• X = {x0 1 1, ..., x? i j,..., x?max?1 imax jimax}, onde 0 &amp;lt;?max ? 3

– Cada variável local x? i j é ligada um par de variáveis holônicas v? w e v? m as-

sociadas a subholons do mesmo superholon. O número destas variáveis equivale à

densidade das restrições no Max-DisCSP;

• Dx = {Dx0 1 1, ..., Dx? i j,..., Dx?max?1 imax jimax}, onde 0 &amp;lt;?max ? 3 e Dx? i j =

{0, 1},??, i, j



186

– O domínio das variáveis locais equivale ao grau de rigidez das restrições no Max-

DisCSP (0: rigidez fraca; 1: rigidez forte);

• E = {E1 1, ..., E? i,..., E?max1}, onde 0 &amp;lt;?max ? 3

Foi escolhida a função de emergência associada ao modelo do Problema de Planejamento

Integrado da Cadeia de Suprimento (vide 7.41). Assim, ela é a seguinte função linear com

coeficientes unitários:

v? i = E? i

(

v??1?1, . . . , v??1?B?i

)

= v??1 ?1 + . . . + v??1 ?B?i

• F = {F11, . . . , F ? i,..., F?max1}, onde 0 &amp;lt;?max ? 3, F? i = {f? i 1, . . . , f? i j, ..., f? i M? i}

é associado ao superholon h? i e M? i é o número de subholons do superholon h? i;

– Cada restrição valorada local f? i j entre cada par de variáveis holônicas v??1 w e

v??1 m associadas a subholons e uma variável local x??1 i j do mesmo superholon

h? i é dada pela função da Eq. 8.1, onde o conjunto imagem é formado pelos custos

0 ou 1, tal como o Max-DisCSP;

f? i j : Dv??1 w ×Dv??1 m ×Dx??1 i j ?{0, 1} (8.1)

• AO = {AO1 1, ..., AO? i,..., AO?max1}, onde 0 &amp;lt;?max ? 3

– Cada AO? i associado ao superholon h? i encontra uma solução ótima para as res-

trições valoradas locais contidas no conjunto F? i, satisfazendo a restrição n-ária

c? i = restri?ca?o
(

v? i ==
(

v??1 ?1 + . . . + v??1 ?B?i

))

definida pela função de emer-

gência E? i.

A meta é encontrar a solução ótima para a função objetivo FO =

?max

?

?=0

N?

?

i=1

M?i

?

j=1

f? i j, onde

N? é o número de holons no nível ? e M? i é o número de subholons do superholon h? i.

Apesar do HCOP ser genérico, os parâmetros que definem suas instâncias são relevantes

também para um HCOP complexo. Assim, o número de variáveis locais pode crescer, bem

como a rigidez das restrições do problema holônico local, de modo a se aproximar de problemas

locais com grau de complexidade maior dentro de cada holon. Desta forma, a escolha deste

problema foi importante por permitir que os resultados desta fase pudessem ser considerados



187

Figura 32: Gráfico do Tempo pelo Número de Holons

na fase seguinte, quando o problema é genuínamente complexo. Por este motivo, nesta fase foi

escolhida uma função de emergência análoga à do problema de planejamento que será utilizado

na fase II.

Nesta fase três algoritmos diferentes foram considerados: HCOMA ADOPT, HCOMA

DPOP e JaCoP (solucionador centralizado). Eles foram testados em 86 instâncias, onde os

parâmetros descritos mudaram de modo separado. A instância de referência consistiu dos se-

guintes valores de parâmetros:

• ?max = 2

• nH = 13

• | X |= 3

• k = 5

Os resultados obtidos são analisados na próxima subseção através de gráficos do tempo

de solução em função de cada um destes parâmetros. Para maior facilidade, na análise dos

resultados cada HCOMA é identificado pelo nome do algoritmo em que é baseado.

8.3.3 Análise dos Resultados

No gráfico da Fig. 32 relacionado ao número de holons, as três abordagens de solução

tiveram uma variação exponencial em relação ao número de holons. Por isso, este gráfico

utilizou uma escala logarítmica no eixo do tempo. O destaque negativo foi o ADOPT não só



188

Figura 33: Gráfico do Tempo pelo Tamanho do Domínio

Figura 34: Gráfico do Tempo pelo Número de Variáveis Locais

pelo seu desempenho, que foi o pior, mas também pela sua instabilidade. Por outro lado, o

DPOP foi o de menor tempo ao longo de toda a evolução do número de holons. A surpresa foi a

superação do solucionador centralizado pelo HCOMA DPOP, devido à sua natureza distribuída.

Apesar do experimento não ter sido feito em um ambiente realmente paralelo, mas em uma

simulação dentro de um único processador, a ferramenta FRODO disponibiliza a medição do

tempo simulado, que tenta se aproximar do tempo real que seria obtido em uma situação em

que cada holon executasse em separado.

O gráfico da Fig. 33 mostra que o HCOMA DPOP foi novamente o melhor entre os três,

superando inclusive a opção centralizada. Devido à importância do tamanho do domínio para

os problemas de restrições como uma das grandezas fundamentais na medida do grau de dificul-

dade na solução do problema associado, e a diferença de desempenho entre as três alternativas,

este resultado mantém o HCOMA DPOP como a melhor opção, enquanto o HCOMA ADOPT

como aquela com o pior desempenho.

O resultado do gráfico da Fig. 34 confirma a superioridade do HCOMA DPOP em relação



189

Figura 35: Gráfico do Tempo pelo Número de Camadas

aos outros para qualquer número de variáveis locais. Seu tempo de solução evolui praticamente

de forma linear com o crescimento do número de variáveis.

Finalmente, o parâmetro número de camadas mostrado no gráfico da Fig. 35 não só con-

firma os resultados anteriores, mas pelo significado que tem para o modelo holônico, é possível

concluir que o HCOMA DPOP é o meta-algoritmo por excelência para ser utilizado na solução

do HCOP.

Como foi dito na Seção 6.5, HCOMA ADOPT tem como vantagem o processamento sín-

crono, o que resultaria em um maior paralelismo no tratamento dos diversos holons. Entretanto,

ele apresenta um comportamento que mistura os diversos níveis da holarquia durante seu pro-

cesso de solução. Em outras palavras, cada algoritmo de otimização, em geral, é chamado

várias vezes, de modo que era previsível que seu desempenho fosse ruim no caso do HCOP.

Por outro lado, HCOMA DPOP se adequa melhor às características da organização holô-

nica, pois sendo baseado em programação dinâmica, é também recursivo por natureza. Além

disso, ele chama cada algoritmo de otimização uma única vez, o que sugere uma maior efici-

ência. De fato, na conclusão do capítulo anterior, foi descrito que na estratégia holônica para

a solução do HCOP deve-se iniciar na camada fundamental com os holons atômicos e evoluir

através de cada nível, até o holon global, onde a solução é gerada levando em conta o processa-

mento de todos os holons. Este é exatamente o funcionamento do HCOMA DPOP (vide Seção

6.5.3). Uma possível desvantagem deste meta-algoritmo, que é herdado do algoritmo DPOP, é

relacionado como o tamanho de suas mensagens. No entanto, como este HCOMA foi baseado

na versão original DTREE do DPOP , ele mantém um tamanho fixo de mensagens.



190

Fase I Fase II Conclusão

Núm. de Camadas 2 a 4 5
Como a ordem de grandeza é a mesma, a conclusão
obtida para este número vale também para a fase II.

3 a 85 221
A vantagem do HCOMA DPOP é mantida à medida

Núm. Holons que este número aumenta. Portanto sua escolha é
válida na fase II.

Núm. de Variáveis Locais

A vantagem do HCOMA DPOP é mantida à medida
0 a 15 muito que este número aumenta. Portanto sua escolha é

grande válida na fase II.

5 a 180
A vantagem do HCOMA DPOP é maior à medida

Tamanho dos Domínios 5 a 15 que este número aumenta, aumentando a vantagem
do seu uso na fase II.

Tabela 5: Comparação entre a Fase I e a Fase II

8.3.4 Resumo dos Resultados

Uma comparação prévia entre as características das instâncias dos problemas da fase I e

da fase II, juntamente com os resultados obtidos na fase I, mostram a relevância destes experi-

mentos como preparação para a fase II em seguida. Os resultados apontaram o HCOMA DPOP

como a melhor escolha para resolver um HCOP. Assim, o objetivo desta seção é confirmar an-

tecipadamente a convêniencia de usar este algoritmo na fase II, dado que a diferença entre ele e

a outra opção foi significativa. Na Tab. 5 foi analisado cada um dos parâmetros utilizados com

a comparação dos valores entre as instâncias de ambas as fases.

Apesar das diferenças entre o problema da fase I, que é um HCOP genérico, e o problema

de planejamento integrado da fase II, que é bem mais complexo, é possível comparar suas carac-

terísticas pertinentes e concluir pelo uso único do HCOMA DPOP na fase II. As comparações

feitas acima nos levam a prever um predomínio ainda maior do meta-algoritmo escolhido em

relação ao outro na fase II, se ambos fossem utilizados. Portanto, o HCOMA DPOP será o

único meta-algoritmo a ser usado na fase II dos experimentos, que poderá ser chamado apenas

de HCOMA. Foi este o objetivo desta primeira fase, que utilizou instâncias de HCOP, que, por

definição, satisfazem os requisitos formais deste tipo de problema apresentados na Seção 6.3.

Por outro lado, a próxima fase mostra as vantagens e a viabilidade de se modelar o problema do

planejamento integrado da cadeia de suprimentos como um HCOP.



191

8.4 Fase II: Planejamento Integrado da Cadeia de Suprimento

do Petróleo como HCOP

8.4.1 Introdução

No Cap. 7 o problema de Planejamento Integrado da Cadeia de Suprimentos da Indústria

do Petróleo foi modelado como um HCOP. O objetivo da fase II dos experimentos é avaliar

a viabilidade e o desempenho do modelo holônico distribuído proposto para este problema,

levando em conta um caso de estudo representativo em relação ao problema real e comparando

como o procedimento usual de solução.

Tal como na fase I, a máquina usada nesta fase dos experimentos foi um PC com um Intel

Core i3 processador 2.53 GHz e 4 GB RAM. A ferramenta para a execução dos meta-algoritmos

HCOMA foi o FRODO versão 2.10.4, e o solucionador centralizado utilizado desta vez foi o

OPL. O submodelo logístico (vide Seção 7.3.5) utilizado foi desenvolvido na forma de um

modelo MILP (vide Seção 3.5.1) utilizando o IBM ILOG CPLEX Optimization Studio versão

12.2 como ferramenta de modelagem. O submodelo de produção empregado foi, de um lado,

a parte do sistema de planejamento centralizado dedicada às refinarias, bem como o sistema de

programação de produção de cada refinaria específica, ambos da empresa PETROBRAS S.A.

8.4.2 Descrição do Caso de Estudo

Os dados fornecidos para este caso de estudo foram baseados no histórico de dados reais

da empresa PETROBRAS S.A. ao longo do primeiro semestre de 2012. Quanto ao escopo e to-

pologia considerados, eles são um subconjunto da cadeia real existente e contém 3 regiões (sul,

centro e leste) com 6 refinarias e 12 terminais, sendo 6 terrestres e 6 marítimos. As refinarias

são coordenadas centralizadamente, o suprimento de petróleo é compartilhado, e as refinarias

colaboram para satisfazer uma dada demanda do mercado. As refinarias são supridas por 2 gru-

pos de petróleos produzidos em 7 plataformas de extração (vide Tab. 7), e 1 grupo de petróleos

importados. O petróleos foram classificados em grupos de acordo com seu índice API e proce-

dência (vide Tab. 6) (IPI, 2012).



192

Grupos de Petróleos API Médio Origem

Leve 39 Importado
Médio 25 Interno
Pesado 20 Interno

Tabela 6: Tabela de Petróleos

Plataforma Tipo de petróleo Taxa de Extração (M m3/ 1 semana) Região

Plataforma1 Médio 55 Centro
Plataforma2 Médio 405 Leste
Plataforma3 Médio 430 Leste
Plataforma4 Médio 188 Leste
Plataforma5 Pesado 262 Leste
Plataforma6 Pesado 315 Leste
Plataforma7 Médio 150 Leste

Tabela 7: Tabela de Plataformas de Petróleos

As refinarias produzem os seguintes derivados:

• GLP (Gás Liquefeito de Petróleo)

• Gasolina

• Diesel

• Querosene

• Óleo Combustível

Os preços de venda dos derivados no mercado interno do EE são mostrados na Tab. 8.

A rede logística inclui tanto o modal dutoviário quanto o modal marítimo, que são utiliza-

dos para o transporte de petróleo e seus derivados. O submodelo logístico considera arcos de

transporte entre cada par de holons relacionados. O horizonte de planejamento ? é de 2 meses,

e os períodos P? são:

• P3 =1 bimestre (alto nível tático)

$ / M m3 glp gasolina querosene diesel oc

venda - Mercado 338 690 871 683 250

Tabela 8: Preços de Venda dos Derivados



193

Continente glp gasolina querosene diesel oc
M m3 - $ Qtde Preço Qtde Preço Qtde Preço Qtde Preço Qtde Preço

África
compra 0 - 0 - 0 - 0 - 0 -
venda 100 409 0 - 0 - 0 - 0 -

America compra 0 - 0 - 0 - 0 - 380 636
do Norte venda 0 - 200 784 0 - 556 777 0 -

Ásia
compra 0 - 0 - 0 - 0 - 610 633
venda 0 - 100 695 140 773 344 782 0 -

Europa
compra 0 - 0 - 0 - 0 - 100 630
venda 0 - 900 676 0 - 0 - 0 -

Oriente compra 0 - 0 - 0 - 0 - 0 -
Médio venda 0 - 0 - 200 764 0 - 0 -

Tabela 9: Relação de Contratos para Derivados

• P2 =1 mês (baixo nível tático)

• P1 = P0 =1 semana (nível operacional)

No nível fundamental (? = 0) estão as unidades operacionais das bases, que podem ser refina-

rias, terminais e plataformas, enquanto no nível seguinte (? = 1) estão estas últimas. Assim, os

elementos destes dois níveis praticamente coincidem tanto no espaço quanto no tempo.

Foram considerados contratos com cada um dos 5 continentes envolvidos, onde podem ser

vendidos ou comprados produtos, derivados e/ou petróleos, que são mostrados nas Tabs. 9 e 10,

que mostram também os preços correspondentes.

Caso seja necessário ainda a compra ou venda destes produtos por ou para Spot Market,

existem limitações tanto de compra quanto de venda de acordo com as Tabelas 11 e 12, que

mostram também os preços correspondentes para os derivados e petróleos, respectivamente.

A Fig. 36 ilustra o escopo do caso de estudo considerado, bem como sua organização

holônica e interna. Devido à dificuldade de visualização o nível fundamental é omitido.

8.4.3 Formalização da Instância do Caso de Estudo

Na Seção 7.4 foi feita a formulação para o problema de planejamento integrado geral de-

scrito no início do Cap. 7. Assim, ela pôde ser utilizada como um template para a formulação

da instância deste caso de estudo, que é mostrada a seguir através da especificação de cada um

dos elementos da tupla (H, R, V, Dv, X, Dx, E, F, AO):

• H = {H0, . . . , H4}, onde :



194

Continente leve médio pesado
M m3 - $ Qtde Preço Qtde Preço Qtde Preço

África
compra 0 - 0 - 0 -
venda 1300 680 0 - 0 -

America compra 0 - 1000 680 1638 640
do Norte venda 0 - 0 - 0 -

Ásia
compra 0 - 1000 660 2273 642
venda 0 - 0 - 0 -

Europa
compra 0 - 0 - 453 640
venda 0 - 0 - 0 -

Oriente compra 0 - 0 - 0 -
Médio venda 1000 667 0 - 0 -

Tabela 10: Relação de Contratos para Petróleos

glp gasolina querosene diesel oc

M m3 - $ Qtde Preço Qtde Preço Qtde Preço Qtde Preço Qtde Preço
compra 1000 328 1000 669 1000 845 1000 663 1000 524
venda 1000 348 1000 711 1000 897 1000 703 1000 556

Tabela 11: Limitações e Preços de Venda e Compra do SpotMarket para Derivados

leve médio pesado

M m3 - $ Qtde Preço Qtde Preço Qtde Preço
compra - - 2000 630 1000 600
venda 3000 860 - - - -

Tabela 12: Limitações e Preços de Venda e Compra do SpotMarket para Petróleos



195

Figura 36: Visão Geral do Escopo e Topologia do Caso de Estudo



196

– H0 = {ProdutorDerivadoRefinaria1 ?0, GerênciaEstoquesRefinaria1 ?0, ComercialRefinaria1 ?0,

LogísticaInternaRefinaria1 ?0, . . .,

ProdutorDerivadoRefinaria6 ?0, GerênciaEstoquesRefinaria6 ?0, ComercialRefinaria6 ?0,

LogísticaInternaRefinaria6 ?0 ,

GerenciadorEstoqueTerminal1 ?0 , ComercialTerminal1 ?0 , LogísticaInternaTerminal1 ?0 ,...,

GerenciadorEstoqueTerminal12 ?0 , ComercialTerminal12 ?0 , LogísticaInternaTerminal12 ?0};

– H1 = {Refinaria1?1 , Terminal1?1 ,..., Terminal3?1 , LogísticaRegionalSul ?1 ,

Refinaria2?1 ,..., Refinaria4?1 , Terminal4?1 ,..., Terminal8?1 , Plataforma1?1 ,

LogísticaRegionalCentro ?1 ,

Refinaria5?1 , Refinaria6?1 , Terminal9?1 ,..., Terminal12?1 , Plataforma2?1 ,..., Plataforma7?1 ,

LogísticaRegionalLeste ?1};

– H2 = {Sul?2 , Centro?2 , Leste?2 , LogísticaContinentalAmericaSul ?2};

– H3 = {Africa?3 , AmericaNorte?3 , AmericaSul?3 , Asia?3 , Europa?3 , OrienteMédio?3 ,

LogísticaGlobal?3};

– H4 = {EE?4}.

• R = {r1, . . . , rR}

– ? = 0:

* LogísticaInternaRefinaria1 ?0 ,..., LogísticaInternaRefinaria6 ?0 são os cabeças dos

holons Refinaria1?1 ,..., Refinaria6?1 , respectivamente;

* ProdutorDerivadoRefinaria1 ?0, GerênciaEstoquesRefinaria1 ?0, ComercialRefinaria1 ?0 ,

...,

ProdutorDerivadoRefinaria6 ?0, GerênciaEstoquesRefinaria6 ?0, ComercialRefinaria6 ?0

são as partes dos holons Refinaria1?1 ,..., Refinaria6?1 , respectivamente;

* LogísticaInternaTerminal1 ?0 ,..., LogísticaInternaTerminal12 ?0 são os cabeças dos

holons Terminal1?1 ,..., Terminal12?1 , respectivamente;

* GerênciaEstoquesTerminal1 ?0, ComercialTerminal1 ?0 , ...,

GerênciaEstoquesTerminal12 ?0, ComercialTerminal12 ?0 são as partes dos holons

Terminal1?1 ,..., Terminal12?1 , respectivamente;

– ? = 1:

* LogísticaRegionalSul ?1 é o cabeça do holon Sul?2 ;

* Refinaria1?1 , Terminal1?1 ,..., Terminal3?1 são as partes do holon Sul?2 ;



197

* LogísticaRegionalCentro ?1 é o cabeça do holon Centro?2 ;

* Refinaria2?1 ,..., Refinaria4?1 , Terminal4?1 ,..., Terminal8?1 , Plataforma1?1 são as

partes do holon Centro?2 ;

* LogísticaRegionalLeste ?1 é o cabeça do holon Leste?2 ;

* Refinaria5?1 , Refinaria6?1 , Terminal9?1 ,..., Terminal12?1 , Plataforma2?1 ,..., Plataforma7?1

são as partes do holon Leste?2 ;

– ? = 2:

* LogísticaContinentalAmericaSul ?2 é o cabeça do holon AmericaSul?3 ;

* Sul?2 , Centro?2 , Leste?2 são as partes do holon AmericaSul?3 ;

– ? = 3:

* LogísticaGlobal?3 é o cabeça do holon EE?4 ;

* Africa?3 , AmericaNorte?3 , AmericaSul?3 , Asia?3 , Europa?3 , OrienteMédio?3 são

as partes do holon EE?4 .

• V = {Rv0 1 ?0, ..., Rv? i ?? ,..., v4 1 ?4}

– variáveis de decisão:

* Rplanr ?0 representa o plano de produção adotado pela refinaria r durante o

período de tempo ?0 ?{1, . . . , 8}, onde ?0 ? ?1;

* Restqb ?1 representa o vetor de produtos do nível de estoque do produto na base

b (refinaria r ou terminal t) ao final do período de tempo ?1 ?{1, . . . , 8}, onde

?0 ? ?1;

* variáveis emergentes:

· Rv? i ? : o vetor da diferença entre as quantidades de saída e entrada de cada

produto com relação à holon h? i durante o período ??.

– Dv = {DRv0 1 ?0, ..., DRv? i ?? ,..., DRv4 1 ?4}

* DRplanr = {lever, medior, pesador}

* DRestqb = {0, . . . , estoqueMaxb}

– X = {Rf1 k1 l1 ?1, ..., Rf? k? l? ?? ,..., Rf3 k3 l3 ?3,...}, onde

Rf? k l ?? : fluxo de transporte durante o período ?? e entre os subholons h? k e h? l.

– Dx = {DRf1 k1 l1 ?1, ..., DRf? k? l? ?? ,..., DRf3 k3 l3 ?3,...}

* DRf? k l ?? =
{

pzero, . . . , Cp_Max? k l ??
}

, onde pzero ? Z
n



198

– E = {E11, ..., E? i,..., E4 1},onde cada restrição de emergência é dada por

Rv? i ?? = E? i

(

Rv??1?1???1, . . . , Rv??1?B?i???1
)

=
?

???1

(

Rv??1 ?1???1 + . . . + Rv??1 ?B?i???1

)

– F = {F11, . . . , F ? i,..., F4 1} é o conjunto de subconjuntos, um para cada holon h? i,

onde F? i = {f? i 1, . . . , f? i j, ..., f? i M?i}

– AO = {AO1 1, ..., AO? i,..., AO4 1}

* Cada AO? i é definido no submodelo logístico, que é recursivo para cada nível

? &gt; 0.

A função objetivo FO =

4

?

?=0

N?

?

i=1

M?i

?

j=1

f? i j é formada pelos seguintes termos:

1. ? = 0:

(a)
?

bd?0

prcd?0 ·dmbd?0

* Constante com demandas dmbd?0 entre 10 e 318, e preços prcd?0 entre

250 e 870

* Faturamento de vendas de produtos derivados d associadas a demandas

da base b no tempo ?0 (Comercialb ?0 )

(b) ?
?

rd?0

prdCustord ·Said(planr?0)

* Variáveis de decisão planr?0 com prdCustord = 0

* Custo de produção de produtos derivados d na refinaria r e no tempo ?0

2. ? = 1:

(a) ?
?

?o?1

extCusto?o?1 ·extTaxa?o?1

* Constante com extCusto?o?1 = 0

* Custo de extração do petróleo o na plataforma ? e no tempo ?1

(b) ?
?

?

?

(
klp

f?=1 k l p ?1 · ck l p)

* Variáveis locais f1 k l p ?1 com frete ck l p ? 1

* Custo de transporte de cada produto p em cada arco de transporte definido

pelos subholons associados k e l e no tempo ?1 dentro dos superholons

Sul?2 , Centro?2 e Leste?2

3. ? = 2:

?
?

?2

?

(
klp

f?=2 k l p ?2 · ck l p)

* Variáveis locais f2 k l p ?2 com frete ck l p ? 10



199

* Custo de transporte de cada produto p em cada arco de transporte defi-

nido pelos subholons associados k e l e no tempo ?2 dentro do superholon

AmericaSul?3

4. ? = 3:
?

Cp?3

ContrV endaPrcCp?3·v
?
Cp?3

* Variáveis emergentes vCp?3 com preços de venda ContrV endaPrcCp?3 ?

650

* Faturamento de venda de cada produto p através de contrato com cada con-

tinente C e no tempo ?3

?
?

Cp?3

ContrCompraPrcCp?3·v
+
Cp?3

* Variáveis emergentes vCp?3 com preços de compra ContrCompraPrcCp?3

entre 400 e 1300

* Custo da compra de venda de cada produto p através de contrato com cada

continente C e no tempo ?3

?
?

?3

?

(
klp

f?=3 k l p ?3 · ck l p)

* Variáveis locais f3 k l p ?3 com frete ck l p ? 20

* Custo de transporte de cada produto p em cada arco de transporte definido

pelos subholons associados k e l e no tempo ?3 dentro do superholon global

EE?4 .

O vetor de produtos que aparece em todos resultados representa os produtos considerados na

seguinte ordem:

(

GLP, Gasolina, Querosene, Diesel, O?leoCombust??vel, Leve, Me?dio, Pesado
)

8.4.4 Caso Padrão

Neste caso, foram consideradas situações rotineiras, sem o aparecimento de imprevistos.

Na solução do planejamento integrado usando este cenário, que será chamado daqui para frente

de cenário padrão, os submodelos propostos utilizam as características principais do planejador

centralizado e suas simplicações, tais como o uso de modelos lineares na produção, sem consi-

derar o escalonamento das atividades logísticas do nível operacional. Além disso, como tanto o



200

modelo distribuído holônico proposto quanto um planejador centralizado convencional são de-

terminísticos, ambos não tratam a incerteza diretamente. Portanto, no caso padrão as possíveis

vantagens do modelo proposto, como a sua natureza distribuída ou a utilização de submodelos

não-lineares e de escalonamento no nível operacional, não aparecem. Assim, em princípio as

diferenças de previsão obtidas entre ambos não devem ser muito grandes. E de fato o resultado

obtido com este caso padrão está dentro da um tratando convencional relativo a dados repre-

sentativos como aqueles do caso de estudo em questão. A próxima seção apresenta o processo

de solução proposto nesta tese para o problema do planejamento integrado como um HCOP, e

no Anexo D os resultados detalhados são mostrados. A variável emergente real Rv?4 EE ?4 asso-

ciada ao holon global Empresa Estendida é a variável principal da holarquia, a partir da qual é

iniciada a fase 3 do HCOMA com a definição do valor da função objetivo na forma do lucro

total, bem como da solução completa, que contempla todas as variáveis holônicas associadas

também aos níveis inferiores. Assim, por uma questão de comodidade, a solução do caso pa-

drão é representada a seguir pelos valores do lucro total e da variável emergente Rv?4 EE ?4 , onde

cada componente equivale à compra ou venda extra de produtos por ou para SM. Esta mesma

representação será utilizada mais adiante para os outros casos analisados neste capítulo.

Solução do Caso Padrão: Lucro = 8.859.130 M$

SM (M m3) glp gasolina querosene diesel oc leve médio pesado

Compra 0 0 0 0 14 0 161 245

Venda 62 26 45 90 0 91 0 0

8.4.5 Apresentação Resumida do Processo de Solução do Caso Padrão

Dentro da região Sul?2 há uma refinaria (Refinaria1?1 ) e 3 terminais no nível ? = 1. As-

sim, no nível fundamental (? = 0), existem os holons atômicos ProdutorDerivadosRefinaria1 ?0 ,

GerênciaEstoquesRefinaria1 ?0 , ComercialRefinaria1 ?0 , LogísticaInternaRefinaria1 ?0 e

GerenciadorEstoqueTerminal1 ?0 , ComercialTerminal1 ?0 , LogísticaInternaTerminal1 ?0 para cada um

dos terminais (Terminal1?1, Terminal2?1 e Terminal3?1 ).

O ProdutorDerivadosRefinaria1 ?0 recebe do submodelo de produção o seguinte domínio da

sua variável de decisão plano de produção:

DRplanRefinaria1 p = {leveRefinaria1, medioRefinaria1, pesadoRefinaria1} ,

leveRefinaria1 = (8, 86, 30, 92, 82,?238, 0, 0),

medioRefinaria1 = (8, 58, 21, 73, 17, 0,?238, 0) e



201

pesadoRefinaria1 = (6, 47, 16, 70, 17, 0, 0,?238)

Cada elemento é associado com o processamento de um tipo de petróleo e representa a

quantidade de entrada de petróleo e de saída otimizada para cada derivado dentro do período de

tempo de uma semana, que vale no nível operacional (P0).

O GerênciaEstoqueb ?0 tanto da Refinaria1?1 quanto dos terminais Terminal1?1, Terminal2?1

e Terminal3?1 recebem como parâmetros de entrada os estoques inicial, mínimo e máximo de

cada produto:

• Refinaria1

EstoqueInicial = (14, 131, 18, 110, 61, 0, 238, 0)

EstoqueM??nimo = (0, 0, 0, 0, 0, 0, 0, 0)

EstoqueMa?ximo = (36, 186, 47, 170, 100, 240, 240, 240)

• Terminal1

EstoqueInicial = (4, 3, 0, 31, 15, 0, 0, 0)

EstoqueM??nimo = (0, 0, 0, 0, 0, 0, 0, 0)

EstoqueMa?ximo = (5, 20, 10, 66, 38, 0, 0, 0)

• Terminal2

EstoqueInicial = (4, 3, 0, 17, 0, 0, 0, 0)

EstoqueM??nimo = (0, 0, 0, 0, 0, 0, 0, 0)

EstoqueMa?ximo = (5, 11, 10, 23, 10, 0, 0, 0)

• Terminal3

EstoqueInicial = (0, 0, 0, 0, 0, 0, 238, 0)

EstoqueM??nimo = (0, 0, 0, 0, 0, 0, 0, 0)

EstoqueMa?ximo = (0, 0, 0, 0, 0, 260, 260, 260)

O holon Refinaria1 recebe o domínio da sua variável plano do seu ProdutorDerivado e tanto

ele quanto os holons terminais recebem os parâmetros de estoque do seu respectivo Gerenci-

adorEstoque, que equivale ao domínio da sua variável de estoque. Assim, estes holons enviam

estas informações para o seu cabeça, que é o LogísticaRegionalSul ?1 associado ao tempo ?1, ini-

ciando a fase I do HCOMA. Após receber a mensagem READY de todos os subholons a Logís-

ticaRegional é responsável pela chamada do algoritmo de otimização centralizado AO?=2 Sul ?2



202

correspondente ao holon Sul?2 , que é representado pelo submodelo logístico instanciado para

esta região. Outra responsabilidade do cabeça é tratar da restrição holônica associada a função

de emergência (Eq. 6.8), neste caso:

Rv?=2 Sul ?2 =
?

?1

(RplanRefinaria1 ?1 +
?

p

(RestqRefinaria1 ?1 + RestqTerminal1 ?1+

+RestqTerminal2 ?1 + RestqTerminal3 ?1))
(8.2)

É possível construir o domínio da variável real Rv2 Sul ? a partir das variáveis holônicas

reais dos subholons do nível inferior, levando em conta a ordem total obtida a partir da utilidade

associada a cada elemento deste domínio, neste caso o lucro (vide Eq. 7.8). Além disso, como

o tamanho do domínio de qualquer variável emergente é definida a priori (vide Eq. 7.7), o

seguinte domínio real foi obtido:

DRv2 Sul ?2 = {elmin, . . . , elmi, . . . , elmax},

onde elmin = argminelm(lucro(elm)),

elmax = argmaxelm(lucro(elm)),

elmi ? DRv2 Sul ?2 : elmi = lucro
?1(lucroi),

lucroi =
(lucroMax?lucroMin)
tamanhoDominio?1

i + lucroMin,

lucroMax = lucro(elmax)

e lucroMin = lucro(elmin)

A diferença de lucro entre os elementos sucessivos do domínio é dada por fator pro rata
(lucroMax?lucroMin)
tamanhoDominio?1

i.

As utilidades lucroMax e lucroMin são obtidas por duas chamadas iniciais ao submodelo

logístico associado ao holon Sul?2 pela LogísticaRegional, na primeira vez visando a maxi-

mização e na segunda a minimização. A partir daí o submodelo holístico é chamado itera-

tivamente pelo mesmo cabeça para a obtenção dos valores das variáveis holônicas dos sub-

holons, neste caso refinaria e terminais, respeitando a restrição holônica da Eq. 8.2 para cada

elemento elmi pro rata ao longo desta iteração. Para cada chamada do submodelo logístico,

o LogísticaRegional recebe através das mensagens SOLUTION as soluções obtidas tanto para

as variáveis RplanRefinaria1 ?1, RestqRefinaria1 ?1 e RestqTerminais1 ?1 . . . RestqTerminais3 ?1 (var-

iáveis holônicas) quanto as variáveis fluxo de transporte Rf?=1 base1 base2 ?1 entre 2 bases do

holon Sul?2 (variáveis locais). Estas soluções são associadas ao valor da variável emergente



203

glp gasolina querosene diesel oc leve médio pesado

compra 0 0 0 0 14 0 161 245
venda 62 26 45 90 0 91 0 0

Tabela 13: Solução de Venda e Compra do SpotMarket

DRv2 Sul ?2 correspondente, e todo o conjunto é guardado para uso posterior nas seguintes estru-

turas de dados:

Soluc?a?o_Holo?nica[elmi] ?
(

Rv???1 ?1?1, . . . , Rv
?
??1 ?B?i?1

)

Rv2 Sul ?2?elmi

Soluc?a?o_Local[elmi] ?
(

Rf?basei basej ?1, ..., Rf
?
basei basej ?1

, ...
)

Rv2 Sul ?2?elmi

(8.3)

onde elmi ? DRv2 Sul ?2 .

O mesmo procedimento é repetido nos holons Centro?2 e Leste?2 simultaneamente pelos

respectivos subholons cabeça dentro do nível ? = 2. Estes cabeças representam seus holons cor-

respondentes em relação ao cabeça do superholon, neste caso o holon LogísticaContinentalAmericaSul ?2

e o superholon AmericaSul?3 respectivamente. Assim, os holons Sul?2 , Centro?2 e Leste?2

enviam as informações dos domínios de suas variáveis holônicas para o seu cabeça, e depois a

mensagem READY, quando a LogísticaContinentalAmericaSul ?2 aciona o algoritmo de otimiza-

ção centralizado AO3 AmericaSul ?3 que é representado pelo submodelo logístico instanciado para

este continente. Esta recursão prossegue até o holon global EE?4 , quando chega a fase 2 com

a ativação do submodelo logístico relativo ao sistema total. Este último considera o subholon

AmericaSul?3 , que é o mais importante, bem como os outros subholons continentes, que são

holons atômicos e possuem uma variável de decisão cujo domínio é unitário, e, portanto, já tem

uma solução. Este valor coincide com o valor de compra ou venda associado ao respectivo con-

tinente (Tab. 9). Então a LogísticaGlobal?3 como representante do superholon EE?4 verificou

os limites de venda e compra do SpotMarket (Tab. 11), determinando que existe uma solução

viável definida pelos valores de compra e venda por ou para SM mostrados na Tab. 13, de modo

a satisfazer toda a demanda dos clientes.

Assim, foi gerada a seguinte solução otimizada global associada à variável holônica emer-

gente Rv4 EE ?4 , que representa a solução do caso padrão:

Rv?4 EE ?4 = (?62, ?26, ?45, ?90, 14, ?91, 161, 245)

Neste momento é iniciado a fase 3 do HCOMA, onde o holon LogísticaGlobal?3 , que é

o cabeça do EE?4 , pode recuperar a solução tanto das variáveis holônicas dos seus subholons



204

quanto as variáveis locais do seu superholon, utilizando a estrutura de dados definida na Eq. 8.3

para guardar estas soluções no sentido inverso, como é mostrado a seguir:

(

Rv?3 AmericaSul ?3, Rv
?
3 Africa ?3

, . . . , Rv?3 OrienteMedio ?3
)

? Soluc?a?o_Holo?nica[Rv?4 EE ?4]

(

Rf?3 Africa AmericaSul ?3, . . . , Rf
?
3 OrienteMedio AmericaSul ?3

)

? Soluc?a?o_Local[Rv?4 EE ?4]

As seguintes soluções das variáveis holônicas são enviadas para cada um dos seus subholons

correspondentes através de uma mensagem VALUE:

Rv?3 AmericaSul ?3 = (?162, ?1226, ?385, ?990, 1104, ?2391, 2161, 4609)

Rv?3 Europa ?3 = (0, 900, 0, 0, ?100, 0, 0, ?453)

Rv?3 AmericaNorte ?3 = (0, 200, 0, 556, ?380, 0, ?1000, ?1638)

Rv?3 Africa ?3 = (100, 0, 0, 0, 0, 1300, 0, 0)

Rv?3 Asia ?3 = (0, 100, 140, 344, ?610, 0, ?1000, ?2273)

Rv?3 OrienteMedio ?3 = (0, 0, 200, 0, 0, 1000, 0, 0)

A solução obtida para as variáveis locais, i.e., os fluxos de transporte entre os continentes e

o SM, foi a seguinte:

Rf?3 AmericaSul Europa ?3 = (0, 0, 0, 0, 100, 0, 0, 453)

Rf?3 Europa AmericaSul ?3 = (0, 900, 0, 0, 0, 0, 0, 0)

Rf?3 AmericaSul AmericaNorte ?3 = (0, 0, 0, 0, 380, 0, 1000, 1638)

Rf?3 AmericaNorte AmericaSul ?3 = (0, 200, 0, 556, 0, 0, 0, 0)

Rf?3 AmericaSul Africa ?3 = (0, 0, 0, 0, 0, 0, 0, 0)

Rf?3 Africa AmericaSul ?3 = (100, 0, 0, 0, 0, 1300, 0, 0)

Rf?3 AmericaSul Asia ?3 = (0, 0, 0, 0, 610, 0, 1000, 2273)

Rf?3 Asia AmericaSul ?3 = (0, 100, 140, 344, 0, 0, 0, 0)

Rf?3 AmericaSul OrienteMedio ?3 = (0, 0, 0, 0, 0, 0, 0, 0)

Rf?3 OrienteMedio AmericaSul ?3 = (0, 0, 200, 0, 0, 1000, 0, 0)



205

Rf?3 AmericaSul SM ?3 = (0, 0, 0, 0, 14, 0, 161, 245)

Rf?3 SM AmericaSul ?3 = (62, 26, 45, 90, 0, 91, 0, 0)

Quando o subholon AmericaSul?3 recebe a solução de sua variável holônica, seu holon

cabeça LogísticaContinentalAmericaSul ?2 recupera as soluções das variáveis holônicas dos seus

subholons, que são enviados por mensagens VALUE para seus subholons, e também recupera

as variáveis locais (fluxos de transporte) do seu superholon. A seguir aparecem estas soluções:

Rv?2 Sul ?2=0 = (?56, ?154, ?46, 75, 76, 0, ?476, 0)

Rv?2 Sul ?2=1 = (?70, ?273, ?64, ?87, 0, 0, ?952, 0)

Rv?2 Centro ?2=0 = (80, ?33, ?55, ?106, 577, 50, ?1545, ?180)

Rv?2 Centro ?2=1 = (?16, ?688, ?215, ?1141, 180, 0, ?3030, ?610)

Rv?2 Leste ?2=0 = (?33, 155, 24, 294, 248, ?863, 4082, 2631)

Rv?2 Leste ?2=1 = (?67, ?233, ?29, ?25, 23, ?1578, 4082, 2768)

Rf?2 Centro Leste ?2=0 = (33, 0, 0, 0, 0, 50, 0, 0)

Rf?2 Centro Leste ?2=1 = (0, 0, 0, 0, 0, 0, 0, 0)

Rf?2 Leste Centro ?2=0 = (0, 1, 24, 106, 0, 0, 1545, 180)

Rf?2 Leste Centro ?2=1 = (0, 0, 0, 0, 0, 0, 3030, 610)

Rf?2 Centro Sul ?2=0 = (47, 0, 0, 0, 0, 0, 0, 0)

Rf?2 Centro Sul ?2=1 = (0, 0, 0, 0, 0, 0, 0, 0)

Rf?2 Sul Centro ?2=0 = (0, 0, 0, 0, 0, 0, 0, 0)

Rf?2 Sul Centro ?2=1 = (0, 0, 0, 0, 0, 0, 0, 0)

Rf?2 Leste Sul ?2=0 = (0, 154, 0, 0, 0, 0, 476, 0)

Rf?2 Leste Sul ?2=1 = (0, 0, 0, 0, 0, 0, 952, 0)

Rf?2 Sul Leste ?2=0 = (0, 0, 0, 0, 0, 0, 0, 0)

Rf?2 Sul Leste ?2=1 = (0, 0, 0, 0, 0, 0, 0, 0)

Recursivamente este processo continua até o nível ? = 1, onde aparecem as últimas var-

iáveis locais na forma de fluxos de transporte Rf1 base1 base2 ?1 entre duas bases dentro de uma

mesma região, e as últimas variáveis holônicas de decisão, onde estão as variáveis de decisão



206

Rplanr ?0 associadas a cada refinaria e Restqb ?0 associadas a cada base (terminal e refinaria) e

cada produto (derivado e petróleo). O Anexo D mostra a solução completa do caso padrão.

8.4.6 Análise do Caso Padrão

Nesta etapa o caso padrão foi utilizado para a análise de desempenho e de viabilidade quan-

titativos do modelo proposto. Foram observados tanto a evolução do tempo de processamento

quanto a evolução da busca da solução ótima. Esta última foi dividida na análise da função

objetivo e da solução propriamente dita.

Vimos na fase I que os parâmetros considerados para as instâncias do HCOP são o número

de holons, o número de variáveis locais, o número de camadas e o tamanho do domínio. Cada

um destes parâmetros foi variado de modo a permitir a análise do seu efeito no tempo de solução

e no desempenho de cada abordagem. Por outro lado, na fase II foi utilizado um caso de

estudo onde estes parâmetros permaneceram inalterados durante todos os experimentos, exceto

o tamanho do domínio, que é o único que não depende da topologia e da rede de restrições do

problema. De fato:

• os holons eram os mesmos, pois os elementos permaneceram fixos, tanto no espaço

quanto no tempo (por exemplo, as refinarias, terminais, continentes, etc.);

• o número de variáveis locais ficou inalterado, pois estas foram representadas pelos fluxos

de transporte entre pares de subholons dentro de cada superholon;

• o número de camadas foi fixo em 4.

Por isso, todos os três gráficos a seguir são feitos em função do tamanho do domínio de todas

as variáveis holônicas emergentes, utilizando a invariância do tamanho dos domínios (vide Eq.

7.7). Como já foi dito na fase I, o tamanho do domínio é uma grandeza de suma importância

para os problemas de restrições em geral, pois, de um lado, ele está intimamente ligado com

o grau de dificuldade na solução do problema, e, por outro lado, ele interfere com o nível de

precisão e qualidade da solução no caso do HCOP.

Tempo de Processamento O gráfico da Fig. 37 mostra a evolução do tempo total de pro-

cessamento. Na análise do tempo da fase I para um HCOP genérico, foi observado que ele

varia de forma linear em relação ao tamanho do domínio das variáveis holônicas (vide Fig. 33).

Entretanto, esta variação foi exponencial em relação ao número de holons na fase I (vide Fig.



207

Figura 37: Gráfico de Tempo de Processamento

32). Como este último foi fixo em todos os experimentos desta fase, é esperado este comporta-

mento do tempo similar ao que aconteceu na fase I, onde esta medição foi feita com o número

de holons mantido fixo com a variação do tamanho do domínio.

Como o tamanho do domínio está intimamente ligado à dificuldade na solução do problema,

é esperado um crescimento do tempo de processamento com o aumento do tamanho do domí-

nio. Entretanto, podemos observar que este tempo tende assintoticamente a um determinado

valor. Embora o caso de estudo não seja completamente real, seu escopo e dados são repre-

sentativos e significativos. Assim, o valor do tempo de processamento foi baixo (cerca de 10

minutos), principalmente em relação aos tempos de execução de planejadores centralizados re-

ais. Portanto, em princípio, o comportamento do tempo foi favorável à modelagem do problema

do planejamento integrado da cadeia de suprimentos como um HCOP.

Função Objetivo: Lucro Total O gráfico da Fig. 38 mostra a busca do valor ótimo do

lucro total em função do tamanho do domínio. Apesar das instabilidades que ocorreram para

pequenos valores do tamanho do domínio, pode ser observado que a função lucro converge à

medida que estes valores aumentam, mostrando a viabilidade do modelo de otimização. Este

valor assintótico da função objetivo representa o ótimo de acordo com o modelo proposto (Eq.

8.4), onde E é a estratégia de decisão, segundo a Eq. 7.48.

Lucro? = limtamanhoDom??nio??Lucro(E) (8.4)

Assim, a solução Lucro? = 8.859.130.M associada ao caso padrão foi obtida com o va-

lor 180 para o tamanho do domínio. Tal valor é o máximo possível, tal a permitir a cons-

trução do conjunto de domínio para todas as variáveis emergentes. Acima deste valor não



208

Figura 38: Gráfico da Função Objetivo

foi possível a obtenção do domínio para, pelo menos, uma variável, contendo apenas valores

inteiros dentro dos limites mínimo e máximo disponíveis para cada produto. Como há um ve-

tor de vários produtos, então existe um número exponencial de possíveis tamanhos para cada

domínio DRv? i ? associado a uma correspondente variável emergente real Rv? i ? , que é igual a

d1 × . . .×dp × . . .×dn, onde dp é o tamanho do domínio relativo à componente do produto p

e n = nderivados + npetro?leos = 5 + 3 = 8. Mais formalmente, o valor máximo destes domínios

pode ser encontrado através da Eq. 8.5, que define o valor mínimo do tamanho do domínio com

relação a todas as variáveis emergentes do problema, onde Maxp(DRv? i ?) e Minp(DRv? i ?)

representam o valor máximo e mínimo da componente do produto p, respectivamente, associa-

dos à variável emergente Rv? i ? .

LimiteMa?ximoTamanhoDom??nio = argminRv? i ?

n
?

p=1

[Maxp(DRv? i ?)?Minp(DRv? i ?) + 1]

(8.5)

Solução Vetorial Como já mencionado, a variável emergente real Rv?4 EE ?4 associada ao ho-

lon global EE representa a solução completa do problema do planejamento e seu valor significa

a quantidade resultante do holon EE para cada produto, que pode ser uma disponibilidade (+)

ou uma necessidade (-) em relação ao SM (vide Seção 7.3.6). Como as soluções pertencem a

um espaço vetorial onde cada dimensão representa um produto (derivados e petróleos), o grá-

fico da Fig. 39 mostra, desta vez, a busca da solução ótima para cada componente deste vetor de

produtos associado à variável Rv?4 EE ?4 em função do tamanho do domínio. Tal como aconteceu

com a função objetivo, pode ser observada também uma convergência para cada produto neste



209

vetor de solução. Assim, o valor assintótico Rv?4 EE ?4 deste vetor representa a solução buscada,

como é mostrado na Eq. 8.6

Rv?4 EE ?4 = limtamanhoDom??nio??Rv
?
4 EE ?4

(E) (8.6)

Desta forma, a solução para o caso padrão foi encontrada utilizando o tamanho do domínio

igual a 180, que leva à melhor qualidade possível dentro do limite imposto pela Eq. 8.5. Como

já visto, estes valores são:

Rv?4 EE ?4 = (?62, ?26, ?45, ?90, 14, ?91, 161, 245)

A existência de convergência nos casos da função objetivo e da solução vetorial foi funda-

mental para a conclusão de que o modelo proposto é viável. Em uma situação hipotética geral,

tendo ou não convergência, existiriam para estes dois casos funções associadas ao tamanho do

domínio. Se supusermos, por absurdo, que estas funções não convergissem com a evolução

do tamanho do domínio, então não existiria nenhum critério aceitável para definir um valor

único de saída para cada uma das duas funções associadas a lucro e solução vetorial ótimos,

respectivamente. Portanto, o modelo seria inviável como modelo de otimização.

Por outro lado, o teste com valores do parâmetro “tamanho de domínio” maiores que 180

apontou um limite na possibilidade de obtenção de soluções pelo modelo, devido a um limite

na precisão das informações de entrada, bem como à decisão de considerar o mesmo tamanho

de domínio para todas as variáveis holônicas do problema.

8.4.7 Análise de Cenários com Contingência

Nesta etapa foi utilizada nos experimentos o valor máximo do tamanho de domínio (180),

onde a qualidade da solução foi a melhor obtida. Para a análise de desempenho qualitativo,

foram feitas comparações entre o caso padrão (cenário padrão e submodelos convencionais) e

os outros casos:

• caso I:

– cenário semelhante ao cenário padrão, a menos de pequenas mudanças;

– mesmos submodelos utilizados pelo caso padrão



210

Figura 39: Gráficos da Solução Vetorial

• casos II e III:

– cenário padrão

– submodelos diferentes do caso padrão

Caso I: Imprevistos Sendo distribuído, o modelo proposto lida de forma mais realista com

situações tais como a mudança da capacidade de produção de uma refinaria, a mudança da

capacidade de transporte (óleodutos ou navios), a mudança da taxas de extração de petróleo em

plataformas e a mudança da demanda prevista por um produto derivado.

Nos experimentos foram considerados os três primeiros casos de imprevistos, cujas descri-

ções e resultados são apresentados a seguir.

Caso IA: Redução na Produção de uma Refinaria Foi criado um cenário parecido com

o cenário padrão, mas com apenas uma mudança. Houve um problema de contaminação do

produto diesel na refinaria da região sul, que comprometeu toda a produção deste derivado a

longo da primeira semana do período de planejamento.



211

Caso Padrão Lucro = 8.859.130 M$

SM (M m3) glp gasolina querosene diesel oc leve médio pesado

Compra 0 0 0 0 14 0 161 245

Venda 62 26 45 90 0 91 0 0

Caso IA: Cenário Padrao + Imprevisto Lucro = 8.726.226 M$

SM (M m3) glp gasolina querosene diesel oc leve médio pesado

Compra 14 399 7

Venda 65 37 50 218 91

O modelo proposto conseguiu avaliar o impacto do imprevisto em todo o sistema, estimando

a perda acarretada por ele (132.904 M$). A importação de derivados se manteve praticamente

constante, exceto no caso do diesel, que foi diretamente afetado pelo problema e teve seu valor

de venda pelo SM mais alto. Além disso, é possível notar uma adaptação do EE à situação

imprevista, mudando o perfil de exportação do petróleo, que passou a ser maior com relação ao

tipo leve (mais caro), e mínimo para o tipo pesado.

CasoI-B: Redução na Capacidade de Transporte Aqui também foi criado um cenário

parecido com o cenário padrão, mas desta vez levando em conta um imprevisto na capacidade

de transporte de petróleo do óleoduto entre um terminal e uma refinaria da região leste. Esta

capacidade caiu à metade na primeira semana do horizonte de planejamento, com a consequente

queda na carga desta refinaria, que funcionou em meia carga durante este período.

Caso Padrão Lucro = 8.859.130 M$

SM (M m3) glp gasolina querosene diesel oc leve médio pesado

Compra 0 0 0 0 14 0 161 245

Venda 62 26 45 90 0 91 0 0

CasoI-B: Cenário Padrao + Imprevisto Lucro = 8.693.164 M$

SM (M m3) glp gasolina querosene diesel oc leve médio pesado

Compra 0 0 0 0 0 0 161 377

Venda 54 57 35 147 14 221 0 0



212

Novamente o modelo proposto conseguiu avaliar o impacto do imprevisto em todo o sis-

tema, estimando a perda acarretada por ele (165.966 M$). A mudança afetou a produção dos

derivados mais leve como a gasolina e o diesel, e por consequência foi necessário alterar o per-

fil do petróleo consumido. Assim, aumentou a compra do petróleo leve, enquanto aumentou

também a venda do petróleo pesado interno. Por esta mesma razão, o óleo combustível, que é

um derivado mais pesado, teve sua produção reduzida e por isto ele foi comprado no SM para

honrar os contratos de venda associados.

CasoI-C: Mudança na Extração de Petróleo Aqui também foi criado um cenário parecido

com o cenário padrão, mas desta vez levando em conta um imprevisto na extração de petróleo

da Plataforma7 da região centro. Esta extração foi interrompida durante a primeira semana do

horizonte de planejamento.

Caso Padrão Lucro = 8.859.130 M$

SM (M m3) glp gasolina querosene diesel oc leve médio pesado

Compra 0 0 0 0 14 0 161 245

Venda 62 26 45 90 0 91 0 0

CasoI-C: Cenário Padrao + Imprevisto Lucro = 8.610.924 M$

SM (M m3) glp gasolina querosene diesel oc leve médio pesado

Compra 0 0 0 0 84 0 0 599

Venda 43 13 23 99 0 181 547 0

O modelo proposto conseguiu avaliar o impacto do imprevisto em todo o sistema, estimando

a perda acarretada por ele (248.206 M$). Como o imprevisto foi em uma plataforma com um

petróleo médio, a quantidade deste tipo de petróleo foi reduzida, e por consequência levando ao

aumento da sua compra no SM, de modo a honrar os contratos de venda associados. Ao mesmo

tempo, a compra do petróleo do tipo leve também aumentou, de modo a reforçar a produção

dos derivados mais leves, aos quais eles são mais adequados.

Caso II: Modelo Não-Linear de Produção O caso padrão considera para cada refinaria o

submodelo linear simplificado da Fig. 40, enquanto na realidade seu funcionamento se apro-

xima mais do esquema mostrado na Fig. 41. Neste caso é usado um submodelo de produção



213

ainda simplificado, mas não-linear, que trata o comportamento não-linear da unidade FCC, que

recebe um produto intermediário da unidade de destilação e envia subprodutos para as unidades

internas HDS e HDT da refinaria (vide Seção 3.5.2). Neste modelo é considerado apenas o

atributo API do produto de entrada no FCC e como ele afeta o rendimento da saída do FCC. O

submodelo não-linear funciona como um modelo substituto off-line (vide Seção 3.4.2), levando

em conta um comportamento do FCC mais próximo à realidade, de modo a substituir os planos

de produção gerados pelo submodelo de produção linear. Tal como aconteceu no submodelo

padrão, estes planos são incluídos no nível holônico fundamental através do método de Com-

pilação (Seção 6.4). Assim, apareceram diferenças de rendimento que são dependentes do API

do petróleo utilizado.

Caso Padrão Lucro = 8.859.130 M$

SM (M m3) glp gasolina querosene diesel oc leve médio pesado

Compra 0 0 0 0 14 0 161 245

Venda 62 26 45 90 0 91 0 0

Caso II: Submodelo Não-Linear de Produção Lucro = 8.036.426 M$

SM (M m3) glp gasolina querosene diesel oc leve médio pesado

Compra 0 0 0 0 0 0 757 771

Venda 41 8 24 294 105 1625 0 0

Neste caso o modelo proposto estima uma diferença de 822.704 M$ no lucro previsto de-

vido a uma avaliação irreal feita com o submodelo linear. Entretanto, como o submodelo não-

linear leva a resultados mais realistas, pois ele provê uma descrição mais acurada dos processos

no nível operacional, esta previsão poderia ser usada no perfil dos contratos de petróleo, de

modo a diminuir a diferença, ou mesmo aumentar o lucro. De fato, no segundo caso o modelo

aumentou a quantidade do petróleo leve dentro do limite possível, enquanto a importação deste

petróleo foi compensada pela exportação do petróleo pesado interno.

Caso III: Escalonamento no Nível Operacional As atividades de escalonamento no nível

operacional não podem ser modeladas através de abordagens convencionais, e muito menos ser

embutidas no problema maior de planejamento centralizado. A motivação para se usar o modelo

proposto é explorar a capacidade de lidar com subproblemas locais, que podem impedir uma

previsão otimista e irreal ou a não previsão de uma inviabilidade na solução do planejamento



214

Figura 40: Submodelo Simplificado Linear de uma Refinaria

Figura 41: Submodelo Simplificado Realista de uma Refinaria



215

Figura 42: Gargalo na Distribuição de Petróleo entre a Refinaria2 e a Refinaria3

nos níveis mais altos.

A previsão convencional com o caso padrão não utilizou nada relacionado com o escalona-

mento de atividades no nível operacional. Neste caso o mesmo cenário é tratado levando em

conta um problema de escalonamento no fornecimento de petróleo para duas refinarias da região

central, onde existe um gargalo devido à um oleoduto comum entre o terminal marítimo e cada

uma destas refinarias, como pode ser visto na Fig. 42. Os dados relativos ao escalonamento

específico foram obtidos através do método de Compilação (Seção 6.4).

Caso Padrão Lucro = 8.859.130 M$

SM (M m3) glp gasolina querosene diesel oc leve médio pesado

Compra 0 0 0 0 14 0 161 245

Venda 62 26 45 90 0 91 0 0

Caso III: Escalonamento em Foco Lucro = 8.508.064 M$

SM (M m3) glp gasolina querosene diesel oc leve médio pesado

Compra 0 0 0 0 0 0 0 749

Venda 42 3 47 161 159 181 558 0

O modelo proposto conseguiu avaliar o impacto da consideração do problema de escalo-

namento descrito, estimando uma diferença de 351.066 M$ no lucro previsto devido a uma

avaliação irreal feita com o modelo convencional.



216

8.5 Conclusão

Os experimentos deste capítulo foram divididos em duas fases. Na primeira fase os dois

meta-algoritmos desenvolvidos no capítulo anterior foram comparados entre si e também com

um solucionador centralizado, de forma a avaliar seus desempenhos. Para isso foi usado um

HCOP genérico baseado em um tipo de DCOP denominado Max-DisCSP, mas usando parâ-

metros para suas instâncias com características de um HCOP mais complexo. Os resultados

apontaram o HCOMA DPOP como a melhor escolha para resolver um HCOP.

Apesar das diferenças entre o problema da fase I e o problema de planejamento integrado

da fase II, foi possível concluir pelo uso único do HCOMA DPOP na fase II, comparando suas

características comuns e levando em conta a larga vantagem obtida por este meta-algoritmo em

relação ao outro.

Na fase II, o HCOP foi utilizado para descrever o problema de Planejamento Integrado da

Cadeia de Suprimentos da Indústria do Petróleo com o objetivo de avaliar o desempenho do

modelo distribuído para solucionar este problema. Foi utilizado um caso de estudo baseado em

dados históricos da empresa PETROBRAS, com uma única holarquia, baseada em topologia e

restrições holônicas fixas, mas diferentes cenários e submodelos.

A análise dos resultados da fase II foi dividida em duas partes. Ambas foram dedicadas

tanto análise de dempenho quanto à viabilidade do modelo. A primeira focalizou a análise

quantitativa, enquanto a segunda a análise qualitativa deste modelo. A análise de desempenho

quantitativo utilizou o caso padrão e considerou o tempo de processamento, função objetivo e

solução vetorial. Diferentemente da fase I, esta fase utilizou uma única instância, pois o objetivo

aqui foi avaliar o modelo do planejamento aplicado em uma instância e cenários representativos,

e não avaliar os algoritmos como na fase I. Assim, os três estudos consideraram o tamanho do

domínio das variáveis holônicas emergentes do problema. A obtenção de convergência, princi-

palmente nos casos da função objetivo e da solução vetorial, foi fundamental para a conclusão

de que o modelo proposto é viável. Em ambos os casos o valor limite foi obtido utilizando 180

como valor máximo do tamanho de domínio, o que levou à melhor qualidade possível dentro

do limite imposto pela Eq. 8.5.

A segunda parte foi destinada à análise de desempenho e de viabilidade qualitativos do mo-

delo. Nestes experimentos foi utilizado o valor máximo 180 da parte anterior como o tamanho

do domínio, de forma a se obter a melhor qualidade na solução. Foram utilizados quatro cená-

rios, sendo o primeiro o cenário padrão. Além disso foram considerados quatro casos diferentes,

sendo o primeiro o caso padrão. Ele foi usado como base de comparação e utilizou o cenário



217

padrão e os submodelos logísticos e de produção convencionais do planejador centralizado. O

caso I contém três cenários parecidos com o cenário padrão, cada um deles com um tipo de

imprevisto e utilizando os submodelos convencionais. Já os casos II e III utilizaram o cenário

padrão, mas com diferenças nos submodelos.

O caso padrão foi comparado com cada um dos casos I. Estes últimos tratam de eventos

imprevistos e através da comparação o modelo proposto conseguiu avaliar o impacto do im-

previsto sobre todo o sistema, estimando a consequente perda. O modelo holônico distribuído

mostrou a viabilidade para lidar bem com situações imprevistas, pois por ser distribuído tem

acesso às mudanças mais rapidamente. Por outro lado, o planejador centralizado convencional

em geral tem um tempo de retardo grande, decorrente da lentidão dos processos normais de

uma grande empresa, e principalmente, devido ao fato de ser centralizado.

Os casos II e III foram comparados com o caso padrão, mas o objetivo agora foi avaliar

os submodelos utilizados. Diferente dos casos I, onde o fato de ter havido perda decorrente

dos eventos imprevistos é previsível, o mesmo são pode ser dito com relação aos casos II e III

necessariamente. Na verdade, no caso III, embora não seja tão óbvio como nos casos anteriores,

a a queda nos lucros poderia ser prevista, o que não coincide com perda. De fato, este caso con-

siderou um problema específico de escalonamento de atividades de transporte de petróleo entre

duas refinarias que recebem petróleo de um mesmo óleoduto. As atividades de escalonamento

no nível operacional não são consideradas nas abordagens convencionais centralizadas, devido

à sua complexidade e nível de detalhe, principalmente quando conjugadas com o próprio plane-

jamento no nível tático. Portanto, é possível concluir que as restrições do modelo convencional

no planejamento no nível mais alto são mais relaxadas, levando a uma previsão mais otimista

e irreal. Assim, a previsão do modelo proposto, considerando o problema do escalonamento,

levou a um lucro menor e foi, portanto, mais realista.

No caso II, modelo convencional centralizado utilizou um modelo linear embutido para a

produção de cada refinaria, enquanto o modelo proposto utilizou um submodelo de produção

não-linear, que trata uma parte das não-linearidades já existentes em um modelo mais completo

de uma refinaria. De fato, o modelo proposto estimou uma queda no lucro em relação à previ-

são do modelo convencional. Neste caso, não é trivial tentar prever se o resultado do modelo

completo utilizando submodelos não-lineares vai ser de maior ou menor lucro. Não existem

modelos centralizados que integrem submodelos não-lineares no nível operacional e que pos-

sam ser usados para este tipo de validação. Entretanto, existem casos de comparações entre dois

submodelos locais, um deles linear e o outro não-linear, apontando o último como mais correto,

o que não significa necessariamente maior lucro. Há uma extensa literatura disponível sobre os



218

modelos não-lineares e como eles se aproximam mais dos problemas reais. Além disso, o sub-

modelo não-linear considerado neste caso levou a um comportamento razoável, aumentando a

quantidade do petróleo leve importado, dentro do limite possível, enquanto a importação deste

petróleo foi compensada pela exportação do petróleo pesado nacional, de modo a diminuir a

diferença, ou mesmo tentar aumentar o lucro.

Existiram várias vantagens no uso da abordagem distribuída e holônica para o problema

do planejamento integrado da cadeia de suprimentos. Os agentes capturaram o comportamento

distribuído da cadeia de suprimentos e os agentes holônicos trataram as entidades associadas em

qualquer nível de granularidade e sem perder abstrações de mais alto nível. Por isso, o modelo

representou os mais altos níveis da hieraquia, que mostram complexidades crescentes e menos

previsíveis, enquanto os níveis mais baixos mostraram um comportamento mais previsível e

constante. Assim, os resultados refletiram mudanças em áreas diversas do sistema decorrente

de imprevistos locais ou de alteração de um submodelo no nível fundamental. Isto foi possível

pela integração consistente das entidades da cadeia, agregando tanto o espaço quanto o tempo.

Por outro lado, como HCOP é baseado em programação de restrições, foi possível representar

restrições não-lineares, e, além disso, se tornou mais fácil utilizar soluções obtidas a priori por

modelos substitutos off-line.

Em resumo, a análise de desempenho nesta parte da fase II foi qualitativa. Foi mostrado a

viabilidade do modelo na comparação entre os vários casos utilizando a quantidade da utilidade

(lucro) como referência. O modelo proposto conseguiu avaliar em cada caso o impacto sobre

todo o sistema das suas diferenças em relação ao caso padrão. Estas diferenças podem ser

um imprevisto no seu cenário ou um submodelo distinto do convencional, e levam o modelo

a estimar uma variação positiva ou negativa do lucro associada. Portanto, os experimentos

da fase II se constituíram também em uma prova de conceito sobre a viabilidade de utilizar a

modelagem HCOP do planejamento integrado da cadeia suprimento como uma ferramenta de

integração no futuro, tanto para previsão como para simulação de alternativas.



219

9 Conclusões

A principal motivação deste trabalho foi buscar uma solução para a modelagem do pro-

blema de planejamento integrado da cadeia de suprimentos da indústria do petróleo, que apre-

senta dificuldades tais como a tomada de decisão integrada de várias áreas de uma grande em-

presa, através de entidades distribuídas geograficamente e de vários níveis de decisão com dife-

rentes escalas de tempo. A integração destes diferentes níveis de planejamento é um assunto ra-

ramente estudado na área da cadeia de suprimentos do petróleo. Apesar de muitas contribuições

na integração espacial (horizontal), a integração temporal (vertical) tem sido pouco investigada

nesta área. Até o momento não existem soluções disponíveis para enfrentar os grandes desafios

em termos de modelagem, escalabilidade, algoritmos e esforço computacional. Contribuir para

solucionar este problema de planejamento integrado com otimização foi uma das motivações e

também uma das contribuições desta tese.

O principal objetivo desta tese foi então propor um modelo distribuído de otimização, ba-

seado em satisfação de restrições e utilizando um sistema multiagentes holônico, que servisse

para solucionar uma classe de problemas, do qual o planejamento integrado da cadeia de supri-

mentos da indústria do petróleo é um exemplo.

Tal modelo, denominado Problema de Satisfação de Restrições Holônico com Otimização

(HCOP), foi definido a partir do Problema de Satisfação de Restrições Distribuído com Otimi-

zação (DCOP) e também baseado em agentes holônicos. Além do modelo formal, foi proposta

a especificação de uma arquitetura distribuída para a solução do HCOP, através da integração

de otimizadores locais já disponíveis. Um meta-algoritmo, denominado HCOMA, foi proposto

para a implementação desta integração de acordo com a referida arquitetura. O meta-algoritmo,

em suas duas versões, resultou da transformação de dois algoritmos tradicionais para DCOP,

denominados ADOPT e DPOP, que pertencem a categorias que utilizam abordagens de solução

diferentes. A ideia por trás do HCOMA é tornar possível a integração de diferentes algoritmos

de otimização, que sejam mais adequados para os subproblemas correspondentes nos quais o

problema principal pode ser particionado.



220

Com a implementação do HCOMA, primeiramente foi realizada uma fase preliminar de

experimentos, utilizando instâncias de um HCOP genérico, que permitiu uma comparação entre

as duas versões do meta-algoritmo. A partir dos dados obtidos, privilegiou-se utilizar aquele

baseado no DPOP, em detrimento daquele baseado no ADOPT. Finalmente, foi realizada a

segunda e última fase dos experimentos, onde o melhor meta-algoritmo foi utilizado em um caso

de estudo baseado em dados históricos da PETROBRAS. Os resultados desta fase permitiram

validar o cumprimento das metas propostas no Capítulo 1 para o modelo deste trabalho:

1. Em relação à análise do impacto de mudanças imprevisíveis do ambiente, o modelo mos-

trou potencial para lidar bem com situações imprevistas. Por ser distribuído, tem acesso às

mudanças mais rapidamente. Por outro lado, o planejador centralizado convencional, em

geral, tem um tempo de retardo grande, decorrente da lentidão dos processos envolvidos,

e principalmente pela sequencialização dos mesmos devido a este caráter centralizado.

2. Este trabalho considerou o escalonamento de atividades de transporte. O escalonamento

no nível operacional não é normalmente considerado nas abordagens convencionais cen-

tralizadas, devido à sua complexidade e nível de detalhe, principalmente quando conju-

gadas com o próprio planejamento no nível tático. Portanto, é possível concluir que as

restrições do modelo convencional no planejamento no nível mais alto são mais relaxa-

das, levando a uma previsão mais otimista e irreal. Assim, a previsão do modelo proposto,

considerando as atividades do escalonamento, foi mais realista.

3. Considerando a utilização de um submodelo não-linear no nível operacional, tipicamente

os modelos de planejamento são lineares e utilizam uma representação simplificada de

toda a cadeia. Assim, eles levam a estimativas otimistas, que ignoram os objetivos dos

submodelos operacionais. Estes últimos, por outro lado, tendem a ser mais detalhados

por sua natureza, podendo levar a resultados inconsistentes em relação ao planejamento

completamente linear. Neste paradigma o nível mais alto dita as metas para os níveis mais

baixos. Os modelos não-lineares para processos do nível operacional são necessários para

prover descrições mais acuradas destes processos. Como resultado, a incorporação deste

modelos levou a resultados melhores do que aproximações lineares típicas. A influência

destes graus de liberdades nas decisões de nível mais alto podem ser exploradas em um

modelo de otimizaçao integrada. Assim, o uso destes submodelos de otimização garantem

a viabilidade destas decisões de alto nível, tanto em operações de logística quanto de

produção.

4. Finalmente, foi possível uma pequena comparação entre o modelo distribuído e o modelo

centralizado tradicional normalmente utilizado pela indústria do petróleo. Abordagens de



221

otimização simultânea para a integração da cadeia de suprimentos, naturalmente, levam

à definição de sistemas centralizados. Na prática, no entanto, o funcionamento tende a

acontecer, como se a cadeia de suprimentos fosse um sistema descentralizado. O modelo

proposto neste trabalho mantém um certo grau de independência em relação aos subsiste-

mas, enquanto que, ao mesmo tempo, persegue os objetivos pretendidos pela otimização

integrada da cadeia global. Por outro lado, o modelo centralizado não pode considerar

submodelos complexos, que teriam que ser embutidos no modelo principal, tornando o

objetivo inalcansável.

Como descrito na Seção 3.6, as estratégias principais de solução do problema do planejamento

integrado com otimização podem ser classificadas em três categorias: métodos hierárquicos,

métodos iterativos e métodos full-space. A estratégia do modelo holônico e distribuído deste

trabalho não pertence nem aos métodos hierárquicos, nem aos métodos iterativos. A última

estratégia de solução, formada pelos métodos full-space, é a que mais se aproxima da usada

pelo modelo holônico. Entretanto, seus modelos são difíceis de resolver e requerem métodos

de solução avançados, sendo, em geral, intratáveis computacionalmente. Por outro lado, o mo-

delo holônico possui uma flexibilidade na sua modelagem, que é mais adequada para problemas

como o do planejamento. A definição de cada holon considerando critérios geográficos e fun-

cionais, de um lado, e temporais de outro, permite que os dois processos de decomposição do

full-space (espacial e temporal) sejam feitos mais naturalmente no modelo holônico. Mais do

que isso, o modelo holônico permite qualquer forma intermediária entre estes dois extremos.

A estratégia de solução do modelo holônico e distribuído proposto considera as decisões feitas

no nível operacional, que são levadas para os níveís acima, onde a melhor solução para toda a

cadeia é encontrada. Esta escolha continua sendo feita nos níveis mais altos, mas consideram

os resultados de submodelos complexos do nível operacional.

A incerteza é uma questão crítica em operações da cadeia de suprimentos, que é sujeita à

flutuações na extração de óleo, preços, demanda de produtos e quebra de equipamentos, dentre

um enorme conjunto de exemplos. Entretanto, este modelo não é estocástico, mas sim deter-

mínistico. Assim, para enfrentar o desafio das incertezas, sua natureza distribuída permite uma

rápida reconfiguração, considerando as mundanças imprevistas. Contudo, ele não substitui um

modelo estocático, que tem vantagens e desvantagens próprias. Uma destas desvantagens é a

existência de problemas de otimização que são extremamente difíceis para resolver, já que eles

se originam de problemas de programação estocástica. (GROSSMANN, 2005)

O modelo do problema de planejamento deste trabalho não considerou os objetivos do ní-

vel estratégico. Alguns autores, como (LASSCHUIT; THIJSSEN, 2004) enfatizam a importância



222

de alcançar uma integração completa na cadeia de suprimentos da indústria química e petrolí-

fera, e descrevem o desejo de uma ferramenta com este objetivo. É explicitada a necessidade

de ferramentas de suporte a decisão que permitam guiar de forma consistente tanto os aspectos

econômicos quanto operacionais da cadeia levando em conta as informações disponíveis tanto

de natureza operacional quanto do mercado. Tal tipo de ferramenta satisfaria uma necessidade

fundamental de que as decisões do nível estratégico e tático pudessem levar em conta informa-

ções operacionais, tais como as capacidades de produção, a utilização dos modais de transporte

e a alocação da demanda. Ao mesmo tempo, não apenas capacidades já existentes seriam con-

sideradas, mas conjuntamente novas oportunidades seriam avaliadas, o que já era prerrogativa

do nível estratégico. Assim, o modelo proposto neste trabalho pode ser estendido no futuro,

levando em conta sua natureza de integrar diferentes níveis de decisão e o possível papel de

uma ferramenta futura de simulação de alternativas, que vai de encontro com os objetivos do

nível estratégico.

Por outro lado, o modelo holônico desta tese tampouco considerou o papel multiparte, que

é desempenhado pelos subholons compartilhados por mais de um superholon ao mesmo tempo.

Esta decisão, por um lado, veio da inexistência de uma entidade com estas propriedades na

análise do problema de planejamento integrado considerado. Por outro lado, levando em conta

a característica de forte coesão dentro de cada superholon no modelo do HCOP, o conceito de

holon multiparte se torna mesmo inconsistente. De fato, sem a possibilidade de representar o

problema através da integração de algoritmos de otimização já disponíveis, ele fica bem mais

difícil de ser solucionado. Portanto, a inclusão do holon multiparte exigiria um novo modelo

diferente do HCOP, que teria outros presupostos específicos e um processo de solução diverso

daquele do HCOMA. Entretanto, da mesma forma que o algoritmo DTREE evoluiu para o

DPOP (vide Seção 5.4) através da transformação do grafo associado para uma pseudo-árvore, é

possível adaptar o meta-algoritmo HCOMA baseado no DPOP seguindo a mesma linha. Uma

adaptação similar poderia ser realizada para o HCOMA baseado no ADOPT. Assim, as duas

versões do meta-algoritmo HCOMA poderiam ser estendidas para lidar com subholons multi-

parte.



223

Referências

AIRES, M.; LUCENA, A.; ROCHA, R.; SANTIAGO, C.; SIMONETTI, L. Optimizing the
petroleum supply chain at petrobras. In: Proceedings of the European Symposium on Computer-
Aided Process Engineering - 14. Lisbon, Portugal: [s.n.], 2004.

AMARO, A. C. S.; BARBOSA-POVOA, A. P. F. D. Planning and scheduling of industrial
supply chains with reverse flows: A real pharmaceutical case study. Computers and Chemical
Engineering, v. 32, p. 2606, 2008.

ARPS, J. J. Analysis of decline curves. Transactions of the American Institute of Mining, Me-
tallurgical and Petroleum Engineers, n. 160, p. 228–247, 1945.

ASPENTECH. Aspen PIMS. Houston (USA): [s.n.], 2011. Disponível em:
&lt;http://www.aspentech.com/core/aspen-pims.aspx&gt;.

BASSETT, M. H.; PEKNY, J. F.; REKLAITIS, G. V. Decomposition techniques for the solution
of large-scale scheduling problems. AIChE Journal, v. 42, p. 3373, 1996.

BEAMON, B. M. Supply Chain Design and Analysis : Models and Methods. International
Journal of Production Economics, n. 1, p. 1–22, 1998.

BEAMON, B. M. Measuring supply chain performance. International Journal of Operations &amp;amp;
Production Management, v. 19, n. 3, p. 275–292, 1999.

BENDERS, J. F. Partitioning procedures for solving mixed variables programming problems.
Numerische Mathematik, v. 4, p. 238–252, 1962.

BERNING, G.; BRANDENBURG, M.; GURSOV, K.; KUSSI, J. S.; MEHTA, V.; TOLLE,
F. J. Integrating collaborative planning and supply chain optimization for the chemical process
industry. i. methodology. Computers &amp;amp; Chemical Engineering, v. 28, p. 913, 2004.

BHATIA, T.; BIEGLER, L. Dynamic optimization in the design and scheduling of multiproduct
batch plants. I &amp;amp; EC Research, v. 35, p. 2234, 1996.

BISWAS, S.; NARAHARI, Y. Object oriented modeling and decision support for supply chains.
European Journal of Operation Research, v. 153, p. 704–726, 2004.

BIXBY, R.; FENELON, M.; GU, Z.; M.; ROTHBERG, E.; WUNDER-
LING, R. MIP: Theory and Practice: Closing The Gap. 2002. Disponível em:
&lt;http://www.ilog.com/products/optimization/tech/research/mip.pdf&gt;.

BLANCO, A. M.; MASINI, G.; PETRACCI, N.; BANDONI, J. A. Operations management of
a packaging plant in the fruit industry. Journal of Food Engineering, v. 70, p. 299, 2005.



224

BODINGTON, C. E. Inventory management in blending optimization: use of nonlinear opti-
mization for gasoline blend planning and scheduling. In: ORSA/TIMS National Meeting. San
Francisco, USA: [s.n.], 1992.

BONGAERTS, L. Integration of scheduling and control in holonic manufacturing systems. Tese
(Doutorado) — Katholieke Universiteit Leuven, Leuven, Belgium, 1998.

BOOCH, G. Object-Oriented Analysis and Design with Applications. 2nd. ed. Redwood City,
Calif.: Benjamin–Cummings, 1994.

BRITO, I.; HERRERO, F.; MESEGUER, P. On the evaluation of discsp algorithms. In: 5th
International Workshop on Distributed Constraint Reasoning (DCR). [S.l.: s.n.], 2004.

BRUSSEL, H. V.; WYNS, J.; VALCKENAERS, P.; BONGAERTS, L.; PEETERS, P. Reference
architecture for holonic manufacturing systems: {PROSA}. Computers in Industry, v. 37, n. 3,
p. 255 – 274, 1998.

BURCKERT, H. J.; FISCHER, K.; VIERKE, G. Transportation scheduling with holonic mas
- the teletruck approach. In: Third International Conference on the Practical Application of
Intelligent Agents and Multi-Agent Technology (PAAM’98). [S.l.: s.n.], 1998. p. 577–590.

BURKE, D. A. Exploiting Problem Structure in Distributed Constraint Optimisation with Com-
plex Local Problems. Tese (Doutorado) — National University of Ireland, Cork, 2008.

BURKE, D. A.; BROWN, K. N.; DOGRU, M.; LOWE, B. Supply chain coordination through
distributed constraint optimization. In: Proceedings of the 9th International Workshop on Dis-
tributed Constraint Reasoning. [S.l.: s.n.], 2007.

CHARNES, A.; COOPER, W. W.; MELLON, B. Blending aviation gasolines–a study in pro-
gramming interdependent activities in an integrated oil company. Econometrica, v. 20, n. 2, p.
135–159, 1952.

CHIMA, C. M.; HILLS, D. Supply-chain management issues in the oil and gas industry. Journal
of Business, v. 5, n. 6, p. 27–36, 2007.

CHOPRA, S.; MEINDL, P. Supply Chain Management. [S.l.]: Prentice Hall, 2001.

CHRISTENSEN, J. H. Holonic manufacturing systems: Initial architecture and standards di-
rections. In: . [s.n.], 1994. Disponível em:&amp;lt;http://holobloc.com/papers/hannover.zip&gt;.

CHU, Y.; XIA, Q. A hybrid algorithm for a class of resource constrained scheduling problems.
Lecture Notes in Computer Science, v. 3524, p. 110, 2005.

CLARK, A. J.; SCARF, H. Optimal policies for a multiechelon inventory problem. Management
Science, n. 6, p. 475–490, 1958.

COXHEAD, R. E. Integrated planning and Scheduling Systems for the Refining Industry. New
York: John Wiley &amp;amp; Sons, 1994.

CSCMP. CSCMP mission &amp;amp; goals. 2000. Disponível em:
&lt;http://cscmp.org/sites/default/files/user_uploads/resources/downloads/glossary.pdf&gt;.

DAKE, L. P. The Practice of Reservoir Engineering. revised. [S.l.]: Elsevier, 2004. (Develop-
ments in Petroleum Science, v. 36).



225

DANTZIG, G. B. Maximization of a linear function subject to linear inequalities. [S.l.]: John
Wiley &amp;amp; Sons, 1951. 339–347 p.

DAS, S. K.; SARIN, S. C. An integrated approach to solving the master aggregate scheduling
problem. International Journal of Production Economics, n. 34, 1994.

DECHTER, R. Constraint Processing. [S.l.]: The Morgan Kaufmann, 2003.

DECROIX, G. A.; ARREOLA-RISA, A. Optimal production and inventory policy for multiple
products under resource constraints. Management Science, v. 44, n. 7, p. 950–961, 1998.

DIESTEL, R. Graph Theory (Graduate Texts in Mathematics). [S.l.]: Springer, 2005. Hardco-
ver.

DIMITRIADIS A. D., S. N.; PANTELIDES, C. C. Rtn-based rolling horizon algorithms for
medium term scheduling of multipurpose plants. Computers and Chemical Engineering, v. 21,
p. S1061, 1997.

ECLIPSE. Eclipse finite difference simulation. www.slb.com, p. white paper, 2007.

EICHMAN, D. A. Creating a high-performance downstream petroleum supply chain. Achieving
Supply Chain Excellence through Technology, p. 229–232, 2000.

ERENGUC, S. S.; SIMPSON, N.; VAKHARIA, A. Integrated production/distribution planning
in supply chains: An invited review. Euro. Journal of Operational Res., v. 115, p. 219, 1999.

EVERETT, H. I. Generalized lagrangemultiplier method for solving problems of optimum al-
location of resources. Operations Research, v. 11, p. 399–411, 1963.

EZZAHIR, R.; BESSIERE, C.; BELAISSAOUI, M.; BOUYAKHF, E. Dischoco: A platform
for distributed constraint programming. In: DCR’07: Eighth International Workshop on Distri-
buted Constraint Reasoning - In conjunction with IJCAI’07. Hyderabad, India: [s.n.], 2007. p.
16–21.

FALTINGS, B.; YOKOO, M. Introduction: special issue on distributed constraint satisfaction.
Artificial Intelligence, n. 161, p. 1–5, 2005.

FEIGIN, G. E.; AN, C.; CONNORS, D.; CRAWFORD, I. Shape up, ship out. OR/MS Today,
v. 23, p. 24–30, 1996.

FERBER, D. F. FacadeOPL. 2012. Disponível em:&amp;lt;https://github.com/danielferber/FacadeOPL&gt;.

FERBER, J. Les systèmes multi-agents. Vers une intelligence collective. [S.l.]: InterEditions,
1995.

FERBER, J.; GUTKNECHT, O. A meta-model for the analysis and design of organizations
in multi-agent systems. In: ICMAS98. [S.l.]: Y. Demazeau, E. Durfee, and N. Jennings, Eds.,
1998.

FISCHER, K.; MÜLLER, J.; PISCHEL, M. Cooperative transportation scheduling: An appli-
cation domain for DAI. Applied Artificial Intelligence, v. 10, n. 1, p. 1–34, 1996.



226

FISCHER, K.; SCHILLO, M.; SIEKMANN, J. Holonic multiagent systems: A foundation for
the organisation of multiagent systems. In: Holonic and Multi-Agent Systems for Manufactu-
ring. [S.l.]: Springer Berlin Heidelberg, 2003, (Lecture Notes in Computer Science, v. 2744).
p. 71–80.

FISHER, M. L. The lagrangean relaxation method for solving integer programming problems.
Management Science, v. 27, p. 1–18, 1981.

FLOUDAS, C. A. Nonlinear and mixed-integer optimization: Fundamentals and applications.
Oxford, England: Oxford University Press, 1995.

FORREST, J.; OETTLI, M. Rigorous simulation supports accurate refinery decisions. In: Pro-
ceedings of fourth international conference on foundations of computer-aided process operati-

ons. Coral Springs, USA: [s.n.], 2003. p. 273–280.

FORRESTER, J. W. Industrial dynamics: A major breakthrough for decision makers. Harvard
Business Review, n. 4, p. 37–66, 1958.

FORRESTER, J. W. Industrial Dynamics. [S.l.]: MIT Press, 1961.

FOX, M. S.; CHIONGLO, J. F.; BARBUCEANU, M. The integrated supply chain management
system. [S.l.], 1993.

GALLAND, S.; GRIMAUD, F.; BEAUNE, P.; CAMPAGNE, J. P. Mama-s: an introduction to
a methodological approach for the simulation of distributed industrial systems. International
Journal of Production Economics, n. 85, p. 11–31, 2003.

GARCIA, E. S.; REIS, L. M. T. V.; MACHADO, L. R.; FERREIRA, V. J. M. Gestão de Es-
toques : otimizando a logística e a cadeia de suprimentos. [S.l.]: E-papers Serviços Editoriais,
2006.

GEHRKE, J. D. Collaborative experimentation using agent-based simulation. In: Proceedings
of the 2008 Workshop on Building Computational Intelligence and Machine Learning Virtual

Organizations. [S.l.: s.n.], 2008.

GEOFRION, A. M. Generalized benders decomposition. Journal of Optimization Theory and
Applications, v. 10, p. 237–260, 1972.

GERBER, C.; SIEKMANN, J.; VIERKE, G. Holonic multi-agent systems. Research Report,
v. 99, n. 3, 1999.

GIRET, A.; BOTTI, V. Holons and agents. Journal of Intelligent Manufacturing, v. 15, p. 645–
659, 2004.

GOU, L.; LUH, P. B.; KYOYA, Y. Holonic manufacturing scheduling: architecture, cooperation
mechanism, and implementation. Computers in Industry, Elsevier, v. 37, n. 3, p. 213–231, 1998.

GRAUDINA, V.; GRUNDSPENKIS, J. Technologies and multi-agent system architectures for
transportation and logistics support: an overview. In: Proceedings CompSysTech’2005 Interna-
tional Conference on Computer Systems and Technologies. [S.l.: s.n.], 2005. p. 61–66.

GRAVES, S. Using lagrangean techniques to solve hierarchical production planning problems.
Management Sci., v. 28, p. 260, 1982.



227

GRAVES, S. C.; WILLEMS, S. P. Optimizing strategic safety stock placement in supply chains.
Manufacturing &amp;amp; Service Operations Management, v. 2, n. 1, p. 68–83, 2000.

GREENSTADT, R.; PEARCE, J. P.; TAMBE, M. Analysis of privacy loss in distributed cons-
traint optimization. In: The 21st National Conference on Artificial intelligence. [S.l.: s.n.], 2006.
p. 647–653.

GRINSHPOUN, T.; ZAZON, M.; BINSHTOK, M.; MEISELS, A. Termination problem of the
apo algorithm. In: the Eighth International Workshop on Distributed Constraint Reasoning.
[S.l.: s.n.], 2007.

GROSSMAN, I. E.; HEEVER, S. A. van den; HARJUNKOSKI, I. Discrete optimization
methods and their role in the integration of planning and scheduling. In: Proceedings of Che-
mical Process Control Conference 6. Tucson, USA: [s.n.], 2001.

GROSSMANN, I. Enterprise-wide optimization: A new frontier in process systems enginee-
ring. AIChE J., v. 51, p. 1846–1857, 2005.

GROSSMANN, I. E. Review of nonlinear mixed-integer and disjunctive programming techni-
ques for process systems, engineering. Optimization and Engineering, n. 3, p. 227– 252, 2002.

GROSSMANN, I. E.; BIEGLER, L. T. Optimizing chemical processes. Chemistry and Techno-
logy, p. 27–35, 1995.

GRUNBAUM, B. Convex Polytopes, Graduate Texts in Mathematics. [S.l.]: Springer Verlag,
2003.

GUIGNARD, M.; KIM, S. Lagrangeandecomposition:amodel yielding stronger lagrangean
bounds. Mathematical Programming, v. 39, p. 215–228, 1987.

HARJUNKOSKI, I.; GROSSMANN, I. E. Decomposition techniques for multistage scheduling
problems using mixed-integer and constraint programming methods. Computers and Chemical
Engineering, v. 26, p. 1533, 2002.

HEEVER, S. A. Van den; GROSSMANN, I. E. Disjunctive multiperiod optimization methods
for design and planning of chemical process systems. Computers and Chemical Engineering,
v. 23, p. 1075–1095, 1999.

HEEVER, S. A. Van den; GROSSMANN, I. E. A strategy for the integration of production
planning and reactive scheduling in the optimization of a hydrogen supply network. Computers
and Chemical Engineering, v. 27, p. 1813, 2003.

HIKKANEN, A.; KALAKOTA, R.; SAENGCHAROENRAT, P.; STALLAERT, J.; WHINS-
TON, A. Distributed decision support systems for real time supply chain management using
agent technologies. Readings in Electronic Commerce, p. 275–291, 1997.

HILAIRE, V.; KOUKAM, A.; RODRIGUEZ, S. An Adaptative Agent Architecture for Holonic
Multi-Agent Systems. ACM Transactions on Autonomous and Adaptive Systems, v. 3, n. 1,
2008.

HMS, P. R. HMS Requirements. 1994. Disponível em:&amp;lt;http://hms.ifw.uni-hannover.de/: HMS
Server&gt;.



228

HOOK, M. Depletion and Decline Curve Analysis in Crude Oil Production. Tese (Licentiate
Thesis) — Uppsala University, 2009.

HOOKER, J. N. Logic-Based Methods for Optimization: Combining Optimization and Cons-
traint Satisfaction. [S.l.]: Wiley, 2000.

HOOKER, J. N.; OTTOSSON, G.; THORSTEINSSON, E. S.; KIM, H. J. On integrating cons-
traint propagation and linear programming for combinatorial optimization. In: Proceedings 16th
national conference on artificial intelligence (AAAI). [S.l.]: The AAAI Press/MIT Press, 1999.
p. 136.

HUBNER, J. F.; SICHMAN, J. S.; BOISSIER, O. A. Model for the structural, functional,
and deontic specification of organizations in multiagent systems. In: Simposio Brasileiro de
Inteligência Artificial (SBIA). [S.l.]: The AAAI Press/MIT Press, 2002. p. 118–128.

HUHNS, M.; STEPHENS, L. Multi-agent systems and societies of agents. MIT Press, p. 79–
120, 1999.

IBM. IBM ILOG OPL Language User’s Manual. [S.l.], 2009.

IPI. About API. American Petroleum Institute, 2012. Disponível em:
&lt;http://www.api.org/aboutapi/&gt;.

JACKSON, J.; GROSSMANN, I. E. A temporal decomposition scheme for nonlinear multisite
production planning and distribution models. I &amp;amp; EC Research, v. 42, p. 3045, 2003.

JAIN, V.; GROSSMANN, I. Cyclic scheduling and maintenance of parallel process units with
decaying performance. AIChE J., v. 44, p. 1623, 1998.

JAIN, V.; GROSSMANN, I. E. Algorithms for hybrid milp/cp models for a class of optimization
problems. INFORMS Journal on Computing, v. 13, p. 258, 2001.

JENNINGS, N. On agent-based software engineering. Artificial Intelligence, n. 117, 2000.

JENNINGS, N.; WOOLDRIDGE, M.; SYCARA, K. A roadmap of agent research and deve-
lopment. Autonomous Agents and Multi-Agent Systems, v. 1, n. 1, p. 7–38, 1998.

JOLY, M.; MORO, L. F. L.; PINTO, J. M. Planning and scheduling for petroleum refineries
using mathematical programming. Brazilian Journal of Chemical Engineering, v. 19, n. 2, p.
207– 228, 2002.

JONES, W. M. C.; PADDOCK, K. F. Modern petroleum technology - Transport by pipeline. 5th
part i. ed. [S.l.]: Wiley, 1982.

KALLRATH, J. Mixed integer optimization in the chemical process industry: Experience, po-
tential and future. Trans. I. Chem. E., n. 78, p. 809– 822, 2000.

KALLRATH, J. Planning and scheduling in the process industry. OR Spectrum, v. 24, p. 219,
2002.

KARAGEORGOS, A.; MEHANDJIEV, N.; WEICHHART, G.; HAMMERLE, A. Agent-based
optimization of logistics and production planning. Engineering Applications of Artificial Intel-
ligence, n. 16, p. 335– 348, 2003.



229

KELLY, J. D. Chronological decomposition heuristic for scheduling: Divide and conquer
method. AIChE Journal, v. 48, p. 2995, 2002.

KELLY, J. D. Formulating production planning models. Chemical Engineering Program, v. 100,
p. 43, 2004.

KELLY, J. D.; ZYNGIER, D. Hierarchical decomposition heuristic for scheduling: Coordi-
nated reasoning for decentralized and distributed decision-making problems. Computers and
Chemical Engineering, v. 32, p. 2684, 2008.

KHOR, C.; ELKAMEL, A. Optimization Strategies: Petroleum Refinery Planning under Un-
certainty. [S.l.]: VDM Verlag Dr. Mueller e. K Publishing House, 2008.

KOESTLER, A. The Ghost in the Machine. 1st. ed. London: Hutchinson &amp;amp; Co, 1967.

KUCHCINSKI, K.; SZYMANEK, R. JaCoP: Java constraint programming solver. 2012. Dis-
ponível em:&amp;lt;http://jacop.osolpro.com&gt;.

KUMAR, A.; OW, P. S.; PRIETULA, M. J. Organizational simulation and information systems
design: An operations level example. Management Science, v. 2, n. 39, p. 218–240, 1993.

LABARTHE, O.; ESPINASSE, B.; FERRARINI, A.; MONTREUIL, B. Toward a methodolo-
gical framework for agent-based modelling and simulation of supply chains in a mass customi-
zation context. Simulation Modelling Practice and Theory, 2007.

LARROSA, J.; SCHIEX, T. Solving weighted csp by maintaining arc consistency. Artificial
Intelligence, v. 159, p. 1–26, 2004.

LASSCHUIT, W.; THIJSSEN, N. Supporting supply chain planning and scheduling decisions
in the oil and chemical industry. Computers and Chemical Engineering, n. 28, p. 863–870,
2004.

LEAUTE, T.; OTTENS, B.; SZYMANEK, R. FRODO 2.0: An open-source framework for
distributed constraint optimization. In: Proceedings of the IJCAI’09 Distributed Constraint Re-
asoning Workshop (DCR’09). Pasadena, California, USA: [s.n.], 2009. p. 160–164.

LEE, H.; PINTO, J. M.; GROSSMANN, I. E.; PARK, S. Mixed-integer linear programming
model for refinery short-term scheduling of crude oil unloading with inventory management.
Ind. Eng. Chem. Res., n. 35, p. 1630–1641, 1996.

LEITÃO, P.; RESTIVO, F. A holonic control approach for distributed manufacturing applicati-
ons. In: Proceedings of the Fifth IEEE-IFIP International Conference on Information Techno-
logy for Balanced Automation Systems in Manufacturing and Services. Cancun(México): [s.n.],
2002.

LENDERMANN, P.; BOON, P. G.; MCGINNIS, L. F. Distributed simulation with incorporated
aps procedures for high-fidelity supply chain optimization. In: Proceedings of the 2001 Winter
Simulation Conference. [S.l.: s.n.], 2001.

LUTATI, B.; GONTMAKHER, I.; LANDO, M. AgentZero: a framework for executing, analy-
zing and developing DCR algorithms. 2012. Disponível em:&amp;lt;http://code.google.com/p/azapi-
test/&gt;.



230

LYNCH, N. A. Distributed Algorithms. [S.l.]: Morgan Kaufmann, 1996.

MAGALHAES, M. V. O.; MORO, L. F. L.; SMANIA, P.; HASSIMOTTO, M. K.; PINTO,
J. M.; ABADIA, G. J. Sipp . a solution for refinery scheduling. In: 1998 NPRA Computer
Conference. [S.l.: s.n.], 1998.

MAILLER, R.; LESSER, V. Solving distributed constraint optimization problems using coo-
perative mediation. In: Proceedings of Third International Joint Conference on Autonomous
Agents and Multiagent Systems (AAMAS 2004). [S.l.]: IEEE Computer Society, 2004. p. 438–
445.

MALONE, T. Modeling coordination in organizations and markets. Management Science, v. 10,
n. 33, p. 1317–1332, 1987.

MAPLES, R. E. Petroleum Refinery Process Economics. 2st. ed. [S.l.]: Pennwell Books, 2000.

MARAVELIAS, C.; GROSSMANN, I. E. A hybrid milp/cp decomposition approach for the
continuous time scheduling of multipurpose batch plants. Comp. and Chem. Eng., v. 28, p. 1921,
2004.

MARAVELIAS, C.; SUNG, C. Integration of production planning and scheduling: Overview,
challenges and opportunities. Computers and Chemical Engineering, v. 33, p. 1919–1930, 2009.

MARCELLINO, F. J. M.; SICHMAN, J. S. Oil industry supply chain management as a holo-
nic agent based distributed constraint optimization problem. In: AILog - ECAI 2010. Lisbon,
Portugal: [s.n.], 2010.

MCKAY, K. N.; SAFAYENI, F. R.; BUZACOTT, J. A. A review of hierarchical production
planning and its applicability for modern manufacturing. Production Planning &amp;amp; Control, v. 6,
p. 384, 1995.

MILANO, M. Constraint and Integer Programming: Toward a Unified Methodology. [S.l.]:
Kluwer Academic Publishers, 2003.

MILLER, D. M. An iterative computer-aided ship scheduling system. European Journal of
Operational Research, n. 32, p. 363–379, 1987.

MILLER, R. G. A future for exploration geochemistry. Organic Chemistry: Developments and
Applications to Energy, Climate Environment and Human History, 1995.

MODI, P. J.; SHEN, W.; TAMBE, M.; YOKOO, M. An asynchronous complete method for
distributed constraint optimization. In: AAMAS03. [S.l.: s.n.], 2003.

MODI, P. J.; SHEN, W.; TAMBE, M.; YOKOO, M. Adopt: Asynchronous distributed cons-
traint optimization with quality guarantees. Artificial Intelligence, v. 161, p. 149–180, 2005.

MORO, L. F. L.; PINTO, J. M. A mixed-integer model for short-term crude oil scheduling. In:
AIChE Annual National Meeting. Miami Beach: [s.n.], 1998.

MUCKSTADT, J.; MURRAY, D.; RAPPOLD, J.; COLLINS, D. Guidelines for collaborative
supply chain system design and operation. Information Systems Frontiers, n. 3, p. 427–435,
2001.



231

NEIRO, S. M. S.; PINTO, J. M. Supply chain optimization of petroleum refinery complexes.
Comp. and Chem. Eng., v. 28, p. 871, 2004.

NEIRO, S. M. S.; PINTO, J. M. Multiperiod optimization for production planning of petroleum
refineries. Chemical Engineering Communications, v. 192, p. 62, 2005.

PAPADIMITRIOU, C. H.; STEIGLITZ, K. Combinatorial Optimization : Algorithms and
Complexity. [S.l.]: Dover Publications, 1998.

PAPAGEORGIOU, L. G.; PANTELIDES, C. C. Optimal campaign planning/scheduling of mul-
tipurpose batch/semicontinuous plants. 1. mathematical formulation. Industrial and Enginee-
ring Chemistry Research, v. 35, p. 488, 1996.

PARUNAK, H. V. D.; SAVIT, R.; RIOLO, R. Agent-based modeling vs. equation-based mode-
ling: A case study and users’ guide. In: Proceedings Of Workshop on Multi-agent Systems and
Agent-based Simulation (MABS ’98). [S.l.: s.n.], 1998.

PASHIKANTI, K.; LIU, Y. A. Predictive modeling of large-scale integrated refinery reaction
and fractionation systems from plant data. part 2: Fluid catalytic cracking (fcc) process. Energy
&amp;amp; Fuels, v. 25, n. 11, 2011.

PEKNY, J. F.; REKLAITIS, G. V. Towards the convergence of theory and practice: A techno-
logy guide for scheduling/planning methodology. AIChE Symposium Series, v. 94, p. 91–111,
1998.

PEREA, E.; GROSSMANN, I. E.; YDSTIE, E.; TAHMASSEBI, T. Dynamic modeling and
decentralized control of supply chains. I&amp;amp;EC Res., v. 40, p. 3369, 2001.

PETCU, A.; FALTINGS, B. A distributed, complete method for multi-agent constraint optimi-
zation. In: Proceedings of the Fifth International Workshop on Distributed Constraint Reaso-
ning (DCR2004) in CP 2004. [S.l.: s.n.], 2004.

PETCU, A.; FALTINGS, B. A scalable method for multiagent constraint optimization. In: Pro-
ceedings of the International Joint Conference on Artificial Intelligence. [S.l.: s.n.], 2005. p.
266–271.

PETCU, A.; FALTINGS, B.; MAILLER, R. Pc-dpop: a new partial centralization algorithm
for distributed optimization. In: Proceedings of the International Joint Conference on Artificial
Intelligence. Hyderabad, India: [s.n.], 2007. p. 167–172.

PINEDO, M. Scheduling: Theory, Algorithms, and Systems. [S.l.]: Prentice Hall, 2001.

PINTO, J.; GROSSMANN, I. E. Optimal scheduling of multistage multiproduct continuous
plants. Comp. and Chem. Eng., v. 9, p. 797, 1994.

PINTO, J. M.; JOLY, M.; MORO, L. F. Planning and scheduling models for refinery operations.
Computers and Chemical Engineering, n. 24, p. 2259–2276, 2000.

PINTO, J. M.; NEIRO, S. M. S. A general modeling framework for the operational planning of
petroleum supply chains. Computers and Chemical Engineering, n. 28, p. 871–896, 2004.

POIRIER, C. C.; REITER, S. E. Supply Chain Optimization: Building the Strongest Total Bu-
siness Network. [S.l.]: Berrett-Koehler Publishers, 1996.



232

PORTEUS, E. L. Stochastic inventory theory. Elservier Science Publishers, Amsterdam, v. 2, p.
605–652, 1990.

RAMIREZ, A.; ROMERO, A.; CHAVEZ, F.; CARRILLO, F.; LOPEZ, S. Mathematical si-
mulation of oil reservoir properties. Chaos, Solitons &amp;amp; Fractals, v. 32, p. 778–788, November
2008.

REKLAITIS, G. V. Review of scheduling of process operations. v. 78, n. 214, p. 119–133, 1982.

RIGBY, B.; LASDON, L. S.; WAREN, A. D. The evolution of texaco’s blending systems: from
omega to starblend. Interfaces, v. 5, n. 25, p. 64–83, 1995.

RIZZOLI, A. E.; GAMBARDELLA, L. M.; BONTEMPI, G. Simulation of an intermodal con-
tainer terminal to assist the management in the decision making process. In: Proceedings MOD-
SIM 9, International Congress on Modeling and Simulation. Hobart, Tasmânia: [s.n.], 1997.

ROBELIUS, F. Giant Oil Fields - The Highway to Oil: Giant Oil Fields and their Importance
for Future Oil Production. Tese (Doutorado) — Uppsala University, 2007.

ROCHA, R.; GROSSMANNB, I. E.; ARAGAO, M. V. S. Poggi de. Petroleum allocation at pe-
trobras: Mathematical model and a solution algorithm. Computers and Chemical Engineering,
n. 33, p. 2123–2133, 2009.

ROUSSE, O.; LECOUTRE, C. Xml representation of constraint networks: Format xcsp 2.1.
CoRR, abs/0902.2362, 2009.

SADEH, N. M.; LALIBERTY, T.; SMITH, S. F.; BRYANT, R. Development of an integrated
process planning/production scheduling shell for agile manufacturing. Pittsburgh, USA, 1995.

SALIDO, M. A.; BARBER, F. Distributed {CSPs} by graph partitioning. Applied Mathematics
and Computation, v. 183, n. 1, p. 491–498, 2006.

SALIDO, M. A.; GIRET, A. Feasible distributed {CSP} models for scheduling problems. En-
gineering Applications of Artificial Intelligence, v. 21, n. 5, p. 723–732, 2008.

SALIDO, M. A.; GIRET, A.; BARBER, F. Distributing constraints by sampling in non-binary
csps. In: IJCAI Workshop on Distributing Constraint Reasoning. [S.l.: s.n.], 2003. p. 79–87.

SASIKUMAR, M. Pipes: a heuristic search model for pipeline schedule generation. Knowl-
Based System, n. 10, 1997.

SATTER, A.; IQBAL, G. M.; BUCHWALTER, J. L. Practical Enhanced Reservoir Enginee-
ring. [S.l.]: Pennwell Books, 2008.

SHAH, N. Mathematical programming techniques for crude oil scheduling. Comput. Chem.
Eng., n. 20, p. S1227– S1232, 1996.

SHAH, N. Single- and multisite planning and scheduling: Current status and future challenges.
AIChE Symposium Series, v. 94, p. 75, 1998.

SHAPIRO, J. F. Modeling the Supply Chain. Pacific Grove CA: Duxbury Press, 2006.

SHIEX, T.; FARGIER, H.; VERFAILLIE, G. Valued constraint satisfaction problems : hard
and easy problems. In: IJCAI-95. [S.l.: s.n.], 1995. p. 631–637.



233

SILAGHI, M.; FALTINGS, B. Asynchronous aggregation and consistency in distributed cons-
traint satisfaction. Artificial Intelligence, v. 161, n. 1–2, p. 25–53, 2005.

SIMCHI-LEVI, D.; KAMINSKY, P.; SIMCHI-LEVI, E. Designing and managing the supply
chain. [S.l.]: McGraw-Hill Higher Education, 2000.

SIMON, H. A. The Sciences of the Artificial. [S.l.]: MIT Press, 1996.

SMITH, R. G. The contract net protocol: High-level communication and control in a distributed
problem solver. IEEE Transactions on Computers, IEEE Computer Society, C-29, n. 12, p.
1104–1113, 1980.

STUBEN, K.; CLEES, T.; KLIE, H.; LOU, B.; WHEELER, M. F. Algebraic multigrid methods
(amg) for the efficient solution of fully implicit formulations in reservoir simulation. In: 2007
SPE Reservoir Simulation Symposium. [S.l.: s.n.], 2007.

SUBRAHMANYAM S., P. J. F.; REKLAITIS, G. V. Decomposition approaches to batch plant
design and planning. Industrial and Engineering Chemistry Research, v. 35, p. 1866, 1996.

SUKOYO; MATSUOKA, S.; MURAKI, M. Production planning formulti-site batch plants with
the milp method. Journal of the Japan Petroleum Institute, v. 47, p. 318, 2004.

SULTANIK, E. A.; LASS, R. N.; REGLI, W. C. DCOPolis: A framework for simulating and
deploying distributed constraint optimization algorithms. In: Proceedings of the Ninth Interna-
tional Workshop on Distributed Constraint Reasoning. [S.l.: s.n.], 2007.

SUNG, C.; MARAVELIAS, C. T. An attainable region approach for production planning of
multi-product processes. AIChE Journal, v. 53, p. 1298, 2007.

SVORONOS, A.; ZIPKIN, P. Evaluation of one-for-one replenishment policies for multieche-
lon inventory systems. Management Science, v. 1, n. 37, p. 68–83, 1991.

SWAMINATHAN, J. M. Quantitative analysis of emerging practices in supply chains. Tese
(Doutorado) — Carnegie Mellon University, 1996.

SWAMINATHAN, J. M.; SMITH, S. F.; SADEH, N. M. Modeling Supply Chain Dynamics :
A Multiagent Approach. Decision Sciences, v. 29, n. 3, p. 607–632, 1998.

SYSMONDS, G. H. Linear programming: The solution of refinery problems. [S.l.], 1955.

TECHO, R.; HOLBROOK, D. L. Computer scheduling the world’s biggest product pipeline.
Pipeline Gas Journal, n. 4, 1974.

TERZI, S.; CAVALIERI, S. Simulation in the supply chain context: a survey. Computers in
Industry, n. 53, p. 3–16, 2004.

TOWILL, D. R.; NAIM, M. M.; WIKNER, J. Industrial dynamics simulation models in the
design of supply chains. International Journal of Physical Distribution and Logistics Manage-
ment, v. 5, n. 22, p. 3–13, 1992.

TSANG, E. P. K. Foundations of Constraint Satisfaction. [S.l.]: Academic Press, 1993. (Com-
putation in cognitive science).



234

TURKAY, M.; GROSSMANN, I. E. Logic-based minlp algorithms for the optimal synthesis of
process networks. Computers and Chemical Engineering, v. 20, p. 959–978, 1996.

ULIERU, M.; WALKER, S.; BRENNAN, B. Holonic enterprise as a collaborative information
ecosystem. In: Workshop on Holons: Autonomous and Cooperative Agents for the Industry, 5th
International Conference on Autonomous Agents. Montreal(Canadá): [s.n.], 2001.

VAKHARIA, A. J.; ERENGUC, S. S.; SIMPSON, N. C. Integrated production/distribution
planning in supply chains: an invited review. European Journal of Operational Research,
n. 115, 1999.

VECCHIETTI, A.; GROSSMANN, I. E. Modeling issues and implementation of language for
disjunctive programming. Computers and Chemical Engineering, v. 24, p. 2143–2155, 2000.

VERSTEEGH, F.; SALIDO, M. A.; GIRET, A. A holonic architecture for the global road
transportation system. Journal of Intelligent Manufacturing, Springer US, v. 21, n. 1, p. 133–
144, 2010.

W3C. Extensible Markup Language XML. 2012. Disponível em:
&lt;http://www.w3.org/XML/&gt;.

WEISS, G. Adaptation and learning in multi-agent systems: some remarks and a bibliography.
In: Proceedings IJCAI’95 Workshop on Adaptation and Learning in Multi-Agent Systems. [S.l.]:
Springer, 1995. p. 1–22.

WILKINSON, S. J. Aggregate Formulations for Large-Scale Process Scheduling Pro-
blems,Ph.D. Thesis. Tese (Doutorado), 1996.

WILKINSON, S. J.; SHA, N.; PANTELIDES, C. C. Scheduling of multisite flexible production
systems. In: Proceedings of the European Symposium on Computer-Aided Process Engineering
- 14. San Francisco, USA: [s.n.], 1994.

WINSTON, W. L. Introduction to mathematical programming. 2d. ed. Pacific Grove, Calif.:
Duxbury Press, 1995.

WOOLDRIDGE, M.; JENNINGS, N. Intelligent agent: theory and practice. Knowledge Engi-
neering Review, v. 10, n. 2, p. 115–142, 1995.

YAN, H. S.; ZHANG, X. D. A case study on integrated production planning and scheduling in a
threestage manufacturing system. IEEE Transactions on Automation Science and Engineering,
v. 4, p. 86, 2007.

YOKOO, M. Distributed constraint satisfaction: foundations of cooperation in multi-agent
system. [S.l.]: Springer Verlag, 2001.

YOKOO, M.; DURFEE, E. H.; ISHIDA, T.; KUWABARA, K. Distributed constraint satisfac-
tion algorithm for complex local problems. In: Third International Conference on Multiagent
Systems ICMAS ?98. [S.l.: s.n.], 1998. p. 372–379.

YOKOO, M.; HIRAYAMA, K. Algorithms for distributed constraint satisfaction: A review.
Autonomous Agents and Multi-Agent Systems, v. 3, n. 2, p. 185–207, 2000.



235

YOKOO, M. C.; DURFEE, E. H.; ISHIDA, T.; KUWABARA, K. Distributed constraint satis-
faction for formalizing distributed problem solving. In: International Conference on Distributed
Computing Systems. [S.l.: s.n.], 1992. p. 614–621.

YUAN, Y.; LIANG, T. P.; ZHANG, J. J. Using agent technology to support supply chain ma-
nagement: potentials and challenges. In: Supply Chain Transformation in the eBusiness En-
vironment: Issues, Solutions and the Future, the First Annual Symposium on Supply Chain

Management. [S.l.: s.n.], 2003.

ZABAL, J. C. Distribution des Produits Pétroliers par Mér. [S.l.]: Université Montreal, 1984.

ZELINKOVSKY, R. Global automated transport system. 2011. Disponível em:
&lt;http://www.global-transportation.com&gt;.

ZELLOU, A. M.; OUENES, A. Integrated fractured reservoir characterization using neural
networks and fuzzy logic: three case studies. Journal of Petroleum Geology, v. 4, n. 24, p.
459–476, 2007.

ZHANG, N.; ZHU, X. X. A novel modelling and decomposition strategy for total site optimi-
sation. Computers &amp;amp; Chemical Engineering, v. 30, p. 765–777, 2006.

ZIPKIN, P. H. Models for design and control of stochastic, multi-item batch production systems.
Operations Research, v. 34, n. 1, p. 91–104, 1986.



236

ANEXO A -- Prova do Algoritmo ADOPT

Foram utilizados nas prova três teoremas para mostrar que ADOPT garantidamente ter-

mina com uma solução ótima global No Teorema 1, é mostrado que os limitantes computados

por cada agente são sempre corretos. No Teorema 2, é mostrado que o algoritmo sempre vai

terminar. Finalmente, no Teorema 3 é mostrado que a solução ótima é obtida no término.

Propriedade 1 é usada na prova do Teorema 1. Deixe OPT(xi, contexto) denotar o custo

da solução ótima na subárvore com raiz em xi, dado que as variáveis de maior prioridade têm

valores em contexto.

Propriedade1:?xi ? V ,

OPT(xi, ContextoAtual)
def
= mind?Di?(d) +

?

xl?Filhos
OPT(xl, ContextoAtual ? (xi, d))

Por exemplo se xi é uma folha, então OPT(xi, contexto) é igual a ?(d), onde d é o valor

que minimiza. Esta propriedade indutiva afirma que que o custo da solução ótima em uma

subárvore com raiz em xi é obtido quando xi escolhe o valor d que minimiza a soma de seu

custo local mais o custo da solução ótima em sua subárvore. Teorema 1 mostra que o limitante

inferior LB calculado por um agente nunca é maior do que o custo da solução ótima dentro da

sua subárvore, e o limitante superior UB nunca é menor do que o custo da solução ótima dentro

da sua subárvore. A prova do Teorema 1 procede por indução. O caso base decorre do fato que

LB = OPT(xi, ContextoAtual) = UB é sempre verdade em um agente folha. A hipótese

indutiva supoe que LB (UB) enviada por xi a seu pai nunca é maior (menor) do que o custo da

solução ótima na subárvore com raiz em xi. A prova também se baseia no fato de que os custos

são relatados para apenas um pai de forma que não haja dupla contagem de custos.

Teorema1:?xi ? V ,

LB ? OPT(xi, ContextoAtual) ? UB



237

Prova:Por indução nas prioridades dos agentes.

Caso Base I: xi é uma folha. The equations for LB and UB simplify to mind?Di?(d) desde

que xi não tenha filhos. Propriedade 1 simplifica para LB = OPT(xi, ContextoAtual) =

mind?Di?(d) pela mesma razão. Assim concluimos que LB = mind?Di?(d) = OPT(xi, ContextoAtual) =

UB. Concluído.

Caso Base II: Todo filho de xi é uma folha. Mostraremos que LB ? OPT(xi, ContextoAtual) ?

UB. A prova para LB ? OPT(xi, ContextoAtual) é análoga.

Já que todos os filhos xi são folhas, sabemos do Caso Base I que lb(d, xl) ? OPT(xl, ContextoAtual?

(xi, d)). Além disso, cada filho envia mensagens COST somente para xi, de modo que os custos

não são contados duas vezes. Substituímos OPT(xl, ContextoAtual) ? (xi, d)) por lb(d, xl)

na definição de LB para chegar no seguinte:

LB = mind?Di?(d) =
?

xl?Filhos
lb(d, xl) ?

mind?Di?(d) +
?

xl?Filhos
OPT(xl, ContextoAtual ? (xi, d))

Agora podem simplificar Propriedade 1 no acima para obter

LB ? OPT(xi, ContextoAtual)

e temos concluído.

Hipótese Indutiva: ?d ? Di,?xl ? Filhos,

lb(d, xl) ? OPT(xi, ContextoAtual ? (xi, d)) ? ub(d, xl)

A prova do caso geral é identica àquela do Caso Base II, exceto que supomos lb(d, xl) ?

OPT(xi, ContextoAtual ? (xi, d)) da Hipótese Indutiva, ao invés da suposição que x é uma

folha. ?

No Teorema 2, mostramos que Adopt eventualmente terminará. Um agente não raiz termina

quando threshold = UB é verdade e uma mensagem TERMINATE foi recebida de seu pai. A

prova decorre do fato de que uma vez que um pai de um agente termina, LB é monotonicamente

crescente. Desde LB é monotonicamente crescente, e Teorema 1 mostrou que a LB tem um

limitante superior, LB deve eventuamente parar de mudar. Um argumento semelhante é verdade

para a UB. Finalmente, o Threshold-Invariante força threshold a permanecer entre LB e UB até

que finalmente threshold = UB ocorre.



238

Teorema2:?xi ? V, seContextoAtuale?fixo, enta?othreshold = UBvaieventualmenteocorrer

Prova:Por indução nas prioridades dos agentes.

Caso Base: xi é uma folha. LB = UB é sempre verdade em xiporque ele é uma folha. Todo

agente mantém o Threshold-Invariante LB ? threshold ? UB. Assim, threshold = UB deve

sempre ser verdade em uma folha.

Hipótese Indutiva: Se ContextoAtual é fixo e xi fixa o valor da sua para di, então variável

a di, então ?xl ? Filhos, threshold = UB vai eventualmente ocorrer em xl e vai reportar um

limitante superior ub via uma mensagem COST, onde ub = t(di, xl) .

Suponha ContextoAtual é fixo. Para aplicar a hipótese indutiva, temos de mostrar que xi

vai eventualmente fixar o valor de sua variável. Para ver isso, observe que xi muda o valor de

sua variável apenas quando LB(di) aumenta. Pelo Teorema 1, LB é sempre menor do que o

custo da solução ótima. LB não pode aumentar para sempre e assim xi deve finalmente parar de

mudar o valor de sua variável. Podemos agora aplicar a hipótese indutiva que diz que quando

xi fixa seu valor, cada filho acabará por reportar um limitante superior ub = t(di, xl). Isto

significa que t(di, xl) = ub(di, xl). acabará por ser verdade em xi . Podemos substituir t(di, xl)

por ub(di, xl) na definição de UB para obter o seguinte:

UB
def

? UB(di)
def
= ?(di)

?

xl?Filhos

ub(di, xl)

= ?(di) =
?

xl?Filhos

t(di, xl)

Usando o AlocaçãoInvariante threshold = ?(di) =
?

xl?Filhos
t(di, xl), substituímos th-

reshold no acima para obter UB ? threshold. O lado direito do ThresholdInvariante de-

clara threshold ? UB. Portanto, temos tanto UB ? threshold quanto threshold ? UB.

Entãothreshold = UB deve ser verdade e o teorema está provado.?

Como um aparte, nota-se que o algoritmo se comporta de forma diferente dependendo se

threshold de xi é definido abaixo ou acima do custo da solução ótima. Se threshold for menor

do que o custo da solução ótima, então quando LB aumenta acima de threshold, xi elevará

threshold até que finalmente, LB = threshold = UB ocorre. Por outro lado, se threshold é

maior do que o custo da solução ótima, então, quando UB diminui abaixo do threshold, xi vai

reduzir de forma que threshold = UB ocorre. No segundo caso, LB pode permanecer menos



239

de que UB na termino.

Teorema3:?xi ? V , o valor final de threshold é igual a OPT(xi, ContextoAtual)

Caso Base: xi é a raiz. A raiz termina quando o valor de seu threshold (final) é igual UB.

LB = threshold é sempre verdadeiro na raiz porque threshold é inicializado para zero e é

aumentado à medida que aumenta LB. A raiz não recebe mensagens THRESHOLD, de modo

que esta é a única maneira do threshold mudar. Concluímos que LB = threshold = UB é

verdade quando a raiz termina. Isto significa que o valor do threshold final da raiz é o custo de

uma solução ótima global.

Hipótese Indutiva: Deixe xprepresentar o pai de xi. O valor final do threshold de xp é igual

a OPT(xp, ContextoAtual).

Procedemos por contradição. Suponha que o threshold final de xi é uma superestimativa.

Pela hipótese indutiva, o threshold final de xp não é um exagero. Significa que o AlocaçãoInva-

riante que se o threshold final dado a xi (por xp) é demasiadamente elevado, xp deve ter dado

algum outro filho (um irmão de xi), digamos xj, um threshold final, que é demasiadamente

baixo. Seja d denotar o valor atual de xp. Já que o threshold de xj é muito baixo, ele não será

capaz de encontrar uma solução sob o threshold dado e, assim, vai aumentar o seu próprio th-

reshold. Ele irá informar lb a xp, onde lb &gt; t(d, xj). Usando os invariantes do Adopt, podemos

concluir que o threshold = UB não podem ser verdadeiro em xp, de modo que xp não pode

já ter terminado. De acordo com o ChildThresholdInvariant, xp vai aumentar o threshold de xj

para que lb(d, xj) &gt; t(d, xj) .

Eventualmente, lb(d, xj) alcançara o limitante superior e lb(d, xj) = t(d, xj) = lb(d, xj) vai

valer. Isto contradiz a afirmação de que o threshold final de xj é muito baixo. Por contradição,

o valor final do threshold de xj não pode ser muito baixo e o threshold final de xi não pode ser

muito alto. ?



240

ANEXO B -- Prova do Algoritmo DPOP

Neste anexo é mostrada a prova de que o algoritmo DTREE é correto e completo. Esta é a

versão original e mais simples do DPOP, sendo justamente aquela que foi usada neste trabalho

(PETCU; FALTINGS, 2004).

Proposição1.Algoritmo é correto e completo.

PROVA.

Correto:desde que não haja ciclos no problema, significa que todas as mensagens que o nó

Xi recebe dos seus vizinhos, vem de partes disjuntas do problema de restrições. Eles

representam avaliações exatas da utilidade que pode ser obtida das subárvores com a raiz

nos nós emissores, para cada valor possível que Xi pode assumir (pode ser inferido por

indução das folhas dentro da árvore). Somando todas as mensagens, Xi tem limitantes

superiores precisos sobre a quantidade de utilidade obtida do problema completo, para

cada um de seus valores; portanto é fácil escolher aquele que fornece a utilidade máxima.

Completo:novamente, desde que não haja ciclos no problema, e todas as folhas iniciam a pro-

pagação de mensagem, é garantido que cada nó vai eventualmente receber k-1 mensagens

(com k = número de vizinhos) e portanto ele vai ser capaz de enviar sua k-ésia mensagem.

Desta forma, ele vai também receber a mensagem final do último vizinho, levando para a

conclusão do algoritmo para este nó.



241

ANEXO C -- Representação de Instâncias de

Problemas de Restrições com XML

I. Representação XML de Instâncias de DCOP Estas extensões podem ser divididas

resumidamente nas seguintes seções principais (LEAUTE; OTTENS; SZYMANEK, 2009):

1.A seção&amp;lt;agents&gt; define os agentes no DCOP. Esta é uma extensão feita ao formato

XCSP 2.1 a fim de adaptá-lo aos problemas distribuídos;

2.A seção&amp;lt;domains&gt; define os valores dos domínios das variáveis no DCOP. Não é ne-

cessário criar um domínio para cada variável, pois várias variáveis podem referenciar o

mesmo domínio;

3.A seção&amp;lt;variables&gt; lista as variáveis no DCOP, com seus correspondentes domínios de

valores permitidos, e os nomes dos agentes que os possuem. Um agente pode possuir

mais de uma variável. O campo agent é uma extensão feita ao formato XCSP 2.1 a fim

de adaptá-lo aos problemas distribuídos;

4.A seção&amp;lt;relations&gt; define as relações genéricas sobre as variáveis. Uma relação é para

uma restrição o que um domínio é para uma variável: ela descreve uma noção genérica

sobre um certo número de variáveis, sem especificar os nomes das variáveis. Esta noção

pode, então, ser implementada como restrições sobre variáveis específicas;

5.A seção&amp;lt;constraints&gt; lista as restrições no DCOP, através da referência a relações defi-

nidas previamente, e da aplicação delas a tuplas específicas de variáveis.

A Fig. 43 mostra o exemplo de um arquivo XCSP do FRODO, que representa uma instância do

problema de coloração de grafos com 3 cores e 3 vértices na forma de DCOP (YOKOO, 2001).

II. Representação XML de Instâncias de HCOP Os seguintes atributos foram incluídos

nesta extensão, segundo a divisão utilizada na Seção 5.7:



242

&amp;lt;i n s t a n c e &gt;
&amp;lt;p r e s e n t a t i o n name = " s a m p l e P r o b l e m " m a x C o n s t r a i n t A r i t y = " 2 "

m a x i m i z e = " f a l s e " f o r m a t = "XCSP 2 . 1 _FRODO" / &gt;
&amp;lt;a g e n t s n b A g e n t s = " 3 " &gt;

&amp;lt;a g e n t name = " a g e n t X " / &gt;
&amp;lt;a g e n t name = " a g e n t Y " / &gt;
&amp;lt;a g e n t name = " a g e n t Z " / &gt;

&amp;lt;/ a g e n t s &gt;
&amp;lt;d o m a i n s n b D o m a i n s = " 1 " &gt;

&amp;lt;d o m a i n name = " t h r e e _ c o l o r s " n b V a l u e s = " 3 " &gt; 1 . . 3 &amp;lt;/ domai n &gt;
&amp;lt;/ d o m a i n s &gt;
&amp;lt;v a r i a b l e s n b V a r i a b l e s = " 3 " &gt;

&amp;lt;v a r i a b l e name = "X" d o m a i n = " t h r e e _ c o l o r s " a g e n t = " a g e n t X " / &gt;
&amp;lt;v a r i a b l e name = "Y" d o m a i n = " t h r e e _ c o l o r s " a g e n t = " a g e n t Y " / &gt;
&amp;lt;v a r i a b l e name = "Z " d o m a i n = " t h r e e _ c o l o r s " a g e n t = " a g e n t Z " / &gt;

&amp;lt;/ v a r i a b l e s &gt;
&amp;lt;r e l a t i o n s n b R e l a t i o n s = " 1 " &gt;

&amp;lt;r e l a t i o n name = "NEQ" a r i t y = " 2 " n b T u p l e s = " 3 " s e m a n t i c s = " s o f t "
d e f a u l t C o s t = " 0 " &gt; i n f i n i t y : 1 1 | 2 2 | 3 3 &amp;lt;/ r e l a t i o n &gt;

&amp;lt;/ r e l a t i o n s &gt;
&amp;lt;c o n s t r a i n t s n b C o n s t r a i n t s = " 3 " &gt;

&amp;lt;c o n s t r a i n t name = " X _ a n d _ Y _ h a v e _ d i f f e r e n t _ c o l o r s " a r i t y = " 2 "
s c o p e = "X Y" r e f e r e n c e = "NEQ" / &gt;

&amp;lt;c o n s t r a i n t name = " X _ a n d _ Z _ h a v e _ d i f f e r e n t _ c o l o r s " a r i t y = " 2 "
s c o p e = "X Z " r e f e r e n c e = "NEQ" / &gt;

&amp;lt;c o n s t r a i n t name = " Y _ a n d _ Z _ h a v e _ d i f f e r e n t _ c o l o r s " a r i t y = " 2 "
s c o p e = "Y Z " r e f e r e n c e = "NEQ" / &gt;

&amp;lt;/ c o n s t r a i n t s &gt;
&amp;lt;/ i n s t a n c e &gt;

Figura 43: Exemplo de um Arquivo XCSP do FRODO p/ DCOP



243

•Dentro da seção agent já existente

–extId : Identificação externa do agente na organização interna do problema;

•Dentro da seção variable já existente

–extId : Identificação externa da variável na organização interna do problema;

–level : Identificador numérico da camada holônica ou nível associado à variável

–role: Papel da variável na organização interna do problema

*Ex. refinaria, terminal.

–type: Papel da variável na organização holônica. Como ser uma das seguintes:

*holon: variável holônica holon (superholon)

*head: variável holônica cabeça;

*atom: variável holônica átomo;

*local: variável local;

•Criação das Restrições Holônicas:

–holonic: emergence

*é intrínsecamente holônica

*entre holon e sua cabeça

–holonic: aggregation

*é intrínsecamente holônica

*entre cabeça e membros do holon

–holonic: local

*entre variáveis locais e\ou variáveis holônicas

Tanto role quanto type representam papéis na organização interna do problema e na organi-

zação holônica, respectivamente. HCOP herdou as características do DCOP generalizado para

problemas locais complexos, que têm várias variáveis por agente (vide Seção 5.3). Portanto, ele

tem várias variáveis por holon. Em geral, no modelo organizacional os papéis são ligados aos

holons (agentes), exceto no caso do type local, onde existem um role para cada variável local.



244

III. Representação XML de Instâncias de HCOPs Complexos Os seguintes atributos

foram incluídos nesta extensão, segundo a mesma divisão utilizada na Seção 5.7:

•Dentro da seção variable já existente

–actualDomain: Identifica o domínio vetorial real da variável

*Ex. plano de produção e estoque.

–time: Número do período de tempo associado à variável

•Criação de uma nova restrição holônica:

–holonic: composition

*é intrínsecamente holônica

*entre cabeça e membros do supeholon

*agregação no mesmo espaço e no mesmo tempo

(ao contrário do holonic: aggregation , que agrega em qualquer espaço e tempo)

A Fig. 44 mostra uma parte do XML da instância analisada no caso de estudo descrito na Seção

8.4.2 e ilustrado na Fig. 36. Este XML utilizou as extensões criadas para o HCOP complexo.



245

Figura 44: Representação da Instância da Fig. 36 em XCSP



246

ANEXO D -- Solução Completa do Caso Padrão no

Caso de Estudo do Capítulo 8

Nível ? = 4;

1. Holon global EE?4 :

•Variável Holônica (variável emergente):

Rv?4 EE ?4 = (?62, ?26, ?45, ?90, 14, ?91, 161, 245)

Nível ? = 3;

•Variáveis locais, i.e., os fluxos de transporte entre os continentes e o SM:

Rf?3 AmericaSul Europa ?3 = (0, 0, 0, 0, 100, 0, 0, 453)

Rf?3 Europa AmericaSul ?3 = (0, 900, 0, 0, 0, 0, 0, 0)

Rf?3 AmericaSul AmericaNorte ?3 = (0, 0, 0, 0, 380, 0, 1000, 1638)

Rf?3 AmericaNorte AmericaSul ?3 = (0, 200, 0, 556, 0, 0, 0, 0)

Rf?3 AmericaSul Africa ?3 = (0, 0, 0, 0, 0, 0, 0, 0)

Rf?3 Africa AmericaSul ?3 = (100, 0, 0, 0, 0, 1300, 0, 0)

Rf?3 AmericaSul Asia ?3 = (0, 0, 0, 0, 610, 0, 1000, 2273)

Rf?3 Asia AmericaSul ?3 = (0, 100, 140, 344, 0, 0, 0, 0)

Rf?3 AmericaSul OrienteMedio ?3 = (0, 0, 0, 0, 0, 0, 0, 0)

Rf?3 OrienteMedio AmericaSul ?3 = (0, 0, 200, 0, 0, 1000, 0, 0)

Rf?3 AmericaSul SM ?3 = (0, 0, 0, 0, 14, 0, 161, 245)

Rf?3 SM AmericaSul ?3 = (62, 26, 45, 90, 0, 91, 0, 0)



247

•Subholons:

1.1 Holon continente Europa?3 :

–Variável Holônica (variável de decisão):

Rv?3 Europa ?3=0 = (0, 900, 0, 0, ?100, 0, 0, ?453)

1.2 Holon continente AmericaNorte?3 :

–Variável Holônica (variável de decisão):

Rv?3 AmericaNorte ?3=0 = (0, 200, 0, 556, ?380, 0, ?1000, ?1638)

1.3 Holon continente Africa?3 :

–Variável Holônica (variável de decisão):

Rv?3 Africa ?3=0 = (100, 0, 0, 0, 0, 1300, 0, 0)

1.4 Holon continente Asia?3 :

–Variável Holônica (variável de decisão):

Rv?3 Asia ?3=0 = (0, 100, 140, 344, ?610, 0, ?1000, ?2273)

1.5 Holon continente OrienteMedio?3 :

–Variável Holônica (variável de decisão):

Rv?3 OrienteMedio ?3=0 = (0, 0, 200, 0, 0, 1000, 0, 0)

1.6 Holon continente AmericaSul?3 :

–Variável Holônica (variável emergente):

Rv?3 AmericaSul ?3=0 = (?180, ?1230, ?376, ?1006, 1173, ?2481, 2503, 4353)

Nível ? = 2;

•Variáveis locais, i.e., os fluxos de transporte entre as regiões:

Rf?2 Centro Leste ?2=0 = (33, 0, 0, 0, 0, 50, 0, 0)

Rf?2 Centro Leste ?2=1 = (0, 0, 0, 0, 0, 0, 0, 0)

Rf?2 Leste Centro ?2=0 = (0, 1, 24, 106, 0, 0, 1545, 180)

Rf?2 Leste Centro ?2=1 = (0, 0, 0, 0, 0, 0, 3030, 610)

Rf?2 Centro Sul ?2=0 = (47, 0, 0, 0, 0, 0, 0, 0)



248

Rf?2 Centro Sul ?2=1 = (0, 0, 0, 0, 0, 0, 0, 0)

Rf?2 Sul Centro ?2=0 = (0, 0, 0, 0, 0, 0, 0, 0)

Rf?2 Sul Centro ?2=1 = (0, 0, 0, 0, 0, 0, 0, 0)

Rf?2 Leste Sul ?2=0 = (0, 154, 0, 0, 0, 0, 476, 0)

Rf?2 Leste Sul ?2=1 = (0, 0, 0, 0, 0, 0, 952, 0)

Rf?2 Sul Leste ?2=0 = (0, 0, 0, 0, 0, 0, 0, 0)

Rf?2 Sul Leste ?2=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Subholons:

1.6.1 Holon região Sul?2 :

•Variáveis Holônicas (variáveis emergentes):

Rv?2 Sul ?2=0 = (?56, ?154, ?46, 75, 76, 0, ?476, 0)

Rv?2 Sul ?2=1 = (?70, ?273, ?64, ?87, 0, 0, ?952, 0)

1.6.2 Holon região Centro?2 :

•Variáveis Holônicas (variáveis emergentes):

Rv?2 Centro ?2=0 = (80, ?33, ?55, ?106, 577, 50, ?1545, ?180)

Rv?2 Centro ?2=1 = (?16, ?688, ?215, ?1141, 180, 0, ?3030, ?610)

1.6.3 Holon região Leste?2 :

•Variáveis Holônicas (variáveis emergentes):

Rv?2 Leste ?2=0 = (?33, 155, 24, 294, 248, ?863, 4082, 2631)

Rv?2 Leste ?2=1 = (?67, ?233, ?29, ?25, 23, ?1578, 4082, 2768)

|Nível ? = 1;

1.Dentro do holon região Sul?2=0:

(a)Variáveis Holônicas (variáveis de decisão):

i.Planos de Produção (Rv1 base ?1 ? Rplanbase ?1 )

•Rplan?Refinaria1 ?1=0 = (8, 58, 21, 73, 17, 0, ?238, 0)



249

•Rplan?Refinaria1 ?1=1 = (8, 58, 21, 73, 17, 0, ?238, 0)

•Rplan?Refinaria1 ?1=2 = (8, 58, 21, 73, 17, 0, ?238, 0)

•Rplan?Refinaria1 ?1=3 = (8, 58, 21, 73, 17, 0, ?238, 0)

ii.Estoques (Rv1 base ?1 ? Restqbase ?1 )

•Restq?Refinaria1 ?1=0 = (20, 125, 47, 105, 61, 0, 238, 0)

•Restq?Refinaria1 ?1=1 = (18, 50, 31, 88, 61, 0, 0, 0)

•Restq?Refinaria1 ?1=2 = (7, 41, 16, 0, 0, 0, 238, 0)

•Restq?Refinaria1 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal1 ?1=0 = (4, 3, 0, 31, 15, 0, 0, 0)

•Restq?Terminal1 ?1=1 = (0, 0, 0, 31, 15, 0, 0, 0)

•Restq?Terminal1 ?1=2 = (0, 0, 0, 31, 15, 0, 0, 0)

•Restq?Terminal1 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal2 ?1=0 = (0, 0, 5, 0, 0, 0, 0, 0)

•Restq?Terminal2 ?1=1 = (5, 11, 5, 0, 0, 0, 0, 0)

•Restq?Terminal2 ?1=2 = (0, 11, 5, 23, 9, 0, 0, 0)

•Restq?Terminal2 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal3 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal3 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal3 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal3 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

(b)Fluxos de transporte (variáveis locais) entre as bases:

•Rf?1 Refinaria1 Terminal1 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria1 Terminal1 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria1 Terminal1 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria1 Terminal1 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal1 Refinaria1 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal1 Refinaria1 ?1=1 = (4, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal1 Refinaria1 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal1 Refinaria1 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal3 Refinaria1 ?1=0 = (0, 0, 0, 0, 0, 0, 238, 0)

•Rf?1 Terminal3 Refinaria1 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal3 Refinaria1 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)



250

•Rf?1 Terminal3 Refinaria1 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria1 Terminal3 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria1 Terminal3 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria1 Terminal3 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria1 Terminal3 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria1 Terminal2 ?1=0 = (0, 0, 0, 23, 0, 0, 0, 0)

•Rf?1 Refinaria1 Terminal2 ?1=1 = (0, 73, 0, 40, 0, 0, 0, 0)

•Rf?1 Refinaria1 Terminal2 ?1=2 = (0, 0, 0, 67, 9, 0, 0, 0)

•Rf?1 Refinaria1 Terminal2 ?1=3 = (0, 30, 0, 18, 0, 0, 0, 0)

•Rf?1 Terminal2 Refinaria1 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal2 Refinaria1 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal2 Refinaria1 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal2 Refinaria1 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

2.Dentro do holon região Sul?2=1:

(a)Variáveis Holônicas (variáveis de decisão):

i.Planos de Produção (Rv1 base ?1 ? Rplanbase ?1 )

•Rplan?Refinaria1 ?1=4 = (8, 58, 21, 73, 17, 0, 0, ?238)

•Rplan?Refinaria1 ?1=5 = (8, 58, 21, 73, 17, 0, 0, ?238)

•Rplan?Refinaria1 ?1=6 = (8, 58, 21, 73, 17, 0, 0, ?238)

•Rplan?Refinaria1 ?1=7 = (8, 58, 21, 73, 17, 0, 0, ?238)

ii.Estoques (Rv1 base ?1 ? Restqbase ?1 )

•Restq?Refinaria1 ?1=4 = (0, 9, 16, 17, 0, 0, 240, 0)

•Restq?Refinaria1 ?1=5 = (15, 6, 0, 0, 0, 0, 240, 0)

•Restq?Refinaria1 ?1=6 = (6, 0, 16, 22, 0, 0, 238, 0)

•Restq?Refinaria1 ?1=7 = (0, 1, 0, 0, 0, 0, 0, 0)

•Restq?Terminal1 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal1 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal1 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal1 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal2 ?1=4 = (5, 0, 0, 0, 0, 0, 0, 0)



251

•Restq?Terminal2 ?1=5 = (0, 11, 0, 0, 0, 0, 0, 0)

•Restq?Terminal2 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal2 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal3 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal3 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal3 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal3 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

(b)Fluxos de transporte (variáveis locais) entre as bases:

•Rf?1 Refinaria1 Terminal1 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria1 Terminal1 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria1 Terminal1 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria1 Terminal1 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal1 Refinaria1 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal1 Refinaria1 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal1 Refinaria1 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal1 Refinaria1 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal3 Refinaria1 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal3 Refinaria1 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal3 Refinaria1 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal3 Refinaria1 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria1 Terminal3 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria1 Terminal3 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria1 Terminal3 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria1 Terminal3 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria1 Terminal2 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria1 Terminal2 ?1=5 = (0, 0, 0, 38, 0, 0, 0, 0)

•Rf?1 Refinaria1 Terminal2 ?1=6 = (0, 0, 0, 1, 0, 0, 0, 0)

•Rf?1 Refinaria1 Terminal2 ?1=7 = (0, 0, 0, 40, 0, 0, 0, 0)

•Rf?1 Terminal2 Refinaria1 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal2 Refinaria1 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal2 Refinaria1 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal2 Refinaria1 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)



252

3.Dentro do holon região Centro?2=0:

(a)Variáveis Holônicas (variáveis de decisão):

i.Planos de Produção (Rv1 base ?1 ? Rplanbase ?1 )

•Rplan?Refinaria2 ?1=0 = (16, 104, 40, 143, 35, 0, ?450, 0)

•Rplan?Refinaria2 ?1=1 = (16, 104, 40, 143, 35, 0, ?450, 0)

•Rplan?Refinaria2 ?1=2 = (16, 104, 40, 143, 35, 0, ?450, 0)

•Rplan?Refinaria2 ?1=3 = (16, 104, 40, 143, 35, 0, ?450, 0)

•Rplan?Refinaria3 ?1=0 = (11, 70, 43, 83, 25, 0, ?305, 0)

•Rplan?Refinaria3 ?1=1 = (9, 59, 34, 81, 25, 0, 0, ?305)

•Rplan?Refinaria3 ?1=2 = (11, 70, 43, 83, 25, 0, ?305, 0)

•Rplan?Refinaria3 ?1=3 = (9, 59, 34, 81, 25, 0, 0, ?305)

•Rplan?Refinaria4 ?1=0 = (7, 54, 16, 60, 15, 0, ?210, 0)

•Rplan?Refinaria4 ?1=1 = (7, 54, 16, 60, 15, 0, ?210, 0)

•Rplan?Refinaria4 ?1=2 = (7, 54, 16, 60, 15, 0, ?210, 0)

•Rplan?Refinaria4 ?1=3 = (7, 54, 16, 60, 15, 0, ?210, 0)

ii.Estoques (Rv1 base ?1 ? Restqbase ?1 )

•Restq?Refinaria2 ?1=0 = (23, 209, 0, 193, 149, 0, 70, 0)

•Restq?Refinaria2 ?1=1 = (23, 173, 9, 60, 171, 0, 450, 0)

•Restq?Refinaria2 ?1=2 = (24, 16, 17, 86, 192, 0, 0, 0)

•Restq?Refinaria2 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Refinaria3 ?1=0 = (5, 86, 100, 70, 112, 0, 305, 310)

•Restq?Refinaria3 ?1=1 = (2, 82, 133, 0, 121, 0, 305, 205)

•Restq?Refinaria3 ?1=2 = (2, 60, 46, 18, 0, 0, 0, 305)

•Restq?Refinaria3 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Refinaria3 ?1=0 = (27, 120, 0, 77, 41, 0, 55, 0)

•Restq?Refinaria3 ?1=1 = (29, 106, 35, 74, 56, 0, 220, 0)

•Restq?Refinaria3 ?1=2 = (0, 15, 17, 55, 0, 0, 155, 0)

•Restq?Refinaria3 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Refinaria4 ?1=0 = (9, 32, 30, 79, 0, 0, 0, 0)

•Restq?Refinaria4 ?1=1 = (0, 0, 30, 22, 0, 0, 0, 0)

•Restq?Refinaria4 ?1=2 = (0, 12, 7, 0, 0, 0, 0, 0)



253

•Restq?Refinaria4 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal4 ?1=0 = (3, 34, 0, 34, 0, 0, 0, 0)

•Restq?Terminal4 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal4 ?1=2 = (0, 34, 0, 0, 0, 0, 0, 0)

•Restq?Terminal4 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal5 ?1=0 = (9, 0, 0, 19, 69, 0, 0, 0)

•Restq?Terminal5 ?1=1 = (9, 0, 0, 19, 0, 0, 0, 0)

•Restq?Terminal5 ?1=2 = (2, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal5 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal6 ?1=0 = (0, 0, 12, 88, 33, 0, 450, 310)

•Restq?Terminal6 ?1=1 = (0, 0, 12, 0, 33, 0, 130, 310)

•Restq?Terminal6 ?1=2 = (0, 0, 12, 0, 0, 0, 0, 310)

•Restq?Terminal6 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal7 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal7 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal7 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal7 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal8 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal8 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal8 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal8 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

(b)Fluxos de transporte (variáveis locais) entre as bases:

•Rf?1 Refinaria2 Terminal8 ?1=0 = (0, 0, 53, 0, 0, 0, 0, 0)

•Rf?1 Refinaria2 Terminal8 ?1=1 = (0, 35, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria2 Terminal8 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria2 Terminal8 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal8 Refinaria2 ?1=0 = (0, 0, 0, 0, 0, 0, 70, 0)

•Rf?1 Terminal8 Refinaria2 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal8 Refinaria2 ?1=2 = (0, 0, 0, 196, 0, 0, 0, 0)

•Rf?1 Terminal8 Refinaria2 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria2 Terminal5 ?1=0 = (0, 51, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria2 Terminal5 ?1=1 = (0, 8, 0, 0, 0, 0, 0, 0)



254

•Rf?1 Refinaria2 Terminal5 ?1=2 = (0, 81, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria2 Terminal5 ?1=3 = (0, 12, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal5 Refinaria2 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal5 Refinaria2 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal5 Refinaria2 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal5 Refinaria2 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria3 Terminal8 ?1=0 = (0, 67, 0, 114, 0, 0, 0, 0)

•Rf?1 Refinaria3 Terminal8 ?1=1 = (0, 0, 1, 0, 0, 0, 0, 0)

•Rf?1 Refinaria3 Terminal8 ?1=2 = (0, 0, 130, 0, 0, 0, 0, 0)

•Rf?1 Refinaria3 Terminal8 ?1=3 = (0, 57, 0, 35, 0, 0, 0, 0)

•Rf?1 Terminal8 Refinaria3 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 20)

•Rf?1 Terminal8 Refinaria3 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal8 Refinaria3 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 100)

•Rf?1 Terminal8 Refinaria3 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal7 Terminal8 ?1=0 = (0, 44, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal7 Terminal8 ?1=1 = (0, 0, 0, 35, 0, 0, 0, 0)

•Rf?1 Terminal7 Terminal8 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal7 Terminal8 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal8 Terminal7 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal8 Terminal7 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal8 Terminal7 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal8 Terminal7 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal8 Terminal4 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal8 Terminal4 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal8 Terminal4 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal8 Terminal4 ?1=3 = (0, 0, 26, 0, 0, 0, 0, 0)

•Rf?1 Terminal4 Terminal8 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal4 Terminal8 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal4 Terminal8 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal4 Terminal8 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal5 Terminal4 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal5 Terminal4 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)



255

•Rf?1 Terminal5 Terminal4 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal5 Terminal4 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal4 Terminal5 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal4 Terminal5 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal4 Terminal5 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal4 Terminal5 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal4 Refinaria4 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal4 Refinaria4 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal4 Refinaria4 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal4 Refinaria4 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria4 Terminal4 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria4 Terminal4 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria4 Terminal4 ?1=2 = (0, 76, 0, 11, 0, 0, 0, 0)

•Rf?1 Refinaria4 Terminal4 ?1=3 = (0, 0, 0, 50, 0, 0, 0, 0)

•Rf?1 Terminal4 Terminal6 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal4 Terminal6 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal4 Terminal6 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal4 Terminal6 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal6 Terminal4 ?1=0 = (18, 15, 0, 21, 0, 0, 0, 0)

•Rf?1 Terminal6 Terminal4 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal6 Terminal4 ?1=2 = (3, 0, 0, 19, 0, 0, 0, 0)

•Rf?1 Terminal6 Terminal4 ?1=3 = (2, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria4 Terminal6 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria4 Terminal6 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria4 Terminal6 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria4 Terminal6 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal6 Refinaria4 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal6 Refinaria4 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal6 Refinaria4 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal6 Refinaria4 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal7 Refinaria4 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal7 Refinaria4 ?1=1 = (0, 0, 0, 0, 0, 0, 320, 0)



256

•Rf?1 Terminal7 Refinaria4 ?1=2 = (0, 0, 0, 0, 0, 0, 130, 0)

•Rf?1 Terminal7 Refinaria4 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria4 Terminal7 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria4 Terminal7 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria4 Terminal7 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria4 Terminal7 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma1 Refinaria4 ?1=0 = (0, 0, 0, 0, 0, 0, 55, 0)

•Rf?1 Plataforma1 Refinaria4 ?1=1 = (0, 0, 0, 0, 0, 0, 55, 0)

•Rf?1 Plataforma1 Refinaria4 ?1=2 = (0, 0, 0, 0, 0, 0, 15, 0)

•Rf?1 Plataforma1 Refinaria4 ?1=3 = (0, 0, 0, 0, 0, 0, 55, 0)

•Rf?1 Refinaria4 Plataforma1 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria4 Plataforma1 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria4 Plataforma1 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria4 Plataforma1 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

4.Dentro do holon região Centro?2=1:

(a)Variáveis Holônicas (variáveis de decisão):

i.Planos de Produção (Rv1 base ?1 ? Rplanbase ?1 )

•Rplan?Refinaria2 ?1=4 = (16, 104, 40, 143, 35, 0, ?450, 0)

•Rplan?Refinaria2 ?1=5 = (16, 104, 40, 143, 35, 0, ?450, 0)

•Rplan?Refinaria2 ?1=6 = (16, 104, 40, 143, 35, 0, ?450, 0)

•Rplan?Refinaria2 ?1=7 = (16, 104, 40, 143, 35, 0, ?450, 0)

•Rplan?Refinaria3 ?1=4 = (9, 59, 34, 81, 25, 0, 0, ?305)

•Rplan?Refinaria3 ?1=5 = (11, 70, 43, 83, 25, 0, ?305, 0)

•Rplan?Refinaria3 ?1=6 = (11, 70, 43, 83, 25, 0, ?305, 0)

•Rplan?Refinaria3 ?1=7 = (9, 59, 34, 81, 25, 0, 0, ?305)

•Rplan?Refinaria4 ?1=4 = (7, 54, 16, 60, 15, 0, ?210, 0)

•Rplan?Refinaria4 ?1=5 = (7, 54, 16, 60, 15, 0, ?210, 0)

•Rplan?Refinaria4 ?1=6 = (7, 54, 16, 60, 15, 0, ?210, 0)

•Rplan?Refinaria4 ?1=7 = (7, 54, 16, 60, 15, 0, ?210, 0)

ii.Estoques (Rv1 base ?1 ? Restqbase ?1 )



257

•Restq?Refinaria2 ?1=4 = (3, 0, 3, 0, 21, 0, 0, 0)

•Restq?Refinaria2 ?1=5 = (2, 4, 12, 340, 42, 0, 450, 0)

•Restq?Refinaria2 ?1=6 = (0, 0, 0, 173, 63, 0, 0, 0)

•Restq?Refinaria2 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Refinaria3 ?1=4 = (3, 0, 8, 0, 0, 0, 310, 0)

•Restq?Refinaria3 ?1=5 = (3, 0, 0, 16, 0, 0, 305, 0)

•Restq?Refinaria3 ?1=6 = (3, 4, 8, 16, 0, 0, 0, 305)

•Restq?Refinaria3 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Refinaria3 ?1=4 = (0, 41, 17, 15, 0, 0, 220, 0)

•Restq?Refinaria3 ?1=5 = (2, 28, 0, 7, 15, 0, 65, 0)

•Restq?Refinaria3 ?1=6 = (4, 14, 17, 3, 30, 0, 155, 0)

•Restq?Refinaria3 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Refinaria4 ?1=4 = (6, 0, 30, 79, 0, 0, 0, 0)

•Restq?Refinaria4 ?1=5 = (4, 32, 0, 20, 0, 0, 0, 0)

•Restq?Refinaria4 ?1=6 = (0, 0, 30, 57, 0, 0, 0, 0)

•Restq?Refinaria4 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal4 ?1=4 = (0, 34, 0, 0, 0, 0, 0, 0)

•Restq?Terminal4 ?1=5 = (5, 0, 0, 68, 0, 0, 0, 0)

•Restq?Terminal4 ?1=6 = (0, 34, 0, 34, 0, 0, 0, 0)

•Restq?Terminal4 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal5 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal5 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal5 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal5 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal6 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal6 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal6 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal6 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal7 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal7 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal7 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal7 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)



258

•Restq?Terminal8 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal8 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal8 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal8 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

(b)Fluxos de transporte (variáveis locais) entre as bases:

•Rf?1 Refinaria2 Terminal8 ?1=4 = (0, 06, 0, 0, 0, 0, 0)

•Rf?1 Refinaria2 Terminal8 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria2 Terminal8 ?1=6 = (0, 0, 20, 0, 0, 0, 0, 0)

•Rf?1 Refinaria2 Terminal8 ?1=7 = (0, 0, 9, 0, 0, 0, 0, 0)

•Rf?1 Terminal8 Refinaria2 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal8 Refinaria2 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal8 Refinaria2 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal8 Refinaria2 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria2 Terminal5 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria2 Terminal5 ?1=5 = (5, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria2 Terminal5 ?1=6 = (0, 5, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria2 Terminal5 ?1=7 = (0, 7, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal5 Refinaria2 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal5 Refinaria2 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal5 Refinaria2 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal5 Refinaria2 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria3 Terminal8 ?1=4 = (0, 0, 26, 15, 0, 0, 0, 0)

•Rf?1 Refinaria3 Terminal8 ?1=5 = (0, 10, 51, 0, 0, 0, 0, 0)

•Rf?1 Refinaria3 Terminal8 ?1=6 = (0, 3, 35, 21, 0, 0, 0, 0)

•Rf?1 Refinaria3 Terminal8 ?1=7 = (0, 0, 42, 35, 0, 0, 0, 0)

•Rf?1 Terminal8 Refinaria3 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal8 Refinaria3 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal8 Refinaria3 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal8 Refinaria3 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal7 Terminal8 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal7 Terminal8 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal7 Terminal8 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)



259

•Rf?1 Terminal7 Terminal8 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal8 Terminal7 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal8 Terminal7 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal8 Terminal7 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal8 Terminal7 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal8 Terminal4 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal8 Terminal4 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal8 Terminal4 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal8 Terminal4 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal4 Terminal8 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal4 Terminal8 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal4 Terminal8 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal4 Terminal8 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal5 Terminal4 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal5 Terminal4 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal5 Terminal4 ?1=6 = (5, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal5 Terminal4 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal4 Terminal5 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal4 Terminal5 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal4 Terminal5 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal4 Terminal5 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal4 Refinaria4 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal4 Refinaria4 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal4 Refinaria4 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal4 Refinaria4 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria4 Terminal4 ?1=4 = (2, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria4 Terminal4 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria4 Terminal4 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria4 Terminal4 ?1=7 = (6, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal4 Terminal6 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal4 Terminal6 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal4 Terminal6 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)



260

•Rf?1 Terminal4 Terminal6 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal6 Terminal4 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal6 Terminal4 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal6 Terminal4 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal6 Terminal4 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria4 Terminal6 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria4 Terminal6 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria4 Terminal6 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria4 Terminal6 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal6 Refinaria4 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal6 Refinaria4 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal6 Refinaria4 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal6 Refinaria4 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal7 Refinaria4 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal7 Refinaria4 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal7 Refinaria4 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal7 Refinaria4 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria4 Terminal7 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria4 Terminal7 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria4 Terminal7 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria4 Terminal7 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma1 Refinaria4 ?1=4 = (0, 0, 0, 0, 0, 0, 55, 0)

•Rf?1 Plataforma1 Refinaria4 ?1=5 = (0, 0, 0, 0, 0, 0, 55, 0)

•Rf?1 Plataforma1 Refinaria4 ?1=6 = (0, 0, 0, 0, 0, 0, 55, 0)

•Rf?1 Plataforma1 Refinaria4 ?1=7 = (0, 0, 0, 0, 0, 0, 55, 0)

•Rf?1 Refinaria4 Plataforma1 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria4 Plataforma1 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria4 Plataforma1 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria4 Plataforma1 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

5.Dentro do holon região Leste?2=0:

(a)Variáveis Holônicas (variáveis de decisão):



261

i.Planos de Produção (Rv1 base ?1 ? Rplanbase ?1 )

•Rplan?Refinaria5 ?1=0 = (11, 91, 44, 104, 13, ?282, 0, 0)

•Rplan?Refinaria5 ?1=1 = (11, 91, 44, 104, 13, ?282, 0, 0)

•Rplan?Refinaria5 ?1=2 = (8, 48, 24, 75, 20, 0, 0, ?282)

•Rplan?Refinaria5 ?1=3 = (11, 91, 44, 104, 13, ?282, 0, 0)

•Rplan?Refinaria6 ?1=0 = (5, 48, 23, 57, 7, ?150, 0, 0)

•Rplan?Refinaria6 ?1=1 = (5, 48, 23, 57, 7, ?150, 0, 0)

•Rplan?Refinaria6 ?1=2 = (5, 48, 23, 57, 7, ?150, 0, 0)

•Rplan?Refinaria6 ?1=3 = (5, 32, 16, 45, 12, 0, ?150, 0)

ii.Estoques (Rv1 base ?1 ? Restqbase ?1 )

•Restq?Refinaria5 ?1=0 = (43, 132, 13, 222, 50, 282, 0, 145)

•Restq?Refinaria5 ?1=1 = (0, 184, 58, 7, 83, 0, 0, 145)

•Restq?Refinaria5 ?1=2 = (8, 172, 0, 0, 0, 0, 0, 0)

•Restq?Refinaria5 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Refinaria6 ?1=0 = (4, 113, 0, 0, 0, 0, 0, 0)

•Restq?Refinaria6 ?1=1 = (0, 86, 20, 0, 11, 150, 0, 0)

•Restq?Refinaria6 ?1=2 = (9, 72, 8, 11, 3, 0, 150, 0)

•Restq?Refinaria6 ?1=3 = (0, 1, 0, 0, 0, 0, 0, 0)

•Restq?Terminal9 ?1=0 = (0, 9, 20, 0, 20, 0, 0, 0)

•Restq?Terminal9 ?1=1 = (0, 0, 0, 22, 0, 0, 0, 0)

•Restq?Terminal9 ?1=2 = (0, 0, 0, 0, 20, 0, 0, 0)

•Restq?Terminal9 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal10 ?1=0 = (0, 10, 0, 0, 0, 0, 0, 150)

•Restq?Terminal10 ?1=1 = (0, 10, 0, 0, 0, 0, 0, 0)

•Restq?Terminal10 ?1=2 = (0, 10, 0, 0, 0, 0, 300, 0)

•Restq?Terminal10 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal11 ?1=0 = (20, 28, 20, 0, 69, 0, 0, 0)

•Restq?Terminal11 ?1=1 = (0, 2, 0, 0, 69, 0, 0, 0)

•Restq?Terminal11 ?1=2 = (0, 2, 0, 0, 0, 0, 0, 0)

•Restq?Terminal11 ?1=3 = (0, 2, 0, 0, 0, 0, 0, 0)

•Restq?Terminal12 ?1=0 = (10, 14, 10, 29, 10, 0, 0, 0)

•Restq?Terminal12 ?1=1 = (5, 26, 10, 28, 0, 0, 150, 150)



262

•Restq?Terminal12 ?1=2 = (0, 26, 10, 0, 0, 0, 0, 0)

•Restq?Terminal12 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

(b)Fluxos de transporte (variáveis locais) entre as bases:

•Rf?1 Plataforma6 Terminal12 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma6 Terminal12 ?1=1 = (0, 0, 0, 0, 0, 0, 150, 0)

•Rf?1 Plataforma6 Terminal12 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma6 Terminal12 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal12 Plataforma6 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal12 Plataforma6 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal12 Plataforma6 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal12 Plataforma6 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal12 Refinaria6 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal12 Refinaria6 ?1=1 = (5, 0, 0, 1, 10, 0, 0, 0)

•Rf?1 Terminal12 Refinaria6 ?1=2 = (5, 0, 0, 10, 0, 0, 150, 0)

•Rf?1 Terminal12 Refinaria6 ?1=3 = (0, 0, 10, 0, 0, 0, 0, 0)

•Rf?1 Refinaria6 Terminal12 ?1=0 = (0, 0, 3, 25, 10, 0, 0, 0)

•Rf?1 Terminal12 Refinaria6 ?1=1 = (0, 12, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal12 Refinaria6 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal12 Refinaria6 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Terminal12 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal12 Refinaria6 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 150)

•Rf?1 Terminal12 Refinaria6 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal12 Refinaria6 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal12 Terminal10 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal12 Terminal10 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal12 Terminal10 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal12 Terminal10 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal12 Refinaria5 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 145)

•Rf?1 Terminal12 Refinaria5 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal12 Refinaria5 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 137)

•Rf?1 Terminal12 Refinaria5 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria5 Terminal12 ?1=0 = (0, 0, 7, 0, 0, 0, 0, 0)



263

•Rf?1 Refinaria5 Terminal12 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria5 Terminal12 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria5 Terminal12 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal9 Refinaria5 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal9 Refinaria5 ?1=1 = (0, 0, 20, 0, 20, 0, 0, 0)

•Rf?1 Terminal9 Refinaria5 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal9 Refinaria5 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria5 Terminal9 ?1=0 = (0, 67, 20, 38, 20, 0, 0, 0)

•Rf?1 Refinaria5 Terminal9 ?1=1 = (0, 0, 0, 75, 0, 0, 0, 0)

•Rf?1 Refinaria5 Terminal9 ?1=2 = (0, 0, 0, 31, 20, 0, 0, 0)

•Rf?1 Refinaria5 Terminal9 ?1=3 = (0, 0, 0, 45, 0, 0, 0, 0)

•Rf?1 Terminal11 Refinaria5 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal11 Refinaria5 ?1=1 = (0, 26, 20, 0, 0, 0, 0, 0)

•Rf?1 Terminal11 Refinaria5 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal11 Refinaria5 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria5 Terminal11 ?1=0 = (0, 25, 20, 0, 41, 0, 0, 0)

•Rf?1 Refinaria5 Terminal11 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria5 Terminal11 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria5 Terminal11 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma6 Terminal10 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma6 Terminal10 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma6 Terminal10 ?1=2 = (0, 0, 0, 0, 0, 0, 300, 0)

•Rf?1 Plataforma6 Terminal10 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma6 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma6 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma6 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma6 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma2 Terminal10 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma2 Terminal10 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma2 Terminal10 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma2 Terminal10 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma2 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)



264

•Rf?1 Terminal10 Plataforma2 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma2 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma2 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma3 Terminal10 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 150)

•Rf?1 Plataforma3 Terminal10 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma3 Terminal10 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma3 Terminal10 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma3 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma3 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma3 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma3 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma4 Terminal10 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma4 Terminal10 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma4 Terminal10 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma4 Terminal10 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma4 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma4 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma4 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma4 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma5 Terminal10 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma5 Terminal10 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma5 Terminal10 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma5 Terminal10 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma5 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma5 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma5 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma5 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma7 Terminal10 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma7 Terminal10 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma7 Terminal10 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma7 Terminal10 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma7 ?1=0 = (0, 0, 0, 0, 0, 0, 0, 0)



265

•Rf?1 Terminal10 Plataforma7 ?1=1 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma7 ?1=2 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma7 ?1=3 = (0, 0, 0, 0, 0, 0, 0, 0)

6.Dentro do holon região Leste?2=1:

(a)Variáveis Holônicas (variáveis de decisão):

i.Planos de Produção (Rv1 base ?1 ? Rplanbase ?1 )

•Rplan?Refinaria5 ?1=4 = (11, 91, 44, 104, 13, ?282, 0, 0)

•Rplan?Refinaria5 ?1=5 = (11, 91, 44, 104, 13, ?282, 0, 0)

•Rplan?Refinaria5 ?1=6 = (11, 91, 44, 104, 13, ?282, 0, 0)

•Rplan?Refinaria5 ?1=7 = (11, 91, 44, 104, 13, ?282, 0, 0)

•Rplan?Refinaria6 ?1=4 = (5, 48, 23, 57, 7, ?150, 0, 0)

•Rplan?Refinaria6 ?1=5 = (5, 48, 23, 57, 7, ?150, 0, 0)

•Rplan?Refinaria6 ?1=6 = (5, 48, 23, 57, 7, ?150, 0, 0)

•Rplan?Refinaria6 ?1=7 = (5, 32, 16, 45, 12, 0, ?150, 0)

ii.Estoques (Rv1 base ?1 ? Restqbase ?1 )

•Restq?Refinaria5 ?1=4 = (20, 301, 0, 427, 3, 300, 0, 0)

•Restq?Refinaria5 ?1=5 = (0, 356, 106, 427, 0, 282, 0, 0)

•Restq?Refinaria5 ?1=6 = (18, 327, 3, 0, 13, 0, 0, 0)

•Restq?Refinaria5 ?1=7 = (0, 1, 8, 0, 1, 0, 0, 0)

•Restq?Refinaria6 ?1=4 = (27, 186, 28, 8, 100, 150, 0, 0)

•Restq?Refinaria6 ?1=5 = (19, 186, 25, 6, 92, 0, 0, 0)

•Restq?Refinaria6 ?1=6 = (9, 5, 10, 13, 83, 0, 0, 0)

•Restq?Refinaria6 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal9 ?1=4 = (0, 0, 0, 22, 14, 0, 0, 0)

•Restq?Terminal9 ?1=5 = (20, 9, 0, 22, 14, 0, 0, 0)

•Restq?Terminal9 ?1=6 = (0, 0, 20, 0, 0, 0, 0, 0)

•Restq?Terminal9 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal10 ?1=4 = (0, 0, 0, 0, 62, 0, 300, 150)

•Restq?Terminal10 ?1=5 = (0, 0, 0, 10, 62, 0, 0, 0)

•Restq?Terminal10 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 300)



266

•Restq?Terminal10 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal11 ?1=4 = (18, 28, 20, 0, 53, 0, 0, 0)

•Restq?Terminal11 ?1=5 = (18, 0, 0, 0, 69, 0, 0, 0)

•Restq?Terminal11 ?1=6 = (18, 0, 0, 0, 69, 0, 0, 0)

•Restq?Terminal11 ?1=7 = (18, 0, 0, 0, 0, 0, 0, 0)

•Restq?Terminal12 ?1=4 = (10, 0, 8, 0, 10, 150, 150, 0)

•Restq?Terminal12 ?1=5 = (10, 26, 0, 0, 10, 0, 150, 150)

•Restq?Terminal12 ?1=6 = (10, 26, 10, 0, 10, 0, 150, 0)

•Restq?Terminal12 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

(b)Fluxos de transporte (variáveis locais) entre as bases:

•Rf?1 Plataforma6 Terminal12 ?1=4 = (0, 0, 0, 0, 0, 0, 150, 0)

•Rf?1 Plataforma6 Terminal12 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma6 Terminal12 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma6 Terminal12 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal12 Plataforma6 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal12 Plataforma6 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal12 Plataforma6 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal12 Plataforma6 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal12 Refinaria6 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal12 Refinaria6 ?1=5 = (0, 0, 8, 0, 0, 0, 0, 0)

•Rf?1 Terminal12 Refinaria6 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal12 Refinaria6 ?1=7 = (0, 26, 10, 0, 0, 0, 150, 0)

•Rf?1 Refinaria6 Terminal12 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal12 Refinaria6 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal12 Refinaria6 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal12 Refinaria6 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Terminal12 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal12 Refinaria6 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 150)

•Rf?1 Terminal12 Refinaria6 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal12 Refinaria6 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal12 Terminal10 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal12 Terminal10 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)



267

•Rf?1 Terminal12 Terminal10 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal12 Terminal10 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal12 Refinaria5 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal12 Refinaria5 ?1=5 = (0, 0, 0, 0, 0, 150, 0, 0)

•Rf?1 Terminal12 Refinaria5 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal12 Refinaria5 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria5 Terminal12 ?1=4 = (0, 0, 0, 0, 10, 0, 0, 0)

•Rf?1 Refinaria5 Terminal12 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria5 Terminal12 ?1=6 = (0, 0, 10, 0, 0, 0, 0, 0)

•Rf?1 Refinaria5 Terminal12 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal9 Refinaria5 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal9 Refinaria5 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal9 Refinaria5 ?1=6 = (20, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal9 Refinaria5 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria5 Terminal9 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria5 Terminal9 ?1=5 = (20, 0, 0, 46, 0, 0, 0, 0)

•Rf?1 Refinaria5 Terminal9 ?1=6 = (0, 53, 20, 31, 0, 0, 0, 0)

•Rf?1 Refinaria5 Terminal9 ?1=7 = (0, 62, 0, 46, 0, 0, 0, 0)

•Rf?1 Terminal11 Refinaria5 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal11 Refinaria5 ?1=5 = (0, 28, 20, 0, 0, 0, 0, 0)

•Rf?1 Terminal11 Refinaria5 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal11 Refinaria5 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria5 Terminal11 ?1=4 = (0, 0, 14, 0, 0, 0, 0, 0)

•Rf?1 Refinaria5 Terminal11 ?1=5 = (0, 0, 0, 0, 16, 0, 0, 0)

•Rf?1 Refinaria5 Terminal11 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Refinaria5 Terminal11 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma6 Terminal10 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma6 Terminal10 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma6 Terminal10 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma6 Terminal10 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma6 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma6 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)



268

•Rf?1 Terminal10 Plataforma6 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma6 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma2 Terminal10 ?1=4 = (0, 0, 0, 0, 0, 0, 112, 0)

•Rf?1 Plataforma2 Terminal10 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma2 Terminal10 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma2 Terminal10 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma2 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma2 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma2 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma2 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma3 Terminal10 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma3 Terminal10 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma3 Terminal10 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 300)

•Rf?1 Plataforma3 Terminal10 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma3 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma3 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma3 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma3 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma4 Terminal10 ?1=4 = (0, 0, 0, 0, 0, 0, 188, 0)

•Rf?1 Plataforma4 Terminal10 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma4 Terminal10 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma4 Terminal10 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma4 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma4 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma4 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma4 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma5 Terminal10 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 150)

•Rf?1 Plataforma5 Terminal10 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma5 Terminal10 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma5 Terminal10 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma5 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma5 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)



269

•Rf?1 Terminal10 Plataforma5 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma5 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma7 Terminal10 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma7 Terminal10 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma7 Terminal10 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Plataforma7 Terminal10 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma7 ?1=4 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma7 ?1=5 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma7 ?1=6 = (0, 0, 0, 0, 0, 0, 0, 0)

•Rf?1 Terminal10 Plataforma7 ?1=7 = (0, 0, 0, 0, 0, 0, 0, 0)


</field>
	</doc>
</add>