<?xml version="1.0" encoding="utf-8"?>
<add>
	<doc>
		<field name="docid">BR-TU.25038</field>
		<field name="filename">9612_Thalita%20Mongarde%20Daer.pdf</field>
		<field name="filetype">PDF</field>
		<field name="text">
  

UNIVERSIDADE FEDERAL FLUMINENSE 

ESCOLA DE ENGENHARIA 

  DEPARTAMENTO DE ENGENHARIA QUÍMICA E DE PETRÓLEO  

CURSO DE ENGENHARIA DE PETRÓLEO 

 

 

 

 

 

THALITA MONGARDE DAER 

 

 

 

 

 

 

 

OTIMIZAÇÃO EVOLUTIVA DE UMA REDE NEURAL APLICADA NO SISTEMA 

DE ANCORAGEM DE PLATAFORMAS FLUTUANTES 

 

 

 

 

 

MONOGRAFIA DE GRADUAÇÃO EM ENGENHARIA DE PETRÓLEO 

 

 

 

 

 

 

Niterói 

2017



 

 

 

THALITA MONGARDE DAER 

 

 

 

 

 

OTIMIZAÇÃO EVOLUTIVA DE UMA REDE NEURAL APLICADA NO SISTEMA 

DE ANCORAGEM DE PLATAFORMAS FLUTUANTES 

 

 

 

 

 

 

Monografia apresentada ao Curso de 

Engenharia de Petróleo da Universidade 

Federal Fluminense, como requisito parcial 

para a obtenção do título de Engenheira de 

Petróleo. 

 

 

 

 

 

Orientadora: Juliana Souza Baioco 

Coorientador: Bruno da Fonseca Monteiro 

 

 

 

 

Niterói 

2017 



 

 

 

 

THALITA MONGARDE DAER 

 

 

 

OTIMIZAÇÃO EVOLUTIVA DE UMA REDE NEURAL APLICADA NO SISTEMA 

DE ANCORAGEM DE PLATAFORMAS FLUTUANTES 

 

 

 

 

Trabalho de Conclusão de Curso apresentado 

ao Curso de Graduação em Engenharia de 

Petróleo da Escola de Engenharia da 

Universidade Federal Fluminense, como 

requisito parcial para obtenção do Grau de 

Bacharel em Engenharia de Petróleo 

 

 

Aprovado em 23 de Novembro de 2017. 

 

 

BANCA EXAMINADORA 

 
 

 

NITERÓI, RJ  -  BRASIL 

NOVEMBRO DE 2017 



 

 

 

 

 

 

 

 

 



 

 

 

AGRADECIMENTOS 

 

Agradeço, primeiramente, a Deus, que sempre está ao meu lado me guiando e me dando 

forças para enfrentar quaisquer obstáculos que vieram e possam a vir na minha vida. O meu 

eterno muito obrigada! 

Ao meu pai, Mirales, por ser meu melhor amigo e meu maior exemplo de vida. Por 

sempre confiar em mim, e nos momentos mais difíceis ser capaz de me erguer. Por ter me 

tornado uma pessoa humana. 

À minha mãe, Rosa Maria, pelo amor e preocupação incondicional, por não medir 

esforços para realizar todos os meus sonhos, e sempre lutar pelo meu sucesso. 

Ao meu irmão, Thales, por sempre compartilhar comigo momentos felizes e conversas 

sábias. 

Aos meus avós, em especial, vovó Lurdinha, exemplo de simplicidade, religiosidade e 

humildade. 

Aos meus familiares em geral, por serem meu alicerce, em especial, minha tia Simone, 

pelas orações e pelo carinho imensurável. 

Aos meus orientadores, Juliana Baioco e Bruno Monteiro, pelos conhecimentos 

transmitidos, por depositarem em mim total credibilidade para o desenvolvimento desse 

projeto, e que sempre estiveram disponíveis para eventuais dúvidas. 

Ao professor Geraldo, que além de um grande mestre, se tornou um grande amigo. 

Muito obrigada por ter me conduzido nos momentos em que eu estava sem foco e desmotivada, 

acreditar na minha capacidade e despertar em mim o interesse de sempre ir além. 

Ao meu colega de pesquisa, Edvaldo, pela atenção, disponibilidade e paciência em cada 

momento em que eu solicitava ajuda, muitas das vezes inconvenientes. 

Às minhas roommates, Rafa e Lari, por terem dividido comigo todas as emoções durante 

a realização desse projeto, desde as alegrias, até as tristezas. Vocês são especiais, e tem grande 

importância na minha vida, por ajudarem a fazer da nossa república, um lar. 

À UFF, que me proporcionou nesses 6 anos um conhecimento acadêmico indescritível. 

Por fim, agradeço a todos os meus amigos e professores que contribuíram direta ou 

indiretamente para a realização desse projeto. Todos os que passaram na minha vida tiverem 

importância para o meu crescimento tanto profissional quanto pessoal. 

A todos, meu muito obrigada! 



 

 

 

   

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

“Comece fazendo o que é necessário, depois 

o que é possível, e de repente você estará 

fazendo o impossível. ” 

São Francisco de Assis



 

 

  

RESUMO 

As plataformas flutuantes de produção de petróleo offshore estão sujeitas à ação de 

cargas ambientais, como as ondas, o vento e as correntes, em diferentes direções e intensidades. 

O sistema de ancoragem é responsável pela integridade da plataforma em sua vida útil, além de 

limitar os deslocamentos provocados pelas cargas ambientais a níveis convenientes. Uma 

maneira de analisar a eficiência desse sistema é feita por uma ferramenta numérica 

computacional baseada em elementos finitos, a qual define as tensões resultantes a partir de 

termos de séries temporais. Porém, essa ferramenta requer a execução de análises estáticas e 

dinâmicas que possuem alto custo computacional. Além disso, a matriz de casos de 

carregamento pode incluir centenas de combinações. Com o intuito de reduzir os custos e o 

tempo de análise, este trabalho sugere a aplicação de uma rede neural artificial (RNA) para 

estimar os offsets (passeios) e a tração máxima nas linhas de ancoragem, admitindo como 

entrada a combinação dos principais parâmetros que configuram um sistema de ancoragem 

(raios, ângulos, tração aplicada, e o diâmetro da linha). Após treinar a rede neural, iremos 

otimizá-la através do algoritmo de Evolução Diferencial (DE), modelado no software 

MATLAB, a fim de obter resultados com melhores propriedades de convergência e, assim, 

exigindo um menor número de avaliações das soluções candidatas, comparados aos resultados 

do treinamento da RNA. 

 

 

Palavras-chave: RNA, Sistema de Ancoragem, Evolução Diferencial, Sistemas Flutuantes. 

 

 

  



 

 

  

ABSTRACT 

Floating production systems (FPS) for oil exploitation are subject to the action of 

environmental loads, such as waves, wind, and currents in different directions and intensities. 

The mooring system is responsible for the integrity of the platform throughout its useful life, as 

well as limiting the displacements caused by environmental loads at convenient levels. One 

way of evaluating the efficiency of a system is by means of a numerical tool based on finite 

elements, which defines the resultant tensions from terms of time series. However, this tool 

requires the execution of static and dynamic analyses that have a high computational cost. 

Moreover, an array of load cases may include hundreds of combinations. In order to reduce the 

cost and time of analysis, this work suggests an artificial neural network (ANN) to estimate 

displacements (offsets) and tension in the mooring lines, admitting as input a combination of 

the main parameters that configure a mooring system (radius, angles, applied tension, and the 

mooring line diameter). After training the neural network, we are going to optimize it through 

the Differential Evolution algorithm (DE), modeled using the MATLAB software, with the 

purpose of obtaining results with better convergent properties and therefore demanding a lower 

number of evaluations of the candidate solutions, compared to the results of ANN training.  

 

 

Keywords: ANN, Mooring System, Differential Evolution, Floating Production Systems. 



 

 

  

SUMÁRIO 

 

1 INTRODUÇÃO ..................................................................................................................... 14 

1.1. Contexto e Motivação ................................................................................................ 14 

1.2. Objetivo ..................................................................................................................... 15 

1.3. Metodologia ............................................................................................................... 16 

1.4. Organização do Texto ................................................................................................ 17 

2 SISTEMA DE ANCORAGEM DE PLATAFORMAS FLUTUANTES ............................. 18 

2.1. Plataformas Flutuantes ............................................................................................... 19 

2.1.1. Semissubmersível .............................................................................................. 19 

2.1.2. Unidades FPSO baseadas em navios ............................................................... 23 

2.2. Tipos de Configuração das Linhas de Ancoragem .................................................... 26 

2.2.1. Ancoragem Convencional ................................................................................ 26 

2.2.2. Ancoragem “Taut-Leg” .................................................................................... 27 

2.2.3. Ancoragem Vertical .......................................................................................... 28 

2.3. Tipos de Sistemas de Ancoragem .............................................................................. 29 

2.3.1. Ancoragem com ponto único ........................................................................... 29 

2.3.2. Ancoragem Distribuída .................................................................................... 33 

2.3.3. Ancoragem com Posicionamento Dinâmico ................................................... 34 

3 REDES NEURAIS ................................................................................................................ 35 

3.1. Neurônios Artificiais e Função de Ativação .............................................................. 35 

3.2. Camadas ..................................................................................................................... 37 

3.3.     Treinamento ............................................................................................................... 39 

4 EVOLUÇÃO DIFERENCIAL .............................................................................................. 41 

4.1. População Inicial ........................................................................................................ 41 

4.2. Mutação ..................................................................................................................... 42 

4.3. Cruzamento (Crossover) ............................................................................................ 43 

4.4. Seleção ....................................................................................................................... 44 

5 ESTUDO DE CASO ............................................................................................................. 47 

5.1. Janela Inicial para a RNA .......................................................................................... 47 

5.2. Treinamento e Validação da Rede ............................................................................. 48 



 

 

  

5.3. Variáveis de Decisão e Função Objetivo ................................................................... 50 

5.4. Critério de Parada ...................................................................................................... 53 

5.5. Parâmetros do Algoritmo Evolução Diferencial ........................................................ 53 

5.6. Metodologia de Otimização do Modelo de Substituição do Sistema de Ancoragem 55 

6 RESULTADOS ..................................................................................................................... 59 

6.1. Análise da Evolução do MSE pelo Algoritmo DE .................................................... 59 

6.2. Análise dos Resultados da RNA e do Algoritmo DE ................................................ 65 

7 CONCLUSÃO ....................................................................................................................... 76 

8 REFERÊNCIAS BIBLIOGRÁFICAS .................................................................................. 78 

 

 

 

 

 

 

 

 

 

 

 

 

 

  



 

 

  

LISTA DE FIGURAS 

Figura 1 - Plataforma Semissubmersível .................................................................................. 20 

Figura 2 - Semissubmersível Convencional ............................................................................. 21 

Figura 3 - Semissubmersível "Taut-Leg" ................................................................................. 21 

Figura 4 - MODU Convencional .............................................................................................. 22 

Figura 5 - MODU "Taut-Leg" .................................................................................................. 22 

Figura 6 - Unidade FPSO ......................................................................................................... 23 

Figura 7 - Navio com ancoragem convencional ....................................................................... 24 

Figura 8 - Navio com ancoragem "Taut-Leg" .......................................................................... 25 

Figura 9 - Navio com Sistema DICAS de ancoragem .............................................................. 25 

Figura 10 - Sistema de ancoragem “Taut-Leg” x Convencional .............................................. 28 

Figura 11 - Plataforma TLP com ancoragem vertical .............................................................. 29 

Figura 12 - Turret interno ......................................................................................................... 30 

Figura 13 - Turret externo ........................................................................................................ 31 

Figura 14 - CALM com ligação por meio de cabos ................................................................. 32 

Figura 15 - CALM com ligação por meio de estrutura fixa ..................................................... 32 

Figura 16 - SALM com riser pré-tracionado ............................................................................ 32 

Figura 17 - SALM conectados à boia ....................................................................................... 32 

Figura 18 - Ancoragem distribuída em plataformas semissubmersíveis .................................. 33 

Figura 19 - Ancoragem distribuída em unidades FPSO ........................................................... 33 

Figura 20 -  Ancoragem com posicionamento dinâmico .......................................................... 34 

Figura 21 - Neurônio de McCulloch-Pittsk .............................................................................. 36 

Figura 22 - Representação gráfica de diferentes funções de ativação: (a) função sigmoidal; (b) 

função linear; (c) função escada ............................................................................................... 37 

Figura 23 - Tipos de Alimentação de RNA's: (a) propagação para frente; (b) redes 

realimentadas ............................................................................................................................ 38 

Figura 24 - RNA com camada única (a) e RNA multicamadas (b) .......................................... 38 

Figura 25 - Arquitetura de uma RNA multicamadas ................................................................ 39 

Figura 26 - Evolução do MSE pelo algoritmo DE para o offset1 ............................................. 60 

Figura 27 - Evolução do MSE pelo algoritmo DE para o offset2 ............................................. 60 

Figura 28 - Evolução do MSE pelo algoritmo DE para o offset3 ............................................. 61 

Figura 29 - Evolução do MSE pelo algoritmo DE para o offset4 ............................................. 61 

Figura 30 - Evolução do MSE pelo algoritmo DE para o offset5 ............................................. 62 

Figura 31 - Evolução do MSE pelo algoritmo DE para o offset6 ............................................. 62 

Figura 32 - Evolução do MSE pelo algoritmo DE para o offset7 ............................................. 63 

Figura 33 - Evolução do MSE pelo algoritmo DE para o offset8 ............................................. 63 

Figura 34 - Evolução do MSE pelo algoritmo DE para a tração máxima................................ 64 

Figura 35 - Comparação entre o resultado da RNA e do FE para o offset1 ............................. 66 

Figura 36 - Comparação entre o resultado do DE e do FE para o offset1 ................................ 66 

Figura 37 - Comparação entre o resultado da RNA e do FE para o offset2 ............................. 67 

Figura 38 - Comparação entre o resultado do DE e do FE para o offset2 ................................ 67 



 

 

  

Figura 39 - Comparação entre o resultado da RNA e do FE para o offset3 ............................. 68 

Figura 40 - Comparação entre o resultado do DE e do FE para o offset3 ................................ 68 

Figura 41 - Comparação entre o resultado da RNA e do FE para o offset4 ............................. 69 

Figura 42 - Comparação entre o resultado do DE e do FE para o offset4 ................................ 69 

Figura 43 - Comparação entre o resultado da RNA e do FE para o offset5 ............................. 70 

Figura 44 - Comparação entre o resultado do DE e do FE para o offset5 ................................ 70 

Figura 45 - Comparação entre o resultado da RNA e do FE para o offset6 ............................. 71 

Figura 46 - Comparação entre o resultado do DE e do FE para o offset6 ................................ 71 

Figura 47 - Comparação entre o resultado da RNA e do FE para o offset7 ............................. 72 

Figura 48 - Comparação entre o resultado do DE e do FE para o offset7 ................................ 72 

Figura 49 - Comparação entre o resultado da RNA e do FE para o offset8 ............................. 73 

Figura 50 - Comparação entre o resultado do DE e do FE para o offset8 ................................ 73 

Figura 51 - Comparação entre o resultado da RNA e do FE para a tração máxima ................ 74 

Figura 52 - Comparação entre o resultado do DE e do FE para a tração máxima ................... 74 

 

  



 

 

  

LISTA DE TABELAS 

Tabela 1 - Esquema simplificado do algoritmo de Evolução Diferencial ................................ 45 

Tabela 2 – Inputs: Parâmetros de configuração do sistema de ancoragem .............................. 47 

Tabela 3 – Outputs: Offsets e tração máxima aplicada à linha de ancoragem .......................... 48 

Tabela 4 - Procedimentos para o treinamento da rede.............................................................. 49 

Tabela 5 - Constantes das Funções Objetivo ............................................................................ 50 

Tabela 6 - Variáveis de Decisão ............................................................................................... 51 

Tabela 7 - Parâmetros do Algoritmo Evolução Diferencial ..................................................... 54 

Tabela 8 - Resultados para o offset1 com o uso de diferentes valores para os parâmetros ...... 56 

Tabela 9 - Resultados para o MSE obtidos pelo treinamento da RNA e pelo algoritmo DE ... 57 



  

LISTAS DE ABREVIATURAS E SIGLAS 

ANN - Artificial Neural Network 

CALM – Catenary Anchor Leg Mooring 

C1 – coeficiente para o controle da componente social 

C2 – coeficiente para o controle da componente cognitiva 

Cr – taxa de cruzamento 

DE – Differential Evolution, Evolução Diferencial 

DP – Dynamic Positioning 

F – fator de mutação ou permutação 

FE – Finite Element, Elementos Finitos 

FPS – Floating Production Systems 

FPSO – Floating Production Storage and Offloading 

Ger – número máximo de gerações 

MAE – Mean Absolute Error 

MBL – Minimum Breaking Load 

MSE – Mean Squared Error 

MODU – Mobile Offshore Drilling Unit 

NI – número total de indivíduos em uma população 

PSO – Particle Swarm Optimization 

RNA – Rede Neural Artificial 

SALM – Single Anchor Leg Mooring 

SM – Spread Mooring 

SPM – Single Point Mooring 

TLP – Tension Leg Platform 

VLA – Vertical Load Anchor 

w – coeficiente de inércia 

 



14 

 

  

1 INTRODUÇÃO 

 

1.1. Contexto e Motivação 

 

Atualmente, o avanço das pesquisas voltadas à sistemas offshore tem permitido uma 

crescente produção de petróleo em águas cada vez mais profundas. Devido à extrema 

complexibilidade e elevados custos de exploração nesses campos, altos investimentos são 

previstos para o setor de pesquisa e estudo, em busca do desenvolvimento de projetos que 

tornem a produção desses campos mais segura e economicamente viável. 

Nesses campos offshore, as principais bases de operações são os sistemas de produção 

flutuante (FPS – Floating Production Systems), que podem ser unidades flutuantes baseadas 

em navios ancorados ou plataformas semissubmersíveis, conectadas a risers que transportam 

óleo, gás e outros fluidos do fundo do mar até a plataforma. Tais sistemas devem atender a 

alguns limites operacionais seguros com base em parâmetros de sua resposta estrutural (como 

deslocamentos, tensões, etc.); esses parâmetros são definidos em termos de séries temporais, 

geralmente obtidos a partir de ferramentas complexas de elementos finitos (FE). 

Em um método tradicional para a simulação numérica de FPS, emprega-se uma 

formulação desacoplada, onde o comportamento hidrodinâmico do casco não é influenciado 

pelos movimentos dinâmicos não-lineares da linha de amarração e risers. Neste caso, existem 

duas etapas de análise: a primeira análise é uma avaliação do movimento do casco, onde as 

linhas de ancoragem e os risers são representados como coeficientes escalares, submetidos a 

cargas ambientais (ondas, correntes e ventos); na segunda análise, para cada riser, os 

movimentos do casco são prescritos no topo dos modelos de elementos finitos (FE) e o 

comportamento estrutural dos risers é analisado por meio de uma dinâmica não-linear de 

domínio do tempo de simulação (DELGADO et al., 2015). 

No entanto, devido ao desenvolvimento da indústria offshore e suas tecnologias, os 

cenários foram alterados e o desafio é diferente. Os campos de óleo de águas ultra profundas 

do pré-sal no Sudeste do Brasil estão sendo explorados, e para esses desafios que vão surgindo 

à medida que a profundidade aumenta, uma formulação desacoplada não é apropriada. As 

aplicações em águas profundas e ultraprofundas com um grande número de risers devem ter 

uma abordagem de projeto diferente em termos de ferramentas de simulação, neste caso, 

ferramentas baseadas em formulações acopladas. 



15 

 

  

Nesta formulação, o sistema de ancoragem e os risers são avaliados como um sistema 

integrado real, que engloba a interação entre o comportamento estrutural hidrodinâmico de 

todas as linhas de ancoragem e o comportamento hidrodinâmico do casco. 

As análises juntas são mais precisas e revelam com detalhes o comportamento global 

do sistema. Nesta metodologia, todas as não-linearidades envolvidas na resposta dinâmica do 

sistema são consideradas em um domínio de tempo integral (análise), e as linhas são 

rigorosamente representadas por modelos de elementos finitos. No entanto, a simulação 

acoplada tem um alto custo computacional ao ser executada pela ferramenta FE, incentivando 

o desenvolvimento de modelos de substituição, como o uso de otimizadores evolucionários 

aliados às Redes Neurais Artificiais – RNA’s, que irão ser estudados nesse trabalho, os quais 

proporcionam um custo computacional menor ao mesmo tempo em que geram resultados 

adequados. 

Nessa perspectiva, esse trabalho concerne no desenvolvimento do método de Evolução 

Diferencial para a otimização dos resultados obtidos através do treinamento da RNA, a fim de 

minimizar o erro de treinamento da rede e estimar os deslocamentos da plataforma e as trações 

aplicadas nas linhas de ancoragem, usando parâmetros de configuração dos sistemas de 

ancoragem, como raio, ângulo, pre-tração e diâmetro da linha de ancoragem. 

  

1.2. Objetivo 

 

O foco desse trabalho está direcionado no desenvolvimento de uma metodologia 

construtiva e eficaz de otimização simultânea dos pesos das funções objetivo geradas após o 

treinamento da RNA, e dos deslocamentos e trações aplicados às linhas de ancoragem, por meio 

do uso da Evolução Diferencial. O objetivo principal é aplicar o algoritmo de Evolução 

Diferencial para obter pesos “ótimos” no treinamento da RNA, a fim de encontrar resultados 

tão concretos quanto os conseguidos pela exaustiva ferramenta computacional FE, porém com 

um menor custo computacional. 

A aplicação do algoritmo evolutivo conjugado à utilização da RNA, tem a finalidade de 

determinar os valores adequados para as variáveis de decisão que possibilitem a minimização 

das funções objetivo, o que nesse trabalho traduz à busca por menores erros desnormalizados 

para os deslocamentos (offsets) e para a tração máxima. 



16 

 

  

Em busca por um método que possa substituir o atual processo exaustivo de simulação 

dos deslocamentos e tração máxima aplicados às linhas de ancoragem feitas pelo FE, esse 

estudo propôs o uso do método de Evolução Diferencial, como forma de averiguar sua eficácia 

e viabilidade em aplicações de problemas nos sistemas de ancoragem.  

 

1.3. Metodologia 

 

O problema de otimização do sistema de ancoragem proposto nesse presente trabalho, 

utiliza de uma metodologia baseada na busca por um algoritmo de evolução que encontre 

resultados melhores aos obtidos pelo treinamento da RNA ao simular os deslocamentos e a 

tração máxima nas linhas de ancoragem. Inicialmente, foi utilizado o método do enxame de 

partículas (PSO, acrônimo do nome original em inglês Particle Swarm Optimization), porém 

os resultados encontrados utilizando uma combinação de parâmetros sugerida por Trelea 

(2002), C1 e C2 estáticos e o coeficiente de inércia (w), onde C1=C2=1,7 e w=0,6, não 

apresentaram um resultado satisfatório, incentivando a busca por outros algoritmos de 

otimização. 

Com base em estudos anteriores, devido aos bons resultados apresentados em diversos 

problemas de difícil otimização, além de possuir ótimas propriedades de convergência e fácil 

aplicação, foi utilizado o método de Evolução Diferencial, o qual foi aplicado em sua forma 

original. Os testes foram conduzidos com o propósito de otimizar os resultados obtidos pelo 

treinamento da RNA. 

O processo de otimização sucedeu-se da seguinte maneira: uma RNA foi treinada no 

software MATLAB, utilizando uma janela inicial de dados obtida pela ferramenta numérica 

FE; após o treinamento foram gerados pesos a serem otimizados pelo algoritmo DE, a fim de 

minimizar as funções objetivo encontradas pela RNA. Definidas as funções objetivo, o próximo 

passo foi encontrar valores adequados aplicados aos parâmetros do algoritmo DE que 

direcionassem a uma boa minimização das funções. 

O algoritmo de Evolução Diferencial se mostrou eficaz quanto aos resultados 

otimizados, obtendo uma sensível melhora em relação aos resultados alcançados pelo 

treinamento da RNA, e mostrando similaridade quanto aos resultados obtidos pela ferramenta 

FE, conduzindo, assim, a valores otimizados admissíveis para o deslocamento e a tração 

máxima aplicados no sistema de ancoragem de plataformas flutuantes. 



17 

 

  

 

1.4. Organização do Texto 

 

Esse trabalho está estruturado em oito capítulos, a incluir esta introdução que apresentou 

a motivação e o objetivo desse. 

O capítulo 2 apresenta uma breve descrição dos principais tipos de plataformas 

flutuantes de produção de petróleo offshore e seus respectivos sistemas de ancoragem.  

O capítulo 3 apresenta o conceito de uma RNA, bem como suas unidades básicas, os 

neurônios artificiais, e sua arquitetura para a resolução de problemas complexos. 

Já o capítulo 4 aborda detalhadamente o método de Evolução Diferencial, como ocorre 

o processo de otimização, os parâmetros a serem ajustados e a rotina do algoritmo. 

No capítulo 5 temos o estudo de caso aplicado ao sistema de ancoragem. Este capítulo 

apresenta a metodologia desenvolvida, explicando a integração da Evolução Diferencial como 

um método paralelo de otimização dos pesos e das funções objetivo encontradas pela RNA. Por 

fim, são mostrados os detalhes do funcionamento da rotina, a escolha dos valores para os 

parâmetros de otimização, destacando as estratégicas aplicadas. 

O capítulo 6 é a continuação do capítulo 5, nele são apresentados os resultados, além de 

serem feitas análises para provar a eficiência do método de Evolução Diferencial. 

Para finalizar, o capítulo 7 apresenta as considerações finais, dissertando de forma breve 

as características, inovações, vantagens e desvantagens desse estudo, finalizando com sugestões 

para trabalhos futuros, objetivando dar continuidade e complemento ao trabalho. 

  



18 

 

  

2 SISTEMA DE ANCORAGEM DE PLATAFORMAS FLUTUANTES 

 

A decisão de ampliar as prospecções de petróleo para o litoral marítimo ocorreu devido 

à crescente necessidade de se produzir cada vez mais para atender a uma demanda maior que 

vinha surgindo, o que levou à busca e à exploração de novos campos petrolíferos em lâminas 

d’água cada vez mais profundas. 

Atualmente, a máxima perfuração de poços exploratórios situa-se na faixa de 3.000 

metros, e a máxima explotação ocorreu a uma profundidade de 2.990 metros (produção 

econômica), alcançada em 2015, no poço de Sergipe-Alagoas, em Aracaju            

(PETROBRAS, 2015). Deste modo, é imprescindível buscar soluções que viabilizem a 

explotação destes campos petrolíferos, como a utilização dos sistemas flutuantes de produção, 

visto que os sistemas fixos do tipo jaqueta apresentam um limite técnico-econômico em torno 

de 410 m (ELLWANGER, 2004). 

Os sistemas flutuantes são estruturas flexíveis, pois caracterizam-se por manifestar 

grandes deslocamentos sob ação de cargas ambientais (ação das ondas, correntes e ventos); 

sendo assim, é crucial a aplicação de um sistema de ancoragem adequado, que limite tais 

deslocamentos a níveis convenientes (LACERDA, 2005). 

O sistema de ancoragem abrange um conjunto de linhas de ancoragem confeccionadas 

por diferentes tipos de materiais (cabos de poliéster, cabos de nylon, cabos de aço, amarras e 

etc), e estacas ou âncoras, que transmitem os esforços que atuam sobre a plataforma para o solo. 

De acordo com a disposição geométrica das linhas de ancoragem, elas adotam diferentes 

tipos de configurações: ancoragem convencional (linhas de ancoragem assumindo 

configurações em catenária), ancoragem “Taut-Leg”, e a ancoragem vertical empregando 

tendões. 

Existe ainda uma outra classificação do sistema de ancoragem, quanto à disposição das 

linhas em relação à unidade, e são classificadas em: ancoragem com ponto único, ancoragem 

distribuída e ancoragem com posicionamento dinâmico. 

 

 

 

 

 



19 

 

  

2.1. Plataformas Flutuantes  

 

As plataformas de petróleo são rotuladas como onshore, quando estão localizadas na 

terra, e offshore quando se encontram no mar. Nas plataformas offshore é necessária uma grande 

infraestrutura, tanto para abrigar os operários, quanto para acomodar os equipamentos para 

extração de petróleo e gás natural. 

De acordo com a finalidade e a profundidade de perfuração, existem 7 tipos de 

plataformas offshore: 

? Plataforma fixa; 

? Plataforma autoelevável; 

? Plataforma semissubmersível; 

? FPSO (Floating Production Storage and Offloading); 

? FPSO Monocoluna; 

? Plataforma TLP; 

? Spar Buoy. 

Contudo, apenas iremos abordar as duas mais usadas no Brasil: as plataformas 

semissubmersíveis e as unidades FPSO baseadas em navios. 

 

2.1.1. Semissubmersível 

 

São compostas de uma estrutura de um ou mais converses, apoiada em flutuadores, 

denominados pontoons, compartimentados em tanques com finalidade de proporcionar lastro e 

flutuação à plataforma, como ilustrada na Figura 1 (MONTEIRO, 2014). As plataformas 

semissubmersíveis podem ser de produção ou de perfuração. 

As plataformas de produção são fixas numa locação, por volta de vinte anos, e não 

armazenam óleo. Já as plataformas de perfuração ficam por um período determinado numa 

locação, comumente chamadas de MODU (Mobile Offshore Drilling Unit). As plataformas 

semissubmersíveis podem ter sistema de ancoragem do tipo convencional ou “Taut-Leg”. 



20 

 

  

Figura 1 - Plataforma Semissubmersível 

 

Fonte: Repositório Digital da PetroGasNews1 

 

a) Semissubmersível Convencional 

 

As plataformas semissubmersíveis do tipo convencional (Figura 2) são unidades 

flutuantes de produção que possuem sistema de ancoragem operando como catenária, 

constituído por trechos em cabos de aço, amarras ou a combinação entre eles.  

Geralmente empregado em plataformas de perfuração e de produção que operam em 

profundidades por volta de 500 metros, consiste de linhas de ancoragem presas ao solo marinho 

por âncoras convencionais que conferem resistência apenas na direção horizontal. 

                                                           
1 Disponível em:&amp;lt;https://petrogasnews.wordpress.com/2011/03/06/tipos-de-plataformas-de-petroleo/&gt;. Acesso 

em 12 de junho de 2017 



21 

 

  

Figura 2 - Semissubmersível Convencional 

 

Fonte: Lacerda (2005) 

 

b) Semissubmersível “Taut-Leg” 

 

As unidades flutuantes de produção cujo sistema de ancoragem é do tipo “Taut-Leg” 

são formadas por linhas esticadas, capazes de resistir a carregamentos tanto com componentes 

horizontais quanto verticais, exemplificada na Figura 3. Estas linhas são constituídas em seus 

extremos por cabos de aço ou amarras, como na do tipo convencional, mas diferem por possuir 

em seu trecho intermediário cabos de poliéster. 

As linhas de ancoragem são presas no solo marinho através estacas de sucção, estacas 

torpedo ou as VLAs (Vertical Load Anchor). 

Em 1997, o Brasil teve sua primeira aplicação deste tipo de plataforma, reduzindo 

radicalmente o raio de ancoragem em lâminas d’água na faixa de 700 metros              

(LACERDA, 2005).  

Figura 3 - Semissubmersível "Taut-Leg" 

                                  
 

                                                       Fonte: Lacerda (2005) 



22 

 

  

 

c) MODU Convencional 

São plataformas flutuantes de perfuração que possuem o sistema de ancoragem 

convencional, como ilustra a Figura 4. 

Figura 4 - MODU Convencional 

 
 

Fonte: Lacerda (2005) 

 

 

d) MODU “Taut-Leg” 

São plataformas flutuantes de perfuração que possuem o sistema de ancoragem do tipo 

“Taut-Leg”, o mesmo empregado nas semissubmersíveis “Taut-Leg”. A Figura 5 mostra a 

estrutura da plataforma. 

                                                                 Figura 5 - MODU "Taut-Leg" 

                                   

                                                                      Fonte: Lacerda (2005) 



23 

 

  

2.1.2. Unidades FPSO baseadas em navios 

 

A grande procura por reservas de petróleo em lâminas d’água cada vez mais profundas, 

e a necessidade de escoar tal produção, levando em conta as grandes distâncias da costa, 

impulsionaram o desenvolvimento de plataformas baseadas em navios adaptados. 

Este tipo de unidade estacionária com a finalidade de explorar, armazenar e escoar 

petróleo, conhecida como FPSO pode ser vista na Figura 6, consiste de um navio ancorado, 

capaz de suportar em seu convés uma estrutura de processamento de óleo, além de armazenar 

o óleo produzido e permitir o escoamento da produção para outro navio, denominado aliviador, 

o qual é conectado à FPSO e transporta o óleo até os terminais petrolíferos. 

 

Figura 6 - Unidade FPSO 

 

Fonte: Repositório Digital do Diário do Pré-Sal2 

 

 

 

 

                                                           
2 Disponível em: &amp;lt;https://diariodopresal.wordpress.com/tag/plataforma-fpso/&gt;. Acesso em 01 de junho de 2017 



24 

 

  

a) Navio com Ancoragem Convencional 

 

As FPSO com ancoragem convencional possuem um Ponto Simples de Ancoragem 

“SPM” (Single Point Mooring) do tipo Turret. Esse sistema permite que a embarcação gire 

livremente ao redor das linhas de ancoragem e risers, e se posicione na direção das cargas 

ambientais, reduzindo, assim, a ação destas na estrutura. A Figura 7 ilustra essa estrutura. 

 

Figura 7 - Navio com ancoragem convencional 

 
 

Fonte: Repositório Digital da Engenharia Naval e Oceânica da UFRJ
3 

 

b) Navio com Ancoragem “Taut-Leg” 

 

Semelhante ao sistema convencional, estes navios possuem um Ponto Simples de 

Ancoragem “SPM” do tipo Turret, que lhe proporciona mobilidade e permite que se alinhem 

com o carregamento, porém diferem-se dos navios com ancoragem convencional quanto à 

configuração das linhas de ancoragem (possuem as linhas de ancoragem esticadas –            

“Taut-Leg”). A Figura 8 destaca essa diferença. 

                                                           
3 Disponível em: 

&lt;http://www.deno.oceanica.ufrj.br/deno/prod_academic/relatorios/2011/NathalieThiago/relat1/Conteudo.htm&gt;. 

Acesso em 29 de maio de 2017. 



25 

 

  

                                                  Figura 8 - Navio com ancoragem "Taut-Leg" 

                   
                                                                          

                                                                       Fonte: Lacerda (2005) 

 

c) Navio com Sistema DICAS de Ancoragem 

 

O DICAS é um sistema de ancoragem desenvolvido pela PETROBRAS, formado 

sobretudo por um sistema de amarração com diferentes resistências, disperso na proa e na popa 

do navio, isto é, um sistema de ancoragem com complacência diferenciada (SCIENTIFIC 

AMERICAN BRASIL, 2004). Esse esquema pode ser observado na Figura 9. 

 

Figura 9 - Navio com Sistema DICAS de ancoragem 

 
 

Fonte: Repositório Digital da PUC-RIO4 

                                                           
4 Disponível em: &amp;lt;https://www.maxwell.vrac.puc-rio.br/8242/8242_3.PDF&gt;. Acesso em 29 de maio de 2017. 



26 

 

  

 A principal diferença entre o sistema DICAS e um SPM é que este último se arranja de 

acordo com a direção resultante das cargas ambientais, ao passo que o DICAS desempenha isso 

parcialmente, tendo, portando, casos em que fica com o mar incidindo de través, ou seja, a 90° 

com o eixo do navio (AGUIAR, 2005). 

 O sistema DICAS por dispensar o turret é um sistema mais simples no aspecto de 

construção, e mais econômico. Outro benefício desse sistema é que ele facilita uma maior 

liberdade para conexão dos risers na plataforma, uma vez que com a utilização do turret, a 

região fica limitada para definição do arranjo dos risers e ancoragem. 

 

2.2. Tipos de Configuração das Linhas de Ancoragem 

 

2.2.1. Ancoragem Convencional 

 

No sistema de ancoragem do tipo convencional, a unidade flutuante conecta-se ao fundo 

do mar por meio de cabos de aço e/ou amarras (SANCHES, 1996). Tais conexões são chamadas 

de linhas de ancoragem, as quais devem estar trabalhando como catenárias simples ou 

compostas, apresentando trecho apoiado ao solo, assegurando, assim, apenas a transmissão de 

esforços horizontais para o solo.  

Este fato deve-se à utilização de âncoras convencionais, as quais não possuem eficiência 

para transmitir esforços verticais. A garantia da eficiência do sistema de ancoragem do tipo 

convencional requer trechos apoiados ao solo com comprimentos consideráveis, de tal forma 

que, uma parte do carregamento transmitido para a unidade flutuante seja dissipada por meio 

do efeito do atrito linha-solo (KAWASAKI, 2010). 

O emprego de linhas de ancoragem com comprimentos elevados reflete um acréscimo 

de peso na unidade flutuante, tornando o sistema de ancoragem do tipo convencional complexo 

e custoso, logo, pouco eficiente; comumente, menos da metade das linhas de ancoragem 

contribuem para manter a unidade flutuante na locação, do qual somente uma ou duas linhas 

sustentam parcialmente toda a carga (LACERDA, 2005). 

Acrescenta-se ainda, a desvantagem de que as âncoras convencionais necessitam de um 

elevado raio de ancoragem (distância horizontal do centro da unidade flutuante ao solo), posto 

que pode haver uma aglomeração entre as linhas de ancoragem e os sistemas submarinos de 

unidades flutuantes ao redor. 



27 

 

  

2.2.2. Ancoragem “Taut-Leg” 

 

 No tipo de ancoragem “Taut-Leg”, as linhas de ancoragem apresentam uma 

configuração em que não possuem trechos apoiados no leito marinho, visto que se encontram 

mais tracionados do que nos sistemas de ancoragem convencional. 

 Nesse tipo de ancoragem, o ângulo formado entre as linhas e leito marinho é diferente 

de zero, fazendo com que a fundação seja capaz de resistir a carregamentos com componentes 

horizontais e verticais. Como a resistência requisitada é maior, a utilização de âncoras 

convencionais se torna inviável, fazendo-se necessário utilizar outros tipos de elementos de 

fundação, como as estacas de sucção, as estacas torpedo e as VLAs, as quais conferem 

tenacidade a altas cargas verticais. Além disso, as linhas de ancoragem possuem segmentos de 

poliéster, que apresentam uma boa resistência à fluência e fadiga. 

 Atualmente, as plataformas que estão sendo desenvolvidas para elevadas profundidades 

empregam a ancoragem do tipo “Taut-Leg”, que proporciona uma maior rigidez ao sistema, 

com passeios da embarcação limitados a offsets menores (distâncias menores) comparados aos 

da configuração convencional. 

 Outra vantagem, é a redução do raio de ancoragem com um ângulo de topo de 

aproximadamente 45° com a vertical, o que acarreta a uma diminuição do comprimento total 

da linha. Em um sistema convencional, o valor do raio de ancoragem possui a ordem de 

grandeza em torno de duas a três vezes a profundidade da lâmina d´água, ao passo que em um 

sistema “Taut-Leg” este pode ser bem próximo do valor da profundidade da lâmina d’água, 

como pode ser comparado na Figura 10. 



28 

 

  

Figura 10 - Sistema de ancoragem “Taut-Leg” x Convencional 

 
 

Fonte: Repositório Digital da Engenharia Naval e Oceânica da UFRJ5 

 

2.2.3. Ancoragem Vertical 

 

 Nesta configuração, as linhas de ancoragem estão trabalhando como tendões verticais, 

que precisam estar constantemente tracionados em função da parcela do empuxo proveniente 

da parte submersa da unidade flutuante. 

 Os tendões proporcionam ao sistema uma alta rigidez no plano vertical, em 

contrapartida, no plano horizontal há uma baixa rigidez. A força de restauração no plano 

horizontal é garantida pela componente horizontal da força de tração nos tendões         

(AGUIAR, 2005). 

A ancoragem vertical é usada principalmente em plataformas do tipo TLP (Tension Leg 

Platform), como mostra a Figura 11, mas também pode ser empregada em ancoragens de boias 

e monoboias. 

                                                           
5Disponível em: 

&lt;http://www.deno.oceanica.ufrj.br/deno/prod_academic/relatorios/2010/Debora_LuizFernando/relat1/Relatorio1

.htm&gt;. Acesso em 10 de junho de 2017. 

 



29 

 

  

Devido aos reduzidos movimentos verticais (heave) e rotacionais (roll e pitch) neste 

tipo de plataforma, as árvores de natal são posicionadas no corpo do flutuante, de uma forma 

semelhante às jaquetas (árvore de natal seca). 

 

Figura 11 - Plataforma TLP com ancoragem vertical 

 

Fonte: Kawasaki (2010) 

 

2.3. Tipos de Sistemas de Ancoragem 

 

2.3.1. Ancoragem com ponto único 

 

 A ancoragem com ponto único, também designada como SPM, é caracterizada pela 

concentração das linhas de ancoragem em uma única posição da embarcação           

(MONTEIRO, 2014). 

 Este tipo de ancoragem é mais utilizado em navios do tipo FPSO e FSO, permitindo que 

a unidade flutuante esteja livre para rotacionar em torno de suas linhas, alinhando-se com os 

carregamentos ambientais e, consequentemente, minimizando os esforços atuantes na mesma. 



30 

 

  

De acordo com a recomendação prática API RP 2SK (2005), existem três tipos de 

configuração predominantes: ancoragem com turret (interno e externo), CALM (Catenary 

Anchor Leg Mooring), e SALM (Single Anchor Leg Mooring). 

 

a) Ancoragem com Turret 

 

 O sistema de ancoragem com turret é caracterizado pela ligação de um conjunto de 

linhas de ancoragem a uma torre, a qual pode estar posicionada na proa, na popa (turret externo) 

ou dentro da embarcação (turret interno), permitindo a livre rotação da mesma em torno das 

linhas. Exemplos de cada um desses sistemas é mostrado na Figura 12, que representa o turret 

interno, e na Figura 13, o turret externo. 

 Turret é uma estrutura composta por um corpo central cilíndrico, ligado ao casco de 

uma embarcação por meio de rolamentos e uniões rotativas (swivel). Manifolds, 

lançadores/recebedores de pig, swivel, suporte dos risers, medição fiscal, injeção química e de 

controle compõem o turret. 

 

Figura 12 - Turret interno 

 

 

Fonte: Repositório Digital da Engenharia Naval e Oceânica da UFRJ6 

 

                                                           
6 Disponível em: 

&lt;http://www.deno.oceanica.ufrj.br/deno/prod_academic/relatorios/2011/NathalieThiago/relat1/Conteudo.htm&gt;. 

Acesso em 10 de junho de 2017 



31 

 

  

Figura 13 - Turret externo 

 

Fonte: Repositório Digital da Aukevisser7 

 

b) CALM 

 

 O sistema de ancoragem CALM é formado por uma boia de grandes dimensões que 

comporta um determinado número de linhas de ancoragem em catenária. A ligação entre a boia 

e a unidade flutuante é feita por um cabo (Figura 14), comumente composto de material 

sintético, ou por meio de uma estrutura fixa (Figura 15). 

 Em virtude das cargas ambientais, o sistema apresenta empecilhos, visto que a boia e a 

unidade flutuante apresentam respostas diferentes sob a influência das ondas. Logo, em 

condições marítimas severas é imprescindível que a boia e a embarcação sejam desconectadas. 

 Objetivando a solução desse problema, estruturas rígidas de acoplamento dotadas de 

articulações são empregadas para conectar a boia à unidade, minimizando movimentos 

horizontais entre os mesmos (KAWASAKI, 2010). Existe a possibilidade, ainda, de usar uma 

                                                           
7 Disponível em:&amp;lt;http://www.aukevisser.nl/supertankers/FPSO-FSO/id525.htm&gt;. Acesso em 20 de junho de 

2017 



32 

 

  

configuração com a estrutura de ligação submersa, ligada à unidade por meio de amarras, de 

forma menos rígida que a anterior. 

 
Figura 14 - CALM com ligação por meio de cabos 

 

Fonte: Kawasaki (2010) 

 

Figura 15 - CALM com ligação por meio de 

estrutura fixa 

 

                          Fonte: Kawasaki (2010) 

 

c) SALM 

 

 O sistema SALM usa um riser vertical que possui uma elevada capacidade de flutuação 

na superfície ou, em determinadas situações, é mantido por um riser pré-tracionado, ilustrado 

na Figura 16. Emprega-se um riser tubular articulado com uma forquilha rígida de acoplamento. 

Pode-se, ainda, aplicar uma configuração alternativa com amarras conectadas a uma boia, a 

qual é acoplada à unidade através de cabos, como apresentada na Figura 17. 

 O mecanismo de funcionando do sistema permite que, quando a unidade se desloca 

lateralmente, a força restauradora procedente dos flutuadores tende a alinhá-la, colocando-a de 

volta à posição original. 

Figura 16 - SALM com riser pré-tracionado 

 

 
Fonte: Kawasaki (2010) 

Figura 17 - SALM conectados à boia 

 

 
Fonte: Kawasaki (2010) 

 



33 

 

  

2.3.2. Ancoragem Distribuída 

 

 O sistema de ancoragem distribuída, também conhecido como SM (Spread Mooring), é 

formado por linhas distribuídas em torno da embarcação, tornando-se capaz de resistir a 

carregamentos ambientais atuantes em qualquer direção.  

 Este tipo de amarração é utilizado por plataformas semissubmersíveis (Figura 18) em 

operações de perfuração e produção, porém tem sido aplicado, recentemente, em unidades 

FPSO (Figura 19). 

 Uma concepção recente de ancoragem para FPSO, desenvolvida pela PETROBRAS, 

conhecida como DICAS, vista na seção 2.1.2, consiste na adoção de linhas distribuídas, apesar 

dos navios sofrerem maior influência em relação às cargas ambientais. 

 

Figura 18 - Ancoragem distribuída em plataformas semissubmersíveis 

 

Fonte: Monteiro (2014) 

 

 

Figura 19 - Ancoragem distribuída em unidades FPSO 

 

Fonte: Monteiro (2014) 

 



34 

 

  

2.3.3. Ancoragem com Posicionamento Dinâmico 

 

 O sistema de ancoragem com posicionamento dinâmico, ilustrado na Figura 20, também 

conhecido como DP (Dynamic Positioning), utiliza propulsores e impulsionadores laterais 

(thrusters) para manter a posição de navios e plataformas através do acionamento dos mesmos, 

de forma que corrijam os efeitos dos carregamentos ambientais atuantes. 

 Este sistema pode ser utilizado de forma isolada ou como auxílio para um sistema já 

ancorado. A adoção de um sistema de posicionamento dinâmico é adequada para unidades que 

possuem grande mobilidade, isto é, que se estabilizam em um determinado local por pouco 

tempo, como por exemplo, unidades que realizam atividades de perfuração e intervenção em 

poços de petróleo. 

 

Figura 20 -  Ancoragem com posicionamento dinâmico 

 

Fonte: Kawasaki (2010) 

 

 

 

 

 

 

 

 

 



35 

 

  

3 REDES NEURAIS 

 

As Redes Neurais Artificiais (RNA’s) são ferramentas computacionais que apresentam 

uma expressiva utilização na resolução de problemas complexos do mundo atual, tais como: 

reconhecimento de padrões, classificação, agrupamento, previsão de séries temporais, função 

de aproximação, otimização, processamento de sinais, telecomunicações, robótica, dentre 

outros (WIDROW et al., 1994).  

Na indústria de petróleo, tem sido aplicadas em problemas de engenharia oceânica e 

offshore, incluindo a previsão das características do estado do mar (YASSERI et al., 2010), a 

estimativa dos passeios da plataforma sob ação de cargas ambientais                             

(MAZAHERI e DOWNIE, 2005), e muitas outras aplicações offshore (OK et al., 2007). 

A atratividade das RNA’s vem do notável processamento de informações característico 

do sistema biológico, como a não linearidade, alto paralelismo, robustez, falhas e tolerância às 

falhas, capacidade de aprendizagem, habilidade de lidar com informações imprecisas e difusas, 

e a capacidade de generalização (JAIN et al., 1996). Tais características são desejáveis porque 

(i) a não-linearidade permite melhor o ajuste de dados, (ii) o alto paralelismo implica um rápido 

processamento e tolerância a falhas de hardware, (iii) a aprendizagem e a flexibilidade 

permitem que o sistema atualize sua estrutura interna em resposta à mudança do ambiente, e 

(iv) a generalização permite a aplicação do modelo para dados não-conhecidos. 

 

3.1. Neurônios Artificiais e Função de Ativação 

 

As RNA’s são compostas por complexas redes de unidades simples (neurônios) 

interconectadas. Cada unidade recebe várias entradas e gera apenas uma saída, a qual pode se 

tornar uma das entradas de outra unidade. No sistema biológico, os neurônios são células 

responsáveis pela recepção, transmissão e processamento de sinais. Individualmente, realizam 

operações relativamente simples; contudo, as conexões entre eles geram uma enorme 

diversidade de tarefas. A Figura 21 ilustra um modelo artificial de neurônio – o neurônio de 

McCulloch-Pitts (MCCULLOCH et al., 1943). 

 



36 

 

  

Figura 21 - Neurônio de McCulloch-Pittsk 

 

 

Ao receber um dado número de entradas xi, x = 1, m, primeiramente ele calcula uma 

combinação linear dessas entradas usando pesos sinápticos wk (a cada entrada está associada a 

um peso wk que corresponde a importância da entrada xi) para gerar a entrada ponderada uk.  

 

?? =  ? ?? ?? 
?
?=1 (t)                        (1) 

 

 Em seguida, fornece uma saída yk através de uma função de ativação - f(uk), que deve 

apresentar um comportamento monotônico crescente sobre uma determinada faixa de valores 

para uk, e assumir um valor constante fora dessa faixa. Vários tipos de função ativação podem 

ser usadas (HAYKIN, 2001), incluindo a função logística definida pela seguinte expressão (com 

um parâmetro ? que modifica a derivada da vizinhança de uk=0, para ajustar a “velocidade” de 

transição): 

?? = ?(?? ) =
1

1+ ? ????
                    (2) 

 

 A função de ativação acima, não é a única maneira de produzir o valor de saída do 

neurônio. Existem outros diversos tipos de função ativação, como retrata a Figura 22, e 

exemplificadas a seguir: 

?  função linear, a qual produz uma saída contínua; 

?  função escada, com uma saída binária (não-linear discreta); 

?  função sigmoidal (a mais comum é a função logística, apresentada anteriormente), que 

apresenta uma saída não-linear contínua. 



37 

 

  

 A função sigmoidal é uma função de ativação contínua amplamente usada em aplicações 

de RNA’s, por apresentar características que são muito úteis nos cálculos relacionados à 

aprendizagem dos pesos e ao mapeamento feito pela rede: 

? Não-linear; 

? Contínua e diferenciável em todo o domínio de IR; 

? Derivada tem forma simples e é expressa pela própria função: 

 

                                      ? ?(?? ) = ?(?? )(1 ? ?(?? ))        (3) 

 

? Estritamente monótona: ??1 ? ??2 ? ?(??1)  ? ?(??2). 

 

Figura 22 - Representação gráfica de diferentes funções de ativação: (a) função sigmoidal; (b) função 

linear; (c) função escada 

 

 

 

3.2. Camadas 

 

 A potencialidade e flexibilidade dos cálculos baseados em redes neurais vêm da criação 

de conjuntos de neurônios que estão interligados entre si. O paralelismo de elementos com o 

processamento local cria o “engenho” global da rede.  



38 

 

  

A disposição dos neurônios pode ser feita em relação ao método de propagação da 

informação recebida, conforme mostrado na Figura 23. Pode-se diferenciar entre redes de 

propagação para frente (feedforward) e redes realimentadas (recurrent). No caso das redes de 

propagação para frente, o fluxo de informações é unidirecional. Os neurônios que recebem a 

informação conjuntamente organizam-se em camadas. 

  

Figura 23 - Tipos de Alimentação de RNA's: (a) propagação para frente; (b) redes realimentadas 

 

 

Embora mais complexas, as redes multicamadas apresentam melhores resultados. A 

maioria das aplicações de RNA utiliza redes de 2 camadas; apenas uma camada oculta, com um 

número adequado de neurônios, pode ser suficiente para aproximar funções contínuas; com 

duas camadas, até mesmo funções descontínuas podem ser representadas (CYBENKO, 1989). 

A Figura 24 faz uma comparação entre a estrutura da RNA com camada única e multicamadas. 

 

Figura 24 - RNA com camada única (a) e RNA multicamadas (b) 

 
Fonte: Pina et al. (2013) 

 

 

Exemplos desse tipo de rede são o perceptron (ROSENBLATT, 1958), e o perceptron 

multi-camada (RUMELHART et al., 1986). 

 Já as redes realimentadas possuem ligações entre os neurônios sem restrições. Oposta 

às redes sem alimentação, o comportamento dinâmico desempenha o papel fundamental desse 



39 

 

  

modelo. Em alguns casos, os valores de ativação da rede passam por um processo de relaxação 

até alcançarem um estado estável.  

 Na aplicação considerada neste trabalho, a configuração básica implementada da RNA 

foi a rede de propagação para frente, com uma camada intermediária (ou camada oculta), e uma 

camada de saída, correspondente ao resultado desejado. A Figura 25 ilustra a arquitetura da 

RNA adotada neste trabalho. Vale ressaltar que a primeira camada (com as unidades de entrada) 

não são contabilizadas, visto que não é realizado nenhum cálculo. 

 

Figura 25 - Arquitetura de uma RNA multicamadas 

 

 

3.3. Treinamento 

 

 Após determinar a topologia da rede neural, a mesma tem que ser treinada, ou seja, os 

graus de liberdade que a rede dispõe para solucionar a tarefa em questão têm que achar um 

valor ótimo.  

 O treinamento da rede neural refere-se ao processo iterativo de ajustes aplicado aos 

pesos – wk da eq. (1), de modo que, a escolha de um conjunto de entradas produz um conjunto 

desejado de saídas. Isso depende da disponibilidade de um conjunto de treinamento, isto é, um 

conjunto de pares entrada-saída conhecidos, que é apresentado à rede várias vezes                

(PINA et al., 2013). 

 O treinamento de uma rede neural artificial dá-se por meio de um conjunto de regras 

bem definidas, chamado de algoritmo de aprendizagem. De acordo como os pesos são 

modificados, existem diferentes tipos de algoritmos de aprendizagem para determinados 

modelos de RNA. 



40 

 

  

 O método de treinamento por retropropagação (backpropagation) é o mais comum para 

redes neurais de multicamadas. Consiste em usar os erros das saídas para atualizar todos os 

pesos, a partir do fim para o início da rede (PINA et al., 2013). Cada iteração na retropropagação 

consiste em 2 etapas: no passo ascendente (ou para frente), uma entrada é aplicada à rede neural 

e o efeito é propagado através das conexões entre os neurônios, até o momento que uma resposta 

é produzida; no passo descendente, a resposta obtida é comparada com a saída desejada, o erro 

é calculado e retropropagado da saída para a entrada, ajustando os pesos de conexão. O 

procedimento é repetido até que um critério de parada seja atingido, normalmente quando o 

ajuste de pesos leve a rede a um estado cujo o erro seja aceitavelmente pequeno para a função, 

ou quando um número máximo de avaliação da função é pré-estabelecido. 

Os neurônios no método de retropropagação podem estar total ou parcialmente 

interconectados. Essas redes, devido à sua grande versatilidade, podem ser aplicadas para 

modelagem de dados, classificação, previsão, controle, compressão de dados e reconhecimento 

de padrões (HASSOUN, 1995). 

  



41 

 

  

4 EVOLUÇÃO DIFERENCIAL 

 

A Evolução Diferencial (DE, acrônimo do nome original em inglês Differential 

Evolution) é um poderoso algoritmo de otimização numérica na busca de uma solução ótima 

global, sendo aplicado com sucesso em problemas de difícil otimização, principalmente por 

apresentar ótimas propriedades de convergência e fácil aplicação. Introduzido por Rainer Storn 

e Kenneth Price (1995), o DE surgiu a partir das tentativas de Price para resolver um problema 

de ajuste polinomial de Chebychev.  

O DE é um dos melhores algoritmos do tipo genético para resolver problemas com 

variáveis representadas por um número real, ser eficaz para funções objetivo que não são 

diferenciáveis ou convexas, precisar de poucos parâmetros para serem ajustados, e ter grande 

facilidade na busca do ótimo com populações pequenas (CHENG e HWANG, 2001). 

Diante desse contexto, e devido à sua simples estrutura, velocidade, robustez, e 

facilidade de uso, isto é, são poucas as variáveis de controle que são exigidas como dados de 

entrada para realizar a otimização, este método tem sido empregado em várias aplicações na 

engenharia para descobrir soluções eficazes sem utilizar algoritmos complexos. 

 

4.1. População Inicial 

 

Algoritmos de pesquisa evolutiva, incluindo o DE, tentam imitar a evolução natural de 

uma população de indivíduos com meios de seleção de modo organizado, fundamentados na 

aptidão dos indivíduos e operadores de mutação e cruzamento. 

Para a geração da população inicial, o DE utiliza uma população de soluções candidatas 

para o equacionamento do problema, a fim de cobrir todo o intervalo de busca. Após o 

equacionamento do problema, o DE gera uma população de NI indivíduos representados como 

um vetor das variáveis de decisão (PAIVA, 2011). A população inicial (G = 0) é então formada, 

aleatoriamente, dentro dos limites definidos pelo usuário, obedecendo à seguinte distribuição 

uniforme: 

 

??
? =  ?????? (?? ) + ????(??????(?? ) ? ?????? (?? ))                  (4) 

 



42 

 

  

Onde: 

??
?
 é o i-ésimo indivíduo da população inicial, i = 1, 2, 3, ... NI, sendo NI o número total de 

indivíduos em uma população; 

G é a geração corrente; 

?????? (?? ) são os valores dos limites inferiores de cada variável de decisão; 

??????(?? ) são os valores dos limites superiores de cada variável de decisão; 

????? é um número gerado aleatoriamente com distribuição uniforme entre 0 e 1. 

Gerada a população inicial, a função objetivo de cada indivíduo da população inicial é 

avaliada e armazenada para comparações futuras. 

 

4.2. Mutação 

 

No processo de mutação escolhe-se, aleatoriamente, três vetores distintos dentro da 

população corrente de NI indivíduos e, combina-os para gerar um vetor de mutação. Este 

operador é um dos mais importantes na convergência do processo evolucionário, pois ocorre 

em alta probabilidade, ou seja, para cada indivíduo e em todas gerações.  

Um vetor, ??
?  , sofre uma perturbação resultante da diferença vetorial entre os dois 

outros vetores diferentes, ??
?

 e ??
? , multiplicados por um fator de perturbação F. Para cada 

indivíduo da população corrente, um vetor de mutação ? ?+1 é formado de acordo com a 

seguinte equação: 

??,?
?+1 =  ??,?

? + ?(??,?
? ?  ??,?

? )                                 (5) 

 

Onde: 

G é o número da geração; 

i = 1, 2, 3,... NI, NI é o número total de indivíduos em uma população; 

j = 1, 2, 3,... Nvar, Nvar é o número total de variáveis de decisão; 

??,?
?

 é a j-ésima variável de decisão do i-ésimo indivíduo da G-ésima geração; 

??,?, ??,? e ??,? são as j-ésimas variáveis de decisão de três indivíduos da população (??, ?? , 

??) escolhidos aleatoriamente; 



43 

 

  

? é uma constante real chamada de fator de mutação (ou perturbação), e é responsável 

por controlar a amplitude da diferença entre os dois vetores. Altos valores de F resultam em 

uma maior diversidade na população gerada e mais rápido o algoritmo chega a um ótimo, 

enquanto valores muito baixos faz com que o algoritmo tenha um tempo maior de convergência 

e consiga refinar minuciosamente o espaço de busca, porém as chances de que o indivíduo fique 

estagnado em um ótimo local são maiores. Logo, a escolha ideal do fator de mutação é 

imprescindível para a busca de uma solução ótima global. Geralmente é usado um valor no 

intervalo [0; 0,2] (STORN e PRICE, 1997).  

 

4.3. Cruzamento (Crossover) 

 

Após o processo de mutação, é gerado um vetor de teste ??+1, obtido pela operação de 

crossover, substituindo componentes do vetor alvo ??
? , escolhido aleatoriamente e diferente de 

??
? , ??

?
 e ??

? , por componentes do vetor de mutação ??+1. O processo é descrito pela seguinte 

equação: 

 

??,?
?+1 = {

??,?
?+1, ?? ? ? ??   , ?? ????, ? ?????????? ?? ????? é ??????? ?? ????? ?? ????çã? 

??,?
? , ?? ? &gt; ?? , ?? ????, ? ?????????? ?? ????? é ??????? ?? ????? ????

  (6) 

 

Onde:  

r = número gerado aleatoriamente no intervalo [0; 1] seguindo uma distribuição uniforme, para 

cada componente j do vetor; 

Cr = taxa de cruzamento, que controla a fração de valores do vetor mutante que será usada, 

fornecida pelo usuário; 

??,?
?+1

  = componentes do vetor de mutação; 

??,?
?

 = componentes do vetor alvo. 

A taxa de cruzamento Cr define quando um parâmetro deve ser substituído (CHENG e 

HWANG, 2001). Quanto maior for a taxa de cruzamento, maior a probabilidade de se ter mais 

componentes do vetor de mutação no vetor de teste. Geralmente, a taxa é escolhida no intervalo 



44 

 

  

de [0,8; 1] (STORN e PRICE, 1997), uma alta taxa de cruzamento aumenta a diversidade da 

população, e assim obtém-se melhores resultados. 

 

4.4. Seleção 

 

O processo de seleção é encarregado por decidir qual vetor (vetor alvo ou vetor teste) 

irá avançar para a próxima geração G + 1 de acordo com o valor da sua função objetivo. No 

caso de problemas de minimização, adotado nesse trabalho para a otimização da função 

objetivo, a seleção é feita da seguinte maneira: 

 

??
?+1 = {

??
? , ?? ?(??

? ) ? ?(??
? )

??
? , ???? ?????á???

                                (7) 

 

O algoritmo repete as operações anteriores para cada indivíduo da população por um 

determinado número de iterações, iterações estas limitadas por um critério de parada. 

O critério de parada escolhido foi de um número máximo de gerações (Ger). Todavia, 

existem outros critérios de parada, que pode ser quando a diferença absoluta entre as funções 

objetivo dos melhores indivíduos não ultrapassa um determinado valor estabelecido pelo 

usuário, dentre outros. Após realizar todas as iterações, é escolhido o indivíduo com a melhor 

função objetivo. 

Diante dos conceitos abordados anteriormente, a Tabela 1 retrata de forma simplificada 

o algoritmo de Evolução Diferencial. 

  



45 

 

  

 

 

Tabela 1 - Esquema simplificado do algoritmo de Evolução Diferencial 

 

 

 

 

 

 

 

1. Início da rotina 

2. Geração da População Inicial 

3. Geração da função objetivo para cada indivíduo da População Inicial 

4. Executa rotina de Otimização da População Inicial até que o número de gerações 
proposto seja atingido 

5. Seleciona indivíduos da População Inicial aleatoriamente 

6. Realiza operação de Mutação 

7. Realiza operação de Crossover (cruzamento) 

8. Geração de população teste a partir dos dados obtidos da Mutação e Crossover 

9. Geração da função objetivo para cada indivíduo da população teste 

10. Geração da população final a partir dos melhores indivíduos da comparação 

11. Fim da rotina de Otimização da população corrente  

12. Seleciona o melhor indivíduo da população final 



46 

 

  

A técnica do algoritmo de Evolução Diferencial faz uso de uma população de soluções 

candidatas para o equacionamento do problema, a fim de explorar todo o espaço de busca. Uma 

vez gerada a população inicial, a função objetivo de cada indivíduo da população inicial é 

calculada e armazenada para futuras comparações com as novas gerações formadas através dos 

operadores de: mutação, cruzamento e seleção. A sequência de operações do algoritmo de 

Evolução Diferencial pode ser representada pela Tabela 1. 

No problema em questão, a meta é minimizar a função objetivo, ou seja, encontrar o 

mínimo global para o erro obtido através da função objetivo, e, para alcançarmos tal propósito, 

usaremos a técnica do DE sem restrições, onde o critério de parada adotado foi o de um 

determinado número máximo de gerações (no caso, 2000 gerações). Analisando a Tabela 1, ao 

final da 11ª etapa o algoritmo retorna para a 4ª etapa até que todas as 2000 gerações sejam 

realizadas, e por fim, obter um resultado com melhores padrões de otimização. 

  Na aplicação do método DE apenas 3 parâmetros precisam ser ajustados: tamanho da 

população (NI), fator de perturbação (F), e taxa de cruzamento (Cr). Segundo Storn (1996), a 

taxa de cruzamento Cr ? [0, 1], caso a convergência não seja alcançada, utilizar um fator entre 

0,8 e 1, o que tornará conveniente. Em relação ao número de indivíduos da população, quanto 

maior for, menor deve ser o fator de perturbação. O fator de perturbação F não deve ser menor 

que um certo valor para conter a convergência prematura, sendo este dependente da função 

objetivo; e que elevados valores de F conduzem a um maior risco de escapar de um ótimo local. 

 

 

 

 

 

 

 

 

 

 

 



47 

 

  

5 ESTUDO DE CASO 

 

Visando demonstrar a potencialidade e permitir uma avaliação entre os métodos 

explicitados anteriormente, iremos abordar primeiramente os resultados encontrados na RNA 

treinada e, por conseguinte, a evolução através do método de Evolução Diferencial, o qual irá 

utilizar como dados iniciais os resultados encontrados na RNA. Ambos os algoritmos foram 

modelados no software MATLAB.  

Para o problema de otimização, serão definidos a função objetivo (obtida através do 

treinamento da RNA) a ser minimizada e os parâmetros do DE, estabelecer as variáveis de 

projeto que irão ser otimizadas, assim como o procedimento de implementação do algoritmo de 

evolução e a metodologia empregada no processo de otimização. 

 

5.1. Janela Inicial para a RNA 

 

 Os dados iniciais para o treinamento da RNA foram obtidos através de uma análise de 

movimento acoplado realizada pela ferramenta de elementos finitos no programa não comercial 

SITUA-PROSIM (2006), que gera uma matriz de 19 colunas e 8249 linhas, sendo as 10 colunas 

iniciais compostas pelo conjunto de inputs (parâmetros de configuração dos sistemas de 

ancoragem, como o raio, ângulo, tração média e diâmetro da linha de ancoragem) como 

mostrado na Tabela 2; e as outras 9 colunas, os outputs, compostas pelos offsets (passeios) e a 

tração máxima aplicada à linha de ancoragem, representadas na Tabela 3. 

 
Tabela 2 – Inputs: Parâmetros de configuração do sistema de ancoragem 

Coluna Parâmetro Mínimo Máximo 

01 - 04 Ângulo por corner -3° 3° 

05 – 08 Raio por corner -500 m 500 m 

09 Tração média 1000 kN 3000 kN 

10 Material (diâmetro) 0,122 m 0,262 m 

 

 O SITUA-PROSIM (2006) incorpora ferramentas numéricas para definir os dados de 

entrada: cargas ambientais, dados de base batimétrica, configurações das linhas de ancoragem 

e propriedades do casco.  



48 

 

  

 

Tabela 3 – Outputs: Offsets e tração máxima aplicada à linha de ancoragem 

 

 

As simulações estáticas são realizadas sob a ação de cargas ambientais atuando em 8 

direções de incidência (N, NE, E, SE, S, SW, W, NW), para fornecer as saídas (offsets e tração 

sob as linhas de ancoragem) que compõem o conjunto de dados de treinamento da RNA. 

 

5.2. Treinamento e Validação da Rede 

 

 Na aplicação considerada neste trabalho, a configuração básica implementada na RNA 

foi a rede de propagação para frente, com uma camada intermediária (ou camada oculta), e uma 

camada de saída, correspondente ao resultado desejado. Vale ressaltar que, a primeira camada 

com as unidades de entrada não é contabilizada, visto que não é realizado nenhum cálculo. 

 O procedimento para os estágios de treinamento e validação da rede podem ser feitos 

após a janela inicial dos parâmetros desejados for coletada pela ferramenta FE. Uma vez que a 

rede é treinada, para obter as saídas, a rede precisa de novos parâmetros. Esse mecanismo pode 

ser sintetizado pela Tabela 4. 

 

 

 

Coluna Parâmetro - Direção Mínimo Máximo 

11 Offset 1 – N 0,122 0,262 

12 Offset 2 – NE 92,709 297,147 

13 Offset 3 – E 90,32 259,924 

14 Offset 4 – SE 87,066 204,363 

15 Offset 5 – S 106,842 269,241 

16 Offset 6 – SW 117,028 303,542 

17 Offset 7 – W 96,864 194,09 

18 Offset 8 – NW 106,121 163,849 

19 ???çã? ?á????

???
 

 

0,164 0,963 



49 

 

  

Tabela 4 - Procedimentos para o treinamento da rede 

  

 

Na 2ª etapa, treinamos diferentes quantidades de indivíduos (200, 1000, 1500 e 2000), 

todas as RNA’s formadas por 10 neurônios, executadas em 20 rodadas, nas quais obtivemos 4 

conjuntos de dados (um para cada quantidade diferente de indivíduos), com diferentes erros 

desnormalizados para a melhor rodada das 20 realizadas para cada offset e para a tração 

máxima. 

O processo de treinamento fornece os pesos da RNA, que podem então ser aplicados 

para analisar novas configurações do sistema de ancoragem, além de formarem a função 

objetivo que será otimizada pelo DE.  

 Além dos pesos, o MATLAB gera alguns parâmetros que iremos considerá-los 

constantes do problema, já que são utilizados nas equações sem sofrerem alterações para cada 

diferente rodada. Na Tabela 5 são listados os parâmetros e seus respectivos valores encontrados 

através do treinamento da RNA.  

É importante frisarmos que, por se tratar de uma rede neural com duas camadas, são 

formadas duas funções objetivo (uma para cada respectiva camada), e assim, ao final da 

segunda iremos obter o resultado final da otimização global.  

 

 

 

 

 

 

 

1. Execute análises estáticas pela ferramenta FE (com diferentes quantidades 

de indivíduos) para obter um conjunto de inputs e um conjunto de outputs (offsets e 

tração na linha de ancoragem). 

2. Use esse conjunto de dados para treinar e validar a rede. 

3. Use a rede treinada para prever os offsets e a tração máxima aplicada à linha 

de ancoragem. 



50 

 

  

Tabela 5 - Constantes das Funções Objetivo 

 

Função Objetivo 

 

Constantes 

 

Tamanho 

 

Valor 

 

 

Função Objetivo 1 

 

x1_step1.ymin 1x9 [-3;- 3;-3;- 3;-500;- 500;-500;-500;1000] 

 

x1_step1.gain 

 

1x9 

[0.333;0.333;0.333;0.333;0.002; 

0.002;0.002;0.002;0.001] 

 

x1_step1.xoffset 1x1 

 

-1 

 

Função Objetivo 2 

y1_step1.ymin 1x1 -1 

y1_step1.gain 1x1 0.0213 

y1_step1.xoffset 1x1 variável para cada offset e tração 

máxima 

 

5.3. Variáveis de Decisão e Função Objetivo 

 

A maioria dos problemas de otimização abordam funções objetivo a serem minimizadas 

ou maximizadas, as quais estão relacionadas com as variáveis de projeto que irão definir um 

ponto ótimo, por isso chamadas de variáveis de decisão. 

As variáveis de decisão são variáveis que podem ser controladas e modificadas para se 

alcançar o ponto ótimo da função objetivo. Os possíveis valores para essas variáveis estão 

delimitados por um conjunto de restrições, os quais foram formados a partir do treinamento da 

RNA, gerando assim um conjunto de soluções viáveis para um determinado problema. 

Neste caso, são avaliadas quatro variáveis de decisão, duas para cada função objetivo 

gerada em cada camada. Posteriormente, serão discutidas as funções objetivo consideradas para 

a resolução do problema. 

Na Tabela 6 são evidenciadas as variáveis e o intervalo em que se encontra cada qual, 

estabelecido através do treinamento da RNA. Os valores assumidos para essas variáveis estão 

dentro de uma faixa admissível de operação da RNA, gerando offsets e tração máxima factíveis 

para a operação em sistemas de ancoragem. 

 

 



51 

 

  

Tabela 6 - Variáveis de Decisão 

 

O método de otimização por Evolução Diferencial, usado no presente trabalho, depende 

de uma função objetivo, de tal forma que se faz necessário desenvolver uma formulação 

matemática que modele os objetivos do problema em questão. A função objetivo é em função 

das variáveis de decisão e estabelece o problema de otimização a ser minimizado ou 

maximizado, visando obter os melhores valores para estas variáveis (PAIVA, 2011). 

 Assim sendo, o problema de otimização a ser solucionado nesse estudo é definido pelas 

equações (8) a (11), estabelecidas através do treinamento da RNA.  

 Os dados de entrada, destacados na seção 5.1, ao entrarem na camada oculta (primeira 

camada contabilizada) são normalizados, estabelecendo os valores mínimos e máximos para 

cada linha, ou seja, para cada parâmetro de entrada do treinamento da RNA. Esse processo é 

representado pela equação (8).  

 

??1 = ?????????_?????(?1, ?1_????1 )                                         (8) 

 

Onde: 

?1 = matriz de dados de entrada definida na seção 5.1 

?1_????1 = x1_step1.xoffset, determinada na Tabela 5 

 Dentro da primeira camada ocorre a função de transferência neural, representada pela 

equação (9), responsável por calcular a saída de uma camada através da sua entrada líquida. 

 

?1 = ??????_?????(??????(?1,1, ?) + ??_1 ? ??1)                     (9) 

 

Função 

Objetivo 

Variáveis  

de  

Decisão 

Tamanho Intervalo 

 

Função 

Objetivo 1 

 

Pesos 1ª Camada 

(IW1_1) 

20x10 [-50; 50] 

Bias 1ª Camada 

(b1) 

20x1 [-20; 20] 

 

Função 

Objetivo 2 

Pesos 2ª Camada 

(LW2_1) 

1x20 [-50; 50] 

Bias 2ª Camada 

(b2) 

1x1 [-5; 5] 



52 

 

  

Onde: 

?1 = Bias 1ª Camada 

Q = valor numérico escalar que indica a quantidade de pares [mínimo, máximo] dentro do ?1 

?????? = rotina que chama as matrizes 

??_1  = Pesos 1ª Camada 

??1 = matriz com os dados de entrada (?1) normalizados 

 Já dentro da segunda camada ocorre o processo estabelecido pela equação (10):  

 

?2 = ??????(?2,1, ?) + ??2_1 ? ?1                                               (10) 

 

Onde: 

?2 = Bias 2ª Camada 

??2_1  = Pesos 2ª Camada 

?1 = resultados obtidos pela equação (9) 

 Ao final do treinamento é gerada a função (11), encarregada por minimizar o resultado 

final do processo de treinamento da RNA. 

 

?1 = ?????????_???????(?2, ?1_????1 )                 (11) 

 

Onde: 

?2 = resultados obtidos pela equação (10) 

?1_????1  = y1_step1.xoffset determinada na Tabela 5 

?1 = resultado final do treinamento da RNA 

 O objetivo do problema de otimização em questão é a minimização das funções objetivo, 

as quais irão fornecer, ao final de todo processo de otimização, um valor satisfatório para o erro 

desnormalizado para cada offset e para a tração máxima. 

 As equações (9) e (10) ao serem minimizadas, irão ser encontrados os menores valores 

possíveis para os erros desnormalizados, atribuindo valores às variáveis de decisão que não 

fujam do intervalo estabelecido no problema.  

 

 



53 

 

  

5.4. Critério de Parada 

 

O critério de parada é um mecanismo usado na Evolução Diferencial, e também em 

outros algoritmos de otimização, que estabelece um critério pré-definido no processo 

evolucionário para que a busca por um ótimo seja suspendida. Como dito da seção 4.4, existem 

diversos critérios de parada (ex: quando a diferença absoluta entre as funções objetivo dos 

melhores indivíduos não ultrapassa um determinado valor estabelecido pelo usuário, número 

máximo que a rotina chama a função fitness, tempo de execução, etc.) e o que iremos utilizar 

nesse trabalho é o número máximo de gerações. 

Durante o processo evolucionário, para evitar que a otimização seja estagnada e a que 

rede não esteja mais generalizando, é necessário observar a partir de que ponto essa estagnação 

evolucionária começa a ocorrer, e estabelecer como critério de parada um número de gerações 

menor do que no ponto em que ocorre esse fato, de tal forma que o teste não fique exaustivo e 

viciado. 

Analisando os resultados dos experimentos, os erros dos dados (MSE - mean squared 

error, MAE - mean absolute error) que avaliam a aptidão de cada indivíduo começam a não 

sofrerem mudanças significativas a partir da 2000ª geração, o que torna desfavorável continuar 

o processo evolucionário. Logo, foi estabelecido que o critério de parada para este caso seria o 

número máximo de gerações igual a 2000, onde a partir desse valor, a rotina para. 

 

5.5. Parâmetros do Algoritmo Evolução Diferencial 

 

Definidas as variáveis de decisão e as funções objetivo, a próxima etapa foi encontrar 

os parâmetros da Evolução Diferencial empregados na otimização dos erros desnormalizados 

dos offsets do sistema de ancoragem. Dentro dos intervalos recomendados pela literatura, foi 

feita uma série de testes, com diferentes valores para os parâmetros, analisando os resultados 

da otimização obtida para escolher o melhor valor para cada qual e com menor custo 

computacional. 

Porém, é importante que se adquira um maior conhecimento a respeito da escolha dos 

valores de ajuste dos parâmetros, pois para um determinado tipo de problema a estratégica pode 

funcionar perfeitamente, mas para outro não tão bem (STORN e PRICE, 1995). 



54 

 

  

Diante disso, a primeira escolha para os valores de F e Cr foi baseada em uma tabela 

desenvolvida por Pedersen (2010), onde os valores para os parâmetros foram meta-otimizados 

para funcionarem satisfatoriamente em vários problemas de otimização pelo método DE, de 

diferentes dimensões e avaliações da função objetivo. A escolha para o valor de F, o fator de 

perturbação que define a mutação, igual a 0,4717, e para Cr (fator que define o cruzamento), o 

valor de 0,8803, foi correlacionado com o valor mais próximo do tamanho da população; pelo 

fato do tamanho máximo da população estudada pela tabela terem sido 75 indivíduos, e o do 

presente trabalho são 200, iremos usar os dados da população igual a 75, com a correspondência 

mais próxima. 

 Como os resultados não superaram os obtidos pela RNA, o valor de F foi diminuído 

para 0,2, tendo o cuidado para não diminuir de tal forma que ocorra a convergência prematura. 

Quanto ao Cr, não houve grandes mudanças, estabelecemos o valor de 0,8, pois segundo a 

literatura, valores entre 0,8 e 1 são ideais para conseguir a convergência. 

Em relação ao número máximo de gerações (Ger), o qual foi adotado como critério de 

parada, assumiu-se 2000 gerações, um valor ótimo para conseguir a convergência e, ao mesmo 

tempo, não acarretar em um aumento do tempo computacional devido à complexibilidade dos 

testes, conduzindo aos mesmos resultados finais. 

A Tabela 7 apresenta, de forma resumida, os parâmetros e seus valores finais após serem 

realizados os testes. 

 

Tabela 7 - Parâmetros do Algoritmo Evolução Diferencial 

 

 

 

 

                        

 

Para muitas aplicações, o tamanho da população (NI) deve ser entre NI=3*D e 

NI=10*D, sendo D igual a dimensão do número de variáveis (STORN, 1996). Embora 

populações maiores direcionam a um mínimo global da função objetivo, estas envolvem um 

número maior de avaliações da função objetivo e, consequentemente, a um maior custo 

computacional. Logo, um valor conveniente para este caso seria NI=200 indivíduos, 

PARÂMETROS 

F 0,2 

Cr 0,8 

NI 200 

Ger 2000 



55 

 

  

respeitando o intervalo proposto pela literatura, e também os resultados obtidos pelos testes dos 

parâmetros do DE. 

A representação dos 200 indivíduos que compõem a população é feita através de um 

vetor formado pelas variáveis de decisão do problema de otimização, ou seja:  

Xn =(
?(??1_1)?

?(?1)?
) para a função objetivo 1, e Xn =(

?(??2_1)?
?(?2)?

) para a função objetivo 2, onde 

n = 1, 2, 3, ...200. Isto é, ?(??1_1)1 e ?(?1)1  são os valores das variáveis de decisão do vetor X1 

para a função objetivo 1,  ?(??2_1)1e ?(?2)1 são os valores das variáveis de decisão do vetor X1 

para a função objetivo 2, e assim sucessivamente, aplicando para todos os 200 indivíduos da 

população. 

Ao logo do processo da Evolução Diferencial, a população inicial sofre modificações, 

sendo substituída por uma nova população de mesmo tamanho, formando assim uma nova 

geração, ininterruptamente, até que o critério de parada seja atingido. Os indivíduos gerados 

pelo processo de mutação e crossover são selecionados pelo operador seleção, onde os melhores 

indivíduos irão formar a próxima geração. 

O objetivo é formar uma população melhorada, com indivíduos mais aptos, onde o 

indivíduo mais evoluído corresponda à solução ótima do problema, sendo sua aptidão avaliada 

pelo valor da função objetivo (PAIVA, 2011). A função objetivo é rodada até que se obtenha 

um valor ótimo. 

Ao final da otimização, após serem otimizadas as duas funções objetivos, teremos 

valores ótimos para os Pesos da 1ª Camada (IW_1), Bias 1ª Camada (b1), Pesos 2ª Camada 

(LW2_1), e Bias 2ª Camada (b2) que irão minimizar o erro desnormalizado para cada offset e 

para a tração máxima. 

 

5.6. Metodologia de Otimização do Modelo de Substituição do Sistema de 

Ancoragem 

 

Para o desenvolvimento dos experimentos da RNA, as bases de dados foram criadas 

através do programa SITUA-PROSIM (2006) e, em seguida, a rotina de treinamento da rede, 

assim como todo o procedimento de cálculo da função objetivo, foram modelados na ferramenta 

MATLAB. Ao final da rotina, são fornecidos os pesos da RNA, que irão ser otimizados pelo 



56 

 

  

método de Evolução Diferencial, as funções objetivo, e o erro desnormalizado para cada offset 

e tração máxima. 

No processo de treinamento e validação da RNA foi escolhida uma população de 200 

indivíduos, para que se alcance resultados próximos dos obtidos pela ferramenta de elementos 

finitos. 

Com o objetivo de avaliar e verificar a performance dos métodos, foi feita a análise do 

erro quadrático médio (MSE) da melhor rodada de cada offset e da tração máxima. 

 

Tabela 8 - Resultados para o offset1 com o uso de diferentes valores para os parâmetros 

Nº de 

Indivíduos Gerações 

Média 

(DE) 

Melhor 

Rodada 

(DE) F Cr 

25 2000 8,85 8,85 0,4717 0,8803 

50 2000 4,17 4,16 0,4717 0,8803 

75 2000 2,62 2,62 0,4717 0,8803 

100 2000 3,28 3,17 0,4717 0,8803 

200 2000 2,16 2,16 0,2 0,8 

200 2000 2,78 2,74 0,7 0,8 

300 2000 2,16 2,16 0,2 0,8 

 

 

A Tabela 8 mostra o resultado da série de testes feita para o caso do offset1, a fim de 

encontrar os melhores valores para os parâmetros de otimização do DE. Os valores iniciais para 

F=0,4717 e Cr=0,8803 foram escolhidos dentro dos valores recomendados por Pedersen (2010). 

A taxa de mutação F, como dita na seção 4.4, influencia diretamente na velocidade de 

convergência e na diversidade da população. Se o valor do parâmetro é muito baixo, a 

convergência é alcançada rapidamente, porém a diversidade diminui, prejudicando a busca por 

um ótimo local (ZARTH, 2010). Posto isso, esses testes foram realizados com o propósito de 

analisar a influência da taxa de mutação F sobre o erro de otimização. 

Pelos valores obtidos para o erro da Melhor Rodada do offset1, apresentados na      

Tabela 8, nota-se que em altas taxas (F=0,7), o erro desnormalizado aumenta, enquanto que, 

com F=0,2 obtém-se um menor erro. Em conformidade com a literatura, de que valores 



57 

 

  

mínimos restringem o processo evolutivo, a taxa de mutação escolhida para a execução dos 

experimentos com os outros offsets e com a tração máxima foi F=0,2. 

Em relação à taxa de cruzamento Cr, para encontrar uma boa convergência foi adotado 

o valor de 0,8, conveniente ao proposto por Storn e Price (1997), que propõe um valor no 

intervalo de [0,8; 1]. 

Para o número de indivíduos, verificando a qualidade da resposta utilizando diversas 

quantidades, os experimentos indicam que melhores resultados foram encontrados para uma 

população de 200 indivíduos. Aumentou-se para 300 indivíduos com a intenção de melhorar o 

erro desnormalizado, porém obteve o mesmo resultado que para 200 indivíduos, o que torna 

conveniente adotar NI=200 indivíduos, pois um aumento da população iria apenas elevar o 

custo computacional, aumentando o número de análises das funções objetivo, e tornando o 

processo exaustivo e sem ganho em termo de resposta. 

Após os parâmetros de otimização serem estabelecidos para a implementação em todos 

os offsets e na tração máxima, uma série de experimentos foram realizados no software 

MATLAB com o propósito de comparar, ao final dos experimentos, os resultados obtidos pelo 

treinamento da RNA e pelo método de Evolução Diferencial. 

 

Tabela 9 - Resultados para o MSE obtidos pelo treinamento da RNA e pelo algoritmo DE 

 

RESULTADOS 

 

MSE – Média 

RNA 

 

MSE – Média 

DE 

MSE – Melhor 

Rodada RNA 

MSE – 

Melhor 

Rodada DE 

Offset1 3,06 2,16 2,179 2,16 

Offset2 5,07 4,02 4,05 4,02 

Offset3 4,81 3,36 4,36 3,35 

Ofsset4 3,90 2,67 2,94 2,67 

Offset5 5,32 4,18 4,23 4,18 

Offset6 6,76 4,76 5,05 4,76 

Offset7 5,19 4,31 4,57 4,31 

Offset8 3,31 2,59 2,81 2,59 

Tração Máxima 6,34x10-2 1x10-2 3,39x10-2 1x10-2 

 



58 

 

  

Analisando os resultados da Tabela 9, percebe-se que o com o uso do algoritmo de 

Evolução Diferencial conseguiu-se uma sensível melhora na qualidade do erro desnormalizado 

em relação ao obtido pela RNA. Essa comparação permite avaliar a superioridade de um 

modelo sobre o outro, uma vez que, com o emprego da otimização pelo método DE, os valores 

para o erro desnormalizado foram minimizados. 

Vale frisar que, para validar a performance dos métodos apresentados, eles devem 

possuir configurações semelhantes, o uso dos mesmos parâmetros, no caso estudado, o mesmo 

número de indivíduos, que foi determinado como NI=200 indivíduos, para que assim pudessem 

ser comparados.  

 

  



59 

 

  

6 RESULTADOS 

 

Neste item são apresentados os resultados dos testes de otimização dos erros dos offsets 

e da tração máxima através uso do algoritmo de Evolução Diferencial aplicado nas funções 

objetivo definidas por meio do treinamento de uma RNA. 

A abordagem proposta foi desenvolvida no software MATLAB, onde foi modelado um 

algoritmo de Evolução Diferencial empregando os parâmetros já determinados nos capítulos 

anteriores. A performance da otimização pelo método DE e do treinamento da RNA são 

apresentados, nessa seção, na forma de gráficos, assim como os resultados obtidos pela 

ferramenta de elementos finitos. A análise dos gráficos permite uma comparação do 

desempenho entre os métodos usados para otimização e a ferramenta de elementos finitos. 

Com o intuito de fazer uma análise mais crítica e precisa, os resultados foram agrupados 

em dois conjuntos. O primeiro reúne a evolução do erro quadrático médio ao longo das 2000 

gerações para os offsets e para a tração máxima. O segundo conjunto compreende os gráficos 

que fazem uma relação entre os resultados alcançados pelo método DE e pela RNA com os do 

FE. Nesse último grupo, é feito um estudo sobre a convergência dos pontos no gráfico, que 

representam os offsets e a tração máxima, para avaliar se o método proposto para a otimização 

(no caso o DE) apresenta resultados satisfatórios comparados aos da RNA.  

 

6.1. Análise da Evolução do MSE pelo Algoritmo DE 

 

Durante a execução da rotina do método de otimização, é gerado ao final do processo 

erros de treinamento, no caso, o MAE (acrônimo do nome original em inglês mean absolute 

error) e o MSE (acrônimo do nome original em inglês mean squared error), os quais avaliam 

a qualidade de cada indivíduo. 

A eficiência do método de otimização DE pode ser analisada através da interpretação 

da evolução do MSE ao longo das 2000 gerações. Foi escolhido para a avaliação da aptidão de 

cada indivíduo o MSE, o qual permitiu qualificar quão bom foi o processo de minimização da 

função objetivo realizado pela implementação do algoritmo de evolução. 

As figuras a seguir ilustram os 9 casos estudados, considerando que há diferenças nos 

gráficos, pois, mesmo que os offsets e a tração máxima apresentem as mesmas funções objetivo 



60 

 

  

a serem minimizadas, o valor da constante “y1_step1.xoffset” varia para cada qual. Diante disso, 

temos diferentes erros desnormalizados para cada caso.  

Figura 26 - Evolução do MSE pelo algoritmo DE para o offset1 

 
                 

Figura 27 - Evolução do MSE pelo algoritmo DE para o offset2 

   
 



61 

 

  

                      

Figura 28 - Evolução do MSE pelo algoritmo DE para o offset3 

                     

 

Figura 29 - Evolução do MSE pelo algoritmo DE para o offset4 

                   



62 

 

  

                     

Figura 30 - Evolução do MSE pelo algoritmo DE para o offset5 

                    

                       

Figura 31 - Evolução do MSE pelo algoritmo DE para o offset6 

                     



63 

 

  

                     

Figura 32 - Evolução do MSE pelo algoritmo DE para o offset7 

                  
                     

Figura 33 - Evolução do MSE pelo algoritmo DE para o offset8 

                    
 

 

 



64 

 

  

Figura 34 - Evolução do MSE pelo algoritmo DE para a tração máxima 

 
 
 

Durante o processo de otimização, a função objetivo de cada indivíduo é chamada pela 

rotina do algoritmo DE 2000 vezes até que se alcance um valor ótimo para o erro MSE. A 

Figura 26 até a Figura 34 mostram a evolução do algoritmo para alcançar um conjunto de 

variáveis de decisão ótimas que conduzam à minimização das funções objetivo, e no final um 

menor erro. 

A respeito do número de gerações, nota-se que a partir da 1000ª geração não há mais 

mudanças bruscas no MSE, não alterando significativamente o valor do erro. Porém, se forem 

analisados os números obtidos pelo MATLAB, a convergência do erro MSE da melhor rodada 

e o MSE da média das rodadas só é alcançada, pela maioria dos 9 casos estudados, ao final das 

2000 gerações, havendo algumas exceções (offset1, offset7 e tração máxima) que atingiram a 

convergência antes da execução das 2000 iterações. Logo, para ter a mesma base de número de 

gerações, foi estabelecido que somente a partir da 2000ª geração a rotina deve ser encerrada. 

 

 



65 

 

  

Para esse problema de otimização, após fazer a análise dos gráficos, verifica-se que, a 

partir da 2000ª geração o processo torna-se desvantajoso, pois a execução do algoritmo fica 

exaustiva depois que o valor do MSE – Melhor Rodada e MSE – Média se convergem, não há 

mais evolução nos resultados, sua continuidade apenas irá demandar tempo e alto custo 

computacional, sem otimizações significativas para o processo de minimização da função 

objetivo. 

 

6.2. Análise dos Resultados da RNA e do Algoritmo DE 

 

Os gráficos adiante exibem os resultados gerais obtidos pelo treinamento da RNA e pela 

evolução do algoritmo DE, onde ambos usaram uma população de 200 indivíduos na execução 

da rotina, para que assim pudessem ser comparados. 

O objetivo é verificar qual método conduz a uma maior convergência dos pontos 

próxima à reta vermelha que corta cada um dos gráficos, onde uma maior proximidade à reta 

significa que os resultados alcançaram valores satisfatórios, ou seja, os offsets e a tração 

máxima gerados por meio do algoritmo DE e pelo treinamento da RNA apresentaram valores 

admissíveis tanto quanto os gerados pela ferramenta FE. 

A seguir são apresentados os resultados para cada offset e para a tração máxima. 



66 

 

  

Figura 35 - Comparação entre o resultado da RNA e do FE para o offset1 

            

 

Figura 36 - Comparação entre o resultado do DE e do FE para o offset1 

        



67 

 

  

Figura 37 - Comparação entre o resultado da RNA e do FE para o offset2 

          

 

Figura 38 - Comparação entre o resultado do DE e do FE para o offset2 

  



68 

 

  

            

Figura 39 - Comparação entre o resultado da RNA e do FE para o offset3 

           

Figura 40 - Comparação entre o resultado do DE e do FE para o offset3 

                        



69 

 

  

Figura 41 - Comparação entre o resultado da RNA e do FE para o offset4 

   

Figura 42 - Comparação entre o resultado do DE e do FE para o offset4 

         



70 

 

  

Figura 43 - Comparação entre o resultado da RNA e do FE para o offset5 

            

 

Figura 44 - Comparação entre o resultado do DE e do FE para o offset5 

           



71 

 

  

Figura 45 - Comparação entre o resultado da RNA e do FE para o offset6 

           

         

Figura 46 - Comparação entre o resultado do DE e do FE para o offset6 

                  



72 

 

  

Figura 47 - Comparação entre o resultado da RNA e do FE para o offset7 

          

 

Figura 48 - Comparação entre o resultado do DE e do FE para o offset7 

                   



73 

 

  

Figura 49 - Comparação entre o resultado da RNA e do FE para o offset8 

           

 
Figura 50 - Comparação entre o resultado do DE e do FE para o offset8 

           



74 

 

  

               
Figura 51 - Comparação entre o resultado da RNA e do FE para a tração máxima 

           
 
 
                 

Figura 52 - Comparação entre o resultado do DE e do FE para a tração máxima 

            



75 

 

  

          

Observa-se através da comparação entre os resultados da otimização pelo algoritmo DE 

e pelo treinamento da RNA, que o emprego do método DE proporciona uma melhora nos 

resultados, uma vez que há maior convergência dos pontos próximos à reta vermelha.  

O melhor desempenho obtido pelo método DE foi alcançado devido a uma escolha ideal 

dos valores para os parâmetros de otimização, tais como: F, Cr, número de gerações e tamanho 

da população. Uma escolha inadequada para esses parâmetros poderia resultar em soluções 

insatisfatórias para serem empregadas no sistema de ancoragem. 

 Por meio de uma avaliação de cada offset e da tração máxima, nota-se que, há uma 

semelhança na disposição com que os pontos se distribuem ao longo da reta vermelha nos 

gráficos dos resultados do treinamento da RNA e da otimização pelo método DE, isso se deve 

ao fato de que a otimização feita pelo algoritmo DE utiliza os dados obtidos pelo treinamento 

da RNA para obter as funções objetivo, para assim ocorrer o processo de evolução. 

No gráfico da tração máxima a evolução não está visivelmente clara devido aos baixos 

valores obtidos pela RNA e pelo DE, ambos na casa de 10-2, porém o bom desempenho do DE 

pode ser comprovado pela análise da Tabela 9. 

 Por fim, a metodologia proposta de otimização pelo método DE apresentou resultados 

relativamente bons comparados aos da RNA, devido à proximidade dos resultados alcançados 

pelo DE com os obtidos pela ferramenta FE, fundamentados na convergência dos pontos 

próximos à reta vermelha do gráfico. 

 Entretanto, os bons resultados do método DE foram alcançados sob o custo de uma lenta 

convergência, precisando, em média, cerca de 30 horas para que ocorresse a evolução de cada 

offset e tração máxima, enquanto o treinamento da RNA durou na faixa de 10 minutos. Mas, 

em comparação à análise feita pela ferramenta FE, ainda assim o custo computacional do 

método DE é bem mais baixo; mesmo que demore um pouco mais em relação à RNA, o método 

irá fornecer resultados mais precisos. 

 

  

  



76 

 

  

7 CONCLUSÃO 

 

Para a otimização de uma rede neural aplicada no sistema de ancoragem de plataformas 

flutuantes, o presente trabalho propôs o uso do método de Evolução Diferencial, o qual teve 

como propósito minimizar as funções objetivo obtidas pelo treinamento da RNA. Tanto o 

treinamento da rede neural, quanto a evolução do DE foram modelados e executados no 

software MATLAB.  

 O foco principal deste estudo está contextualizado na integração entre o uso de uma rede 

neural e o algoritmo de evolução DE para a busca de valores para os offsets e para a tração 

máxima próximos aos encontrados pela ferramenta numérica computacional baseada em 

elementos finitos, porém com um menor custo computacional. 

No modelo proposto, considerou-se o tempo de execução da rotina de otimização como 

a medida da velocidade de convergência, enquanto que para a RNA o tempo foi medido pela 

velocidade em que se gera as variáveis de decisão e a função objetivo ao final da rede. De 

acordo com essa medida de desempenho, o DE foi mais lento em todos os experimentos 

comparados à RNA. Entretanto, a técnica do DE ainda apresentou um tempo de execução 

satisfatório quando comparado ao FE, tornando sua aplicação nos sistemas de ancoragem 

bastante viável. 

Além de um menor custo computacional, nota-se também que com a evolução do 

procedimento de execução do DE há um decaimento nos valores dos erros MSE e uma maior 

convergência dos pontos no gráfico dos resultados comparados ao FE, indicando valores 

factíveis para os offsets e para a tração máxima. 

A escolha pelo algoritmo de otimização DE, como dito dos capítulos anteriores, deve-

se pela sua facilidade de desenvolvimento e aplicação em problemas de engenharia, e de acordo 

com esse trabalho, mostrou-se também de fácil implementação e uso simples e conciso, em 

virtude de possuir poucos parâmetros de controle a serem ajustados, além de apresentar uma 

boa convergência dos resultados, atestando a sua eficácia. 

Em relação aos valores adotados pelos parâmetros do DE, a escolha de um conjunto 

ótimo de valores que permitissem uma boa otimização exigiu o teste da rotina do algoritmo 

diversas vezes até que se achassem valores cabíveis, indicados pela literatura, e que ao mesmo 

tempo proporcionassem benefícios para a minimização das funções objetivo. 

 



77 

 

  

De fato, a análise dos resultados evidencia o quão eficaz é o método de otimização pelo 

algoritmo DE, no entanto, para sua aplicação real nos sistemas de ancoragem, deve ser feita 

uma avaliação mais crítica sobre a viabilidade da implantação do algoritmo evolutivo DE no 

lugar da ferramenta computacional dos elementos finitos. Deve-se levar em conta também a 

existência de fatores externos que inviabilize a validação dos resultados, os quais podem sempre 

estarem sujeitos a restrições. 

Neste contexto, a aplicação do método DE como técnica de otimização apresenta-se 

como uma ferramenta útil no meio tecnológico aliado à indústria de petróleo. Embora ainda 

não muito usada na área offshore, o uso do DE em problemas de otimização tem grande 

potencial, por ser capaz de auxiliar na análise da eficiência dos sistemas de ancoragem de forma 

rápida e apropriada. 

Para futuros trabalhos, sugere-se a pesquisa por novos métodos que acelerem a 

convergência, e que ao mesmo tempo diminuam o custo computacional ainda mais em relação 

ao obtido pelo DE, sem que possam influenciar negativamente a otimização do processo; o 

desenvolvimento de meta-modelos para serem usados no processo de otimização do sistema de 

ancoragem, que além de proporcionarem a redução do custo computacional, podem facilitar o 

processo de otimização combinado ao algoritmo de Evolução Diferencial; e por fim, 

recomenda-se o teste de outros critérios de parada para o método DE, uma vez que a escolha 

pelo número máxima de gerações (Ger = 2000 gerações) demandou elevado tempo de execução.   

 

 

 

 

 

 

 

 

 

 

 



78 

 

  

8 REFERÊNCIAS BIBLIOGRÁFICAS 

 

AGUIAR, C.S. Análise de Vibrações Livres em Estruturas Offshore com Ênfase em Linhas de 

Ancoragem, Projeto Final de Graduação, EP/UFRJ, Rio de Janeiro, RJ, Brasil, 2005. 

API, API RP 2SK Recommended Practice for Planning, Designing and Analysis of 

Stationkeeping Systems for Floating Structures, 2 ed., Washington, USA, American Petroleum 

Institute, 2005. 

CHENG, S. L., HWANG, C. Optimal approximation of linear systems by a differential 

evolution algorithm, IEEE Transactions on Systems, Man, and Cybernetics-Part A: Systems 

and Humans, v. 31, n. 6, pp. 698-707, 2001. 

 

CYBENKO, G. Approximation by superpositions of a sigmoidal function. Mathematics of 

Control, Signals and Systems; 2:303–14, 1989 

 

ELLWANGERll, G.B. Apostila do Curso de Offshore Mestrado, MBP, MSO, 2004. 

DELGADO, E.R., de PINA, A.A., MONTEIRO, B.F., ALBRECHT, C.H., JACOB, B.P. 

Artificial Neural Networks meta-models for prediction of vessel offsets and mooring lines 

tensions of floating production systems. In: Proceedings of the 36st Iberian Latin-American 

Congress on Computational Methods in Engineering, Rio de Janeiro, RJ, Brazil, 2015. 

JAIN, A.K., MAO, J., MOHIUDDIN, K.M. Artificial neural networks: a tutorial. Comput. 

IEEE March 31–44, 1996. 

HASSOUN, M.H. Fundamentals of Artificial Neural Networks. MIT Press, Cambridge, MA, 

1995. 

HAYKIN, S. Neural networks – a comprehensive foundation. New Jersey: Prentice Hall; 2001. 

KAWASAKI, P.Y. Análise de Linhas de Ancoragem de Plataformas Oceânicas considerando 

diversos Tramos e o Trecho enterrado da Linha, Projeto Final de Graduação, EP/UFRJ, Rio de 

Janeiro, RJ, Brasil, 2010. 

LACERDA, T. A.G. Análise de Sistemas de Ancoragem de Plataformas Flutuantes, Projeto 

Final de Graduação, EP/UFRJ, Rio de Janeiro, RJ, Brasil, 2005. 

MAZAHERI, S., DOWNIE, M.J. Response-based method for determining the extreme 

behaviour of floating offshore platforms. Ocean Eng; 32:363–93, 2005. 

MCCULLOCH, W.S., PITTS W. A logical calculus of the ideas immanent in nervous activities. 

Bull Math Biophys; 5:115–33, 1943. 

MONTEIRO, B.F. Otimização de Sistemas de Ancoragem através do Método do Enxame de 

Partículas com base em uma Metodologia de Projeto Integrado, Tese de Doutorado, 

COPPE/UFRJ, Rio de Janeiro, RJ, Brasil, 2014. 

OK D., PU Y., INCECIK A. Artificial neural networks and their application to assessment of 

ultimate strength of plates with pitting corrosion. Ocean Eng; 34:2222–30, 2007. 



79 

 

  

PAIVA, A. L. O. Aplicação do Método de Evolução Diferencial à Otimização de um Ciclo de 

Refrigeração por Compressão de Vapor de Dois Estágios através da Análise Exergética, 

Dissertação de Mestrado, COPPE/UFRJ, Rio de Janeiro, RJ, Brasil, 2011.  

PEDERSEN, M. E. H. Good parameters for Differential Evolution, Techinal Report HL1001, 

Hvass Laboratories, 2010. 

 

PETROBRAS, Batemos novo recorde de profundidade d’água na perfuração de poço da Bacia 

de Sergipe-Alagoas, Disponível em:                                                                                                                           

&amp;lt;http://www.petrobras.com.br/fatos-e-dados/batemos-recorde-de-profundidade-em-poco-da-

bacia-se-al.htm&gt;. Acesso em 15 de junho de 2017. 

PINA, A.C., de PINA, A.A., ALBRECHT, C.H., de LIMA, B.S.L.P., JACOB, B.P., ANN-based 

surrogate models for the analysis of mooring lines and risers, Appl Ocean Research, 2013, 

41:76-86,&amp;lt;http://dx.doi.org/10.1016/j.apor.2013.03.003&gt;. 

ROSENBLATT, F. The perceptron: A probabilistic model for information storage and 

organization in the brain, Psychological Review, vol. 65, pp. 386-408, 1958. 

RUMELHART, D. E., HINTON, G. E., WILLIMS, R. J. Learning internal representations by 

error propagation, in Rumelhart, D. E., and McClelland, J. L. (eds.), Parallel Distributed 

Processing: Explorations in the Microstructure of Cognition I, pp. 318-362, MIT Press, 

Cambridge MA, 1986. 

 

SANCHES, L.C.C. A Utilização de Navios na Produção de Petróleo – FPSO’s,  Engenharia 

em Revista, pp. 24-26, Ano 109, Maio, No. 10,Clube de Engenharia, R.J. Brasil, 1996. 

 

STORN, R.; PRICE, K. Differential evolution - a simple and efficient adaptive scheme for 

global optimization over continuous spaces, Berkeley, University of California, 1995, 

Technical Report TR-95-012, ICSI,&amp;lt;http://http.icsi.berkeley.edu/~storn/litera.html&gt;. 
 

STORN, R. On the Usage of Differential Evolution for Function Optimazation, 

In: Biennal Conference of the North American Fuzzy Information Processing Society 

(NAFIPS), Berkeley, pp. 519 – 523, 1996. 

 

STORN, R., PRICE, K. Differential Evolution – A Simple and Efficient Heuristic for Global 

Optimization over Continuous Spaces, Journal of Global Optimization, n. 11, pp. 341-359, 

1997. 

 

TRELEA, I. C. The particle swarm optimization algorithm: convergence analysis and 

parameter selection. Elsevier Science, 2002. 

 

WIDROW, B., RUMELHART, D.E., LEHR, M.A. Neural networks: applications in Industry 

Bus Sci Commun ACM;37(3):93–105, 1994. 

 

YASSERI, S.F., BAHAI, H., BAZARGAN, H., AMINZADEH, A. Prediction of safe sea-state 

using finite element method and artificial neural networks. Ocean Eng;37:200–7, 2010. 

 



80 

 

  

ZARTH, A. M. F. Otimização evolucionária multimodal de redes neurais artificiais com 

evolução diferencial, Dissertação de Mestrado, UFPE, Recife, 2010. 


</field>
	</doc>
</add>