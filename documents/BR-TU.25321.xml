<?xml version="1.0" encoding="utf-8"?>
<add>
	<doc>
		<field name="docid">BR-TU.25321</field>
		<field name="filename">9986_3899_7552.pdf</field>
		<field name="filetype">PDF</field>
		<field name="text">UNIVERSIDADE DA BEIRA INTERIOR
Faculdade de Engenharia
Departamento de Engenharia Electromecânica
Dimensionamento e simulação de um robô anfíbio biomimético
Sandra Raquel da Costa Godinho
Dissertação para obtenção do Grau de Mestre em
Engenharia Eletrotécnica e de Computadores: Ramo Sistemas Biónicos
(2° ciclo de estudos)
Orientador: Prof. Doutor Pedro Dinis Gaspar
Departamento de Engenharia Eletromecânica
Universidade da Beira Interior
Covilhã, Portugal
Covilhã e UBI, Outubro de 2014
Agradecimentos
Agradeço desde já ao meu orientador, Professor Doutor Pedro Miguel Dinis Gaspar, Professor Auxiliar no Departamento de Engenharia Eletromecânica da Universidade da Beira Interior, por toda a orientação, conhecimento e ânimo proporcionado ao longo do desenvolvimento de todo o trabalho.
A todos os docentes e funcionários da Universidade da Beira Interior, pelo conhecimento e ajuda disponibilizados, que me permitiram elaborar a dissertação desenvolvida.
Um agradecimento especial aos meus pais, Conceição e Rui, pelo suporte e incentivo durante toda a formação académica.
Ao Nelson Jorge, Paula Sousa e Virginie Felizardo, pelo seu apoio, influência e conselhos eruditos como antigos alunos da Universidade da Beira Interior.
Às minhas amigas que me acompanham intensivamente desde o primeiro ano de Universidade -Elisabete, Micaela, Nádia, Nanci, Raquel e Sara - por todos os momentos inesquecíveis.
A todos os amigos e colegas que participaram no meu percurso académico e o tornaram tão especial e tão único.
Resumo
Este trabalho tem como principal objetivo destacar e avaliar a tartaruga-de-água-doce (Trachemys scripta elegans) como modelo de bioinspiração para o desenvolvimento de um robô biomimético, comparativamente com o mais estudado modelo baseado em tartaruga-marinha.
Com o auxílio de um programa de simulação para robôs é comparado o desempenho do modelo virtual da tartaruga de água-doce com o modelo da tartaruga marinha e retiradas as respetivas conclusões. Será também avaliada a viabilidade do simulador para o desenvolvimento das variadas características de um sistema robotizado.
Foi realizado um estudo acerca dos aspetos estruturais e funcionais dos modelos biológicos, dos quais se retiraram os aspetos vantajosos para serem adaptados ao sistema robotizado. Foram abordadas as principais componentes para construção de um robô (plataforma, atuadores e sensores, etc.) e realizada uma exploração profunda das funcionalidades do simulador.
Palavras-chave
Robô, Tartaruga, Anfíbio, Água-Doce, Marinha, Simulação, Biomimético, Cinemática, Carapaça, Pesc
Abstract
The main goal of this work consists in highlighting and evaluating a freshwater turtle (Trachemys scripta elegans) as a bioinspiration model for a biomimetic robot, comparatively to the most recurrent model (marine turtle model based robots).
With the aid of a simulation software specially built for robotics, the performance of both virtual robot models (marine and freshwater) will be compared and conclusions will follow. The feasibility of the simulation software for developing the various features of a robot will also be evaluated.
After extensive research about structural and functional aspects of both turtle types, the advantageous characteristics were applied to the robotic system model. The main components of a robot were approached (platform, actuators, sensors, etc.) and a deep exploration of the software functionalities was carried out.
Keywords
Robot, Turtle, Amphibious, Freshwater, Marine, Simulation, Biomimetic, Kinematics, Shell, Neck.
Índice
Agradecimentos....................................................................i
Resumo..........................................................................iii
Abstract..........................................................................v
Índice..........................................................................vii
Lista de Figuras.................................................................xi
Lista de Tabelas...............................................................xiii
Nomenclatura.....................................................................xv
1.	Introdução...................................................................17
1.1.	Perspetiva Histórica.....................................................17
1.2.	Motivação para Desenvolver um	Robô	Biomimético...........................18
1.2.1.	Relevância da Característica Anfíbia................................19
1.2.2.	Inspiração em Tartarugas-de-Água-Doce...............................19
1.2.3.	Potencial da combinação Anfíbio/Biomimético.........................20
1.3.	O problema em estudo e a sua relevância..................................22
1.4.	Objetivos da dissertação.................................................22
1.5.	Visão Geral e Organização da Dissertação.................................22
2.	Estado da arte...............................................................25
2.1.	Robôs	Biomiméticos......................................................25
2.1.1.	Robôs Anfíbios......................................................25
2.1.2.	Robôs Tartaruga.....................................................26
2.1.3.	Robôs Anfíbios Tartaruga .......................................... 29
2.2.	Robôs	Anfíbios Tartaruga - Aspetos Relevantes ......................... 29
2.2.1.	Apêndices Propulsores ............................................. 29
2.2.2.	Sistemas de Submersão ............................................. 29
2.2.3.	Componentes Elétricos/Eletrónicos ................................. 30
2.3.	Nota Conclusiva ....................................................... 32
3.	Modelo de bioinspiração......................................................33
3.1.	Características das Tartarugas..........................................33
3.2.	Tartaruga-de-Água-Doce VS Tartaruga-Marinha.............................34
3.2.1.	Tartarugas-Marinhas.................................................35
3.2.2.	Tartarugas-de-Água-Doce.............................................36
3.3.	Anatomia.................................................................37
3.3.1.	Morfologia..........................................................37
3.3.2.	Sistema Esquelético.................................................37
3.3.3.	Sistema Muscular....................................................40
3.4.	Filogenética.............................................................43
3.5.	Terminologia do Movimento da Tartaruga de Água-Doce......................43
3.6.	Nota conclusiva..........................................................45
4.	Estratégias e Ferramentas Computacionais......................................47
4.1.	Abordagem de Desenvolvimento.............................................47
4.1.1.	Desenvolvimento de um Robô Biomimético..............................47
4.1.2.	Interação Robô - Ambiente e Simulação...............................48
4.1.3.	Definição Global do Robô............................................50
4.2.	Ferramentas Computacionais...............................................50
4.2.1.	Matlab - Curve Fitting Tool.........................................50
4.2.2.	Solidworks..........................................................50
4.2.3.	V-REP...............................................................51
4.3.	Nota Conclusiva ........................................................ 58
5.	Cinemática e Dinâmica.........................................................59
5.1.	Dinâmica.................................................................59
5.1.1.	Construção dos Modelos Dinâmicos....................................59
5.2.	Cinemática...............................................................61
5.2.1.	Análise da Locomoção................................................61
5.2.2.	Tratamento de Dados.................................................71
5.3.	Nota Conclusiva..........................................................73
6.	Sensores e Atuadores..........................................................75
6.1.	Sensores ............................................................... 75
6.1.1.	Sensores de Proximidade.............................................75
6.1.2.	Sensor de visão.....................................................76
6.2.	Atuadores................................................................77
6.2.1.	Elos e Juntas.......................................................77
6.2.2.	Parâmetros Físicos das Juntas.......................................79
6.2.3.	Componentes reais...................................................79
6.3.	Nota Conclusiva...........................................................82
7.	Programação e Simulação........................................................83
7.1.	Programação da Locomoção..................................................83
7.1.1.	Trajetórias Importadas...............................................83
7.1.2.	Trajetórias por Vetores..............................................84
7.1.3.	Sequência de Posições................................................84
7.2.	Navegação e Velocidade....................................................85
7.3.	Simulação de Ambiente Aquático............................................85
7.4.	Bloqueio Servo-visual de Alvo.............................................86
7.5.	Mecanismo de Exploração Adicional.........................................88
7.6.	Interface Utilizador Personalizada........................................89
7.7.	Nota Conclusiva...........................................................90
8.	Conclusões.....................................................................91
8.1.	Resumo da Dissertação Realizada...........................................91
8.2.	Conclusões................................................................91
8.3.	Sugestões de trabalhos futuros............................................92
8.4.	Nota Conclusiva...........................................................93
Referências bibliográficas.........................................................95
Anexos............................................................................. 100
Lista de Figuras
Fig.1 - Um dos robôs tartaruga construídos por Grey Walter.............................. 18
Fig.2 - Áreas de aplicação de um robô anfíbio biomimético................................21
Fig.3 - Robôs biomiméticos anfíbios: a) AmphiRobot-II, b) robô inspirado no lagarto basilisco e
c)	Salamandra Robótica II.............................................................26
Fig.4 - Robôs tartaruga: a) Finnegan, b) Naro-tartaruga, c) Turtle-like Submergence Vehicle, d) Amphibian Robotic Turtle, e) RT-I, f) FlipperBot, g) Flipper Propelled Turtle Robot, h) Madeleine, i) MiniTurtle-1......................................................27
Fig.5 - Sistemas de submersão: a) simples [aq7], b) dois pistões e c) Insuflável.........30
Fig.6 - Exemplo de tartaruga marinha: a) trajetória de um batimento, b) esquema de um ciclo. ................................................................................36
Fig.7 - Trajetória da barbatana para: a) tartaruga de água doce, b) tartaruga marinha..36
Fig.8 - Modos de locomoção utilizados principalmente por A) tartarugas marinhas, B) tartarugas de água doce....................................................................37
Fig.9 - Sistema esquelético: vista ventral...............................................38
Fig.10 - Estrutura da carapaça: disposição das placas queratinosas exteriores............39
Fig.11 - Coluna vertebral cervical de uma tartaruga que retrai o pescoço verticalmente.40
Fig.12 - Sistema muscular: à esquerda a vista ventral, à direita vista lateral...........41
Fig.13 - Comparação das exigências musculares individuais durante os ciclos “andar” e “nadar”.
...................................................................................43
Fig.14 - Exemplar de Trachemys scripta elegans...........................................42
Fig.15 - Vista lateral do membro posterior esquerdo de a) Chrysemys scripta durante um passo em terra; b) Trionyx spinifer durante um ciclo de nado..........................44
Fig.16 - Classificação dos movimentos de uma barbatana: a) elevação/depressão b) protração/retração, c) rotação e d) flexão......................................45
Fig.17 - Fluxograma do desenvolvimento de um robô biomimético de tartaruga...............48
Fig.18 - Esquema da interação que ocorre durante simulação...............................39
Fig.19 - Elementos da interface..........................................................51
Fig.20 - Barra de ferramentas............................................................52
Fig.21 - Hierarquia das cenas............................................................53
Fig.22 - Imagens raios-X de a) tartaruga marinha e b) tartaruga-de-orelhas-vermelhas.....60
Fig.23 - a) Modelo CAD da tartaruga-marinha (em cima) e modelo da tartaruga-de-água-doce (em baixo). b) Modelo dinâmico da tartaruga-marinha (em cima) e modelo dinâmico da tartaruga-de-água-doce (em baixo)...............................................60
Fig.24 - Representação esquemática da cinemática direta e inversa........................61
Fig.25 - Trajetória de protração/retração da articulação umeral (durante o nado) para IC de 95%.............................................................................64
Fig.26 - Trajetória de elevação/depressão da articulação umeral (durante o nado) para IC de 95%.............................................................................64
Fig.27 - Trajetória de flexão da articulação do cotovelo (durante o nado) para IC de 95%.65
Fig.28 - Trajetória de protração/retração da articulação femoral (durante o nado) para IC de 95%.............................................................................67
Fig.29 - Trajetória de elevação/depressão da articulação femoral (durante o nado) para IC de 95%.............................................................................67
Fig.30 - Trajetória de protração/retração da articulação femoral (durante a marcha) para IC de
95%.......................................................................................68
Fig.31 - Trajetória de elevação/depressão da articulação femoral (durante a marcha) para IC de 95%............................................................................68
Fig.32 - Trajetória de flexão da articulação do joelho (durante	o nado)	para	IC	de 95%.....70
Fig.33 - Trajetória de flexão da articulação do joelho (durante	a marcha) para	IC de	95%.70
Fig.34 - Esquema de obtenção de pontos para os caminhos.........................................71
Fig.35 - Posicionamento dos dummies no modelo virtual...........................................73
Fig.36 - Sensor de proximidade..................................................................77
Fig.37 - Sensor de visão........................................................................77
Fig.38 - Elos e juntas da pata anterior esquerda (à esquerda)	e do pescoço/cabeça	(direita) do
modelo anfíbio............................................................................79
Fig.39 - Elos e juntas da cabeça, hidrofólio e palmípede........................................79
Fig.40 - Janela de diálogo das propriedades da junta............................................80
Fig.41 - Motor HS-5086WP da Hitec...............................................................81
Fig.42 - Motor Linear da ServoCity..............................................................82
Fig.43 - Sistema pan-tilt.......................................................................83
Fig.44 - Modelo anfíbio e respetivas trajetórias importadas.....................................85
Fig.45 - Sequencia dos movimentos dos dois modelo...............................................86
Fig.46 - Imagem do sensor de visão sem qualquer filtro..........................................89
Fig.47 - Imagem do sensor de visão com o filtro de cor seletiva	(à esquerda)	e	combinado com a
deteção de blobs (à direita)..............................................................89
Fig.48 - Comparação do comprimento dos pescoços completamente estendidos dos dois
modelos.........................................................................................90
Fig.49 - Pescoço retraído do modelo	anfíbio.....................................................90
Fig.50 - Interface Utilizador Personalizada.....................................................91
Lista de Tabelas
Tabela 1. Vantagens e desvantagens de diferentes tipos de movimentação.......... 19
Tabela 2. Parâmetros gerais dos robôs mencionados................................28
Tabela 3. Resumo dos componentes utilizados: GDL, motores, unidades de processamento, sensores e bateria...............................................................31
Tabela 4. Resumo dos robôs e modelos em que se inspiraram........................37
Tabela 5. Trajetórias necessárias vs. Trajetórias disponíveis na literatura......64
Tabela 6. Descrição da configuração da articulação do cotovelo...................67
Tabela 7. Parâmetros do motor HS-5086WP..........................................82
Tabela 8. Propriedades do motor linear...........................................83
Tabela 9. Propriedades do sistema pan-tilt.......................................84
Tabela 10. Parâmetros API de retorno da função de deteção de blobs...............90
Tabela 11. Vantagens e desvantagens da metodologia de programação utilizada......96
Nomenclatura
Geral:
g	Aceleração da gravidade, {9,81 m/s-2};
t	Tempo, [s];
m	Massa, [kg];
F	Força, [N];
Simbologia grega:
¿e	Variação de ângulo por iteração.
Acrónimos:
API	Application Programming Interface;
AUV	Autonomous Underwater Vehicle;
CAD	Computer Aided Design;
CSV	Comma Separated Values;
DLS	Damped Least Squares;
GDL	Graus de Liberdade;
IC	Intervalo de Confiança;
IK	Inverse Kinematics;
IMU	Inertia Measuring Unit;
PID	Proporcional, Integral e Derivativo;
ROS	Robot Operating System - Sistema Operativo para Robô;
STL	Stereolithography File Format;
1.	Introdução
Neste capítulo será retratada a motivação para o desenvolvimento de um robô anfíbio inspirado no modelo de uma tartaruga-de-água-doce (Trachemys scripta elegans), bem como o problema em estudo e respetiva relevância, objetivos e estrutura da dissertação.
&gt;
1.1.	Perspetiva Histórica
Desde tempos remotos que existem registos do desejo da humanidade construir máquinas/mecanismos/objetos que imitem a aparência, funcionalidade, cognição e capacidade de adaptação dos seres biológicos.
Em obras da antiga Grécia e judaicas da época medieval são expressas ideias da criação de seres funcionais a partir da matéria inanimada. Leonardo da Vinci (1478) [1], Jacques de Vaucanson (1738) e Joseph Faber (1830,1840) [2] criaram mecanismos para dotar brinquedos da capacidade de imitar comportamentos e funções animais.
Nos finais de 1800, Charles Babbage e Ada Byron inventaram o Motor Analítico, o percursor dos computadores [3]. Em 1946 foi criado o primeiro computador digital, o ENIAC [4]. Uns anos mais tarde, em 1950, Alan Turing escreveu um artigo acerca da inteligência de máquinas computorizadas no qual discute a possibilidade destas pensarem e aprenderem [5]. No mesmo ano, Grey Walter divulgou o seu projeto de dois robôs tartaruga, Elmer e Elsie, que eram capazes de detetar falta de luz, moverem-se para um local mais iluminado e aperceberem-se de obstáculos (Figura 1) [6], [7].
Figura 1 - Um dos robôs tartaruga construídos por Grey Walter [6].
É necessário também creditar os engenheiros da área da automação que apostaram em desenvolver novos mecanismos, conceitos e estratégias para melhorar a produção em massa, que acabaram por influenciar também a evolução em outros ramos da engenharia.
O desenvolvimento de robôs biomiméticos é muito mais viável agora graças aos atuais microprocessadores com elevada velocidade de computação, memória, largura de banda, algoritmos de controlo eficientes e novas ferramentas de software [8].
1.2.	Motivação para Desenvolver um Robô Biomimético
Um robô biomimético visa aplicar as características estruturais e funcionais vantajosas de um determinado ser biológico num sistema robotizado, combinando assim um organismo aperfeiçoado ao longo de milhões de anos através de seleção natural com a conveniência de uma máquina.
Durante o processo de transformar algo sintético num modelo o mais fiel possível ao natural ganham-se conhecimentos aprofundados acerca do ser em questão, bem como apreciação pela complexidade inerente do ser vivo [8]!
A biomimética tem evoluído bastante recentemente derivada da necessidade de mercado crescente para arranjar soluções mais eficientes e produtos inovadores, e é portanto uma área a apostar.
1.2.1.	Relevância da Característica Anfíbia
Um robô que não esteja limitado apenas a um modo de locomoção é automaticamente mais versátil. A utilização de patas em vez de rodas permite abranger uma variedade maior de terrenos, apesar de ser muito mais complexo. Na Tabela 1 estão descritas as vantagens e desvantagens de cada tipo de robô.
Tabela 1 - Vantagens e desvantagens de diferentes tipos de movimentação [9].
Vantagens	Desvantagens
Terrestre com patas	
Fiel ao modelo biológico; Maior atrito no contacto com o solo das patas relativamente às rodas; Capacidade de distribuir o peso de uma maneira mais uniforme ajustando os membros; Capacidade de movimentação em terreno acidentado.	Aumento da complexidade do design e controlo de locomoção; Exigência de mais potência face à locomoção com rodas; Maior custo face à locomoção com rodas.
Submergível com barbatanas	
Via de transporte muito abrangente; Aplicações de exploração marítima.	Necessidade de estanquicidade; Problemas de comunicação.
Anfíbio	
Elevada versatilidade/adaptabilidade; Maior número de funcionalidades/ aplicações.	Maior custo e complexidade.
1.2.2.	Inspiração em Tartarugas-de-Água-Doce
Animais como tartarugas, raias e pinguins nadam através de batimentos rítmicos das barbatanas, assemelhando-se ao voo das aves [10],[11]. Esta condição contrasta com o movimento oscilante de peixes e mamíferos aquáticos em que todo o corpo necessita de se movimentar e flectir. É portanto mais vantajoso, nomeadamente para simplificação da plataforma estrutural e controlo de movimentos, adaptar técnicas utilizadas por animais de corpo rígido, onde praticamente apenas as barbatanas se movem [12],[10].
As tartarugas apresentam uma família variada e adaptada a diferentes habitats (mar, rios, charcos, florestas e desertos são alguns exemplos). Podem ser divididas em três principais categorias: tartarugas-marinhas, tartarugas-terrestres e tartarugas-de-água-doce (cágados).
Embora sejam todas capazes de nadar ou andar, é a tartaruga-de-água-doce que consegue mais facilmente alternar entre meio terrestre e meio aquático, com manobrabilidade e velocidade
consideráveis. Estas características poderão ser obtidas por um robô que apresente uma estrutura e coordenação de movimento semelhante.
1.2.3.	Potencial da combinação Anfíbio/Biomimético
As aplicações de um robô anfíbio biomimético abrangem:
•	O sector militar: operações de vigilância, transporte de cargas e exploração de território inimigo;
•	Exploração: tanto num cenário de catástrofe (resgate e ponto de situação) como de recolha de informação e estudo de geologia, fauna e flora;
•	Conservação ambiental: a informação recolhida no âmbito das ciências da vida é um grande meio de sensibilização para questões ambientais. O robô pode estar equipado de sensores apropriados para realizar o mapeamento de grandezas físicas (monitorização de poluição) e ainda vigilância/inspeção;
•	Desenvolvimento tecnológico multidisciplinar: um robô biomimético requer a incorporação de áreas distintas como a biologia e a engenharia.
O facto do robô se assemelhar a um animal proporciona um grau de camuflagem natural, vantajoso para aplicações militares e exploração. Na Figura 2 estão esquematizadas as possíveis aplicações para um robô anfíbio biomimético.
Militares
Explorado
□ IQ LQG IA
J'r*+.
■&gt;
Material*
Geologia Geografia
■
Vigilância de RtMTVH
Natu rals
Mapastopoiógico*
Paleontologia
-	J
canaii zaçõo* Su baquMIcat de Plataformas Petrolíferas
*
Técnicas do 'Submersão
Desastres Natu ra Is: cheias etsunamis
Petroleiros
- _ -
i
Recursos
■ ■
EM&amp;amp;env olVi mento tecnológico mu Itiidii sei p linar
■ i.	■.	&gt;
Análise Biomecánica
interior do Tanque* de Armazenamento
■
ÍHaWtatS
zs
Poluição
Estudos com porta menta®
Inspecçâo (navios, canos, iona costeira I-
k
Eü pioraçao do Território Inimigo
■
Estudos
Anatómico*
Xj-Í—
...1™°“
Naufragio»
$«ntibiiMcao
■" k Aplicações
—
PretMM
\ :
V
CIÊNCIA S CQM PUTACHJ NAIS
Emigração Hayal J j Tr*fl«iJ
i—X
Petrolíferas
ur'*
Te m pe ratu ra
Ope rações de Salvamento 1^’
- . -*
Optim Izaçáo do Consumo Energético
Transporte de
Cargas
, -------
Vigilancia
....................
Locais Perigosos, Desconhecido* ou Radioativos
■
I	1
■&gt; VETERINÁRIA
—
X:

	Fauna
□wumontafifl da Vida Srelvagem	
MECÂNICA l&lt;-- -
1	r		..♦* :	***		&lt;íw
Atuadoro* Eficientes ■	-i	, • • ■ .‘ * X	: &gt;*’	•	Novas Estrategias de Céntrele &gt;	&gt;		Prog ressoe de I.A. - -
Figura 2 - Áreas de aplicação de um robô anfíbio biomimético.
1.3.	O problema em estudo e a sua relevância
A tartaruga-de-água-doce é um ser pouco explorado como modelo de robô, sendo que a maior parte se baseia no modelo marinho. Desenvolver o protótipo do robô biomimético anfíbio permite avaliar a viabilidade do modelo de uma tartaruga-de-água-doce face ao modelo marinho ou outros animais.
1.4.	Objetivos da dissertação
Os principais objetivos desta dissertação são:
•	Análise e compreensão do sistema biológico da Trachemys scripta elegans:
o Distinção e vantagens do modelo de bioinspiração;
o Seleção das características a serem aplicadas ao modelo computacional.
•	Desenvolvimento e simulação de um robô anfíbio biomimético em ambiente virtual:
o Utilização de programas de desenho assistido por computador e simulação de sistemas robotizados para desenvolver um protótipo virtual;
o Comparação com outros modelos.
1.5.	Visão Geral e Organização da Dissertação
A dissertação encontra-se estruturada segundo 9 capítulos, apresentados de seguida:
No Capítulo 1 - Introdução - é explicada a motivação para o tema, o problema em estudo e relevância e os objetivos desta dissertação.
O Capítulo 2 versa o - Estado da Arte - onde são apresentados e brevemente descritos os trabalhos mais relevantes que se podem relacionar com esta dissertação.
O Capítulo 3 apresenta o - Modelo de Bioinspiração - descrevendo algumas das características estruturais e funcionais do ser vivo a replicar.
No Capítulo 4 - Estratégias e Ferramentas - são resumidos os passos e ferramentas computacionais necessárias ao desenvolvimento do modelo robótico após a pesquisa realizada.
No Capítulo 5 - Cinemática e Dinâmica - são apresentados os dados das trajetórias obtidas em literatura e como foram tratados para se aplicar no modelo virtual, bem como a criação do modelo dinâmico.
No Capítulo 6 - Sensores e Atuadores - são mencionados os tipos e características dos sensores e atuadores em geral, bem como os que foram utilizados no simulador.
No Capítulo 7 - Programação e Simulação - são explicados o raciocínio dos programas e as experiências realizadas.
No Capítulo 8 - Conclusões - é feito o resumo de todo a dissertação bem como o balanço de todas as conclusões.
2.	Estado da arte
Neste capítulo serão apresentados os robôs bioinspirados em tartarugas já desenvolvidos, descrevendo as suas principais características como aspetos físicos, mecanismos de atuação e componentes elétricos/eletrónicos.
2.1.	Robôs Biomiméticos
Os robôs começaram por ter um aspeto muito característico, nada semelhante aos habituais seres vivos. Há um tempo considerável que se tenta antropomorfizar os robôs para que estes consigam realizar as mesmas tarefas que um ser humano. Mais recentemente têm sido desenvolvidos robôs que pretendem imitar outros seres vivos - ramo da biomimética.
2.1.1.	Robôs Anfíbios
O AmphiRobot-II é bioinspirado em peixes com nado carangiforme1 (como o salmão e o atum) e em golfinhos (nado dorso-ventral2), mas combina a utilização de rodas para se movimentar também em ambiente terrestre [13] (fig.xa). Floyd et. al. [14] escolheram o lagarto basilisco como abordagem inovadora para percorrer o meio aquático (fig.xb). Este lagarto tem a capacidade de correr sobre a água sem se afundar. O Salamandra Robotica II mimetiza uma salamandra, um animal que é naturalmente anfíbio e apresenta um nado anguiliforme3 que é complexo de simular [15] (fig.xc). Wang e colaboradores [16] efetuaram uma análise dinâmica para o desenvolvimento de um robô caranguejo para propósitos militares.
1	Carangiforme - ondulação realizada primariamente pela cauda, horizontalmente.
2	Nado dorso-ventral - propulsão realizada através da ondulação vertical do corpo.
3	Anguiliforme - propulsão que envolve a ondulação do corpo inteiro na horizontal. Definições retiradas de [17].
(a)	(b)
(c)
Figura 3 - Robôs biomiméticos anfíbios: a) AmphiRobot-II, b) robô inspirado no lagarto basilisco e c) Salamandra Robotica II, [13][14][15].
2.1.2.	Robôs Tartaruga
Grande parte dos robôs tartaruga baseia-se no modelo marinho como o Finnegan [18], Naro-tartaruga [19], Turtle-like Submergence Vehicle [20] e Amphibian Robotic Turtle [12]. Visam o desenvolvimento de sistemas com elevada eficiência propulsora via hidrofólios (patas dianteiras) auxiliado por vezes por palmípedes para direccionamento (patas traseiras).
O RT-I (Robotic Turtle I [21]) também se baseia no modelo marinho para nado, mas para percorrer terrenos é assumida uma locomoção semelhante ao modelo terrestre.
O FlipperBot [22] inspirou-se em tartarugas marinhas recém-nascidas para replicar a destreza com que se movimentam em ambientes granulares.
O Flipper Propelled Turtle Robot [10], o Madeleine [23] e MiniTurtle-I [24] foram inspirados em tartarugas-de-água-doce.
Na Figura 4 encontram-se ilustrados estes robôs tartaruga e na Tabela 2 estão resumidas alguns dos seus parâmetros gerais.
(b)
(a)
(d)
(c)
(f)
(g)
(h)
Rearlxfg-Flippcn
(i)
Figura 4 - Robôs tartaruga: a) Finnegan [18], b) Naro-tartaruga [19], c) Turtle-like Submergence Vehicle [20], d) Amphibian Robotic Turtle [12], e) RT-I [21], f) FlipperBot [22], g) Flipper Propelled Turtle Robot [10], h) Madeleine [23], i) MiniTurtle-I [24].
Tabela 2 - Parâmetros gerais dos robôs mencionados.
Robô	Peso (kg)	Tamanho (m)	Profundidade max, (m)	Velocidade (m/s)	Autonomia (bateria)	Potência total necessária [W]	Capacidade de Carga (kg)
Amphibian Robotic	38	c x l x a=	6		1h - rastejar 1,5h - nadar	&lt;150W	10
Turtle [12]		0,7x0,5x0,2					
Madeleine [23]	20	0,6x0,3x0,15	-	-	-	-	-
Flipper Propelled Turtle Robot [10]	5	0,2x0,2x0,175	100	-	45-75 min	-	-
Submergence Vehicle [20]	' ' .... .							
Naro-tartaruga [19]	75	c=1	100	2(estimado)	-	-	-
Finnegan [18]	-	2x0,5x0,5	-	-	-	-	-
RT-I [21]	80	1,66x0,73x0,55	10	-	-	-	-
FBot [22]	0,79	l=0,4	-	-	-	-	-
MiniTurtle-I [24]	5	0,31x0,53x0,2 (andar)		0,0033 (andar)			2
		0,31x0,85x0,14 (nado)		0,15 (nado)			
2.1.3.	Robôs Anfíbios Tartaruga
O RT-I (ver Figura 4e) foi testado em tanque em ambiente real (mar), no entanto não se consegue movimentar em terra devido ao elevado peso [21]. Low et al. [12] desenvolveram o Amphibian Robotic Turtle (ver Figura 4d) capaz de nadar e de se arrastar em terra tal como uma tartaruga marinha. O MiniTurtle-I (ver Figura 4i) também é capaz de se movimentar nos dois meios.
2.2.	Robôs Anfíbios Tartaruga - Aspetos Relevantes
Na literatura analisada podem-se identificar 3 aspetos principais para o desenvolvimento do sistema robotizado: apêndices propulsores, sistemas de submersão e componentes eletrónicos.
2.2.1.	Apêndices Propulsores
Os apêndices propulsores desenvolvidos podem ser divididos em 3 grupos principais: hidrofólios, palmípedes e barbatanas oscilantes.
Os hidrofólios correspondem às barbatanas anteriores, possuem geralmente 2 graus de liberdade (GDL, especificamente relativos à rotação e elevação/depressão) e descrevem uma trajetória em “8”. As palmípedes têm um papel secundário na propulsão, servindo sobretudo para auxiliar no direcionamento. Tanto hidrofólios como palmípedes servem para se referir às barbatanas das tartarugas marinhas. As barbatanas oscilantes, tal como indicado pelo nome, realizam propulsão principalmente através de oscilação repetida, sendo apenas necessário 1 GDL (de rotação). São exemplos o Madeleine (ver Figura 4h) e Flipper Propelled Turtle Robot (ver Figura 4g) (este último tendo mais um GDL de remo) [23],[10]. No RT-I (ver Figura 4e) e MiniTurtle-I (ver Figura 4i) todas as patas têm 4 GDL: batimento, remo, rotação e um grau extra que corresponde à articulação do cotovelo/joelho para ambiente terrestre [21], [24].
2.2.2.	Sistemas de Submersão
A própria tartaruga contrai os pulmões de modo a auxiliar o ajuste de nível na água [25]. Esta reserva de ar nos pulmões da tartaruga diminui ao longo do tempo, o que não acontece nos dispositivos mecânicos. Nem todos os robôs apresentados possuem sistema de submersão próprio, bastando apenas direccionar o ângulo de ataque dos atuadores face à água. No entanto, esta opção de design traduz-se em menor rapidez, precisão e maior custo energético.
Foi portanto sugerido em [12], [20], [26] e [24] a aplicação de sistemas de submersão. No sistema de submersão simples, um servomotor é responsável por ajustar o pistão consoante a necessidade através de um mecanismo de parafuso [20]. Os sistemas que possuem 2 pistões possibilitam a ativação separadamente, de modo a submergir ou ascender primeiro a parte frontal, por exemplo, aumentando assim a precisão das trajetórias ([12] e [26]). Na Figura 5 encontram-se os dois sistemas: simples e duplo, respetivamente. Em [24] foi utilizado um sistema de dois reservatórios de água com balões que são inflados com água consoante a necessidade, por atuação de uma bomba.
°'t’n9 screw
piston
(a)
(b)
(c)
Figura 5 - Sistemas de submersão: a) simples [20], b) dois pistões [12] e c) Insuflável [24].
2.2.3.	Componentes Elétricos/Eletrónicos
Para que tudo funcione como planeado a nível mecânico ou de autonomia é necessário considerar os motores que irão ser utilizados para a locomoção e movimentação; dos sensores necessários para avaliar o ambiente - desvio de obstáculos, profundidade, propriocepção; as unidades de processamento para tomada de decisões e controlo; e a bateria para alimentar todo o sistema. A Tabela 3 apresenta um resumo de todos os componentes elétricos/eletrónicos e suas características, utilizados nos robôs tartaruga descritos na bibliografia de referência.
Tabela 3 - Resumo dos componentes utilizados: GDL, motores, unidades de processamento, sensores e bateria.
Robô	Motores	Controladores/ Processadores	Sensores	Bateria
Amphibian Robotic Turtle [12]	2x40W 2x70W 2xservomotor 2x6,5W	PIC18F4520(m),	PIC18F4431(l), BasicX24(p)	Inclinação, pressão, bússola, proximidade	-
		Transmeta Crusoe PC104, 533MHz	Inclinação (DMU Microstrain 3DM-GX1), sonar (Imagenex 852 Sonar), altímetro (Imagenex 852	
Madeleine [23]	Maxon BLDC 70W	DAQ PMD-1208LS (sistema de segurança)	echosounder), pressão (Omega) 4 detetores de fuga, 4 sensores de temperatura, sensor de tensão, sensor de Corrente	24V NiMH
Flipper Propelled Turtle Robot [10]	-	AT91SAM7A3, 48MHz	Acelerómetro 2 eixos (ADXL202)	DC 6V, 2500mAh (motores), DC 4,8V, 2500mAh (controlador)
Submergence		pP one-chip (Atmel AVR		
Vehicle [20]		AT90S2313-10PC)		
Naro-tartaruga [21 ]	6x200W BL 2x15W BL	I7 dual core processor	Pressão, temperatura, giroscópio, GPS, bússola, encoders, fuga de água, fluxo de água	LiPo 48V com 32Ah
		Octagon Systems Pentium III		
Finnegan [18]	195W 15W	single board computer (Red Hat Linux v7,3), Galil 1425 de 2 eixos (por módulo)	Acelerómetro de 6 eixos Crossbow, Encoders óticos em cada motor,	-
RT-I [21]	Maxon BLDC	-	GPS, sensor de posição angular, pressão, fuga de água	Nickel hydride 13,2V, 8Ah
FBot[22]	4xHiTec5980SG	Lynxmotion SSC-32	Sensor de força	-
MiniTurtle [24]	Hitec HS-7950TH	STM32F103	-	2 x 7,4V Lítio com 4Ah
2.3.	Nota Conclusiva
Existem já imensas instituições e entidades a apostar no desenvolvimento de robôs bioinspirados, facto suportado pelos imensos trabalhos de investigação na área, todos com vantagens e desvantagens consoante a aplicação que se considerar. Foram analisados os robôs mais relevantes em termos de aplicação, atuadores e outros componentes elétricos/eletrónicos. A análise do estado da arte permite comparar o que já existe de semelhante no mercado e o que ainda falta criar, de modo a seguir como modelo certas características/estratégias e inovar noutros aspetos.
3.	Modelo de bioinspiração
Neste capítulo são abordados os conceitos biológicos, filogenéticos, anatómicos, biomecânicos e cinemáticos essenciais para o projeto de um robô biomimético anfíbio inspirado numa tartaruga-de-água-doce.
3.1.	Características das Tartarugas
De seguida são apresentadas características próprias das tartarugas e como estas são vantajosas em relação a outras espécies que poderiam ter sido consideradas para modelo de bioinspiração:
1.	Tanto a tartaruga como os restantes répteis apresentam quase sempre um andar quadrupede e o centro de massa encontra-se extremamente próximo do solo o que se traduz automaticamente por maior estabilidade;
2.	As aves e mamíferos normalmente apresentam os membros sob o corpo, mais económico, dado que apenas necessitam de manter o equilíbrio em cima das patas. Regra geral, os répteis apresentam os membros localizados na lateral do corpo, conferindo um aspeto estendido e espalhado. Por este motivo, quando param, deixam o corpo cair no solo para descansar, dado que manter o corpo elevado consome mais energia. Esta característica pode ser uma estratégia simples mas eficaz a implementar: deixar o corpo pousar no chão (considerando também que o corpo está sempre próximo do solo) e evitar algoritmos complexos para estabilizar a posição;
3.	Outro aspeto refere-se ao condicionamento de Carrier4: como resultado dos membros lateralizados, o corpo em movimento tende a ser mais torcido, afetando a respiração. Por conseguinte, os répteis tendem a movimentar-se alternando entre pausas (para retomar ar) e corridas curtas. Para contornar este dilema a tartaruga dispõe de uma caixa torácica rígida e locomoção paraxial5, podendo assim realizar percursos longínquos de uma forma contínua [27]. Movimentar apenas os membros para locomoção implica uma simplificação nas considerações estáticas, cinemáticas e dinâmicas no desenvolvimento do robô;
4.	As tartarugas apresentam também um pescoço retráctil longo que permite explorar locais que de outra forma seriam inacessíveis. Algumas tartarugas retraem-se
4	Condicionamento de Carrier - a ondulação horizontal provoca a distorção do tórax, fazendo com que os pulmões comprimam/estirem alternadamente na mesma fase de respiração e cria assim um fluxo conflituoso que, em corrida, impede que seja realizada a respiração normal.
5	Locomoção paraxial - realizada apenas com os membros.
completamente na carapaça, de modo a obterem maior proteção durante quedas ou ataques.
5.	A carapaça rígida permite armazenar alimento, ar, etc. Num modelo robótico permite armazenar os componentes num espaço fixo e protegido, além de poder disponibilizar uma capacidade adicional de carga;
6.	Os répteis são reconhecidos a nível de eficiência energética. Sendo animais ectotérmicos, a energia de fontes internas utilizada para manter a temperatura corporal é insignificante e recorrem então à energia exterior (solar) para elevar a temperatura e ficarem assim mais ativos. A morfologia espalmada da tartaruga aumenta a área de exposição solar em relação ao volume corporal. Combinando este aspeto com a rigidez da carapaça, é possível implementar um sistema de reaproveitamento de energia solar (através de painéis) para recarregar a bateria do robô.
3.2.	Tartaruga-de-Água-Doce VS Tartaruga-Marinha
Na Tabela 4 estão listadas as tartarugas que já serviram de modelo para robôs, embora seja necessário ressalvar que alguns estudos não mencionam uma espécie em concreto. Nas seguintes seções são ser referidas as principais diferenças entre tartarugas-marinhas e tartarugas-de-água-doce.
Tabela 4 - Resumo dos robôs e modelos em que se inspiraram.
Robô
Tartaruga
Tipo
Imagem
Amphibian Robotic
Turtle [12]
Cheloniidae
Marinha
Madeleine [23]
Imitação genérica de tartaruga
Flipper Propelled
Turtle Robot [c1]
Spiny Softshell (Apalone Spinifera)
Submergence Vehicle [20]
Naro-tartaruga [19]
Loggerhead (Caretta caretta)
Não especificado
Cágado
Marinha
Marinha
Finnegan [18]
Estudo de hidrofólios
Marinha
RT-I [21]
FlipperBot[22]
Não especificado
Não especificado
Loggerhead (Caretta caretta)
Marinha
Terrestre
Marinha recém-nascida
3.2.1.	Tartarugas-Marinhas
As tartarugas-marinhas são escolhidas como modelo com o objetivo de serem desenvolvidos sistemas de propulsão mais eficientes comparativamente aos atuais robôs aquáticos, que apresentam alguma dificuldades em se locomover em situações de fluxo irregular, espaço confinado ou perto da superfície [29]. Pode-se observar na Figura 6a que as barbatanas anteriores descrevem uma trajetória que se assemelha a um “8”. Os membros posteriores servem essencialmente como leme e estabilizador [30]. Na Figura 6b pode-se observar o esquema de um ciclo de locomoção. A análise da tartaruga marinha é mais simples, pois a barbatana é mais rígida, o cotovelo praticamente não flexiona e tanto pulsos como dedos pertencem a um mesmo troço semi-rígido. Apresentam uma carapaça mais cordiforme comparativamente às tartarugas-de-água-doce, especializada para atingir velocidades elevadas com baixo atrito em ambientes amplos como o alto-mar [31].
(b)
Figura 6 - Exemplo de tartaruga-marinha: a) trajetória de um batimento [32], b) esquema de um ciclo [30].
3.2.2.	Tartarugas-de-Água-Doce
As tartarugas-de-água-doce, segundo [29], realizam trajetórias diferentes com as barbatanas, que podem ser simplificadas e resumidas num movimento elíptico (Figura 7a). Estão adaptadas para se moverem em ambiente aquático e terreste de maneira eficiente, sendo que a destreza nos dois meios varia entre espécies diferentes. Em ambiente aquático, a trajetória elíptica é mais alongada horizontalmente. A carapaça apresenta uma forma elíptica, por vezes quase circular, mais adequada para mudar de direção em ambientes com obstáculos (pântanos, rios, lagos), com bordos mais salientes que permitem retrair os membros.
Figura 7 - Trajetória da barbatana para: a) tartaruga-de-água-doce, b) tartaruga-marinha, [33].
Na Figura 8 estão esquematizados os principais modos de locomoção: dorsoventral, no qual as barbatanas anteriores se movimentam em simultâneo e as posteriores não desempenham um papel relevante na propulsão, e anteroposterior, no qual os membros que realizam a propulsão em simultâneo estão em extremos opostos. Membros da mesma cor correspondem à mesma fase. Membros com ‘x’ não desempenham papel propulsor relevante. As setas apontam para o anterior do corpo [34]. O padrão de nado diagonal ou anteroposterior é mais flexível e adequado ao uso frequente do meio terrestre [31].
A
Dorsoventral
B
Anteroposterior
Figura 8 - Modos de locomoção utilizados principalmente por A) tartarugas-marinhas, B) tartarugas-de-água-doce [34].
3.3.	Anatomia
Para criar um modelo fiel à espécie biológica é necessário analisar a sua estrutura anatómica e extrair as características que poderão ser úteis para aplicar no robô.
3.3.1.	Morfologia
Existem adaptações externas que contribuem para uma melhor hidrodinâmica e manobrabilidade.
•	A carapaça mais larga posteriormente/patas traseiras maiores proporcionam:
o Maior facilidade de direcionamento (maior manobrabilidade);
o Maior dificuldade em manter a trajetória (menor estabilidade).
•	Patas das tartarugas-de-água-doce: São como pequenas pás com dedos livres, têm garras longas (maior tração em terra) e membrana interdigital curta (favorece a mobilidade digital, mas auxilia na propulsão aquática) [31].
3.3.2.	Sistema Esquelético
A análise do esqueleto é essencial para traduzir a estrutura dos ossos e articulações em elos e juntas para o robô de modo a que este se assemelhe o mais possível ao modelo biológico. Na Figura 9 é apresentado o sistema esquelético de uma tartaruga de água-doce. De seguida são descritas as características com maior relevância para serem mimetizadas.
Figura 9 - Sistema esquelético: vista ventral [35].
3.3.2.1.	Carapaça
A carapaça da tartaruga é um compósito que protege o animal de traumas de predadores ou quedas, é um local de hematopoiese e armazém de água, resíduos e nutrientes, proporciona uma boa forma hidrodinâmica e funciona como órgão de respiração em condições extremas. É constituída por ossos dermais e uma camada epiderme de escamas queratinosas; existem sempre 10 vertebras associadas à carapaça, 38 ossos na carapaça dorsal e 16 no plastrão (podendo variar ligeiramente consoante a espécie) [36]. A parte dorsal designa-se carapaça e a parte ventral de plastrão (ver Figura 10), sendo conectados por duas pontes ósseas de cada lado, entre os membros.
Neural
Nuchal
”'--Pygial
costal
xiphiplastron
Entoplastron
hypoplastron
hyoplastron
Epiplastron—
Figura 10 - Estrutura da carapaça: disposição das placas queratinosas exteriores, [37].
A carapaça corresponde à maior porção corporal e faz a ligação entre todos os outros elementos. É rígida e a sua dimensão simplifica a incorporação do material eletrónico que não deverá ficar visível.
3.3.2.2.	Patas - Úmero/Fémur
Desempenha um papel importante na propulsão aquática e locomoção terrestre. Comparativamente com as tartarugas marinhas, os cágados apresentam um úmero mais longo, arqueado e menos achatado. O facto de ser longo deve-se à carapaça ser mais saliente e auxilia na protração e retração horizontal que predomina na locomoção. A curvatura facilita a rotação do osso longitudinalmente e não necessita de ser tão achatado pois a componente vertical das forças durante o nado é reduzida [38]. O fémur apresenta as mesmas características do úmero pelo mesmo motivo. Estas três características são incorporadas no design.
Cada pata do modelo robótico terá 4 GDL: 3 GDL na articulação do ombro (rotação, protração/retração e elevação/depressão) e 1 GDL que irá corresponder à flexão do cotovelo.
3.3.2.3.	Pescoço
O comprimento ajustável do pescoço da tartaruga apresenta a vantagem de retrair para se proteger e minimizar danos, ou expandir para avaliar melhor o ambiente, respirar, predação e aceder a locais que nunca alcançaria devido à dimensão do resto do corpo.
A tartaruga-de-orelhas-vermelhas retrai o pescoço para dentro (verticalmente) de modo a que a coluna assume a forma de um S (Figura 11) [39]. O pescoço é um sistema complexo de 8 vertebras cervicais que conta com um grande número de músculos para controlar o movimento.
Figura 11 - Coluna vertebral cervical de uma tartaruga que retrai o pescoço verticalmente, [39].
O mecanismo de retração/expansão do pescoço será simplificado por um motor linear dado que o original, retração em “S”, é mais complexo. A cabeça terá 2 GDL de modo a mover-se na horizontal e na vertical.
3.3.3.	Sistema Muscular
A análise dos músculos fornece dados acerca da direção e intensidade das forças necessárias para gerar movimento. Ao serem ativados em combinações, períodos de tempo e graus de intensidade diferentes são efetuados ajustes no padrão de locomoção [28]. Esta análise é útil na decisão dos locais mais importantes para serem atuados. Recentemente têm sido aplicados também materiais elásticos de modo a simular o comportamento dos tendões (o material absorve energia e depois liberta-a, sem consumir energia adicional ao sistema e aplicando-a posteriormente no processo desejado). Na Figura 12 é apresentado o sistema muscular de uma tartaruga de água-doce.
FLEXOR CAUDAS LUMBAL I»
EXT. RADIUS LONGOS OELTOD
TRICEPS Ft MORIS ADDUCTOR —
MYLOHYOID (INTERMANOlRULARiS)
... IlfTERNAL BRACHIAL CXTIRNAL RADIUS BREVIS —•— EXTERNAL ULNAR ■-
•• ATTRAHENS PELVIM ■
PLANTAR 15
•j--« BICEPS BRACMII .—-••
SUPRASCAPULARS
Figura 12 - Sistema muscular: à esquerda a vista ventral, à direita vista lateral [40].
Riviera e Blob [41] elaboraram um gráfico resumo dos músculos ativos durante dada percentagem do ciclo de nado/andar, sendo que alguns exibiram comportamento irregular (no ciclo “andar”). A transição de protração para retração durante a marcha está assinalada pela linha vertical a tracejado, o mesmo para o nado pela linha vertical contínua, (ver Figura 13). Dadas as diferenças de viscosidade, massa específica e efeitos gravíticos entre os meios terrestre e aquático, é de facto evidente neste gráfico que as exigências funcionais do sistema musculosquelético são diferentes durante os dois ciclos - esta diferença de ativação muscular traduz-se em uma modificação do modo de locomoção.
Figura 13 - Comparação das exigências musculares individuais durante os ciclos “andar” e “nadar” [41].
Na literatura disponível não se encontra consenso entre a nomenclatura dos músculos nem entre a atividade que desempenham [41],[42]. No entanto é notável que são referidos sempre os movimentos de protração/retração, elevação/depressão do braço, rotação e flexão do antebraço, e protração/retração, elevação depressão, rotação da coxa e flexão do joelho.
O robô apresenta, portanto, 3 juntas atuadas na articulação do ombro. No cotovelo será atuada também a junta de flexão.
O mesmo será aplicado nas patas traseiras: 3 juntas atuadas na anca e 1 junta atuada no joelho.
3.4.	Filogenética
Trachemys scripta elegans é a espécie em que se baseia o modelo robótico. Trata-se de uma tartaruga de água doce mais conhecida como tartaruga-de-orelhas-vermelhas. Pertencem a uma linhagem de tartarugas que nadam de maneira proficiente, mas que também passam tempo considerável a percorrer terra [28]. É um bom modelo pois cumpre os requisitos de ser anfíbia e é das tartarugas mais estudadas na literatura. Os dados filogenéticos desta tartaruga são [43]:
Nome Comum: Tartaruga-de-orelhas-vermelhas
Nome Científico: Trachemys scripta elegans
Reino: Animalia
Filo: Cordata
Classe: Reptilia
Subclasse: Anapsida
Ordem: Testudines
Subordem: Cryptodira
Família: Emydidae
Género: Trachemys
Espécie: T. scripta
Subespécie: T. s. elegans
Figura 14 - Exemplar de Trachemys scripta elegans [44].
3.5.	Terminologia do Movimento da Tartaruga de Água-Doce
As terminações utilizadas para descrever as fases do movimento em meio terrestre são o apoio (quando a pata está a tocar no solo) e o balanço (quando a pata não está a tocar no solo e a extremidade se move do local). No meio aquático, o impulso corresponde à fase de propulsão, enquanto que a recuperação se refere ao retorno da pata ao local necessário para realizar propulsão (Figura 15). As fases de apoio e de impulso correspondem a uma retração, isto é, o
membro desloca-se para a terminação posterior. As fases de balanço e de recuperação correspondem a uma protração, em que o membro assume uma posição mais anterior.
As imagens de 1 a 4 da Figura 15a correspondem à fase de apoio, imagens de 5 a 8 à fase de balanço do espécimen Chrysemys scripta, durante um ciclo de marcha. As imagens de 1 a 4 da Figura 15b correspondem à fase de impulso, imagens de 5 a 8 à fase de recuperação do espécimen Trionyx spinifer, durante um ciclo de nado.
a)
b)
Figura 15 - Vista lateral do membro posterior esquerdo de a) Chrysemys scripta durante um passo em terra. b) Trionyx spinifer durante um ciclo de nado. Adaptado de [45].
Os movimentos realizados durante um ciclo de locomoção podem ser subdivididos em 4 tipos:
•	Batimento ou elevação/depressão (umeral ou femoral) - Equivalente ao pitch (Fig.xa);
•	Remo ou protração/retração (umeral ou femoral) - Equivalente ao yaw (Fig.xb);
•	Rotação (umeral ou femoral) - Equivalente ao roll (Fig.xc);
•	Flexão (cotovelo ou joelho)(Fig.xd).
Os 4 tipos de movimento encontram-se exemplificados na Figura 16.
Figura 16 - Classificação dos movimentos de uma barbatana: a) elevação/depressão b) protração/retração, c) rotação e d) flexão.
3.6.	Nota conclusiva
Existem diferenças estruturais notórias entre as tartarugas conforme o ambiente que habitam. Concluiu-se que modelo de uma tartaruga-de-água-doce é mais adequado para bioinspirar um robô anfíbio (neste caso, Trachemys scripta elegans, devido à abundância de estudos relativos à locomoção). Foram avaliados os atributos físicos mais importantes para replicar, justificou-se a necessidade de atuação para certas juntas e foi realizado um apanhado da terminologia que é empregue no restante trabalho.
4.	Estratégias e Ferramentas Computacionais
Todos os projetos começam por um ideia, a partir da qual se formulam os passos para a concretizar. É também comum, no meio de tanta informação, perder noção da estrutura do projeto. Para a realização do projeto serão também utilizadas ferramentas computacionais de modo a testar o modelo virtual a custo zero. Esta seção visa clarificar tanto o projeto em si bem como as ferramentas necessárias ao seu desenvolvimento.
4.1.	Abordagem de Desenvolvimento
4.1.1.	Desenvolvimento de um Robô Biomimético
Para o desenvolvimento de um robô biomimético segue-se um procedimento que se inicia no modelo biológico e acaba no protótipo do robô. Ao modelo biológico, neste caso uma tartaruga, retiram-se os parâmetros relativos à morfologia para obter a forma do robô (componente estrutural) e os parâmetros cinemáticos para imitar a locomoção do animal verdadeiro. A partir destes parâmetros são obtidas as trajetórias que terão que ser providenciadas pela atuação conjunta aos motores que constituem as juntas do robô. De seguida, o modelo obtido deverá ser testado através de um modelo virtual num software de simulação. A simulação é um método económico para avaliar se o modelo é viável. Caso a sua performance não seja satisfatória, o modelo deverá ser otimizado e testado de novo até atingir o nível de performance desejado. Neste ponto pode-se passar à construção do protótipo, aplicando os parâmetros estruturais, cinemáticos e de controlo otimizados da simulação. Na Figura 17 é apresentado um fluxograma do procedimento do desenvolvimento de um robô biomimético de tartaruga.
Figura 17 - Fluxograma do desenvolvimento de um robô biomimético de tartaruga. Adaptado de [46].
4.1.2.	Interação Robô - Ambiente e Simulação
Os eventos relativos ao sistema robotizado são resultados da interação deste com o meio exterior. O robô capta informação do meio ambiente a partir dos sensores (sensação), que vai ser utilizada pelo microcontrolador para a tomada de decisões. Após ser tomada uma decisão, são enviados comandos para os atuadores agirem de acordo com o desejado e desta forma interagirem com o ambiente (ação). O V-REP é um programa de simulação de robótica (descrito em pormenor na seção x) que permite experimentar interações entre o robô e o ambiente de uma forma económica, simples e controlada.
Regra geral, desenvolvimento de um protótipo real oneroso, já que muitas das vezes vão ser realizadas alterações custosas que poderiam ter sido eliminadas com simulação virtual adequada. No mundo real podem ocorrer imprevistos, como quedas, colisões, alterações imprevistas do meio, que podem contribuir para mais despesas.
Enquanto que em ambiente real uma experiência para obter dados do desempenho do robô pode envolver equipamento e tratamento de dados adicional, em ambiente de simulação muitos destes aspetos já estão integrados (monitorização dos ângulos de junta, medição de deslocamentos, janelas que mostram o que o sensor de visão está a captar).
É mais simples realizar a alteração de certos parâmetros como estrutura, material do robô e obstáculos do ambiente em ambiente virtual, sem custo adicional. O mesmo para os parâmetros de controlo e definição de metas. Juntamente com a flexibilidade face a alterações, há ainda a vantagem de facilmente se monitorizar o efeito que estas alterações proporcionam e até mesmo comparar mais que um modelo em simultâneo.
As limitações da simulação virtual incluem um planeamento mais pormenorizado do modelo, sobretudo a nível de propriedades dos materiais e componentes elétricos/eletrónicos que vão corresponder sempre a modelos aproximados da realidade. Isto irá gerar erros que podem ser ou não significativos quando se passa para o modelo real. A Figura 18 apresenta um esquema genérico da interação que ocorre durante a simulação.
Figura 18 - Esquema da interação que ocorre durante simulação.
4.1.3.	Definição Global do Robô
Os seguintes termos definem o robô:
•	Biomimético - O sistema robotizado foi bioinspirado num modelo biológico de Trachemys scripta elegans.
•	Móvel, com patas - O robô não está limitado a uma base fixa e dispõe de patas para se deslocar;
•	Anfíbio - O robô está configurado para atuar tanto em ambiente terrestre como em ambiente aquático;
•	Semiautónomo - O utilizador indica um comando geral e o robô realiza-o, encarregando-se dos pormenores para que este seja possível;
4.2.	Ferramentas Computacionais
Os programas computacionais são atualmente indispensáveis para a elaboração de qualquer trabalho. Nesta dissertação em concreto foram utilizados o programa de desenho assistido por computador Solidworks e o simulador de robôs V-REP.
4.2.1.	Matlab - Curve Fitting Tool
A ferramenta de curve fitting do Matlab permite encontrar funções que se adeqúem aos dados inseridos, arranjando assim uma expressão matemática que descreva o seu comportamento. Neste trabalho, esta ferramenta foi utilizada para a obtenção de expressões que descrevessem os dados experimentais das trajetórias (seção x) [47].
4.2.2.	Solidworks
O Solidworks é um programa de desenho computacional assistido (CAD - Computer Aided Design), onde podem ser facilmente desenhadas peças para um protótipo robótico, permitindo assim ter uma melhor noção visual do comportamento mecânico. O projeto pode ser depois guardado em vários formatos, pronto a ser exportado para outros programas. Neste caso os ficheiros criados no Soliworks foram guardados no formato STL (Stereolithography) para serem importados pelo V-REP [48].
4.2.3.	V-REP
O V-REP é um software de simulação para robôs muito completo, com inúmeras funções, características inovadores e APIs (Application Programming Interface - Interface de Programação de Aplicações) elaboradas.
Adequa-se para este trabalho pois proporciona uma plataforma multidisciplinar para simulação do robô a nível dinâmico, cinemático e programação. O V-REP pro edu é open source.
Algumas aplicações do V-REP são: simulação de autómatos; monitorização remota; controlo de hardware; prototipagem e testes; verificação de sistemas de segurança; desenvolvimento de algoritmos; outros propósitos de educação relacionados com robótica; e apresentação de produtos.
De seguida serão apresentadas algumas características do software, de acordo com o manual de utilizador [49].
4.2.3.1.	Interface para utilizador
A Figura seguinte apresenta de um modo genérico a interface com o utilizador do software V-REP.
Ferramentas 1
Texto Informativo
Barra de
Ferramentas 2
Menu Popup
Janela de diálogo
Barra de estado
Vistas
Motor de busca de modelos
Objetos e Modelos
Interface Utilizador Personalizada
Janela de Aplicações
Barra de aplicações Janela da Consola
„	..	Hierarquia da Cena
Barra Menu
Figura 19 - Elementos da interface. Adaptado de [49].
Entre as componentes relevantes da interface estão (ver Figura 19):
•	Janela da consola - Quando se inicia o V-REP, esta janela surge mostrando os plugins carregados e se foram inicializados com sucesso;
•	Janela de aplicação - é a janela principal, onde se encontram mais elementos que possibilitam a visualização, interação, edição e simulação de um teste. É composta por:
o Barra de aplicações - identificação do programa e versão;
o Barra menu - permite aceder a quase todas as funcionalidades do simulador;
o Barra de ferramentas - permite aceder a variadas funções representadas na Figura 20;
Montar/
Desmontar
Navegação da camara
Visualização de conteúdo dinâmico e verificação
Controlo de velocidade da
Renderização Seleção conectada de cenas
Figura 20 - Barra de ferramentas. Adaptado de [49].
	❖ A O			X/ V	o
Manipulação de Objeto/item
Motor de física selecionado
o Motor de busca de modelos - acesso rápido aos modelos criados, alguns dos quais já disponibilizados junto com o programa;
o Hierarquia das cenas - mostra as cenas abertas no programa. Uma cena corresponde a um conjunto de simulação (que inclui o ambiente, objetos, relações entre objetos, scripts). Dentro da cena os elementos são apresentados de uma maneira hierárquica, do mais específico ao mais abrangente (ver Figura 21);
ícone de
Ambiente
Outras Cenas Abertas
Botão Fechar
ícone de script principal
Nome dos Objetos
Parâmetros de script secundário
ícone de script secundário
Nome de cena ativa
'0 redRectanglel greenRectar&gt;gle3 yellowRectangle2 yellowRectanglel greenRectanglel greenRectangle2 Spotlight
ícones de Objetos
	a—	A
Marca de	a -	A
Modelo		&lt;V
Marca de expandir		ao	A
hierarquia	B«	9»
Marca de colapsar hierarquia
5mx5mwoodenFloor youBot fi
V vehideControl ...
A ArmControl
swedishWheel rr
Figura 21 - Hierarquia das cenas. Adaptado de [49].
o Páginas - existem no máximo 8 páginas por cena. As páginas podem conter um número ilimitado de vistas;
o Vistas - mostram o output visual da cena ou de objetos visíveis (sensores de visão, camaras e gráficos);
o Texto informativo - informação relacionada com o item selecionado ou estado/parâmetros de simulação;
o Barra de estado - informação relacionada com operações realizadas, comandos, erros no interpretador de Lua6 e mensagens definidas via script;
o Interfaces personalizadas - para mostrar informação (texto ou imagens) ou janelas de diálogo personalizadas para interagir com o robô;
o Menus popup - aparecem com o clique do botão direito do rato e variam o seu contexto consoante o local em que se efetua o clique;
• Janelas de diálogo - como o próprio nome indica, permitem ao utilizador dialogar com o software (alteração de parâmetros) e varia consoante o que se pretende realizar.
4.2.3.2.	Cenas e modelos
Tanto um modelo como uma cena podem conter um ou mais dos seguintes elementos: objetos; coleções; objetos de colisão; objetos de distância; grupos de cinemática inversa; objetos de resolução de limitações geométricas; tarefas de planeamento de caminhos; child scripts; e interfaces personalizadas.
O modelo apenas pode existir dentro de uma cena. Uma cena possui ainda mais três elementos: ambiente; script principal; e páginas/vistas.
4.2.3.3.	Ambiente
Permite alteração de parâmetros como as cores de fundo, nevoeiro (interage com as câmaras ou sensores de visão), luz ambiente, entre outras características.
Lua é uma linguagem de programação poderosa, rápida e leve, projetada para estender aplicações. Esta linguagem de programação combina sintaxe simples para programação de procedimentos com poderosas construções para descrição de dados baseadas em tabelas associativas e semântica extensível. Lua é escrita dinamicamente, é interpretada a partir de bytecodes para uma máquina virtual baseada em registos, e possui gestão automática de memória. Essas características fazem de Lua uma linguagem ideal para configuração, automação (scripting) e prototipagem rápida [50].
4.2.3.4.	Entidades
São consideradas entidades os objetos ou coleções. Neste trabalho o robô tartaruga será considerado uma coleção de objetos. Existem variadas classes de objetos:
•	Formas - estruturas 3D;
•	Juntas - rotativas, prismáticas ou esféricas. Podem ser ajustados parâmetros do motor, relacionados com a atuação. As juntas esféricas não são atuadas;
•	Sensores de proximidade - são classificados segundo o tipo de volume que abrangem e subtipo (ultra-som, laser, infravermelho, indutivo e capacitivo);
•	Sensores de visão - semelhantes às câmaras, mas apenas mostram objetos que foram especificados como detetáveis para o sensor. O seu conteúdo pode ser acedido via API, requerem maior de processamento e têm resolução fixa;
•	Sensores de binário/força - elemento rígido entre dois elementos, quando é ultrapassado um certo limite de força/binário podem quebrar;
•	Objetos cortantes - superfícies convexas que têm a capacidade de induzir cortes noutras superfícies;
•	Câmaras - permitem visualizar a cena de outras perspetivas;
•	Luz;
•	Dummies - é um ponto com orientação. Tem referencial próprio e adquire funcionalidade quando utilizado com outros objetos e/ou módulos de cálculo;
•	Gráficos;
•	Caminhos - gerados na aplicação ou importados de um ficheiro exterior ao programa;
•	Espelhos - refletem luz/imagens e atuam como planos auxiliares.
A estes objetos podemos atribuir propriedades ou submeter a módulos de cálculo (ver seção seguinte).
4.2.3.5.	Módulos de cálculo
O V-REP apresenta vários módulos de cálculo que podem ser aplicados a um ou mais objetos. Alguns dos módulos são:
•	Módulo de deteção de colisões;
•	Módulo de cálculo de distância mínima;
•	Módulo de cálculo de cinemática inversa;
•	Módulo de resolução de limitações geométricas;
•	Módulo de dinâmica;
•	Módulo de planeamento de caminhos;
•	Módulo de planeamento de movimento.
Em concreto neste trabalho são utilizados os módulos de dinâmica e cinemática inversa.
O módulo de dinâmica do V-REP suporta 3 motores de física diferentes:
•	Bullet Physics Library - open source, permite detetar colisões 3D e efetuar cálculos dinâmicos com corpos rígidos e com corpos moles;
•	Open Dynamics Engine - open source, permite detetar colisões e efetuar cálculos dinâmicos com corpos rígidos;
•	Vortex Dynamics Engine - closed source, permite gerar simulações físicas de alta
fidelidade e é portanto utilizado em aplicações industriais de	alto
desempenho/precisão, ou investigação. A versão contida na versão open source do V-REP apenas permite 20 segundos de simulação.
O V-REP não é um simulador de dinâmica puro, mas sim híbrido que combina cinemática e dinâmica de modo a obter melhor desempenho para diferentes situações.
4.2.3.6.	Programação
São suportadas seis abordagens diferentes de programação, todas mutuamente compatíveis podendo ser utilizadas em simultâneo ou até mesmo combinadas. A entidade de controlo do objeto, cena ou o próprio simulador podem estar localizados em:
•	Scripts Embutidos;
•	Add-on's;
•	Plugin;
•	API remota;
•	Nós ROS (Robot Operating System - Sistema Operativo para Robô);
•	Aplicação cliente/servidor personalizada - tem que trabalhar em conjunto com um script ou plugin.
A programação pode ser realizada em Lua, C/C++, Java, Python, Urbi, Octave e Matlab.
Na opção escolhida, programação por scripts embutidos, a linguagem de programação utilizada é Lua.
4.2.3.7.	Simulação
Entre os aspetos mais relevantes de simulação destaca-se a possibilidade de poder construir interfaces gráficas para que o utilizador controle o modo como o robô interage no ambiente virtual. Os parâmetros de simulação podem ser também exteriores à plataforma do V-REP, como alguns dos referidos na seção anterior. A simulação pode ser acelerada ou vice-versa. A qualquer momento o utilizador pode pausar ou dar como terminada a simulação. Os intervalos de tempo com que são verificados os scripts e outros aspetos de simulação podem ser ajustados.
4.3.	Nota Conclusiva
Foram delineados os passos a tomar para o desenvolvimento de um robô biomimético, o modo como o utilizador pode interagir com o programa de simulação e que aspetos dessa simulação pode controlar, e uma breve pesquisa das ferramentas computacionais utilizadas para o desenvolvimento do trabalho. Foi feito um resumo das características mais importantes do simulador, no entanto o factor prática é essencial para dominar o software.
5.	Cinemática e Dinâmica
A análise cinemática e dinâmica são fundamentais para a criação de um modelo de locomoção robótico fiel ao modelo de locomoção biológico. Com estas análises pretende-se obter trajetórias ótimas a implementar no sistema de controlo, regulação e comando dos motores.
5.1.	Dinâmica
Os modelos desenhados em Solidworks são importados para o simulador sob a forma de ficheiro STL, a partir do qual se construiu o modelo dinâmico. O modelo dinâmico é construído por formas puras que são mais simples que o modelo original, mas que apresentam um comportamento dinâmico muito mais fiel ao mundo real. A criação do modelo dinâmico é essencial para que a simulação seja realizada de um modo realista, através de um dos motores de física disponíveis (Bullet, Vortex e ODE). Muitos dos módulos de cálculo não funcionam sem este modelo, como o módulo de cinemática inversa ou o módulo de colisões.
5.1.1.	Construção dos Modelos Dinâmicos
De modo a comparar o desempenho entre tartarugas-de-água-doce vs. tartarugas-marinhas, foram desenvolvidos dois modelos CAD distintos:
•	Modelo marinho - apresenta as características morfológicas descritas no Capítulo 3, das quais se destacam a carapaça cordiforme, hidrofólios, palmípedes e pescoço curto, baseado nas proporções apresentadas na imagem raios-X da Figura 22a;
•	Modelo de água-doce - apresenta as características descritas no Capítulo 3, das quais se destacam a carapaça oval, cada pata possui 3 GDL na articulação do ombro/anca mais 1 GDL no cotovelo/joelho, baseado nas proporções apresentadas na imagem raios-X da Figura 22b;
Foram retiradas as medidas necessárias das imagens e depois ajustadas para corresponderem a um modelo com carapaça de comprimento igual a 50 cm, medida considerada adequada para incorporar todo o equipamento necessário e não ser demasiado grande.
Figura 22 - Imagens raios-X de a) tartaruga marinha [51] e b) tartaruga-de-orelhas-vermelhas [52].
Para que o modelo responda como desejado às simulações dinâmicas, o modelo CAD (ver Figura 23a) deve de ser aproximado por formas puras (cubos, cilindros e esferas) ou agrupamentos de formas puras. O tamanho das formas deve de ser razoável (não muito pequenas nem desproporcionais), as massas similares e não muito leves e momentos de inércia relativamente elevados. Os modelos de formas dinâmicas são visíveis na Figura 23b.
Modelo Tartaruga-Marinha
Modelo Tartaruga-de-Água-Doce
a) Modelo CAD
b) Modelo Dinâmico
Figura 23 - a) Modelo CAD da tartaruga-marinha (em cima) e modelo da tartaruga-de-água-doce (em baixo). b) Modelo dinâmico da tartaruga-marinha (em cima) e modelo dinâmico da tartaruga-de-água-doce (em baixo).
5.2.	Cinemática
A cinemática refere-se ao estudo do movimento de um dado sistema sem ter em consideração a sua massa ou forças que nele atuam. Uma cadeia cinemática é constituída por elos (elementos rígidos) e juntas (que unem os elos). Cada junta pode mover o elo distal em relação ao mais próximo da base (terminação fixa da cadeia). A outra terminação é livre e é considerada a ferramenta [53].
Existem dois tipos de juntas essenciais: prismática, em que o elo se desloca linearmente; revolução, em que o elo gira em torno do eixo de rotação (deslocamento angular). A partir destas juntas podem ser geradas outras mais complexas.
Podem ser considerados dois espaços de trabalho distintos: espaço cartesiano e espaço das juntas. O espaço cartesiano, como indica o nome, é simbolizado através de coordenadas cartesianas. O espaço das juntas é representado pelo conjunto dos ângulos das juntas do robô. A cinemática direta permite a conversão do espaço das juntas para espaço cartesiano. A cinemática inversa permite realizar o procedimento inverso (ver Figura 24).
Figura 24 - Representação esquemática da cinemática direta e inversa [54].
Neste trabalho é apenas referida a componente mais visual de cinemática, isto é, é dada mais importância ao movimento geral se assemelhar ao ser vivo, e não tanto à análise matemática. Para este efeito são apenas necessários a variação dos ângulos ao longo do tempo.
5.2.1.	Análise da Locomoção
A análise da locomoção é realizada para as seguintes articulações de interesse, [55] e [56]:
•	Articulação umeral (ombro);
•	Articulação do cotovelo;
•	Articulação femoral (anca);
•	Articulação do joelho.
Na Tabela 5 está esquematizada a informação disponível na literatura vs. a necessária para abranger todos os GDL do robô (esta última encontra-se a cinza).
Tabela 5 - Trajetórias necessárias vs. Trajetórias disponíveis na literatura, [55][56].
Articulação	Movimento	Nado	Marcha
			
Umeral	P rotração/Retração	Sim	Não
	Elevação/Depressão	Sim	Não
	Rotação	Não	Não
Cotovelo	Flexão	Sim	Não
Femoral	P rotração/Retração	Sim	Sim
	Elevação/Depressão	Sim	Sim
	Rotação	Não	Não
Joelho	Flexão	Sim	Sim
Em relação às trajetórias das quais não há informação vão ser assumidas as seguintes considerações (simplificações):
•	A junta de rotação é apenas utilizada para alternar entre modo de marcha e modo natatório;
•	As trajetórias dos membros anteriores durante a marcha vão ser iguais às dos membros posteriores.
Para a obtenção das trajetórias foi seguido o seguinte protocolo:
1)	Extração de dados dos gráficos de [55] e [28];
2)	Realização de ajustes para que o valor final do ciclo coincida com o valor inicial (Anexo A);
3)	Construção dos gráficos;
4)	Utilização da ferramenta cftool do Matlab para encontrar um polinómio que se adequasse. Caso o polinómio seja de uma ordem superior a 4 passar para o passo
7.	Um polinómio de ordem elevada possui coeficientes com ordem de grandeza muito grande ou muito reduzida que se irão traduzir num elevado custo computacional de cálculo e maior possibilidade de propagação de erros nesse mesmo cálculo;
5)	Rectificação do início e do fim da trajetória: o polinómio nunca inicia e termina no mesmo valor, o que criaria erros acumulativos que iriam afetar os ângulos realizados pelo motor;
6)	Verificar se os valores abrangidos pelas equações estão dentro dos intervalos de confiança (I.C.) a 95%;
7)	Caso não se verifique que se encontram dentro dos intervalos ou o grau do polinómio seja muito elevado, prossegue-se com a divisão em troços mais pequenos de modo a encontrar equações de baixo grau que abranjam os pontos com maior precisão;
8)	Determinação dos pontos de intersecção entre as equações.
Os polinómios aproximados têm o propósito de serem implementados posteriormente num processador para controlo de servomotores.
5.2.1.1.	Articulação umeral
Em [55] foi realizado um estudo para comparar as diferenças cinemáticas entre Trachemys Scripta e Apalone Spinifera. Nas Figuras 25 e 26 estão representados os perfis cinemáticos da protração/retração e elevação/depressão umeral, ou seja, a variação do ângulo da articulação ao longo de um ciclo de locomoção a nadar.
Na protração/retração um ângulo de 0° indica que o úmero está perpendicular ao eixo ântero-posterior da tartaruga, enquanto que ângulos negativos indicam que o úmero aponta posteriormente e positivos o contrário. Na elevação/depressão, um ângulo de 0°corresponde a um úmero horizontal, enquanto que ângulos positivos indicam que o úmero está elevado, e vice-versa.
A trajetória da articulação umeral segundo [41] é cíclica como descrito na Figura 6 (trajetória de uma barbatana) da secção 3.2.1.. Porém, torna-se relevante tecer os seguintes comentários relativos à análise cinemática da articulação umeral:
•	Protração umeral: mais intensa no nado.
•	Retração umeral: similar nos 2.
•	Elevação umeral: maior no final do balanço/recuperação; ligeiramente maior no andar.
•	Protração e elevação umeral: maior no fim do balanço/recuperação - aí o cotovelo estica.
•	Depressão umeral: similar para ambas e praticamente simultânea com a retração.
Figura 25 - Trajetória de protração/retração da articulação umeral (durante o nado) para IC de 95%.
Figura 26 - Trajetória de elevação/depressão da articulação umeral (durante o nado) para IC de 95%.
5.2.1.2.	Articulação do cotovelo
Na Figura 27 estão representados os perfis cinemáticos da flexão do cotovelo, ou seja, a variação do ângulo de flexão ao longo de um ciclo de locomoção a nadar: um ângulo de 180° indica extensão total do cotovelo.
Figura 27 - Trajetória de flexão da articulação do cotovelo (durante o nado) para IC de 95%.
Na Tabela 6 encontra-se a descrição da configuração da articulação do cotovelo durante um ciclo de locomoção.
Tabela 6 - Descrição da configuração da articulação do cotovelo, [41].
Nado			Andar		
•	Flexionado durante a	primeira	•	Flexionado durante metade	da
	metade da protração;			protração;	
•	Começa a extensão;		•	Extensão;	
•	Atinge extensão máxima	a meio da	•	Flexão mal começa a retração	de
	retração;			modo a suportar o peso;	
•	Volta a flexionar até	o estado	•	Segunda extensão à medida que	o
	inicial.			corpo é propulsionado para	a
				frente;	
Obs: Flexão similar, extensão no nado é mais tardia.
5.2.1.3.	Articulação femoral
Em [28] foi realizado um estudo para comparar as diferenças cinemáticas entre Trachemys Scripta e Apalone Spinifera em relação aos membros posteriores. Nas Figuras 28, 29, 30 e 31 estão representados os perfis cinemáticos da protração/retração e elevação/depressão femoral, durante um ciclo de locomoção em água e em terra.
Na protração/retração femoral um ângulo de 0° indica que o fémur está perpendicular ao eixo ântero-posterior da tartaruga, enquanto que ângulos negativos indicam que o fémur aponta posteriormente e positivos o contrário. Na elevação/depressão, do fémur um ângulo de 0°corresponde a um fémur horizontal, enquanto que ângulos positivos indicam que o fémur está elevado, e vice-versa.
♦ Valores Reais
I.C.195%
I.C.S.95%	------Eq.l ---------Eq.2 ---------Eq.3
Figura 28 - Trajetória de protração/retração da articulação femoral (durante o nado) para IC de 95%.
Figura 29 - Trajetória de elevação/depressão da articulação femoral (durante o nado) para IC de 95%.
Figura 30 - Trajetória de protração/retração da articulação femoral (durante a marcha) para IC de 95%.
Figura 31 - Trajetória de protração/retração da articulação femoral (durante a marcha) para IC de 95%.
5.2.1.4.	Articulação do joelho
Nas Figura 32 e 33 estão representados os perfis cinemáticos da flexão/extensão do joelho, durante um ciclo de locomoção em água e em terra: um ângulo de 180° indica extensão total do joelho.
♦ Valores Reais -----------I.C.I.95%	------IC.S.95%	-------Eq.l ---------Eq.2 ----------Eq.3 ----------Eq.4
Figura 32 - Trajetória de flexão da articulação do joelho (durante o nado) para IC de 95%.
Figura 33 - Trajetória de flexão da articulação do joelho (durante a marcha) para IC de 95%.
5.2.2.	Tratamento de Dados
É necessário importar as trajetórias que depois vão ser seguidas através de dummies que estão associados aos modelos dinâmicos e módulos de cálculo.
Sendo que os dados extraídos da literatura (disponíveis no Anexo A) consistem em apenas ângulos, é necessário proceder da seguinte forma para criar as trajetórias:
1.	Considerar o comprimento desde a junta em questão para realizar o ângulo até à extremidade do elo seguinte - corresponde à medida da hipotenusa;
2.	Com esse valor e o ângulo das juntas, determinar as medidas do cateto oposto e do cateto adjacente - esses valores correspondem a pontos que pertencem à trajetória (ver Figura 34);
3.	Criar ficheiro Excel:
a.	Introduzir os valores linha a linha segundo o seguinte formato - “x, y, x, a, B, Y, Relative Velocity, Bezier Point Count, Interpolation Factor 1, Interpolation Factor 2, Virtual Distance, Auxiliary Flags, Auxiliary Channel 1, Auxiliary Channel 2, Auxiliary Channel 3, Auxiliary Channel 4”;
b.	Guardar como ficheiro CSV (Comma Separated Values - Valores Separados por Vírgula).
4.	Importar trajetória para o V-REP. No modo de edição de caminhos selecionar “caminho é fechado”, e na janela das “propriedades de objeto” “parâmetros de formatação de caminho” selecionar “seguir a orientação do caminho” e como tipo de caminho, “definido por utilizador” em que a última coordenada liga à primeira coordenada.
Figura 34 - Esquema de obtenção de pontos para os caminhos.
Para configurar a parte da cinemática inversa:
1.	Criar os dummies necessários. São colocados no sítio desejado a se movimentar, neste caso nas extremidades dos elos. São utilizados aos pares e colocam-se os dois no mesmo local, um denominado target que vai estar ligado ao elo anterior em relação ao qual o elo seguinte se vai mexer, e um tip que vai estar associado ao elo que se movimenta. Devem de ser ambos definidos como “Mensuráveis”;
2.	Conectar os dois dummies através de uma ligação do tipo “IK, Tip-Target”;
3.	Validar a ligação feita através da criação de um grupo de cinemática inversa no
diálogo de “Módulos de Cálculo”	“Cinemática Inversa” “Adicionar Novo
Grupo de Cinemática Inversa”;
4.	No modelo de simulação foi sempre selecionado o método de cálculo DLS (Damped Least Squares) 7, amortecimento de 1 e número máximo de iterações igual a 99. Quanto maior for o número de iterações, mais suave é o movimento do modelo durante simulação, mas torna-se mais exigente a nível computacional;
5.	Na opção “Editar elementos IK”, selecionar o objeto tip desejado, verficar que a opção “Elemento é ativo” está selecionada, verificar se a base corresponde à base do modelo de simulação (neste caso a carapaça) e ativar todas as “Restrições” dos referenciais;
6.	Limitar os valores das juntas e verificar que estão todas no modo de “Cinemática Inversa” com a opção “Operação Híbrida” selecionada.
Para associar as trajetórias ao modelo:
1.	Na hierarquia, colocar a trajetória a pertencer ao elo anterior ao que se pretende mover;
2.	Colocar o target como filho da trajetória. Nas “propriedades de objeto” ativar a opção “seguir caminho-pai (apenas pai direto) ” e “fixo no caminho”;
3.	Posicionar a trajetória no local adequado;
4.	Sincronizar os tempos das trajetórias.
7 DLS - Também conhecido como o método de Levenberg-Marquardt. Evita muitos problemas relacionados com singularidades que a pseudo-inversa apresenta (a outra opção disponível, mas que não apresenta resultados satisfatórios) e proporciona uma forma estável para escolher o A6 (variação de ângulo por iteração) [57].
Figura 35 - Posicionamento dos dummies no modelo virtual.
5.3.	Nota Conclusiva
Foi realizada a descrição do desenvolvimento do modelo dinâmico e dos motores de física que o V-REP incorpora. Foi realizada também a abordagem cinemática através dos dados disponíveis em literatura especializada que serviram para a geração de trajetórias. As aproximações realizadas não chegaram a ser implementadas num microcontrolador. É de referir que inicialmente foi realizada uma análise de cinemática inversa, para ser posteriormente aplicada num algoritmo iterativo que alternasse entre seguir a trajetória e direcionar-se para a posição desejada, de modo a manter algumas características do movimento global, mas também sofrer alguma modelação de posicionamento. Esta abordagem não foi concluída.
Com a construção do modelo dinâmico e trajetórias o modelo fica apto a ser completo com as juntas e sensores que necessita.
6.	Sensores e Atuadores
O duo sensores-atuadores permite a interação do robô com o meio ambiente. Os sensores são responsáveis pela perceção do meio envolvente e os atuadores por agirem nele. Neste capítulo vão ser classificados, selecionados e descritos os componentes que vão ser utilizados no programa de simulação.
6.1.	Sensores
Os sensores são elementos indispensáveis num robô, permitindo que este se aperceba de informação do meio exterior (exteroceção) ou do estado interno em que se encontra (proprioceção).
Como exemplo de sensores externos comummente usados encontram-se os interruptores tácteis, sensores de distância (ópticos, ultra-sons) e de visão. Internamente os potenciómetros e encoders são essenciais para controlar o posicionamento/velocidade/aceleração das juntas; acelerómetros, giroscópios e IMUs (Inertia Measuring Units - Unidades de Medição de Inércia) permitem avaliar a posição/velocidade/aceleração do veículo. Estas grandezas são depois utilizadas para cálculos de cinemática inversa (dinâmica) e sistemas de controlo [58].
Podem ser também classificados em ativos ou passivos consoante a necessidade energética. Os sensores ativos consomem energia e emitem algum sinal para o meio ambiente que vai voltar a ser captado (após ter sido modificado no percurso por vários factores, o que fornece informação acerca do meio). Um exemplo será um sensor ultrasons que emite ondas sonoras de alta frequência para o meio e volta a captar as ondas refletidas de volta. Os sensores passivos não consomem energia e apenas captam sinais do meio envolvente (um sensor táctil, por exemplo).
O V-REP proporciona 3 tipos de sensores: proximidade, visão e força/binário.
No modelo virtual criado são apenas utilizados os sensores de visão e proximidade. Não há necessidade de encoders pois esses dados já são acedidos diretamente das juntas via programação.
6.1.1.	Sensores de Proximidade
Para um robô aquático um sensor de ultra-sons (US) é o tipo de sensor de proximidade mais adequado pois tem melhor propagação em água comparativamente aos sensores de infravermelhos ou laser. Para o modelo virtual foi escolhido um sensor US do tipo cone,
para deteção de obstáculos (estes têm de ser por sua vez definidos como detetáveis por sensor US). Na Figura 36 é visível o formato em cone do volume do alcance (a rosa) e volume mínimo de deteção (a azul).
Figura 36 - Sensor de proximidade.
6.1.2.	Sensor de visão
Para um robô com propósitos de exploração de terreno é fundamental aplicar uma câmara ou sensor de visão para visualizar o ambiente em que o robô se encontra e gravar essa informação. O sensor de visão permite, para além de visualização, a aplicação de filtros para diferenciar melhor as entidades observadas e ser possível assim a aplicação de algoritmos de visão artificial. Na Figura 37 está indicado o alcance do sensor de visão delimitado pelo módulo azul. Na simulação irá aparecer o conteúdo que o sensor capta através de uma janela adicional.
Figura 37 - Sensor de visão.
6.2.	Atuadores
São os componentes responsáveis por gerar movimento entre os elos consoante os comandos enviados pelo sistema de controlo. Os principais atuadores podem ser classificados em hidráulicos, pneumáticos e elétricos mediante o tipo de energia que utilizam (água, ar e fenómenos eletromagnéticos, respetivamente).
Dentro da categoria dos motores eletromagnéticos encontram-se os motores que funcionam a corrente alternada (motores síncronos e assíncronos) e a corrente contínua (motores de passo e servomotores, por exemplo).
Em particular, os servomotores em particular são amplamente utilizados em robótica dado que incorporam geralmente engrenagens, limitadores de eixo, potenciómetro ou outros meios para controlo da posição, sendo compactos e fáceis de controlar [59].
Outras alternativas envolvem a aplicação de polímeros eletroativos (também conhecidos por músculos artificiais) que conferem uma característica mais biológica. No entanto são uma tecnologia relativamente recente e sua implementação é muito mais complexa.
No simulador é possível modelar juntas prismáticas, de revolução, cilíndricas e esféricas (as duas últimas apenas na versão não atuada). No modelo criado são utilizadas apenas juntas prismáticas e de revolução.
6.2.1.	Elos e Juntas
6.2.1.1.	Modelo Anfíbio
O modelo anfíbio vai ter 3 GDL atuados no ombro e 1 GDL atuado no cotovelo. As juntas no simulador são apresentadas como cilindros vermelhos com um cilindro interior mais longo azul. Na Figura 38 é visível a disposição das juntas. Não é aconselhável fazer a ligação direta entre duas juntas. A ligação entre a carapaça e úmero, com as 3 juntas pelo meio é auxiliada com duas esferas puras não responsivas. O pescoço longo característico também vai ser emulado por uma junta prismática e 2 GDL de revolução junto à cabeça.
Figura 38 - Elos e juntas da pata anterior esquerda (à esquerda) e do pescoço/cabeça (direita) do modelo anfíbio.
6.2.1.2.	Modelo Marinho
O modelo anfíbio vai ter apenas 2 GDL atuados no ombro, dado que na literatura considera-se sempre o GDL do cotovelo como desprezável e como o modelo vai ser baseado no Amphibian Robotic Turtle, também não vai ser utilizado o GDL de protração/retração. A junta de elevação/depressão está rodada a 62° do plano horizontal. Os modelos em que se utilizam palmípedes são poucos e no caso de [12] apenas é utilizado o GDL de protração/retração. Comparativamente com a variante de água-doce, as tartarugas marinhas não têm a tendência de se retraírem completamente para a carapaça. Isso inclui o pescoço, e portanto o modelo apresenta apenas 2 GDL para mover a cabeça. Na Figura 39 é visível a disposição das juntas.
Figura 39 - Elos e juntas da cabeça, hidrofólio e palmípede.
6.2.2.	Parâmetros Físicos das Juntas
Na janela das propriedades de objeto das juntas está definido que as juntas não são cíclicas (a prismática por definição nunca pode ser cíclica), e limitada a posição mínima/alcance das juntas. O modo de operação para todas as juntas é o modo de cinemática inversa, com a opção de operação híbrida selecionada (ver Figura 40).
Figura 40 - Janela de diálogo das propriedades da junta.
6.2.3.	Componentes reais
Foram pesquisados os componentes mais adequados para serem utilizados no modelo real, também em parte para emular os parâmetros reais no modelo virtual (como binário, limite de velocidade e massa).
6.2.3.1.	Para as Patas
Os motores têm de ser pequenos para se inserirem no modelo e com um binário razoável para o robô se movimentar bem tanto em terra (sob a força gravítica) como em água (ambiente de maior atrito). Dado que a carga a que os motores da cabeça vão estar sujeitos é reduzida, e não são necessários para gerar movimento, os motores podem ter um binário mais reduzido.
Após uma breve pesquisa verificou-se que os motores HS-5086WP da Hitec (ver Figura 41) são os mais adequados para a aplicação em questão: pequeno, à prova de água (norma IP67) e binário adequado [60]. Na Tabela 7 estão listados os parâmetros do motor.
Figura 41 - Motor HS-5086WP da Hitec.
Tabela 7 - Parâmetros do motor HS-5086WP
Dimensões	31,0x15,2x31,0 mm
Binário (4,8V/6,0V)	3,0/3,6 kg.cm
Velocidade (4,8V/6,0V)	0,18/0,15 m/s
Massa	28,5 g
Sistema de Controlo	Programável, digital.
Corrente Livre	3 mA
Corrente Nominal	280 mA
Corrente de Curto-Circuito	1800 mA
6.2.3.2.	Para o Pescoço
O pescoço tem de ser atuado por uma junta prismática (ver Figura 42). Isso será realizado com a ajuda de um motor linear. As dimensões do motor são adequadas e é resistente à àgua (norma IP65).
Figura 42 - Motor Linear da ServoCity [61].
Tabela 8 - Propriedades do motor linear [61].
Impulso Dinâmico (12V)	11,34 kg
Tensão de funcionamento	6-12 V
Corrente livre	800 mA
Corrente Nominal	3,8 A
Corrente Curto-Circuito	15 A
6.2.3.3.	Para a Cabeça
Dado que a carga a que estes motores vão estar sujeitos é reduzida, e não são necessários para gerar movimento, os motores podem ter um binário mais reduzido. O motor ideal para esta aplicação: pequeno, binário baixo mas adequado, e económico (ver Tabela 9).
A cabeça do robô tem 2 GDL de modo a mover-se na horizontal e na vertical. Para este efeito existem já sistemas de pan-tilt que já vêm montados para simplificar a construção (ver Figura 43) [62].
Figura 43 - Sistema pan-tilt [62].
Tabela 9 -Propriedades do sistema pan-tilt [62].
Binário (4.5V/6.0V)	1,2/1,4 kg.cm
Massa	9 g
6.3.	Nota Conclusiva
Neste Capítulo foram abordados os aspetos básicos dos sensores e atuadores que permitiu a seleção dos componentes adequados para o modelo virtual, bem como para o protótipo real. As informações de massa e binário são aplicados no modelo virtual.
7.	Programação e Simulação
Aqui são abordados os aspetos relativos à programação do modelo virtual via scripts, bem como o elemento de interação do utilizador com o ambiente virtual - a interface personalizada.
7.1.	Programação da Locomoção
Existem variadas formas de programar os scripts embutidos de modo a implementar os comandos. De seguida são apresentadas as abordagens utilizadas.
7.1.1.	Trajetórias Importadas
Como referido no Capítulo 5, na secção 5.2.2. de Tratamento de Dados, foram criados ficheiros no formato CSV para serem posteriormente importados e incorporados no modelo. Na Figura 44 são visíveis os percursos a verde para cada uma das articulações (ombro, cotovelo, anca e joelho). A vermelho encontram-se os targets posicionados no caminho.
De seguida os ciclos são sincronizados uns com os outros, dado que nem todos apresentam o mesmo número de pontos ou comprimento. Isto é realizado através do comando simSetPathTargetVelocity().
Figura 44 - Modelo anfíbio e respetivas trajetórias importadas.
7.1.2.	Trajetórias por Vetores
Como alternativa a criar os ficheiros das trajetórias, são inseridos diretamente nos scripts os vetores com os valores dos ângulos para cada junta.
Neste caso, para os vetores com o mesmo número de elementos basta apresentarem a mesma velocidade de junta alvo (através do comando simSetJointTargetVelocity()).
7.1.3.	Sequência de Posições
Para este método obtiveram-se as posições consideradas essenciais a partir dos valores máximos e mínimos de cada junta (ver Figura 45). Combinando essas posições em sequência o perfil locomotor global torna-se semelhante aos 2 métodos anteriores que possuem todos os parâmetros angulares.
Figura 45 - Sequência de posições.
7.2.	Navegação e Velocidade
Devido a não se realizar a sincronização dos caminhos (no caso do procedimento da seção
7.1.1.) nem os processos iterativos do programa necessários para a realização das trajetórias (no caso dos métodos das seções 7.1.2. e 7.1.3.), não foi desenvolvido em código o ajuste da navegação e velocidade. No entanto a lógica de implementação rege-se pelos procedimentos apresentados.
No caso da velocidade, é criada uma variável ‘v’ (velocidade) que é dada pelo valor que o utilizador selecionar no botão de deslize da interface. Esse valor ‘v’ é depois adicionado a uma variável ‘vc’ de velocidade constante que está presente nos comandos simSetPathTargetNominalVelocity() (no caso da seção 7.1.1.) ou simSetJointTargetVelocity() (nos restantes).
Para o ajuste da direção/navegação, o simulador lê novamente o valor indicado pelo utilizador. Se deslizar o botão da UI para a esquerda, é aplicado um valor ‘n’ de velocidade que é adicionado apenas à componente ‘vc’ dos membros esquerdos, aumenta a frequência dos ciclos e muda de direção para a esquerda. O mesmo se aplica ao lado direito. Em alternativa, pode-se definir que ‘n’ é apenas adicionado a um dos membros de um dos lados, ou até mesmo subtraído a ‘vc’ dos membros do lado oposto.
7.3.	Simulação de Ambiente Aquático
No simulador não é possível simular diretamente fluídos. É necessário, portanto, recorrer à programação para criar um ambiente em que o robô responda como se encontrasse em água. O código utilizado para este efeito pode ser dividido em três partes [63].
A inicialização é comum a praticamente todos os scripts, corresponde ao local onde são definidas as variáveis e seus valores.
A compensação da massa (flutuação): Todos os elementos do corpo possuem uma massa específica (m). Cada elemento verifica a sua posição segundo o eixo dos zz e depois calcula uma força para compensar. Se o elemento possuir uma cota acima de z = 0, então não é adicionada força. Se estiver numa cota abaixo de z = 0, então é aplicada uma força F = m'g (em que g é a aceleração da gravidade, g = 9.81m/s2). Quando o elemento está na água, é compensado com uma força parcial. Isto pode ser implementado com a função simAddForceAndTorque(), aplicando a força a cada passo de simulação a uma forma não estática.
A compensação da velocidade (amortecimento radial): Cada elemento do corpo calcula a sua velocidade via simGetVelocity(). Se a cota estiver abaixo de z = 0 (ou até um certo grau, apenas parcialmente em água) uma força de compensação radial é calculada, sendo oposta ao movimento radial do elemento. Para este efeito a velocidade é calculada em relação ao referencial do objeto (velocidade linear e angular), é mantida apenas a
componente radial e depois adicionada à componente da força que vai ser aplicada ao objeto.
O programa encontra-se no Anexo B, devidamente comentado.
7.4.	Bloqueio Servo-visual de Alvo
Para aplicações de exploração de fauna, por exemplo, um mecanismo de bloqueio servovisual é útil para a gravação contínua de uma determinada entidade. Esta componente implementada foi realizada com base num tutorial V-REP disponível em [64].
Foi criado um caminho:
1.	“Adicionar caminho”;
2.	“Inserir novo ponto de controlo após a seleção” para inserir mais pontos;
3.	Mover os pontos para os locais desejados com o auxílio do menu “Posição/Orientação do Objeto/Item”;
4.	Selecionar a opção “caminho é fechado” na janela de edição de caminhos.
De seguida, algo para ser visualizado e que siga o percurso:
1.	Adicionou-se uma forma pura esférica, a qual se definiu como estática e a cor alterada para vermelho;
2.	Adicionou-se um target dummy, ao qual está associada a forma;
3.	Por sua vez o target foi associado ao caminho, e definido para seguir o caminho de maneira fixa;
4.	Alterar a velocidade nominal do target para v = 0,1 m/s.
Este procedimento visa simular um possível animal (esfera), que percorre um determinado trajeto (caminho), e que é detetado devido a alguma característica que sobressai em relação ao resto do ambiente (neste caso, a cor). A seguir vão ser aplicados filtros para que seja obtida a informação que nos interessa da imagem A imagem inicial corresponde à Figura 46.
Figura 46 - Imagem do sensor de visão sem qualquer filtro.
Na janela “Propriedades de Objeto” do sensor de visão:
1.	Alterou-se a resolução para 256/256;
2.	No diálogo de filtros:
a.	Adicionou-se o filtro de “Cor seletiva na imagem de trabalho”, alteraram-se os parâmetros de vermelho para 1, tolerância igual a 0,01, e para o verde e azul 0,5, com tolerância de 0,5. Este filtro faz com que apenas fique a informação que nos interessa, neste caso o vermelho (ver Figura 47);
b.	Aplicação de “Deteção de blobs na imagem de trabalho” (blobs são borrões que aparecem na imagem e são considerados como entidades contáveis e independentes do resto da imagem). Ao clicar no filtro existe a opção de variar o limite de deteção para facilitar a deteção de blobs e também inúmera os parâmetros de retorno que podem ser acedidos via as funções API (ver Tabela 10);
Vision_sensor	x
Vision sensor
x
Figura 47 - Imagem do sensor de visão com o filtro de cor seletiva (à esquerda) e combinado com a deteção de blobs (à direita).
Tabela 10 - Parâmetros API de retorno da função de deteção de blobs.
1.	Blob Count	N° de blobs
2.	Value Count per Blob = vCnt	N° do blob
3.	Blob 1 size	Tamanho do blob 1
4.	Blob 1 orientation	Orientação do blob 1
5.	Blob 1 position x	Posição em x do blob 1
6.	Blob 1 position y	Posição em y do blob 1
7.	Blob 1 width	Largura do blob 1
8.	Blob 1 height	Altura do blob 1
O próximo passo é associar um script ao sensor de visão (threaded) que obtém os parâmetros 5 e 6 da função de deteção de blobs e depois utiliza esses valores para realizar o controlo proporcional da velocidade a que as juntas da cabeça se devem movimentar. Este programa está no Anexo C.
Para informação adicional do sistema, como para monitorizar a variação da velocidade das juntas ao longo do tempo enquanto seguem o alvo e implementar parâmetros de controlo que suportem uma resposta mais precisa, adiciona-se uma vista flutuante que é associada a um gráfico. O gráfico foi definido de modo a comparar a velocidade da junta de protração/retração ao longo do tempo.
7.5.	Mecanismo de Exploração Adicional
A vantagem de um pescoço retráctil pode ser facilmente exemplificada através de um simples teste de colocar um objeto dentro de uma estrutura cuja abertura para o exterior seja reduzida, mas de espessura considerável. O modelo com pescoço mais alongado apresentará um resultado satisfatório, no entanto estará sempre limitado a um valor máximo (ver na Figura 48 o valor máximo de extensão). Outra das vantagens será o retrair completamente o pescoço para o interior de modo a proteger a cabeça, e por conseguinte todo o equipamento presente na extremidade (ver Figura 49). No entanto, num modelo robótico o pescoço longo pode ser aplicado na mesma a uma plataforma estrutural baseado no modelo marinho, caso seja mais vantajoso aplicar o tipo de locomoção marinho.
Figura 48 - Comparação do comprimento dos pescoços completamente estendidos dos dois modelos.
Figura 49 - Pescoço retraído do modelo anfíbio.
7.6.	Interface Utilizador Personalizada
A interface para utilizador personalizada pode ser facilmente criada através do editor de interfaces personalizadas. Existem 4 opções em relação ao que se pode inserir: legendas, botões simples, botões de deslizamento e caixas de edição.
A interface criada possui a opção de ajustar velocidade, direção de navegação, ajustar retração/extensão do pescoço, mover a cabeça para cima/baixo/lados, e alternar entre os modos de nado e marcha (ver Figura 50). A nível de interface de utilizador a componente do pescoço e cabeça encontram-se completamente operacionais (código disponível no Anexo D).
Figura 50 - Interface Utilizador Personalizada
7.7.	Nota Conclusiva
Foram descritos os conteúdos de programação a serem desenvolvidos para implementação do controlo do robô. A programação foi concluída na sua totalidade, mas a estrutura lógica está desenvolvida.
8.	Conclusões
Neste Capítulo é feito um resumo de tudo o que foi realizado na dissertação, bem como o que foi aprendido ao longo do percurso e as conclusões finais acerca do trabalho.
8.1.	Resumo da Dissertação Realizada
Foi selecionado um modelo biológico com características com muito potencial para serem biomimetizadas para um sistema robotizado, a tartaruga-de-água-doce. De seguida foi realizada uma análise do estado da arte para descobrir e comparar os modelos de robôs bioinspirados já existentes.
Dentro da literatura, a tartaruga-de-orelhas-vermelhas é um ser vivo bastante estudado e por isso existiam dados cinemáticos acerca do seu modo de locomoção. Com base na informação recolhida realizou-se a comparação com outras tartarugas e selecionaram-se as características desejadas a serem implementadas no robô.
Foram mapeados os processos de desenvolvimento de um robô biomimético e compreendido o modo como o utilizador pode modelar uma simulação. O V-REP apresentou as funcionalidades desejadas para desenvolver o modelo virtual. Paralelamente, foram estudados e selecionados os sensores e atuadores a incluir no robô para uma simulação adequada e o mais próximo da realidade, assim como para uma posterior construção de um protótipo.
O modelo dinâmico foi desenvolvido, e as trajetórias adaptadas para a implementação. Completou-se o modelo com as juntas e sensores necessários para o robô. Por fim, definiu-se a lógica de controlo via scripts para programar o robô.
8.2.	Conclusões
Toda a dinâmica do robô foi simulada no software V-REP. Este software disponibiliza diferentes algoritmos (motor de física) para simulação da dinâmica. A alteração do motor de física influencia muito o desempenho da simulação. O Vortex é sem dúvida o motor mais preciso e estável de todos. O modelo simulado via Bullet e ODE apresenta muitos tremores sobretudo nos instantes iniciais da simulação.
Não permite simulação direta de fluídos, apenas por implementação de código para se assemelhar visualmente a ambiente aquático, o que restringe a possibilidade de simular robôs anfíbios.
O procedimento de implementação de trajetórias no software V-REP é relativamente simples. Pode ser necessário ajustar outros parâmetros definidos inicialmente como o binário do motor, massa das formas, parâmetros de controlo PID pré-definidos e selecionar a opção de material de alta fricção para as patas, para que o modelo se comporte como desejado.
Na Tabela 11 são apresentadas as vantagens e desvantagens das diferentes abordagens de programação. O método de sequência de posições pode ser considerado o mais simples.
Tabela 11 - Vantagens e desvantagens da metodologia de programação utilizada.
Método	Vantagens	Desvantagens
Trajetórias Importadas	Evita alguma programação adicional.	Mais complexo de sincronizar.
Trajetórias por Vetores	Muito mais simples sincronizar os tempos.	
	Simplifica em muito as	
Sequência de Posições	trajetórias, sendo mais fácil a deteção de erros e menor o custo computacional. Mais simples de sincronizar.	Não é tão fiel ao modelo real.
		
8.3.	Sugestões de trabalhos futuros
Em trabalhos futuros seria interessante completar o atual projeto da seguinte forma:
•	Realizar uma análise experimental com um programa mais especializado em análises dinâmicas, como o Adams da MSC Software, para comparar as diferenças hidrodinâmicas entre modelo de tartaruga-de-água-doce e modelo de tartaruga-marinha, nomeadamente a nível de carapaça, saliências laterais das escamas das patas e padrão de locomoção;
•	Seleção do método de cálculo de cinemática inversa mais adequado (algébrico, via Jacobiano ou quaterniões) e implementação de um algoritmo híbrido com a informação das trajetórias, alternando de modo a que o objeto possa convergir para uma dada posição, mas sem perder a característica essencial da trajetória;
•	Avaliar detalhadamente o impacto dos parâmetros de controlo PID de posição das juntas;
•	Aplicar visão artificial para melhor identificação do ambiente em geral e entidades em concreto;
•	Após a concretização de todos os aspetos de atuação, periféricos sensoriais e de comunicação, selecionar um processador adequado para implementação do sistema de controlo e se necessário completar com add-on's de PCB, que podem ser facilmente desenvolvidos com o software apropriado, como o DesignSpark PCB (open source);
•	Desenvolvimento do protótipo real.
8.4.	Nota Conclusiva
O desenvolvimento desta dissertação proporcionou uma oportunidade única de desenvolver um projeto de raiz e, acima de tudo, combinar o conhecimento e aprofundar o domínio de várias áreas lecionadas ao longo do percurso académico. Apesar de não ter sido realizada a análise comparativa entre o desempenho dos dois modelos virtuais, foi adquirido muito conhecimento ao longo de todo o processo. Existem inúmeras sugestões para continuar a desenvolver o robô anfíbio tartaruga, pois pela análise do estado da arte, trata-se de uma área da robótica ainda pouco desenvolvida e com necessidade de investigação.
Referências bibliográficas
[1]	Rosheim, M. “L'automata programmable di Leonardo”, XI Lettura Vinciana (2000).
[2]	Lindsay, D. (1997). Talking Head. American Heritage of Invention and Technology 13: 57-63.
[3]	Babbage, H. (1910). Babbage's analytical engine. Monthly Notices of the Royal Astronomical Society 70: 517-526.
[4]	McCartney, S. “Eniac: The Triumphs and Tragedies of the World's First Computer”, Berkley Trade (1999).
[5]	Turing, A. (1950). Computing Machinery and Intelligence. Mind 236: 433-460.
[6]	Walter, G. (1950). An Imitation of Life. Scientific American 5: 42-45.
[7]	Williams, K. “Amphibionics - Build Your Own Reptilian Robot”, Capitulo 7 -“Turtletron - Build Your Own Robotic Turtle”, McGraw-Hill (2003): 271-334.
[8]	Bar-Cohen, Y., Breazeal, C. “Biologically Inspired Intelligent Robots”, SPIE - The international Society for Optical Engineering (2003).
[9]	http://www.robotshop.com/blog/en/how-to-make-a-robot-lesson-2-choosing-a-robotic-platform-2-3706
[10]	Zhao, W., Hu, Y., Wang, L., Jia, Y. “Development of a Flipper Propelled Turtlelike Underwater Robot and Its CPG-based Control Algorithm”, Proceedings on the 47th IEEE Conference on Decision and Control. Cancun, Mexico, 9-11 Dezembro 2008: 5226 - 5231.
[11]	Xu, J., Yan, N., Zhang, M. “Analysis of a Bionic Hydrofoil Propulsive Performance”, Proceedings of the 2011 IEEE International Conference on Mechatronics and Automation. Pequim, China, 7-10 Agosto 2011: 1418-1422.
[12]	Low, K. H., Zhou, C., Ong, T. W., Yu, J. “Modular Design and Initial Gait Study of an Amphibian Robotic Turtle”, Proceedings of the 2007 IEEE International Conference on Robotics and Biomimetics. Sanya, China, 15-18 Dezembro 2007: 535 - 540.
[13]	Wang, W., Yu, J., Ding, R., Tan, M. “Bio-Inspired Design and Realization of a Novel Multimode Amphibious Robot”, Proceedings of the IEEE International Conference on Automation and Logistics. Shenyang, China, Agosto 2009: 140-145.
[14]	Floyd, S., Keegan, T., Palmisano, J., Sitti, M. “A Novel Water Running Robot Inspired by Basilisk Lizards”, Proceedings of the 2006 IEEE/RSJ International
Conference on Intelligent Robots and Systems. Pequim, China, 9-15 Outubro 2006: 5430-5436.
[15]	Crespi, A., Karakasiliotis, K., Guignard, A., Ijspeert, A. J. (2013). Salamandra Robotica II: Na Amphibious Robot to Study Salamander-Like Swimming and Walking Gaits. IEEE Transactions on Robotics 29: 308-320.
[16]	Wang, M., Sun, L., Wang, Y. “Dynamic Modelling and Optimized Energy Distribuition of Amphibian Walking Robot”, Proceedings of the 2006 IEEE International Conference on Mechatronics and Automation. Luoyang, China, 25-28 Junho 2006: 634-638.
[17]	Environmental Science Investigation http://esi.stanford.edu/exercise/exercise4.htm , acedido a 4 de Outubro de 2014.
[18]	Licht, S., Hover, F., Triantafyllou, M. S. Design of a Flapping Foil Underwater Vehicle.
[19]	Naro - Nautical Robot
http://www.naro.ethz.ch/p2/tartaruga.html , acedido a 4 de Outubro de 2014.
[20]	Konno, A., Furuya, T., Mizuno, A., Hishinuma, K., Hirata, K., Kawada, M. “Development of a Turtle-like Submergence Vehicle”, Proceedings of the 7th International Symposium on Marine Engineering. Tokyo, Japan, 24-28 Oct. 2005: 1 -5.
[21]	Shimoya, J., Maeda, K., Yoshida, E., Kato, N. “Estimation of Swimming and Walking Performances of a Robotic Turtle”, Proceedings of the Twenty-first (2011) International and Polar Enginnering Conference. Maui, Hawaii, USA, 19-24 Jun. 2011: 215-222.
[22]	Mazouchova, N., Umbanhowar, P., Goldman, D. (2013). Flipper-driven terrestrial locomotion of a sea turtle-inspired robot. Bioinspiration &amp;amp; Biomimetics 8: 1-14.
[23]	Kemp, M., Hobson, B., Long, J. H. (2005). Madeleine: An Agile AUV Propelled By Flexible Fins. Proceedings on the 14th International Symposium on Unmanned Untethered Submersible Technology (UUST): 1 - 6.
[24]	Han, B., Luo, X., Wang, X., Chen, X. (2011). Mechanism Design and Gait Experiment of an Amphibian Robotic Turtle. Advanced Robotics 25: 2083-2097.
[25]	Sandra, H., Flegra, B., John, R. S. (2003). The dual function of the lung in chelonian sea turtles for buoyancy control and oxygen storage. Journal of Experimental Marine Biology and Ecology 297:123-140.
[26]	Kawamura, Y., Shimoya, J., Yoshida, E., Kato, N., Suzuki, H., Senga, H. “Design and Development of an Amphibious Robot with Fin Actuators”, Proceedings of the Twentieth (2010) International Offshore and Polar Engineering Conference. Pequim, China, 20-25 Junho 2010: 318-322.
[27]	Jablonksi, D., Erwin, Douglas H., Lipps, Jere H. “Evolutionary Paleobiology”, Capítulo 12 - “Locomotion and Respiration in Aquatic Air-Breathing Vertebrates”. The University of Chicago Press (1996): 337-344.
[28]	Blob, R. W., Riviera, A. R. V., Westneat, M. W. “Biology of Turtles”, Capítulo 6 “Hindlimb function in turtle locomotion: limb movements and muscular activation across taxa, environment, and ontogeny” em Wyneken, J., Godfrey, M. H., Bels, V., CRC Press (2008): 139-162.
[29]	Licht, S., Polidoro, V., Flores, M., Hover, F. S., Triantafyllou, M. S. (2004). Design and projected performance of a flapping foil AUV. IEEE Journal of oceanic engineering 29: 3.
[30]	Chu, D., Liu, X., Zhang, M. “Research on Turtle Hydrofoil Motion Principle and Bionics. Proceedings of the IEEE International Conference on Automation and Logistics”. Jinan, China, 18-21 Agosto 2007: 2373-2378.
[31]	Blob, R. W., Riviera, A. R. V., Westneat, M. W. “Biology of Turtles”, Capítulo 5-“Evolution of Locomotion in Aquatic Turtles” em Wyneken, J., Godfrey, M. H., Bels, V., CRC Press (2008): 97-133.
[32]	Xu, J., Liu, X., Chu, D., Sun, L., Zhang, M. “Analysis and Experiment Research of The Turtle Forelimb's Hydrofoil Propulsion Method”, Proceedings of the 2009 IEEE International Conference on Robotics and Biomimetics. Guilin, China, 19-23 Dec. 2009: 386 - 391.
[33]	Font, D., Tresanchez, M., Siegentahler, C., Teixidó, M., Palleja, T., Pradalier, C., Palacín, J. (2011). Experimental determination of the hydrofoil’s angle of attack in the case of a turtle-like Autonomous Underwater Vehicle.
[34]	Riviera, G., Riviera, A. R. V., Blob, R. W. (2011). Hydrodynamic stability of the painted turtle (Chrysemys picta): effects of four-limbed rowing versus forelimb flapping in rigid-bodied tetrapods. Journal of Experimental Biology 214: 11541162.
[35]	Laurence, Ashley M. “Laboratory Anatomy of the Turtle”, Capítulo 2 - “Skeletal Systems (The Endoskeleton)”, WM. C. Brown Company (1955).
[36]	Wyneken, J., Godfrey, M. H., Bels, V. “Biology of Turtles”, CRC Press (2008).
[37]	Balani, K., Patel, R. R., Keshri, A. P., Lahiri, D., Agarwal, A. (2011). Multi-scale hierarchy of Chelydra serpentina: Microstructure and mechanical properties of turtle shell. Journal of the Mechanical Behaviour of Biomedical Materials 4: 14401451.
[38]	Depecker, M., Renous, S., Penin, X., Berge, C. (2006). Procrustes analysis: a tool to understand shape changes of the humerus in turtles (Chelonii). Comptes Rendus Palevol 5: 509-518.
[39]
[40]
[41]
[42]
[43]
[44]
[45]
[46]
[47]
[48]
[49]
[50]
[51]
[52]
Blob, R. W., Riviera, A. R. V., Westneat, M. W. “Biology of Turtles”, Capitulo 7-“Cervical Anatomy and Function in Turtles” em Wyneken, J., Godfrey, M. H., Bels, V., CRC Press (2008): 163-184.
Laurence, Ashley M. “Laboratory Anatomy of the Turtle”, Capitulo 3 - “Muscular System”, WM. C. Brown Company (1955).
Riviera, A. R. V., Blob, R. W. (2010). Forelimb kinematics of the slider turtle (Trachemys scripta) during swimming and walking: shared and novel strategies for meeting locomotor demands on water and land. Journal of Experimental Biology 20: 3515-3526.
Laurence, Ashley M. “Laboratory Anatomy of the Turtle”. WM. C. Brown Company (1955).
Animal Diversity Web http://animaldiversity.ummz.umich.edu/accounts/Trachemys scripta/classificati on/ , acedido a 4 de Outubro de 2014.
Nature Mapping Program http://naturemappingfoundation.org/natmap/facts/painted turtle vs red eared slider.html , acedido a 4 de Outubro de 2014.
Zug, George R. “Buoyancy, Locomotion, Morphology of the Pelvic Girdle and Hindlimb, and Systematics of Cryptodiran Turtles”, Subcapitulo - “Locomotor Patterns”, Museum of Zoology, University of Michigan (1971): 8-27.
Yu, J., Wang, L., Tan, M. “A Framework for Biomimetic Robot Fish's Design and Its Realization”, 2005 American Control Conference. Portland, EUA, 8-10 Junho: 15931598.
MathWorks
http://www.mathworks.com/help/curvefit/index.html , acedido a 4 de Outubro de 2014.
Solidworks
http://www.solidworks.com/ , acedido a 4 de Outubro de 2014.
V-REP User Manual
http://www.coppeliarobotics.com/helpFiles/index.html , acedido a 4 de Outubro de 2014.
lerusalimschy, “R. Programming in Lua”, 2° Edição (2013).
Doctor Lara Croft
http://www.doctorlaracroft.com/node/7/take , acedido a 4 de Outubro de 2014.
X-ray photography of Jim Wehtje http://jimwehtje.photoshelter.com/image/I0000h5MYdwrmRVc , acedido a 4 de Outubro de 2014.
[53]	Corke, P. “Robotics, Vision and Control - Fundamental Algorithms in MATLAB”, Capítulo 7 - “Robot Arm Kinematics”, Springer (2011): 137-170.
[54]	Kucuk, S., Bingul, Z. “Industrial-Robotics-Theory-Modelling-Control”, Capítulo 4 -“Robot Kinematics: Forward and Inverse Kinematics”, Sam Cubero (2006).
[55]	Pace, C. M., Blob, R. W., Westneat, M. W. (2001). Comparative kinematics of the forelimb during swimming in read-eared slider (Trachemys scripta) and spiny softshell (Apalone spinifera) turtles. Journal of Experimental Biology 204: 32613271.
[56]	Pace, C.M., Blob, R.W., Westneat, M.W. (2001). Comparative kinematics of the forelimb during swimming in red-eared slider (Trachemys scripta) and spiny softshell (Apalone spinifera) turtles. Journal of Experimental Biology 204: 3261 -3271.
[57]	Buss, S. R. (2009). Introduction to Inverse Kinematics with Jacobian Transpose, Pseudoinverse and Damped Least Squares methods. University of California, San Diego. Department of Mathematics.
[58]	Pieri, E. R. “Curso de Robótica Móvel”, Capítulo 2 - “Sensores”, (2002).
[59]	Pieri, E. R. “Curso de Robótica Móvel”, Capítulo 3 - “Atuadores”, (2002).
[60]	Hitec http://hitecrcd.com/products/servos/waterproof-servos-2/hs-5086wp-digital-waterproof-micro-servo/product , acedido a 4 de Outubro de 2014.
[61]	ServoCity
http://www.servocity.com/html/25 lbs thrust linear actuator.html#.VDFvdfldU Y , acedido a 4 de Outubro de 2014.
[62]	Dawn Robotics
http://www.dawnrobotics.co.uk/dagu-sensor-pan-tilt-kit/ , acedido a 4 de Outubro de 2014.
[63]	V-REP Forum http://www.forum.coppeliarobotics.com/viewtopic.php?f=9&amp;amp;t=433 , acedido a 4 de Outubro de 2014.
[64]	Youtube - Canal de Nikolai K.
https://www.youtube.com/watch?v=kOjQRYmeX o , acedido a 4 de Outubro de 2014.
Anexos
Anexo A - Ângulos (em graus) das articulações/orientações dos membros anteriores ao longo de um ciclo de locomoção. Células a cinza correspondem a valores alterados.
Ciclo (%)	Ângulo Art. Umeral P/R (nado)	Ângulo Art. Umeral E/D (nado)	Ângulo Art. Cotovelo (nado)
0	-4	-6	98
2	3	-3	94
4	13	0	88
6	26	4	83
8	39	9	77
10	51	13	72
12	65	16	69
14	78	21	65
16	90	24	63
18	100	26	61
20	110	28	60
22	118	30	61
24	125	32	63
26	130	33	65
28	135	34	67
30	139	34	70
32	140	34	74
34	140	34	76
36	140	35	78
38	140	35	80
40	139	35	82
42	135	35	85
44	133	35	86
46	128	34	88
48	125	33	90
50	121	31	92
52	115	29	94
54	110	28	95
56	103	28	96
58	98	26	96
60	93	25	96
62	87	24	96
64	84	23	95
Ciclo (%)	Ângulo Art. Umeral P/R (nado)	Ângulo Art. Umeral E/D (nado)	Ângulo Art. Cotovelo (nado)
66	80	22	94
68	76	21	92
70	73	20	88
72	69	18	85
74	67	16	83
76	63	15	81
78	58	12	80
80	53	9	80
82	46	5	84
84	39	1	86
86	31	-3	90
88	23	-5	94
90	17	-7	96
92	9	-8	100
94	2	-8	101
96	-2	-7	101
98	-4	-6	100
100	-4	-6	98
Tabela x - Ângulos (em graus) das articulações/orientações dos membros posteriores ao longo de um ciclo de locomoção. Células a cinza correspondem a valores alterados.
Ciclo (%)	Angulo Art. Femoral P/R (nado)	Angulo Art. Femoral P/R (marcha)	Angulo Art. Femoral E/D (nado)	Angulo Art. Femoral E7D (marcha)	Angulo Art. Joelho (nado)	Angulo Art. Joelho (marcha)
0	0	0	-17	-15	85	90
4	7	9	-14	-14	66	80
8	13	16	-13	-13	56	66
12	19	27	-12	-12	48	57
16	27	39	-11	-10,5	43	52
20	36	48	-10	-8,5	42	47
24	44	60	-9,5	-6	42	56
28	53	65	-7	-4	43	72
32	58	68	-5,5	-2,5	47	81
36	64	69	-4	-1,5	53	88
40	70	70	-4	-1	63	82
44	74	69	-4	-1	79	74
48	74	68	-4	-1,5	93	65
52	71	65	-4,5	-2	104	61
56	69	62	-5	-2	109	56
60	65	59	-5,5	-3	107	54
64	61	55	-5	-4,5	104	53
66	55	50	-4,5	-6	101	54
72	45	45	-4,5	-7	100	55
76	36	37	-5,5	-8,5	101	57
80	27	32	-7,5	-10,5	105	63
84	17	22	-10,5	-12	108	67
88	7	14	-113,5	-13	110	75
92	5	7	-15,5	14,5	105	83
96	0	3	-16	-15	95	89
100	0	0	-17	-15	85	90
Anexo B - Programa de Simulação de Água.
if (simGetScriptExecutionCount()==0) then
Slider4=simGetObjectHandle("Slider4")
Shell=simGetObjectHandle("Shell") mass=10.68
str=-7,16
--Handle da dinamicSlider --Handle da textura da Slider --Massa do objecto --Valor desconhecido
end
simHandleChildScript(sim_handle_all_except_explicit)
--Compensação em Massa
p=simGetObjectPosition(Shell,-1) cm=(0.25-p[3])/0.25 if (cm&gt;0.25) then cm=0.25 end	-- obtém vector posição (x,y,z) --centro de massa, o p[3] é a posição em z -- tem a ver com o estar acima ou abaixo de um certo valor de z, para ver se é compensado ou não.
if (cm&lt;0.25) then cm=0 end simAddForceAndTorque(Slider4,{0,0,9.81*cm})	-- contrariar o -9.81 do z da gravidade.
--Compensação Radial
linV,angV=simGetVelocity(Slider4) m=simGetObjectMatrix(Shell,-1)	-- obter velocidade linV para compensação radial -- obtém matriz transformação
m[4]=0	-- anula-se a componente posição, fica apenas a da orientação
m[8]=0
m[12]=0 mi=simGetInvertedMatrix(m) linV=si mMu ItiplyV ector( mi,linV) linV[1]=0 linV=simMultiplyVector(m,linV)	-- porque a força de compensação é inversa à velocidade. -- vetor velocidade linear -- quando z=0 (isto é aplicado na matriz invertida) -- vetor velocidade linear
f={linV[1 ]*mass*str*cm,linV[2]*mass*str*cm,linV[3]*mass*str*cm}	--vetor força
simAddForceAndTorque(Slider4,f)	-- Compensação
end
Anexo C - Programa de Bloqueio de Servo-visualização.
simSetThreadSwitchTiming(2) -- Default timing for automatic thread switching simDelegateChildScriptExecution()
--Handles dos Objetos
yaw=simGetObjectHandle("HeadMotor_yaw") pitch=simGetObjectHandle("HeadMotor_pitch") cam=simGetObjectHandle("Vision_sensor")
while (simGetSimulationState()~=sim_simulation_advancing_abouttostop) do
result,pack1,pack2=simReadVisionSensor(cam)
--Obter as posições do alvo na câmara segundo x e y através do pack2 que contém os valores da função blob.
xtarget=pack2[5]
ytarget=pack2[6]
--Definir velocidade das juntas para que a câmara acompanhe o alvo.
simSetJointTargetVelocity(yaw, 1*(0.5-xtarget)) simSetJointTargetVelocity(pitch, 1*(0.5-ytarget))
end
Anexo D - Programa de Interface (Apenas componente do pescoço)
if (simGetScriptExecutionCount()==0) then
Slider4=simGetObjectHandle("Slider4") --SliderBase=simGetObjectAssociatedWithScript(sim_handle_self) -- Buscar Targets
Neck=simGetObjectHandle("Neck_Target") Head=simGetObjectHandle("Head_Target") -- Buscar Juntas
NeckSlide=simGetObjectHandle("NeckMotor_slide") HeadPitch=simGetObjectHandle("HeadMotor_pitch") HeadYaw=simGetObjectHandle("HeadMotor_yaw")
-- Posições
NeckPos=simGetJointPosition("NeckSlide") Head_ypos=simGetJointPosition("HeadYaw") Head_zpos=simGetJointPosition("HeadPitch")
-- User Interface
ui=simGetUIHandle("Slider4UI")
simSetUIButtonLabel(ui,0,simGetObjectName(Slider4).." user interface")
--Definir valores mínimos e alcance.
minVal2={-0.06,
-math.pi/2,
-math.pi/2}
--neck in_out
--head down_up --head left_right
rangeVal2={0.11,
math.pi,
math.pi}
--neck in_out
--head down_up
--head left_right
uiSliderID2={7,10,12}
-- Valores obtidos da UI simSetUISlider(ui,uiSliderID2[1],(NeckPos-minVal2[1])*1000/rangeVal2[1]) simSetUISlider(ui,uiSliderID2[2],(Head_zpos-minVal2[2])*1000/rangeVal2[2]) simSetUISlider(ui,uiSliderID2[3],(Head_ypos-minVal2[3])*1000/rangeVal2[3])
end
simHandleChildScript(sim_handle_all_except_explicit)
-- Ler Valores UI simSetJointTargetPosition(NeckSlide,minVal2[1]+simGetUISlider(ui,uiSliderID2[1])*r angeVal2[1]/1000)
simSetJointTargetPosition(HeadPitch,minVal2[2]+simGetUISlider(ui,uiSliderID2[2])* rangeVal2[2]/1000)
simSetJointTargetPosition(HeadYaw,minVal2[3]+simGetUISlider(ui,uiSliderID2[3])*r angeVal2[3]/1000)
end</field>
	</doc>
</add>