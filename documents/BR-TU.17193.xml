<?xml version="1.0" encoding="utf-8"?>
<add>
	<doc>
		<field name="docid">BR-TU.17193</field>
		<field name="filename">23965_Ricarte_LidianyTeotonio_M.pdf</field>
		<field name="filetype">PDF</field>
		<field name="text">
 

 

LIDIANY TEOTONIO RICARTE 
 
 
 
 
 
 
 

O USO DA FERRAMENTA SCRATCH NA ESCOLA 
PÚBLICA: MULTILETRAMENTOS, AUTORIA E 

REMIXAGEM 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

CAMPINAS,  
2015 

 
I 



 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

ii 



 

 

UNIVERSIDADE ESTADUAL DE CAMPINAS 
INSTITUTO DE ESTUDOS DA LINGUAGEM 

 
LIDIANY TEOTONIO RICARTE 

 
O USO DA FERRAMENTA SCRATCH NA ESCOLA PÚBLICA: 

MULTILETRAMENTOS, AUTORIA E REMIXAGEM 
 
 

 
 
 
 

Dissertação de mestrado apresentada ao 
Instituto de Estudos da Linguagem da 
Universidade Estadual de Campinas para 
obtenção do título de Mestra em Linguística 
Aplicada, na área de Linguagem e Educação 

                                                  
 

 
 

Orientador: Prof. Dr. Petrilson Alan Pinheiro da Silva 
 

 
 
 

CAMPINAS, 
2015 

iii 



Ficha catalográfica
Universidade Estadual de Campinas

Biblioteca do Instituto de Estudos da Linguagem
Crisllene Queiroz Custódio - CRB 8/8624

    
  Ricarte, Lidiany Teotonio, 1983-  
 R357u RicO uso da ferramenta Scratch na escola pública : multiletramentos, autoria e

remixagem / Lidiany Teotonio Ricarte. – Campinas, SP : [s.n.], 2015.
 

   
  RicOrientador: Petrilson Alan Pinheiro da Silva.
  RicDissertação (mestrado) – Universidade Estadual de Campinas, Instituto de

Estudos da Linguagem.
 

    
  Ric1. Programa Um Computador por Aluno. 2. Scratch (Linguagem de

programação de computador). 3. Multiletramentos. 4. Autoria. 5. Remixes. I.
Pinheiro, Petrilson Alan,1977-. II. Universidade Estadual de Campinas. Instituto de
Estudos da Linguagem. III. Título.

 

Informações para Biblioteca Digital

Título em outro idioma: The use of the Scratch tool in public school : multileteracies,
authorship and remixing
Palavras-chave em inglês:
Programa Um Computador por Aluno
Scratch (Computer program language)
Multiliteracies
Authorship
Remixes
Área de concentração: Linguagem e Educação
Titulação: Mestra em Linguística Aplicada
Banca examinadora:
Petrilson Alan Pinheiro da Silva [Orientador]
Cláudia Hilsdorf Rocha
Heloísa Andréia de Matos Lins
Data de defesa: 15-06-2015
Programa de Pós-Graduação: Linguística Aplicada

Powered by TCPDF (www.tcpdf.org)

iv

http://www.tcpdf.org


v





























































































































































































































































































































fe
Texto digitado



144

fe
Texto digitado

fe
Texto digitado

fe
Texto digitado

fe
Texto digitado

fe
Texto digitado

fe
Texto digitado

fe
Texto digitado

fe
Texto digitado

Fernando
Typewriter

Fernando
Typewriter

Fernando
Typewriter
ANEXO 2 - MANUAL DE PROGRAMAÇÃO S4A



1

UNICAMP – Universidade estadual de Campinas 
NIED - Núcleo de informática aplicada à educação

Manual de programação
S4A para a Attobox

                                   1° EDIÇÃO  
                

Luís Guilherme Rodrigues 

Felipe Urbano 

João Vilhete Viegas d’Abreu

  

145



2

Sumário 

Capítulo 1 – Attobox, Classmate e Arduíno 3 
1.1 – Introdução a Attobox 3 
1.2 – Detalhamento da parte física da Attobox 4 
        1.21 – Lateral 1 4
          1.22 – Lateral 2 5
          1.23 – Lateral 3 5
          1.24 – Lateral 4 6
1.3 – Introdução ao Classmate 7 
1.4 – Introdução breve ao Arduíno 7

Capítulo 2 – Scratch For Arduíno (S4A) 8 
2.1 – Introdução ao S4A 8 
2.2 – Iniciando o S4A no Ubuntu 8 
2.3 – Conexão entre S4A e Attobox 10 
2.4 – Introdução aos comandos do S4A 11 
2.5 – Funções do comando de Controle 12 
2.6 – Funções do comando de Movimento 13 
2.7 – Funções do comando de Operadores 15 
2.8 – Funções do comando de Som 16 
2.9 – Introdução ao comando Variável e suas funções 17 

Capítulo 3 – Demonstração de programações 19 
3.1 – Ligando um LED 19 
3.2 – Ligando um LED através de um botão 20 
3.3 – Ligando um motor através do teclado 21 
3.4 – Acionando um motor através de um botão 22 
3.5 – Controlando o sentido de rotação de um motor 23 
3.6 – Acionando um motor através de uma variável 24 
3.7 – Como salvar uma programação no S4A 25 

Capítulo 4 – Treinando o conhecimento 26 
4.1 – Exercícios 26 
4.2 – Respostas dos exercícios 27

146



3

Capítulo 1 : Attobox, Classmate e Arduíno  

1.1 – Introdução a Attobox 

    A Attobox é uma interface eletrônica baseada na placa controladora Arduino, 
que permite controlar motores, sensores, atuadores, lâmpadas, dentre outros 
componentes elétricos. Esta interface, conforme representada na figura 1, possui 
conectores USB acoplados em suas laterais, conexão de componentes eletro-
eletrônico e/ou dispositivos robóticos.  

Figura 1: Interface eletrônica Attobox

147



4

1.2 – Detalhamento da parte física da Attobox 

1.21 – Lateral 1 da Attobox: 

Figura 2: Lateral 1 da Attobox 

1- Chave seletora para os modos: 
     - Conexão com o computador (USB). 
     - Bateria (XBEE) – não utilizado para o S4A. 

2- Conector Mini-USB:  
    Utilizado para a troca de dados entre o computador e o arduino através de um 
cabo USB.

3- LED verde: 
    Quando aceso indica o status em que a placa se encontra. Por exemplo: 
Quando o Led estiver piscando, indica que a placa está executando a 
programação enviada pelo S4A. 

4- Chave seletora “liga / desliga”:
   Esta em posição “liga” permite a alimentação dos motores através de uma 
bateria 9v. 

148



5

1.22 – Lateral 2 da Attobox: 

Figura 3: Lateral 2 da Attobox 

5- Portas “A5 D10” “A6-D11”:  
     Saídas USB utilizadas para o acionamentos dos motores através dos 
comandos do S4A. 

6- Portas Digitais “0, 1, 2, 3, 4, 5, 6, 7, 8 e 9” : 
    - As entradas digitais 0 e 1 do attobox correspondem respectivamente aos 
comandos “Digital 1” e “digital 2” no S4A.  São utilizadas para a conexão de 
sensores, como por exemplo, um botão.
    - As entradas 2, 3, 4, 5, 6, 7, 8 e 9 não são utilizadas pelo S4A. 

1.23 – Lateral 3 da Attobox: 

Figura 4: Lateral 3 da Attobox 

7- Entrada “Box 6 v” :  
     Alimentação externa para a placa. 

8- Entradas M1 9 v e M2 9 v: 
     Utilizadas para a alimentação de ambos os motores com uma bateria 9 v 
externa a Attobox, sendo isso possível com apenas uma entrada, ou M1, ou M2. 

149



6

1.24 – Lateral 4 da Attobox: 

                              

                                          Figura 5: Lateral 4 da Attobox 

9- Portas Digitais “3, 10, 11” e “5, 6, 9”: 
    Estas não são utilizadas pelo S4A.  

10- Portas Analógicas “0, 1, 2, 3, 4 e 5”: 
    Estas correspondem respectivamente as entradas/saídas analógicas 1, 2, 3, 4, 
5 e 6 do S4A. Onde: 
    - As saídas 5 e 6 do S4A são utilizadas para quaisquer dispositivos como, por 
exemplo, motores e sensores.  
    - As entradas 1, 2, 3 e 4 do S4A são utilizadas para a conexão de sensores. 

11- Portas Digitais “10, 11, 12 e 13": 
   Estas são utilizadas como saídas para diversos dispositivos como, por exemplo: 
motores, Led’s e etc. Sendo a porta 12 não utilizada pelo S4A. 

   A Attobox deve ser utilizada em conjunto com um computador. Neste caso 
utilizaremos o Classmate.  

150



7

1.3 – Introdução ao Classmate 

Figura 6: Computador Classmate 

A Figura 6 apresenta o Classmate, um computador de baixo custo, que tem sido 
utilizado para introduzir a informática e a robótica pedagógica de uma maneira 
didática e acessível para alunos do ensino fundamental I e II. Para esta finalidade 
neste computador foi instalado o sistema operacional Ubuntu e o programa 
Scratch for Arduino. 

1.4 – Introdução breve ao Arduino 

O arduino é uma plataforma hardware livre (http://pt.wikipedia.org/wiki/Arduino) 
desenvolvido para projetos em geral, dentre eles, os de robótica educacional. Uma 
das linguagens utilizada para a programação do arduino é a linguagem C. 

Figura 7: placa Arduino 

151



8

Capítulo 2 – Scratch for Arduino (S4A) 

2.1 – Introdução ao S4A 

Para a simplificação da programação da plataforma arduino foi desenvolvido o 
S4A. Este é um recurso adicionado ao Scratch para possibilitar uma programação 
relativamente simples do arduíno. S4A possibilita uma programação em blocos 
para utilização de atuadores, sensores, dentre outros componentes elétricos 
quando conectados ao arduíno. (http://sourceforge.net/projects/s4a/) 

2.2 – Iniciando o S4A no Ubuntu 

As figuras 8, 9, 10 e 11 apresentam uma possível sequência para iniciar o S4A. 

Figura 8: Área de trabalho do Ubuntu 

Figura 9: Área de trabalho do Ubuntu Menu de aplicativos desenvolvimento  

152



9

Figura 10: Área de trabalho do Ubuntu Menu de aplicativos desenvolvimento S4A 

Figura 11: Área de trabalho S4A. 

153



10

2.3 – Conexão entre S4A e Attobox 

Ao entrar na área de trabalho do S4A, a mensagem “searching board” (Figura 11) 
indica que não há conexão entre a attobox e o programa. Para que haja a 
comunicação entre ambos é necessário um cabo USB conectando o classmate e 
a interface eletrônica, como representado na figura 12. 

Figura 12: Classmate conectado ao Attobox 

Quando ambos estiverem conectados, a mensagem desaparecerá e pode-se 
iniciar programação. 

Figura 13: Placa conectada

154



11

2.4 – Introdução aos comandos do S4A 

Os comandos do S4A são organizados em diferentes categorias, indicadas por: 
Controle, Sensores, Movimento, Operadores, Som, Caneta e Variáveis. 

                                          
Figura 14: Comandos do S4A 

Cada comando apresenta um determinado número de funções em blocos, 
capazes de serem agrupados uns aos outros, sendo cada um com uma 
determinada função. Os comandos de Aparência, Caneta e Sensores não serão 
utilizados para a Interface Attobox.  

Figura 15: Comando de Aparência, Caneta e Sensores 

As Tabelas 1, 2, 3 e 4 apresentam um comando, suas determinadas funções e o 
que realizam.

155



12

2.5 – Funções do comando de Controle 

Executa a programação  abaixo quando a bandeira verde é clicada. 

Executa a programação abaixo quando a tecla “espaço” é 
pressionada. A pessoa não precisa necessariamente selecionar a 
tecla “espaço”, e sim, qualquer outra que quiser, como por exemplo a 
tecla  “seta para cima”. 
Percorre a programação feita quando a figura do arduino 1 é clicada.  

Espera o número especificado de segundos, em seguida, continua 
com o próximo bloco.  

Executa sempre os blocos de dentro. 

Executa os blocos de dentro em um determinado número de vezes. 

Envia uma mensagem para todos as figuras, então continua com o 
próximo bloco sem ter que esperar para as escritas desencadeadas. 
Envia uma mensagem para todos as figuras, provocando-os a fazer 
algo, e espera até que todos eles terminem antes de continuar com o 
próximo bloco. 
Percorre a programação quando recebe a mensagem sonora 
especificada. 

Verifica continuamente se a condição é verdadeira, se sempre for, 
executa os blocos de dentro deste. 

Se a condição for verdadeira, executa os blocos  dentro deste. 

Se a condição for verdadeira, executa os blocos de dentro da parte 
"se", caso ao contrário, executa os blocos de dentro da parte "senão". 

Espera até que a condição seja verdadeira, assim executa os blocos 
em seguida deste. 
Verifica se a condição for falsa, nesse caso, percorre os blocos de 
dentro e verifica a condição novamente. Se a condição for verdadeira, 
vai para os blocos que se seguem. 
Para a programação. 

Interrompe todos a programação impedindo que esta fique 
selecionada.   

Tabela 1: blocos de Controle 

156



13

2.6 –  Funções do comando de Movimento 

Define uma porta de entrada que será comparada a um valor 
especificado. 

Define o estado em que a entrada digital utilizada pelo 
comando se encontra, sendo este estado pressionado ou não 

Liga o atuador conectado a porta de saída digital determinada 
pelo comando.  

Desliga o atuador conectado a porta de saída digital 
determinada pelo comando. 

Define “potência” do atuador conectado a saída analógica 
especificada pelo comando. 

Desliga o motor da saída especificada. 
  Obs: Este comando não é compatível com o Attobox.

Inverte o sentido de rotação do eixo do motor definido pelo 
comando. 
   Obs: Este comando não é compatível com o Attobox. 

Direciona o eixo do motor de corrente alternada. 
   Obs: Este comando não é compatível com o Attobox. 

Comando não utilizado. 

Comando não utilizado. 

157



14

Mostra o monitor de sensores da placa. 

Faz com que o monitor dos sensores da placa desapareça. 

Move o monitor dos sensores da placa para a condenada 
especificada pelo comando. 
Move a figura para frente ou para trás. 

Gira a figura no sentido horário. 

Gira a figura no sentido anti-horário. 

Direciona a figura no sentido especificado (0=para cima. 
90=para direita, -90=para esquerda, 180=para trás).

Pontos da figura na direção do ponteiro do mouse ou de outra 
figura. 

Move a figura na posição X e Y especificada no palco. 

Move-se suavemente a figura para uma posição especificada 
sobre o comprimento de tempo especificado. 
Muda a posição x da figura pela quantidade especificada. 

Define a posição x da figura para o valor especificado.

Muda a posição y da figura pela quantidade especificada. 

Define a posição y da figura para o valor especificado. 

A figura move-se no sentido oposto quando toca na borda do 
palco. 
Informa a posição x da figura (varia de -240 a 240). 

Informa a posição y da figura (varia de -240 a 240). 

Informa a direção da figura (0=para cima. 90=para direita, -
90=para esquerda, 180=para trás). 
Tabela 2: Blocos de movimento 

158



15

2.7 – Funções do comando de Operadores 

Adiciona dois números. 

Subtrai o segundo número do primeiro número. 

Multiplica dois números. 

Divide o primeiro número pelo segundo. 

Escolhe um número inteiro aleatório dentro do intervalo 
especificado. 

Informa verdadeiro se o primeiro valor é menor que o segundo. 

Informa verdadeiro, se o primeiro valor é igual ao segundo. 

Informa verdadeiro, se o primeiro valor é maior que o segundo. 

Informa verdadeiro, se ambas as condições são verdadeiras. 

Informa verdadeiro, se qualquer condição for verdadeira. 

Informa verdadeiro se a condição for falsa, relata falso se a 
condição for verdadeira. 

Agrupa as palavras. 

Informa a letra na posição especificada em uma seqüência.  

Informa o numero de letras em uma palavra. 

Informa o restante da divisão do primeiro número pelo segundo 
número. 
Informa o mais próximo a um número inteiro. 

Informa o resultado da função selecionada (Raiz quadrada, 
Seno, Cosseno, Tangente, Arco seno, Arco cosseno, Arco 
tangente, Logaritmo na base e, logaritmo na base 10, Numero 
“e” elevado à (o número e equivale a 2,718281), 10 elevado à. 

Tabela 3: Blocos de operadores 

159



16

2.8 – Funções do comando de Som 

Tabela 4: Blocos de Som 

Começa a tocar um som, selecionado a partir do menu 
suspenso, e imediatamente passa para o próximo bloco, mesmo 

quando o som ainda está tocando. 

Reproduz um som e espera até que o som termine de tocar 
antes de continuar com o próximo bloco. 

Para de tocar todos os sons. 

Reproduz um som de tambor, selecionado a partir do menu 
suspenso, que varia sua numeração entre 35 e 81. 

Repousa (não toca) para o número especificado de batidas. 

Toca uma nota musical (números maiores para tons altos) para 
determinado número de batidas. 

Define o tipo de instrumento que a figura usa para blocos de 
notas do jogo (cada figura tem o seu próprio instrumento.) O 
número de instrumentos a serem escolhidos varia de 1 a 128. 

O volume de som muda da figura por quantidade especificada. 

Define o valor especificado do volume do som da figura em 
porcentagem.  

Relata o volume do som da figura. 

Altera o ritmo da figura por quantidade especificada. 

Define o ritmo da figura para o valor especificado em batimentos 
por minuto. 

Relata o ritmo em batimentos por minuto da figura. 

160



17

2.9 – Introdução ao comando variável e suas funções

Este comando permite criar e inserir quantas variáveis quiser em uma 
programação. Ao clicar em Variáveis  Criar uma Variável, aparecerá na tela uma 
janela dando a opção de nomear a variável. As figuras 16 e 17 demonstram isso: 

                    Figura 17: Nomeando variável por ”X” 

  
    Figura 16: Comando de variáveis 

Após ter criado a variável, aparecerá blocos em comandos de Variáveis, 
juntamente com uma leitura a onde está representada a placa arduíno.  

                 Figura 19: Aparição do leitor no palco 

Figura 18: Funções da variável X criada

161



18

Os leitores podem ser de 3 tipos, representados na figura 19: 

Figura 20: Tipos de leitores da Variável 

Funções do comando de Variáveis: 
Define o valor da variável especificada. 

Altera a variável pela quantidade especificada. Se você tiver 
mais de uma variável, use o menu suspenso para destacar 
o nome da variável. 
Mostra o monitor variável no palco. 

Esconde o monitor variável, de modo que não é visível no 
palco. 
Adiciona o item especificado para o final da lista. O item 
pode ser um número, ou uma seqüência de letras ou de 
outros caracteres. 
Exclui um ou todos os itens de uma lista. Você pode 
especificar qual o item a ser  excluído, escolhendo no menu 
ou digitando o número desejado. Escolhendo "último" exclui 
o último item da lista. A escolha de "todos" exclui tudo da 
lista. 
Insere um item na posição especificada na lista. Você pode 
especificar o local para inserir o item, escolhendo no menu 
ou digitando o número desejado. Escolhendo "qualquer" é 
inserido um item em um lugar aleatório da lista. Escolhendo 
"último", é item para o final da lista.  
Substitui um item na lista pelo valor especificado. Você 
pode especificar qual item e substitui-lo, escolhendo no 
menu ou digitando o número desejado. Escolhendo 
"qualquer" substitui um item aleatório da lista. 

Relata o item na posição especificada na lista. Você pode 
especificar qualquer item  a ser reatado, escolhendo no 
menu ou digitando um número. Escolhendo "qualquer", este 
relata um item aleatório da lista. 

Relata quantos itens estão na lista. 

Tabela 5: Blocos de variáveis 

162



19

Capítulo 3 – Demonstração de programações 
    
   Na sequência demonstraremos alguns exemplos de como construir 
programações utilizando os blocos, já demonstrados no material anteriormente, e 
também dispositivos robóticos passíveis de serem controlados por estes.  

3.1 – Ligando um LED 

Figura 21: Programação de como ligar um LED 
   
    Para acionarmos um LED é preciso definir a saída que será responsável por 
transmitir a tensão a este, onde para isto utilizamos o bloco digital 13 on ligado a 
um bloco de inicio, neste caso quando tecla espaço pressionada.  
    O LED deve ser conectado a porta digital determinada pelo bloco, como  
utilizamos o digital 13 este correspondera a saída D13 da AttoBox. 
    Para desligarmos o LED alteramos o bloco digital—on para digital—Of. 
   

Figura 22: LED conectado com um cabo USB á saída D13 da Attobox 

163



20

3.2 – Ligando um LED através de um botão 

      
Figura 23: programação de como ligar um LED através de um botão 

 Para acionarmos um LED é preciso definir a saída que será responsável por 
transmitir a tensão a este, onde para isto utilizamos o bloco digital 11 on ligado a 
um bloco de inicio quando a bandeira verde clicada. Logo após o bloco de inicio, 
encaixamos o bloco sempre e se/senão. Então colocamos o bloco value of 
sensor Analog1 sobre o bloco maior que, que está sobre o bloco se/senão 
criando uma condição de comparação para habilitar o bloco digital 11. Como no 
exemplo “se” value of sensor analóg1 for maior que 50 o bloco digital 11 será 
acionado, “senão” permanecerá digital11 off. Nesta programação utilizamos o 
bloco Digital11 que corresponde a saída D11 da Attobox e o value of sensor 
analog1 correspondente a entrada A0 da Attobox como demostrado na figura -- 

Figura 24: LED conectado a saída D11, acionado por um botão ligado a entrada A0 da Attobox 

164



21

3.3 – Ligando um motor através do teclado 

Figura 25: Programação de acionamento de um motor através do teclado 

     Para acionarmos um motor é preciso que se tenha uma bateria 9v ligada a uma 
das entradas M1 ou M2 do Attobox. 
     Na programação mostrada na figura 25, o bloco quando tecla seta acima
pressionada indica que ao pressionar a tecla acima do teclado os blocos 
encaixados a este serão efetuados, neste caso os blocos digital 10 on e analog 5
value 150. Como estes dois últimos blocos estão sendo utilizados em conjunto, 
definem uma saída especifica na Attobox chamada D 5 10, normalmente utilizadas 
para acionamento de motores. O valor explicitado a frente do bloco analog 5 
value __ define a potencia do motor, ou seja, se este girará mais rápido ou não, 
sendo este valor variável de 0 (motor parado) a 255 (motor ligado com a máxima 
potencia). Para alterar o sentido de rotação do motor, é necessário a mudança do 
bloco digital 10 on para o bloco digital 10 off.  

Figura 26: Motor conectado com um cabo USB a saída D 5 10 da Attobox 

165



22

3.4 – Acionando de um motor através de um botão 

Figura 27: Programação de como acionar um motor através de um botão 

Nesta programação, temos os blocos sempre e se acoplados ao bloco inicial 
quando bandeira verde clicada. Assim, ao clicarmos na bandeira verde, será 
verificada a condição do valor do bloco value of sensor analog1. Se este valor for 
maior que 50, os blocos digital 10 on e analog 5 value 200 serão acionados. O 
bloco espere até, relaciona o funcionamento dos blocos anteriores ao valor do 
sensor Analog1, onde se este for menor que 100, os blocos digital 10 on e 
analog 5 value 0 serão acionados. Ou seja, ao clicarmos no botão, o valor de 
value of sensor analog1 será maior que 50, acionando o motor. Ao deixar de 
pressionar o botão, o valor do sensor passará a ser menor que 100, assim 
determinando que o motor pare. Neste caso, o motor será conectado a saída D 5 
10 e o botão será conectado na entrada A0 da Attobox. 

Figura 28: Motor conectado a saída D 5 10 e o Botão conectado a entrada A0 da Attobox 

166



23

3.5 – Controlando o sentido de rotação de um motor 

figura 29: Programação de como acionar o sentido de rotação do motor 

Este exemplo ilustrado na figura 29 demonstra que é possível no S4A não ter 
apenas uma programação linear, ou seja, não é necessário que todos os blocos 
sejam encaixados para executar diversas funções. É possível montar uma 
programação onde exista uma sequência de blocos independentes para executar 
uma determinada tarefa.  
Para controlar o sentido de rotação de um motor é um exemplo disso. Nesta 
programação, os blocos quando tecla _______ pressionada iniciam uma 
sequência de blocos no qual o programador deseja. Quando tecla seta acima é 
pressionada, o S4A executará apenas a sequência de blocos anexados em 
quando tecla seta acima pressionada, fazendo com que o motor gire no sentido 
anti-horário. Quando tecla seta para baixo é pressionada, o S4A executará apenas 
a sequência de blocos anexados em quando tecla seta para baixo pressionada, 
fazendo com que o motor gire no sentido horário. Quando tecla espaço é 
pressionada, o S4A executará apenas a sequência de blocos anexados em 
quando tecla espaço pressionada, fazendo com que o motor pare de girar 
independente do sentido de rotação. O bloco pare tudo evita que a opção da 
sequência a ser seguida fique selecionada, e assim possibilita que a tarefa 
desejada pode ser executada quantas vezes quiser. 

167



24

3.6 – Acionando um motor através de uma variável 

          Figura 30: Programação de como acionar um motor através de uma variável 

Este exemplo ilustrado na figura 30 demonstra a utilização de uma variável em 
uma programação no S4A, no qual o programador pode controlar o acionamento 
do motor através do seletor deslizante da variável especificada. Este seletor varia 
de 0 à 100, ficando a escolha do programador e como funcionará a lógica de sua 
programação.  
Na programação representada na figura 30, quando tecla espaço pressionada, 
se o valor da variável nomeada de “x” controlado pelo seletor deslizante for maior 
que 50 (por exemplo: 75), o motor será acionado em sua potência máxima, caso 
não seja maior que 50 o motor atuará em sua potência mínima, ou seja, desligado. 
Assim, através dessa variável “x” o programador pode controlar o estado de seu 
motor a qualquer momento, apenas deslizando o seletor dessa mesma variável.  

168



25

3.7 – Como salvar uma programação no S4A 

Para salvar uma programação “montada” no S4A devemos ir em: 
Arquivo Salvar como Salvar projeto Salvar projeto (nomear arquivo)  OK, 
Desta forma a programação será salva no local em que o usuário desejar. 
As Figuras 30 e 31 apresentam uma possível sequência para salvar uma 
programação montada no S4A: 

Figura 31: S4A  Arquivo  Salvar como... 

Figura 32: S4A  Arquivo  Salvar como...  Salvar projeto ( Ex: Ligando motores)  Ok 

169



26

Capítulo 4: Treinando o conhecimento 

4.1 – Exercícios: 

1- Construa uma programação que ligue um motor nas seguintes condições: 
Quando tecla espaço pressionada o motor ligará em sua potência máxima, 
quando tecla seta acima pressionada, o motor desligará.

2- Construa uma programação utilizando apenas uma variável, determinando 4 
diferentes potências para um motor sendo uma delas necessariamente 0. O motor 
girará no sentido anti-horário. Esta programação deve iniciar-se com alguma tecla 
sendo clicada. 

3- Construa uma programação utilizando 3 variáveis que determinem 3 diferentes 
potências  para um motor. Esse motor girará no sentido anti-horário e uma de 
suas potências será zero, ou seja, desligado. Esta programação deve iniciar-se 
com alguma tecla sendo clicada. 

170



27

4.2 – Respostas: 

1-

Figura 33: Resposta do exercício 1 

2-

                

                     

                         Figura 34: Resposta do exercício 2 

171



28

3- 

                
                
                  

                  Figura 35: resposta do exercício 3 

172



ESCOLA PÚBLICA ESCOLA PARTICULAR

? Solange Sousa Campos –
EE Benedito Sampaio – A
professora de língua portuguesa
criou a Poemoteca, conjunto de
textos poéticos retirados de
quase 150 livros de sua
propriedade que ela organizou
numa caixa, que circula entre os
alunos dos 6º e 7º anos. Cada um
pode escolher a obra que vai ler
e levá-la para casa. Os poemas
são trabalhados em sala de aula
e, ao final, os alunos produzem
seus próprios versos,
apresentados em saraus e
eventos da escola.

? Cláudia Fagundes Pedroso e
Mônica Fernanda Bonomi –
Emef Padre José Narciso Vieira
Ehrenberg – Inspirados pelo
documentário Lixo Extraordinário
(João Jardim e Luci Walker,
2011), sobre catadores de
materiais recicláveis no Jardim
Gamacho, do Rio de Janeiro, que
participaram de projeto social
com o artista plástico Vik Muniz,
os alunos produziram uma
caricatura de Carmem Miranda,
de 9,1m x 8,1m, utilizando
materiais recicláveis.
O trabalho envolveu aulas de
artes, ciências e matemática,
com alunos entre o 7º e o 9º
anos.

? Eni Aparecida Sivera
Bertolini – EE Gustavo
Marcondes – Como forma de
gerar interesse e trazer a
matemática para o cotidiano dos
alunos, a professora usou a
Olimpíada de Londres, no ano
passado, para ensinar conceitos

como estatística, porcentagem,
medidas e cálculos. Os
conhecimentos foram sendo
construídos a partir de notícias
lidas em jornais, sites e revistas.
Foram abordados também
conceitos de geografia, história e
artes. Alunos do 6º e do 9º ano
foram envolvidos no trabalho.

? Vilma Almeida Correia Passos
– Emef Benevenuto Figueiredo
Torres – Uma vez por semana, os
alunos das quatro turmas de
4º ano são divididos de acordo
com o nível de dificuldade em
leitura e escrita, a partir das
avaliações realizadas no primeiro
bimestre letivo. A partir disso,
semanalmente, cada professor
faz um trabalho diferenciado a
partir dos temas que precisam ser
reforçados em cada grupo.
O projeto é desenvolvido desde
2011 e foi replicado em outros
colégios municipais da cidade.

? Delmar Thadeu Carvalho
Merola – EE Miguel Vicente Cury –
Baseado nos ideais de Milton
Santos (1926-2001) e de Hebert
José de Souza, o Betinho
(1935-1997), as aulas de geografia
abordam aspectos sociais e
estimulam a solidariedade.
Os alunos do Ensino Médio, após
estudarem os índices de
subnutrição e fome no Brasil,
fazem um mapeamento das áreas
mais carentes da Vila Padre
Anchieta e arrecadam, entre os
vizinhos, alimentos que são
distribuídos às famílias mais
pobres.

? Guiomar Maria Berton – EE
Orosimbo Maia – Os alunos do

9º ano usam as aulas de língua
portuguesa para discutir
política e perceberem a
importância da participação no
processo eleitoral. Eles
simulam uma campanha, com
alunos interpretando os papéis
de candidatos, assessores e
marqueteiros. Com isso,
aprendem as regras do
processo eleitoral e
desenvolvem a argumentação
para tentar convencer os
colegas. Eles precisam ainda
criar a biografia do candidato.
Ao final, é feita uma simulação
de eleição.

? Edison Lins – EE Adalberto
Prado e Silva – Os alunos do 3º
ano do Ensino Médio, ao
estudarem a Semana de Arte
Moderna, produzem uma peça
de teatro — da concepção do
texto à encenação —
apresentada aos demais
alunos da escola. A atividade
envolve história, língua
portuguesa e artes.
Profissionais do teatro são
convidados a dar palestras e
os alunos também assistem a
espetáculos. A peça produzida
neste ano será apresentada
durante um evento da
Universidade Estadual de
Campinas (Unicamp) para
vestibulandos.

? Gisele Flávia Alves Oliveira
Giachetto e Valéria Alves dos
Santos Salgado - Emef Elza
Maria Pellegrini de Aguiar –
Os alunos do 5º ano passaram
a ter aulas de robótica como
componente curricular
obrigatório. Além de
aprenderem os princípios
básicos do funcionamento de
um robô, os estudantes
também se sentem
estimulados com o desafio
proposto pelas professoras:
desenvolver uma tecnologia
que seja capaz de auxiliar na
redução dos problemas
ambientais. O projeto envolve
disciplinas como português,
geografia, artes e ciências.

Fabiano Ormaneze

ESPECIAL PARA A AGÊNCIA ANHANGUERA

fabiano.ormaneze@rac.com.br

Entre maio e agosto, o Correio Popu-
lar publicou, às terças-feiras, reporta-
gens com professores participantes do
Projeto Experiência 10, que tem como
objetivo reconhecer e premiar educa-
dores que inovam a atividade docente
e trabalham o conteúdo programático
de forma criativa. Essa foi a terceira edi-
ção do concurso, que apresentou 16
iniciativas — oito de escolas públicas e

oito de colégios particulares — que
agora passam pela avaliação de um
corpo de jurados especializado em edu-
cação.

Serão premiados seis professores. O
primeiro colocado das escolas públicas
e o primeiro colocado das particulares
receberão um laptop cada um. Os se-
gundos colocados vão ganhar um ta-
blet e os terceiros, câmeras fotográfi-
cas digitais. Todos serão presenteados
também com uma assinatura digital
do Correio.

Os projetos que concorrem aos prê-

mios e geraram as reportagens foram
pré-selecionados a partir da inscrição
feita por professores em abril deste
ano. Ao todo, cerca de 30 projetos fo-
ram inscritos. A seleção de quais se-
riam pauta das reportagens levou em
consideração a originalidade, a inter-
disciplinaridade e a relação com os
conteúdos programáticos da educação
básica, de acordo com os Parâmetros
Curriculares Nacionais (PCNs). Tam-
bém foi selecionado, como previa o re-
gulamento, apenas um projeto de cada
colégio no caso daquelas escolas em

que vários professores se inscreveram.
O projeto Experiência 10 foi idealiza-

do pelo Correio Escola Multimídia, pro-
jeto de educação e incentivo à leitura
mantido pelo Grupo RAC há 21 anos.
Embora o trabalho seja focado no estí-
mulo para o uso das mídias na sala de
aula, os projetos participantes do Expe-
riência 10 não necessariamente preci-
savam ter relação com o uso de supor-
tes midiáticos. Na página dedicada ao
projeto de hoje, você confere um resu-
mo das 16 iniciativas que concorrem
ao prêmio.

? Lucas Bortolotto Brandão –
Colégio Axis Mundi – Para
trabalhar a prevenção das
doenças sexualmente
transmissíveis (DSTs), o
professor de ciências
desenvolveu projeto com os
alunos do 8º ano, que
arrecadaram alimentos para a
Associação Esperança e Vida,
voltada a portadores do HIV.
Foram realizadas palestras na
escola sobre o assunto para
alunos e familiares. Nas aulas
de português, também foi
produzido um jornal sobre o
tema, como forma de trabalhar
os gêneros textuais.

? Marilene Mori Clepas –
Colégio Renovatus – A fim de
tornar mais concreto o estudo
do sistema celular, a professora
do 5º ano desenvolveu um
projeto que utiliza caixa de
papelão, imã e moedas para
explicar como funciona a ação
das células de defesa. O imã é
utilizado como uma metáfora
para um agente invasor. Ao ser
inserido dentro da caixa (como
se fosse o corpo humano), as
moedas (simbolizando os
glóbulos brancos) o atacam.
Cada aluno produziu sua
própria caixa e experiências.

? Ana Augusta Lopes

Siqueira Latino – Colégio
Sagrado Coração de Jesus –
Semanalmente, 12 alunos com
mais facilidade no aprendizado
de matemática dedicam 45
minutos após as aulas
regulares para ajudar alunos
com dificuldades. A monitoria,
com exercícios organizados
pela professora da disciplina,
envolve alunos entre o 6º e o 9º
ano. Por causa do reforço e da
proximidade da linguagem
entre os estudantes, os
participantes do projeto já
notam melhorias nas notas.

? Sílvia Beraldo – Colégio
Progresso – As aulas de
música, obrigatórias para os
alunos até o 5º ano na escola,
tornaram-se uma oportunidade
para trabalhar as diferenças
culturais e o reaproveitamento
de materiais. Os alunos
montaram coreografias a partir
de músicas de origem africana
e, nas aulas de artes,
produziram as máscaras e
fantasias para a apresentação
na mostra cultural da escola.

? Thiago Magalhães – Escola
do Sítio – Os alunos do 6º ano
desenvolveram, nas aulas de
história, artes e inglês, um
projeto cujo objetivo foi
explicar o processo de pesquisa
histórica a partir da
arqueologia. Os alunos criaram
uma narrativa e produziram
peças de argila que foram
enterradas para, depois, serem
redescobertas e a história
recontada. Foi possível
trabalhar também com a
tradução de textos e identificar
as dificuldades em recuperar a
história a partir de fragmentos.

? Viviane Marques Alves –
Colégio Notre Dame - A partir
do discurso I Have a Dream,
proferido pelo ativista dos
direitos humanos Martin Luther
King (1929-1968), os alunos
aprenderam tópicos gramaticais
da língua inglesa, além de
história dos Estados Unidos e
direitos humanos. A biografia do
líder foi usada para abordar as
diferenças sociais e as lutas pela
igualdade. Os alunos finalizaram
com a produção de uma peça
teatral em inglês, recontando
cenas da trajetória de Rosa
Parks, a precursora da luta
antirracismo nos Estados Unidos.

? Heldis Silveira Santos –
Colégio Liceu Nossa Senhora
Auxiliadora – Com o uso de
pigmentos naturais extraídos de
folhas, frutos e raízes, os alunos
realizaram o tingimento de
roupas, com o objetivo de
estudarem alternativas à poluição
causada pela indústria têxtil. Ao
final, realizaram um desfile com
peças customizadas. A atividade
envolveu alunos do 7º ano e as
disciplinas de ciências, artes,
história e língua portuguesa.

? Maria Angélica Collobialli
Botelho e Sirlene Ferreira da
Silva – Colégio Múltiplo – As
turmas de 3º ano do Ensino
Fundamental trabalharam a
temática da inclusão social a
partir do estudo dos fluxos
migratórios. Para isso, foram
realizadas pesquisas em sites e
entrevistas com estrangeiros
que vivem no Brasil. O projeto
acabou facilitando a aceitação
de alunos estrangeiros e com
deficiência.

Oito projetos
de escolas
públicas e
oito de
particulares
concorrem a
prêmio que
estimula a
inovação
dentro da sala
de aula

Criatividade nota 10

DOCÊNCIA ||| RECURSOS PEDAGÓGICOS

A8 CORREIO POPULAR
Campinas, terça-feira, 3 de setembro de 2013

173

ANEXO 3 - ENTREVISTA COM A PROFESSORA NO JORNAL CORREIO POPULAR

fe
Texto digitado

fe
Texto digitado

fe
Texto digitado

fe
Texto digitado

fe
Texto digitado

fe
Texto digitado

fe
Texto digitado

Fernando
Typewriter

Fernando
Typewriter

Fernando
Typewriter

Fernando
Typewriter

Fernando
Typewriter

Fernando
Typewriter



174 

 

ANEXO 4 – TERMO DE CONSENTIMENTO DAS PROFESSORAS 

 

 

 

 

 

 

 

 

 

 

 

 



175 

 

 

ANEXO 5 – TERMO DE CONSENTIMENTO DOS ALUNOS 

 

 

 

 

 




</field>
	</doc>
</add>