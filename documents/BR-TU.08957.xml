<?xml version="1.0" encoding="utf-8"?>
<add>
	<doc>
		<field name="docid">BR-TU.08957</field>
		<field name="filename">13858_Tese_L%c3%baciaPinto_2014.pdf</field>
		<field name="filetype">PDF</field>
		<field name="text">Universidade do Minho
Escola de Ciências
Maria Lúcia Pereira Marques Pinto
Sobre a distância de Hausdorff e a salsicha de Minkowsky
Universidade do Minho
Escola de Ciências
Maria Lúcia Pereira Marques Pinto
Sobre a distância de Hausdorff e a salsicha de Minkowsky
Tese de Mestrado
Mestrado em Ciências - Formação Contínua de Professores, Área de Especialização em Matemática
Trabalho efetuado sob a orientação de
Professora Doutora Lisa Santos Professor Doutor Fernando Miranda
DECLARAÇÃO
Nome: Maria Lúcia Pereira Marques Pinto
Endereço electrónico: mluciampinto@gmail.com	Telefone: 253 521 273 / 936 263 333
Número do Bilhete de Identidade: 8539818
Título dissertação
Sobre a distância de Hausdorff e a salsicha de Minkowsky
Orientadores:
Doutora Lisa Santos
Doutor Fernando Miranda
Ano de conclusão:2014
Designação do Mestrado:
Mestrado em Ciências - Formação Contínua de Professores, Área de Especialização em Matemática
É AUTORIZADA A REPRODUÇÃO INTEGRAL DESTA TESE/TRABALHO APENAS PARA EFEITOS DE INVESTIGAÇÃO, MEDIANTE DECLARAÇÃO ESCRITA DO INTERESSADO, QUE A TAL SE COMPROMETE;
Universidade do Minho, 31/01/2014
Assinatura:
Agradecimentos
Agradeço a todas as pessoas que tornaram possível a realização deste trabalho.
Gostaria de expressar a minha gratidão de modo particular:
A Doutora Lisa Santos, orientadora desta tese, que de forma incondicional me deu todo o seu apoio, quer científico quer pessoal, um muito obrigada.
Ao Doutor Fernando Miranda, orientador desta tese, pela disponibilidade, pela paciencia demonstrada e por todo o seu apoio, um muito obrigada.
A Gerarda Ribeiro, amiga e colega sempre disponível, que sempre me deu uma palavra de apoio nos momentos de desalento. Aos meus irmãos, pelo carinho e amizade e disponibilidade que sempre demonstraram.
Aos meus pais, que sempre me incutiram a vontade e a necessidade do saber.
Ao meu marido, Manuel, pela ajuda, pelas palavras de incentivo nos momentos de mais fragilidade e pela compreensãao.
Aos meus filhos, Francisco e Luísa, por compreenderem as minhas ausencias .
Sobre a distância de Hausdorff e a salsicha de Minkowsky
Resumo
A distancia de Hausdorff definida sobre os subconjuntos compactos de R2 tem provado ser um conceito muito Util no reconhecimento de imagens, justificando que se faça algum investimento na compreensao desta ferramenta e na demonstracão de resultados que envolvam esta distancia.
Nesta dissertacão, dado um espaco metrico (X, d), definindo H(X) como o conjunto dos compactos não vazios de X, pretendemos estudar algumas propriedades do espaco metrico (H(X),dH), em que dH e a distancia de Hausdorff.
Para “educar” a nossa intuição sobre esta distancia, achamos relevante dispor de um ambiente grafico em que se possam manipular objetos simples em R2 e explorar situacoes relacionadas com este conceito.
Nesta tese, apresentam-se duas definições alternativas de distância de Hausdorff em H(X). Uma das definições utiliza o conceito de salsicha-e de Minkowsky ou de vizinhança--e de um conjunto. Restringindo-nos a R2 e para ajudar a compreensão do conceito de convergância de sucessães de conjuntos, introduz-se a definição de convergância segundo de Kuratowski. Prova-se que, quando os conjuntos sao convexos, a convergencia segundo Kuratowski e equivalente a convergância no espaço metrico em estudo.
São abordados aspetos computacionais que permitem ilustrar o conceito de distância de Hausdorff, sendo possível manipular objetos de R2 de forma simples e construir as suas vizinhanças-e. Os objetos considerados são pontos, segmentos de reta e linhas poligonais. Constroi-se uma função que permite determinar a distância de Hausdorff entre dois objetos usando o conceito de salsicha-e de Minkowsky. O algoritmo usado para a construcao desta funcão e fundamentado num conjunto de resultados enunciados e demonstrados nesta tese.
About the Hausdorff distance and the Minkowsky sausage
Abstract
The Hausdorff distance, defined in the compact subsets of R2, has proven to be a very useful concept in image recognition, justifying some investment in the understanding of this tool and in the proof of results involving this distance.
In this dissertation, given a metric space (X,d), defining H(X) as the set of compact and nonempty subsets of X, we intend to study some properties of the metric space (H(X),dH), where dH is the Hausdorff distance.
In order to “educate” our intuition about this distance, we recognized it would be relevant to have a graphical user interface in which we can manipulate simple objects of R2 and explore situations related to this concept.
In this thesis we present two alternative definitions of the Hausdorff distance in H(X). One of the definitions uses the concept of Minkowski e-sausage or e-neighborhoud of a set. We restrict ourselves to R2 and, to help in the comprehension of the concept of convergence of sequences of sets, we introduce the definition of Kuratowski convergence. We prove that, when the sets are convex, the Kuratowski convergence is equivalent to the convergence in the metric space under study.
Computational aspects that allow to illustrate the Hausdorff distance are discussed, being possible to manipulate objects in R2 in an easy way and to construct their eneighbourhoods. The objects considered are points, line segments and polygonal lines. We construct a function that allows us to compute the Hausdorff distance between two objects, using the concept of Minkowski e-sausage. The algorithm used in the construction of this function is justified by a set of results stated and proved in this thesis.
Conteúdo
Introdução	1
1	Preliminares	4
1.1	Algumas noções métricas ................................................ 4
1.2	Conjuntos convexos...................................................... 9
2	Distância de Hausdorff e salsicha de Minkowsky	13
2.1	A distância de Hausdorff............................................... 13
2.2	Convergância de sucessões de subconjuntos de R2 ....................... 22
3	Distância de Hausdorff - uma abordagem computacional	27
3.1	Uma interface gréfica dinâmica......................................... 28
3.2	Caracterizaçõo da funçõo Eps........................................... 29
3.3	Aspetos computacionais................................................. 43
3.3.1	Representaçõo gréfica.......................................... 43
3.3.2	A funcõo Eps .................................................. 45
Anexo - Funcães do Mathematica	50
Bibliografia	58
Lista de Figuras
1.1	Distância do ponto x ao conjunto A............................................ 5
1.2	O conjunto A é não convexo e o conjunto B é convexo.......................... 10
2.1	Exemplo em que h(A,B) = h(B,A)............................................... 14
2.2	Dois conjuntos cuja distância de Hausdorff e infinita........................ 15
2.3	A distância usual e a distância de Hausdorff entre A e B sao diferentes. . .	16
2.4	Distância de Hausdorff entre os conjuntos A e B.............................. 17
2.5	Exemplo de calculo da distancia de Hausdorff usando a salsicha de Minkowski. 19
2.6	Dois conjuntos, um não convexo, em que a distância de Hausdorff e realizada
no interior de um dos conjuntos.............................................. 23
3.1	Exemplo da interface grafica interativa. .................................... 29
3.2	Sendo A e B pontos, Eps[A,B] = Eps[B,A] = d(A,B).	.............. 31
3.3	Exemplos de aplicação da funcao Eps	[pt,lp].	  31
(a)	Ponto e linha poligonal formada	por dois pontos...................... 31
(b)	Ponto e linha poligonal formada	por trâs pontos...................... 31
(c)	Ponto e linha poligonal formada	por quatro pontos. .................. 31
3.4	Exemplos de aplicação da funcao Eps	[seg,pt].	  32
(a)	A distância de B a [AxA2] e realizada num ponto pertencente ao pe
da perpendicular. ..................................................... 32
(b)	A distancia de B a [AxA2] e realizada num dos extremos do segmento
de reta. .............................................................. 32
3.5	Exemplos de aplicacao da funcao Eps [lp,pt].	....................... 33
(a)	O ponto B pertence a salsicha dos dois segmentos de reta que formam
a linha poligonal....................................................... 33
(b)	O ponto B pertence a salsicha de [A2A3]................................. 33
(c)	O ponto B pertence a salsicha de [A1A2]................................. 33
3.6	Exemplos de aplicacao da funcao Eps [seg,lp].	........................ 34
(a)	Linha poligonal formada por dois segmentos	de	reta.................. 34
(b)	Linha poligonal formada por três segmentos	de	reta.................. 34
3.7	Caracterização do conjunto de equidistência E................................. 36
(a)	Conjunto dos pontos em que a distência aos segmentos de reta [A1A2]
ou [A2A3] se realiza no pé da perpendicular............................. 36
(b)	Regiães de pontos R1 a	R6........................................ 36
(c)	Pontos	de equidistência	pertencentes	a bissetriz do	angulo ZA1A2A3.	36
(d)	Pontos	de equidistência	pertencentes	ao arco de parébola E1E2.	. .	36
(e)	Pontos	de equidistancia	pertencentes	a mediatriz do	segmento de	reta
[A1A3].................................................................. 36
(f)	Conjunto de pontos equidistancia........................................ 36
3.8	Região de equidistência. ..................................................... 38
3.9	Figura auxiliar a demonstracão de que rE é uma curva de classe ...	39
3.10	Exemplos de aplicaçao da função Eps [lp,seg].	..................... 42
(a)	O valor de e e calculado usando um ponto que pertence a curva de
equidistência rE........................................................ 42
(b)	Situação em que não existe interseção com a região de equidistancia E. 42
(c)	Situacão em que [B1B2] interseta o cone de equidistência CE........... 42
3.11	Exemplo da interface grafica interativa. Os valores de Eps1 e Eps2 são
atualizados em tempo real. ................................................... 43
3.12	Opçães graficas para a construção da salsicha-e de um segmento ou linha
poligonal. ................................................................... 44
(a)	Construçcãao da salsicha de um segmento de reta usando apenas discos. 44
(b)	Construçcãao da salsicha de um segmento de reta usando dois discos e
um retêangulo. ......................................................... 44
(c)	Construção da salsicha de uma linha poligonal usando discos e retângulos. 44
3.13	Posição do ponto B relativamente ao segmento de reta [A1A2]........ 46
(a)	B situa-se no complementar do conjunto de pontos do plano compreendido entre as retas e mais próximo de A1.................... 46
(b)	B situa-se no complementar do conjunto de pontos do plano compreendido entre as retas e mais próximo de A2.................... 46
(c)	B situa-se no conjunto de pontos do plano compreendido entre as retas. 46
3.14	Ilustraçao do cólculo	de E1	e E2	pela funçao PontosEquiDist........ 48
(a)	Construção do	ponto	E1....................................... 48
(b)	Construção do	ponto	E2....................................... 48
Introdução
E habitual, em matematica, definir novas estruturas que se baseiam nas propriedades de algum exemplo concreto, tentando obter resultados num quadro abstrato o mais geral possível. Um exemplo bem conhecido e o estudo dos espaços metricos.
Um espaço metrico (X, d) e formado por um conjunto X munido de uma funçao d não negativa, definida no produto cartesiano X x X, a quem impomos as propriedades bem conhecidas que são satisfeitas pela distencia entre dois pontos em Rn. A definiçao de uma disteancia ou metrica num conjunto abre-nos a porta para o estudo de limites de funçcãoes definidas em X e com valores noutro espacço metrico e, como caso particular, da convergencia de sucessões. Permite-nos tambem caracterizar subconjuntos de X, por exemplo, introduzindo as noçoes de conjunto conexo, conexo por arcos ou compacto.
Ao fazer generalizares, um matematico deve fundamentar a sua escolha. Estudar um caso mais geral e justificavel se se ganhar com a abstração que se esta a fazer. Dificilmente poderíamos convencer os leitores se abstraíssemos apenas por prazer, uma vez que o caso particular pode ser mais facil de perceber que o geral.
Partindo de um espaço metrico (X, d), podemos perguntar-nos se sera possível definir em P(X), o conjunto das partes de X, uma distencia. A resposta e imediatamente sim: podemos considerar a metrica discreta, para a qual elementos distintos estao a distencia 1. A escolha de uma metrica adequada a um conjunto cujos elementos sao conjuntos depende do objetivo que queremos atingir. Uma metrica bem escolhida, definida num subconjunto de P(R2) convenientemente definido, tem sido muito utilizada em reconhecimento de imagem (ver [3]). A metrica a que nos referimos e a distencia de Hausdorff, denotada nesta tese por dH. Comecemos por justificar a escolha do subconjunto de P(X) onde iremos trabalhar. Dados dois subconjuntos A e B de X, definimos dH(A,B) como o
maximo de h(A,B) e h(B,A), sendo h(A,B) o supremo das distâncias de cada ponto de A ao conjunto B. E claro que a distancia de um ponto a E A ao conjunto B e calculada usando a função distancia definida em X e, quando falamos em reconhecimento de imagens, o espaço metrico onde estamos a trabalhar e R2 munido da distância euclideana. E imediato compreender que a funcão dH não esta bem definida em P(X) x P(X), pois pode tomar o valor +rc&gt;. Então, um primeiro cuidado consiste em impor que os conjuntos sejam limitados. Queremos tambem que dH seja uma distância, para podermos utilizar resultados abstratos sobre espaços metricos. Então, conjuntos diferentes nao devem estar a distância zero um do outro. Olhando para a definiçao dada acima, e facil perceber que, em R2, um disco dista zero do conjunto que se obtem retirando um ponto ao disco. Com base nos exemplos apresentados, o conjunto que vamos considerar não e P(X) mas sim H(X) = {K Ç X : K e compacto e não vazio}. Em H(X), dH e uma distância, que permite, num certo sentido, medir quão afastados estao dois conjuntos.
Esta tese encontra-se estruturada em trâs capítulos.
No primeiro capítulo são apresentadas algumas definicões e resultados sobre espaços metricos (ver [2]) que serâo utilizados posteriormente. Apresentam-se tambem algumas proposicoes sobre subconjuntos convexos de Rn.
No segundo capítulo apresenta-se a definiçao de distância de Hausdorff em H(X), sendo (X, d) um espaco metrico. E introduzida uma definicão alternativa para esta distância, que usa o conceito de salsicha-e de Minkowsky ou vizinhanca-e de um conjunto. E mostrado que as duas definiçães são equivalentes (ver [8, 6]). Restrinjimo-nos depois a subconjuntos compactos de R2 e mostramos que, no caso de ambos os conjuntos serem convexos, a distancia de Hausdorff entre estes conjuntos e a mesma que entre as suas fronteiras. Para facilitar a compreensao do conceito de convergância de sucessães de conjuntos, introduz-se a definição de convergância segundo Kuratowski, que reduz o problema ao estudo do comportamento de sucessães de pontos pertencentes aos conjuntos. Prova-se que a convergância de sucessães para a distância de Hausdorff implica a convergância segundo Kuratowski e que ambas as definiçães são equivalentes quando os conjuntos sao convexos (ver [5, 4]). Apresenta-se ainda um resultado que caracteriza os subconjuntos limitados de H(X) a custa do espaco subjacente (X, d).
O terceiro capítulo e o capítulo onde se abordam aspetos computacionais. Um primeiro
objetivo era construir uma interface grafica onde se pudessem representar e manipular, de forma simples, objetos (conjuntos de pontos) de R2, permitindo representar as vizinhanças--e desses conjuntos, para valores de e variando de forma “contínua”. A natureza dos objetos com que essa interface lida e muito limitada: pontos, segmentos de reta e linhas poligonais. Repare-se que para este tipo de objetos, a designacão alternativa de vizinhança--e, salsicha-e de Minkowsky, e, de facto, muito sugestiva. O segundo objetivo era construir e implementar numa linguagem de programacão uma função que permitisse calcular a distancia de Hausdorff de dois objetos, cuja natureza e a anteriormente referida: pontos, segmentos de reta e linhas poligonais. O calculo da distância de Hausdorff, restringindo a classe de objetos a polígonos convexos, e efetuada numa applet, disponibilizada em [7], apresentando uma interface muito conveniente. Apesar da natureza dos objetos que nos propusemos a tratar ser muito simples, na sua maior parte são nao convexos, o que dificulta o calculo da distancia de Hausdorff. O algoritmo que esteve na base da construcão de uma funcão que nos permite calcular a distancia de Hausdorff de dois objetos e fundamentado numa serie de resultados, enunciados e provados neste capítulo. Não podemos terminar sem deixar de referir que este segundo objetivo não foi completamente atingido, uma vez que a função não e, por enquanto, capaz de tratar todos os casos.
Capítulo 1
Preliminares
Neste capítulo pretende-se recordar algumas noções e resultados relativos a espaços métricos. Serão tambem apresentadas propriedades de subconjuntos convexos de R2.
1.1	Algumas noções métricas
Nesta secção apresentamos as definiçães e demonstramos os resultados sobre espaços metricos que iremos utilizar ao longo da tese.
Definiçõo 1.1 Uma métrica ou distância num conjunto não vazio X é uma função d : X x X R qué associa a cada par ordénado (x, y) um néméro réal d(x, y), dé modo qué séjam satisféitas as séguintés condiçõés para quaisquér x,y,z E X:
1.	d(x, x) = 0;
2.	sé x = y éntõo d(x, y) &gt; 0;
3.	d(x,y) = d(y,x);
4.	d(x, z) &amp;lt;d(x, y) + d(y, z).
As condicões 1 e 2 dizem que d(x,y) &gt; 0 e que d(x,y) = 0 se e so se x = y. A condição 3 refere que a função distância e simetrica. A condiçao 4 chama-se desigualdade triangular. Esta propriedade, no plano euclidiano, resulta do facto do comprimento de um dos lados de um triângulo não exceder a soma dos outros dois.
Definição 1.2 Um espaço métrico é um par (X,d) onde X é um conjunto e d é uma métrica nesse conjunto.
Ao longo desta tese, quando nos referirmos a distância entre dois pontos de Rn, sem a explicitarmos, estaremos a considerar a distância euclidiana, ou seja, o comprimento do segmento de reta por eles definido. Assim se x = (x1,x2, ••• ,xn) e y = (y1,y2, ••• ,yn) sao dois pontos pertencentes ao espaco euclidiano Rn então a distância de x a y é dada por
d(x, y) =	(xi - yi)2 +	- yz)2 +------+ (xra - yn)2.
Esta distancia e induzida pela norma euclidiana
||x|| =	x2 + x2 +-----+ x2n,
isto e, d(x, y) = ||x — y||.
Definição 1.3 Seja A um subconjunto nao vazio de um espaco metrico (X, d) e seja x um ponto de X. A distancia de x a A (ver Figura 1.1) e o énfimo das distancias de x a qualquer elemento de A, ou seja,
d(x,A) = inf d(x,a).
Figura 1.1: Distância do ponto x ao conjunto A.
Definição 1.4 Sejam (X, d) um espaço metrico, x0 E X e r &gt; 0. Definem-se bola aberta,
B (x0, r), e bola fechada ou disco de centro em x0 e raio r, D(x0, r), respetivamente por
B(x0,r) = (x G X : d(x,x0) &amp;lt;r],
D(x0,r) = (x G X : d(x,x0) &amp;lt;r].
Definição 1.5 Sejam (X,d) um espaço métrico e A um subconjunto de X. Então:
•	x0 diz-se um ponto interior de A se existe r &gt; 0 tal que B(x0, r) Ç A;
•	x0 diz-se um ponto aderente a A se para todo o r &gt; 0 se tem B(x0,r) n A = 0;
•	x0 diz-se um ponto de fronteira de A se x0 é aderente e não interior de A;
•	o conjunto dos pontos interiores de A designa-se por interior de A e denota-se por
O
A;
•	o conjuntos dos pontos aderentes a A designa-se por aderência ou fecho de A e denota-se por A;
•	o conjunto dos pontos de fronteira de A designa-se por fronteira de A e denota-se por d A;
•	o conjunto A diz-se limitado se existem x G X e r &gt; 0 tal que A Ç B(x,r);
•	o conjunto A diz-se compacto se toda a sucessão de pontos de A admite uma sub-sucessão convergente para um ponto de A.
Proposição 1.6 Sejam (X,d) um espaco métrico e F um subconjunto de X. Entao F é fechado se e só se, para toda a sucessão de elementos de F convergente, o seu limite pertence a F.
Demonstração: Suponhamos que F e fechado e seja fn —&gt; f, sendo fn G F para todo
n
o n G N. Por definição de limite de uma sucessão,
Ve &gt; 0 3 p G N Vn &gt; p d(fn, f) &amp;lt;e.
Entao,
W&gt; 0 B(f,e) n F = 0,
o que significa que f G F. Como F e fechado, f G F.
Suponhamos agora que F não e fechado. Então existe f G F\F. Por definição de aderência,
Vn G N B(f, n) n F = 0.
Entao podemos escolher fn G B(f, n) n F. Esta sucessão (fn)n verifica,
Vn g n d(fn,f) &amp;lt;n,
pelo que fn —&gt; f. Mas f / F, o que conclui a demostração.
n
□
Teorema 1.7 Sejam (X,d) um espaço métrico compacto e F um subconjunto fechado de X. Entao F e compacto.
Demonstração: Seja (fn)n uma sucessão de elementos de F. Como X e compacto, esta sucessão admite uma subsucessão (fnk~)k convergente para um elemento f G X. Como F e fechado, pela Proposicão 1.6, f G F. Então F e compacto.	□
Proposição 1.8 Sejam (X, d) um espaco metrico e A um subconjunto não vazio de X.
Então a função
tf : X —&gt; R
x i—&gt; d(x,A)
e contínua.
Demonstração:	Comecemos por observar que Vx, y, z G X |d(x, z) — d(y, z) | &amp;lt;d(x, y)
uma vez que, pela desigualdade triangular, temos que
Vx, y,z G X d(x, z) &amp;lt;d(x, y) + d(y, z) e d(y, z) &amp;lt;d(y, x) + d(x, z).
Para mostrar a continuidade de em x0 G X, temos de verificar que
Ve &gt; 0 3 d&gt; 0 Vx G X d(x,xo)&amp;lt;d |d(x, A) — d(xo,A)| &amp;lt;e.
Observe-se que,
Va G A d(x,A) &amp;lt;d(x,a).
Por outro lado, como d(xo, A) = inf {d(xo,a)}, pela definição de ínfimo,
aCA
Vn G N 3 an G A d(xo, A) &gt; d(xo, an) — n•
Entao
d(x, A) — d(xo, A) &amp;lt;d(x, an) — (d(xo, an) — n) &amp;lt;d(x, xo) + n
e, como n e qualquer,
d(x, A) — d(xo, A) &amp;lt;d(x,xo).
Analogamente se mostra que,
d(xo, A) — d(x, A) &amp;lt;d(xo,x)
e, portanto, como |d(x, A) — d(xo, A)| &amp;lt;d(x,xo), basta tomar d = e em (1.1).
Proposição 1.9 Seja F um subconjunto fechado não vazio de Rn. Dado x G Rn fo G F tal que
d(x, F) = d(x, fo).
Demonstração: Como d(x, F) = inf {d(x,f)}, por definição de ínfimo,
f CF
Vk G N 3 fk G F	d(x, F) &gt; d(x, fk) — 1
Entao, como d(x, F) &amp;lt;d(x, fk), temos que
Vk g N
|d(x,F) - d(x,/fc)| &amp;lt;1
(1.1)
□
existe
pelo que d(x, fk) —+ d(x, F).
Por outro lado, a sucessão (fk)k e limitada, pelo que admite uma subsucessão, (fkj convergente para algum f0 G X. Mas, como F e fechado, f0 G F.	□
Proposição 1.10 Sejam F um subconjunto fechado nao vazio de e x / F. Seja f0 G F tal que d(x, F) = d(x, f0). Entao f0 G dF.
Demonstração: Suponhamos que f0 / dF. Então existe r &gt; 0 tal que B(f0,r) Ç F. Considere-se a reta que passa por x e f0. Então o ponto f1 = f0 + 2	pertence a
B(f0,r), uma vez que \\jj — /qII = 2 &amp;lt;r , pelo que fi G F.
Por outro lado, notando que ||x — f0\\ &gt; r, tem-se que
x — fi
x — fo— 2
x-f x-fü||
(llx — f0
x-f \x-fü ll
2
r
x — fo\\ — 2 &amp;lt;d(x,f0),
o que e uma contradição. Então f0 G dF.
□
1.2	Conjuntos convexos
Nesta seccão apresentamos alguns resultados sobre subconjuntos convexos e envolventes convexas de subconjuntos de Rn.
Definição 1.11 Um subconjunto A de Rn diz-se convexo se,
Vx, y G A VA G [0,1]	Ax + (1 — A)y G A.
Mais informalmente, um subconjunto de Rn e um convexo se contiver os segmentos de reta que unem dois quaisquer dos seus pontos.
Denotamos o segmento de reta definido pelos pontos x e y, (Ax+(1—A)y : 0 &amp;lt;A &amp;lt;1}, por [xi,x2].
Exemplo 1.12 A Figura 1.2 apresenta os esbocos de um subconjunto não convexo e de um subconjunto convexo de R2.
Figura 1.2: O conjunto A e não convexo e o conjunto B e convexo.
Comecemos por mostrar um resultado sobre subconjuntos convexos limitados de Rn.
O
Proposição 1.13 Sejam A um subconjunto convexo, limitado de Rn e a E A. Entao qualquer reta que passa por a interseta dA em dois pontos.
Demonstração: Podemos supor, sem perda de generalidade, que A e fechado. Seja r uma reta que passa por a e escolhamos v um vetor diretor da reta. Se denotarmos r+ = {a + tv : t E Rj} entao r+ n A e um fechado, por ser a intersecão de dois fechados, e e limitado, porque A e limitado. Então r+ n A = [a, a + tov], para algum t0 E R+, visto que A e convexo e fechado. E imediato concluir que a + tov E dA. Utilizando a semirreta r- = {a + tv : t E R-}, encontramos um segundo ponto em dA n r-.	□
Definição 1.14 Dado um conjunto A Ç Rn, chama-se envolvente convexa de A ao conjunto
{m	m
: ai E A,Xi E r+ ,	Aj = 1, m E N
i=1	i=1
Definição 1.15 Dados um conjunto A Ç Rn e e &gt; 0, define-se A(e)	|^J D(a,e).
aCA
Este conjunto designa-se por salsicha-e de Minkowsky ou vizinhança-e de A e sera utilizado com frequência ao longo desta tese.
Proposição 1.16 Sejam A e B subconjuntos de Rn. Então verificam-se as seguintes propriedades:
1.	E (A) e o menor convexo (no sentido de inclusão) que contém A;
2.	Se A Ç B entao E (A) Ç E (B);
3.	Se A é convexo, fechado e limitado então E (dA) = A;
4.	Se A e convexo e c &gt; 0 então A(e) e convexo;
5.	Se A e convexo, fechado e limitado e e &gt; 0 então A(c) = E (d A) (c).
Demonstração:
1.	Comecemos por verificar que E (A) é convexo.
m	k
Dados m, k E N, sejam x	Xia e y = y^ yjbj, sendo Xi, yj E , ai, bj E A,
i=i	j=i
mk
i	j e	Xi = 52 yj =1
i=i	j=i
Podemos supor que m = k, tomando, por exemplo, no caso em que m &amp;lt;k,Xi = 0
para i = m + 1,... ,k e ai = a E A.
Seja a E [0,1]. Entao,
kk
ax + (1 — a) y = a y^ Xiai + (1 — a)	yibi
i=i	i=i
kk
= yy aXiai + yy (1 — a) yibi
i=i	i=i
2k
Yici
i=i
onde Yi = aXi e Ci = ai, se i E {1,..., k}, e y = (1 — a)y— e Ci = b—, se
i E {k + 1,..., 2k}.
Como
2k	k	2k
y Yi	y aXi +	(1	a) yi-k
i=1	i=1	i=m+1
kk
= a	Xi + (1 — a)	yi = a + (1 — a) = 1,
i=1	i=1
concluímos que ax + (1 — a) y E E (A).
Por outro lado, qualquer convexo que contenha A contém E (A), o que mostra que E (A) e o menor convexo que contem A.
2.	Esta propriedade obtem-se diretamente da definição de envolvente convexa.
O
3.	Se A = 0, o resultado e imediato, uma vez que dA = A. Podemos entao supor que A = 0.
Como A e fechado entao dA Ç A. Pela propriedade 2 concluímos que E (dA) esta contido em E (A). Mas, como A e convexo e, pela propriedade 1, E (A) e o menor convexo que contem A, entao E (A) = A. Mostramos então que E (dA) Ç A.
Vejamos a inclusao contraria. Seja a G A\dA e seja r uma reta qualquer que passa por a. Como A e limitado e convexo, pela Proposicão 1.13, existem x1,x2 G r ndA. Então a G [x1,x2], pelo que a G E (dA).
4.	Sejam x1,x2 G A(s)	|^J D (a, e). Então existem a1, a2 G A tais que x1 G D (a1, s)
aCA
e x2 G D (a2, s). Pretendemos mostrar que Ax1 + (1 — A) x2 G A(e), para A G [0,1]. Como A e convexo, Aa1 + (1 — A)a2 G A.
Alem disso,
|| Ax1 + (1 — A)x2 — (Aa1 + (1 — A)a2)|| = ||A(x1 — aj + (1 — A)(x2 — a2)||
&lt;	A ||x1 — a1| + (1 — A) ||x2 — a2||
&lt;	Ae + (1 — A)s = e
Então, Ax1 + (1 — A)x2 G D (Aa1 + (1 — A)a2,s) Ç A(e).
5.	Como A e convexo, fechado e limitado, pela propriedade 3, E(dA) = A. Então E (dA)(s) = A(e).
□
Capítulo 2
Distância de Hausdorff e salsicha de
Minkowsky
Considerando um espaço métrico (X, d) e o conjunto dos seus subconjuntos, P(X), podemos pensar como definir uma distância num subconjunto de P(X). A distância de Hausdorff, que sera explicada na secção 2.1, e uma forma natural de o fazer. Para que esta função seja uma distância, e necessario restringirmo-nos aos subconjuntos compactos de X.
Neste capítulo apresentamos duas definições alternativas para a distância de Hausdorff, usando uma delas o conceito de salsicha-e de Minkowsky ou vizinhança-e de um conjunto.
Serão provados alguns resultados envolvendo a distância de Hausdorff de subconjuntos convexos, fechados e limitados de R2. Sera ainda estabelecida uma relação entre a convergância de sucessões de convexos, fechados, limitados de R2 e a convergância destes conjuntos segundo Kuratowski.
2.1	A distância de Hausdorff
Para tentar motivar o conceito de distâancia de Hausdorff, vamos considerar a seguinte situação: sejam A e B duas populações algures num território, onde esta definida uma distancia, d. A distância de um habitante a pertencente a A a B, e a distância de a ao
seu vizinho mais próximo em B, ou seja, inf d(a,b').1 Do mesmo modo, a distância de um habitante b pertencente a B, a A, é a distância de b ao seu vizinho mais proximo em A, ou seja, inf d(b, a).
aÇ A
A “distancia” do conjunto A ao o conjunto B e definida por
h(A, B) = sup {d(a, B) : a E A}
(2.1)
e a “distancia” do conjunto B ao conjunto A por
h(B, A) = sup {d(b, A) : b E B].
Nota 2.1 Obsérvamos qué h nõo é uma distância, pois, ém géral, h(A,B) = h(B,A), como é ilustrado na Figura 2.1.
Para definirmos a distância entre as duas populacães, devemos tomar a maior distância possível entre um habitante de A e o conjunto dos habitantes de B, ou seja, h(A,B), e tambem a maior distâancia entre um habitante de B e o conjunto dos habitantes de A, isto e, h(B,A). O maior destes dois numeros seria o que poderíamos definir como a distância de Hausdorff entre A e B.
Exemplo 2.2 Considérémos, ém R2, os conjuntos A é B répréséntados por uma réta é um ségménto dé réta, réspétivaménté (vér Figura 2.2). Obsérvémos qué h(A,B) = +rc&gt;, pélo qué a distância dé Hausdorff éntré os dois conjuntos é +rc&gt;.
Este exemplo sugere-nos que devemos considerar conjuntos limitados, para termos a garantia de que a distâancia que vamos definir nãao e infinita.
1Note-se que, neste caso, em que estamos a considerar um conjunto finito, o ínfimo e mínimo.
Figura 2.2: Dois conjuntos cuja distancia de Hausdorff é infinita.
Exemplo 2.3 Consideremos, em R2, os conjuntos A = [0,1] x [0,1] e B =]0,1]x]0,1]. Então h(A, B) = h(B, A) = 0, mas A e B não são iguais.
Este exemplo permite-nos perceber que h(A, A) = h(A, A) = 0. Para que a nossa definiçao seja uma distancia devemos considerar apenas conjuntos fechados.
Recordemos que os subconjuntos limitados e fechados de R2 sao, precisamente, os subconjuntos compactos.
Vamos agora introduzir a definição de distância de Hausdorff num subconjunto, convenientemente escolhido, do conjunto das partes de um espaco metrico (X, d).
Definição 2.4 Dado (X,d) um espaço métrico, seja
H(X) = [K Ç X : Ké compacto e não vazio}.
Dados dois conjuntos A, B E H(X) define-se distância de Hausdorff entre A e B como,
dH(A,B) = max sup d(x,B), sup d(x,A)	(2.2)
xCA	xCB
Sabemos, pela Proposição 1.9 que, se A e fechado, d(x,A) = d(x,a), para algum a E A. Por outro lado, pela Proposicão 1.8, a funçao,
tf : X —&gt; R
d(x, A)
e uma funcao contínua. Como B e compacto,
sup d(x, A) = sup {^(x) : x E B} = ^(b),
xCB
para algum b E B. Então,
sup d(x, A) = d(a, b).
xEB
Mostramos então que, se A e B são compactos, dH(A,B) &amp;lt;+rc&gt;.
Nota 2.5 É importante nao confundir a distância de Hausdorff entre dois conjuntos A e B com a distância entre os conjuntos A e B, usualmente definida num espaço mÉtrico. A distância entre dois conjuntos A e B define-se por,
d(A, B) = inf {d(x, y) : x E A, y E B}
Observe-se que d não e uma distância em H(X).
Exemplo 2.6 Consideremos, em R2, A = [0,1] x [0,2] e B = [2, 3] x [0,1] (ver Figura 2.3).
Figura 2.3: A distância usual e a distância de Hausdorff entre A e B são diferentes.
E facil verificar que dH(A,B)	v'5 e que d(A,B) = 1.
Vejamos ainda um outro exemplo.
Exemplo 2.7 Consideremos A = {(1,1), (1,2), (2,1)} e B = {(2, 2), (3, 2), (3, 3)}, como mostra a Figura 2.4. Como se pode verificar h(A, B) = a/2 e h(B, A) = y/5, por conseguinte dH(A, B) = max {\/2, V5} = y/5.
3- 2- 1-	-	• -	•	■ A •	■ B ■
	1	2	3
Figura 2.4: Distância de Hausdorff entre os conjuntos A e B.
Proposição 2.8 Seja (X, d) um espaço métrico. Entao a distancia de Hausdorff é uma métrica em H(X).
Demonstração: Recordemos a definição de h(A,B) dada em (2.1).
1.	E imediato concluir que, para todo A G H(X) se tem dH (A, A) — 0.
2.	V A,B gH(X) A — B	dH(A,B) &gt; 0.
Sejam A,B G H(X). Como A e B são compactos e não vazios, então existem x G A e y G B tais que h(A,B) — d(x,y). Como d é uma metrica em X, então d(x, y) &gt; 0 e portanto dH(A, B) &gt; 0. Se A — B, então existe x G A tal que x / B, donde h(A,B) — 0, porque A e B sao fechados. Consequentemente dH (A,B) — 0.
3.	é imediato concluir que a funcao dH é simétrica.
4.	V A, B, C G H(X) dH(A, B) &amp;lt;dH(A, C) + dH(C, B).
Recorde-se que A,B e C são compactos e comecemos por verificar que
h(A,B) &amp;lt;h(A,C) + h(B,C)
Observe-se que, dados a G A e b G B, temos que
Vc G C d(a, b) &amp;lt;d(a, c) + d(c, b).
Então
Vc G C min d(a,b) &amp;lt;min d(a,c) + d(c,b) = d(a,c) + min d(c, b),
bEB	bEB y	'	bEB
o que significa que, para todo o c G C, temos que d(a, B) &amp;lt;d(a, c) + d(c, B). Mas,
como d(c,B) &amp;lt;h(C,B), que não depende de c, concluímos que
d(a, B) &amp;lt;min d(a, c) + h(C, B),
cEC
o que implica que
d(a, B) &amp;lt;d(a, C) + h(C, B) &amp;lt;h(A, C) + h(C, B).
Concluímos então que
h(A, B) = maxd(a, B) &amp;lt;h(A, C) + h(C, B).
aEA
Analogamente se mostra que
h(B,A) &amp;lt;h(B,C) + h(C,A).
Entãao
dH(A, B) = max {h(A, B), h(B, A)}
&lt;	max {h(A,C) + h(C,B),h(B,C) + h(C, A)}
&lt;	max {h(A, C), h(C, A)} + max {h(B, C), h(C, B)}
= dH (A,C) + dH (C,B).
□
Generalizamos agora a definição de salsicha-e de Minkowski que ja foi introduzida no
Capítulo 1 (Definicão 1.15) para subconjuntos de Rn.
Definição 2.9 Sejam (X, d) um espaço métrico e e &gt; 0. A salsicha-e de Minkowski ou vizinhança-c de um subconjunto E de X é o conjunto
E (e) =	D (x,e).
xEE
(2.3)
Observe-se que, como estamos a considerar apenas conjuntos compactos, sup d (a, B)&amp;lt;
a&lt;EA
e se e só se A Ç B (e). Assim, podemos introduzir uma definição, que mostraremos ser equivalente a definição de distência de Hausdorff,
dH (A, B) = inf {e &gt; 0 : A Ç B (e) e B Ç A (e) }.	(2.4)
Vejamos um exemplo do cálculo de d*H (ver Figura 2.5).
Figura 2.5: Exemplo de calculo da distância de Hausdorff usando a salsicha de Minkowski.
Proposição 2.10 A função d*H : H(X) x H(X) —&gt; R definida em (2.4) e a distância de Hausdorff dH (ver Definição 2.4).
Demonstração: Sejam A,B G H(X) e denote-se a = d*H(A,B). Vamos mostrar que a = dH(A, B).
Como, dado J &gt; 0, se tem dH(A, B) &amp;lt;a + d, então, pela definicão de dH temos que,
A Ç B(a + d) e B Ç A(a + d)
(2.5)
e, como dH &gt; a — d, então
Por (2.5) conclu ímos que, dado a G A, existe bs G B tal que d(a,bs) &amp;lt;a + d e tambem que, dado b G B, existe as G A verificando d(as, b) &amp;lt;a + d. Conclu ímos assim que
Va G A Vb G B d(a, B) &amp;lt;a + d e d(b, A) &amp;lt;a + d
e, como d e um numero positivo arbitrário, fazendo d tender para zero, obtemos que
Va G A Vb G B d(a, B) &amp;lt;a e d(b, A) &amp;lt;a
o que imediatamente implica que,
dH(A,B) = max sup d(a,B), sup d(b, A)	&amp;lt;a = d*H(A,B).
aCA	bCB
Por outro lado, de (2.6) conclu ímos que, dado d &gt; 0, existe as G A tal que, para todo o b G B, temos que d(as, b) &gt; a — d ou então existe bs G B tal que, para todo o a G A, temos que d(bs, a) &gt; a — d. Entao, para todo d &gt; 0,
sup d(a,B) &gt; d(as,B) &gt; a — d ou sup d(b, A) &gt; d(bs, A) &gt; a — d
aCA	bCB
o que significa que,
dH(A,B) = max sup d(a,B), sup d(b, A)	&gt; a — d
aCA	bCB
= dH (A,B) — d.
Como d e qualquer numero positivo (pequeno), fazendo d convergir para zero, conclu ímos que dH &gt; dH.	□
Ja mostramos na Proposicão 2.8 que a distância de Hausdorff e uma metrica em H(X). No entanto, apresentamos uma demonstracão da desigualdade triangular usando o conceito de salsicha de Minkowsky. Vejamos então que dados trâs conjuntos quaisquer A, B e C pertencentes a H(X), estes verificam a desigualdade,
dH(A, C) &amp;lt;dH(A, B) + dH(B, C).
Mostremos que, dado um numero real positivo e, temos que
e &gt; dH(A, B) + dH(B, C)	e &gt; dH(A, C).	(2.7)
Consideremos a = dH(A, B) + dH(B, C). Então
Vô &gt; 0 a + ô &gt; a = dH(A, B) + dH(B, C).
Supondo que a condição (2.7) e verdadeira, podemos concluir que
V ô &gt; 0 a + ô &gt; dH(A, C).
Como ô e um numero positivo arbitrario, fazendo ô convergir para zero, obtemos que a &gt; dH(A,C), o que conclui a prova, desde que mostremos (2.7). Para isso, seja e &gt; dH(A, B) + dH(B, C) e escolhamos ex e e2 dois numeros reais positivos tais que e = ex + e2 e
ex &gt;dH(A,B),	(2.8)
e2 &gt;dH(B,C).	(2.9)
Mostremos que e &gt; dH(A, C).
Por definição da salsicha de Minkowski e por (2.8) temos A Ç B(ex) e B Ç A(ex) e por (2.9) temos B Ç C(e2) e C Ç B(e2).
Aplicando o conceito de salsicha de Minkowski a B obtemos
B(£2) Ç A(ex +	e B(ex) Ç C(ex + £2)-
Assim, conclui-se que A Ç B(ex) Ç C(ex + e2). Do mesmo modo, C Ç B(e2) Ç A(ex + e2). Por conseguinte,
A Ç C(ex + S2) e C Ç A(ex + S2),
2.2	Convergência de sucessões de subconjuntos de R2
Consideremos em R2, o disco centrado na origem e raio R &gt; 0, D = D(0, R). Seja
H(D) = }K Ç D : K e fechado, limitado e não vazio}.2
Esta secção e dedicada ao estudo de sucessões de subconjuntos convexos contidos em D. Relacionar-se-a a convergência de sucessões para a distancia de Hausdorff com a definição de convergência segundo Kuratowski, que sera introduzida nesta seccão. Esta definição reduz o estudo da convergência de sucessães de conjuntos ao estudo da convergência de sucessães nesses conjuntos. Sera tambem mostrado um resultado que caracteriza os subconjuntos limitados de H(D).
Proposição 2.11 Se K1 e K2 são conjuntos convexos de H(D) então
dH (K1,K2) = dH (dKbdK2).
Demonstraçõo: Podemos supor que K1 = K2, uma vez que o caso K1 = K2 e imediato.
Recordemos que dH(K1,K2) = ma^{h(K1,K2), h(K2,K1/}, estando h(A,B) definido em (2.1). Assumamos que dH(K1,K2) = h(KnK2) e sejam x1 G K1 e x2 G K2 tais que h(K1,K2) = maxd(x,K2) = d(x1,x2). Sabemos, pela Proposicão 1.10 que, xCKi
O
como K2 e fechado, x2 G dK2. Suponhamos que x1 G K1. Entao existe r &gt; 0 tal que B(x1, r) Ç K1. Considere-se a reta s que une x1 a x2. E claro que para todo o x G K1 n s, d(x,K2) = d(x,x2). Se tomarmos x0 = x1 + 2então x0 G K1, uma vez que ||x0 — x1| = 2 e B(x1,r) Ç K1. Então,
d(xo,K2) = d(xo,x2) = d(x1,x2) + 2 &gt; d(x1,K2),
o que e absurdo. Conclui-se, assim, que x1 G dK1.	□
Exemplo 2.12 Como se pode observar na Figura 2.6, dH(KnK2) = 3 e dH(dK1,dK2) = 2. Observe-se que K1 = D(0,1) e convexo mas K2 = {(x, y) G R2 : x2 + y2 = 9} não e
2Para simplificar, estamos a considerar apenas os compactos contidos num disco fixado de R2.
Figura 2.6: Dois conjuntos, um nao convexo, em que a distância de Hausdorff e realizada no interior de um dos conjuntos.
convexo.
Definição 2.13 Sejam (An)n uma sucessão de subconjuntos de R1 2 e A um subconjunto de R2. Dizemos que (An)n converge para A no sentido de Kuratowski se:
1. Vx e A	3 Xn E An	Xn 	X'f n
2. Se xnj E Anj e xnj	' x então x E A.
Vejamos um exemplo.
Exemplo 2.14 Sejam An = D(0,1 — 1) e A = D(0,1). Vejamos que (An)n converge para A segundo Kuratowski.
1.	Dado a E A, seja an = 1 — 1 a. Então an E An e IIan — al| = 1 llall —&gt; 0.
n	n n
2.	Sejam anj E Anj tais que anj —&gt; a. Como a funcão norma é contínua, obtemos
l|an. II &amp;lt;1—1	1, então a E A.
n	nj j
Observe-se que a sucessão (An)n também converge para A em ('H(D),dH).
Proposição 2.15 Seja A um subconjunto de H(D). Então A é limitado se e só se |^J A
AeA
e limitado em R2.
Demonstração: Comecemos por supor que A é limitado. Então existem K E H(D) e r &gt; 0 tais que A esta contido no disco de centro em K e raio r (para a metrica dH), isto e,
VA e A dH(A,K) &amp;lt;r.
Em particular, usando a definiçao de distância de Hausdorff que utiliza as salsichas de Minkowsky, obtemos A Ç K(r). Mas, como o conjunto K e compacto então K(r) e
AeA
limitado em R2.
Suponhamos agora que A e limitado em R2. Então existe r &gt; 0 tal que A Ç
aeA	aea
D(0,r). Em particular, chamando F = D(0,r), temos
VA eA	A Ç U A Ç F Ç F(2r).
AeA
Por outro lado, se a E A então a E D(0, r) pelo que, dado x E D(0, r), pela desigualdade triangular temos que d(x,a) &amp;lt;2r. Mas entao,
F = D(0, r) Ç D(a, 2r) Ç A(2r).
Conclui-se assim que
dH(A, F) = dH (A, D(0, r)) &amp;lt;2r,
o que mostra que A e limitado.
D
Vamos agora estudar a relacão entre as duas noções de convergência, usando a metrica dH ou a definição de Kuratowski.
Teorema 2.16 Suponhamos que (An)n e uma sucessão de conjuntos de (H(D),dH) convergente para um conjunto A. Então (An)n converge segundo Kuratowski para A.
Demonstração: Comecemos por mostrar 1.
Dado a G A, como A e fechado, existe an G An tal que d(a,An) = d(a,an). Mas, como d(a,An) &amp;lt;dH(A, An) —&gt; 0 entao an —&gt; a.
n	n
Mostremos agora 2.
Seja anj E An. tal que anj —&gt; a. Suponhamos que a / A. Como A e compacto, j
existe p &gt; 0 tal que D(a,p) n A(p) = 0. Como An —&gt; A em H(D), por definição de n
limite, para este p, existe n0 E N tal que, se n &gt; n0 entao An Ç A(p), o que contradiz o facto de an. —&gt; a. Entao a E A.	□
3 j
Observe-se que a convergância segundo Kuratowski e mais facil de compreender e mais intuitiva que a convergencia em H(D) com a metrica de Hausdorff, uma vez que transforma o problema de estudar a convergância de sucessões de conjuntos no estudo da convergância de sucessoes de pontos de R2.
Teorema 2.17 Seja (Kn)n uma sucessão de subconjuntos de H(D) e suponhamos que (Kn)n converge segundo Kuratowski para um conjunto K. Então (Kn)n converge para K no espaco métrico H(D).
Demonstração: Suponhamos que (Kn)n nao converge para K em (H(D),dH). Por definiçcãao de limite,
3 e &gt; 0 Vj E N 3 nj &gt; j dH(Knj ,K) &gt; e.
Observemos que a sucessão (nj)j pode ser escolhida estritamente crescente. Para cada j E N temos que K Knj(e) ou Knj K(e). Uma das duas condiçoes acontece para um conjunto infinito de índices. Podemos supor, para simplificar notaçoes e sem perda de generalidade, que essa condição acontece para todos os índices.
Suponhamos que temos K	Knj (e), para todo o j E N. Então,
Vj E N 3 Zj E K\Knj (e),
pelo que d (zj,Kj &gt; e. Como (zj)j e uma sucessão no conjunto compacto K, existe uma subsucessão Zjk —&gt; x E K (na distancia usual de R2). Mas,
e então, para k suficientemente grande,
d	Kjk ) &gt; d (zjk ,Kjk ) - d(zjk ,x) &gt; £ - | = |.
Como (Kn)n converge segundo Kuratowski para K, pela condição 1 da Definição 2.13, existe xn E Kn tal que xn —&gt; x. Mas entao,
n
d (x,Kjk) &amp;lt;d (x,xjk) —&gt; 0&gt;
n
o que contraria o facto de d (x,Kjk) ser maior ou igual a |.
Suponhamos agora que se verifica Knj	K(e), para todo o j E N. Então,
Vj E N 3 Zj E Knj\K(e).
Portanto
Vj E N d(zj, K) &gt; e.
Como (zj)j e uma sucessão de pontos do conjunto compacto D(0,R) entao esta sucessão admite uma subsucessao (zjk)k convergente para z E D(0,R). Uma vez que Kjk	K segundo Kuratowski, como zjk E Kjk e zjk k' z, pela condicão 2 da De-
finicão 2.13, z E K. Mas isto e absurdo porque
d(z, K) = lim d(zjk ,K) &gt; e.
□
Conclui-se, assim, que (Kn)n converge para K em (H(D),dH).
Capítulo 3
Distancia de Hausdorff - uma abordagem computacional
Neste cap ítulo são abordados os aspetos computacionais deste trabalho. Existem duas vertentes na abordagem computacional que se interligam e complementam: o calculo e a visualização. O conceito de distância de Hausdorff e, em certa medida, um conceito contraintuitivo, por isso, dispormos de um ambiente grafico em que se possam manipular os objetos e explorar situaçcãoes relacionadas com o conceito e um aspeto que deve ser valorizado. Definir um algoritmo e implementa-lo, de modo a automatizar o calculo da distancia de Hausdorff de dois conjuntos, mesmo quando estamos limitados a conjuntos “muito simples”, revelou-se um desafio interessante e so parcialmente conseguido. A escolha da ferramenta computacional foi feita de modo a poder responder a estes dois desafios e ter potencial para resolver problemas que, a partida, nao estavam previstos. O sistema Mathematica encaixa, de forma natural, nestas condições.
Os formatos tradicionais de tese limitam a forma de apresentar os aspetos graficos, o que pode ter o efeito de desvalorizar essa vertente. Em papel a questão e incontornavel, pelo que as ilustraçães são apenas imagens. Na versao em formato pdf tentamos evidenciar o aspeto grafico embebendo no documento algumas animações. As animaçães foram criadas em flash (swf), usando a capacidade do Mathematica para exportar para este formato, a não ser no caso em que se pretende ilustrar a possibilidade de manipular os objetos, onde se fez a gravação a partir do monitor. As figuras que tâm flash embebido estao assinaladas
na legenda com o símbolo O visualizador do ficheiro pdf tera que ter capacidade para apresentar o conteudo vídeo embebido no ficheiro e de interpretar javascripts.
Para a leitura desta tese e deste capítulo em particular, recomendamos o suporte em computador em vez do suporte em papel.
3.1	Uma interface gráfica dinâmica
A construcão de uma interface grafica em que o utilizador possa manipular os objetos com o “rato” era um objetivo que nos propunhamos atingir neste trabalho. Essa tarefa foi muito simplificada recorrendo as capacidades de interatividade dinâmica que o sistema Mathematica possui. De facto, para conseguir atingir o objetivo de forma muito satisfatória, nem foi preciso recorrer a escrita de linhas de codigo com alguma complexidade, usando as diversas funçoes que sao disponibilizadas pelo Mathematica, para desenhar uma interface grafica com capacidades de interatividade. A funcão Manipulate permite, de forma simples, construir uma estrutura perfeitamente adequada a finalidade que tínhamos em mente.
Para poder confirmar o que acabamos de dizer, a interface que e apresentada na Figura 3.1, e obtida com as instrucões seguintes:1
Manipulate[obj1=Take[pts,3];obj2=Drop[pts,3]; Graphics[{ColorData["HTML","Turquoise"],Salsicha[obj1,eps1],
ColorData["HTML","Aquamarine"],Salsicha[obj2,eps2],Black,
Representa[obj1],Representa[obj2]},PlotRange-&gt;4,ImageSize-&gt;{400,400}], {{eps1,0,"Eps1"},0,4Sqrt@2,.01,Appearance-&gt;"Labeled"}, {{eps2,0,"Eps2"},0,4Sqrt@2,.01,Appearance-&gt;"Labeled"}, {{pts,{{-1,0},{0,1},{2,0},{0,2}}},{-3,-3},{3,3},Locator,
LocatorAutoCreate-&gt;{3,Infinity}}]
A Figura 3.1, na versao digital deste documento, permite aceder a uma animação onde se exemplifica a interatividade que a interface produzida apresenta.
1A apresentação do código pretende apenas exemplificar a simplicidade. Nele são invocadas funções que serao mencionadas posteriormente, cujo código consta do Anexo.
O
Epsl	Q	n 1
Figura 3.1: Exemplo da interface grafica interativa.
3.2	Caracterização da função Eps
Começcamos por fixar algumas notaçcãoes e referir algumas liberdades de notaçcãao a que nos permitimos.
Nesta secção, os conjuntos considerados são subconjuntos compactos de R2. Usaremos letras maiusculas para representar pontos e conjuntos de pontos.
Iremos representar da mesma forma, por uma letra maiuscula, um ponto e o conjunto singular formado por esse ponto.
Um segmento de reta sera identificado pelas suas extremidades; o segmento de reta definido pelos pontos A e B sera denotado por [AB].
Dada um sequência de n pontos A1,...,An, n &gt; 1, a linha poligonal definida por essa sequência de pontos, correspondente a união dos segmentos de reta [AiAi+1], i = 1,...,n — 1, sera denotada por [A1 ...An]. Observe-se que, nesta definicão, uma linha poligonal podera corresponder a um segmento de reta.
Representaremos por Funcao a implementacão da funcão “Funcao” no sistema Mathe-matica.
Dados dois conjuntos X e Y, o menor valor de e &gt; 0 cuja vizinhanca-e de X contem Y sera denotado por eX,Y, i.e., eX,Y = min {e G Rj : X(e) D Y}.
O objetivo e construir2 uma funcão Eps tal que, dados conjuntos X e Y de determinada
2Construir no sentido de implementar no sistema Mathematica.
forma, Eps[X, Y] = ex,y. Ambicionavamos que qualquer um dos argumentos da funcão Eps pudesse ser um ponto ou uma linha poligonal no plano, mas ficamos aquem desse objetivo.
Os argumentos da funçcãao Eps sãao muitas vezes referidos como objetos.
Nesta seccao são apresentados alguns resultados que permitem definir e justificar o algoritmo desenhado para a função Eps. O primeiro desses resultados e um lema generico, uma vez que invoca um conjunto que naão e necessariamente um ponto ou uma linha poligonal. Este lema sera usado na demonstraçao de alguns dos lemas subsequentes.
Lema 3.1 Seja X um conjunto compacto3 não vazio e P um ponto. Então,
ex,p = d(P, X ).
Demonstração: Como P G X(ex,p), existe um ponto A G X tal que P G D(A,ex,p). Conclui-se então que d(P, X) &amp;lt;ex,p.
Por outro lado, qualquer que seja B G X, d(B,P) &gt; ex,p logo d(P, X) &gt; ex,p. Conclui-se assim que d(P,X) = ex,p.	□
A situaçcãao mais elementar e aquela em que cada um dos argumentos e um ponto.
Lema 3.2 Sejam A e B dois pontos. Então
eA,B = eB,A = d(A, B)-
Demonstração: Este resultado decorre do Lema 3.1 considerando P = A e X = B ou P = B e X = A.	□
A funçcãao Eps, no caso em que os argumentos sãao dois pontos, limita-se a calcular a norma do vetor definido por esses pontos.
A Figura 3.2 apresenta um exemplo de aplicação da função Eps quando cada um dos argumentos e um ponto.
O proximo lema permite-nos definir a funçcãao Eps quando o primeiro argumento e um ponto mas o segundo e uma linha poligonal.
3O resultado ainda e válido se substituirmos compacto por fechado. No entanto, nesta secção estamos apenas a considerar conjuntos compactos.
Figura 3.2: Sendo A e B pontos, Eps[A,B] = Eps[B, A] = d(A,B).
Lema 3.3 Dados um ponto A e uma linha poligonal [B1... Bn], n &gt; 1,
= max d(A,Bi).
Demonstração: Como A(sA;[B1 ...Bn]) contem B1,... ,Bn, isso implica que £A)[B1...Bn] &gt; max d(A, B) Uma vez que A(e) e convexo, se P e Q são pontos tais que {P, Q} Ç A(e), i=1,...,n
então [PQ] Ç A(e). Conclui-se assim que £AíB1...Bn] = max d(A,Bi).	□
A função Eps tera de determinar o maximo das normas dos vetores definidos pelo ponto correspondente ao primeiro argumento e pelos pontos que definem a linha poligonal dada como segundo argumento.
A Figura 3.3 apresenta três exemplos em que a função Eps e invocada com um ponto como primeiro argumento e com o segundo argumento sendo uma linha poligonal definida por dois, três e quatro pontos.
(a) Ponto e linha poligonal formada por dois pontos.
SA,[B, B2 B3] = 2
(b) Ponto e linha poligonal formada por três pontos.
£a,[b¡ ...b4] = 2 V2
(c) Ponto e linha poligonal formada por quatro pontos.
Figura 3.3: Exemplos de aplicação da função Eps [pt,lp].
Analisemos agora a situação inversa, ou seja, considerando como primeiro argumento uma linha poligonal e como segundo argumento um ponto.
Lema 3.4 Dados uma linha poligonal [A1... An], n &gt; 1, e um ponto B,
= min d(B, [AiAi+1]).
i=1,...,n-1
Demonstração: Usando o Lema 3.1 com P = B e X = [A1... An] conclui-se que £[Ai...An],B = d(B, [A1 ...An]) = min d(B, [AjAi+i]).	□
i=1,...,n-1
Para tratar este caso foram definidas duas instâncias da função Eps, separando a si-tuacão em que a linha poligonal e definida por dois pontos, ou seja, e um segmento de reta, da situação em que a linha poligonal e definida por trâs ou mais pontos. No primeiro caso a função Eps determina a distância do ponto ao segmento de reta, situaçao exemplificada na Figura 3.4. Na outra situacão, considerando uma linha poligonal definida por n pontos, com n &gt; 3, a funcão Eps invoca n — 1 vezes a instância anteriormente referida de Eps, de acordo com o Lema 3.4 e extrai o mínimo dos n — 1 valores obtidos. Esta situacao e exemplificada na Figura 3.5.
£[A, A2],B = P2
(a)	A distancia de B a [A1A2] e realizada num ponto pertencente ao pe da perpendicular.
(b)	A distancia de B a [A1A2] e realizada num dos extremos do segmento de reta.
Figura 3.4: Exemplos de aplicação da funcão Eps [seg,pt].
Considere-se agora uma situação em que nenhum dos argumentos se reduz a um ponto.
Lema 3.5 Dados um segmento de reta [AXA2] e uma linha poligonal [Bx... Bn],
£[AiA2],[Bi...Bn] = max d(Bi, [A1A2])-
i=1,...,n
(a) O ponto B pertence a salsicha dos dois segmentos de reta que formam a linha poligonal.
(b) O ponto B pertence a salsicha de [A2A3].
(c) O ponto B pertence a salsicha de [A1A2].
Figura 3.5: Exemplos de aplicacão da função Eps [lp,pt].
Demonstracão: Seja s = max d(B^, [A1A2]). Como i=1,...,n
B1, • • • , Bn G [A1A2](s[AiA2],[Bi...Bn])&gt;
tem-se que £[AiA2],[Bi...Bn] &gt; s.
Por outro lado, como [A1A2](s) e convexo, contem [B^Bj], i, j = 1,... ,n. Em particular [Bi... Bra] Ç [A1A2](s), logo S[AiA2],[Bi...Bn]&amp;lt;
Conclui-se assim que S[AiA2],[Bi...Bn] = s.	□
Observando, de acordo com o Lema 3.4, que d(Bi, [A1A2]) = E[AiA2],Bi, recorrendo a uma instância anterior, a funcão Eps calcula o maximo dos S[AiA2],Bi, i = 1, • • • ,n.
Na Figura 3.6 apresentam-se dois exemplos da situacao acabada de descrever.
Face a sequância dos lemas seria natural agora apresentar um resultado que permitisse definir um algoritmo para a construçcãao de Eps quando o primeiro argumento e uma linha poligonal e o segundo e um segmento de reta ou ate uma linha poligonal. O proximo lema vai nesse sentido, mas apenas considera uma situaçao particular.
Lema 3.6 Dados uma linha poligonal [A1A2A3] e um segmento de reta [B1B2], designemos por E o conjunto dos pontos equidistantes de [A1A2] e [A2A3], i.e.,
E = {P G R2 : d(P, [A1A2]) = d(P, [A2A3])} •
(a) Linha poligonal formada por dois segmentos de reta.
tres segmentos de reta.
Figura 3.6: Exemplos de aplicação da funcão Eps [seg,lp].
1. Se [BxB2] n E = Z então,
e[AiA2 A3],[BiB2 ]	m-1I2 e[AíAí+i],[BiB2] ■
2. Se [BxB2] n E = Z, designando por B3 um ponto de [BxB2] n E, então,
c[A1A2A3],[B1B2]	¿=0X3 C[AiA2A3],Bí ■
Demonstração: Seja e = £[a1A2A3],[b1B2].
1. Considere-se a situacão em que [B1B2] n E = 0.
Observando que [A1 A2A3](e) = [A1A2](e) U [A2A3](e), e simples concluir que e &amp;lt;min B[AiAi+i],[BiB2]. Suponhamos então que
e &amp;lt;min e[AíAí+i],[BiB2] ■	(3.1)
Vejamos que existe B3 E [B1B2] tal que d(B3, [A1A2]) &amp;lt;e &amp;lt;d(B3, [A2A3]).
Com efeito, existe um ponto em [B1B2] que esta em [A1A2](e) mas que não esta em [A2A3](e) pois, caso contrario, [A1A2](e) D [B1B2], o que implicaria que e[A1A2],[B1B2] e, contrariando a hipotese (3.1).
Analogamente se conclui que existe um ponto B4 E [B1B2] tal que d(B4, [A2A3]) &amp;lt;e &amp;lt;d(B4, [A1A2]).
&lt;
A funcão,
$ : [B3B4] —&gt; R
B -	■ d(B, [AiA2]) — d(B, [A2A3])
é contínua e $(B3) &amp;lt;0 &amp;lt;$(B4), logo existe B G ]B3B4[ tal que $(B) = 0, i.e., B G E, o que entra em contradição com o facto de [B1B2] n E = 0. Conclui-se assim que, se [B1B2] n E = 0, então
¿[A1AA3],[B1B2] = '“¡'2 £[AíAí+1],[B1B2] •
2. Seja B3 g [B1B2] n E, denotemos õ' = d(B', [A1A2A3]), i = 1,2, 3, e seja õ = max õ'. Vejamos que
'“1'2'3
Vi G{1, 2} 3 j G{1,2} [B'B3] Ç [AjAj+1](õ).	(3.2)
Com efeito, observando que õ &gt; õ3, tem-se que B3 G [AjAj+1](õ),j = 1 2 .
Fixemos i G {1,2}. Como õ' &amp;lt;õ, tem-se que B' G [A1A2A3](õ), logo B' G [AjAj+1 ](õ), para algum j G {1, 2}. Usando o facto de [AjAj+1](õ) ser convexo, conclui-se que [B'B3] Ç [AjAj+1](õ), donde se deduz (3.2), o que implica que e &amp;lt;õ.
Por outro lado e imediato verificar que e &gt; õ. Obtem-se assim que, se [B1B2]nE = 0 e sendo B3 um ponto de [B1B2] n E, £[am2A3],[BiB2] = max¿[¿1^3]Bi.
□
Para efeitos do calculo de £[A1A2a3])[b1 b2], na sequência do Lema 3.6, e fundamental a caracterizaçcaão da regiãao de equidistêancia E. Considerando trêes pontos nãao colineares A1, A2 e A3, comecemos por representar as bandas abertas formadas pelos pontos cuja distancia a cada um dos segmentos de reta [A1A2] e [A2A3] e realizada no pe da perpendicular (ver Figura 3.7(a)).
Com base nas bandas representadas, consideremos as regiões R1 a R6 identificadas na Figura 3.7(b).
A distência de qualquer ponto de R1 aos segmentos de reta [A1A2] ou [A2A3] e a distancia desse ponto às retas suporte de cada uma dos segmentos de reta. Assim, em
distancia aos segmentos de reta [A1A2] ou [A2A3] se realiza no pe da perpendicular.
(b) Regioes de pontos R a R6.
(c)	Pontos de equidistancia pertencentes a bissetriz do angulo ZAiA2A3.
(d)	Pontos de equidistaancia pertencentes ao arco de parábola E\E2.
(f) Conjunto de pontos equidistancia.
(e) Pontos de equidistancia pertencentes a mediatriz do segmento de reta [A1A3].
Figura 3.7: Caracterização do conjunto de equidistancia E.
R1, os pontos equidistantes de [A1A2] e [A2A3] são os pontos equidistantes das retas suporte, i.e., são os pontos que pertencem a bissetriz do ângulo ZA1A2A3 e a região R1 (ver Figura 3.7(c)).
A distancia de qualquer ponto de R2 a [A1A2] coincide com a distância desse ponto a A1 e a distância de qualquer ponto de R2 a [A2A3] e determinada pelo pe da perpendicular a reta suporte de [A2A3]. Tem-se entao que os pontos de R2 equidistantes de [A1A2] e 2A3] são os pontos equidistantes de A1 e da reta suporte de [A2A3], o que define um arco de parabola cujo foco e A1 e cuja diretriz e a reta suporte de [A2A3] (ver Figura 3.7(d)).
A distância de qualquer ponto de R3 a [A1A2] e igual a distância desse ponto a A1 e a distancia de qualquer ponto de R3 a [A2A3] e igual a distância desse ponto a A3. Conclui-se então que os pontos de R3 equidistantes de [A1A2] e [A2A3] são os pontos equidistantes de dois pontos, pelo que se trata dos pontos da mediatriz do segmento de reta [A1A3] que pertencem a R3 (ver Figura 3.7(e)).
A distancia de qualquer ponto de R4 a [A1A2] e a [A2A3] coincide com a distancia desse ponto a A2, pelo que todos os pontos do cone designado por R4 são equidistantes de [A1A2] e de [A2A3].
Relativamente aos pontos pertencentes a R5, qualquer ponto desta região encontra-se mais próximo de [A1A2] do que de [A2A3], pelo que, nao existem, nesta região, pontos equidistantes de [A1A2] e de [A2A3]. Como qualquer ponto de R6 estó mais próximo de [A2A3] do que de [A1A2], concluó-se então que tambóm nao existem, em R6, pontos equidistantes de [A1A2] e de [A2A3].
Fica assim caracterizada a região de equidistancia E (ver Figura 3.7(f)).
Observe-se que, se os pontos A1, A2 e A3 forem colineares, estes definem um segmento de reta e, nesse caso, a região de equidistancia sera formada pela reta perpendicular a esse segmento de reta que passa por A2.4
No caso de A1A2 = A2A3 e os pontos A1, A2 e A3 nao serem colineares, a bissetriz do angulo ZA1A2A3 estó contida na mediatriz do segmento de reta [A1A3] e, nesta situação, o arco de paróbola degenera num ponto.
Denotaremos por E a região de equidistancia. Denotaremos ainda por CE a regiao de
4De facto, se Ai E [A2A3] ou A3 E [A1A2], então a região de equidistancia é a banda limitada pelas retas perpendiculares ao segmento de reta que passam por A1 e A2 ou A2 ou A3, respetivamente.
E correspondente ao cone de equidistancia (região R4 na Figura 3.7) e por rE a curva de equidistancia correspondente a uniao do segmento de reta, do arco de parabola e da semirreta que constituem a região de equidistancia correspondentes as regioes Rx, R2 e R3, respetivamente, identificadas na Figura 3.7. Os pontos que limitam o arco de parábola serão denotados por Ex e E2, tal como na Figura 3.7.
Para exemplificar a região de equidistancia elaborou-se uma pequena animacao, embebida na Figura 3.8, onde se pode observar a evolução dessa região quando se movem os pontos que definem os extremos dos segmentos de reta.
Na construçao da curva de equidistancia, a representação do arco de parábola limitado pelos pontos Ex e E2 e feita com recurso a uma curva de Bezier quadrática, usando três pontos de controlo: os extremos do arco de parábola e um terceiro ponto correspondente a intersecão das retas tangentes a parábola nos pontos Ex e E2. Esse ponto de intersecão, corresponde a interseção da bissetriz do angulo ZAxA2A3 e da mediatriz do segmento de reta AxA3, como se pode concluir da proposicão seguinte.
Proposiçao 3.7 Dados os pontos Ax , A2 e A3, a curva de equidistancia de [AxA2] e [A2A3], rE, é uma curva de classe Cx.
Demonstração: Designemos por 9 a amplitude do angulo ZAxA2A3 e consideremos que 9 G ]0, n[. Admitamos, sem perda de generalidade, que A2 coincide com a origem, que A3
Figura 3.9: Figura auxiliar a demonstracão de que rE e uma curva de classe Cx.
pertence ao semieixo positivo das abcissas e que A1 tem ordenada 1, ou seja, A1 = (1,a), A2 = (0,0) e A3 = (0,0), a,^ G R+ (ver Figura 3.9). Sejam E1 = (xE1 , yE1) e E2 = (xE2 , yE2) as extremidades do arco de paróbola.
A curva de equidistência rE, nesta situacão, corresponde ao grófico de uma funcão. Provar que a curva ó de classe C1 ó provar que a funcao ó derivóvel em xE1 e em xE2.
A parabola cujo foco e o ponto (1,a) e cuja diretriz e a reta y = 0 corresponde ao grafico da funçcãao
(x — 1)2 a y = 4^ + 2 ■
(3.3)
cuja derivada e
, x — 1 y =
a
(3.4)
Como Ei e um ponto da bissetriz do êngulo ZA1A2A3, AiA2 = A2C2	V I ■ a2 (ver
Figura 3.9), logo = a/1 + a2. Por outro lado, como E1 pertence a parabola,
AiEi = eic2 ° (V1 + —2 — 1)2 + (yE1 — a)2 = yE1
O 1 + a2 — 2 V1 + a2 + 1 + yE1 — 2ayE1 + a2 = yE1
1 + a2 — V1 + a2
O yE1 =	,
1a
logo Ei = ¡ \ ■ ■ ■ •',	').
O declive da reta A2E1 e dado por
yE1	1 + a2 —	+ a2	+ a2 — 1
xE1	aV1 + a2	a
O declive da reta tangente a parábola em E1 e dado por
Xfi, — 1
y'(xEi) =
a
a/1 + a2 — 1
a
(3.6)
De (3.5) e (3.6) conclui-se que a função que representa a curva de equidistancia e
derivavel em E1.
O declive da reta tangente a parabola em E2 e dado por
¡W) = —.	(3.7)
a
Usando a semelhança de triângulos, A[A3E2C3] ~ A[A3C'4E2] ~ A[A3C'1A1] (ver Figura 3.9), çonçlui-se que o declive da reta C3E2 e dado por
E2A3	_ C4E2	_ A3C1	_	— 1	(3 8)
De (3.7) e (3.8) resulta que a função que representa a curva de equidistancia é derivavel em E2.
De modo anélogo se demonstra a derivabilidade da função que representa a curva de equidistancia em E1 e em E2 se 0 G [n,n[.	A
Proposiçao 3.8 Sejam [AXA2A3] uma linha poligonal, [BXB2] um segmento de reta e seja E o conjunto dos pontos equidistantes de [AXA2] e [A2A3].
Se ]BxB2[ n E e não vazio e não singular então,
^[A1A2A3],[B1B2]	m|’2 £[AiAi+i]&gt;[BiB2],
i.e., apenas os extremos do segmento de reta [BXB2] sao determinantes no célculo de ^[A1A2A3],[B1B2] .
Demonstração: Recordemos que E — CEU rE. Vejamos que se ]BXB2[ n E é não vazio e não singular então existem dois pontos, B3,B4 G ]BXB2[ tais que d(B3, [AXA2A3]) &amp;lt;d(B4, [AxA2A3]).
Se ]B1B2[nCE = 0, então existe uma infinidade de pontos pertencentes simultanea
mente a ]BxB2[ e ao cone CE■
Consideremos Px e P2 dois pontos distintos pertencentes a ]BxB2[ e ao cone de equi-
distancia. Se P1 e P2 pertencem ao mesmo arco de circunferência de centro em A2 então Px e P2 estão a mesma distancia de [A1A2A3]. Tomamos entao B3 = P1+,P2 e B4 = P1 ou B4 = P2. Se P1 e P2 não pertencem ao mesmo arco de circunferência de centro em A2, então d(P1, A2) = d(P2, A2), bastando tomar B3 = P1 e B4 = P2, ou vice versa.
Se ]B1B2[nCE = 0, consideremos uma função 7 : [0, +rc&gt;[ —&gt; R2, injetiva, correspondente a uma parametrização contínua da curva de equidistência rE.
Consideremos a função
[0, +rc&gt;[
t
Ro+,
d(Y(t), [A1A2A3])
que e estritamente crescente.
Sejam Px e P2 pertencentes a ]BxB2[nrE e sejam tx,t2 G Rj tais que Px = 7(tx) e P2 = y(í2). Supondo, sem perda de generalidade, que tx &amp;lt;t2, basta entao tomar
B3 = Y(tx) = Px e B4 = 7(t2) = P2.
Fica entao justificado que, nas condicoes indicadas, existem dois pontos B3,B4 g
]BxB2[ tais que d(B3, [AA2A3]) &amp;lt;d(B4, [A^A?]).
Vejamos agora que d(B4, [A1A2A3]) &amp;lt;inaxe^^Aa]^.
Lema 3.6, sabemos que,
e[AiA2A3],[BiB2]	maX3 e[A1A2A3],Bí,
portanto,
d(B4, [A1A2A3]) &amp;lt;maxe[AiA2A3],Bi,
o que e absurdo.
Suponhamos agora que existe, eventualmente, um ponto B5 G]B1B2[ AE tal que
d(B5, [A1A2a3]) &gt; d(B4, [A1A2a3])-
Usando o raciocínio anterior e os mesmos argumentos, colocando B4 no lugar de B3 e B5 no lugar de B4, conclui-se que d(B5, [AXA2A3]) &amp;lt;maxqA1 a2a3],Bí.	□
A Proposicão 3.8 vem justificar o facto do algoritmo da funçao Eps que determina o valor £[A1A2A3],[B1B2] desprezar a verificacão da intersecao do segmento de reta [BXB2] com o cone de equidistancia. Como ficou demonstrado, no caso da interseçao de [BXB2] com a região de equidistancia se verificar em mais do que um ponto, os pontos relevantes para a sua determinaçao são os extremos do segmento de reta [BXB2]. Em termos computacionais o esforço seria bastante maior se a funçao Eps tivesse de verificar a intersecão com o cone de equidistancia.
Na Figura 3.10 apresentam-se três exemplos do cálculo de £[A1A2A3],[B1B2] numa situacão em que o ponto de interseção com a curva de equidistancia á quem determina o valor de e, numa situação em que o segmento de reta não interseta a região de equidistancia e numa situação em que ha interseção entre o segmento de reta e o cone de equidistancia.
(a) O valor de £ é calculado usando um ponto que pertence a curva de equidistancia rE.
3
(b) Situação em que nao existe interseção çom a região de equidistancia E.
5
£[A1 A2 A3LB1 B2J =
13
I C-4
(c) Situação em que [BxB2] interseta o cone de equidistancia Ce ■
Figura 3.10: Exemplos de aplicacão da funcao Eps [lp,seg].
Na Figura 3.11, na versão digital deste documento, apresenta-se uma animação análoga a que foi apresentada na Figura 3.1, mas agora o calculo dos valores Epsl e Eps2 e feito automaticamente e estes valores são atualizados sempre que se altera a posicão dos pontos,
o que corresponde a considerar objetos diferentes.
O
Figura 3.11: Exemplo da interface gráfica interativa. Os valores de Epsl e Eps2 sao atualizados em tempo real.
3.3	Aspetos computacionais
Na secção anterior e apresentado um conjunto de resultados com um objetivo preciso: reduzir, em ultima analise, a definição de Eps ao calculo da distância entre dois pontos. Da descrição que foi feita do algoritmo que a funcão Eps executa para determinar eobjiíObj2, consoante a natureza dos objetos dados como argumento, não transparecem todas as opçoes computacionais que foram tomadas. Apesar do codigo estar dispon ível em anexo,5 sera difícil, em alguns casos, interpretar esse mesmo codigo. Nesta secção faz-se a descrição mais detalhada da funçao Eps bem como de algumas funçoes auxiliares por ela invocadas. Comecamos por descrever algumas funçoes utilizadas na construção grafica das imagens e das animacões que ilustram este trabalho.
3.3.1	Representação gráfica
O primeiro comentario esta relacionado com a construção da salsicha-e de um objeto. No caso do objeto ser um ponto, a salsicha-e e o disco centrado nesse ponto e de raio e.
5Se estiver a ler este texto em suporte suporte digital, poderá visualizar o código das funções referidas, assinaladas a azul, colocando o curso sobre o nome da funçõo.
Se o objeto e um segmento de reta ou uma linha poligonal, uma opção computacional para obter a representação grafica da salsicha poderia ser representar um numero finito de discos de raio e, centrados em pontos do segmento de reta ou da linha poligonal, suficientemente próximos. A definição de “suficientemente próximos” depende da resolução do suporte utilizado na visualizacçaão da representaçcãao grafica, tipicamente monitor ou impressora, mas tambem do valor de e. A Figura 3.12(a) ilustra a situação acabada de descrever. O processo de representar a salsicha de um objeto formado por uma infinidade de pontos e computacionalmente pouco eficiente e pode implicar a representaçcãao de milhares de discos. Como lidamos com uma classe muito particular de objetos, segmentos de reta ou linhas poligonais, optamos por uma abordagem muito mais eficiente para representar as salsichas--e desses objetos. A salsicha-e de um segmento de reta pode ser constru ída usando apenas trâs objetos graficos: dois discos de raio e, centrados nos extremos do segmento, e um retangulo cujos lados tâm comprimento 2e e comprimento igual ao do segmento de reta, como se pode ver na Figura 3.12(b). A função que constroi este retângulo e a função Retângulo. No caso do objeto ser uma linha poligonal definida por n pontos, a salsicha e constru ída a custa de n discos e n — 1 retângulos (ver Figura 3.12(c)). A função Salsicha aceita como argumento um ponto ou uma lista de pontos e o valor para o raio e devolve um objeto grafico correspondente a representação da salsicha respetiva. A funcão Representa devolve um objeto grafico que permite assinalar os pontos e os segmentos de reta que constituem o objeto dado como argumento.
(a) Construção da salsicha de um segmento de reta usando apenas discos.
(b) Construção da salsicha de um segmento de reta usando dois discos e um retângulo.
uma linha poligonal usando discos e retângulos.
Figura 3.12: Opcoes graficas para a construçao da salsicha-e de um segmento ou linha poligonal.
As restantes funcões auxiliares relativas a parte grafica, LegendaPontos e LegendaEps, sao usadas para representar de forma semiautomatica as coordenadas dos pontos representados e o valor do 'obji,obj2 nas representares graficas.
3.3.2	A função Eps
A construção da funcão Eps e, de facto, a razão principal deste capítulo. Começamos por referir que a construção desta função se revelou mais complicada do que inicialmente se previa e o objetivo inicial nao foi totalmente atingido.
Dados dois objetos em R2, objl e obj2, Eps[obj1,obj2] deveria calcular sobji,obj2 quando os objetos dados como argumentos fossem pontos, segmentos de reta ou linhas poligonais. Ficaram por concretizar a situação em que o obj2 e um segmento de reta e o objl e uma linha poligonal definida por mais de tres pontos e a situação em que os dois objetos sãao linhas poligonais definidas por traes ou mais pontos.
O procedimento que permite determinar o valor de eobj1)Obj2 difere consoante a natureza dos dois objetos. Definindo diferentes moldes,6 ajustados a natureza dos argumentos da função Eps, foram criadas seis instancias para a funcão Eps, de modo a aplicar o procedimento ajustado a natureza dos objetos dados como argumentos. Um objeto íe identificado pelas coordenadas dos pontos que o definem: um ponto íe uma lista com dois elementos, pt={x,y}, um segmento de reta é uma lista contendo dois pontos, seg={{x1,y1},{x2,y2}}, e uma linha poligonal e uma lista contendo dois ou mais pontos, lp={{x1,y1},. .. ,{xn,yn}}.
Quando a função Eps e invocada com as coordenadas de dois pontos, pt1 e pt2, como argumentos, Eps[pt1,pt2], a funcao limita-se a calcular, de acordo com o Lema 3.2, a norma do vetor pt1-pt2.
Quando colocamos como primeiro argumento da funçcãao Eps as coordenadas de um ponto, pt, e como segundo argumento colocamos uma lista com as coordenadas de uma linha poligonal com dois ou mais pontos, lp=(pt1,... ,ptn}, Eps[pt,lp] invoca a instancia anterior de Eps para determinar a lista {Eps[pt,pt1],... ,Eps[pt,ptn]} e devolve o maximo dessa lista.
6Molde deve ser entendido no sentido do conceito pattern do Mathematica, que representa uma classe de expressões.
(a) B situa-se no complementar do conjunto de pontos do plano compreendido entre as retas e mais proximo de Ai.
(b) B situa-se no complementar do conjunto de pontos do plano compreendido entre as retas e mais próximo de A2.
(c) B situa-se no conjunto de pontos do plano compreendido entre as retas.
Figura 3.13: Posicão do ponto B relativamente ao segmento de reta [A1A2].
O Lema 3.4 determina a forma de implementar a função Eps no caso em que o primeiro argumento e uma linha poligonal e o segundo argumento e um ponto. Em termos computacionais optou-se por separar a situação em que o primeiro argumento e um segmento de reta da situacão em que o primeiro argumento e uma linha poligonal com pelo menos trâs pontos. Eps[seg,pt] limita-se a calcular a distancia do ponto ao segmento de reta. O algoritmo que e usado no calculo da distâancia de um ponto B a um segmento de reta [A1A2] baseia-se na decisão se essa distancia e a distância do ponto B a um dos extremos do segmento de reta [A1A2] ou se e realizada no pe da perpendicular do ponto B relativamente ao segmento de reta [A1A2]. O calculo do produto interno dos vetores A1A.2 e A^ esta na base dessa decisão: se o produto interno e negativo, entao o ponto A1 e o ponto do segmento de reta [A1A2] mais proximo de B, como e ilustrado na Figura 3.13(a); se o produto interno e maior do que o quadrado da norma do vetor A^2, então o ponto A2 e o ponto do segmento de reta mais proximo de B, situacão ilustrada na Figura 3.13(b); caso nenhuma das situacães anteriores ocorra, então a distância de B a [A1A2] e realizada no pe da perpendicular, como e apresentado na Figura 3.13(c). No caso em que o primeiro argumento e uma linha poligonal definida por trâs ou mais pontos, lp={ptí,... ,ptn}, Eps[lp,pt] constrói a lista (Eps[{ptí,pt2},pt],... ,Eps[{pt(n-í),ptn},pt]} e devolve o m Inimo dessa lista.
Dados um segmento de reta, seg, e uma linha poligonal, lp=(ptí,... ,ptn}, segundo o Lema 3.5, o valor devolvido por Eps[seg,lp] e o max Eps[seg,pti].
i=1,...,n
O caso que falta considerar e a programacão de Eps na situação em que o primeiro argumento e uma linha poligonal com trâs pontos e o segundo argumento e um segmento de reta. Esta e a situação menos imediata e o algoritmo tem em conta o Lema 3.6 e a Proposição 3.8.
Dados uma linha poligonal definida por trâs pontos, [A1A2A3], e um segmento de reta, [B1B2], Eps[lp,seg] começa por verificar se os trâs pontos da linha poligonal sao colineares; se forem colineares, a situaçao e equivalente a considerar o calculo de Eps considerando como argumentos dois segmentos de reta. Nãao foi essa, no entanto, a opcçãao computacional tomada. O algoritmo para a determinaçcãao de Eps, no caso em que os argumentos saão uma linha poligonal definida por trâes pontos e um segmento de reta, começca por verificar a interseçcãao do segmento de reta com a curva de equidistaância (ver pagina 38). Caso se verifique a colinearidade dos pontos que formam a linha poligonal esse passo e dispensado, devolvendo a funcão o max Eps[{A1, A2, A3}, B¿].
Para determinar se existe ou nãao interseçcãao do segmento de reta com a curva de equidistaância, a funçcaão começca por determinar as extremidades do arco de parabola, referidos como E1 e E2 na Figura 3.7. Essa tarefa e efetuada por uma funcçaão auxiliar PontosEquiDist.
A determinação dos pontos E1 e E2 e efetuada usando um processo geometrico baseado no calculo de dois vetores. Considerando a linha poligonal [A1A2A3], designemos por u1 e u2 os vetores A2a1 e A2a3 tais que ||u1| &amp;lt;||u2||- Designando por 0 o ángulo formado por estes dois vetores, determinado pela função AngVetores, o ponto E1 e o ponto A2+u1+w 1, onde w 1 e o vetor perpendicular a u1, com norma igual a tg |||u1|, cujo sentido e o que aponta para o vetor u2 (ver Figura 3.14(a)). A funcão OrtogonalCPR devolve o vetor perpendicular ao vetor dado como argumento, com a mesma norma, tal que a rotaçcãao que permite passar do vetor argumento ao vetor devolvido e a rotacçãao no sentido direto. A eventual correção do sentido do vetor w 1 e efetuada pela funcão Orientacao. Designando por u3 o vetor —u2, por u4 o vetor u1 — u2 e por 7 o ângulo formado pelos vetores u3 e u4, E2 = A2 — u3 +w2, onde w2 e o vetor perpendicular a u3, com norma igual a , cujo sentido e o que aponta para o vetor u1 (ver Figura 3.14(b)).
Determinados os pontos E1 e E2 a função avança no sentido de verificar se existe intersecão do segmento de reta, [B1B2], com a curva de equidistância.
Ei.
(b) Construção do ponto E2.
Figura 3.14: Ilustração do calculo de E1 e E2 pela função PontosEquiDist.
O primeiro passo e verificar se os segmentos de reta [B1B2] e [A2Ei] se intersetam. Essa verificação e efetuada pela funçao SegIntersecQ, cujo algoritmo sera referido posteriormente. Havendo interseçao, e calculado um ponto de interseçao usando a funçao LinearSolve do Mathematica e os coeficientes das retas suporte de cada um dos segmentos de reta, calculados pela função Reta. Observe-se que a solução dada e descartada no caso de não pertencer ao segmento de reta [B1B2], situação que pode ocorrer se o sistema resolvido pelo LinearSolve for indeterminado. A verificacão e efetuada pela funçao NoRetangulo. Se a resposta for afirmativa, designando por B3 esse ponto, o algoritmo termina calculando max {Eps[{A1, A2, A3}, B¿], i = 1, 2, 3}, ondee invocada uma instância ja definida da função Eps.
Se nao houver interseção entre os segmentos [B1B2] e [A2E1], avança-se no sentido de verificar se o segmento de reta [B1B2] interseta a curva de equidistâancia na semirreta com origem no ponto E2. A verificacão e efetuada reduzindo o problema a verificação da interseção de dois segmentos de reta. Para isso determina-se o ponto da semirreta cuja distancia ao ponto E2 e igual ao maximo das normas dos vetores -2b1 e -2b2 e procede-se exatamente como na situação anterior.
Se não se verificar alguma das situacões descritas anteriormente, então a função deveria verificar se existe interseçao do segmento de reta com o arco de parabola que forma a curva de equidistância. Efetivamente o que a função faz e determinar se existe intersecao entre a reta suporte do segmento de reta e a parábola. Para tal e usada a funcão do Mathematica Solve para resolver o sistema de equações que definem a parábola e a reta. Para obter a equacao da reta e usada a funçao Reta, ja referida, enquanto que para obter a equaçao
da parabola e usada a funcao Parabola, cujos argumentos são as coordenadas do foco da parabola e a lista dos coeficientes, {a,b,c}, da equação da diretriz da parabola na forma ax + by + c = 0. Naturalmente, o sistema podera ter nenhuma, uma ou duas soluções. Seguidamente e feita a verificacão se as soluçoes pertencem ao segmento de reta [B1B2] e, as que pertencerem, são adicionadas a lista que contem os extremos do segmento, procedendo-se de modo analogo aos anteriores para o calculo do valor de sa ida. Observe-se que na situação anterior podemos estar a adicionar pontos do segmento de reta que nao correspondem a pontos de interseção do segmento de reta com a curva de equidistancia. Nesse caso estamos a acrescentar um ponto que e irrelevante para a determinacao do valor de sa ida, mas esta solucão e computacionalmente mais económica do que fazer a verificação de que o ponto interseta a parabola no arco de parabola definido pelos pontos E1 e E2.
A função usada para verificar se dois segmentos de reta se intersetam e a função SegIntsecQ e o algoritmo foi retirado de [1]. Dois segmentos de reta intersetam-se se e so se se verifica uma das seguintes condições:
1.	cada segmento de reta cruza7 a reta suporte do outro segmento;
2.	uma extremidade de um segmento de reta pertence ao outro segmento de reta.
Para verificar a primeira condição foi definida a funcão Ext2D que calcula o analogo ao produto externo de dois vetores em R2.
7i.e., ha pontos do segmento de reta nos dois semiplanos abertos definidos pela reta suporte.
Anexo - Funções do Mathematiça
Funçoes usadas na representação gráfica
LegendaEps...
LegendaEps[LetraObj1_?StringQ,LetraObj2_?StringQ,
EpsObj1Obj2_?NumericQ,Posicao:{_?NumericQ,_?NumericQ}]:=
Text[Style[RawBoxes@RowBox[{SubscriptBox["\[CurlyEpsilon]",
RowBox[{LetraObj1,",",LetraObj2}]],"=",
ToBoxes@EpsObj1Obj2}],FontSize-&gt;12],Posicao,Right]
LegendaEps[LetraObj1_?StringQ,nptsObj1_Integer?Positive,
LetraObj2_?StringQ,nptsObj2_Integer?Positive,
EpsObj1Obj2_?NumericQ,Posicao:{_?NumericQ,_?NumericQ}]:=
Text[Style[RawBoxes@RowBox[{SubscriptBox["\[CurlyEpsilon]",RowBox[{
Which[nptsObj1==1,LetraObj1,nptsObj1==2,
RowBox[{"[",SubscriptBox[LetraObj1,1],SubscriptBox[LetraObj1,2],
"]"}],nptsObj1==3,RowBox[{"[",SubscriptBox[LetraObj1,1],
SubscriptBox[LetraObj1,2],SubscriptBox[LetraObj1,3],"]"}],True,
RowBox[{"[",SubscriptBox[LetraObj1,1],"\[CenterEllipsis]",
SubscriptBox[LetraObj1,nptsObj1],"]"}]],",",
Which[nptsObj2==1,LetraObj2,nptsObj2==2,
RowBox[{"[",SubscriptBox[LetraObj2,1],SubscriptBox[LetraObj2,2],"]"}], nptsObj2==3,RowBox[{"[",SubscriptBox[LetraObj2,1],
SubscriptBox[LetraObj2,2],SubscriptBox[LetraObj2,3],"]"}],True,
RowBox[{"[",SubscriptBox[LetraObj2,1],
"\[CenterEllipsis]",SubscriptBox[LetraObj2,nptsObj2],"]"}]]}]],
"=",ToBoxes@EpsObj1Obj2}],FontSize-&gt;12],Posicao,Right]
...LegendaEps
LegendaEps::usage="LegendaEps é uma função que permite colocar na figura
o valor do menor \[CurlyEpsilon] para o qual a vizinhança-\[CurlyEpsilon]
de um objeto contem o outro."
LegendaPontos...
LegendaPontos[letra_?StringQ,pt:{_?NumericQ,_?NumericQ}, offset:{-1.2,0},dir_:{1,0}]:=
Text[RawBoxes@TemplateBox[ToBoxes/@pt,"CoordPt",
DisplayFunction:&gt;(RowBox[{letra,"=","(",RowBox [{#1,",",#2}],")"}]&amp;amp;)],pt,offset,dir]
LegendaPontos[box_SubscriptBox,pt:{_?NumericQ,_?NumericQ}, offset:{-1.2,0},dir:{1,0}]:=
Text[RawBoxes@TemplateBox[ToBoxes/@pt,"CoordPt",DisplayFunction:&gt; (RowBox[{box,"=","(",RowBox[{#1,",",#2}],")"}]&amp;amp;)],pt,offset,dir] LegendaPontos[letra_?StringQ,lp:{{_?NumericQ,_?NumericQ}..}]:=
Module[{npts=Length@lp},Table[LegendaPontos [SubscriptBox[letra,pt],lp[[pt]]],{pt,1,npts}]] LegendaPontos[letra_?StringQ,lp:{{_?NumericQ,_?NumericQ}..},offset: {{_?NumericQ,_?NumericQ}..}]:=
Module[{npts=Length@lp},If[Length@offset==npts,
Table[LegendaPontos[SubscriptBox[letra,pt],lp[[pt]], offset[[pt]]],{pt,1,npts}],Message[LegendaPontos::offset]]] LegendaPontos[letra_?StringQ,lp:{{_?NumericQ,_?NumericQ}..}, offset:{{_?NumericQ,_?NumericQ}..},dir:{{_?NumericQ,_?NumericQ}..}]:= Module[{npts=Length@lp},
Which[Length@offset!=npts,Message[LegendaPontos::offset],
Length@dir!=npts,Message[Legenda::dir],True,
Table[LegendaPontos[SubscriptBox[letra,pt],lp[[pt]],offset[[pt]],
LegendaPontos::usage="LegendaPontos e uma função que permite colocar a legenda nos pontos de uma lista,escolhendo símbolos para os representar.
...LegendaPontos
LegendaPontos::offset="A dimensão da lista offset deve ser igual ao número de pontos da linha poligonal.";
LegendaPontos::dir="A dimensao da lista dir deve ser igual ao número de pontos da linha poligonal.";
NumPtsObj
NumPtsObj[{_?NumericQ,_?NumericQ}]=1;
NumPtsObj[Obj:{{_?NumericQ,_?NumericQ}..}]:=Length@Obj;
Representa
Representa[pt:{_?NumericQ,_?NumericQ}]:=Point[pt]; Representa[lp:{{_?NumericQ,_?NumericQ}..}]:={Line[lp],Representa/@lp}; Representa::usage="Funcao que devolve uma lista de primitivas gráficas que permitem representar o ponto ou os pontos cujas coordenadas são dadas como argumentos,unidos sequencialmente por segmentos de reta."
Retangulo Retangulo[{pt1:{_?NumericQ,_?NumericQ},pt2:{_?NumericQ,_?NumericQ}}, raio_?NumericQ]:=
Polygon[{pt1+#,pt2+#,pt2-#,pt1-#}]&amp;amp;[raioNormalize@Cross[pt1-pt2]] Retangulo::usage="Retangulo ú uma funçao que determina os vúrtices de um retângulo quando são dados como argumentos os dois pontos múdios de dois lados opostos e o semi-comprimento desses lados,devolvendo a primitiva graúfica que permite representar esse retâangulo."
Salsicha Salsicha[pt:{_?NumericQ,_?NumericQ},raio_]:=Disk[pt,raio] Salsicha[pts:{{_?NumericQ,_?NumericQ}..},raio_]:=
Sequence@@Join[Retangulo[#,raio]&amp;amp;/@Partition[pts,2,1],Disk[#,raio]&amp;amp;/@pts] Salsicha::usage="Salsicha e uma função que devolve a sequência de primitivas gráficas que permitem representar,à custa de discos e retangulos,a vizinhança-\[CurlyEpsilon]de um ponto,um segmento de reta ou uma linha poligonal."
Funcão Eps
Eps...
Eps[pt1:{_?NumericQ,_?NumericQ},pt2:{_?NumericQ,_?NumericQ}]:= Norm[pt1-pt2]
Eps[pt:{_?NumericQ,_?NumericQ},lp:{{_?NumericQ,_?NumericQ}..}]:=
Eps[pt,#]&amp;amp;/@lp//Max
Eps[seg:{{_?NumericQ,_?NumericQ},{_?NumericQ,_?NumericQ}}, pt:{_?NumericQ,_?NumericQ}]:=
Module[{v1=seg[[2]]-seg[[1]],v2=pt-seg[[1]],v1norma2,pinterno}, v1norma2=(Norm@v1)"2;pinterno=Dot[v1,v2];Which[pinterno&lt;=0, Norm@v2,pinterno&gt;v1norma2,Norm@(pt-seg[[2]]),True,
Norm@(v2-pinterno/v1norma2v1)]]
Eps[lp:{{_?NumericQ,_?NumericQ}..},pt:{_?NumericQ,_?NumericQ}]:=
Eps[#,pt]&amp;amp;/@Partition[lp,2,1]//Min
Eps[seg:{{_?NumericQ,_?NumericQ},{_?NumericQ,_?NumericQ}}, lp:{{_?NumericQ,_?NumericQ}..}]:=
Eps[seg,#]&amp;amp;/@lp//Max
Eps[lp:{Repeated[{_?NumericQ,_?NumericQ},{3}]}, seg:{{_?NumericQ,_?NumericQ},{_?NumericQ,_?NumericQ}}]:=
Module[{pts,ptMeio,ptsExt,ptsEqui,reta,intRetaParabola,Xx,Yy},
If[Det[(#1-#2)&amp;amp;@@@Partition[lp,2,1]]==0,pts=seg, ptMeio=lp[[2]];ptsExt=Sort[Drop[lp,{2}], Norm[#1-ptMeio]&lt;Norm[#2-ptMeio]&amp;amp;];ptsEqui=PontosEquiDist[lp];
Which[SegIntersecQ[seg,{ptMeio,First@ptsEqui}], pts=Union[seg,Select[{LinearSolve@@{{Most@#1,Most@#2}, -{Last@#1,Last@#2}}&amp;amp;[Reta@@seg,Reta[ptMeio,First@ptsEqui]]}, NoRetanguloQ[#,seg]&amp;amp;]],
SegIntersecQ[seg,{Last@ptsEqui,Last@ptsEqui+Eps[Last@ptsEqui,seg]
Normalize[Last@ptsEqui-.5Plus@@ptsExt]}], pts=Union[seg,Select[{LinearSolve @@{{Most@#1,Most@#2}, -{Last@#1,Last@#2}}&amp;amp;[Reta@@seg,Reta[Last@ptsEqui,Last@ptsEqui+ Eps[Last@ptsEqui,seg]Normalize[Last@ptsEqui-.5Plus@@ptsExt]]]},
...Eps
NoRetanguloQ[#,seg]&amp;amp;]],True,reta=Plus@@(Reta@@seg{Xx,Yy,1}); intRetaParabola=Solve[{Parabola[First@ptsExt,Reta [ptMeio,Last@ptsExt],Xx,Yy]==reta,reta==0},{Xx,Yy},Reals];
If[intRetaParabola=={},pts=seg, pts=Union[seg,Select[{Xx,Yy}/.intRetaParabola,NoRetanguloQ[#,seg]&amp;amp;]]] ]];Max@(Eps[lp,#]&amp;amp;/@pts)]
Eps::usage="Eps[obj1,obj2] devolve o menor \[CurlyEpsilon] tal que a vizinhança-\[CurlyEpsilon] do objl contém o obj2. Os argumentos,obj1 e obj2, são pontos,segmentos de reta ou linhas poligonais,identificados pelas coordenadas dos pontos que os caraterizam...Função em construçao!";
vector2:{_?NumericQ,_?NumericQ}]:=
ArcCos[Dot[Normalize@vector1,Normalize@vector2]]
AngVetores::usage="Devolve o valor do angulo,em radianos,formado pelos dois vetores dados como argumentos.";
Ext2D
Ext2D[seg1_,seg2_]:=Det[{seg1,seg2}]
Ext2D::usage="Ext2D[seg1,seg2] é uma função que determina o analogo ao
produto externo de dois vetores em R"2.";
MaxPosicao
MaxPosicao[list_]:=Position[list,Max@list]//Min
MaxPosicao::usage="MaxPosicao[lista] devolve a menor posijão em que aparece o máximo da lista dada como argumento.";
MinPosicao
MinPosicao[list_]:=Position[list,Min@list]//Min
MinPosicao::usage="MinPosicao[lista] devolve a menor posição em que aparece o ménimo da lista dada como argumento.";
NoRetanguloQ
NoRetanguloQ[ponto_,vertices_]:= And@@MapThread[(#2&lt;=#1&lt;=#3)&amp;amp;,Prepend[Transpose@ (Sort/@Transpose@vertices),ponto]];
NoRetanguloQ::usage="NoRetangulo é uma funcao que verifica se o ponto dado como primeiro argumento pertence ao retângulo com lados paralelos aos eixos coordenados definido por dois vértices opostos,dados como segundo argumento.";
Orientacao Orientacao[vector1:{_?NumericQ,_?NumericQ}, vector2:{_?NumericQ,_?NumericQ}]:=
Module[{pext=Ext2D[vector1,vector2]},If[pext==0,0,pext/Abs@pext]] Orientacao::usage="Devolve 0 se os vetores forem colineares. Caso contrário, devolve 1 se a rotacão que permite passar do primeiro vetor dado como argumento para o segundo e efetuada no sentido direto e devolve -1 no outro caso.";
OrtogonalCPR
OrtogonalCPR[vector:{_?NumericQ,_?NumericQ}]:={-#2,#1}&amp;amp;@@vector
OrtogonalCPR::usage="Devolve o vetor ortogonal ao vetor dado como argumento,
com a mesma norma e orientaçao positiva.";
Parabola
Parabola[foco:{_?NumericQ,_?NumericQ},
diretriz:{_?NumericQ,_?NumericQ,_?NumericQ},x_,y_]:=
(Plus@@(diretriz{x,y,1})~2)/Plus@@((Most@diretriz)~2)-Plus@@
(Plus@@@Transpose@{{x,y},-foco}~2)
Parabola::usage="Parabola é uma função que determina a equação de uma parébola,dados o foco e a diretriz como argumentos.";
PontosEquiDist
PontosEquiDist[lp:{Repeated[{_?NumericQ,_?NumericQ},{3}]}]:=
Module[{vetores1,vetores2},vetores1=Sort[{-1,1}Vetor@@@
Partition[lp,2,1],Norm@#1&lt;Norm@#2&amp;amp;];vetores2={#1-#2,-#2}&amp;amp;@@vetores1;
If[Det[vetores1]==0,O, {lp[[2]]+(First@vetores1)+OrtogonalCPR@vetores1[[1]] (Tan[1/2AngVetores @@ vetores1]Orientacao@@vetores1), lp[[2]]-(Last@vetores2)+OrtogonalCPR@(Normalize[Last@vetores2]) Norm[First@vetores2]/(2Sin[AngVetores@@vetores2]Orientacao@@ vetoresl)}]]
PontosEquiDist::usage="Devolve uma lista com os extremos do arco de parabola
envolvido na definição da região de equidistância.";
Reta
Reta[pt1:{_?NumericQ,_?NumericQ},pt2:{_?NumericQ,_?NumericQ}]:=
If[pt1==pt2,Message[Reta::SamePoint],Flatten@ {Reverse@(Plus@@@Transpose@{pt1,-pt2}){1,-1},Det@{pt1,pt2}}]
Reta::usage="Devolve uma lista da forma {a,b,c} onde os elementos da lista são tais que a equação ax+by+c=0 e uma equaçao da reta definida pelas coordenadas dos pontos dados como argumentos.";
Reta::SamePoint="Os pontos dados como argumentos tâm de ser diferentes.";
SegIntersecQ
SegIntersecQ[seg1_,seg2_]:=
Block[{p11=First@seg1,p12=Last@seg1,p21=First@seg2, p22=Last@seg2,v1=Vetor@@seg1,v2=Vetor@@seg2,x11,x12,x21,x22}, x11=Ext2D[v1,p21-p11];x12=Ext2D[v1,p22-p11];x21=Ext2D[v2,p11-p21]; x22=Ext2D[v2,p12-p21];
Which[x11x12&lt;0&amp;amp;&amp;amp;x21x22&lt;0,True,x11==0&amp;amp;&amp;amp;NoRetanguloQ[p21,seg1],True, x12==0&amp;amp;&amp;amp;NoRetanguloQ[p22,seg1],True,x21==0&amp;amp;&amp;amp;NoRetanguloQ[p11,seg2], True,x22==0&amp;amp;&amp;amp;NoRetanguloQ[p12,seg2],True,True,False]]
SegIntersecQ::usage="SegIntersecQ[seg1,seg2] é uma função que devolve True caso os dois segmentos dados como argumentos se intersetem e False caso contraério.";
Vetor
Vetor[vertice1_List,vertice2_List]:=vertice2-vertice1;
Vetor::usage="Vetor e uma função que determina as coordenadas de um vetor definido por dois pontos cujas coordenadas sao dadas como argumentos.";
Bibliografia
[1]	Cormen, T. H., Leiserson, C. E., Rivest, R. L. e Stein, C., Introduction to algorithms, The MIT Press, 2009.
[2]	Lima, E., Espacos métricos, Projecto Euclides, IMPA, 1992.
[3]	Jesorsky, O., Kirchberg K. J. e Frischholz, R. W., Robust face detection using the Hausdorff distance, Bigun, J. e Smeraldi, F. (Eds.), Proceedings of Third International Conference on Audio- and Video- Based Biometric Person Authentication, Halmstad, Sweden, 2001.
http://www.bioid.com
[4]	Pérez, J., Apuntes de Geometria de convexos, Universidad de Granada, 2008. http://www.ugr.es/~jperez/docencia/GeomConvexos
[5]	Rodrigues, J.F., Obstacle problems in mathematical physics, North-Holland Publishing Co., 1987.
[6]	Teixeira, H., Estudo de propriedades de curvas rectificáveis, Tese de mestrado, Universidade do Minho, 2011.
[7]	Toussaint, G., Hausdorff distance between convex polygons, course CS 507 Computational Geometry, McGill University, 1998.
http://cgm.cs.mcgill.ca/~godfried/teaching/cg-projects/98/normand/main.html
[8]	Tricot, C., Curves and fractal dimension, Springer-Verlag, 1993.</field>
	</doc>
</add>