<?xml version="1.0" encoding="utf-8"?>
<add>
	<doc>
		<field name="docid">BR-TU.07710</field>
		<field name="filename">12435_Ivan_Herrera_Tese_de_Mestrado_Jun_2007.pdf</field>
		<field name="filetype">PDF</field>
		<field name="text">
 

IVAN RAUL HERRERA SOSA 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

 
 

SISTEMAS MULTIAGENTES PARA CONTROLE INTELIGENTE 
DA CALDEIRA DE RECUPERAÇÃO 

 
 
 
 
 
 
 
Tese apresentada à Escola 
Politécnica da Universidade de São 
Paulo para obtenção do Título de 
Mestre em Engenharia. 
 
 
 
 
 
 
 
 
 
 
 

São Paulo 
2007 



 

IVAN RAUL HERRERA SOSA 
 

 

 

 

 

 

 

 

 

 

 

 

 
SISTEMAS MULTIAGENTES PARA CONTROLE INTELIGENTE 

DA CALDEIRA DE RECUPERAÇÃO 
 
 
 
 

 
 
 
Tese apresentada à Escola 
Politécnica da Universidade de São 
Paulo para obtenção do Título de 
Mestre em Engenharia. 
 
 
Área de Concentração. 
Engenharia Química. 
 
Orientador: Prof.  
Song Won Park. 
 

 
 
 

São Paulo 
2007 



 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

FICHA CATALOGRÁFICA 
 
 
 
 
 
 
 
 
 

 
 
 
 

 

 
 
Herrera Sosa, Ivan Raul 

Sistemas multiagentes para controle inteligente da caldeira 
de recuperação / I.R. Herrera Sosa. -- São Paulo, 2007. 

176 p. 
 

Dissertação (Mestrado) - Escola Politécnica da Universidade  
de São Paulo. Departamento de Engenharia Química. 
 

1.Controle (Teoria de sistema e controle) 2.Sistemas multi- 
agentes 3.Agentes inteligentes 4.Caldeiras de recuperação 
Química (Simulação) 5.Processo Kraft I.Universidade de São 
Paulo. Escola Politécnica. Departamento de Engenharia Química 
II.t. 

 



 

 

 

DEDICATÓRIA 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

Dedico este trabalho à minha esposa, 

aos meus pais e aos meus sogros. 



 

 

 

AGRADECIMENTOS 

 

 
Ao professor Song, pela orientação e pelo constante estímulo transmitido 

durante todo o trabalho. 

 

Aos meus pais e as minhas irmãs pelo incentivo, confiança e amor.  

 

Aos meus sogros pela acolhida e ajuda na minha adaptação no Brasil. 

 

À minha esposa pela dedicação e compreensão durante a minha jornada, e a 

todos que colaboraram direta ou indiretamente na elaboração deste trabalho. 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 



 

RESUMO 
 

Engenheiros têm introduzido um melhor suporte para procedimentos de 

monitoramento de condições complexas através da aplicação de sistemas 

descentralizados inteligentes usando uma variedade de técnicas de inteligência 

artificial. Agora é largamente reconhecido que estes problemas decorrentes da 

complexidade funcional do monitoramento de condições podem ser resolvidos 

com arquiteturas que contenham muitos módulos distribuídos e inteligentes, que 

interajam dinamicamente, os quais são chamados de agentes inteligentes. A 

tecnologia baseada em agentes tem gerado muita agitação nos últimos anos por 

causa da promessa de ser um novo paradigma na hora de definir os conceitos 

para modelar e implementar sistemas de controle. O objetivo do presente estudo 

é implantar esta tecnologia no controle de uma caldeira de recuperação com a 

finalidade de gerenciar e integrar produção, qualidade e segurança no processo. 

A caldeira de recuperação tem dois objetivos bem definidos, cada um com suas 

restrições operacionais: (1) geração de vapor vivo a ser utilizado no processo, e, 

(2) redução de reagentes inorgânicos para recuperar sulfeto e carbonato de 

sódio, necessários no ciclo do processo de fabricação de celulose. Cada um 

destes objetivos é um sistema com funções independentes dentro da caldeira, 

mas que, no entanto tem seus desempenhos interligados entre si através das 

variáveis comuns existentes no processo. Esta é exatamente a definição de um 

sistema agente, ou melhor, de um Sistema Multi-Agente (SMA), no qual não 

existe uma otimização e sim a busca de uma solução possível. O modelo 

dinâmico da Caldeira foi simulado em Matlab™ Simulink™ baseado no modelo 

matemático da caldeira de recuperação de licor negro B&amp;amp;W (Babcock&amp;amp;Wilcox). 

O SMA foi desenvolvido utilizando a linguagem de programação JAVA e a 

plataforma de agentes JADE.  

 

Palavras-chave: Controle (Teoria de sistema e controle), Sistemas Multi-

Agentes, Agentes Inteligentes, Caldeiras de recuperação Química, Processo 

Kraft, Simulink, JADE. 



 

ABSTRACT 
 

Engineers have been introducing better support for procedures of monitoring 

complex conditions through the application of intelligent decentralized systems, 

implementing a variety of artificial intelligent techniques. Nowadays it is vastly 

known that these problems that are consequence of the functional complexity of 

monitoring conditioning can be solved trough architectures, built by many 

intelligent distributed modules, which interact dynamically, known as intelligent 

agents. Technology based on agents have been creating excitement over the 

last years because of its promise of being a new paradigm that can be used to 

define modeling and implementing concepts for control systems. The goal of this 

thesis is to implement this new technology on controlling a recovery boiler, 

aiming to manage and integrate production, quality and security to the process. 

The operation of the recovery boiler has two well defined objectives, each one 

with its operational constraints: (1) steam production, an important asset in the 

pulp and paper process, and, (2) reduction of inorganic reagents to recover 

sulfate and sodium carbonates, the necessary chemicals in the Kraft pulp 

production. Each one of these functions, is an independent system inside the 

recovery boiler, however they have their performances connected to each other 

by common variables present in the process. This is exactly the definition of an 

agent system, in other words, a definition of a Multi-Agent System (MAS), for 

which there is not an optimization, but the search for the best possible outcome. 

The recovery boiler dynamic model was simulated using Matlab™ Simulink™ 

based on the mathematic model of B&amp;amp;W (Babcock&amp;amp;Wilcox) recovery boiler of 

black liquor. The MAS was implemented using JAVA™ programming language 

and JADE™ agent platform.  

 

Keywords: Process Control, Multi-Agent Systems, Intelligent Agents, Kraft 

Recovery Boilers, Simulink, JADE. 

 

 



 

LISTA DE ILUSTRAÇÕES 

 
Figura 1: Formato de uma mensagem FIPA-ACL 46 
Figura 2: Unidade de recuperação e de Utilidades do processo “Kraft” de produção de celulose. 51 
Figura 3: Representação esquemática de uma caldeira de Recuperação (ADAMS et al., 1997). 54 
Figura 4: Bico ejetor de licor negro na caldeira de recuperação (ADAMS et al., 1997) 

(Fotos Tacla, 2001). 56 
Figura 5: Etapas na combustão do licor negro. (HUPA et al., 1987) 58 
Figura 6: Leito carbonizado na parte inferior da caldeira. 59 
Figura 7: Entradas de ar na caldeira.. 61 
Figura 8: Parte superior da Caldeira. 62 
Figura 9: Precipitadores Eletrostáticos. 64 
Figura 10: Efeito do ar da parte inferior da fornalha sobre a eficiência de redução 

(LEFEBVRE; SANTYR, 1989). 68 
Figura 11: Efeito da temperatura do leito sobre a eficiência de redução e emissões 

(LEFEBVRE; SANTYR, 1989). 70 
Figura 12: Diagrama do processo utilizado na simulação 73 
Figura 13: Reações que ocorrem no Leito 79 
Figura 14: Diagrama para calcular a eficiência de redução na caldeira. Modelo de Bauer 

e Dorland 81 
Figura 15: Representação o fluxo do sistema água-vapor dentro dos trocadores de calor 

incluindo o balão. 86 
Figura 16: Sistema de produção de vapor na parte alta da caldeira. 87 
Figura 17: Sistema de controle da pressão no balão 92 
Figura 18: Sistemas de controle de emissões da caldeira. 93 
Figura 19: Modelo dinâmico da caldeira em simulink. 96 
Figura 20: Graphical User Interface (GUI) 99 
Figura 21: Arquitetura de comunicação entre o SMA em JADE e o modelo dinâmico da caldeira 

em Simulink. 102 
Figura 22: Estado estacionário (Primeiro grupo de variáveis) 106 
Figura 23: Estado estacionário (Segundo grupo de variáveis) 106 
Figura 24: Estado estacionário (Terceiro grupo de variáveis) 107 
Figura 25: Estado estacionário (Quarto grupo de variáveis) 107 
Figura 26: Resposta do modelo a perturbações na entrada de licor negro. 109 
Figura 27: Resposta do modelo a perturbações na fração de sólidos secos. 110 
Figura 28: Resposta do modelo a perturbações na temperatura de entrada do licor negro. 111 
Figura 29: Resposta do modelo a perturbações na temperatura do ar que entra na caldeira. 112 
Figura 30: Protocolo de comunicação “FIPA-Contract-Net-Interaction-Protocol” 114 
Figura 31: Exemplo de mensagem do tipo CFP enviada pelo agente “ReduçãoAgente” ao 

“VaporAgente”. 116 
Figura 32: Exemplo de mensagem do tipo PROPOSE enviada pelo agente “VaporAgente” ao 

agente “ReduçãoAgente”. 118 
Figura 33: Exemplo de mensagem do tipo ACCEPT_PROPOSAL enviada pelo agente 

“ReduçãoAgente” ao “VaporAgente”. 120 
Figura 34: Exemplo de mensagem do tipo PROPOSE enviada pelo agente “VaporAgente” ao 

agente “ReduçãoAgente”. 122 
Figura 35: Troca de mensagens registradas pelo Agente “Sniffer” 123 
Figura 36: Comandos da ferramenta TCP Toolbox para abrir um canal de comunicação com a 

plataforma de agentes. 126 



 

Figura 37: Mensagem de REQUEST re-encaminhada pelo agente “TCP4000” 127 
Figura 38: Resposta das variáveis controladas (%Redução e Produção de Vapor) 129 
Figura 39: Sequência de mensagens entre todos os agentes (Agentes de controle e agentes de 

comunicação) 130 
Figura 40: Resposta do sistema no momento da entrada dos agentes. O agentes redução no tempo 

1000 e o agente vapor no tempo 1100. 132 
Figura 41: Sistema Multi-Agente atuando em caso de perturbação da fração de sólidos na 

caldeira. 133 
Figura 42: Troca de mensagens entre agentes no controle da caldeira com perturbações na fração 

de sólidos. 134 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 



 

 

LISTA DE TABELAS 

 
Tabela 1 - Condições iniciais para validar o estado estacionário.   88 
Tabela 2 - Variáveis do processo em estado estacionário    89 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 



 

 

LISTA DE ABREVIATURAS E SIGLAS 

 
ACC  Agent Communication Channel 

ACL  Agent Communication Language 

AMS  Agent Management System 

B&amp;amp;W  Babcock &amp;amp; Wilcox 

CFD  Computational Fluid Dynamics 

CFP  Call for proposal 

DF  Directory Facilitator 

DPS  Distributed Problem Solving 

FIPA  Foundation for Intelligent Physical Agents 

GUI  Graphical User Interface 

GUID   Global Unique Identifier 

IEEE  Institute of Electrical and Electronics Engineers 

JADE  JAVA Agent DEvelopment  

KQML  Knowledge Query and Manipulation Language 

MAS  Multi Agent Systems 

PAI  Parallel Artificial Intelligence 

PID  proportional-integral-derivative controller 

RMI  Remote Method Invocation 

SMA  Sistemas Multi-Agentes  

TCP/IP         Transmission Control Protocol 
 

 

 

 

 

 

 

 

 



 

 

LISTA DE SÍMBOLOS 

 

 
LETRAS GREGAS 

 

?L Tensão superficial, N/m. 
?L Viscosidade, Pa-s. 
?HP Entalpia de pirólise, J/kg. 
?L Densidade, kg/m3. 

 

 

SUBSCRITO 

H   Hidrogênio 
SNa2   Sulfato de sódio 

O   Oxigênio 
C   Carbono 
Na   Sódio 
S   Enxofre 

32CONa  Carbonato de sódio 
 
SOBRESCRITO 

bl   Sólidos do licor negro 

blmt   Sólidos do licor negro provenientes do Tanque de Mistura 

blpr   Sólidos do licor negro provenientes do Tanque de precipitador 

cb   Leito 

cm   Carbono reativo 

cs   Superfície do Leito 

Fl   Leito no chão. 

h   Aquecedor do licor. 

mt   Tanque de mistura. 

pe   Fração do licor preto arrastado na aspersão 

sm   smelt 

spc   Fração do licor preto que não foi arrastado na aspersão. 



 

w   Leito nas paredes. 

1 Zona primária 

2 Zona secundária 

3 Zona terciária 

4 Superaquecedor 

5 Boiler 

6 Economizador 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 



 

 

SUMÁRIO 
 
1 INTRODUÇÃO         15  
1.1 Objetivo Geral da Tese        17 
1.2 Organização do Texto        17 
 
2 REVISÃO BIBLIOGRÁFICA        19 
2.1 Teoria de Agentes e Sistemas Multi-agentes     19 
2.1.1 Histórico          19 
2.1.2 Conceito de Agentes        20 
2.2 Sistemas Multi-Agentes        23 
2.3 Comunicação entre Agentes       25 
2.3.1 Interação: Linguagens de Comunicação entre Agentes    26 
2.4 Coordenação entre Agentes       27 
2.5 Desenvolvendo Agentes em um Sistema Multi-Agente (SMA)   28 
2.5.1 Fundação de Agentes Físicos Inteligentes FIPA.    28 
2.5.1.1  FIPA-ACL         29 
2.5.1.2 Protocolos de Interação FIPA       30 
2.6 Aplicações em Sistemas Multi-agentes      31 
 
3 CALDEIRAS DE RECUPERAÇÃO QUÍMICA      33 
3.1 Histórico do Processo Kraft        33 
3.2 Unidade de Recuperação e Utilidades      34 
3.3 Descrição da Caldeira        36 
3.4 A Influência das Variáveis Operacionais no Desempenho da Caldeira  49 
3.4.1 Produção de Vapor        49 
3.4.2 Eficiência de Redução        51 
 
4 MODELAGEM DINÂMICA DA CALDEIRA DE RECUPERAÇÃO   55 
4.1 Histórico           55 
4.2 Modelo Implementado        56 
4.2.1 Licor Negro         58 
4.2.2 Aquecedor do Licor        58 
4.2.3 Aspersão e Injetor de Licor       59 
4.2.4 Leito (Paredes e Chão)        62 
4.2.5 Zona Primária e Secundária       66 
4.2.6 Zona Terciária         68 
4.2.7 Superaquecedores, Convector, Economizadores e Balão    69 
4.2.8 Tanque de Mistura        73 
4.2.9 Precipitador         74 
4.2.10  Sistema de Controle Tradicional       75 
 
5 DESENVOLVIMENTO DO SISTEMA MULTI-AGENTE    78 
5.1 Modelo Dinâmico da Caldeira de Recuperação em Simulink™   78 
5.2 Sistema Multi-Agente na Plataforma JAVA™ Agent DEvelopment JADE™  81 
5.2.1 JADE          81 
5.2.2 Características do JADE        82 
5.2.3 O Agente em JADE        85 
5.3 Comunicação entre o Modelo Dinâmico em Simulink e o SMA em JADE  85 
 
 
 
6 RESULTADOS E DISCUSSÕES       87 



 

6.1 Validação do Simulador da Caldeira em Simulink™     87 
6.1.1 Validação do Estado Estacionário       87 
6.1.2 Validação da Resposta do Modelo à Perturbações    92 
6.1.2.1 Resposta a Perturbações ao Aumento na Entrada de Licor Negro  92 
6.1.2.2 Resposta a Perturbações na Fração de Sólidos Secos no Licor   93 
6.1.2.3 Resposta ao aumento na temperatura do licor negro    94 
6.1.2.4 Resposta ao Aumento na Temperatura do Ar Primário, Secundário e Terciário 95 
6.2 Tipos de Agentes Implementados no SMA      96 
6.2.1 Agente de Controle        97 
6.2.1.1 Mensagens trocadas no processo de negociação    99 
6.2.1.2 Comportamento lógico dos agentes      107 
6.2.2 Agente de Comunicação        109 
6.2.2.1 Comunicação Cliente-Servidor       109 
6.3 Resultados da Caldeira Controlada pelo Sistema Multi-Agente   112 
6.3.1 Estado Estacionário controlado       112 
6.3.2 Perturbações na entrada de Sólidos Secos na Caldeira    117 
 
7 CONCLUSÕES E SUGESTÕES DE ESTUDO     119 
7.1 Conclusões          119 
7.2 Sugestões para trabalhos futuros       121 
 
Referências Bibliográficas        123 
Referências Consultadas        127 
APÊNDICE A          130 
APÊNDICE B          161 
APÊNDICE C          164 
APÊNDICE D          168 
 
 
 

 

 

 

 

 

 

 

 

 

 

 

 



 15

 

1 INTRODUÇÃO 
 

 

Caldeiras de recuperação constituem-se, tanto do ponto de vista do processo 

quanto do ponto de vista da segurança, em equipamento-chave dentro de uma 

indústria de celulose. A indisponibilidade da caldeira de recuperação ocasiona a 

parada geral da fábrica, com prejuízos econômicos de grande monta. Do ponto 

de vista da segurança, tanto patrimonial quanto das pessoas, a caldeira de 

recuperação é um equipamento que demanda cuidados acima da média dos 

equipamentos convencionais.  

 

Variações no processo causam instabilidade na operação da caldeira de 

recuperação. Esta instabilidade nos parâmetros do processo e o deficiente 

sistema de controle podem limitar a flexibilidade do operador para controlar 

situações perigosas. Quando existem estas flutuações nos parâmetros do 

processo, os operadores fazem ajustes para operar sob o modo mais 

conservador, diminuindo de forma drástica a eficiência da caldeira. Conseguindo 

estabilizar a operação da caldeira, torna-se viável controlar as variáveis do 

processo de forma rigorosa e trabalhar perto dos níveis ótimos em qualquer 

circunstância.  Atualmente, para chegar à estabilidade da caldeira é preciso a 

intervenção dos operadores. Esta prática é comum porque os sistemas de 

controle aplicados na caldeira foram projetados para controlar uma variável 

específica do processo sem pensar no efeito colateral que este controle pode 

causar na estabilidade global da caldeira. Pensando nesta situação surge a 

necessidade de um controle que visualize a caldeira como um todo para 

minimizar a dedicação do controlador global chamado “operador”. 

 

Para chegar a este controle inteligente é preciso analisar os diferentes 

processos que se sucedem dentro da caldeira e conhecer a relação que estes 

processos têm entre si. Analisando a caldeira de recuperação nota-se que 



 16

existem dois processos bem diferenciados, tanto do ponto de vista químico 

como físico, a geração de vapor e a redução de inorgânicos. Estes dois 

processos autônomos que interagem continuamente de foram indireta precisam 

de uma lógica de controle que os relacione para chegar ao melhor desempenho 

considerando como principal objetivo a estabilidade e segurança na caldeira e 

não a produção individual de cada um.  Esta é exatamente a definição de um 

Sistema Multi-Agente (SMA). 
 

Os sistemas multi-agentes tem sido um tópico de pesquisa na informática por 

muito tempo. Embora haja diversas interpretações do conceito de SMA, no 

presente trabalho SMA é considerado como um tipo de sistema distribuído 

formado por módulos de software, ou seja, processos autônomos chamados 

agentes, coordenados e orientados a objetos.  

 

A aplicação do SMA na automação e controle industrial tem sido estudada 

previamente, principalmente, no contexto da manufatura discreta. Em muitos 

casos a motivação destas pesquisas foi a possibilidade de se realçar, 

particularmente, a adaptação e também o gerenciamento da complexidade na 

automação. Diversos resultados de aplicações SMA ou de sistemas similares de 

controle na manufatura discreta têm sido publicados por Marik et al. (2002b), 

Deen (2003), Bussmann et al. (2004). Também foram publicadas pesquisas 

voltadas para sistemas de automação em processos contínuos (CHOKSHI; 

McFARLANE, 2002). 

 

O esforço da pesquisa descrita nesta tese foi motivado por três fatores. Em 

primeiro lugar, o crescente desenvolvimento de novas tecnologias usadas para 

projetar e executar sistemas de controle de processos Em segundo lugar, 

alcançar estabilidade de produção e segurança operacional na caldeira de 

recuperação. Finalmente, o crescimento das pesquisas em Sistemas Multi-

Agentes. 



 17

 
1.1 Objetivo Geral da Tese 
 

O objetivo desta tese é propor um sistema inteligente distribuído, destinado ao 

monitoramento da produção, qualidade e o controle de uma caldeira de 

recuperação, permitindo que cada um dos agentes que compõem esta 

sociedade atue de forma eficiente obtendo como resultado final uma alta 

recuperação de compostos inorgânicos, grande eficiência térmica e uma alta 

produção de vapor vivo.   

 

Para alcançar este objetivo serão necessários diversos objetivos específicos: 

1. Desenvolver o modelo dinâmico da caldeira de recuperação onde será 

testado o SMA. 

2. Definir a arquitetura do Sistema Multi-Agente. 

3. Desenhar o Sistema Multi-Agente definindo o tipo de mensagem, 

protocolos de iteração e comportamento de cada um dos agentes. 

4. Desenvolver um protótipo funcional do Sistema Multi-Agente baseado nas 

especificações obtidas na fase de desenho. 

5. Integrar o SMA com o sistema de simulação da caldeira. 

6. Avaliar a resposta do sistema integrado SMA-Caldeira. 

 

 

1.2 Organização do Texto 
 

O texto está dividido em seis capítulos, e segue-se uma breve descrição do 

conteúdo de cada capitulo: 

 

O capítulo 1 esclarece o objetivo da presente tese e elucida o potencial da 

tecnologia de sistemas multiagentes na controle de processos. O capitulo de 

Introdução também menciona, na Caldeira de Recuperação Química, a 

importância de se manter um sistema estável. 

 



 18

O capítulo 2 contém a revisão bibliográfica detalhando a teoria de sistemas 

multiagentes e suas principais características. 

 

O capítulo 3 faz uma revisão dos principais componentes de uma Caldeira de 

Recuperação, analisando a influência das principais variáveis em relação ao 

desempenho da Caldeira. 

 

O capítulo 4 descreve a metodologia utilizada na elaboração do Sistema 

Multiagente, especialmente em cada uma das principais áreas de 

desenvolvimento (criação da plataforma de agentes, elaboração do modelo 

dinâmico do processo e comunicação entre os agentes é a simulação) 

 

O capítulo 5 traz os resultados obtidos em cada uma das áreas de 

desenvolvimento mencionadas acima. Neste capítulo também foram realizados 

testes de avaliação do sistema de controle inteligente sobre a Caldeira. 

 

Finalmente, o capítulo 6 tece conclusões sobre a presente aplicação de 

sistemas multiagentes em caldeira de reuperação química. 

 

 

 

 

 

 

 

 

 

 

 

 

 



 19

 

 

2 REVISÃO BIBLIOGRÁFICA 
 
 

2.1 Teoria de Agentes e Sistemas Multi-agentes 
 

2.1.1 Histórico 
 
Até aos anos 80, a investigação em inteligência artificial tratou tradicionalmente 

de sistemas individuais, tentando replicar nesses sistemas as capacidades 

específicas associadas à inteligência humana, como é o caso da aprendizagem 

ou da resolução de problemas. No entanto, nos anos 80 começou a tornar-se 

claro que os aspetos da interação e distribuição tinham de ser considerados 

como aspetos básicos da inteligência. Em particular, Marvin Minsky (1985) 

propôs que a inteligência é o resultado de inúmeros módulos interagindo entre 

si, cada um resolvendo tarefas primitivas específicas.   

 

Estas idéias ganharam uma abrangência crescente, nomeadamente quando 

foram integradas com o modelo de objetos interativos, designados atores, como 

anteriormente proposto por Carl Hewitt (1973). Surgiram, assim, as bases para o 

que hoje é designado como inteligência artificial distribuída. Esses atores eram 

caracterizados por um estado interno, operando em paralelo e respondendo a 

mensagens de outros objetos. A evolução do conceito de ator conduziu ao que 

hoje é o conceito de agente.   

 

Compreende-se, deste modo, que a noção de agente seja atualmente utilizada 

nos mais diferentes contextos. O agente pode ser visto em uma perspectiva de 

um “processo de software, executado concorrentemente, que encapsula algum 

estado e comunica com outros agentes através de mecanismos de troca de 

mensagens” (WOOLDRIDGE e JENNINGS, 1995), como acontece no âmbito da 



 20

engenharia de software baseada em agentes, ou pode ser visto até como um 

programa com alguma forma de controle persistente, como acontece em 

aplicações para a Internet. Este tipo de caracterização corresponde ao que se 

designa por noção fraca de agente (WOOLDRIDGE e JENNINGS, 1995).   

 

Em contrapartida, a noção forte de agente é característica de áreas como a 

inteligência artificial, na qual, além das características anteriores, conceitos 

como conhecimento, crenças, intenções, desejos, obrigações ou emoções, 

podem ser atribuídos aos agentes (WOOLDRIDGE, 2000) (SCHWEITZER, 

2003).   

 

O termo agente é, assim, utilizado em diversas áreas com diferentes 

significados, não sendo por isso de se estranhar que seja difícil definir a noção 

de agente de forma consensual (COELHO e PAIVA, 1998). No entanto nesse 

sentido, existe algum consenso de que, apesar da noção de agente ser 

necessária, esta deve ser utilizada somente como uma ferramenta para 

classificar sistemas e não como uma caracterização absoluta do  mundo dividido 

entre agentes e não-agentes (RUSSEL e NORVIG, 2003). É, no entanto, 

possível identificar algumas características gerais, tipicamente subjacentes à 

noção de agente, as quais serão abordadas a continuação.  
 

2.1.2 Conceito de Agentes 

 
Definir agentes com um conceito único ou padrão é muito difícil, pois existem 

várias abordagens e pontos de vista contrastantes de diferentes autores. Além 

disso, devido às suas mais diversas aplicações uma definição precisa torna-se 

cada vez mais complicada e variada. 

 

Alguns pesquisadores, como Michael Wooldridge e Nick Jennings 

(WOOLDRIDGE; JENNINGS, 1995), adotaram duas definições gerais: a noção 

fraca e a noção forte dos agentes. Na definição de noção fraca dos agentes, 



 21

eles conceituam os agentes como sistemas computacionais, sendo hardware ou 

software, com certas propriedades tais como autonomia, habilidade social, 

reatividade e pró-atividade. Na noção forte de agentes, mais adotada pelos 

pesquisadores ligados à área de Inteligência Artificial, o agente possui, além das 

propriedades acima citadas, noções relacionadas ao comportamento humano 

tais como o conhecimento, a crença, a intenção e a obrigação. 

 

Em geral, agentes seriam entidades de software autônomas que atuam em 

determinados ambientes de forma a interagir com o ambiente e com outros 

agentes, além de produzir ações e percepções sem requerer intervenções 

humanas constantes. Em abordagem mais aplicada à Inteligência Artificial um 

agente ideal teria que ser capaz de funcionar continuamente e adquirir 

experiências e conhecimentos acerca do ambiente com o qual  está interagindo. 

Ou seja, ser capaz de “aprender” e tomar decisões a partir de situações 

diferentes. 

 

Pode-se enumerar algumas propriedades que são essenciais para uma melhor 

caracterização de agente. Uma delas é a autonomia que o agente inteligente 

deve ter para tomar decisões e ações importantes para a conclusão de uma 

tarefa, ou objetivo, sem a necessidade da interferência do ser humano ou de 

qualquer outra entidade. Ou seja, ser capaz de agir independentemente do seu 

ambiente através de seus próprios “sensores”, ou com as suas próprias 

percepções, com o objetivo de realizar alguma tarefa, seja ela externa ou gerada 

por ele próprio. Ou seja operam sem a intervenção humana e tem algum tipo de 

controle sobre suas ações e seu estado interno.  

 

Associado à autonomia está a pró-atividade, que nada mais é do que a 

capacidade que o agente deve ter para tomar iniciativas. Eles não respondem 

simplesmente de acordo com o meio. Têm a capacidade de exibir 

comportamentos baseados em objetivos. 

 



 22

Reatividade é a capacidade de reagir rapidamente a alterações no ambiente, ou 

seja, perceber o meio e responder de modo oportuno. Um agente deve ter 

também robustez para ser capaz de tomar decisões baseando-se em 

informações incompletas ou escassas, lidar com erros e ter uma capacidade de 

adaptação ou aprendizagem através da experiência. 

 

Para alcançar seus objetivos, agentes devem ter uma habilidade de 

comunicação que nada mais é do que uma capacidade de comunicação com 

repositórios de informações. É fundamental uma constante troca de 

informações, seja apenas com um repositório de dados, outro agente ou com o 

próprio ambiente  

 

O raciocínio é talvez o aspecto mais importante que distingue um agente 

inteligente dos outros agentes. Afirmar que um agente tem raciocínio significa 

dizer que ele tem a capacidade de analisar e inferir baseando-se no seu 

conhecimento atual e nas suas experiências. Esse raciocínio pode ser:  

 

• Baseado em regras: onde eles utilizam um conjunto de condições prévias 

para avaliar as condições no ambiente externo. 

• Baseado em conhecimento: onde eles têm à disposição grandes 

conjuntos de dados sobre cenários anteriores e ações resultantes, dos 

quais eles deduzem seus movimentos futuros. 

 

Para Wooldridge, como pode ser visto em Weiss (1999),  flexibilidade das ações 

tais como reatividade, pró-atividade e sociabilidade, são suficientes para 

classificar um agente como inteligente. 

 

Por fim, deve haver uma capacidade de cooperação: agentes inteligentes 

podem, e devem, trabalhar juntos para mútuo benefício na execução de uma 

tarefa complexa e ter um comportamento adaptativo, no qual possa examinar o 



 23

meio externo e adaptar suas ações para aumentar a probabilidade de ser bem 

sucedido em suas metas. 

 

Para garantir maior segurança e confiança ao usuário, de que o agente vai 

representar fielmente seu papel com precisão, é fundamental também um alto 

grau de confiabilidade por parte do agente. Isso é necessário para que o agente 

simule e/ou represente da maneira mais próxima possível da realidade. 

 

Contudo, um agente não precisa ter todas essas características ao mesmo 

tempo. Existem agentes que possuem algumas, outros que possuem todas, o 

que é certo é que atualmente existe pouca concordância sobre a importância 

dessas propriedades e se é necessária sua obrigatoriedade para a 

caracterização de um agente. O consenso é que essas características tornam 

um agente diferente de um simples programa ou objeto. 

 

2.2 Sistemas Multi-Agentes 
 

Dentro do contexto da Inteligência Artificial Distribuída, Torsun, (1995) classifica 

a Inteligência Artificial Distribuída em Distributed Problem Solving (DPS), Multi-

Agent Systems (MAS) e Parallel Artificial Inteligence (PAI). Resolução 

Distribuída de Problemas ou DPS decompõe o problema em módulos através de 
uma abordagem descendente (top-down) desenhado especificamente para um 

problema em particular, onde grande parte do raciocínio sobre a solução é 

inserida pelo próprio projetista. Inteligência Artificial Paralela ou PAI interessa-se 
mais por desempenho do que por avanços conceituais, preocupando-se 

principalmente em desenvolver linguagens e algoritmos de computação paralela. 

Por último, Sistemas Multi-Agentes ou SMA, caracteriza-se pela existência de 
agentes que interagem de forma autônoma e que trabalham juntos para resolver 

um determinado problema ou objetivo. 

 



 24

Em suma, pode-se dizer que sistemas multi-agentes são sistemas constituídos 

de múltiplos agentes que interagem, ou trabalham, em conjunto de forma à 

realizar um determinado conjunto de tarefas ou objetivos. Esses objetivos 

podem ser comuns a todos os agentes ou não. Os agentes dentro de um 

sistema multi-agente podem ser heterogêneos ou homogêneos, colaborativos ou 

competitivos, etc. Ou seja, a definição dos tipos de agentes depende da 

finalidade da aplicação que o sistema multi-agente está inserido. 

 

Atualmente a pesquisa em sistemas multi-agentes está interessada 

principalmente na coordenação das ações e comportamentos dos agentes, ou 

seja como eles coordenam seu conhecimento, planos, objetivos e crenças com o 

objetivo de tomar ações ou resolver problemas. 

 

Segundo Jennings (1998) algumas razões para o crescimento do interesse em 

pesquisas com sistemas multiagentes são: 

 

• A capacidade de fornecer robustez e eficiência. 

• A capacidade de permitir interoperabilidade entre os sistemas legados. 

• A capacidade de resolver problemas cujo dado, especialidade ou controle 

é distribuído. 

 

Apesar de muitas vantagens, ainda segundo o mesmo artigo, os sistemas 

multi-agentes ainda possuem muitos desafios e dificuldades tanto em relação ao 

projeto quanto a implementação. Seguem alguns abaixo: 

 

1. Como programar, descrever, decompor e alocar problemas, e sintetizar 

resultados com um grupo de agentes inteligentes? 

2. Como permitir a comunicação e a interação entre agentes? Que 

linguagens de comunicação e protocolos usar? O que e quando 

comunicar? 



 25

3. Como assegurar que agentes atuem coerentemente tomando decisões 

ou executando ações? 

4. Como permitir que agentes individuais atuem e raciocinem sobre ações, 

planos e conhecimento sobre outros agentes com a finalidade de 

coordená-los? Como raciocinar sobre o estado de seus processos 

coordenados? 

5. Como identificar e reconciliar pontos de vistas muito diferentes e 

intenções conflitantes em uma coleção de agentes que tentam coordenar 

suas ações? 

6. Como equilibrar efetivamente a computação local e a comunicação? Mais 

genericamente, como gerenciar alocação de recursos limitados? 

7. Como evitar, ou minimizar, o comportamento prejudicial do sistema, tal 

como um comportamento caótico? 

8. Como projetar e construir sistemas multiagentes práticos? Como projetar 

plataformas tecnológicas e metodologias de desenvolvimento para 

sistemas multiagentes? 

 

Podemos resumir os itens expostos em apenas três, que são os principais 

desafios que um sistema multi-agente enfrenta. O primeiro diz respeito à 

comunicação. Como ela seria realizada entre os agentes e que tipo de 

protocolos usar? A segunda seria a interação: Como essa interação ocorrerá? 

Que linguagem os agentes devem usar para interagirem entre si e combinar 

seus esforços? E por último a coordenação: Como garantir essa coordenação 

entre os agentes para que haja uma coerência na solução do problema ou 

objetivo que estão tentando resolver? 
 

2.3 Comunicação entre Agentes 
 

A comunicação é fundamental para permitir que haja colaboração, negociação, 

cooperação,  etc. entre entidades independentes. Em sistemas multiagentes, é 

necessário que a comunicação seja disciplinada para que os objetivos sejam 



 26

alcançados efetiva e eficientemente, necessitando assim uma linguagem que 

possa ser entendida pelos outros agentes presentes no ambiente. Esta 

comunicação tem, como principais objetivos, a partilha do conhecimento com os 

outros agentes e a coordenação de atividades entre agentes. Ou seja, ela deve 

permitir que agentes troquem informações entre si e coordenem suas próprias 

atividades resultando sempre em um sistema coerente. 

 
 

2.3.1 Interação: Linguagens de Comunicação entre Agentes 
 

A forma de interação que ocorre entre os agentes é um fator muito importante na 

integração destes. As linguagens de comunicação e sua expressividade definem 

a capacidade de comunicação de cada agente. Ela deve ser universal e 

partilhada por todos os agentes, ser concisa e ter um número limitado de 

primitivas de comunicação. Como modelo de comunicação de agentes são 

utilizadas a comunicação humana e a teoria dos atos comunicativos (Speech Act 

Theory) (MENESES, 2001). Esta teoria usa o conceito de performativas para 

permitir conduzir suas ações. Ricardo Gudwin (GUDWIN, 2003) define certas 

características desta teoria: 

 

 Derivada da análise linguística da comunicação humana. 

 Como em uma linguagem, o comunicador de uma língua não somente 
efetua uma declaração, mas realiza uma ação. 

 Mensagens são ações ou atos comunicativos. 

 

Gudwin (2003) afirma que “os atos comunicativos são interpretados a partir da 

mensagem do contexto...” e “...nem sempre essa interpretação é obvia...”. Em 

outras palavras, significa que esses atos comunicativos são sujeitos à 

interpretações dúbias que podem ter significados diferentes de acordo com o 

ponto de vista. 

 

Dificuldades identificadas por Gudwin (2003) são ilustradas pelas seguintes 



 27

frases: 

 

 “Saia da minha frente!” (Comando) 

 “Por favor, saia da minha frente” (Pedido) 

 “Você poderia sair da minha frente?” (Pergunta) 

 “Eu gostaria que você saísse da minha frente” (Informação) 

 

Por isso se faz necessário sempre deixar explícito o ato comunicativo 

relacionado à mensagem na comunicação entre agentes. 
 

2.4 Coordenação entre Agentes 
 

Gerhard Weiss (1999) afirma que “coordenação é uma característica 

fundamental para um sistema de agentes que executam alguma atividade em 

um ambiente compartilhado”. 

 

A coordenação está muito relacionada com o compartilhamento de 

conhecimento entre os agentes, e o seu principal objetivo é coordenar as ações 

individuais de cada agente para atingir o objetivo final do sistema multi-agente. 

Além disso, há uma preocupação com a coerência de modo a se discutir como o 

sistema multi-agente por completo se comporta enquanto está resolvendo um 

problema. O principal motivo para uma preocupação maior com a coordenação 

entre agentes é o fato de que um só agente, dentro de um sistema multi-agente, 

não terá informação ou capacidade suficiente para resolver muitos dos 

problemas - muitos dos objetivos não podem ser atingidos por agentes agindo 

isoladamente. 

 

Assim, coordenação seria a capacidade de esses agentes trabalharem em 

conjunto e combinar seus objetivos de forma a concluírem o objetivo final do 

sistema. Geralmente, para uma cooperação ser bem sucedida, cada agente 

deve manter um “modelo” dos outros agentes e também desenvolver um modelo 



 28

de interações futuras ou possíveis. As interações futuras podem ser divididas em 

cooperação e negociação. 

 

Segundo Weiss (1999): “Negociação é a coordenação entre agentes 

antagônicos ou simplesmente egoístas (self-interested).” Ou seja, a negociação 

está relacionada à coordenação de agentes competitivos. Geralmente são 

usados protocolos de negociação para determinar as regras de negociação e 

são definidos os conjuntos de atributos sobre os quais se pretende chegar a um 

acordo. 

 

Cooperação, como afirma Gerhard Weiss em (1999), é a “...coordenação entre 

agentes não antagônicos...”. Ou seja, uma coordenação com agentes que não 

possuem objetivos conflitantes geralmente é chamada de cooperação. Neste 

caso, agentes cooperativos auxiliam-se mutuamente nem que para isso 

provoquem custos individuais. O papel da coordenação é agir de forma que 

conjunto de agentes realize suas tarefas como um “trabalho de equipe” visando 

sempre o objetivo final do sistema. 
 

2.5 Desenvolvendo Agentes em um Sistema Multi-Agente (SMA) 
 
O ambiente de software onde os agentes vivem, trabalham e se comunicam é 

chamado de “Plataforma de Agentes”. Todos os aspectos relacionados com a 

tecnologia de agentes e SMA estão padronizados pela Fundação de Agentes 

Físicos Inteligentes (FIPA). 
 

2.5.1 Fundação de Agentes Físicos Inteligentes FIPA 
 

Foundation for Intelligent Physical Agents ou simplesmente FIPA, é uma 

fundação sem fins lucrativos direcionada à produção de padrões para a 

interoperabilidade de agentes heterogêneos e interativos e sistemas baseados 

em agentes. FIPA é uma organização membro da Institute of Electrical and 



 29

Electronics Engineers (IEEE), a associação profissional  mais importante no 

avanço da tecnologia.  IEEE é a autoridade principal em áreas da engenharia 

como Aeronáutica, Computação, Biomedicina, Telecomunicações, Elétrica, entre 

outras.  

 

FIPA foi fundada em 1996 em Genebra e foi aceita pela IEEE em Junho de 

2006. A sua missão básica é facilitar a interligação de agentes e sistemas multi-

agentes entre múltiplos fornecedores de ambientes. A missão oficial é: “A 

promoção de tecnologia e especificações de interoperabilidade que facilitem a 

comunicação entre sistemas de agentes inteligentes no contexto comercial e 

industrial moderno.” (FIPA, 2007). Em suma, interoperabilidade entre agentes 

autônomos. 

 

Segundo dados encontrados no site oficial (FIPA, 2007), antes da FIPA havia 

cerca de 60 sistemas proprietários de agentes em competição, sendo que a 

maioria destes eram sistemas “fechados” e incompatíveis. Fatos tais que 

atrasaram o desenvolvimento da tecnologia de agentes. Logo, fica claro que a 

necessidade de padronização torna-se indispensável. 

 

Algumas das linguagens de desenvolvimento de agentes que estão relacionadas 

com a FIPA são: Agent Development Kit2, FIPA-OS, Lightweight Extensible 

Agent Plataform3 (LEAP), ZEUS e JADE. Esta última foi a plataforma escolhida 

para desenvolver os agentes da caldeira de recuperação. 
 

2.5.1.1  FIPA-ACL 
 
A (FIPA-ACL) é uma linguagem, utilizada no padrão FIPA de comunicação entre 

agentes, baseada em ações de fala. Sua especificação consiste de um conjunto 

de tipos de mensagens e descrições dos efeitos das mensagens sobre os 

agentes que as enviam e sobre os que a recebem. Possui uma semântica 

definida precisamente com uma linguagem de descrição de semântica. 



 30

 

De acordo com (MENESES 2001), o Knowledge Query and Manipulation 

Language (KQML) tem sido muito criticada por usar o termo performativo para 

se referir às primitivas de comunicação. Em FIPA-ACL, essas primitivas são 

chamadas de ações ou atos comunicativos (communicative acts). 

 

Ricardo Gudwin (2003) prevê que no futuro a FIPA-ACL: “deve vir a substituir o 

KQML, pois resolve a maioria dos problemas criticados por diferentes autores na 

concepção do KQML.”. E realmente a linguagem FIPA-ACL é atualmente a mais 

utilizada na comunidade que desenvolve projeto de agentes. Por este motivo a 

linguagem utilizada para comunicar os agentes nesta tese foi a linguagem no 

padrão FIPA-ACL. 

 

Na figura 1 vemos uma estrutura de uma mensagem em FIPA – ACL, com as 

partes que compõem uma mensagem básica. 

 

Figura 1: Formato de uma mensagem FIPA-ACL 
 

 
2.5.1.2 Protocolos De Interação FIPA 
 
Geralmente existem certos padrões na interação entre os agentes, tais como os 

tipos e a seqüência das mensagens trocadas. A esses padrões dá-se o nome de 

protocolos de interação. 

 



 31

A FIPA define protocolos de interação para que um agente requisite uma tarefa 

a outro agente; protocolos para licitação, utilizados para selecionar o agente que 

melhor executa uma tarefa; entre outros. 

 

Em cada protocolo de interação são definidos, entre outras aspectos, os papéis 

que podem ser desempenhados pelos agentes, os tipos de mensagens que 

podem ser enviadas e recebidas em cada papel, além da seqüência em que 

essas mensagens são trocadas.  

 

A FIPA padronizou 11 protocolos de interação para diversos tipos de 

conversações entre agentes.  Um dos protocolos mais utilizados é o “Contract 

Net Interaction Protocol”, protocolo utilizado neste presente trabalho, e o qual 

será descrito junto com o SMA da Caldeira de Recuperação. 
 

2.6 Aplicações em Sistemas Multi-agentes 
 

Aplicações de agentes podem ser classificadas pelo tipo de agente, pela 

tecnologia utilizada para implementar os agentes, ou pela área onde foi aplicada, 

por exemplo: 

 

• Agentes no processo ensino-aprendizagem: utilização de agentes no 

aprendizado e no processo de treinamento de usuários. 

• Agentes na indústria: a grande vantagem da aplicação de agentes na 

produção industrial é o fato de que muitos dos sistemas que atuam neste 

propósito são complexos e isolados. O papel dos agentes seria integrá-

los e compartilhar informações entre os sistemas. 

• Agentes em simulação: agentes podem simular situações dando um grau 

maior de veracidade. Tanto na área de entretenimento quanto na área de 

pesquisa tecnológica e militar. 

• Agentes em realidade virtual: nessas aplicações o agente atua como um 

participante que auxilia e monitora certas atividades e usuários, 



 32

assistindo-os ou ajudando-os quando necessário, principalmente em 

ambientes virtuais muito complexos. 

• Agentes na prestação de serviços: nesse contexto os agentes irão 

agregar valor a certos serviços, gerenciando a informação a fim de 

satisfazer as necessidades dos clientes. Podemos citar, por exemplo:  

 

 manutenção e atualização de bases de dados explorando a 

informação 

 

 comércio eletrônico, onde agentes procuram preços mais 

convenientes ou ofertas e produtos com as especificações 

desejadas pelo usuário; 

 

 gerência de correio eletrônico e filtragens de mensagens, 

funcionando como um assistente pessoal; 

 

• Agentes em redes de computadores: as suas funções nessas aplicações 

variam muito. Varia desde a definição de melhores rotas, controle de 

manutenção de equipamentos, gerenciamento de dados até o 

monitoramento de atividades e gerência da própria rede. 
 

 

 

 

 

 
 

 

 

 

 



 33

 

 

3 CALDEIRAS DE RECUPERAÇÃO QUÍMICA 
 

 

Neste capítulo descreve-se de forma geral o processo Kraft com a finalidade de 

entender melhor a importância da Caldeira de Recuperação dentro do processo 

de celulose. Em seguida apresenta-se a caldeira de recuperação química, a sua 

operação e suas variáveis de operação mais relevantes.  

 
3.1 Histórico do Processo Kraft 
 

Historicamente, o cozimento alcalino teve início em 1854, através do processo 

de soda. Em 1884, foi patenteado o processo Kraft que, nada mais é do que 

uma modificação no processo da soda, utilizado comercialmente, pela primeira 

vez em 1885 na Suécia, tomando impulso a partir de 1930 e predominando no 

mercado até os dias atuais. A palavra “Kraft” é de origem sueca e alemã que 

significa “força” (resistência). 

 

O processo Kraft consiste em atuar sobre a madeira na forma de cavacos com 

uma combinação dois reagentes químicos: hidróxido de sódio (NaOH) e sulfeto 

de sódio (Na2S), obtendo-se como resultado a dissolução da lignina e a 

liberação das fibras. As fibras liberadas constituem a “celulose” marrom ou 

massa marrom. 

 

O processo pode ser exemplificado de maneira simplificada através da seguinte 

equação: 

 

Madeira (fibras + lignina) + reagentes químicos = “celulose” + lignina solúvel. 

 

Utilizando-se a terminologia de uso corrente na indústria, a equação torna-se: 



 34

Madeira + licor branco (NaOH + Na2S) = “Celulose” + licor negro 

 

O processo de obtenção de celulose apresenta um subproduto, denominado 

“licor negro”, o qual contém parte da madeira dissolvida (lignina), combinada 

com reagentes químicos utilizados no início do processo. Por razões 

econômicas e ambientais, é absolutamente necessário o reaproveitamento do 

licor negro num processo denominado Recuperação de Produtos Químicos. 

 

A recuperação consiste em queimar o licor negro previamente concentrado 

acima 60% de sólidos e enriquecido em sulfato de sódio Na2SO4. 

 

Os fundidos, após a dissolução e um tratamento adequado, transformam-se em 

licor, contendo reagentes químicos idênticos aos utilizados no início do 

processo. 

 

O processo Kraft tem como principal vantagem o sistema de recuperação dos 

produtos químicos associado a ele. Por outro lado, as desvantagens deste 

processo são: alto custo de implantação, odor dos gases resultantes do 

processo, baixa alvura após cozimento em relação a outros processos como o 

sulfito, por exemplo, baixo rendimento (40 a 50%) e alto custo de 

branqueamento. 

 

Após a lavagem da massa marrom, ocorrem as etapas de pré-branqueamento e 

branqueamento, onde se faz uso de insumos como oxigênio, ozônio, peróxido 

de hidrogênio e dióxido de cloro para que possa obter, finalmente, a celulose 

branqueada.  

 

3.2 Unidade de Recuperação e Utilidades 
 

A fábrica de processo “Kraft” tem duas macro unidades. Veja a Figura 2. A 

primeira é responsável por se obter a polpa celulósica. A segunda, da qual faz 



 35

parte a caldeira de recuperação química, é a de recuperação e utilidade, cujos 

objetivos são: recuperar e regenerar os agentes químicos para se obter a polpa 

(Na2S e NaOH); fornecer água, vapor, energia elétrica e ar comprimido para os 

processos em geral; e tratar os efluentes. 

 

 
 
Figura 2: Unidade de recuperação e de Utilidades do processo “Kraft” de produção de celulose. 

 
O combustível de caldeiras de recuperação química é o licor residual oriundo 

dos processos de obtenção e de lavagem da polpa celulósica. Este licor contém 

água, material orgânico (principalmente lignina) e material inorgânico 

(principalmente sais de sódio). A proporção mássica entre elas e a composição 

química de cada material são funções da qualidade da madeira e das condições 

de polpação. Por apresentar, teor considerável de inorgânico, acima de 1/3 do 

total de sólidos (orgânicos mais inorgânicos), baixo poder calorífico, e percentual 

mássico de água por volta de 75,0%, não é possível queimar o licor sem antes 

concentrá-lo acima de 60% de sólidos. A faixa usual em fábricas é entre 65 e 

80% e a viscosidade do licor é a restrição para não se operar com um percentual 

maior.  

  



 36

O objetivo de caldeiras de combustível fóssil é gerar vapor. O principal objetivo 

de caldeiras de recuperação química é recuperar os inorgânicos do licor. Daí a 

denominação de caldeira de recuperação química. As outras funções são gerar 

o vapor, ao aproveitar o calor dos gases de combustão do licor, e reduzir o nível 

de emissões. Parte da energia do vapor produzido na caldeira abastece as 

diferentes etapas do processo de celulose e a maior parte é utilizada para gerar 

energia elétrica, via turbo gerador. A recuperação dos inorgânicos é por meio de 

bicas, pela parte inferior do equipamento. Os componentes inorgânicos no 

fundido são basicamente sulfeto de sódio (Na2S) e carbonato de sódio 

(Na2CO3). O destino destes inorgânicos é o tanque dissolvedor. A regeneração 

do hidróxido de sódio (NaOH) a partir do carbonato de sódio ocorre na etapa de 

caustificação. Deste modo, tem-se o fechamento do ciclo do licor. Este ciclo se 

encerra com a obtenção a partir do licor residual do subproduto das operações 

de obtenção e lavagem da polpa celulósica, e também dos agentes químicos 

(Na2S e NaOH) para a etapa de cozimento dos cavacos de madeira. 

 
 

3.3 Descrição da Caldeira 
 
 
O funcionamento da caldeira de recuperação de licor negro é muito complexo. 

Essa complexidade dá-se devido à sua dupla função de reator químico e 

gerador de vapor para produção de energia elétrica para outras partes do 

processo. Vários processos físico-químicos acontecem simultaneamente na 

caldeira, como: 

 

• injeção e mistura de ar com os gases da caldeira; 

• pulverização do licor negro e formação de gotas; 

• secagem das gotas de licor; 

• decomposição do licor e combustão dos gases de pirólise; 



 37

• gaseificação e combustão dos resíduos carbonizados; 

• redução dos compostos de enxofre a sulfetos; 

• deposição dos fundidos no fundo da caldeira (leito carbonizado).  

 

O equipamento da caldeira de recuperação é dividido em duas partes: a fornalha 

e os equipamentos para troca térmica entre os gases de combustão e água 

líquida e vapor, como mostrado na Figura 3. A primeira, localizada na parte 

inferior da caldeira, é responsável pela combustão da matéria orgânica contida 

no licor e, a segunda pela produção de vapor superaquecido. O nariz da caldeira 

é a demarcação entre essas duas partes, conforme pode ser visualizado na 

Figura 3. Esse nariz serve para proteger o superaquecedor das radiações 

incidentes da parte inferior e reduzir as taxas de corrosão desse equipamento. 

Após a caldeira de recuperação, têm-se o precipitador eletrostático e a chaminé. 



 38

 
Figura 3: Representação esquemática de uma caldeira de Recuperação (ADAMS et al., 1997). 

 

 

 

A parte inferior da caldeira consiste em uma fornalha vertical, completamente 

resfriada à água por um arranjo de tubos, no fundo e nas paredes, ligados ao 

sistema de circulação de água, onde o licor negro é queimado como 

combustível.  

 

O licor negro proveniente dos evaporadores flui para um tanque de mistura, 

onde se adicionam e misturam as cinzas provenientes do precipitador 

eletrostático e onde se faz reposição de químicos ao licor negro, caso seja 

necessário. A quantidade adicionada de cinzas é igual a todo o conteúdo 



 39

proveniente dos precipitadores eletrostáticos, sendo as reposições de 

compostos inorgânicos feitas conforme as perdas no processo da fábrica. 

 

O licor negro com aproximadamente 65 % de sólidos secos é pulverizado na 

caldeira através de bicos ejetores, Figura 4. O ângulo do bico aspersor 

determina a trajetória do licor dentro da caldeira e governa o contato entre o licor 

e o ar de combustão. São utilizados entre 1 e 16 bicos ejetores, sendo 

localizados aproximadamente a 5 m do fundo da caldeira. A viscosidade do licor 

é uma função da composição, temperatura, das condições de operação e 

também da taxa de cisalhamento. A viscosidade do licor negro aumenta com o 

aumento da concentração de sólidos e com a diminuição da temperatura. No 

espalhamento, a viscosidade pode ser controlada, mantendo-se a pressão e 

temperatura do licor negro dentro dos valores normais das operações de 

bombeamento e espalhamento. Ao controlar o espalhamento do licor durante 

mudanças na sua qualidade e na carga (tonelada de sólidos secos queimado 

por dia) da caldeira, os operadores têm três ferramentas para criar um padrão 

ótimo de espalhamento: a temperatura e pressão do licor negro, e o ângulo da 

lança. 

 

 

 

 

 



 40

 

 
Figura 4: Bico ejetor de licor negro na caldeira de recuperação (ADAMS et al., 1997) (Fotos 

Tacla, 2001). 
 

As gotas que são formadas sofrem os processos de secagem, pirólise, 

gaseificação, combustão e redução dentro de regiões distintas da caldeira. A 

taxa na qual esses processos físicos e químicos ocorrem são altamente 

dependentes do tamanho e da distribuição das gotas formadas pela 

pulverização. Normalmente as gotas possuem um diâmetro entre 0,5 a 5 mm. 

As gotas pequenas possuem uma maior área superficial por unidade de massa 

de licor e assim uma maior taxa de transferência de calor e massa, sofrendo 

então, uma rápida secagem e combustão. Porém, essas partículas são 

facilmente arrastadas pelos gases. Um resultado inevitável é a aceleração da 

incrustação, um relativo resfriamento dos tubos da caldeira e uma rápida perda 

de eficiência da troca térmica. 

 



 41

Por outro lado, as gotas grandes podem cair ainda úmidas no leito carbonizado 

(“char bed”) causando o resfriamento da camada. Este fato resulta em perda de 

eficiência para a combustão além de risco de explosão por causa do contato 

entre o fundido a alta temperatura e a água contida no licor (EMPIE et al, 1995). 

Na região de secagem e pirólise, localizada ao redor da pulverização do licor, 

ocorre a evaporação da água e a pirólise dos compostos orgânicos, lignina, 

presentes no licor. São formados então, os gases de combustão, H2, CO, CH4, 

CO2 e outros, e sólidos particulados que constituirão o leito carbonizado, mistura 

de compostos inorgânicos de sódio (Na2CO3, Na2S, Na2SO4, etc) e carbono fixo. 

Os produtos voláteis das reações de pirólise são oxidados na região de 

oxidação, acima da região de secagem e pirólise (ALMEIDA, 2003). 

 

Durante a fase de secagem grande parte da água, ou toda ela, presente nas 

gotas de licor é evaporada. Durante este estágio as gotas de licor sofrem um 

pequeno aumento no seu diâmetro e após a secagem, aumentam de tamanho 

rapidamente. Esse aumento de tamanho deve-se a formação de gases voláteis 

durante a combustão do licor e afeta as taxas de desvolatilização e queima do 

carbono. Neste estágio, uma chama amarela brilhante aparece em torno dessa 

gota, como pode ser visto na Figura 4. Após a liberação dos voláteis o licor 

contém principalmente carbono e sais de sódio. Em seguida, no leito 

carbonizado, o carbono é rapidamente queimado na superfície provocando uma 

diminuição do tamanho da gota. No final da queima do carbono, o enxofre é 

completamente reduzido restando principalmente Na2S e Na2CO3 (fundidos). Os 

fumos são liberados no final do estágio de queima do carbono (FREDERICK et 

al., 1991). Esta sequência de transformações durante a combustão do licor 

negro pode ser visualizada na Figura 5. 

 



 42

 
Figura 5: Etapas na combustão do licor negro. (HUPA et al., 1987) 

 

Dois processos importantes, a combustão do carbono e a redução das formas 

oxidadas do enxofre, acontecem simultaneamente no leito carbonizado, região 

de redução, como descrito anteriormente. O leito carbonizado é constituído de 

uma parte quente, com queima ativa, sobre uma superfície fria e inativa. O 

tamanho e a forma do leito carbonizado são determinados pelo projeto da 

caldeira, técnica de combustão, entrada de ar e propriedades de combustão do 

licor negro. A altura do leito é usualmente limitada pelo ar secundário. O material 

que atinge o leito carbonizado é parcialmente seco, pirolizado e os sólidos do 

licor queimados. (Ver Figura 6) 

 

 



 43

 
Figura 6: Leito carbonizado na parte inferior da caldeira. 

 (Fonte: Tacla, 2001). 

 

O fundido deixa a caldeira por bicas e cai em um tanque de dissolução, onde é 

dissolvido com licor branco, formando licor verde, que posteriormente segue 

para a etapa de caustificação. 

 

Em um processo ideal todos os compostos de enxofre e sódio seriam 

transformados em sulfeto de sódio (Na2S) e carbonato de sódio (Na2CO3), 

porém em uma caldeira de recuperação real o enxofre e o sódio são convertidos 

também em sulfato (Na2SO4). Além disso, uma parte substancial do enxofre e do 

sódio é arrastada pelos gases de combustão para a chaminé da caldeira, 

principalmente na forma de cinzas e gases contendo enxofre. Esses compostos 

são a causa de vários problemas, tais como deposição de fuligens nas 

superfícies de transferência de calor e corrosão (ADAMS et al., 1997). 

 

Em termos cinéticos o desempenho da caldeira de recuperação é quantificado 

pela eficiência de redução, ou grau de redução, que fornece informações sobre 

a composição dos fundidos. A eficiência de redução é definida como a relação 

entre a quantidade de sulfeto de sódio e quantidade total de enxofre. 

 

O ar de combustão entra na caldeira por dutos e janelas de vento conectados à 

caldeira. O fluxo de ar na caldeira é distribuído normalmente em três níveis, 

existe uma tendência em se utilizar quatro níveis para adicionar flexibilidade na 

distribuição de ar. Tipicamente 65 % a 85 % do ar de combustão é introduzido 



 44

abaixo dos ejetores de licor negro. As duas principais finalidades dos três 

estágios são assegurar a combustão completa dentro da fornalha e manter o 

controle de emissão de gases tóxicos, que são de importância ambiental 

primária na indústria de papel e celulose. 

 

O ar primário é alimentado na caldeira a uma altura de aproximadamente 1 m 

acima do assoalho, sendo as entradas de ar menores e mais numerosas do que 

as dos demais níveis. O ar é inserido por aproximadamente 35 entradas em 

cada parede da caldeira. Esse ar é utilizado para controlar a forma e a posição 

do perímetro do leito carbonizado e fornecer oxigênio para a combustão do 

material carbonizado. 

 

A entrada de ar secundário é geralmente maior e menos numerosa do que a 

primária, de 4 a 16 entradas para cada parede. O ar secundário é localizado a 

aproximadamente 2 m acima do assoalho. O ar secundário controla a altura do 

leito carbonizado e é responsável pela secagem, pela pirólise do licor e 

conseqüentemente pelo aumento da temperatura na parte inferior da caldeira. 

O ar terciário é usualmente localizado acima dos bicos ejetores de licor negro a 

8 m do fundo da caldeira (Ver Figura 7). Geralmente a entrada de ar terciário é 

maior do que as demais e é dividida em apenas duas paredes, entre 3 e 8 

entradas em cada parede. O ar terciário é responsável por completar o processo 

de combustão, promover a mistura final dos gases de combustão, queimar 

quaisquer gases reduzidos de enxofre e conseqüentemente minimizar as 

emissões (ADAMS et al., 1997). 

 



 45

 
Figura 7: Entradas de ar na caldeira.. 

 (Fonte: Tacla, 2001). 

 

 

A parte superior da caldeira é dividida em economizadores, balões de água e 

vapor, bancada de tubos (convector), superaquecedores e pode incluir uma 

cortina de tubos (cortina d’água) (Ver Figura 8). O fluxo de gases gerados na 

parte inferior da caldeira passa por estes equipamentos seguindo então para o 

precipitador eletrostático e para a chaminé, sendo então dispersos na atmosfera.  

 

O fluxo convectivo nessa seção da caldeira geralmente envolve fluxo em 

contracorrente dos gases de combustão com a água, podendo ser co-corrente 

em algumas partes do superaquecedor (ADAMS et al., 1997). 

 



 46

 
Figura 8: Parte superior da Caldeira. 

 (Fonte: Tacla, 2001). 

 

A água inicialmente tratada é alimentada aos economizadores, onde é aquecida 

até uma temperatura próxima de ebulição, seguindo então para o balão de 

vapor. Através da bancada de tubos, é conduzida ao balão de água e segue 

para os feixes tubulares localizados nas paredes da fornalha, onde recebe calor 

por radiação para formação de vapor saturado, retornando em fluxo ascendente 

até o balão de vapor. O vapor saturado segue para a cortina de tubos que tem 

como função principal, proteger o conjunto de superaquecedores das radiações 

emanadas da fornalha. 

 

Após a cortina de tubos tem-se o conjunto de superaquecedores, onde a 

temperatura do vapor saturado é aumentada até atingir a temperatura final 

superaquecida. A absorção de calor nos superaquecedores é fortemente 

influenciada pela uniformidade das condições dos gases que passam por eles.  

 



 47

Diferenças na uniformidade, velocidade ou temperatura dos gases reduzem a 

absorção de calor, causando baixa temperatura de saída do vapor e ou 

excessiva temperatura dos gases na seção de bancada de tubos. Após a 

passagem do vapor pelo conjunto de superaquecedores, obtém-se um vapor 

superaquecido com uma temperatura na faixa de 350 a 450°C dependendo da 

pressão de operação da caldeira, que pode variar de 40 a 65 Kgf/cm2. O vapor 

gerado alimenta as turbinas geradoras de energia elétrica e equipamentos de 

troca de calor tais como nas operações de polpação, branqueamento, secagem, 

entre outras (ALMEIDA, 2003). O desempenho da troca térmica e geração de 

vapor são medidos pela eficiência térmica, que é a razão entre a energia gasta 

para produzir o vapor e a energia liberada pela queima total do combustível 

utilizado, neste caso licor negro. 

 

Os gases de combustão, formados na queima do licor, fluem para a parte 

superior da caldeira através do uso de exaustores. Os gases da fornalha 

passam através dos superaquecedores e entram no convector onde passam 

paralelamente de forma descendente. Os defletores direcionam os gases de 

volta para cima e para dentro do primeiro economizador. Novamente, os gases 

descem paralelamente aos tubos. De modo semelhante, um sistema de 

defletores repete o percurso através do segundo economizador. Estas 

mudanças de direção do gás facilitam a precipitação de partículas pesadas 

dentro dos silos coletores antes que os gases deixem a caldeira e entrem nos 

precipitadores. 

 

Os gases produzidos na parte inferior da caldeira de recuperação geralmente 

arrastam material particulado para a parte superior. Assim, para impedir a perda 

de substâncias químicas importantes para o processo e evitar a poluição 

ambiental, utilizam-se precipitadores eletrostáticos, que são os equipamentos 

mais adotados para coletar as partículas arrastadas e retornar ao sistema os 

sais nela contido, principalmente o sulfato de sódio (Ver Figura 9). Os gases 

seguem então para a chaminé, onde são dispersos. 



 48

 
Figura 9: Precipitadores Eletrostáticos. 

 (Fonte: Tacla, 2001). 

 

A precipitação eletrostática de partículas ocorre através de um eletrodo de 

descarga carregado negativamente, situado perto de outro positivo ligado a 

terra, chamado eletrodo coletor, de forma esférica ou de placa plana. Entre os 

dois eletrodos, por onde passam os gases arrastando partículas, aspirados por 

ventilador, está aplicada uma diferença de potencial de 50.000 a 100.000 volts. 

A precipitação ocorre em três etapas: 

• fornecimento de carga negativa às partículas arrastadas pelo gás por meio 

de íons gasosos ou elétrons; 

• transporte das partículas carregadas através do gás para o eletrodo coletor; 

• descarga das partículas e remoção do material precipitado. 

As partículas dispersas nos gases de combustão podem ser classificadas em 

três tipos: partículas pesadas (contendo carbono e cinzas), partículas fundidas 

(formadas na zona de combustão por gotas de licor arrastadas) e partículas 



 49

muito pequenas (geradas por condensação de compostos) (SATURNINO, 

2003). 

 

Os gases de combustão arrastam as cinzas dos diferentes compostos químicos, 

formados no processo de queima do licor, que aderem nas superfícies de 

aquecimento da caldeira. As taxas de transferência de calor vão reduzindo-se 

gradualmente, afetando a operação da caldeira de vários modos. A eficiência 

calorífica diminui, a temperatura de saída dos gases de combustão aumenta a 

carga da caldeira, e muitas outras variáveis ficam desequilibradas. Assim, os 

sopradores de fuligem operam para manter as taxas corretas de absorção de 

calor das superfícies aquecidas, mantendo-as limpas. A sopragem de fuligem 

deve ser feita com a quantidade mínima necessária de vapor, e somente quando 

necessário. Em alguns casos, um sistema de controle lógico programável guia 

as seqüências automáticas de sopragem de fuligem. 

 
3.4 A Influência das Variáveis Operacionais no Desempenho da 
Caldeira 
 
Como já foi mencionado anteriormente, as variáveis do desempenho que 

quantificam o desempenho da caldeira são: a quantidade de vapor produzido, as 

emissões atmosféricas, avaliadas pelas quantidades de H2S e SO2 presentes 

nos gases de chaminé e o grau ou eficiência de redução.  Destas três variáveis 

analisaremos duas que estão relacionadas com o comportamento dos agentes.  

Com o intuito de facilitar a determinação das variáveis operacionais que 

possuem influência sobre tais variáveis do desempenho, fez-se, neste sub-

capítulo, uma revisão bibliográfica sobre cada uma destas variáveis. 

 

3.4.1 Produção de Vapor 
 
 

A eficiência térmica da caldeira é um dos fatores usado para avaliar o 

desempenho de tal equipamento. Quanto maior a eficiência térmica, maior é a 



 50

quantidade de vapor gerado, que é um dos objetivos da caldeira de 

recuperação. 

 

A produção de vapor na caldeira depende de vários fatores envolvidos na sua 

operação. A capacidade da caldeira (quantidade de combustível que a caldeira é 

capaz de processar), por exemplo, é um parâmetro que determina sua geração. 

O teor de sólidos secos presente no licor, também determina a geração de 

vapor, pois a água presente no licor diminui a eficiência térmica da caldeira. O 

calor liberado na combustão em vez de ser direcionado para geração de vapor e 

para as reações de redução é consumido na secagem do licor, diminuindo sua 

eficiência térmica. 

 

De acordo com operadores de caldeiras a pressão do balão de vapor também 

possui uma influência importante sobre a vazão de vapor. A pressão do balão é 

controlada pela necessidade de vapor para a fábrica e para a turbina. Todo 

vapor produzido pelas caldeiras é direcionado para um coletor geral. Quando o 

coletor geral de vapor necessita de mais vapor, ele retira vapor das caldeiras, 

que conseqüentemente necessitam de maior quantidade de água de 

alimentação, o que faz a pressão do balão aumentar. 

O menor excesso de ar, a baixa sulfidez do licor e a baixa temperatura dos 

gases na saída do economizador podem aumentar a taxa de energia destinada 

à produção de vapor. Quando a fração de ar alimentada na parte inferior da 

caldeira é menor do que a estequiométrica, somente uma parte do licor é 

incinerada liberando uma menor quantidade de calor. Porém, valores elevados 

de ar em excesso, também, reduzem a eficiência térmica da caldeira, diminuindo 

a geração total de vapor (LEFEBVRE; SANTYR, 1989). O ideal é a caldeira 

operar com uma quantidade de excesso de ar de aproximadamente 20 %, o que 

permite uma combustão completa do licor favorecendo uma boa eficiência 

térmica da caldeira (ADAMS et al., 1997). 

 



 51

3.4.2 Eficiência de Redução 
 

A eficiência de redução dentro de uma caldeira operando adequadamente está 

próxima de 95 % e fornece uma medida efetiva da redução, ou em outras 

palavras é um parâmetro que quantifica o tanto de sulfato de sódio que é 

reduzido a sulfeto de sódio. É desejável atingir o mais alto grau de redução 

possível, uma vez que o Na2S é ativo no cozimento enquanto que o sulfato de 

sódio não o é. A eficiência de redução depende da temperatura no fundo da 

fornalha (leito), bem como das quantidades adicionadas de ar e sua distribuição. 

 

A redução do sulfato no leito pode ser maximizada pelo ajuste das condições de 

queima. Uma importante consideração para se obter altos níveis de redução é 

operar a fornalha em temperaturas mais elevadas e fazer com que a distribuição 

dos ares seja adequada, permitindo que o excesso de oxigênio seja feito de 

forma apropriada. Portanto, a vazão de ar total deve ser compatível com a vazão 

de licor de modo a promover a combustão com eficiência. (TRAN et al.,1986) 

fizeram um estudo sobre a relação entre a vazão de ar e de sólidos no licor para 

caldeiras do Canadá e observaram uma tendência à linearidade entre essas 

vazões. 

Normalmente, trabalha-se com excesso de oxigênio no ar para garantir a 

combustão completa. Um aumento no fluxo de O2 aumenta a taxa de queima no 

leito carbonizado, aumentando a temperatura e a taxa de redução do sulfato e 

carbonato (ADAMS et al., 1997). Porém, quanto ao aspecto cinético, ao 

aumentar a concentração de oxigênio atinge-se um patamar crítico, porque o 

carbono possui uma maior tendência de reagir com o oxigênio do ar do que com 

o oxigênio presente no sulfato de sódio. Portanto, uma quantidade muito elevada 

de ar diminui a eficiência de redução. Por outro lado, a baixa presença de 

oxigênio retarda a pirólise do licor, aumentando o nível de acúmulo de carvão no 

leito, e decrescendo a temperatura do mesmo. O efeito do ar na parte inferior da 

caldeira sobre a eficiência de redução pode ser observado na Figura 10 

(LEFEBVRE; SANTYR, 1989). 



 52

 

Outro mecanismo de queima do carbono é através da redução do Na2CO3 pelo 

carbono, produzindo vapor de sódio, CO e CO2. Essa reação é a principal fonte 

de fumos na caldeira de recuperação. Assim, a combustão do carbono, a 

redução do sulfato e a geração de fumos são controladas pela estrutura do leito 

e pela transferência de calor e oxidantes (O2, CO2 e vapor de água) para a 

superfície do leito através dos jatos de ar (ADAMS et al., 1997). 

 

 
Figura 10: Efeito do ar da parte inferior da fornalha sobre a eficiência de redução (LEFEBVRE; 

SANTYR, 1989). 
 

A temperatura do leito afeta a eficiência de redução, devendo estar ao redor do 

ponto de fusão dos inorgânicos presentes no leito, na faixa de 790-830°C. 

Temperaturas inferiores a essa faixa no leito diminuem a eficiência de redução, 

aumentam a produção de sulfeto de hidrogênio (H2S) e dióxido de enxofre (SO2), 

além de promover a instabilidade do leito. Por outro lado temperaturas muito 

altas aumentam a produção de fumos de sódio, que se transformam em sulfato 

de sódio (Na2SO4) e em carbonato de sódio (Na2CO3), presentes nas cinzas. 

Quanto maior a proporção de carbonato nas cinzas, menor é o ponto de fusão 

das mesmas e maior o potencial de incrustação e obstrução de passagem de 

gases nos tubos (LEFEBVRE; SANTYR, 1989).  

 



 53

O formato e a textura do leito são usados como indicadores visuais das 

temperaturas relativas do leito. Temperaturas excessivamente altas produzirão 

uma camada de “smelt” com uma chama brilhante na cor branca, enquanto que 

em temperaturas mais baixas o leito torna-se alto com uma chama menos 

quente na cor laranja opaco. Os principais fatores que afetam essas 

temperaturas são: (i) conteúdo de sólidos secos; (ii) valor de aquecimento de 

sólidos secos; (iii) fluxo de licor negro; (iv) temperatura do ar; (v) distribuição do 

ar; (vi) quantidade de combustível auxiliar. 

 

As variáveis listadas anteriormente contribuirão para a elevação da temperatura 

da fornalha devido ao: (i) aumento do conteúdo de sólidos secos; (ii) aumento do 

valor de aquecimento dos sólidos secos; (iii) aumento do fluxo de licor negro; (iv) 

aumento da temperatura do ar; (v) mudanças na distribuição de ar. Dependendo 

da carga real e do combustível disponível, a temperatura da fornalha também 

pode diminuir devido ao aumento do combustível auxiliar. 

 

Entre essas variáveis, o operador pode controlar apenas algumas: 

• fluxo de licor; 

• temperatura do ar; 

• distribuição do ar; 

• quantidade de combustível auxiliar. 

 

Segundo Lefebvre e Santyr (1989), a faixa ótima para promover a redução 

química e minimizar a emissão de gases é de aproximadamente 980-1150°C na 

superfície do leito. A Figura 11 mostra o efeito da temperatura do leito sobre a 

eficiência de redução e emissões. 

 



 54

 
Figura 11: Efeito da temperatura do leito sobre a eficiência de redução e emissões (LEFEBVRE; 

SANTYR, 1989). 
 

Hyoty e Ojala (1988) constataram uma elevação na eficiência de redução da 

caldeira, de 1,0 a 2,0 %, com o aumento da concentração de sólidos no licor 

alimentado. Isso se deve ao acréscimo na temperatura do leito carbonizado, 

“char bed”, (de 70°C) e na temperatura do fundido ou “smelt”, (40°C) que implica 

em um aumento das taxas de redução dos compostos inorgânicos. Observaram-

se também, um aumento da porcentagem de Na2CO3 nas cinzas com o aumento 

da porcentagem de sólidos no licor negro de 75 a 80 %. Esse aumento foi 

observado, também, por Björklund et al. (1991) e por Jones e Anderson (1993). 

Assim, o aumento do teor de carbonato nas cinzas é um bom indicativo do 

aumento da temperatura no leito carbonizado. 

 

 

 

 

 

 

 

 

 



 55

 

4 MODELAGEM DINÂMICA DA CALDEIRA DE RECUPERAÇÃO 
 
 
4.1 Histórico  
 

Galtung e Williams (1971) desenvolveram um dos primeiros modelos de 

caldeiras de recuperação química. O trabalho deles proporcionou um modelo 

completo de engenharia de combustão na caldeira de recuperação, que levava 

em consideração balanços de massa e de energia. O modelo divide o forno em 

zonas de mistura perfeitas incluindo: Tanque de dissolução de sais, aquecedor 

de licor negro, bicos ejetores de licor, leito de carbono, zonas de ar (primário, 

secundário, terciário), superaquecedores, gerador de vapor e economizador. O 

modelo inclui balanços dinâmicos de massa e de energia para o leito de carbono 

e para as seções de gás. Uma fraqueza do modelo é o fato de que este assume 

um valor fixo para a temperatura de smelt saindo da caldeira, ao invés de 

calcular a temperatura baseado nos princípios básicos. O trabalho deles foi 

complementado por Karnienny (1979) incluindo o modelo de cadeira de 

recuperação Babcock e Wilcox (B&amp;amp;W).  

 

Bhada et al. (1972) desenvolveram um modelo de caldeira de recuperação que 

prediz os níveis de formação de fumaça química e emissão de dióxido de 

sulfuro. O modelo tratou o leito de carbono como uma única zona bem misturada 

e a composição de smelt foi determinada por considerações de equilíbrio. 

Merriam (1980) desenvolveu um modelo em estado estacionário mássico e 

balanços de energia em uma Caldeira de recuperação Kraft para investigar os 

fatores afetando a redução de sódio e sais sulfúricos no leito de carbono da 

caldeira de recuperação. O modelo dividiu a caldeira em sete zonas 

perfeitamente misturadas que levam em conta o leito de carbono e a combustão 

do licor, mas não incluiu o superaquecedor, gerador de vapor e a seção de 

economizadores.  



 56

 

Nos últimos anos um grande esforço foi feito para o desenvolvimento de 

modelos de caldeiras de recuperação baseados em Computational Fluid 

Dynamics (CFD) para melhorar as operações de recuperação e modelagem de 

caldeiras. Tais modelos são computacionalmente intensivos na medida em que 

eles tentam descrever um processo tridimensional através de condições 

turbulentas com assimetrias geométricas, instabilidade de fluxos e interação de 

jatos de licor que complicam a dinâmica e a convergência de uma solução 

numérica. Entretanto, tanto o desenvolvimento de mecanismos de um modelo de 

caldeiras de recuperação química continua sendo um desafio.  

 

Existem também plataformas de simulação dinâmica, como o software CADSIM 

Plus, que permitem ao usuário desenhar processos químicos e executar 

balanços de energia e de massa de forma fácil e eficiente. O CADSIM Plus pode 

ser utilizado para resolver problemas de gargalos no processo, rastrear 

problemas na qualidade do processo e implementar estratégias de controle com 

a finalidade de aumentar a eficiência no processo. 

 

4.2 Modelo Implementado 
 
 

O modelo implementado está baseado na caldeira de recuperação Babcock e 

Wilcox (B&amp;amp;W) desenvolvido por Galtung e Williams (1971) e complementado por 

Karnienny (1979) (Apendice A). Devido à data de desenvolvimento deste 

modelo, existem muitos estudos que não foram considerados. Os estudos mais 

relevantes nos últimos anos foram compilados por Adams et al. (1997) no livro 

“Kraft Recovery Boilers”. Os artigos citados neste livro foram estudados para 

complementar o modelo de Karnienny e dar forma ao modelo final. A Figura 12 

mostra o esquema do diagrama que será utilizado na simulação. Nele estão 

representadas todas as interações entre as diferentes partes da caldeira. A 

seguir analisaremos as  mais importantes equações de cada módulo da caldeira.  



 57

 
 
 
 
 
 
 
 

Gás de 
Conduto 

(A) 

Precipitador 
(1) 

Licor de 
Entrada 

(B) 

Sais de 
Sulfato 

(C) 

Vapor 
(D) 

 
 
 
 

Tanque de 
mistura 

(2) 

Água de 
Alimentação 

(K) 

Fervedor
(10) Queda (I)

Perda de Calor (J)

Superaquecedor
(9) 

Aquecedor 
do Licor 

(3) 

Entrada e 
Pulverização

(4) 

Economizador 
(11) 

Vapor
(H) 

Zona 
Terciária 

(8) 

Zona 
Secundária 

(7) 

Ar Terciário + 
Infiltrado (O) 

Energia de 
Combustão (P) 

Zona 
Primária 

(6) 

Ar Secundário + 
Infiltrado (G) 

Energia de 
Combustão (N) 

Energia de 
Combustão (M)

Ar Primário+ 
Infiltrado (F) 

Parede do Leito 
(5´) 

Chão do Leito 
(5) 

Energia de 
Combustão (L´) 

Fundido
(E) 

Energia de 
Combustão (L) 

 
 

 
Figura 12: Diagrama do processo utilizado na simulação 

 
 



 58

 
 
4.2.1 Licor Negro 
 
 
O licor negro proveniente da área de evaporação é considerado como a soma 

dos seguintes componentes: 

 

 Sólidos de entrada (Xbls): Sólidos obtidos a partir da madeira dissolvida e 

do processo no digestor. 

 Mistura de sais (XNa2SO4): Sulfato de Sódio adicionado no licor. 
 Carbonato (XNa2CO3): Carbonato de sódio adicionado ao licor no 

precipitador e evaporador. 
 Água: A água é removida do evaporador, e parte é adicionada durante o 

aquecimento do licor negro. 
 

A soma das frações parciais do licor negro de ser igual a 1: 

 

1
3242

=+++ blwCONaSONabls XXXX              (4.1) 

 

Os sólidos de entrada são decompostos nos seguintes componentes: Hidrogênio 

( )(blHX ), Sulfato de sódio (
)(
2

bl
SNaX ), Oxigênio (

)(bl
OX ), Carbono (

)(bl
CX ), Sódio (

)(bl
NaX ), 

Enxofre ( )(blSX ), sendo: 

 

1)()()()()()(
2

=+++++ blS
bl

Na
bl

C
bl

O
bl

SNa
bl

H XXXXXX            (4.2) 

 

4.2.2 Aquecedor do Licor 

 
O aquecedor é utilizado para elevar a temperatura do licor negro. O aquecedor 

primário encontra-se no tanque de mistura, e o aquecedor secundário, entre o 

tanque de mistura e o os injetores. Do balanço de energia podemos calcular a 

quantidade necessária de vapor para levar a temperatura do licor ao setpoint. 



 59

 

Balanço de Energia: 

80))]80(()80)((
1 )()()()()(
)(

)( +?++?= hstpw
h

st
h

st
mt

blpbl
mt

bl
pbl

h
bl

h
bl TcHwTcwcw

T

                                      (4.3) 

 

Tst é a temperatura de saturação para o aquecedor, e Hst é o calor de 

vaporização na temperatura Tst.  

 

)]([
)(

1 )()()(
)()()(

)( mt
bl

h
blpbl

mt
blh

bl
h

stpw
h

st

h
st TTcwTTcH

w ?
?+

=                      (4.4) 

A capacidade calorífica do licor negro foi calculada utilizando a seguinte 

equação (ADAMS et al., 1997) 

 

Eswbl CpCpSCpSCp ++?= )()1(                  (4.5) 

 

onde a capacidade calorífica dos sólidos secos (Cps) depende da temperatura 

do licor e a capacidade calorífica em excesso (CpE) depende da temperatura do 

licor e da fração de sólidos no licor.  

TCps 47.41684 +=      ± 8% , T [C] 

2.3))(1)(294930( SSTCp E ??=               (4.6) 

 

4.2.3 Aspersão e Injetor de Licor 
 

No presente modelo do equipamento de Babcox &amp;amp; Wilcox, o licor entra na 

caldeira na altura de 34 ft, logo acima do leito de carvão e fundidos, e abaixo dos 

primeiros bicos de ar secundário.  Neste modelo antigo, a aspersão, é feita em 

bicos oscilantes com pratos que espalham o líquido em uma parte direcionado a 

parede e outra parte direcionada ao chão do leito. Naturalmente espera-se que a 

maior parte da água tenha evaporado até atingir os alvos. Para calcular a fração 



 60

da aspersão 1?  foi necessário conhecer o diâmetro médio das gotas de licor que 

saem dos injetores. Para calcular o diâmetro de gotas foi utilizada a seguinte 

correlação (ADAMS et al., 1997). Está claro que desde o ponto de vista teórico, 

que o diâmetro médio das gotas de licor saindo dos injetores varia com as 

propriedades do licor. Analisando a correlação o diâmetro médio é mais sensível 

ao tamanho do orifício e a velocidade na saída do injetor, ainda que para ambos 

o expoente é consideravelmente menor que 1. 

 

552.0212.0

653.0099.0236.0

88.1
nl

n
media V

D
D

?
??

= onde,                                                              (4.7) 

 

a tensão superficial é igual a ? = 0.08 (N/m), a viscosidade do licor (?) depende 

da viscosidade da água , da temperatura do licor e da fração de sólidos secos. 

(ADAMS et al., 1997) 

 

T
TS

T
TS

Log
w

bl
*

*

656.0679.0 ?
=??

?

?
??
?

?
?
?

    T* (Temperatura de referencia)               (4.8) 

100907.36
1
?

=
Tw

?  para temperaturas de licor ente 333K e 473K.           (4.9) 

 

O diâmetro do injetor (Dn) utilizado no modelo foi de 0.023 metros. 

 

A densidade do licor (?) depende da temperatura do licor negro e da fração de 

sólidos presentes no licor. (ADAMS et al., 1997). 

264

25

)25(1094.1)25(1068.31 ????= ?? TxTxT
?
?

 para T [C] onde,                 (4.10)          

S64999725 +=?                                                                                          (4.11) 

 

A velocidade do licor (Vn), (ADAMS et al., 1997) 



 61

l

v
o

RH
Dnln

PP
CAV

?
?

)(2 ?
=                                                                            (4.12) 

onde as constantes consideradas foram: 

Área do orifício de saída:     ][0004.0 2mAn =  

Coeficiente de descarga dos injetores.     73.0=dC  

Pressão na saída do orifício.                   ][227000 PaP oRH =  

 

onde a pressão de vapor em equilíbrio com o licor foi estimada utilizando a 

equação de Clapeyron. A pressão de vapor depende da temperatura do licor e 

do ponto elevado de ebulição em [C]. Este último coeficiente depende da fração 

de sólidos no licor. 

 

?
?
?

?
?
?

?
?

?
?
?

?
+

?
+

?=
)273(

1
)273(

1
3.4879101235

EBPl
v TT

ExpP                                        

74.250 STEBP =                         (4.13) 

  

Depois de calcular o diâmetro médio das gotas de licor que entram na fornalha, 

agora podemos calcular a fração de aspersão ou “Entrainment”. 

Para calcular esta fração utilizamos a equação de distribuição raiz quadrada-

normal. O desvio padrão do diâmetro médio é uma função que depende só do 

diâmetro médio de gotas com um valor de 20% da raiz quadrada do diâmetro 

médio. (ADAMS et al., 1997). 

 

?
?? ?

?
?

?
?
?
?=

STDN

std
std dN

N
Exp

22
1 2

1
?

?   , onde             (4.14) 

 

2.0

1?
= medio

d

std

D
D

N  é o numero de desvios padrões tomando como referencia o 

diâmetro da gota. O diâmetro da gota utilizada como o tamanho de gota mínimo 



 62

para cair no leito foi: ][0027.0 mDd = , com este diâmetro a fração de licor que 

não cai em direção ao leito fica entorno de 18%. No modelo foi utilizada a função 

(normcdf) de Matlab para calcular a integral da equação (4.14). 

 

Portanto a quantidade do licor que é pulverizado e segue a corrente de gases, é 

dado por: 

 

1
)()( ?spbl

pe
bl ww =                  (4.15) 

 

4.2.4 Leito (Paredes e Chão) 
 
Hipóteses no Leito: 

 

 A água presente no licor, ao alcançar a superfície do leito, evapora 

instantaneamente. 

 Todo o sódio e enxofre presentes nos sólidos permanecem no leito e são 

levados juntamente com o smelt. 

 O leito é considerado homogêneo (perfeitamente misturado). 

 A taxa de reação é proporcional aos produtos da fração mássica do 

carbono e a um termo de Arrhenius. 

 A eficiência na redução do smelt é determinada por um modelo de Bauer 

e Dorland. 

 A deficiência de oxigênio no modelo de Bauer e Dorland é considerada 

igual ao valor teórico nas zonas primárias e secundárias. 

 A temperatura no modelo de Bauer e Dorland é considerada igual a da 

temperatura superficial da camada do leito. 

 A temperatura superficial da camada é determinada através de um 

balanço de energia para o leito total utilizando-se um pseudo volume. 

 A densidade dos leitos é considerada constante. 

 



 63

As reações que ocorrem no leito estão esquematizadas na Figura 13. 

 

 

 

 

 

 

 

 

 

 

 
Figura 13: Reações que ocorrem no Leito 
 
 
Resumindo as equações utilizadas para o cálculo das propriedades do leito, são 

mostrados os cálculos principais: o balanço de energia para o cálculo da 

temperatura do leito e o método para calcular a eficiência de redução. 

 

Evaporação da água do leito: 
)()()( spc

blw
spc

bl
cs

w Xww =              (4.16) 
Balanço diferencial total, assumindo a densidade do leito constante: 

)()()( )( cmspcblts
cb wwV

dt
d

?=?              (4.17) 

[ ])()()( )(1 cmspcbltscb wwVdt
d

?=
?

                 

 

onde a velocidade de reação é dada por: 

??
?

?
??
?

?
+

?=
460

exp)()(
C

Ccb
Ccm

cm

T
XKw

?
                      (4.18) 

Oxigênio total requerido para a combustão: 



 64

??
?

?
??
?

?
+??

?

?
??
?

?
=

C

cm
C

H

Ocm
H

t

M
M

w
M
M

ww 0)()()1(0
2

2
            (4.19) 

 

Disponibilidade de oxigênio no ar primário: 

( ) )1(0)1()1()1(0 . aiaa Xwww +=               (4.20) 
 

Ar de combustão disponível na zona primária: 

)()1(

)1(
)1(

cm
O

t
O

O

ww
w

F
?

=               (4.21) 

 

Concentração de oxigênio na zona primária: 

( )
( )1100

.1100
)1()1(

)1(
2

?+

?
=?

FK
CF

g

O
              (4.22) 

 

A eficiência de redução (?r) é calculada utilizando o diagrama do modelo de 

Bauer e Dorland. (Figura 14), onde estão correlacionadas a temperatura do leito, 

a concentração de O2 e a eficiência de redução. Para o cálculo da redução do 

leito (chão) a concentração de  O2 é calculada considerando a entrada de ar 

primário, para a redução do leito (parede) a concentração depende do ar 

secundário. 



 65

 
Figura 14: Diagrama para calcular a eficiência de redução na caldeira. Modelo de Bauer e 

Dorland 
 
Para resolver o balanço de energia e obter a temperatura do leito, devemos 

calcular as seguintes energias de combustão: 

  

Energia de combustão no leito que reage: 

?
?

?
?
?

?
??
?

?
??
?

?
??=

•

H

OH
OHHrSSblsbls

cm
c

t M
M

HXHXHXwQ
2

2

2

)(
)(

?         (4.23) 

 

Energia de combustão liberada na zona primária e no leito 

??
?

?
??
?

? +
=

••

)1(
0

)()1(
0

)()1(

t

cm
O

c

t

c

w
ww

QQ             (4.24) 

 

Energia de combustão liberada no leito: 



 66

)(
)1(

c
c

t nQQ
••

=                  (4.25) 

 

Energia de combustão liberada sobre o leito na zona primária:   

•••

?= QQQ
c )1()1(

                               (4.26) 

 

Calor proveniente do leito radiado para as paredes: 

( ) ( )( )44
)(

460460 +?+=
•

bCr

cb

b TTAUQ               (4.27) 

 

Balanço de Energia no Leito para calcular a temperatura do leito: 

 

])80()(

))80((

))80)(.((

)80(1([
.

1

)(
)(

)()()()(

)()()(
)(

)()()(

)()()()(
)()()(

42

2

rS
cb

SONaS
cm

C
cb

pg
cm

sm
cm

cm
smsm

cb
p

cm
sm

cb

b

OH
sp

blpwvpw
spc

blw
spc

bl

sp
blpbls

spc
blw

spc
bl

cb
cb

p
cb

p
cbC

HXwTcww

HTcwQ

HTccXw

TcXwQ
cV

T
dt
d

?

?

????

++???

+???+

+??+=

•

•

         (4.28) 

 
4.2.5 Zona Primária e Secundária 
 
Assume-se que toda a água que entra na caldeira é evaporada nas zonas 

primárias e secundárias, porém não ocorre combustão nestas zonas. A 

combustão ocorre apenas na zona terciária. As seguintes equações são válidas 

tanto na zona primária como secundária. Os balanços dos sólidos e gases estão 

descritos em seguida separadamente com todos os seus elementos.  

 

Hidrogênio: 

1
)()()(

1
)()()()()1()1()1()1()1( ].[.

2
)(

2

rXXwr
M

M
XNwwXwwXw blceH

sp
bls

pe
bl

OH

Hsp
blw

spsp
bl

cm
H

a
Ha

g
Hg ia

+?
?
?

?
?
?
?

?
+++=



 67

                                                (4.29) 

 

Oxigênio: 

1
0)()()()()(

1
)()()()()1()1()1()1()1(

.
34

.

.)(.

32

32

42

42

2

r
M

M
X

M
M

XXXw

r
M
M

XNwwXwwXw

CONa

sp
CONa

SONa

Osp
SONa

blmt
O

sp
bls

pe
bl

OH

Osp
blw

spsp
bl

cm
O

a
Oiaa

g
Og

?
?
?

?

?
?
?

?
?
?
?

?
?
?
?

?
+?

?
?

?
?
?
?

?
++

+?
?
?

?
?
?
?

?
+++=

          (4.30) 

 

Enxofre: 

1
)()()()()()1()1( .

42

42

2

2
r

M
M

X
M
M

XXXwXw
SONa

Ssp
SONa

SNa

Sblmt
SNa

blmt
S

sp
bls

pe
bl

g
Sg

?
?
?

?

?
?
?

?
?
?
?

?
?
?
?

?
+

?
?
?

?
?
?
?

?
?
?
?

?
?
?
?

?
+=   (4.31) 

 

Carbono: 

1
)()()()()()1()1( ..

32

32
r

M
M

XXXwwXw
CONa

Csp
CONa

blmt
C

sp
bls

pe
bl

cm
C

g
Cg

?
?
?

?

?
?
?

?
?
?
?

?
?
?
?

?
++=          (4.32) 

 

Sódio: 1
)()()1()1( .. rXwXw spNa

pe
bl

g
Nag =               (4.33) 

 

Nitrogênio: 

1
)()()()()1()1()1()1( ].[)( 1 rXXwXwwXw blmtin

sp
bls

pe
bl

a
NiaaNg ++=                     (4.34) 

 

Portanto a vazão de gases que irão da zona primária para a zona secundária: 

 
)1()1()1()1()1()1()1()1()1()1()1()1()1( . gNg

g
Nag

g
Cg

g
Sg

g
Og

g
Hgg XwXwXwXwXwXww +++++=                       

                                               (4.35) 

  



 68

4.2.6 Zona Terciária 
 
Na zona Terciária ocorre a formação do carbonato de sódio, sendo que se 

assume que o mesmo encontra-se todo na forma de cinzas. As cinzas irão cair 

no economizador e a partir disso serão recirculados até o tanque de mistura. O 

particulado chegará ao precipitador através do gás de conduto. 

 

Hipóteses na Zona Terciária: 

 

 A combustão ocorre na zona terciária. 

 As condições na zona terciária determinam a composição final dos gases 

de combustão e do particulado. 

 A formação do dióxido de enxofre, sulfeto de hidrogênio e monóxido de 

carbono é determinada principalmente pela quantidade de oxigênio em 

excesso e pela turbulência durante a injeção do ar de combustão na zona 

terciária. 

 O carbono disponível no início do processo formará o dióxido de carbono. 

 O hidrogênio presente formará a água. 

 O nitrogênio passará por esta zona sem sofrer modificações. 

 O oxigênio contribuirá para a formação do gás oxigênio. 

 

A seguir, encontram-se o balanço de energia para o cálculo da temperatura do 

gás que entra nos superaquecedores. 

 

Balanço de energia dos gases: 

)80(.)80(.

)80(.)80()( )2()2()2(

????+

+?+?+=

•

•

gpggbiapaia

paagpggggPgg

TcwQTcw

TcwTcwQTcV
dt
d

g
?

          (4.36) 

 

Temperatura do gás: 



 69

80)]80()80()80(

)80.(.[
1

)3()3()3()3()3()3()3(

)2()2()2(
)3(

)3()3()3()3(
)3(

+?+?+?+

?+
+

=
•

b
g

rl
g

biapaiaapaa

gpggg
pgg

g
rl

g
b

g

TUATcwTcw

TcwQ
cwUA

T
          (4.37) 

 

4.2.7 Superaquecedores, Convector, Economizadores e Balão 
 

As etapas dos superaquecedores, convector e economizadores tem o mesmo 

comportamento físico, elas são todas etapas de troca de calor. A única diferença 

é que para os superaquecedores a troca de calor é feita entre o gás que sai da 

fornalha e o vapor, e no caso do convector e economizadores é feita entre o gás 

que sai dos superaquecedores e a água que entra pelos economizadores. 

 

As equações são as seguintes: 

 
• Calor do gás recebido pelos tubos de metal. 

 
)( metalgasmetalmetalgasmetalgas TTAKQ ?= ??                                   (4.38) 

• Calor transmitido pelo metal para o vapor ou água dentro dos tubos dos 

trocadores de calor. 

)( )()()( aguavapormetalmetalaguavapormetalaguavapormetal TTAKQ ?= ??                                     (4.39) 

• Temperatura do gás na saída da etapa de troca de calor. 

?
?
?

?
?
?
?

?
?= ?

gasgas

metalgas
entradasaida Cpm

Q
TgasTgas                                     (4.40) 

 

• Temperatura do vapor na saída da etapa de troca de calor. 

entrada
aguavaporaguavapor

aguavapormetal
saida aguaTvaporCpm

Q
aguaTvapor )()(

)()(

)( +?
?
?

?
?
?
?

?
= ?                      (4.41) 

 

• Temperatura do metal. 

metalmetal

aguavapormetalmetalgas

Cpm
QQ

dt
dTmetal )(?? ?=                                     (4.42) 



 70

 

 

 

Na Figura 15 podemos visualizar as equações no modelo em simulink. Nesta 

figura as equações representam a troca de calor no superaquecedor secundário. 

 

 
 

Figura 15: Representação o fluxo do sistema água-vapor dentro dos trocadores de calor 
incluindo o balão. 

 



 71

 
Figura 16: Sistema de produção de vapor na parte alta da caldeira. 

 
O balão é um sistema em equilíbrio líquido-vapor. Para simular o 

comportamento do balão foi utilizado o modelo dinâmico não-linear de Astrom 

(1999). Este modelo descreve de forma detalhada o comportamento complicado 

de um balão incluindo o nível do balão. As variáveis de estado deste modelo 

são:  

• Pressão do vapor (p) 

• Volume total de água (Vwt) 

• Qualidade do vapor que sai do líquido no balão (?r) 

• Volume do vapor que está abaixo da linha do líquido no balão (Vsd) 

 

As derivadas no tempo das quatro variáveis de estado estão representadas nas 

seguintes equações: 

 

Sf
wt qq

dt
dp

e
dt

dV
e ?=+ 1211             (4.43) 



 72

sSff
wt hqhqQ

dt
dp

e
dt

dV
e ?+=+ 2221            (4.44) 

dccr
r qhQ

dt
d

e
dt
dp

e ?
?

?=++ 3332            (4.45) 

f
c

wf
sd

o
sd

d

ssdr q
h

hh
VV

Tdt
dV

e
dt

d
e

dt
dp

e
?

+?=++ )(444342
??

         (4.46) 

 

onde 

 

wsc hhh ?=   

swe ?? ?=11  

p
V

p
Ve sst

w
wt ?

?
+

?
?

=
??

12  

p
t

CmV
p
h

p
hV

p
h

p
hVe sptt

w
s

s
sst

w
w

w
wwt ?

?
+???

?

?
??
?

?
?
?

+
?
?

+??
?

?
??
?

?
?
?

+
?
?

= ?
?

?
?

21  

 

( ) rvssscrrvwcrww Vp
h

p
hV

p
h

p
h

e ??
?

??
?

?? ??
?

?
??
?

?
?
?

+
?
?

?+???
?

?
??
?

?
?
?

?
?
?

= 1)1(32  

 ( )( )
p
t

CmV
p

Vh sprr
v

rcrsws ?
?

+?
?
?

?++
?

????  

( )( )
r

v
rcwrsr Vhe ?
?

????
?
?

+?+= 133  

??
?

?
??
?

?
?
?

+??
?
?

+
?
?

+
?
?

=
p
t

CmVV
p
h

V
p
h

V
hp

Ve spdwdsd
w

wdw
s

sds
c

s
sd ??

? 1
42  

 

( ) ( ) ??
?

?
??
?

?
?
?

?+
?
?

?+
?
?

?+
ppp

V vws
w

v
s

vrr
?

??
?

?
?

??? 1)1(  

 

( )
p

Ve vrwsr ?
?

?+=
?

???? )1(43  

 



 73

se ?=43  
 
Para calcular as propriedades termodinâmicas foram adicionadas ao modelo as 

tabelas de propriedades para o equilíbrio líquido-vapor que seguem a 

formulação da IAPWS-97. As propriedades foram calculadas utilizando como 

parâmetro a pressão de saturação do sistema. 

 

4.2.8 Tanque de Mistura 
 
Neste tanque são misturados, além de cinzas do precipitador, os sais de 

reposição. Os balanços de massa, na maior parte, são expressos com acúmulo 

em estado dinâmico, por equações diferenciais ordinárias.  

 

Fração de sulfato de sódio no tanque de mistura: 

( ) ( )
42

6

42

6

4242
...... )()6()()6( SONablpe

g
pSONag

g
faSONagscSONablbl XwKXwXwwXVdt

d
?++=?  

(4.2.8.1) 

 

O volume do tanque de mistura é constante, portanto: 

blmi
bl

mi
bl

bl

bl V
ww

== )(
)(

??                  (4.47) 

 

Balanço de massa do licor: 

)(
)( .

mi
blmi

bl

bl
bl ww ?

?
=                            (4.48)  

A equação (4.2.8.1) pode ser escrita como sendo: 

  

( ) ?
?
?

?
?
? += blSONaSONablblSONablbl dt

d
XX

dt
d

VXV
dt
d

???
424242

...           (4.49) 

 



 74

Balanço de massa total no tanque de mistura: 

( ) [ ]
[ ] blscpeg pCONag faCONag

pe
g

pSONa
g

faSONag
mi

blblbl

wwKXXw

KXXwwV
dt
d

?+++

+++=

.

...

)()()6(

)()()6()(

6

32

6

32

6

42

6

42
?

           (4.50) 

 

Fração de sólidos no licor dentro do tanque de mistura: 

( )
( )( ) ]...

.[
1

)()()()()()()6(

)()()(
)()(

)(

32324242

mt
bls

mt
scpe

mt
pCONa

mt
faCONape

mt
pSONa

mt
faSONag

mt
bls

mi
bls

mi
blmt

bl
mt

bl

mt
bls

XwKXXKXXw

XXw
V

X
dt
d

++++?

+?=
?

 

                             (4.51) 

Água: 
)()()()(

3242
1 mtbls

mt
CONa

mt
SONa

mt
blw XXXX ???=                        (4.52) 

 

Por simplicidade, assume-se que a temperatura da saída do tanque é igual à 

temperatura do licor que entra. 

 

blmt TT =                   (4.53)  
 
4.2.9 Precipitador 
 
Os gases provenientes do economizador vão diretamente para o precipitador. O 

particulado fica retido no precipitador e em seguida é encaminhado para o 

tanque de mistura. 

 

O cálculo de vazões no precipitador assume uma relação de eficiência, que deve 

ser de 95 a 99%, dada por: 

 



 75

?
?
?

?

?
?
?

?

??
??=

)1.(
exp1 )()()6(

1

6

32

6

42

g
pCONa

g
pSONag

pe
pe XXw

K
K           (4.54) 

onde peK  é o parâmetro do precipitador 

 

Os balanços de massa são expressos em estado estacionário, ou seja, por 

equações algébricas. Sulfato de sódio como particulado que sai do precipitador 

na corrente de gás é calculado por: 

 
)()6()()( 6

4242
.).1( g pSONagpe

gpr
pSONa

pr
g XwKXw ?=           (4.55) 

 

Carbonato de sódio como particulado que sai do precipitador na corrente de gás 

é calculado por: 

 
)()6()()( 6

3232
.).1( g pCONagpe

gpr
pCONa

pr
g XwKXw ?=            (4.56) 

 

 

Balanço total de gás: 

( )[ ])()()6()( 6
32

6

42
1 g pCONa

g
pSONapeg

pr
g XXKww +?=            (4.57) 

 

A temperatura dos gases é considerada constante: 
)6()( TT pr =                (4.58) 

 

4.2.10  Sistema de Controle Tradicional 
 

Foi implementado um sistema de controle PID em três regiões da caldeira. Este 

tipo de controle tenta manter o máximo de eficiência e segurança na operação 

da caldeira, mas nem sempre consegue desempenhar seu objetivo. Razão pela 

qual o objetivo principal desta tese não é substituir o controle antigo, mas sim 



 76

criar uma camada a mais de controle para garantir um sistema estável sem 

riscos de parada, e o mais importante um sistema sem riscos para os 

operadores.  

 

 

O primeiro controle PID foi implementado para controlar a pressão do balão. 

Este PID recebe a medição da pressão, compara com o set-point estabelecido e 

manipula a entrada de água nos economizadores. (Figura 17) 

 

 
Figura 17: Sistema de controle da pressão no balão 

 
 

Os outros dois controles PIDs estão relacionados entre si. Eles têm como 

objetivo manipular as entradas de ar na caldeira. O primeiro deles manipula a 



 77

entrada de ar primário e secundário para amortecer qualquer variação na 

entrada de sólidos secos na caldeira. O segundo manipula o ar terciário pelo 

exaustor para controlar as emissões pela chaminé.  O controle aplicado é 

proporcional à entrada de sólidos e a entalpia do licor seco. (Figura 18) 

 

 

 

 

 
Figura 18: Sistemas de controle de emissões da caldeira. 

 
 
 
 
 
 
 
 



 78

5 DESENVOLVIMENTO DO SISTEMA MULTI-AGENTE 
 

Este capítulo mostra a metodologia utilizada na construção do sistema multi-

agente na caldeira de recuperação. O sistema desenvolvido é composto por três 

componentes: 

 

1. Modelo Dinâmico da caldeira de recuperação em Simulink™. 

2. Sistema multi-agente na plataforma JAVA™ Agent DEvelopment JADE™. 

3. Comunicação entre o modelo dinâmico em Simulink é o SMA em JADE. 

 

Os próximos sub-capítulos mostram os detalhes da implementação de cada um 

dos componentes do sistema multi-agente na Caldeira de Recuperação. 

 

5.1 Modelo Dinâmico da Caldeira de Recuperação em Simulink™ 
 

O modelo matemático apresentado no capítulo 4 foi implementado no software 

de simulação Simulink™ utilizando as ferramentas de cálculo do software 

Matlab™. A figura 19 mostra o modelo dinâmico da caldeira em simulink. 

 As etapas da caldeira dos modelos são as seguintes: 

1. Precipitador. 

2. Tanque de Mistura. 

3. Aquecedor do licor. 

4. Injetores de licor. 

5. Cálculo da aspersão do licor na entrada da caldeira. 

6. Cálculo da quantidade de licor que é direcionado para cada um dos 

leitos. (Parede e chão). 

7.  Redução no leito-Parede. 

8. Redução no leito-chão. 



 79

9. Cálculo global da eficiência de redução na caldeira e quantidade de 

fundido que sai. 

10. Zona primária. 

11. Zona Secundária. 

12. Zona Terciária. 

13. Dinâmica do balão 

14. Superaquecedores 

15. Convector 

16. Economizadores. 

17. Controle PID da pressão no balão. 

18. Controle PID das emissões na saída da chaminé. 

19.  Comunicação do modelo da caldeira com o sistema multi-agente 

(Redução). 

20. Comunicação do modelo da caldeira com o sistema multi-agente 

(Vapor). 

 

 

 

 

 

 

 

 

 



 80

 
 
 

Figura 19: Modelo dinâmico da caldeira em simulink. 
 

10 

11 

12 

13 

14 15 16 

 1 

 2 

 3  4 

 5 

 6 

18 

 7 

 8 

 9 

19 
17 

20 



 81

 

5.2 Sistema Multi-Agente na Plataforma JAVA™ Agent DEvelopment 
JADE™ 
 

O sistema multi-agente foi implementado usando a plataforma JAVA™ Agent 

DEvelopment (JADE™), plataforma desenvolvida em JAVA™ alinhada a linguagem 

e aos protocolos de comunicação entre agentes da FIPA (Capitulo) 

 
5.2.1 JADE 
 
JADE™ (Java Agent DEvelopment framework) é um ambiente para desenvolvimento 

de aplicações baseado em agentes conforme as especificações da Foundation for 

Intelligent Physical Agents (FIPA) para interoperabilidade entre sistemas multi-

agentes totalmente implementado em Java. Foi desenvolvido e suportado pelo 

(CSELT) da Universidade de Parma na Itália. O principal objetivo do Jade é 

simplificar e facilitar o desenvolvimento de sistemas multi-agentes garantindo um 

padrão de interoperabilidade entre os mesmos através de um abrangente conjunto 

de agentes de serviços de sistema.  

 

Estes agentes de serviços de sistema tanto facilitam quanto possibilitam a 

comunicação entre agentes, de acordo com as especificações da FIPA: serviço de 

nomes (naming service) e páginas amarelas (yellow-page service), transporte de 

mensagens, serviços de codificação e decodificação de mensagens e uma biblioteca 

de protocolos de interação (padrão FIPA) pronta para ser usada. Toda sua 

comunicação entre agentes é feita via troca de mensagens. Além disso, lida com 

todos os aspectos que não fazem parte do agente em si e que são independentes 

das aplicações tais como transporte de mensagens, codificação e interpretação de 

mensagens e ciclo de vida dos agentes. Ele pode ser considerado como um “middle-

ware” de agentes que implementa um framework de desenvolvimento e uma 

plataforma de agentes. Em outras palavras, uma plataforma de agentes em 

complacência com a FIPA e um pacote, leia-se bibliotecas, para desenvolvimento de 

agentes em Java. 

 



 82

De acordo com Bellifemine et al. (2003), o Jade foi escrito em Java devido a 

características particulares da linguagem, como por exemplo, a programação 

orientada a objetos em ambientes distribuídos e heterogêneos. Foram desenvolvidos 

tanto pacotes Java com funcionalidades prontas para uso, quanto interfaces 

abstratas para se adaptarem de acordo com a funcionalidade da aplicação de 

agentes. 

 

5.2.2 Características do JADE 
 

Seguem abaixo algumas características que o Jade oferece para a programação de 

sistemas multi-agentes: 

 

Plataforma distribuída de agentes - JADE pode ser dividida em vários “hosts” ou 

máquinas (desde que eles possam ser conectados via RMI). Apenas uma aplicação 

Java e uma Java Virtual Machine é executada em cada host. Os agentes são 

implementados como threads Java e inseridos dentro de repositórios de agentes 

chamados de containeres (Agent Containers) que provêm todo o suporte para a 

execução do agente. 

 

• Graphical User Interface (GUI) – Interface visual que gerencia vários agentes 

e containeres de agentes inclusive remotamente. (Figura 20) 



 83

 
Figura 20: Graphical User Interface (GUI) 

 

• Ferramentas de Debugging - ferramentas que ajudam o desenvolvimento e 

depuração de aplicações multi-agentes baseadas em JADE. 

 

• Suporte a execução de múltiplas, paralelas e concorrentes atividades de 

agentes - através dos modelos de comportamentos (Behaviours). 

 

• Ambiente de agentes complacentes a FIPA – No qual incluem o sistema 

gerenciador de agentes (Agent Management System - AMS), o diretório 

facilitador (Directory Facilitator - DF) e o canal de comunicação dos agentes 

(Agent Communication Channel - ACC). Todos esses três componentes são 

automaticamente carregados quando o ambiente é iniciado. 

 

• Transporte de mensagens – Transporte de mensagens no formato FIPA-

(ACL) dentro da mesma plataforma de agentes. 

 

• Biblioteca de protocolos FIPA - Para interação entre agentes JADE dispõe de 

uma biblioteca de protocolos prontos para serem usados. 



 84

 

• Automação de registros - Registro e cancelamento automático de agentes 

com o (AMS) fazendo com que o desenvolvedor não se preocupe com isso. 

 

• Serviços de nomes (Naming Service) em conformidade aos padrões FIPA: na 

inicialização dos agentes, estes obtêm seus Globally Unique Identifier (GUID) 

da plataforma que são identificadores únicos em todo o ambiente. 

 

• Integração - Mecanismo que permite que aplicações externas carreguem 

agentes autônomos JADE. 

 

Além das características acima citadas, que por si só já facilitam muito o 

desenvolvimento de sistemas multi-agentes, o Jade possui também algumas 

ferramentas muito úteis que simplificam a administração da plataforma de agentes e 

o desenvolvimento de aplicações.  

 

Em relação à FIPA, o JADE diminui para o programador muitas das especificações 

da FIPA, como: 

 

• Não há a necessidade de implementar a plataforma de agentes: o sistema 

gerenciador de agentes (AMS), o diretório facilitador (DF) e o canal de 

comunicação dos agentes (ACC) são carregados na inicialização do 

ambiente. 

 

• Não há a necessidade de implementar um gerenciamento de agentes: um 

agente é registrado na plataforma no seu próprio construtor, recebendo nome 

e endereço, sem falar na classe Agent que oferece acessos simplificados a 

serviços no DF. 

 

• Não há necessidade de implementar transporte de mensagens e parsing 

(“analisar gramatical” das mensagens): isto é automaticamente feito pelo 

ambiente na troca de mensagens. 

 



 85

5.2.3 O Agente em JADE 
 
A FIPA nada especifica sobre as estruturas internas dos agentes, fato que foi uma 

escolha explícita em conformidade com a opinião de que a interoperabilidade pode 

ser garantida apenas especificando os comportamentos externos dos agentes (Ex: 

ACL, protocolos, linguagens de conteúdo, etc.) (FIPA, 2007). Para o Jade, um 

agente é autônomo e independente do processo, tem uma identidade e requer 

comunicação com outros agentes, seja ela por colaboração ou por competição, para 

executar totalmente seus objetivos (JADE, 2007). 

 

Em outras palavras, pode-se concluir que o Jade é absolutamente neutro no que diz 

respeito à definição de um agente. Ou seja, ele não limita ou especifica que tipo de 

agente pode ser construído pela plataforma. 

 

5.3 Comunicação entre o Modelo Dinâmico em Simulink e o SMA em 
JADE 

A comunicação entre a plataforma de agentes JADE™ e o software de simulação 

Simulink™ foi desenvolvida utilizando o protocolo (TCP/IP). O TCP/IP é o protocolo 

de rede mais usado atualmente. O TCP especifica o formato dos pacotes de dados e 

de reconhecimentos que dois computadores trocam para realizar uma transferência 

confiável, assim como os procedimentos que os computadores usam para assegurar 

que os dados cheguem corretamente. Podemos imaginar uma comunicação TCP 

como um “duto” entre dois computadores ligados a duas portas. Os dados fluem 

numa direção qualquer pelo duto. Uma conexão exige endereços nas duas 

extremidades da conexão e uma porta de comunicação. Na terminologia do TCP/IP, 

há um soquete em cada lado da conexão.  

Para ter uma comunicação via TCP/IP necessitamos de um “Cliente” e de um 

“Servidor”. O Servidor é o extremo da comunicação que inicia a comunicação 

utilizando uma porta da rede como entrada. O “Cliente” procura esta porta e se 

conecta ao “Servidor”.   



 86

Por ser uma plataforma mais flexível para programar, o “Servidor” foi desenvolvido 

em JAVA™, e o “Cliente” foi configurado do lado do Simulador da Caldeira utilizando 

a ferramenta “TCP/UDP/IP Toolbox" desenvolvida por Peter Rydesater (2006)         

(Figura 21) 

 
Figura 21: Arquitetura de comunicação entre o SMA em JADE e o modelo dinâmico da 

caldeira em Simulink. 
 

 

 

 



 87

6 RESULTADOS E DISCUSSÕES 

 

6.1 Validação do Simulador da Caldeira em Simulink™   
 
Dividiu-se a validação do modelo da caldeira de recuperação química em duas 

partes: a primeira parte avaliou o modelo comparando as variáveis em estado 

estacionário do simulador com os dados obtidos pelo modelo original. 

A segunda avaliou a resposta do modelo, perturbando diferentes condições de 

operação, comparando com a resposta lógica de uma caldeira real. 

 

 
6.1.1 Validação do Estado Estacionário 
 

Para que o processo de validação do modelo tenha credibilidade, foi mantida a 

maioria das condições inicias do modelo original. Tem-se a lista de variáveis na 

tabela 1. A única diferença entre os dois modelos está na concentração dos sólidos 

secos. No modelo Simulink não foi considerada a presença de inertes no licor negro. 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 



 88

 

Tabela 1 - Condições iniciais para validar o estado estacionário 

 

 

A tabela 2 mostra os valores obtidos no estado estacionário no modelo Simulink. 

Estes valores foram comparados com os do modelo original e foi calculado o desvio 

percentual em cada uma das variáveis e também o desvio global. 

 

 

 

 

 

 

 

 

Ar Unidades 
Modelo 
Original 

Modelo 
Simulink 

Temperatura do ar (Ambiente) C  26.67 26.67 
Umidade relativa %  60.00 60.00 
Pressão barométrica Pa  101352.00 101325.00 
Oxigênio no ar seco %  23.15 23.00 
Nitrogênio no ar seco % 76.85 77.00 
Temperatura de referência para os balanços de 
energia C  26.67 26.67 
Temperatura do ar de combustão C 134.44 134.44 

Licor Negro    
Sólidos secos % 63.00 63.00 
Na2SO4 % 0.00 0.00 
Na2CO3 % 0.00 0.00 
Água % 37.00 37.00 
Temperatura do licor na entrada do tanque de 
mistura C 93.33 93.33 
Temperatura do licor na entrada dos injetores C 104.44 104.44 
Na2SO4 na entrada do tanque de mistura Ton/d 23.11 23.11 

Sólidos Secos Unidades   
Na % 19.50 19.50 
C % 37.00 37.00 
H % 3.50 3.50 
S % 5.90 5.90 
O % 33.30 33.30 
Inertes % 0.80 0.00 
Na2S % 0.00 0.08 
Entrada de sólidos secos no tanque de mistura Ton/d 1102.50 1102.50 

Geração de vapor Unidades   
Temperatura da água (entrada economizador) C 137.77 137.77 
Pressão do balão Mpa 3.66 3.66 



 89

 

Tabela 2 - Variáveis do processo em estado estacionário 

Variáveis  Unidades 
Modelo 
Original 

Modelo 
Simulink % Desvio 

Temperatura do gás na saída 
(Economizador)  C 212.70 245.20 15.28 
Temperatura da água (saída 
economizador) C 221.11 252.50 14.20 
Temperatura do vapor (saída do 
Superaquecedor) C 379.44 470.20 23.92 

Temperatura no balão C 245.00 245.10 0.04 
Concentração de CO2 no gás de 
saída Ton/Tonss 1.24 1.22 1.44 
Concentração de H2S no gás de 
saída ppm 4.00 5.45 36.25 

Eficiência redução %  84.00 90.05 7.20 

Vazão de vapor Ton/d 4402.00 2552.00 42.03 

Produção total de fundido Ton/d 477.39 447.30 6.30 

Vazão de gás Ton/d 6982.72 6068.00 13.10 

   
Desvio 
médio 15.98 

 

 

Analisando os resultados, a variável que teve um desvio maior foi a vazão de vapor. 

O desvio da vazão foi de 42.03%. A diferença era esperada devido ao fato do novo 

modelo de geração de vapor ter sido atualizado adicionando-se uma nova dinâmica 

no balão, a qual no modelo original, foi desprezada.  Quando a dinâmica do balão 

não é considerada, o nível calculado do balão é menor. Isto se deve porque não é 

considerada a quantidade de vapor que está presente na fase liquida do equilíbrio 

em forma de bolhas. Como no modelo Simulink este fenômeno é considerado, a 

quantidade necessária de água requerida cai para diminuir o nível e manter-lo 

constante. 

 

Analisando o resto das variáveis podemos concluir que o modelo Simulink apresenta 

valores aceitáveis com um desvio médio aproximado de 16% nas variáveis 

selecionadas. Veja o resultado gráfico do estado estacionário das variáveis do 

processo mais significativo nas figuras 23, 24 e 25 

 



 90

 
Figura 22: Estado estacionário (Primeiro grupo de variáveis) 

 

 
Figura 23: Estado estacionário (Segundo grupo de variáveis) 

 

 

 



 91

 
Figura 24: Estado estacionário (Terceiro grupo de variáveis) 

 

 
Figura 25: Estado estacionário (Quarto grupo de variáveis) 

 

 

 

 



 92

6.1.2 Validação da Resposta do Modelo à Perturbações 
 

Para validar a resposta do modelo foram feitas simulações perturbando o sistema, 

alterando diversas variáveis críticas da caldeira. As variáveis escolhidas com 

perturbações foram as seguintes: 

• Entrada de licor negro. 

• Porcentagem de sólidos secos no licor negro. 

• Temperatura do licor negro na entrada da caldeira. 

• Temperatura no ar primário, secundário e terciário. 

 

6.1.2.1 Resposta a Perturbações ao Aumento na Entrada de Licor Negro 
 

Foram simuladas perturbações na entrada de licor negro no tanque de mistura (Ver 

figura 26). Com o aumento da entrada de licor a resposta lógica esperada seria o 

esfriamento do leito devido ao excesso de carbono caindo no leito. Como a vazão de 

ar primário aumenta acompanhando a quantidade de sólidos secos que entram na 

caldeira, sistema de controle Capitulo 4.2.10, o efeito no leito não será tão marcante, 

mas ainda assim a redução da caldeira cai, por mais que a temperatura do leito 

aumente. Como a redução cai, o aumento na saída de fundido não aumenta na 

mesma proporção que a entrada de licor. A temperatura do leito aumenta porque o 

ar primário aumenta. O aumento do gás na saída do economizador é esperado e 

também o aumento nas emissões de sais de sulfato na chaminé.  

 

O ponto positivo é o aumento na produção e na temperatura do vapor devido ao 

aumento na quantidade de material combustível dentro da fornalha. O efeito ao 

diminuir a entrada de licor é exatamente o oposto. A redução aumenta e a produção 

de vapor cai. 

 

 



 93

 
Figura 26: Resposta do modelo a perturbações na entrada de licor negro. 

 
 
6.1.2.2 Resposta a Perturbações na Fração de Sólidos Secos no Licor 
 

A perturbação que mais influencia no desempenho da caldeira é a fração de sólidos 

secos. O comportamento esperado para o aumento desta variável é um aumento de 

sólidos combustíveis no leito, causando aumento na redução (Figura 27).  Com o 

aumento dos sólidos no licor, aumenta a viscosidade do licor majorando  também o 

diâmetro médio de gotas do licor que entram na fornalha. Isto diminui a quantidade 

de licor que é arrastado pelos gases na fornalha. Outra conseqüência é o aumento 

na temperatura dos gases que sobem pela caldeira, aumentando a produção de 

vapor para manter a pressão do balão constante. 



 94

 

 
Figura 27: Resposta do modelo a perturbações na fração de sólidos secos. 

 

 
6.1.2.3 Resposta ao aumento na temperatura do licor negro 
 
Outra perturbação simulada foi a variação na temperatura do licor. Esta perturbação 

afeta de forma imediata a diminuição do tamanho das gotas que entram na fornalha, 

aumentando a quantidade de licor que é arrastado pelos gases que sobem na 

fornalha. Aumentando a fração de “entraiment” cresce a quantidade de material 

combustível na zona terciária, incrementando a taxa de combustão, diminuindo a 

concentração de oxigênio na zona terciária e tendo como resultado um aumento na 

formação de CO, SO2 e H2S. 

 

Ao mesmo tempo em que a temperatura do licor aumenta, menos água alcançará o 

leito e menos calor é requerido para evaporação, trazendo como conseqüência um 



 95

aumento na temperatura do leito, liberando mais combustível. Este fato favorece a 

combustão, mas não necessariamente favorece a eficiência da redução. Analisando 

a Figura 14 do capitulo 4 podemos confirmar que para temperaturas do leito 

superiores a 2061°F, um aumento na temperatura mantendo a mesma quantidade 

de ar diminui a eficiência. Na simulação feita para validar o efeito da temperatura do 

licor, a temperatura do leito supera esta faixa crítica, por isso temos uma queda na 

redução. 

 

 
Figura 28: Resposta do modelo a perturbações na temperatura de entrada do licor negro. 

 

6.1.2.4 Resposta ao Aumento na Temperatura do Ar Primário, Secundário e 
Terciário 

 

Neste modelo da caldeira a variação na temperatura do ar que entra na caldeira é 

uma variável importante no controle da eficiência de redução. Aumentando a 

temperatura do ar primário e secundário, cresce a vazão e a temperatura dos gases 

que sobem pela fornalha.  Analisando os gráficos da resposta se pode perceber o 



 96

efeito da temperatura do ar ao aumentando a vazão de ar terciário, o qual tem uma 

influencia indireta sobre a eficiência de redução. 

 

 
Figura 29: Resposta do modelo a perturbações na temperatura do ar que entra na caldeira. 
 

 

 

6.2 Tipos de Agentes Implementados no SMA 
 

O sistema multiagente da caldeira de recuperação está composto por dois agentes 

para cada variável a ser monitorada. O agente de controle é o agente de 

comunicação. O agente de controle reconfigura o sistema quando a variável que ele 

monitora entra em falha. O agente de comunicação faz a ponte entre o sistema de 

controle e a simulação (Simulink™). 

 

Os possíveis cenários de controle são apresentados baseados na interação entre os 

agentes. A principal iteração do sistema é a negociação entre os agentes. Esta 

negociação será detalhada juntamente com a estratégia para alcançar a 



 97

reconfiguração do sistema. No final deste subcapitulo será dado um exemplo real de 

negociação. 

 

6.2.1 Agente de Controle 
 

Este tipo de agente é a base do MAS da caldeira. Foram desenvolvidos dois agentes 

de controle: 

1. Agente Redução 

2. Agente Vapor 

 

Cada agente cuida do desempenho de sua variável. O “Agente Redução” monitora a 

porcentagem de redução da caldeira, e o “Agente Vapor” monitora a produção de 

vapor da caldeira.  

 

O principal objetivo do agente de controle é informar aos agentes vizinhos da falha 

na variável que ele monitora.   

 

Os agentes que receberam esta mensagem respondem indicando qual são as 

possíveis ações de controle. O agente que responde sabe que se esta ação for 

aceita ele pode compensar o possível efeito que eventualmente venha a causar 

sobre a variável que ele monitora, mas isto não é obrigatório. Quando o agente 

decide qual das opções que recebeu é a melhor, responde a todos os agentes 

alertando da próxima perturbação no sistema.  

 

Foram analisados diferentes tipos de protocolos FIPA e o protocolo de comunicação 

escolhido para este tipo de agente foi o protocolo “FIPA-Contract-Net-Interaction-

Protocol” .  

 



 98

 
Figura 30: Protocolo de comunicação “FIPA-Contract-Net-Interaction-Protocol” 

 

 

No protocolo Contract-net interaction protocol, um agente (Iniciador) deseja que 

alguma ação seja tomada por um ou mais agentes (Participantes) e estabelece as 

preferências da negociação. Para cada chamada de um agente (CPF, Call for 

proposal) os participantes podem enviar uma proposta (PROPOSE) ou podem 

simplesmente negar (REFUSE) o pedido de ajuda. Depois a negociação continua 

com os participantes que enviaram uma proposta. Quando o iniciador recebe as 

propostas, estas são avaliadas. A melhor das propostas ganha e o agente 

participante recebe uma mensagem de aceitação (ACCEPT-PROPOSAL), os 

 Participante Iniciador 



 99

participantes que tiveram suas propostas descartadas recebem uma mensagem de 

rejeição (REJECT-PROPOSAL). Depois o participante se compromete a efetivar a 

proposta e envia uma mensagem ao iniciador, fechando o processo de negociação. 

 

6.2.1.1 Mensagens trocadas no processo de negociação 
 

A FIPA estabelece um conjunto de mensagens pré-estabelecidas para o protocolo 

Contract Net Interaction Protocol. A estrutura de cada mensagem é a apresentada 

junto com as mensagens do processo de negociação utilizado no MAS da caldeira 

de recuperação. 

 

Mensagem ACL do tipo CPF: Esta mensagem é enviada pelo agente iniciador para 
controlar a variável que ele monitora. Para enviar esta mensagem e iniciar uma 

negociação entre agentes, o agente tem que receber uma mensagem do tipo 

REQUEST. Esta mensagem é enviada pelos agentes de comunicação quando uma 

falha é detectada no processo (Ver figura 31). Qualquer um dos agentes (Redução 

ou Vapor) pode enviar este tipo de mensagem. O conteúdo da mensagem CFP 

informa o status de cada uma das variáveis que interessam ao sistema multiagentes. 

As variáveis que são enviadas no conteúdo da mensagem CFP são as seguintes: 

 

• Porcentagem de redução 

• Produção de vapor 

• Temperatura do licor 

• Temperatura do Ar primário. 

• Vazão de licor na entrada da caldeira 

 

A estrutura da mensagem CFP é a seguinte: 

 

(cfp 

:sender Agente de Controle_Iniciador 

:receiver Agente de Controle_Participante 

:content (%redução,Produção de vapor,Temperatura do licor,Temperatura do AR, 

Vazão de licor na entrada da caldeira) 



 100

:protocol FIPA-Contract-Net 

:language fipa-sl 

) 

 

 
Figura 31: Exemplo de mensagem do tipo CFP enviada pelo agente “ReduçãoAgente” ao 

“VaporAgente”. 
 

Mensagem ACL do tipo REFUSE: Esta mensagem é enviada pelos agentes 
participantes quando não conseguem enviar uma proposta. No SMA da caldeira os 

dois agentes são obrigados a responder cada CFP que for enviado a eles. A 

estrutura da mensagem REFUSE é a seguinte: 

 

(refuse 

:sender Agente de Controle_Participante 



 101

:receiver Agente de Controle_ Iniciador 

:protocol FIPA-Contract-Net 

:language fipa-sl 

) 

 

Mensagem ACL do tipo PROPOSE: Estas mensagens contém a proposta enviada  
pelo agente “Participante” o agente envia dentro do mesmo conteúdo desta 

mensagem várias propostas. Em outras palavras, cada agente consegue manipular 

mais de uma variável. O conteúdo depende do agente. Se for o “AgenteVapor” a 

proposta contem o novo setpoint para a “Temperatura do Licor” é a “Temperatura do 

Ar”. Se o agente que tiver enviando a proposta for a “Agente Redução” o conteudo 

da mensagem é o setpoint da “Entrada do Licor”. A estrutura da mensagem 

PROPOSE é a seguinte: 

 

 (propose 

:sender Agente de Controle_Participante 

:receiver Agente de Controle_ Iniciador 

:content (SP Temperatura do licor, SP Temperatura do Ar) ou (SP Entrada do licor)  

:protocol FIPA-Contract-Net 

:language fipa-sl 

) 

 

A Figura 32 mostra uma proposta enviada pelo agente “VaporAgente” ao agente 

“ReduçãoAgente” contendo duas opções. O primeiro valor corresponde à variável 

“Temperatura do licor” é o segundo à “Temperatura do Ar”. 

 

 



 102

 

Figura 32: Exemplo de mensagem do tipo PROPOSE enviada pelo agente “VaporAgente” ao 
agente “ReduçãoAgente”. 

 

 

 

Mensagem ACL do tipo REJECT PROPOSAL e ACCEPT PROPOSAL: O agente 
iniciador avalia a proposta. Se a proposta não for selecionada, o agente envia a 

seguinte mensagem.  

 

 (reject_proposal 

:sender Agente de Controle_Iniciador 

:receiver Agente de Controle_Participante 

:protocol FIPA-Contract-Net 

:language fipa-sl 

) 

 



 103

Se o agente aceitar a proposta, transmite a seguinte mensagem ao participante. 

 

 (accept_proposal 

:sender Agente de Controle_Iniciador 

:receiver Agente de Controle_Participante 

:content (valor da proposta 1 aceita, NO) ou (NO, valor da proposta 2 aceita) 

:protocol FIPA-Contract-Net 

:language fipa-sl 

) 

 

No sistema multi-agente da caldeira o agente iniciador não rejeita propostas do 

único participante, ele é obrigado a escolher uma das opções que estão dentro do 

conteúdo da mensagem PROPOSE. Se o sistema tiver mais de dois agentes este 

critério no protocolo tem que ser considerado. A figura 33 mostra um exemplo da 

mensagem ACCEPT_PROPOSAL enviada pelo agente “ReduçãoAgente” ao 

“VaporAgente”. 

 

 



 104

 

Figura 33: Exemplo de mensagem do tipo ACCEPT_PROPOSAL enviada pelo agente 
“ReduçãoAgente” ao “VaporAgente”. 

 

 

Mensagem ACL do tipo FAILURE: No SMA da caldeira o agente que realiza a 
ação é o mesmo que iniciou a negociação. Por esta razão não existe a possibilidade 

do agente participante falhar na execução da ação aceita pelo iniciador.  

 

Mensagem ACL do tipo INFORM: O participante que recebeu a mensagem com a 
sua proposta aceita deve enviar uma mensagem ao iniciador para informar que pode 

executar o controle da proposta aceita e que pode dar por finalizada a negociação. 

O agente participante só envia o valor da proposta aceita no campo “Content” ou 

conteúdo da mensagem. Para que o agente iniciador reconheça qual das variáveis 

esse valor representa, o agente participante escreve dentro do campo “Ontology” o 



 105

nome da variável (TAR para Temperatura do AR e TLICOR para Temperatura do 

licor). Esta mensagem tem a seguinte estrutura: 

 
 (inform 

:sender Agente de Controle_Participante 

:receiver Agente de Controle_ Iniciador 

:content (valor da proposta aceita) 

:Ontology (TAR ou TICOR) 

:protocol FIPA-Contract-Net 

:language fipa-sl 

) 

 

A figura 34 mostra uma mensagem do tipo INFORM enviada pelo agente 

“VaporAgente” ao agente “ReduçãoAgente”.  

 



 106

 

Figura 34: Exemplo de mensagem do tipo PROPOSE enviada pelo agente “VaporAgente” ao 
agente “ReduçãoAgente”. 

 

Uma troca de mensagem com sucesso pode ser analisada na Figura 35. A 

plataforma JADE de agentes tem um agente, chamado de “sniffer”, que rastreia 

todas as trocas de mensagens entre os agentes. Neste exemplo quem inicia a 

negociação utilizando o protocolo “FIPA-Contract-Net-Interaction-Protocol” é o 

agente “ReduçãoAgente”. Ele monta uma mensagem CFP que será enviada ao 

agente “VaporAgente” com o conteúdo da mensagem enviada pelo agente 

“TCP4000”. O agente “VaporAgente” recebe os valores das cinco variáveis e 

devolve duas propostas de setpoint, uma com uma possível temperatura do licor e 

uma outra com a temperatura do ar. O agente “ReduçãoAgente”  avalia as propostas 

e aceita uma das duas. O agente “VaporAgente” recebe a mensagem 

(accept_proposal) a variável aceita pronta para ser enviada à simulação, mas antes 



 107

ele tem informa ao agente “ReduçãoAgente” que pode fechar a chamado finalizando 

o protocolo de comunicação. Uma vez fechada a comunicação o agente 

“ReduçãoAgente” envia uma mensagem ao agente “TCP4000” devolvendo os 

valores que serão escritos no processo. Estas variáveis são a “Temperatura do Ar”  

a  “Entrada do Licor” e a “Temperatura do Licor” que são as únicas variáveis que 

podem ser modificadas através de uma negociação entre os agentes. No caso em 

que uma destas variáveis não tenha sido alterada pelos agentes o valor que retorna 

ao modelo, é o mesmo que chegou na mensagem original. 

 

 

 

Figura 35: Troca de mensagens registradas pelo Agente “Sniffer” 
 

6.2.1.2 Comportamento lógico dos agentes 
 

Para avaliar as propostas recebidas pelos agentes foi adicionado um 

comportamento lógico para considerar a melhor solução possível na hora de receber 

as propostas.  

 



 108

Depois de ter analisado a resposta a diferentes perturbações foi possível entender o 

comportamento dinâmico da caldeira e a influência das três variáveis que os agentes 

manipulam. Na análise concluímos que ao aumentar a temperatura do licor, a 

eficiência de redução diminui, e que este aumento não teve um impacto considerável 

na produção de vapor.  Ao aumentar a temperatura do ar o efeito foi contrario, a 

eficiência de redução aumentou e também não foi considerada uma interferência na 

produção de vapor. Estas variações foram ponderadas para que os agentes tenham 

uma noção do peso que cada uma das variáveis tem sobre os indicadores de 

produção da caldeira. Para um aumento de 1% na temperatura do licor a redução 

caiu 0.6% e para um aumento de 1% na temperatura do ar 0.25%. Agora, 

analisando a diminuição das temperaturas, os pesos nas respostas foram: para uma 

queda de 1% na temperatura do licor a eficiência na redução aumentou em 0.71% 

em para uma queda de 1% na temperatura do ar a redução aumento em 0.2%. Esta 

informação é útil ao agente “VaporAgente” que faz a proposta ao pedido do agente 

“ReduçãoAgente”. 

 

O agente “ReduçãoAgente” precisa de uma referência de como avaliar uma situação 

quando o sistema tiver uma falha na produção de vapor. O resultado da análise da 

resposta do sistema a perturbações na entrada de licor preto apontam uma forte 

influência não só na geração de vapor mas também na eficiência de redução. Um 

aumento de 1% na entrada de licor aumenta em 40 ton/d a produção de vapor e 

diminui a eficiência em 0.2%. Uma queda de 1% na entrada de licor diminui também 

em 40 ton/d. 

 

Outro raciocínio lógico do agente “ReduçãoAgente” e acionado quando o agente 

recebe a mensagem PROPOSE. Ele tem que escolher qual das duas propostas está 

dentro dos limites preestabelecidos para obter melhor desempenho na caldeira. Para 

a temperatura do licor a proposta tem que estar entre [100-125]C e para a 

temperatura do ar os limites são [125-200]C (ADAMS et al., 1997) 

 
 



 109

6.2.2 Agente de Comunicação 
 
A principal função do agente de comunicação é a de transmitir os valores do 

processo quando for preciso a intervenção dos agentes. O agente de comunicação 

que informa ao agente “Redução Agente” é o agente “TCP4000”. O Agente 

encarregado de informar o “Vapor Agente” é o agente “TCP4001”.  Estes agentes 

utilizam uma tecnologia de comunicação no protocolo TCP para se comunicar com a 

plataforma de simulação (Simulink™).   

 

 
6.2.2.1 Comunicação Cliente-Servidor 
 

Servidor 
 

As portas utilizadas na comunicação entre as duas plataformas foram as portas 

4000 e 4001. O agente servidor que é o responsável por passar as informações de 

falhas para o “Redução Agente” é o agente “TCP4000”. Este agente é um agente 

soquete que abre uma comunicação pela porta 4000 e aceita qualquer cliente que 

tente uma comunicação. O Agente encarregado de informar o “Vapor Agente” é o 

agente “TCP4001”.  Uma outra função e devolver ao simulador a ação que os 

agentes escolheram para solventar a situação de falha. Uma vez que ele envia uma 

mensagem de “REQUEST” ao agente de controle, ele fica no aguardo de uma 

resposta “INFORM” com a ação de controle.  

 
Cliente 

O “Cliente” foi configurado do lado do Simulador da Caldeira utilizando a ferramenta 

“TCP/UDP/IP Toolbox" desenvolvida por Peter Rydesater (2006). Esta ferramenta 

não faz parte da ferramenta MATLAB, foi uma “toolbox” que precisou ser compilada 

para ter uma serie de comandos que comunicam via TCP/IP.  

O comando utilizado para abrir uma comunicação com qualquer servidor utilizando 

uma porta especifica é o seguinte: 

con1=pnet('tcpconnect','hostname',port); 



 110

 

onde o parametro “hostname” é o endereço IP da máquina onde está o servidor e o 

parametro “port” é a porta de comunicação que o Servidor utiliza para disponibilizar 

os seus dados. Antes de iniciar o sistema multi-agente é preciso primeiro adicionar 

os agentes de comunicação em JADE para depois através do TCP toolbox criar uma 

conexão Cliente-Servidor. A figura 36  mostra as linhas de programação utilizadas 

para comunicar com os agentes de comunicação TCP4000 e TCP4001. 

 
 

 
Figura 36: Comandos da ferramenta TCP Toolbox para abrir um canal de comunicação com a 

plataforma de agentes. 
 

Depois de ter feito a conexão TCP com os agentes de comunicação o próximo 

passo foi adicionar um modulo de envio de mensagens entre as variáveis da caldeira 

a serem monitoradas e os agentes servidores. O comando da ferramenta TCP 

utilizado para enviar mensagens foi também o comando “pnet”. 

 

pnet(con1,'printf',ACLMSG,'noblock'); 
 

onde o parâmetro ACLMSG é o texto com a mensagem a ser enviada. Dentro do 

programa de envio de mensagens existe uma condição para solicitar a ajuda dos 

agentes. Para o agente “ReduçãoAgente” o critério de falha é uma valor de 

eficiência de redução abaixo de 90%. Para o agente “AgenteVapor” o limite baixo de 

produção é de  2700 ton/d. Por exemplo, a seguinte mensagem foi enviada pelo 

agente “ReduçãoAgente” quando a redução caiu para 88.0138%. 



 111

 

(REQUEST  :receiver  (set ( agent-identifier 
:nameReducaoAgente@song04:1099/JADE ) )   
:content  "88.0138 3174.2518 104.44 134.44 1750"  ) 
 

Esta mensagem foi a mesma da Figura 31 ja convertida em uma mensagem CFP 

pelo agente “ReduçãoAgente”. Só que antes de chegar nas mãos do agente de 

controle esta mensagem teve que passar pelo agente de comunicação, neste caso 

pelo agente “TCP4000”. Esta mensagem foi enviada pelo comando “pnet” como tipo 

“REQUEST” e foi retransmitida tambem como tipo “REQUEST” pelo agente 

“TCP4000”, (ver Figura 37). No apendice A estão  as funções em Matlab que fazem 

a ponte entre o agentes de comunicação é a simulação dinâmica. 

 

 
Figura 37: Mensagem de REQUEST re-encaminhada pelo agente “TCP4000” 

 



 112

Para fechar o ciclo de comunicação o agente de comunicação envia a ação de 

controle dentro de uma mensagem do tipo “INFORM”. Esta mensagem chega no 

simulink e é lida por um outro modulo (Função “ControlAgrupado” do Apendice A), 

agora é um modulo para receber mensagens e traduzir essa informação em acão. O 

comando utilizado é o seguinte: 

 

str = pnet(con1,'read',[tamanho],'view','noblock'); 
  

Segue é um exemplo das mensagens “INFORM” que são enviadas pelos agente de 

comunicação. O parametro “content” encaminha os valores das tres variaveis 

manipuladas do sistema de controle multi-agente. 

 

(INFORM 
 :sender  ( agent-identifier :name ReducaoAgente@song04:1099/JADE  :addresses 
(sequence http://192.168.0.90:7778/acc ) :X-JADE-agent-classname 
SocketProxyAgent.Reducao ) 
 :receiver  (set ( agent-identifier :name tcp4000@song04:1099/JADE  :addresses 
(sequence http://192.168.0.90:7778/acc ) :X-JADE-agent-classname 
SocketProxyAgent.SocketProxyAgent ) ) 
 :content  "134.44 1750 101.21317534222223"  
 :reply-with  tcp4000@song04:1099/JADE1182959198550  :in-reply-to  
tcp4000.tcp4000-ClientConnection-Thread-10.1182959198315 ) 
 

6.3 Resultados da Caldeira Controlada pelo Sistema Multi-Agente 
 

Para validar o controle inteligente feito pelo Sistema Multi-agente foram realizadas 

as seguintes bateladas de testes: 

 Teste para alcançar o estado estacionário com as novas restrições ditadas 

pelos agentes de controle. 

 Resposta do controle à perturbações na entrada de sólidos secos. 

 

6.3.1 Estado Estacionário controlado. 
 

O resultado esperado é o controle efetivo para manter os níveis de produção da 

caldeira perto dos limites estabelecidos. Os limites de controle monitorados pelos 

agentes de controle foram os seguintes. 

 



 113

 Para a produção de vapor o nível mínimo de produção foi de 2700[Ton/d]. 

 Para a eficiência de redução a restrição mínima foi de 90%. 

 

Para níveis abaixo dos valores mencionados, o status do sistema entra em falha e 

os agentes são acionados para levar o sistema de volta ao normal. Para comparar 

com a resposta do sistema  foram mantidas as mesmas condições iniciais.  

 

 

Foi considerado um tempo inicial na simulação antes de colocar os agentes para 

monitorar suas variáveis. Este tempo garante que o sistema estará no estado 

estacionário original antes de estabelecer o primeiro contato com os agentes.  Este 

tempo de espera dos agentes foi de 1000 segundos para o agente “ReduçãoAgente” 

e de 1100 segundos para o agente “VaporAgente”. Os resultados deste teste podem 

ser vistos nos gráficos de resposta ao controle multi-agente. 

 

 
Figura 38: Resposta das variáveis controladas (%Redução e Produção de Vapor) 

 
 

A seguir encontra-se a sequência de negociações entre os agentes para alcançar o 

estado estacionário nos valores estabelecidos como limites de operação. Um total 



 114

de 36 mensagens foi enviado para chegar ao novo estado estacionário.O agente 

“sniffer” mostra esta sequência (Figura 39) 

 

 
Figura 39: Sequência de mensagens entre todos os agentes (Agentes de controle e agentes de 

comunicação) 
 
 



 115

 
 
 
 
 

• Os primeiros 1000 segundos não tiveram monitoramento dos agentes para 

permitir que o sistema chegasse ao estado estacionário (%Redução = 

88.0137 e Vapor=2536.03). 

 

• Exatamente no momento que o agente “ReduçãoAgente” entra no sistema, é 

detectada uma redução abaixo de 90% e é enviada uma mensagem de 

REQUEST para o agente “TCP4000”. 

 

• O Agente “TCP4000” encaminha esta mensagem encapsulada em uma outra 

mensagem “REQUEST” para o agente de controle “ReduçãoAgente”.  

 

• O Agente “ReduçãoAgente” monta uma mensagem do tipo CFP para iniciar 

uma negociação com o agente “VaporAgente”. 

 

• Depois de negociar chega-se à conclusão de que a melhor estratégia é 

diminuir a temperatura do licor para “101.21301288000001” 

 

• Este valor é enviado junto com as outras duas variáveis que não foram 

alteradas. O formato do conteúdo tem as variáveis na seguinte sequência 

“Temperatura do ar , Entrada de licor, Temperatura do licor”. Esta mensagem 

envia os valores “134.44 1750 101.21301288000001” para a plataforma de 

simulação onde cada um destes valores é escrito nas variáveis manipuladas 

do sistema de controle multi-agente. 

 

• A resposta imediata é o aumento na redução para um valor acima de 90%. 

 

• Depois de passados 100 segundos o agente “VaporAgente” entra no sistema, 

e recebe uma mensagem indicando que a produção de vapor tem um valor 

abaixo do limite “2700 ton/d”. A figura 40 mostra com detalhes a entrada dos 

agentes ao sistema. 



 116

 

 
Figura 40: Resposta do sistema no momento da entrada dos agentes. O agentes redução no 

tempo 1000 e o agente vapor no tempo 1100. 
 

 
• O agente “VaporAgente” abre uma comunicação utilizando o protocolo “FIPA-

Contract-Net-Interaction-Protocol” enviando uma mensagem do tipo CFP. 

 

• O agente envia uma proposta com o aumento da entrada do licor preto, a qual 

é aceita e encaminhada para a plataforma de simulação. Entrada do licor = 

“1841.8064”. 

 

• Como o aumento de licor diminui a redução, o agente “ReduçãoAgente” 

recebe uma notificação a  qual é processada para atuar no processo. O valor 

de redução que ativou a falha foi uma redução de “89.2736”. Novamente  o 

melhor controle foi diminuir a temperatura do licor para 

“100.06933808355556” 

 

• O agente da redução agiu de forma rápida regressando o valor da redução 

para um valor perto do limite.  

 



 117

• A produção de vapor com uma dinâmica mais lenta do que a da redução, 

característica específica deste modelo, de forma devagar foi chegando no 

valor limite. No tempo 1400 a produção sai do alarme e entra em status OK. 

 

A sequência das mensagens no formato FIPA-ACL estão no apêndice B. 

 
 
6.3.2 Perturbações na entrada de Sólidos Secos na Caldeira. 
 

Depois de ter comprovado que o controle elevar as variáveis acima dos limites 

preestabelecidos, foi testada a perturbação de uma das variáveis mais instáveis e 

decisivas no desempenho do sistema, a fração de sólidos secos do licor negro. A 

figura 41 mostra o comportamento do Sistema Multi-Agente ao perturbar a fração de 

sólidos secos no licor que entra na caldeira 

 

 
Figura 41: Sistema Multi-Agente atuando em caso de perturbação da fração de sólidos na 

caldeira. 
 

No momento que os agentes entraram no sistema cada um teve uma atuação no 

controle da caldeira. A diminuição na temperatura do licor e o aumento na entrada 



 118

de licor preto fizeram com que as variáveis monitoradas permanecessem num nível 

aceitável pelos agentes. Diferente dos testes no  estado estacionário, a fração de 

sólidos secos aumentou ajudando ainda mais a manter a caldeira fora de uma 

situação de falha. Depois de a caldeira ter alcançado uma boa pelo aumento dos 

sólidos secos, no tempo 4000 houve uma queda na fração de sólidos. Esta 

diminuição não foi suficiente para ativar o serviço dos agentes.  No total foram 12 

mensagens trocadas pelos agentes (Figura 42). 

 

 
Figura 42: Troca de mensagens entre agentes no controle da caldeira com perturbações na 

fração de sólidos. 
 
 
 
 
 
 
 
 

 
 
 
 



 119

 
 
7 CONCLUSÕES E SUGESTÕES DE ESTUDO 
 
 
7.1 Conclusões 
 

Este trabalho de tese permitiu estudar e desenvolver uma metodologia completa 

para entender como trabalha um sistemas Multi-Agentes. Foram respondidas várias 

perguntas relacionadas à esta tecnologia, sendo a principal delas o questionamento 

sobre se era possível desenvolver agentes para controlar um processo contínuo, 

como o da Caldeira de Recuperação.  Pela rapidez da resposta conseguimos ter 

uma ação de controle que acompanha a dinâmica do processo em tempo real, 

característica esta muito importante dos processos contínuos mas que as vezes 

dificulta uma ação de controle eficaz.  

 

Para chegar nesta conclusão a tese passou por várias etapas até chegar no Sistema 

Multi-Agente. Primeiro foi necessário desenvolver um modelo dinâmico da Caldeira 

de Recuperação Química. Este modelo foi construído em Simulink™ utilizando um 

estudo que através de balanços de massa e energia consegue predizer a dinâmica 

da caldeira. Por ser um modelo antigo, foi preciso adicionar em diferentes etapas 

novas dinâmicas do processo que enriquecem de detalhes o comportamento da 

caldeira. Para validar o modelo foi comparada a resposta a diferentes condições de 

operação com os dados do modelo original. As variáveis escolhidas para validar o 

modelo foram as variáveis que posteriormente o sistema multi-agente monitoraria. 

Por isso o resultado da validação foi importante na construção do comportamento 

dos agentes frente a diversas situações de falhas. Como resultado obteve-se, nas 

variáveis escolhidas, o desvio de 15.8% entre o modelo original e o modelo em 

Simulink. Esta diferença deve-se em grande parte as diferenças no modelo de 

geração de vapor, onde foi adicionado um modelo que descreve com muita precisão 

o comportamento do balão. 

 



 120

Outra etapa na metodologia foi o desenvolvimento dos agentes. Por ser uma 

pesquisa totalmente nova na Engenharia Química, não era muito claro o caminho a 

seguir e qual era a direção correta a ser tomada para o entendimento da tecnologia. 

Até que a partir do ano de 2006 uma Fundação de pesquisa que promove tecnologia 

de agentes chamada FIPA se destacou frente a outras instituições. Na comunidade 

de pesquisa de agentes existem diferentes focos de desenvolvimento para os quais 

o incentivo da iniciativa privada é primordial o sucesso destes desnvolvimentos. Um 

dos mais importantes destes focos de desenvolvimento  fica na Itália, onde um grupo 

da Telecom desenvolveu uma plataforma de agentes baseada no padrão FIPA de 

agentes. Esta interface de desenvolvimento chamada JADE, viabilizou o uso da 

tecnologia para áreas de pesquisa onde existem limitações naturais no 

entendimento de sistemas e linguagem computacionais. Depois de ter criado os 

agentes de controle em JADE concluímos que esta foi uma ferramenta que 

minimizou a barreira no entendimento da tecnologia de agentes, onde o 

programador focaliza a verdadeira utilidade de um sistema multi-agente, que é a 

interação e relacionamento entre eles. 

 

Por último foi configurada a comunicação entre a plataforma de agentes e o 

simulador da caldeira, utilizando o protocolo de comunicação TCP.  Este método de 

comunicação foi rápido e confiável. Em todos os testes que foram feitos nunca 

houve uma mensagem perdida no caminho. A ferramenta TCP utilizada no Simulink 

também mostrou um desempenho ideal para processos contínuos. Podemos 

concluir que este protocolo de comunicação TCP ajudou na confiabilidade e 

robustez do Sistema Multi-agentes.  

 

Convém utilizar aqui várias avaliações de Jennings e Bussmann (2003), adaptadas 

para a realidade do presente trabalho. Em primeiro lugar, para demonstrar eficácia 

da abordagem de controle por sistemas de multiagentes, poderia pensar que o 

melhor argumento é mostrar quantitativamente que os resultados serão melhores do 

que em um projeto convencional de controle. Entretanto, tais dados simplesmente 

não são disponíveis na maioria dos casos, pois métodos convencionais trabalham 

com conceitos diferentes. Dado este fato, deve-se entender que é mais eficaz uma 

justificativa qualitativa do porquê a abordagem multi-agente é mais adequado a 

engenharia de controle dos sistemas complexos.  Tornando mais claro o argumento, 



 121

sob a perspectiva de sistemas de controle, esta perspectiva de sistema multi-agente 

tem mais similaridades com o modo de trabalho em sistemas multi-hierárquicos em 

controle distribuído, onde pode-se minimizar as falhas de um sistema de hierarquia 

de controle através da distribuição de sistema de decisão em partes inteligentes, isto 

é, na prática, se aproxima mais da análise do modo de trabalho do ser humano 

como operador de planta.   

 

Os conceitos e a linguagem de multiagentes é ainda árdua e desconhecida para 

Engenharia Química, e por este motivo é natural esperar resistência ao seu uso. 

Entretanto existem algumas motivações pragmáticas para que esta técnica possa 

ser adotada largamente no futuro. A primeira é que a visão fornecida pelo sistema 

multi-agente para sistemas complexos é uma linguagem mais natural e adequada 

para caracterizar diversos tipos de problemas. A segunda razão é que o uso de 

sistemas multiagentes não exige nenhuma ruptura em plataformas de hardware ou 

de software, pois ela é de natureza evolucionária e incremental. Em outras palavras, 

o ambiente de softwares e web de tecnologia de informação já os utilizam 

largamente, e este uso está migrando para aplicações práticas em sistemas de 

manufatura, que pode rever as arquiteturas de FMS (sistemas flexíveis de 

manufatura). Com a sua consolidação, as aplicações em indústrias de processos 

contínuos ocorrerá mais cedo ou mais tarde. Este mesmo cenário ocorreu em 

tempos antigos com controle lógico-programáveis (PLC) e com controle digital por 

computador (DCS). 

 
7.2 Sugestões para trabalhos futuros 
 
Voltando  especificamente à presente aplicação na caldeira de recuperação química, 

sugere-se a adição de mais um agente para monitorar outras variáveis tais como a 

temperatura na saída dos economizadores ou as emissões que saem da caldeira. 

Este agente ajudaria a entender o comportamento autônomo e de competição que 

os agentes têm por natureza.  

 

Além disso, sugere-se desenvolver um outro sistema Multi-Agente para monitorar o 

nível de tanques interligados, problema típico de ensino na área de controle 



 122

avançado de sistemas. O modelo em Simulink da dinâmica dos tanques foi 

desenvolvido nesta tese como protótipo de teste, mas não chegou a se implementar 

um controle inteligente. Uma vez testado o sistema multi-agente dos tanques seria 

de grande aporte à montagem de uma planta piloto onde a plataforma de agentes 

comunicaria com instrumentação de medidores de nível via TCP. Seria um exemplo 

ilustrativo que ajudaria na divulgação e aceitação de um novo paradigma na área de 

controle de processos químicos. 

 

Os sistemas de software irão evoluir aceleradamente, exatamente como 

atravessamos por diversas propostas de protocolos de comunicação e de 

linguagens de multiagentes durante o desenvolvimento do presente trabalho. 

Portanto, espera-se que as aplicações na indústria química acompanhem esta 

evolução.  

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 



 123

 

 

Referências Bibliográficas 
 
 

ADAMS, T.N.; FREDERICK, W.J.; GRACE, T.M.; HUPA, et al. Kraft recovery 
boilers. New York: Tappi Press, 1997. 381p. 
 

 
ALMEIDA, G.M.; PARK, S.W.; CARDOSO, M. Variables seletion for neural 
networks identification for Kraft recovery boilers. In: 2nd IFAC Workshop on 
Advanced Fuzzy/Neural Control 2004 (AFNC04). Finlândia, 2004. p. 91-96,  
 
 
ASTROM, K. J.; BELL, R. D. Drum boiler dynamics. Automatica, 2000, 36, p.363-
378.  
 
 
BELLIFEMINE, F.; CAIRE, G.; TRUCCO, T. ; RIMASSA G. JADE 
Programmer’s Guide. 2003. Disponível: 
http://sharon.cselt.it/projects/jade/doc/programmersguide.pdf 
 
 
BHADA, R.K; LANGE H.B.; MARKANT H.B. Air pollution from kraft recovery units 
– the effect of operational variables.. In TAPPI Environment Conference, Houston, 
TX, May 1972, p.14-17. 
 
 
BJÖRKLUND, H.; WARNQVIST, B.; PETTERSSON, B. Inside a kraft recovery boiler: 
combustion of high-sulfhidity black liquor at high dry solids..Pulp and Paper Canada, 
1991, v.92 n.8 p.44-46. 
 

 

BUSSMANN, S.; JENNINGS, N. R.; WOOLDRIDGE, M. 2004. Multiagent systems 
for manufaturing control: a design methodology, Springer. 
 

 

CHOKSHI, N. N.; McFARLANE, D. C. Rationales for holonic applications in chemical 
process industry. In: Marik, V., Stepankova, O., Krautwurmova, H., Luck, M. (eds.). 
Multi-Agent Systems and Applications II, Springer, Germany, 2002. p. 323-335. 
 

 

COELHO, H.; PAIVA, A. A mente e o mundo lá fora: uma introdução à inteligência 
artificial distribuída. Faculdade de Ciências da Universidade de Lisboa / Instituto 
Superior Técnico1998. 



 124

 

 

DEEN, S. (ed.). Agent-based manufaturing, Advances in the Holonic Approach. 
Springer. 2003. 
 

 

EMPIE, H.J.; LIEN, S.J.; YANG, W.; ADAMS, T.N. Spraying characteristic of 
commercial black liquor nozzles.Tappi J. 1995, v.78 n.1  p.121. 
 
 
 
FREDERICK, W.J.; NOOPILA, T.; HUPA M. Combustion behavior of black liquor at 
high solids firing.Tappi J. 1991. v.74 n.12. p. 163-170. 
 
 
GALTUNG, F.L.; WILLIAMS, T.J. Mathematical model and digital computer based 
advanced control system for a kraft mill CE type recovery unit. Technical Report 
43, Purdue Laboratory for Applied Industrial Control,Schools of Engineering, Purdue 

University,West Lafayette, 1971, IN 47907. 

 
GUDWIN, R.R. Introdução à teoria de agentes. DCA-FEEC-UNICAMP. 
http://www.dca.fee.unicamp.br~/~gudwin/courses/IA009/, 2003. 
 
 
HEWITT, C. A universal modular ACTOR formalism for AI. Proceedings of the 3rd 
International Joint Conference on Artificial Intelligence, 1973. p. 235-245. 
 
 
HUPA, M.; SOLIN, P.; HYOTY, P. Combustion behaviour of black liquor droplets J. 
Pulp Paper Sci., 1987, v.13 n.2:  p. 67-72.  
 
 
HYOTY, P.A.; OJALA, S.T. High-solids black liquor combustion. Tappi J., 1988.  v.71 
n.1 p. 108-111. 
 
 
JENNINGS, N. R. An agent-based approach for building complex software systems. 
Communications of the ACM, 2001.,v.44 n.4 p. 35-41. 
 

JENNINGS, N. R.; BUSSMANN, S. Agent-based control systems. Agent-based 
control systems. IEEE Control Systems (2003) v.23, n.3, pp. 61-74 
 
 
 



 125

JONES, A.K.; ANDERSON, M.J. High solids firing at Arkansas kraft. Pulp and Paper 
Canada, 1993.  v.94 n.6 p. 177-180. 
 
 
KARNIENNY, M.G.; URONEN, P.; WILLIAMS. T.J. A Mathematical model of the 
babcock and wilcox black liquor recovery furnace. Technical Report 97, Purdue 
Laboratory for Applied Industrial Control, Purdue University, West Lafayette,1979. 
 
 
LEFEBVRE, B.E.; SANTYR, G.M. Effect of operating variables on kraft chemical 
recovery boiler performance..Pulp and Paper Canada, 1989. v.90 n.12  p. 446-451.  
 
 
MARIK, V.; STEPANKOVA, O.; KRAUTWURMOVA, H.; LUCK, M. (eds.).. Multi-
Agent systems and applications II. Springer, Germany, 2002b. 
 
 
MENESES, E. X. 2001. Jornada de atualização em inteligência artificial – 
integração de agentes de informação. 2001. http://www.ime.usp.br/~eudenia/jaia/ 
 
 
MERRIAM, R.L.; RICHARDSON, D.L.; GRACE, T.M.; TAYLOR, M.L. Model studies 
of kraft recovery furnaces. AIChE Symp. 1980.  Ser., v.76 n.200 p. 99–112.  
 
 
MINSKY, M. The society of mind. Simon &amp;amp; Schuster. 1985. 
 
 
RUSSEL, S., NORVIG, P. Artificial intelligence: A Modern Approach. Prentice Hall, 
2003. 
 
 
RYDESATER, P.   MATLAB Central File Exchange. \TCP/UDP/IP Toolbox 2.0.5." 
(2006) [Online]. 
Available: http://www.mathworks.com/matlabcentral/ ¯leexchange/loadFile.do 
?objectId=345&amp;amp;objectType=¯le 
 

SATURNINO, M.D. Redução dos teores dos íons cloreto e potássio na unidade 
de recuperação do licor negro das indústrias de papel e celulose. 2003. 
Dissertação (Mestrado em Engenharia Química) – Escola de Engenharia, UFMG, 
Belo Horizonte, 2003. 

 
 
SCHWEITZER, F. Brownian agents and active particles: Collective Dynamics in 
the Natural and Social Sciences. Springer, 2003. 
 



 126

TORSUN, I.S. Foundations of Intelligent Knowledge-based systems. London: 
Academic Press, 1995. 
 

TRAN, H.N.; ELLIOTT, M.; BARHAM, D.; REEVE, D.W. Recovery boiler operation 
and plugging in Canada. 1990. Pulp and Paper Canadá, 87(7): 58-64, 1986. In: 
PINTO, J.M.; PARK, S.W.; NEVES, J.M. Caldeira de Recuperação- Parte I- Análise 
da Operação. Trabalho apresentado no 23° Congresso Anual de Celulose e Papel 
da ABTCP, 
 

 
WEISS, Gerhard. Multiagent Systems. A Modern approach to distributed 
artificial intelligence. MIT Press, 1999. 
 
 
WOOLDRIDGE, M.; JENNINGS, N. Intelligent agents: theory and practice. The 
Knowledge Engineering Review. 1995., v.10, n.2,  p. 115-152. 
 
 
WOOLDRIDGE, M.Michael Intelligent Agents. Multiagent systems: a modern 
approach to distributed artificial intelligence, The MIT Press, 1999. 
 
 
WOOLDRIDGE, M. Reasoning about rational agents. MIT Press. 2000. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 



 127

 
 

Referências Consultadas 

 
ANDRITZ A. G.  Disponível em&amp;lt;http://www.andritz.com/&gt;. Acesso em: 31 Mai. 2005. 
 
 
BAKER, A. JAFMAS – A java-based agent framework for multiagent systems. 
Development and Implementation. Cincinnati: Department of Electrical &amp;amp; Computer 
Engineering and Computer Science University of Cincinnati, 1997. Tese (Doutorado) 
 
 
BARTO, A.G.; SUTTON, R.S.; ANDERSON, C.W. Neuronlike elements that can 
solve dificult learning control problems. IEEE Transctions on Systems, Man, and 
Cybernetics, 1993. n.13, p. 834-846. 
 
 
 
BERTSEKAS, D. P. Dynamic Programming: Deterministic ans Stochastic Models. 
Prentice-Hall, Upper Saddle River, NJ,1987. 
 
 
BORDADO J.C.M,; GOMES, J.F.P. Atmospheric emissions of Kraft pulp mills. 
Chemical Engineering and Processing, 2002. vol. 41, p. 667-671. 
 
 
BRATMAN, M.E. What is intention? In P.R. Cohen, J. Morgan, and M.E. Pollack, 
editors. Intentions in Communication. MIT Press, Cambridge, Mass. 1990. p. 15--31.  
 
 
BROOKS, Rodney A. A robust layered control system for a mobile robot. IEEE 
Journal of Robotics and Automation 1986. 
 
 
CATRO, J., KOLP, M., MYLOPOULOS, J. Towards requirements-driven 
information systems engineering: the tropos project. Université Catholique de 
Louvain, Institut d’administration et de gestion, 2002. Working paper 31/02. 
 
 
GIGERENZER, G. Adaptive thinking. Oxford University Press, 2000. 
 
 
GIGERENZER, G.; SELTEN, R. (Eds.) Bounded rationality: the adaptive toolbox. 
MIT Press, 1999. 
 
 
HUHNS, M. N.; STEPHENS, L. M. Multiagent systems and societies of agents, In: 



 128

Weiss, G. (ed.) Multiagent Systems. MIT Press 1999, p. 79-120. 
 
 
INSELBERG, A.; DIMSDALE, B. Parallel coordinates - a tool for visualizing 
multidimensional geometry. In: Proceedings of the First IEEE Conference on 
Visualization, 1990. p. 361-378,  
 
 
JENNINGS, N. R. On agent-based software engineering, Artificial Intelligence, No. 
117, 2000.  pp. 277-296. 
 
 
JENNINGS, N. R.; WOOLDRIDGE, M. Agent-oriented software engineering, 
proceedings of the 9th European workshop on modelling autonomous agents 
in a multi-agent world: multi-agent system engineering (MAAMAW-99) 2000.. 
 
 
 
KAEBLING, L. P.; LITTMAN, M. L.; MOORE, A. W. Reinforcement learning: a 
survey. Journal of Artificial Intelligence Research, 1996. v. 4, p. 237-285. 
 
 
Tacla, Celso., Caldeiras de recuperação, In: Curso de Especialização em Celulose 
e Papel (USP), 62p., 2002. (CDROM) 
 
 
LABROU, Y., T. FININ, T., PENG, Y. Agent communication languages: the current 
landscape, IEEE Intelligent Systems, 1999. v.14, n.2, p. 45-52. 
 
 
LUCK, M.; ASHRI, R.; D'IVERNO, M. Agent-based software development, Artech 
House, Inc 2004. 
 
 
MICHAEL N.; Huhns, Larry M. Stephens. Agents on the web: exploiting expertise 
through knowledge networks. IEEE Internet Computing, 1999.  3(6): p. 89-90 
 
 
MITCHELLl, T. Machine learning. New York. McGraw Hill, 1997. 
 
 
PARUNAK, H. V. D. “Go to the Ant”: Engineering Principles from Natural Multi-
Agent Systems, Annals of Operations Research, 1997. Vol. 75, p. 69-101. 
 
 
PFEIFER, R., SCHEIER, C. Understanding intelligence. MIT Press, 1999. 
 
 
RUSSEL, S. Rationality and intelligence. In Wooldridge M., Rao, A. (Eds.), 
Foundations of Rational Agency. Kluwer Academic Publishers, 1999.. 



 129

 
 
SIAN SS, Adaptation based on cooperative learning in multi-agent systems, in 
Y. Demazeau and JP Müller (eds.) Decentralized AI 2, Elsevier, 1991. p. 257-272 
 
 
SIMON, H. Motivational and emotional controls of cognition. Psychological Review, 
1967. n.74,p. 29-39. 
 
 
SIMON. , H.. The sciences of the artificial. MIT Press, 1981. 
 
 
VAKKILAINEN, E.; VEHMAAN-KREULA, J.; VESALA, R.; VILPPONEN, A.; 
USITALO, P. Chemical recovery, Chapter 11, In: Chemical pulping, Book 6, Paper 
Making Science and Technology, 2000. 
 
 
VisuLab 4.0. Zurich: Institute of Computational Science, ETH Zurich. Copyright © 
2005. Disponível em&amp;lt;http://www.inf.ethz.ch/personal/hinterbe/Visulab/&gt;. Acesso em: 
31 Fev. 2005. 
 
WATKINS, C.J.C.H. Learning from delayed rewards. Tese (doutorado)- University 
of Cambrigde, 1989. 
 
 
WEISS, G. Agent orientation in software engineering. Knowledge Engineering 
Review, 2002. Vol. 16, No. 4, p. 349-373. 
 
 
WOOLDRIDGE, M.; CIANCARINI, P. Agent-oriented software engineering: the 
state of the art, In: Ciancarini, P., Wooldridge, M. 2001, (eds.) Agent-Oriented 
Software Engineering, Springer-Verlag. 
 
 
WOOLDRIDGE, M. An introduction to multi-agent systems. John Wiley &amp;amp; Sons, 
2002. 
 
 
ZAMBERLAM, A.; GIRAFFA, L.; Modelagem de agentes utilizando a arquitetura 
BDI. Technical Reports Series, Faculdade de Informática – PUCRS, 2001. 
 
 
 

 
 
 



 130

 

 
 
 
 
 
 

APÊNDICE A 

Modelo Matemático da Caldeira de Recuperação 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 
 
 
 
 
 



 131

APÊNDICE A 

 

Modelo Matemático da Caldeira de recuperação 

Modelo matemático realizado em 1977 por Babcock e Wilcox. Este modelo foi uma 
adaptação do modelo matemático da unidade de recuperação de energia realizado 
por Galtung. Parte deste modelo foi considerado como base na elaboração do 
simulador da caldeira em Simulink utilizado nesta tese. (Capitulo 4) 

A.1  Licor Negro 
 

O licor negro proveniente da área de evaporação é considerado como a soma 
dos seguintes componentes: 

 
- Sólidos de entrada (Xbls): Sólidos obtidos a partir da madeira dissolvida e do 

processo no digestor. 
- Mistura de sais (XNa2SO4): Sulfato de Sódio adicionado no licor. 
- Carbonato (XNa2CO3): Carbonato de sódio adicionado ao licor no precipitador e 

evaporador. 
- Água: A água é removida do evaporador, e parte é adicionada durante o 

aquecimento do licor preto. 
 

A soma das frações parciais do licor preto de ser igual a 1: 
 

1
3242

=+++ blwCONaSONabls XXXX                    (A.1.1) 
 
Os sólidos de entrada são decompostos nos seguintes componentes: 

Hidrogênio ( )(blHX ), Sulfato de sódio (
)(
2

bl
SNaX ), Oxigênio (

)(bl
OX ), Carbono (

)(bl
CX ), Sódio 

( )(blNaX ), Enxofre (
)(bl

SX ), sendo: 
 

1)()()()()()(
2

=+++++ blS
bl

Na
bl

C
bl

O
bl

SNa
bl

H XXXXXX         (A.1.2) 
 
Tabela 1 – Licor negro de entrada que vai para o tanque de mistura 
variável  valor unidade descrição 

)(bl
Hw  3216,0 

hrlb  Vazão de H no licor negro 
)(bl

Ow  30602,0 
hrlb  Vazão de O no licor negro 

)(bl
Sw  5422,0 

hrlb  Vazão de S no licor negro 
)(bl

Cw  34002,0 hrlb  Vazão de C no licor negro 
)(bl

Naw  17920,0 hrlb  Vazão de Na no licor negro 
)(
2

bl
SNaw  

441,0 hrlb  Vazão de Na2S no licor negro 

)(
2

bl
OHw  53944,0 hrlb  Vazão de H2O no licor negro 
)(bl

totalw  145842,0 
hrlb  Vazão de total de licor negro 



 132

•
)(bl

sensQ  
9,56E6 lbBTU  Calor sensível do licor negro 

 

A.2. Sais de Sulfato 
 

Os sais de reposição são considerados todos como sulfato de sódio: 
 
Tabela 2 – Sais de Sulfato 
variável  valor unidade descrição 

faSONaw 42  
1926,0 hrlb  Vazão dos sais de reposição (sais de sulfato)  

faSONaX 42  
1,0  Teor de sulfato de sódio nos sais de reposição.

 

A.3. Vapor na Alimentação 
 

No presente processo ainda se aquece o licor preto com injeção direta de 
vapor: 
 
Tabela 3 – Vapor de Aquecimento 
variável  valor unidade descrição 

stw  
1663,0 hrlb  Vazão do vapor de aquecimento direto do licor 

negro  

totalw  
1663,0 hrlb  Vazão total.  

 
 

A.4. Água de Alimentação 
 

A água do processo, deionizada, entra no economizador com os seguintes 
valores: 
 
Tabela 4 – Água de alimentação da caldeira 
variável  valor unidade descrição 

OHw 2  373673,0 
hrlb  Vazão da água de alimentação da caldeira 

'totalw  373673,0 hrlb  Vazão total de água.   
•

)( w
sensQ  

93,11E6 hrBTU /  Calor sensível. 

 
 

A.5. Ar de Combustão 
 
Fig.05: Entradas de ar de combustão, Licor, e saída de fundidos 
 



 133

 
Tabela 5 - Ar de Combustão 
variável  valor unidade descrição 

)1(
Ow  41133,0 hrlb  Vazão de O no ar primário. 

)1(
Nw  137707,0 hrlb  Vazão de N no ar primário. 

)1(
2 OH

w  2371,0 hrlb  Vazão de H2O no ar primário. 
)1(

totalw  181211,0 hrlb  Vazão de total do ar primário. 
•

)1(
sensQ  

7,99E6 hrBTU/  Calor sensível. 

)2(
Ow  27438,0 hrlb  Vazão de O no ar secundário. 

)2(
Nw  91887,0 hrlb  Vazão de N no ar secundário. 

)2(
2 OH

w  1587,0 hrlb  Vazão de H2O no ar secundário. 
)2(

totalw  120912,0 hrlb  Vazão de total do ar secundário. 
•

)2(
sensQ  

5,44E6 hrBTU/  Calor sensível. 

)3(
Ow  38239,0 hrlb  Vazão de O no ar secundário. 

)3(
Nw  128047,0 hrlb  Vazão de N no ar secundário. 

)3(
2 OH

w  2211,0 hrlb  Vazão de H2O no ar secundário. 
)3(

totalw  168497,0 hrlb  Vazão de total do ar secundário. 
•

)3(
sensQ  

7,77E6 hrBTU/  Calor sensível. 

 
 

A.6. Aquecedor do licor: 
 

O aquecedor é utilizado para elevar a temperatura do licor preto. O aquecedor 
primário encontra-se no tanque de mistura, e o aquecedor secundário, entre o 
tanque de mistura e o pulverizador. Entretanto o balanço será em apenas uma 
etapa. Também se assume como válidas as equações algébricas de balanços 
estacionários. 
 

Balanço de massa total:    
)()()( h

st
mt

bl
h

bl www +=                    (A.6.1) 
 

Água:     )(
)()()()( h

st
mt

blw
mt

bl
h

blw
h

bl wXwXw +=                              (A.6.2) 
 

Sólidos:   
)()()()( mt

bls
mt

bl
h

bls
h

bl XwXw =          (A.6.3) 
                               

Sulfato de sódio:   
)()()(

4242

mt
SONa

mt
blSONa

h
bl XwXw =         (A.6.4) 

 

Carbonato de sódio:  
)()()()(

4232
1 h SONa

h
bls

h
blw

h
CONa XXXX ???=        (A.6.5)  



 134

 
 
Balanço de Energia: 

80))]80(()80(

))1(([
))1((

1

)()()()(

)()()(
)()()(

)(

+?++?

?+
?+

=

h
stpw

h
st

h
st

mt
bl

pbls
mt

blwpw
mt

blw
mt

bl
pbls

h
blwpw

h
blw

h
bl

h
bl

TcHwT

cXcXw
cXcXw

T
  

                (A.6.6) 
 
Tst é a temperatura de saturação para o aquecedor, e Hst é o calor de vaporização 
na temperatura Tst. Resolvendo-se a equação acima, temos: 
 

)])()1(([
)(

1 )()()()()(
)()()(

)( mt
bl

h
blpbls

mt
blwpw

mt
blw

mt
blh

bl
h

stpw
h

st

h
st TTcXcXwTTcH

w ??+
?+

=          

                (A.6.7) 
 
Tabela 6 – Aquecedor 
variável  valor unidade descrição 

)( h
Hw  3216,0 

hrlb  Vazão de H no licor negro no aquecedor 
)( h

Ow  30602,0 
hrlb  Vazão de O no licor negro no aquecedor 

)( h
Sw  5422,0 

hrlb  Vazão de S no licor negro no aquecedor 

)( h
Cw  34002,0 

hrlb  Vazão de C no licor negro no aquecedor 

)( h
Naw  17920,0 

hrlb  Vazão de Na no licor negro no aquecedor 

)(
2

h
SNaw  441,0 

hrlb  Vazão de Na2S no licor negro no aquecedor 

)(
42

h
paSONaw  

4851,0 hrlb  Vazão de Na2SO4 na forma de partículas no 
aquecedor 

)(
42

h
faSONaw  

2184,0 hrlb  Vazão de Na2SO4 na forma de cinzas no 
aquecedor 

)(
32

h
faCONaw  5827,0 

hrlb  Vazão de Na2CO3 na forma de cinzas no 
aquecedor 

)(
2

h
OHw  55607,0 hrlb  Vazão de H2O no aquecedor 
)( h

totalw  160367,0 hrlb  Vazão de total no aquecedor 
•

)(h
sensQ  

11,89E6 hrBTU /  Calor sensível. 

 

3.7. Pulverizador e Injetor de Licor: 
 

No presente modelo do equipamento de Babcox &amp;amp; Wilcox, o licor entra na 
caldeira na altura de 34 ft, logo acima do leito de carvão e fundidos, e abaixo dos 
primeiros bicos de ar secundário.  Neste modelo antigo, a pulverização em spray 
(diferente de spray de secadores), é feita em bicos oscilantes com pratos que 
espalham o líquido em uma parte direcionado a parede e outra parte direcionada ao 



 135

chão do leito. Naturalmente espera-se que a maior parte da água tenha se 
evaporado até atingir os alvos. A fórmula para a razão de pulverização é dada por: 

 

P
h

SR

h
S

h
R

h
bl

DX
X

T
T

PC
1

. )(
)(

)(

)(

11 =??                    (A.7.1) 

                 
Portanto a quantidade do licor que é pulverizado e segue a corrente de gases, 

é dado por: 
 

1
)()()( ?spspbl

pe
bl Nww =                 (A.7.2) 

 
Os balanços materiais dos componentes elementares relativos ainda apenas 

ao licor que entra na corrente de gás fornecem as frações mássicas de hidrogênio, 
oxigênio, enxofre, carbono e sódio: 
 

 ?
?
?

?
?
?
?

?
+=

OH

Hsp
blw

blmt
H

sp
bls

pe
H M

M
XXXX

2

2)()()()(
             (A.7.3) 

 

?
?
?

?
?
?
?

?
+

?
?
?

?
?
?
?

?
+

?
?
?

?
?
?
?

?
+=

32
32

42
4

2

34 )()(
2

)()()()(

CONa

Osp
CONa

SONa

Osp
SONa

OH

Osp
blw

blmt
O

sp
bls

pe
O M

M
X

M
M

X
M
M

XXXX  

                                 (A.7.4) 

?
?
?

?
?
?
?

?
+

?
?
?

?

?
?
?

?

?
?
?

?
?
?
?

?
+=

42
42

2
2

)()()()()(

SONa

Ssp
SONa

SNa

Sblmt
SNa

blmt
S

sp
bls

pe
S M

M
X

M
M

XXXX                      (A.7.5) 

 

?
?
?

?
?
?
?

?
+=

32
32

)()()()(

CONa

Csp
CONa

blmt
C

sp
bls

pe
C M

M
XXXX                                                        (A.7.6) 

 
)()()()()( 1 peC

pe
S

pe
O

pe
H

pe
Na XXXXX ????=                                                             (A.7.7) 

 
 

Tabela 7 – Pulverizador e Injetor de Licor 
variável  valor unidade descrição 

1579,0 hrlb  Vazão de H pulverizada no chão do leito )( pe
Hw  

1045,0 hrlb  Vazão de H pulverizada nas paredes do leito 
15022,0 hrlb  Vazão de O pulverizada no chão do leito )( pe

Ow  
9948,0 hrlb  Vazão de O pulverizada nas paredes do leito 
2571,0 hrlb  Vazão de S pulverizada no chão do leito )( pe

Sw  
1703,0 hrlb  Vazão de S pulverizada nas paredes do leito 
16692,0 hrlb  Vazão de C pulverizada no chão do leito )( pe

Cw  
11054,0 hrlb  Vazão de C pulverizada nas paredes do leito 
8671,0 hrlb  Vazão de Na pulverizada no chão do leito )( pe

Naw  
5742,0 hrlb  Vazão de Na pulverizada nas paredes do leito 



 136

216,0 hrlb  Vazão de Na2S pulverizada no chão do leito )(
2

pe
SNaw  

143,0 hrlb  Vazão de Na2S pulverizada nas paredes do 
leito 

3453,0 hrlb  Vazão de Na2SO4 na forma de cinzas que é 
pulverizada para o chão do leito 

)(
42

pe
faSONaw  

2287,0 hrlb  Vazão de Na2SO4 na forma de cinzas que é 
pulverizada para as paredes do leito 

2860,0 hrlb  Vazão de Na2CO3 na forma de cinzas que é 
pulverizada para o chão do leito 

)(
32

pe
faCONaw  

1894,0 hrlb  Vazão de Na2CO3 na forma de cinzas que é 
pulverizada para as paredes do leito 

27298,0 hrlb  Vazão de H2O pulverizada no chão do leito )(
2

pe
OHw  

18077,0 hrlb  Vazão de H2O pulverizada nas paredes do 
leito 

78725,0 hrlb  Vazão total pulverizada no chão do leito )( pe
totalw  51893,0 hrlb  Vazão total pulverizada nas paredes do leito 

5,83E6 hrBTU /  Calor sensível para o chão do leito •
)( pe

sensQ  3,89E6 hrBTU /  Calor sensível para as paredes do leito 
 

A.8. Leito (Paredes e Chão): 
 

O licor que não se nebuliza e segue pela corrente de gases, irá se deslocar 
para as paredes do leito ( 4.02 =r ), ou para o chão do leito ( 6.01 =r ).   
 

O balanço de licor total é dado por:  
        ( )rwNww peblspspblspcbl .)()()()( ?=             (A.8.1) 

 
Os balanços materiais dos componentes separadamente são dados por: 

 

Água: ( ) rXwNww spblwpeblspspblspcw .)()()()()( ?=           (A.8.2) 
 

Sólidos: ( )rXww spblsspcblspcbls .)()()( =             (A.8.3) 
 

Sais de Sulfato: ( )rXww sp SONaspcblspcSONa .)()()( 4242 =               (A.8.4) 
 

Carbonato:  ( )rXww sp CONaspcblspcCONa .)()()( 3232 =           (A.8.5) 
 
Sólidos Totais:  

)()()()(
3242

spc
CONa

spc
SONa

spc
bls

spc
blts wwww ++=          (A.8.6) 

 
Hidrogênio:  

)(. blmtHblsH Xww =            (A.8.7) 
 

Carbono puro: 
)()()( blmt

C
spc

bls
spc

C Xww =            (A.8.8) 



 137

 

Carbono na forma de carbonato: ?
?
?

?
?
?
?

?
=

32
3232
.)(

CONa

C
CONaCONaC M

M
ww       (A.8.9) 

 

Enxofre puro:  
?
?
?

?

?
?
?

?

?
?
?

?
?
?
?

?
+=

SNa

Sblmt
SNa

blmt
S

spc
bls

spc
S M

M
XXww

2
2

)()()()(
      (A.8.10) 

 

Enxofre na forma de Na2SO4:  ?
?
?

?
?
?
?

?
=

42
4242

)()(
)(

SONa

Sspc
SONa

spc
SONaS M

M
ww       (A.8.11) 

 
Sódio: 

?
?
?

?
?
?
?

?
+

?
?
?

?
?
?
?

?
+

?
?
?

?

?
?
?

?

?
?
?

?
?
?
?

?
+=

32
32

42
42

2
2

222 )()()()()()(
CONa

Naspc
CONa

SONa

Naspc
SONa

SNa

Nablmt
SNa

blmt
Na

spc
bls

spc
Na M

M
w

M
M

w
M

M
XXww

                (A.8.12) 
Oxigênio: 

)()(
)(

)()(
)(

)()()()(
4232

spc
Na

spc
SONaS

spc
S

spc
CONaC

spc
C

spc
H

spc
blts

spc
O wwwwwwww ??????=  

              (A.8.13) 
 
Hipóteses no Leito: 
 

1. A água presente no licor, ao alcançar a superfície do leito, evapora 
instantaneamente. 

2. Todo o sódio e enxofre presentes nos sólidos permanecem no leito e são 
levados juntamente com o smelt. 

3. O leito é considerado homogêneo (perfeitamente misturado). 
4. A taxa de reação é proporcional aos produtos da fração mássica do carbono e 

à um termo de Arrhenius. 
5. A eficiência na redução do smelt é determinada por um modelo de Bauer e 

Dorland. 
6. A deficiência de oxigênio no modelo de Bauer e Dorland é considerada igual 

ao valor teórico nas zonas primárias e secundárias. 
7. A temperatura no modelo de Bauer e Dorland é considerada igual a da 

temperatura superficial da camada do leito. 
8. A temperatura superficial da camada é determinada através de um balanço 

de energia para o leito total utilizando-se um pseudovolume. 
9. A densidade da maioria dos leitos é considerada constante. 

 
 
 Seguindo com os balanços materiais, temos: 
 
 
Evaporação da água do leito: 

)()()( spc
blw

spc
bl

cs
w Xww =                   (A.8.14) 



 138

 
 
 
 
Balanço diferencial total, assumindo a densidade do leito constante: 

)()()( )( cmspcblts
cb wwV

dt
d

?=?                   (A.8.15) 

[ ])()()( )(1 cmspcbltscb wwVdt
d

?=
?

                  (A.8.16) 

 
onde a velocidade de reação é dada por: 

??
?

?
??
?

?
+

?=
460

exp)()(
C

Ccb
Ccm

cm

T
XKw

?
                  (A.8.17) 

 
Balanços Diferenciais Parciais: 
 
Carbono: 

).(
1 )()()(

)()(
)( cb

C
spc

blts
spc

Ccbcb
cb

C XwwV
X

dt
d

?=
?

                  (A.8.18) 

 
Carbono na forma de Carbonato: 

).(
1 )(

)(
)()(

)()()(
)(

)( 323232
cb

CONaC
spc

blts
spc

CONaCcbcb
cb

CONaC XwwV
X

dt
d

?=
?

      (A.8.19) 

 
Sódio: 

).(
.
1 )()()(

)()(
)( cb

Na
spc

blts
spc

Nacbcb
cb

Na Xww
V

X
dt
d

?=
?

                      (A.8.20) 

 
Hidrogênio: 

).(
.
1 )()()(

)()(
)( cb

H
spc

blts
spc

Hcbcb
cb

H Xww
V

X
dt
d

?=
?

           (A.8.21) 

 
Enxofre: 

).(
1 )()()(

)()(
)( cb

S
spc

blts
spc

Scbcb
cb

S Xww
V

X
dt
d

?=
?

           (A.8.22) 

 
Enxofre na forma de sal: 

).(
1 )(

)(
)()(

)()()(
)(

)( 424242
cb

SONaS
spc

blts
spc

SONaScbcb
cb

SONaS XwwV
X

dt
d

?=
?

         (A.8.23) 

 
Oxigênio: 

)(
)(

)(
)(

)()()()()(
3232

1 cb CONaC
cb

CONaC
cb

Na
cb

S
cb

H
cb

C
cb

O XXXXXXX ??????=       (A.8.24) 
 
 



 139

Sólidos: 

??
?

?
??
?

?
???

?

?
??
?

?
?=

C

CONacb
CONaC

S

SONacb
SONaS

cb
bls M

M
X

M
M

XX 32
32

42

42
..1 )( )(

)(
)(

)(
         (A.8.25) 

 
Carbono para a combustão: 

)()(
)(

)()( )(
32

sm
C

cm
smCONaCC

cmcm
C XwXXww ?+=                     (A.8.26) 

 
Hidrogênio para a combustão: 

)()()( cb
H

cmcm
H Xww =                (A.8.27) 

 
Oxigênio para a combustão: 

)()()()()( cm
H

cm
C

cm
sm

cmcm
O wwwww ???=                        (A.8.28) 

 
 
Balanços do Smelt por componente: 
 
Sódio: )()()()( .. cbNa

cmsm
Na

cm
sm XwXw =              (A.8.29) 

 
Enxofre: ).(. )( )(

)()()()(
42

cb
SONaS

cb
S

cmsm
S

cm
sm XXwXw +=                      (A.8.30) 

 
 
 
Carbono: 

?
?
?

?

?
?
?

?
??
?

?
??
?

?
??
?

?
??
?

?
+??

?
?

?
?
?

=
Na

C

S

Nacb
SONaS

cb
S

cb
Na

cmsm
C

cm
sm M

M
M
M

XXXwXw .)..(2
2
1

.. )( )(
)()()()()(

42                   (A.8.31) 

 

Oxigênio: ( ) ??
?

?
??
?

?
+

?
?
?

?

?
?
?

?
??
?

?
??
?

?
+?=

C

Osm
C

cm
sm

S

Ocb
SONaS

cb
S

sm
r

cmsm
O

cm
sm M

M
Xw

M
M

XXwXw )...(3).(14.. )()()( )(
)()()()()(

42
?  

               (A.8.32) 
 
Balanço final do Smelt:  

).... )()()()()()()()()( cmO
cm

sm
cm

C
cm

sm
cm

S
cm

sm
sm

Na
cm

sm
cm

sm XwXwXwXww +++=                 (A.8.33) 
 
Taxa de Reação: 

SNa
sm

SONaSONa
cm

SNa

SONa
sm

SNa
o

r
MXMX

MX

SOmolesNanSmolesNan
SmolesNan

242422

422

..

.

ºº )()(

)(

422

2

+
=

+
=?                (A.8.34) 

 
Composição do Smelt: 
 

Sulfeto de Sódio: ??
?

?
??
?

?
+=

S

SNa
r

cb
SONaS

cb
Scm

sm

cm
sm

SNa M
M

XX
w
w

X 2
422

)( )( )(
)(

)(

)(
)( ?       (A.8.35) 

Sais de sulfato: 



 140

??
?

?
??
?

?
?+=

S

SONa
r

cb
SONaS

cb
Scm

sm

cm
sm

SONa M
M

XX
w
w

X 42
4242

)1)(( )( )(
)(

)(

)(
)( ?                   (A.8.36) 

 
Carbonato: )()()(

42232
1 smSONa

sm
SNa

sm
CONa XXX ??=                     (A.8.37) 

 
Oxigênio total requerido para a combustão: 

??
?

?
??
?

?
+??

?

?
??
?

?
=

C

cm
C

H

Ocm
H

t

M
M

w
M
M

ww 0)()()1(0
2

2
                      (A.8.38) 

 
Disponibilidade de oxigênio no ar primário: 

( ) )1(0)1()1()1(0 . aiaa Xwww +=               (A.8.39) 
 
Ar de combustão disponível na zona primária: 

)()1(

)1(
)1(

cm
O

t
O

O

ww
w

F
?

=                          (A.8.40) 

 
Concentração de oxigênio na zona primária: 

( )
( )1100

.1100
)1()1(

)1(
2

?+

?
=?

FK

CF

g

O                          (A.8.41) 

 
Energia de combustão no leito que reage: 

?
?
?

?

?
?
?

?
?
?
?

?
?
?
?

?
??=

•

H

OH
OHHrSSblsbls

cm
c

t M

M
HXHXHXwQ

2
2

2

)(
)(

?          (A.8.42) 

 
Energia de combustão liberada na zona primária e no leito 

?
?
?

?
?
?
?

? +
=

••

)1(
0

)()1(
0

)()1(

t

cm
O

c

t

c

w
ww

QQ                         (A.8.43) 

 
Energia de combustão liberada no leito: 

)(
)1(

c
c

t nQQ
••

=                           (A.8.44) 
 
Energia de combustão liberada sobre o leito na zona primária:   

•••
?= QQQ

c )1()1(

                  (A.8.45) 
 
Calor proveniente do leito radiado para as paredes: 

( ) ( )( )44
)(

460460 +?+=
•

bCr

cb

b TTAUQ                                (A.8.46) 
 
 
Balanço de Energia no Leito: 



 141

rS
cb

SONaS
cm

C
cb

pg
cm

sm
cm

cm
smsm

cb
p

cm
sm

cb
b

OH
sp

blPwv
spc

blw
spc

bl
sp

bl

Pbls
spc

blwpw
spc

bl
spc

bl

cb

C
cb

P
cbcb

HXwTcww

HTcwQ

HTcXwT

cXcXwQTcV
dt
d

?

?

)(
)(

)()()()(

)()()()(

)()()()(

)()()(
)(

)()()(

42

2

)80()(

))80((

))80(()80(

))1(.()(

????

++???

++???

?++=

•

•

                           (A.8.47) 

 
simplificando o balanço acima o suficiente para capturar a dinâmica da temperatura 
e ao mesmo tempo não se comprometer com as complexidades da mudança do 
leito, tem-se: 
 

])80()(

))80((

))80)(.((

)80(1([
.

1

)(
)(

)()()()(

)()()(
)(

)()()(

)()()()(
)()()(

42

2

rS
cb

SONaS
cm

C
cb

pg
cm

sm
cm

cm
smsm

cb
p

cm
sm

cb

b

OH
sp

blpwvpw
spc

blw
spc

bl

sp
blpbls

spc
blw

spc
bl

cb
cb

p
cb

p
cbC

HXwTcww

HTcwQ

HTccXw

TcXwQ
cV

T
dt
d

?

?

????

++???

+???+

+??+=

•

•

                   (A.8.48) 

 
A saída dos fundidos é representada por: 
 
Total de Smelt liberada para a parede e para o chão do leito: 

)()1()( cmw
sm

cmF
sm

cm
sm www +=                        (A.8.49) 

 
onde F1 = chão do leito 
         w = paredes do leito 
 
Taxa de reação: )()1()( cmwcmFcm www +=                    (A.8.50) 
 
 
 
Tabelas 8 - Leito (Chão e paredes) 
 
A. Paredes: 
variável  valor unidade descrição 

)( cb
Hw  1047,0 hrlb  Vazão de H que segue para a zona secundária 

)(cb
Ow  6911,0 hrlb  Vazão de O que segue para a zona secundária 

)(cb
Cw  10225,0 hrlb  Vazão de C que segue para a zona secundária 

)(
2

cb
SNaw  3228,0 hrlb  Vazão de Na2S para a formação do smelt 
)(

42

cb
faSONaw  

3283,0 hrlb  Vazão de Na2SO4 na forma de cinzas para a 
formação do smelt 

)(
32

cb
faCONaw  9206,0 

hrlb  Vazão de Na2CO3 na forma de cinzas para a 
formação do smelt 

)(
2

cb
OHw  18077,0 hrlb  Vazão de água que segue para a zona secundária



 142

36260,0 hrlb  Vazão total que segue para a zona secundária )( cb
totalw  

15714,0 hrlb  Vazão total que sai da parede do leito e segue 
para o smelt 

•
)(cb

sensQ  
8,35E6 hrBTU /  Calor sensível transferido para o smelt 

•
)(cb

transfQ  
65,6E6 hrBTU/  Calor transferido da parede do leito para o 

efervedor 

 
 
 
B. Chão 
variável  valor unidade descrição 

)( cb
Hw  1579,0 hrlb  Vazão de H que segue para a zona primária 

)(cb
Ow  10436,0 hrlb  Vazão de O que segue para a zona primária 

)(cb
Cw  15441,0 hrlb  Vazão de C que segue para a zona primária 

)(
2

cb
SNaw  4875,0 hrlb  Vazão de Na2S para a formação do smelt 
)(

42

cb
faSONaw  

4957,0 hrlb  Vazão de Na2SO4 na forma de cinzas para a 
formação do smelt 

)(
32

cb
faCONaw  13902,0 

hrlb  Vazão de Na2CO3 na forma de cinzas para a 
formação do smelt 

)(
2

cb
OHw  27298,0 hrlb  Vazão de água que segue para a zona primária 

54754,0 hrlb  Vazão total que segue para a zona primária )( cb
totalw  23734,0 hrlb  Vazão total que sai da parede do leito e segue 

para o smelt 
•

)(cb
transfQ  

66,02E6 hrBTU /  Calor transferido do chão do leito para o 
efervedor 

•
)(cb

sensQ  
812,61E6 hrBTU /  Calor sensível transferido para o smelt 

 
 

A.9. Zona Primária: 
 
 Assume-se que toda a água que entra na caldeira é evaporada nas zonas 
primárias e secundárias, porém não ocorre a combustão nestas zonas. A combustão 
ocorre apenas na zona terciária. Os balanços dos sólidos e gases estão descritos 
em seguida separadamente com todos os seus elementos: 
 
Hidrogênio: 

1
)()()(

1
)()()()()1()1()1()1()1( ].[.

2
)(

2

rXXwr
M

M
XNwwXwwXw blceH

sp
bls

pe
bl

OH

Hsp
blw

spsp
bl

cm
H

a
Ha

g
Hg ia

+
?
?
?

?
?
?
?

?
+++=         (A.9.1) 

 
 
 
Oxigênio: 



 143

1
0)()()()()(

1
)()()()()1()1()1()1()1(

.
34

.

.)(.

32
32

42
42

2

r
M

M
X

M
M

XXXw

r
M
M

XNwwXwwXw

CONa

sp
CONa

SONa

Osp
SONa

blmt
O

sp
bls

pe
bl

OH

Osp
blw

spsp
bl

cm
O

a
Oiaa

g
Og

?
?
?

?

?
?
?

?

?
?
?

?
?
?
?

?
+

?
?
?

?
?
?
?

?
++

+
?
?
?

?
?
?
?

?
+++=

               (A.9.2) 

 
Enxofre: 

1
)()()()()()1()1( .

42
42

2
2

r
M

M
X

M
M

XXXwXw
SONa

Ssp
SONa

SNa

Sblmt
SNa

blmt
S

sp
bls

pe
bl

g
Sg ?

?

?

?

?
?

?

?

?
?
?

?
?
?
?

?
+

?
?

?

?

?
?

?

?

?
?
?

?
?
?
?

?
+=                  (A.9.3) 

 
Carbono: 

1
)()()()()()1()1( ..

32
32

r
M

M
XXXwwXw

CONa

Csp
CONa

blmt
C

sp
bls

pe
bl

cm
C

g
Cg

?
?
?

?

?
?
?

?

?
?
?

?
?
?
?

?
++=                   (A.9.4) 

 
Sódio: 1

)()()1()1( .. rXwXw spNa
pe

bl
g

Nag =             (A.9.5) 
 
Nitrogênio: 

1
)()()()()1()1()1()1( ].[)( 1 rXXwXwwXw blmtin

sp
bls

pe
bl

a
NiaaNg ++=                     (A.9.6) 

 
 
Portanto a vazão de gases que irão de zona primária para a zona secundária: 
 

)1()1()1()1()1()1()1()1()1()1()1()1()1( . gNg
g

Nag
g

Cg
g

Sg
g

Og
g

Hgg XwXwXwXwXwXww +++++=  
     (A.9.7) 

 
A energia radiante transferida pela parede para os gases é dada por: 
 

))460()460(( 44)1()1()1(
1

+?+=
•

bg
g

r
g

b

g

b TTUAQ                      (A.9.8) 
 

A partir do balanço de energia, temos que: 
 

( )( )
( ) ( ) ( )

)80(

8080

.80

)80()80()...(

)()()()()(

1
)()()()()(

2

???+

+??+?+

+??+

+?+?=

••

gpggb

C
cb

pg
cm

sm
cmsp

blpwv
cs

w

cb
OH

sp
blw

sp
bl

sp
pbl

pe
bl

iapaiaapaagPgg

TcwQQ

TcwwTcw

rHXTcw

TcwTcwTcV
dt
d

g
?

                    (A.9.9) 

 
Com isso, podemos chegar a seguinte equação: 
 

( )bgrlbb TTUAQ ?=
•

                                 (A.9.10) 



 144

( ) ( )
bg

bg
rrl TT

TT
UU

?

+?+
=

44 460460
                       (A.9.11) 

 
A partir deste balanço, sabendo-se de que a dinâmica dos gases é 

suficientemente rápida, podemos assumir a equação algébrica: 
 

80)]80(

)80().()80(.

)..)80((

)80(.)80(.[
.

1

)1()1(
)1(

)()()()()(

1
)()()()()(

)1()1()1()1()1()1(
)1()1()1()1(

)1(

2

+?++

+??+?+

+??+

+?+?
+

=

•

b
g

rl
g

b

C
cb

pg
cm

sm
cmsp

blpwv
cs

w

cb
OH

sp
blw

sp
bl

sp
pbl

pe
bl

iapaiaapaa
pgg

g
rl

g
b

g

TUAQ

TcwwTcw

rHXTcw

TcwTcw
cwUA

T

                            (A.9.12) 

 
Tabela 9 – Zona Primária 
variável  valor unidade descrição 

)1(
Hw  1935,0 

hrlb  Vazão de H no licor negro na zona primária 
)1(

Ow  51569,0 
hrlb  Vazão de O no licor negro na zona primária  

)1(
Sw  580,0 

hrlb  Vazão de S no licor negro na zona primária 

)1(
Cw  18828,0 

hrlb  Vazão de C no licor negro na zona primária 

)1(
Naw  1955,0 

hrlb  Vazão de Na no licor negro na zona primária 

)1(
2 SNa

w  49,0 hrlb  Vazão de Na2S no licor negro na zona primária 
)1(

42 faSONa
w  779,0 hrlb  Vazão de Na2SO4 na forma de cinzas na zona primária 

)1(
32 faCONa

w  645,0 hrlb  Vazão de Na2CO3 na forma de cinzas na zona primária 
)1(

Nw  138068,0 
hrlb  Vazão de C no licor negro na zona primária 

)1(
2OH

w  50035,0 hrlb  Vazão de H2O na zona primária 
)1(

totalw  253722,0 hrlb  Vazão de total na zona primária 
•

)1(
sensQ  

131,33E6 hrBTU/  Calor sensível na zona primária 

•
)1(

transfQ  
1,43E6 hrBTU /  Calor transferido da zona primária para o 

efervedor 

 
 
 
 

3.10. Zona Secundária: 
 
 Os balanços materiais dos sólidos e gases foram separados por elementos: 
 



 145

Hidrogênio: 

 
)1()1(

2
)()()(

2
)()()()()2()2()2()2()2(

.

.
2

)(
2

g
Hg

blce
H

sp
bls

pe
bl

OH

Hsp
blw

spsp
bl

cm
H

a
Hiaa

g
Hg

XwrXXw

r
M

M
XNwwXwwXw

++

+
?
?
?

?
?
?
?

?
+++=

           (A.10.1) 

  
Oxigênio: 

)1()1(

2
0)()()()()(

2
)()()()()2()2()2()2()2(

.
34

.

.)(

32
32

42
42

2

g
Og

CONa

sp
CONa

SONa

Osp
SONa

blmt
O

sp
bls

pe
bl

OH

Osp
blw

spsp
bl

cm
O

a
Oiaa

g
Og

Xw

r
M

M
X

M
M

XXXw

r
M
M

XNwwXwwXw

+

+
?
?
?

?

?
?
?

?

?
?
?

?
?
?
?

?
+

?
?
?

?
?
?
?

?
++

+
?
?
?

?
?
?
?

?
+++=

           (A.10.2) 

 
Enxofre: 

)1()1(
2

)()()()()()2()2( ..
42

42
2

2

g
Sg

SONa

Ssp
SONa

SNa

Ssp
SNa

blmt
S

sp
bls

pe
bl

g
Sg XwrM

M
X

M
M

XXXwXw +
?
?

?

?

?
?

?

?

?
?
?

?
?
?
?

?
+

?
?

?

?

?
?

?

?

?
?
?

?
?
?
?

?
+=  

                   (A.10.3) 
 
Carbono: 

)1()1(
2

)()()()()()2()2( ..
32

32

g
Cg

CONa

Csp
CONa

blmt
C

sp
bls

pe
bl

cm
C

g
Cg XwrM

M
XXXwwXw +

?
?
?

?

?
?
?

?

?
?
?

?
?
?
?

?
++=     (A.10.4) 

 
Sódio: 

)1()1(
2

)()()2()2( g
Nag

sp
Na

pe
bl

g
Nag XwrXwXw +=          (A.10.5) 

 
Nitrogênio: 

)1()1(
2

)()()()()2()2()2()2( ][)( 2 gNg
blmt

in
sp

bs
pe

bl
a

Niaa
g

Ng XwrXXwXwwXw +++=      (A.10.6) 
 
Balanço Total na Zona Terciária: 

)2()2()2()2()2()2()2()2()2()2()2()2()2( g
Ng

g
Nag

g
Cg

g
Sg

g
Og

g
Hgg XwXwXwXwXwXww +++++=  

              (A.10.7) 
 
Calor irradiado para a parede proveniente dos gases quentes: 

))460()460(( 44)2()2()2(
2

+?+=
•

bg
g

r
g

b

g

b TTUAQ         (A.10.8) 
 
Balanço de Energia: 



 146

( )

)80(.)80(.

)80().()80(

.)80(

)80(.)80(.)...(

)1()1()1(

)()()()()(

2
)()()()()(

2

?+???+

+??+?+

+??+

+?+?=

••

gpgggpggb

C
cb

pg
cm

sm
cmsp

blpwv
cs

w

cb
OH

sp
blw

sp
bl

sp
pbl

pe
bl

iapaiaapaagPgg

TcwTcwQQ

TcwwTcw

rHXTcw

TcwTcwTcV
dt
d

g
?

     (A.10.9) 

 
Com isso, podemos escrever: 
 

).(. bgrlbb TTUAQ ?=
•

         (A.10.10) 

bg

bg
rrl TT

TT
UU

?

+?+
=

44 )460()460(
        (A.10.11) 

 
Temperatura do gás: 

80)]80()80.(.

)80().()80(.

)..)80((

)80(.)80(.[
.

1

)2()2(
)2(

)1()1()1(

)()()()()(

2
)()()()()(

)2()2()2()2()2()2(
)2()2()2()2(

)2(

2

+?++?+

+??+?+

+??+

+?+?
+

=

•

b
g

rl
g

bgpgg

C
cb

pg
cm

sm
cmsp

blpwv
cs

w

cb
OH

sp
blw

sp
bl

sp
pbl

pe
bl

iapaiaapaa
pggrlb

g

TUAQTcw

TcwwTcw

rHXTcw

TcwTcw
cwUA

T

  (A.10.12) 

 
 
Tabela 10 – Zona Secundária 
Variável valor unidade descrição 

)2(
Hw  3216,0 

hrlb  Vazão de H no licor negro na zona secundária 
)2(

Ow  85918,0 
hrlb  Vazão de O no licor negro na zona secundária 

)2(
Sw  964,0 

hrlb  Vazão de S no licor negro na zona secundária 

)2(
Cw  31922,0 

hrlb  Vazão de C no licor negro na zona secundária 

)2(
Naw  3297,0 

hrlb  Vazão de Na no licor negro na zona secundária 

)2(
2 SNa

w  81,0 hrlb  Vazão de Na2S no licor negro na zona secundária 
)2(

42 faSONa
w  1294,0 hrlb  Vazão de Na2SO4 na forma de cinzas na zona secundária 

)2(
32 faCONa

w  1072,0 hrlb  Vazão de Na2CO3 na forma de cinzas na zona secundária 
)2(

Nw  229994,0 
hrlb  Vazão de C no licor negro na zona secundária 

)2(
2OH

w  83198,0 hrlb  Vazão de H2O na zona secundária 
)2(

totalw  416460,0 hrlb  Vazão de total na zona secundária 



 147

•
)2(

sensQ  
219,31E6 hrBTU /  Calor sensível na zona secundária 

•
)2(

transfQ  
4.83E6 hrBTU/  Calor transferido da zona secundária para o 

efervedor 

 
 

A.11. Zona Terciária: 
 
 Na zona Terciária ocorre a formação do carbonato de sódio, sendo que 
assume-se que o mesmo encontra-se todo na forma de cinzas. As cinzas irão cair 
no economizador e a partir disso serão recirculados até o tanque de mistura. O 
particulado chegará no precipitador através do gás de conduto. 
 
Hipóteses na Zona Terciária: 
 

1. A combustão ocorre na zona terciária. 
2. As condições na zona terciária determinam a composição final dos gases de 

combustão e do particulado. 
3. A formação do dióxido de enxofre, sulfeto de hidrogênio e monóxido de 

carbono é determinada principalmente pela quantidade de oxigênio em 
excesso e pela turbulência durante a injeção do ar de combustão na zona 
terciária. 

4. O carbono disponível no início do processo formará o dióxido de carbono. 
5. O hidrogênio presente formará a água. 
6. O nitrogênio passará por esta zona sem sofrer modificações. 
7. O oxigênio contribuirá para a formação do gás oxigênio. 

 
A seguir, encontram-se os balanços das reações que ocorrem nesta zona: 
 

Dióxido de Enxofre: 
 ).exp(... )()2()2()3()3()3( 3

22222

dg
OSOSO

g
Sg

g
SO

g
SOg XXwKXw ??? ??=        (A.11.1) 

 
Sulfeto de Hidrogênio: 

)exp( )()2()2()3()3()3( 3
22222

dg
OSOSH

g
Sg

g
SH

g
SHg XXwKXw ??? ??=        (A.11.2) 

 
Monóxido de Carbono: 

).exp(. )()2()2()3()3()3( 3
2

dg
OCOCO

g
Cg

g
CO

g
COg XXwKXw ??? ??=                  (A.11.3) 

 
sendo que ?  corresponde a função de turbulência que pode ser escrita como sendo:  

2)( aa v?? =              (A.11.4) 
 
Balanço de massa para o Ar Terciário: 

600,3...
0 apaa

Avw ?=            (A.11.5) 
 

Substituindo-se a equação (A.11.5) na equação (A.11.4), temos que: 
 



 148

 
2

)3(

)3( 600,3.
1

0
?
?
?

?
?
?
?

?
=

p

a

a A
w

?
?                       (A.11.6) 

 
Total de sais formados: 

?
?

?
?
?

?

?
?
?

?

?
?
?

?

?
?
?

?

?
?
?

?
?

?
?
?

?

?
?
?

?
?=

S

SONa

SH

Sg
SHg

SO

Sg
SOgSg

g
SONag M

M
M
M

Xw
M
M

XwXwXw 42
2

2
2

242
.. )3()3()3()3()2()2()3()3(    (A.11.7) 

 
Sais na forma de cinza: 

1)3()3()3(
.

)3( .
4242 fa

g
SONag

g
faSONag HXwXw =           (A.11.8) 

 
Sais na forma de partículas 

)3(
.

)3()3()3()3(
.

)3(
424242

g
faSONag

g
SONag

g
pSONag XwXwXw ?=                    (A.11.9) 

 
Total de Carbonato de Sódio formado: 

?
?

?
?
?

?

?
?
?

?

?
?
?

?

?
?
?

?

?
?
?

?
?=

Na

CONa

SONa

Nag
Nag

g
g M

M
M

M
XwXwXw

SONagCONa .2
.

2
. 32

42
4232

)3()3()2()2()3()3(
                 (A.11.10) 

 
Carbonato de Sódio na forma de cinzas: 

2)3()3()3()3(
3232 fa

g
CONag

g
faCONag HXwXw =             (A.11.11) 

 
Carbonato de Sódio na forma de partículas: 

)3()3()3()3()3()3(
323232

g
faCONag

g
CONag

g
pCONag XwXwXw ?=                    (A.11.12) 

 
Dióxido de Carbono: 

( )

?
?

?
?
?

?

?
?
?

?

?
?
?

?

?
?
?

?

?
?
?

?
+??

?

?
?
?

?
?=

C

CO

CONa

Cg
faCONag

g
pCONag

CO

Cg
COgCg

g
COg

M
M

M
M

XwXw
M
M

XwXwXw

2

32
32322

.

)3()3()3()3()3()3()2()2()3()3(

 

                         (A.11.13) 
 
Água: 

??
?

?
??
?

?

?
?
?

?

?
?
?

?

?
?
?

?
?
?
?

?
?++=

H

OH

SH

Hg
SHg

a
Hiaa

g
Hg

g
OHg M

M
M

M
XwXwwXwXw

2
.

2
).(. 2

2
2

32
2

)3()3()()3()3()()2()3()3(
 

               (A.11.14) 
 

Nitrogênio: 
)()3()3()()2()3()3( 32

2
).(. aNiaa

g
Ng

g
Ng XwwXwXw ++=                 (A.11.15) 

Oxigênio: 



 149

)3()3()3()3()3()3()3()3(

)3()3()3()3()3(
.

)3()3(
.

)3(

)3(
.

)3()3(
.

)3()3()3()2()3()3(

222

223242

32422

g
Ng

g
OHg

g
COg

g
COg

g
SHg

g
SOg

g
faCONag

g
faSONag

g
pCONag

g
pSONagiaag

g
Og

XwXwXwXw

XwXwXwXw

XwXwwwwXw

????

+????

+??++=

                (A.11.16) 

 
Balanço Total no Superaquecedor: 

)3()3()2()3(
iaagg wwww ++=         (A.11.17) 

 
Fração de oxigênio no gás seco: 

)1( )3()3()3()3()3()3(

)3()3(
)(

324242322

23
2 g

pCONa
g

pSONa
g

faSONa
g

faCONa
g

OHg

g
Ogdg

O XXXXXw

Xw
X

?????
=               (A.11.18) 

 
Balanço de Energia: 
 
Energia de Combustão disponível na zona terciária: 

SH
g

SHgCO
g

COg

H

OHcb
OH

bls
Hbls

sp
bls

pe
bl

c

t

c

t

c

t

c

tg

HXwHXw

M

M
HXHXwQQQQQ

22

2

2

2121

)3()3()3()3(

)()()()(
)()()()()3(

2

??

+
?
?
?

?
?
?
?

?
?
?
?

?
?
?
?

?
?+??+=

•••••

 

             (A.11.19) 
 
Calor irradiado para a água a partir dos gases quentes: 

))460()460(( 44)3()3()3(
)3(

+?+=
•

bg
g

r
g

b

g

b TTUAQ       (A.11.20) 
 
Balanço de energia dos gases: 

)80(.)80(.

)80(.)80()( )2()2()2(

????+

+?+?+=

•

•

gpggbiapaia

paagpggggPgg

TcwQTcw

TcwTcwQTcV
dt
d

g
?

   (A.11.21)  

 A equação (A.11.20) também pode ser escrita como sendo: 
 

).(. bgrlbb TTUAQ ?=
•

         (A.11.22) 

bg

bg
rrl TT

TT
UU

?

+?+
=

44 )460()460(
        (A.11.23) 

 
Temperatura do gás: 

80)]80()80()80(

)80.(.[
1

)3()3()3()3()3()3()3(

)2()2()2(
)3(

)3()3()3()3(
)3(

+?+?+?+

?+
+

=
•

b
g

rl
g

biapaiaapaa

gpggg
pgg

g
rl

g
b

g

TUATcwTcw

TcwQ
cwUA

T
   (A.11.24) 

 
Tabela 11 – Zona Terciária 
variável  valor unidade descrição 



 150

)3(
Ow  17065,0 

hrlb  Vazão de O no licor negro na zona terciária 

)3(
42 paSONa

w  4900,0 hrlb  Vazão de Na2SO4 na forma de partículas na zona terciária 
)3(

42 faSONa
w  258,0 hrlb  Vazão de Na2SO4 na forma de cinzas na zona terciária 

)3(
32 faCONa

w  5827,0 hrlb  Vazão de Na2CO3 na forma de cinzas na zona terciária 
)3(
2SO

w  257,3 hrlb  Vazão de SO2 na zona terciária 
)3(
2SH

w  2,75 hrlb  Vazão de H2 S na zona terciária 
)3(

COw  753,6 
hrlb  Vazão de CO na zona terciária 

)3(
2CO

w  113494,0 hrlb  Vazão de CO2 na zona terciária 
)3(

Nw  358176,0 
hrlb  Vazão de N na zona terciária 

)3(
2OH

w  90737,0 hrlb  Vazão de H2O na zona terciária 
)3(

totalw  591467,0 hrlb  Vazão total na zona terciária 
•

)3(
sensQ  

314,51E6 hrBTU /  Calor sensível na zona terciária 

•
)3(

transfQ  
35,50E6 hrBTU/  Calor transferido da zona terciária para o 

efervedor 

 
 

A.12. Superaquecedor: 
 
 Na zona de superaquecimento o calor é transferido para as paredes da 
fornalha e para as grelhas através da radiação, e para o banco de tubos do 
aquecedor por convecção. 
 
Hipóteses no superaquecedor: 
 

1. A temperatura do vapor no superaquecedor é constante. 
2. A dinâmica do gás e a temperatura dos tubos do superaquecedor são 

omitidas para simplificar o modelo. 
3. O vapor proveniente do superaquecedor é submetido a uma alta pressão. 

Esta pressão pode ser considerada constante. 
 

A seguir, encontram-se os balaços materiais e de energia dos compostos 
envolvidos nas reações: 
 
Balanço material para água no gás de combustão:  

)4()()3()4()4( 3
22

. sb
g

OHg
g

OHg wXwXw +=                       (A.12.1) 
 
 
Balanço total do gás de combustão: 

)4()3()4(
sbgg www +=        (A.12.2) 



 151

 
Para o restante dos gases e partículas: )()3()4()4( 3. gig

g
ig XwXw =       (A.12.3) 

 
Balanço do vapor no superaquecedor: 

)4()4()5()4(
sbtdwstst wwww ?+=       (A.12.4) 

 
Total de vapor fundido: )6()5()4()4( sbsbsbsbt wwww ++=                   (A.12.5) 
 
 Calor irradiado a partir dos gases quentes: 

))460()460(( 44)4()4()4(
)4(

+?+=
•

bg
g

r
g

b

g

b TTUAQ          (A.12.6) 
 

A equação (A.12.6) pode ser escrita como sendo: 
 

).(. bgrlbb TTUAQ ?=
•

                      (A.12.7) 

bg

bg
rrl TT

TT
UU

?

+?+
=

44 )460()460(
          (A.12.8) 

 
Temperatura do gás: 

80])80(.)80(

)80(.[
1

)4()4()4()4()4(

)3()3()3(
)4()4()4()4()4(

)4(

++?+?+

+?
++

=

sbsbst
g

cshb
g

rl
g

b

gpgg
pggsh

g
C

g
rl

g
b

g

HwTUATUA

Tcw
cwAUUA

T
                (A.12.9) 

 
Balanço de Água no superaquecedor: 

?
?
?

?

?
?
?

?
??

?
=

•
).(

1 )5()4()5(
)4(

)5()4(
)4(

stststsh
wst

dw HHwQ
HH

w      (A.12.10) 

)(. )4()4()4(
)4(

stg
g

Csh

g

sh TTUAQ ?=
•

        (A.12.11) 
 
 
Fig.07: Funcionamento de um Superaquecedor 
 
Tabela 12 – Superaquecedor 
variável  valor unidade Descrição 

)4(
Ow  17065,0 

hrlb  Vazão de O no licor negro no superaquecedor  

)4(
42 paSONa

w  4900,0 hrlb  Vazão de Na2SO4 na forma de partículas no superaquecedor 
)4(

42 faSONa
w  258,0 hrlb  Vazão de Na2SO4 na forma de cinzas no superaquecedor 

)4(
32 faCONa

w  5827,0 hrlb  Vazão de Na2CO3 na forma de cinzas no superaquecedor 
)4(
2SO

w  257,3 hrlb  Vazão de SO2 no superaquecedor 
)4(

2SH
w  2,75 hrlb  Vazão de H2 S no superaquecedor 



 152

)4(
COw  753,6 

hrlb  Vazão de CO no superaquecedor 

)4(
2CO

w  113494,0 hrlb  Vazão de CO2 no superaquecedor 
)4(

Nw  358176,0 
hrlb  Vazão de N no superaquecedor 

90737,0 hrlb  Vazão de H2O no superaquecedor )4(
2OH

w  
366673,0 hrlb  Vazão de H2O da zona de superaquecimento que 

sai na forma de vapor. 
591467,0 hrlb  Vazão total no superaquecedor )4(

totalw  
366673,0 hrlb  Vazão total dos componentes que deixam o 

superaquecedor na forma de vapor. 
220,43E6 hrBTU /  Calor sensível no superaquecedor que é 

transferido para o efervedor 
•

)4(
sensQ  

500,80E6 hrBTU/  Calor sensível do superaquecedor que é 
transferido para o vapor. 

 
 
 
 

A.13. Efervedor: 
 
Hipóteses no Balão: 
 

1. A temperatura da água e do vapor nos tubos do efervedor são constantes e 
iguais a de saturação. 

2. A perda de calor é constante. 
 
Balanço material para água no gás de combustão: 

)5()()4()5()5( 4
22

. sb
g

OHg
g

OHg wXwXw +=              (A.13.1) 
 
Balanço total do gás de combustão: 

)5()4()5(
sbgg www +=               (A.13.2) 

 
Calor irradiado a partir dos gases quentes: 

)( )5()5()5(
)5(

bg
g

C
g

b

g

b TTUAQ ?=
•

            (A.13.3) 
 

A Temperatura Tb é considerada constante. 
 
Balanço Total para a água fervendo: 

1)()()()()()()5( 1234 Fcb

b

wcb

b

g

b

g

b

g

b

g

b

g

bbt QQQQQQQQ
••••••••

++++++=          (A.13.4) 
 
Temperatura do gás: 

[ ] 80)80()80(.1 )5()5()5()4()4()4()5()5()5()5()5( ++?+?+= sbsbb
g

C
g

bgpgg
pgg

g
C

g
b

g HwTUATcw
cwUA

T  



 153

               (A.13.5) 
  
Produção de Vapor: 
 

?
?

?
?
?

?
?+??

?
=

••
))((

1 )6()'5()4()5(
)6()5(

)5(
wwdwbdlbt

wst
st HHwwQQ

HH
w                            (A.13.6) 

 

)5()4(

)6()5()5()4(
)6()5(

)5()4(

)6()5()(
)6()5()5(

)5(

))((

.)(
4

wst

wwstst
wst

wst

ww
g

shwwbdlbt

st

HH
HHHH

HH

HH
HH

QHHwQQ
w

?
??

??

?
?

????
=

•••

                  (A.13.7) 

 
 
 
 
 
 
 
Tabela 13 – Efervedor 
variável  valor unidade descrição 

)5(
Ow  17065,0 

hrlb  Vazão de O no licor negro no efervedor que 
segue para o economizador 

)5(
42 paSONa

w  4900,0 hrlb  Vazão de Na2SO4 na forma de partículas no efervedor que segue para o economizador 
)5(

42 faSONa
w  258,0 hrlb  Vazão de Na2SO4 na forma de cinzas no efervedor que segue para o economizador 

)5(
32 faCONa

w  5827,0 hrlb  Vazão de Na2CO3 na forma de cinzas no efervedor que segue para o economizador 
)5(
2SO

w  257,3 hrlb  Vazão de SO2 no efervedor que segue para o 
economizador 

)5(
2SH

w  2,75 hrlb  Vazão de H2 S no efervedor que segue para o 
economizador 

)5(
COw  753,6 

hrlb  Vazão de CO no efervedor que segue para o 
economizador 

)5(
2CO

w  113494,0 hrlb  Vazão de CO2 no efervedor que segue para o 
economizador 

)5(
Nw  358176,0 

hrlb  Vazão de N no efervedor que segue para o 
economizador 

90737,0 hrlb  Vazão de H2O no efervedor que segue para o 
economizador 

7000,0 hrlb  Vazão de H2O no efervedor que é 
desperdiçada 

)5(
2OH

w  

366673,0 hrlb  Vazão de H2O no efervedor que segue para o 
superaquecedor 

7000,0 hrlb  Vazão total no efervedor que é desperdiçada )5(
totalw  366673,0 hrlb  Vazão total no efervedor que segue para o 

superaquecedor 



 154

 591467,0 hrlb  Vazão total no efervedor que segue para o 
economizador 

1,87E6 hrBTU /  Calor sensível perdido 
441,36E6 hrBTU/  Calor sensível para o superaquecedor 

•
)5(

sensQ  
115,11E6 hrBTU /  Calor sensível do efervedor que é transferido 

pro economizador. 
•

)5(
tranfQ  

16,49E6 hrBTU/  Calor transferido 

 
 

A.14. Economizador: 
 
 No economizador o calor é transferido dos gases de combustão para o banco 
de tubos do economizador.  
 
Hipóteses no economizador: 
 

1. A temperatura do gás é omitida. 
2. A temperatura dos tubos do economizador é igual a da água. 
3. Os efeitos causados pela separação de cinzas nos balanços de energia serão 

ignorados 
4. O economizador é considerado uma unidade única não ocorrendo 

divergências dentro do mesmo. 
 
Balanços Materiais: 
 

)()5()6()6( 5
4242

. g pSONag
g

pSONag XwXw =             (A.14.1) 
 

)()5()6()6( 5
3232

. g pCONag
g

pCONag XwXw =             (A.14.2) 
 

)()5()6()6( 5
4242

. g faSONag
g

faSONag XwXw =             (A.14.3)
   

)()5()6()6( 5
3232

. g faCONag
g

faCONag XwXw =             (A.14.4) 
 
 
Balanço material para água no gás de combustão: 

)6()()5()6()6( 5
22

. sb
g

OHg
g

OHg wXwXw +=             (A.14.5) 
 
 
Balanço total do gás de combustão: 

)6()6()6()6()6()5()6(
3242

g
faCONag

g
faSONagsbgg XwXwwww ??+=          (A.14.6) 

 
Balanço total de água através do economizador:  



 155

)5()5()5()6(
dwbdstw wwww ++=                   (A.14.7) 

 
Calor irradiado a partir dos gases:  

)( )6()6()6()6(
)6(

wgCecec TTUAQ ?=
•

                         (A.14.8) 
 
Temperatura do gás: 

[ ] 80)80()80(1 )6()6()6()6()5()5()5()6( ++?+?
+

= sbsbw
g

C
g

ecgpgg
pgCec

g HwTUATcwcwUA
T

g

 

                 (A.14.9) 
 
Temperatura da água no Economizador: 

[ ])(1 )6()6()6()6()6()6()6(
)6(

)6()6()6()6(
)6(

wiwpwwiwwiwec
pwwpecec

w TTcHwHwQ
cmcm

T
dt
d

?+?
?
?
?

?

?
?
?

?
+

+
=

•

 

               (A.14.10) 
 
Entalpia da Água na caldeira:  

)( )6()6()6()6()6( wiwpwwiw TTcHH ?+=                                   (A.14.11) 
  
 
 
Tabela 14 – Economizador 
variável  valor unidade descrição 

)6(
Ow  17065,0 

hrlb  Vazão de O no licor negro no economizador 
que segue para o precipitador 

)6(
42 paSONa

w  4900,0 hrlb  Vazão de Na2SO4 na forma de partículas no economizador que segue para o precipitador 
)6(

42 faSONa
w  258,0 hrlb  Vazão de Na2SO4 na forma de cinzas no economizador que segue para o tanque de 

mistura 
)6(

32 faCONa
w  5827,0 hrlb  Vazão de Na2CO3 na forma de cinzas no economizador que segue para o tanque de 

mistura 
)6(
2SO

w  257,3 hrlb  Vazão de SO2 no economizador que segue 
para o precipitador 

)6(
2SH

w  2,75 hrlb  Vazão de H2 S no economizador que segue 
para o precipitador 

)6(
COw  753,6 

hrlb  Vazão de CO no economizador que segue 
para o precipitador 

)6(
2CO

w  113494,0 hrlb  Vazão de CO2 no economizador que segue 
para o precipitador 

)6(
Nw  358176,0 

hrlb  Vazão de N no economizador que segue para 
o precipitador 

373673,0 hrlb  Vazão de H2O do economizador que segue 
para o efervedor 

)6(
2OH

w  
90737,0 hrlb  Vazão de H2O no economizador que segue 



 156

 para o precipitador 
373673,0 hrlb  Vazão total dos componentes que deixam o 

economizador e seguem para o efervedor. 
6085,0 hrlb  Vazão total no economizador que segue para 

o tanque de mistura. 

)6(
totalw  

591467,0 hrlb  Vazão total dos componentes que deixam o 
economizador e seguem para o precipitador 

152,38E6 hrBTU /  Calor sensível do economizador que é 
transferido para o efervedor 

•
)6(

sensQ  
54,84E6 hrBTU /  Calor sensível do economizador que é 

transferido para o precipitador 
 
 

3.15. Tanque de Mistura: 
 
 

Neste tanque é misturado, além de cinzas do precipitador, os sais de 
reposição. Os balanços de massa, na maior parte, são expressas com acúmulo em 
estado dinâmico, por equações diferenciais ordinárias.  
 
Fração de sulfato de sódio no tanque de mistura: 

( ) ( )
42

6
42

6
4242

...... )()6()()6( SONablpe
g

pSONag
g

faSONagscSONablbl XwKXwXwwXVdt
d

?++=?   

   (A.15.1) 
 
O volume do tanque de mistura é constante, portanto: 

blmi
bl

mi
bl

bl

bl V
ww

== )(
)(

??             (A.15.2) 

 
Balanço de massa do licor: 

)(
)( .

mi
blmi

bl

bl
bl ww ?

?
=             (A.15.3)

  
 A equação (A.15.1) pode ser escrita como sendo: 
  

( ) ?
?
?

?
?
?

+= blSONaSONablblSONablbl dt
d

XX
dt
d

VXV
dt
d

???
424242

...                (A.15.4) 

 
 
 
Balanço de massa total no tanque de mistura: 

( ) [ ]
[ ] blscpeg pCONag faCONag

pe
g

pSONa
g

faSONag
mi

blblbl

wwKXXw

KXXwwV
dt
d

?+++

+++=

.

...

)()()6(

)()()6()(

6

32

6

32

6

42

6

42
?

      (A.15.5) 



 157

 
Fração de sal no tanque de mistura: 

( )

].

)....()1.(

....[
1

)()(

)()()6()()6()(

)()6()()6()(
)()(

)(

42

42323242

42

6

4242

mt
SONa

mi
bl

mt
SONape

mt
pCONag

mt
faCONag

mt
SONa

pe
mt

pSONag
g

faSONag
mt

scmt
bl

mt
bl

mt
SONa

Xw

XKXwXwX

KXwXww
V

X
dt
d

?

++??

++=
?

  

              (A.15.6) 
 
Densidade do licor no tanque de mistura: 

( )
( ) ]..

..1.[
1

)()()()6(

)()()6(
)(

)(
)(

)(
)(

3232

6

42

6

42

mt
scpe

mt
pCONa

mt
faCONag

pe
g

pSONa
g

faSONagmi
bl

mt
blmi

blmt
bl

mt
bl

wKXXw

KXXww
Vdt

d

+++

+++
?
?

?

?

?
?

?

?
?=
?

?
?

 

               (A.15.7) 
 

( )
?
?
?

?

?
?
?

?
??
?

?
??
?

?
?

?
???

?

?
??
?

?
?

?
?+= ??

2
64)( 25

8,1
32

10.94,125
8,1

32
10.69,316499970,06242796 mtmtmttsmt

TT
X?  

                         (A.15.8) 
onde 0,06242796 é fator de conversão de unidades. 
 
Carbonato: 

( ) )()()6()6()()6()()()(
3232

6
3232

... mt CONa
mt

blpe
g

pCONag
g

faCONag
mt

CONa
mt

bl
mt

bl XwKXwXwXVdt
d

?+=?  

              (A.15.9) 
 
Fração de Carbonato no tanque de mistura: 

( ) ].....
)1).(...[(

1

)()()()()()6()6()6(

)()()6()6()6(
)()(

)(

3232
6

3232

32323232

mt
CONa

mi
bl

mt
CONa

mt
scpe

g
pCONag

g
faCONag

mt
CONape

mt
pCONag

g
faCONagmt

bl
mt

bl

mt
CONa

XwXwKXwXw

XKXwXw
V

X
dt
d

?++?

+?+=
?

 

            (A.15.10) 
 

Sólidos: ( ) blsblmiblsmiblblsblbl XwXwXVdt
d

.... )()( ?=?      (A.15.11) 

 
 
 
Fração de sólidos no licor dentro do tanque de mistura: 

( )
( )( ) ]...

.[
1

)()()()()()()6(

)()()(
)()(

)(

32324242

mt
bls

mt
scpe

mt
pCONa

mt
faCONape

mt
pSONa

mt
faSONag

mt
bls

mi
bls

mi
blmt

bl
mt

bl

mt
bls

XwKXXKXXw

XXw
V

X
dt
d

++++?

+?=
?

 

              (A.15.12) 



 158

 
Água: 

)()()()(
3242

1 mtbls
mt

CONa
mt

SONa
mt

blw XXXX ???=         (A.15.13) 
 

Por simplicidade, assume-se que a temperatura da saída do tanque é igual a 
temperatura do licor que entra. 

 

blmt TT =                        (A.15.14)
  
 
 
Tabela 15 – Tanque de Mistura 
variável  valor unidade descrição 

)( mt
Hw  3216,0 

hrlb  Vazão de H no licor negro no tanque de 
mistura 

)( mt
Ow  30602,0 

hrlb  Vazão de O no licor negro no tanque de 
mistura  

)( mt
Sw  5422,0 

hrlb  Vazão de S no licor negro no tanque de 
mistura 

)( mt
Cw  34002,0 

hrlb  Vazão de C no licor negro no tanque de 
mistura 

)( mt
Naw  17920,0 

hrlb  Vazão de Na no licor negro no tanque de 
mistura 

)(
2

mt
SNaw  441,0 

hrlb  Vazão de Na2S no licor negro no tanque de 
mistura 

)(
42

mt
paSONaw  4851,0 

hrlb  Vazão de Na2SO4 na forma de partículas no 
tanque de mistura 

)(
42

mt
faSONaw  

2184,0 hrlb  Vazão de Na2SO4 na forma de cinzas no 
tanque de mistura 

)(
32

mt
faCONaw  

5827,0 hrlb  Vazão de Na2CO3 na forma de cinzas no 
tanque de mistura 

)(
2

mt
OHw  53944,0 hrlb  Vazão de H2O no tanque de mistura 
)( mt

totalw  158704,0 hrlb  Vazão de total no tanque de mistura 
•

)(mt
sensQ  

9,999E6 hrBTU/  Calor sensível transferido para o aquecedor 

 

3.16. Precipitador: 
 
 Os gases provenientes do economizador vão diretamente para o precipitador. 
O particulado fica retido no precipitador e em seguida é encaminhado para o tanque 
de mistura. 
 

O cálculo de vazões no precipitador assume uma relação de eficiência, que 
deve ser de 95 a 99%, dada por: 
 



 159

?
?
?

?

?
?
?

?

??
??=

)1.(
exp1 )()()6(

1
6

32
6

42

g
pCONa

g
pSONag

pe
pe

XXw

K
K                       (A.16.1) 

onde peK  é o parâmetro do precipitador 
 

Os balanços de massa são expressos em estado estacionário, ou seja, por 
equações algébricas. Sulfato de sódio como particulado que sai do precipitador na 
corrente de gás é calculado por: 

 
)()6()()( 6

4242
.).1( g pSONagpe

gpr
pSONa

pr
g XwKXw ?=                      (A.16.2) 

 
Carbonato de sódio como particulado que sai do precipitador na corrente de 

gás é calculado por: 
 

)()6()()( 6
3232

.).1( g pCONagpe
gpr

pCONa
pr

g XwKXw ?=          (A.16.3) 
 

Os balanços por componentes de gases que saem do precipitador, são dados 
sob a forma de frações mássicas: 
 

Dióxido de Enxofre:  
)()6()()( 6

22
. gSOg

gpr
SO

pr
g XwXw =        (A.16.4) 

 

Sulfeto de Hidrogênio: 
)()6()()( 6

22
. g SHg

gpr
SH

pr
g XwXw =        (A.16.5) 

 

Monóxido de Carbono: 
)()6()()( 6. gCOg

gpr
CO

pr
g XwXw =        (A.16.6)  

 

Dióxido de Carbono:  
)()6()()( 6
22

. gCOg
gpr

CO
pr

g XwXw =         (A.16.7) 
 

Água:  
)()6()()( 6

22
. g OHg

gpr
OH

pr
g XwXw =           (A.16.8) 

 

Nitrogênio: 
)()6()()( 6

22
. gNg

gpr
N

pr
g XwXw =          (A.16.9) 

 
Oxigênio: )()6()()( 6

22
. gOg

gpr
O

pr
g XwXw =         (A.16.10) 

 
Balanço total de gás: 

( )[ ])()()6()( 6
32

6

42
1 g pCONa

g
pSONapeg

pr
g XXKww +?=                  (A.16.11) 

 
 
 
 

A temperatura dos gases é considerada constante: 



 160

)6()( TT pr =                      (A.16.12) 
 
 
Tabela 16 – Precipitador 
variável  valor unidade descrição 

)( pr
Ow  17065,0 

hrlb  Vazão de O no licor negro no precipitador 

49,0 hrlb  Vazão de Na2SO4 na forma de partículas no 
precipitador que vai para o gás de conduto 

)(
42

pr
paSONaw  

4851,0 hrlb  Vazão de Na2SO4 na forma de partículas no 
precipitador que segue para o tanque de 
mistura 

)(
2

pr
SOw  257,3 

hrlb  Vazão de SO2 no precipitador 

)( pr
COw  753,6 

hrlb  Vazão de CO no precipitador 

)(
2

pr
COw  113494,0 

hrlb  Vazão de CO2  no precipitador 

)( pr
Nw  358176,0 

hrlb  Vazão de N no precipitador 

)(
2

pr
OHw  90737,0 hrlb  Vazão de H2O no precipitador 

580532,0 hrlb  Vazão total dos componentes do precipitador 
que forma o gás de conduto 

)( pr
totalw  

4851,0 hrlb  Vazão total dos componentes do precipitador 
que segue para o tanque de mistura 

•
)( pr

sensQ  
54,84E6 hrBTU /  Calor sensível do precipitador 

 
 
 
 

 
 
 
 
 
 
 
 
 
 



 161

 
 
 
 
 
 
 

 
 

APÊNDICE B 
Exemplo de mensagens trocadas pelos agentes de controle e comunicação 

nos testes do capítulo 6.3.1 

 
 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
 



 162

APÊNDICE B 
 

Sequencia de mensagens trocadas pelos agentes na primeira negociação, feita 

pelos agentes de controles, no teste do estado estacionario do sistema controlado. 

 
(REQUEST 
 :sender  ( agent-identifier :name tcp4000@song04:1099/JADE  :addresses 
(sequence http://192.168.0.90:7778/acc ) :X-JADE-agent-classname 
SocketProxyAgent.SocketProxyAgent ) 
 :receiver  (set ( agent-identifier :name ReducaoAgente@song04:1099/JADE ) 
) 
 :content  "88.0137 2537.6299 104.44 134.44 1750"  
 :reply-with  tcp4000.tcp4000-ClientConnection-Thread-11.1183045995640  
:in-reply-to  noValue ) 
 
(CFP 
 :sender  ( agent-identifier :name ReducaoAgente@song04:1099/JADE  
:addresses (sequence http://192.168.0.90:7778/acc ) :X-JADE-agent-classname 
SocketProxyAgent.Reducao ) 
 :receiver  (set ( agent-identifier :name VaporAgente@song04:1099/JADE ) ) 
 :content  "88.0137 2537.6299 104.44 134.44 1750"  
 :reply-with  R1183045995796_0  :protocol  fipa-contract-net 
 :conversation-id  C30147129_1183045995796 ) 
 
(PROPOSE 
 :sender  ( agent-identifier :name VaporAgente@song04:1099/JADE  :addresses 
(sequence http://192.168.0.90:7778/acc ) :X-JADE-agent-classname 
SocketProxyAgent.Vapor ) 
 :receiver  (set ( agent-identifier :name ReducaoAgente@song04:1099/JADE  
:addresses (sequence http://192.168.0.90:7778/acc ) :X-JADE-agent-classname 
SocketProxyAgent.Reducao ) ) 
 :content  "101.21301288000001 146.60507227999997"  
 :reply-with  ReducaoAgente@song04:1099/JADE1183045995828  :in-reply-to  
R1183045995796_0  :protocol  fipa-contract-net 
 :conversation-id  C30147129_1183045995796 ) 
 
(ACCEPT-PROPOSAL 
 :sender  ( agent-identifier :name ReducaoAgente@song04:1099/JADE  
:addresses (sequence http://192.168.0.90:7778/acc ) :X-JADE-agent-classname 
SocketProxyAgent.Reducao ) 
 :receiver  (set ( agent-identifier :name VaporAgente@song04:1099/JADE  
:addresses (sequence http://192.168.0.90:7778/acc ) :X-JADE-agent-classname 
SocketProxyAgent.Vapor ) ) 
 :content  "101.21301288000001 NO"  
 :reply-with  R1183045995921_0  :in-reply-to  
ReducaoAgente@song04:1099/JADE1183045995828  :protocol  fipa-contract-net 
 :conversation-id  C30147129_1183045995796 ) 
 
(INFORM 
 :sender  ( agent-identifier :name VaporAgente@song04:1099/JADE  :addresses 
(sequence http://192.168.0.90:7778/acc ) :X-JADE-agent-classname 
SocketProxyAgent.Vapor ) 
 :receiver  (set ( agent-identifier :name ReducaoAgente@song04:1099/JADE  
:addresses (sequence http://192.168.0.90:7778/acc ) :X-JADE-agent-classname 
SocketProxyAgent.Reducao ) ) 
 :content  "101.21301288000001"  



 163

 :reply-with  ReducaoAgente@song04:1099/JADE1183045996000  :in-reply-to  
R1183045995921_0  :ontology  TLICOR  :protocol  fipa-contract-net 
 :conversation-id  C30147129_1183045995796 ) 
 
(INFORM 
 :sender  ( agent-identifier :name ReducaoAgente@song04:1099/JADE  
:addresses (sequence http://192.168.0.90:7778/acc ) :X-JADE-agent-classname 
SocketProxyAgent.Reducao ) 
 :receiver  (set ( agent-identifier :name tcp4000@song04:1099/JADE  
:addresses (sequence http://192.168.0.90:7778/acc ) :X-JADE-agent-classname 
SocketProxyAgent.SocketProxyAgent ) ) 
 :content  "134.44 1750 101.21301288000001"  
 :reply-with  tcp4000@song04:1099/JADE1183045996031  :in-reply-to  
tcp4000.tcp4000-ClientConnection-Thread-11.1183045995640 ) 
 

 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
 
 

 
 
 
 



 164

 
 
 
 
 
 
 

APÊNDICE C 
 

Funcões de TCP em MATLAB 

 
 
 
 
 
 
 
 
 
 
 

 
 
 
 
 
 
 
 



 165

 
 
 
APÊNDICE C 
 
Funcões TCP em MATLAB 
A função “vapor” em matlab monitora a variavel “vazao_vapor”, Em caso de falha é 
enviada uma mesagen ao agente de comunicação atraves da ferramenta “TCP 
TOOLBOX”. No conteudo desta mensagen do tipo “REQUEST” são enviados os 
valores das cinco variaveis utilizadas pelo sistema multiagentes na avaliação da 
falha. 
 
 
function [saida] = 
vapor(RTN,porcentagem,vazao_vapor,tlicor,tar,entlicor,tempo) 
global con2 
if (tempo &gt; 1100) 
    if (vazao_vapor &gt; 2700)  
        saida = 0; 
        RTN = 0; 
    end;  
    if (vazao_vapor&amp;lt;= 2700) &amp;amp;&amp;amp; (RTN == 0)  
            spstring1 = num2str(porcentagem); 
            spstring2 = num2str(vazao_vapor); 
            spstring3 = num2str(tlicor); 
            spstring4 = num2str(tar); 
            spstring5 = num2str(entlicor); 
            concatena1 = [spstring1 blanks(1) spstring2 blanks(1) spstring3 
blanks(1) spstring4 blanks(1) spstring5]; 
            msg = '(REQUEST  :receiver  (set ( agent-identifier :name 
VaporAgente@song04:1099/JADE ) )  :content  "'; 
            ACLMSG = [msg,concatena1,'"  )'] 
            pnet(con2,'printf',ACLMSG,'noblock'); 
            saida = 1; 
            RTN = 1; 
    end; 
    if (vazao_vapor&amp;lt;= 2700) &amp;amp;&amp;amp; (RTN ~= 0)  
            saida = 1; 
            RTN = 1; 
    end; 
else 
saida = 0; 
RTN = 0; 
end; 
 
 
A função “redução” monitora a eficiencia de redução e envia uma mensagen para o 
agente de comunicação com os valores das variaveis do processo. 
 
 
 



 166

function [saida] = 
reducao(RTN,porcentagem,vazao_vapor,tlicor,tar,entlicor,tempo) 
global con1 
if (tempo &gt; 1000) 
    if (porcentagem &gt; 90)  
        saida = 0; 
        RTN = 0; 
    end;     
    if (porcentagem&amp;lt;= 90.00) &amp;amp;&amp;amp; (RTN == 0)   
            spstring1 = num2str(porcentagem); 
            spstring2 = num2str(vazao_vapor); 
            spstring3 = num2str(tlicor); 
            spstring4 = num2str(tar); 
            spstring5 = num2str(entlicor); 
            concatena = [spstring1 blanks(1) spstring2 blanks(1) spstring3 
blanks(1) spstring4 blanks(1) spstring5]; 
            msg = '(REQUEST  :receiver  (set ( agent-identifier :name 
ReducaoAgente@song04:1099/JADE ) )  :content  "'; 
            ACLMSG = [msg,concatena,'"  )'] 
            pnet(con1,'printf',ACLMSG,'noblock'); 
            saida = 1; 
            RTN = 1; 
    end; 
    if (porcentagem&amp;lt;= 90.00) &amp;amp;&amp;amp; (RTN ~= 0)   
            saida = 1; 
            RTN = 1; 
    end; 
else 
saida = 0; 
RTN = 0; 
end; 
 
 
A funcão “ControlAgrupado” recebe as mensagens com os valores das variaveis que 

serão atuadas no processo para controlar uma falha. Esta função recebe 

mensagens de cualquer agente de comunicação.  

 
function [RETURN] = ControlAgrupado(var1,var2,var3) 
global con2 
global con1 
str = pnet(con2,'read',[1 368],'view','noblock'); 
str1 = pnet(con1,'read',[1 372],'view','noblock'); 
if (strcmp(str, '') == 0) 
i = 373; 
achou = 0; 
apagou = 0; 
    while achou == 0 
        str = pnet(con2,'read',[1 i],'view','noblock'); 
        pos = findstr(str, '"'); 
        if size(pos) == [1 1] 
            i = i+1; 
        else 
            achou = 1; 
            [token,remain] = strtok(str,'"'); 
            [token,remain] = strtok(remain,'"'); 
            RETURN = strread(token); 
            RETURNSTRING = num2str(RETURN); 



 167

            if (strcmp(RETURNSTRING, '9999') || strcmp(RETURNSTRING, 
'8888'))   
                RETURN = [var1 var2 var3]; 
            end 
             
            parentesis = findstr(str, ')'); 
            while apagou == 0  
                str = pnet(con2,'read',[1 i],'view','noblock'); 
                parentesis = findstr(str, ')'); 
                if size(parentesis) == [1 5] 
                   i = i+1;  
                else 
                    apagou = 1; 
                    str = pnet(con2,'read',[1 i],'noblock') 
                end 
            end  
        end     
     end 
elseif(strcmp(str1, '') == 0) 
        i = 373; 
        achou = 0; 
        apagou = 0; 
            while achou == 0 
                str1 = pnet(con1,'read',[1 i],'view','noblock'); 
                pos = findstr(str1, '"'); 
                if size(pos) == [1 1] 
                    i = i+1; 
                else 
                    achou = 1; 
                    [token,remain] = strtok(str1,'"'); 
                    [token,remain] = strtok(remain,'"'); 
                    RETURN = strread(token); 
                    RETURNSTRING = num2str(RETURN); 
                    if (strcmp(RETURNSTRING, '9999') || 
strcmp(RETURNSTRING, '8888')) 
                        RETURN = [var1 var2 var3]; 
                    
                    end 
                    parentesis = findstr(str1, ')'); 
                    while apagou == 0  
                        str1 = pnet(con1,'read',[1 i],'view','noblock'); 
                        parentesis = findstr(str1, ')'); 
                        if size(parentesis) == [1 5] 
                           i = i+1;  
                        else 
                            apagou = 1; 
                            str1 = pnet(con1,'read',[1 i],'noblock') 
                        end 
                    end  
                end     
             end 
else    
    RETURN = [var1 var2 var3]; 
end 
 

 

 

 



 168

 
 
 
 
 
 
 
 

APÊNDICE D 
 

Programas em JAVA dos agentes de controle “AgenteRedução” e 
“AgenteVapor” 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

 



Printing C:\IHerrera\NB_Projects\JADEMATLAB\src\SocketProxyAgent\Reducao.java at 6/29/07 4:02 AM

/**
 * ***************************************************************
 * JADE - Java Agent DEvelopment Framework is a framework to develop
 * multi-agent systems in compliance with the FIPA specifications.
 * Copyright (C) 2000 CSELT S.p.A.
 * 
 *Agente de controle Redução desenvolvido por Ivan Herrera 2007.
 *
 *Este agente "Redução" tem dois "Behaviours" principais.
 *O primeiro é o "ContractNetInitiator" e o segundo é o
 *"ContractNetResponder". Por cada mensagem recebido do 
 *agente TCP4000 ele inicia uma negociação com o agente
 *"Vapor" para controlar as perturbações do sistema.
 *Tambem ele é capaz de receber uma proposta do agente "vapor" 
 *e cooperar ataundo como um agente receitor.
 * **************************************************************
 */
 
package SocketProxyAgent;
 
import jade.core.Agent;
import jade.core.AID;
import jade.lang.acl.ACLMessage;
import jade.proto.ContractNetInitiator;
import jade.proto.ContractNetResponder;
import jade.domain.FIPANames;
import jade.core.behaviours.CyclicBehaviour;
import jade.lang.acl.MessageTemplate;
import jade.domain.FIPAAgentManagement.NotUnderstoodException;
import jade.domain.FIPAAgentManagement.RefuseException;
import jade.domain.FIPAAgentManagement.FailureException;
 
import java.util.Date;
import java.util.Vector;
import java.util.Enumeration;
import java.io.*;
import java.util.*;
 
import jade.lang.acl.*;
import jade.core.behaviours.SimpleBehaviour;
import jade.util.Logger;
 
public class Reducao extends Agent {
        private int nResponders;
        private MessageTemplate template1 = MessageTemplate.MatchPerformative(ACLMessage.
REQUEST);
                
        protected void setup() {

Page 1

Printing C:\IHerrera\NB_Projects\JADEMATLAB\src\SocketProxyAgent\Reducao.java at 6/29/07 4:02 AM

        // Read names of responders as arguments
        //String myName = getLocalName();
        final Object[] args = getArguments();
        if (args != null &amp;amp;&amp;amp; args.length &gt; 0) {
           nResponders = args.length;
           System.out.println("Tentando enviar esta mensagem para o agente "+args[0]+".");
        
                      addBehaviour(new CyclicBehaviour(this) {
                                public void action() {
 
                                        final ACLMessage msg = myAgent.receive(template1);
                                        if (msg != null) {
                                                System.out.println("Mensagem ("+msg+")");
                                                System.out.println("Recevida uma mensagem 
REQUEST do agente "+msg.getSender().getName());
 
                                                // Fill the CFP message
                                                ACLMessage ajuda = new ACLMessage(ACLMessage.
CFP);
                                                ajuda.setContent(msg.getContent());
                                                ajuda.setProtocol(FIPANames.
InteractionProtocol.FIPA_CONTRACT_NET);
                                                for (int i = 0; i &amp;lt;args.length; ++i) {
                                                    ajuda.addReceiver(new AID((String) args
[i], AID.ISLOCALNAME));
                                                }
                                                System.out.println("REPLY "+ajuda);            
                                                    
                                                addBehaviour(new ContractNetInitiator(myAgent, 
ajuda) {
 
                                                    protected void handlePropose(ACLMessage 
propose, Vector v) {
                                                        
 
                                                            System.out.println("Agent 
"+propose.getSender().getName()+" proposed "+propose.getContent());
                                                    }
 
                                                    protected void handleRefuse(ACLMessage 
refuse) {
                                                            System.out.println("Agent 
"+refuse.getSender().getName()+" refused");
                                                            ACLMessage reply = msg.
createReply();
                                                            reply.setPerformative(ACLMessage.
INFORM);
                                                            reply.setContent("9999");

Page 2



Printing C:\IHerrera\NB_Projects\JADEMATLAB\src\SocketProxyAgent\Reducao.java at 6/29/07 4:02 AM

                                                            System.out.println("REPLY 
"+reply);
                                                            myAgent.send(reply);
                                                    }
 
                                                    protected void handleFailure(ACLMessage 
failure) {
                                                            if (failure.getSender().equals
(myAgent.getAMS())) {
                                                                    // FAILURE notification 
from the JADE runtime: the receiver
                                                                    // does not exist
                                                                    System.out.println
("Responder does not exist");
                                                            }
                                                            else {
                                                                    System.out.println("Agent 
"+failure.getSender().getName()+" failed");
                                                            }
                                                            // Immediate failure --&gt; we will 
not receive a response from this agent
                                                            ACLMessage reply = msg.
createReply();
                                                            reply.setPerformative(ACLMessage.
INFORM);
                                                            reply.setContent("8888");
                                                            System.out.println("REPLY 
"+reply);
                                                            myAgent.send(reply);
                                                            nResponders--;
                                                    }
 
                                                    protected void handleAllResponses(Vector 
responses, Vector acceptances) {
                                                            if (responses.size() &amp;lt;
nResponders) {
                                                                    // Some responder didn't 
reply within the specified timeout
                                                                    System.out.println
("Timeout expired: missing "+(nResponders - responses.size())+" responses");
                                                            }
                                                           
                                                         // Evaluate proposals.                
                                                            int bestProposal = -1;
                                                            AID bestProposer = null;
                                                            ACLMessage accept = null;
                                                            Enumeration e = responses.
elements();

Page 3

Printing C:\IHerrera\NB_Projects\JADEMATLAB\src\SocketProxyAgent\Reducao.java at 6/29/07 4:02 AM

                                                            while (e.hasMoreElements()) {
                                                                    ACLMessage msg = 
(ACLMessage) e.nextElement();
                                                                    if (msg.getPerformative() 
== ACLMessage.PROPOSE) {
                                                                        StringTokenizer st = 
new StringTokenizer(msg.getContent());
                                                                        int i = 0; 
                                                                        Double templicor = 
0.00;
                                                                        Double tempar = 0.00;
 
                                                                        while (st.
hasMoreTokens()) {
                                                                            i = i+1;
                                                                                    if (i == 
1) {
                                                                                        String 
TLICOR = st.nextToken();
                                                                                        
templicor = Double.parseDouble(TLICOR);
                                                                                    } else {
                                                                                        String 
TAR = st.nextToken();
                                                                                        tempar 
= Double.parseDouble(TAR);
                                                                                    }
                                                                        }
                   
                                                                            ACLMessage reply = 
msg.createReply();
                                                                            reply.
setPerformative(ACLMessage.REJECT_PROPOSAL);
                                                                            acceptances.
addElement(reply);
                                                                            //int proposal = 
Integer.parseInt(msg.getContent());
                                                                            if (templicor &gt; 0) 
{
                                                                                    
//bestProposal = proposal;
                                                                                    
bestProposer = msg.getSender();
                                                                                    accept = 
reply;
                                                                                    String 
propostaaceita;
                                                                                    String 

Page 4



Printing C:\IHerrera\NB_Projects\JADEMATLAB\src\SocketProxyAgent\Reducao.java at 6/29/07 4:02 AM

noaceita;
                                                                                    if 
(((templicor)&lt;=125.00) &amp;amp;&amp;amp; ((templicor)&gt;=100)) {
                                                                                    
propostaaceita = Double.toString(templicor);
                                                                                    noaceita = 
"NO";
                                                                                    String 
zero = " ";
                                                                                    String 
propostafinal = propostaaceita+zero+noaceita;
                                                                                    accept.
setContent(propostafinal);
                                                                                    }
                                                                                    else{
                                                                                        
propostaaceita = Double.toString(tempar);
                                                                                    noaceita = 
"NO";
                                                                                    String 
zero = " ";
                                                                                    String 
propostafinal = noaceita+zero+propostaaceita;
                                                                                    accept.
setContent(propostafinal);
                                                                                    }    
                                                                            }
                                                                    }
                                                            }
                                                            // Accept the proposal of the best 
proposer
                                                            if (accept != null) {
                                                                    System.out.println
("Accepting proposal "+bestProposal+" from responder "+bestProposer.getName());
                                                                    accept.setPerformative
(ACLMessage.ACCEPT_PROPOSAL);
                                                            }                                  
                                                    }
 
                                                    protected void handleInform(ACLMessage 
inform) {
                                                            StringTokenizer st = new 
StringTokenizer(msg.getContent());
                                                            int i = 0;
                                                            String zero=" ";
                                                            String RED=" ";
                                                            String VAZ=" ";
                                                            String TLICOR=" ";

Page 5

Printing C:\IHerrera\NB_Projects\JADEMATLAB\src\SocketProxyAgent\Reducao.java at 6/29/07 4:02 AM

                                                            String TAR=" ";
                                                            String ELICOR=" ";
                                                            while (st.hasMoreTokens()) {
                                                                i = i+1;
                                                                        if (i == 1) {
                                                                            RED = st.
nextToken();                                                                          
                                                                        } else if (i == 2) {
                                                                            VAZ = st.
nextToken();                                                                            
                                                                        } else if (i == 3) {
                                                                            TLICOR = st.
nextToken();                                                                         
                                                                        } else if (i == 4) {
                                                                            TAR = st.
nextToken();
                                                                        } else {
                                                                            ELICOR = st.
nextToken();
                                                                        }
                                                            }
                                                        if (inform.getOntology()=="TAR"){
                                                            System.out.println("Agent 
"+inform.getSender().getName()+" successfully performed the requested action TAR");            
                                                            ACLMessage reply = msg.
createReply();
                                                            reply.setPerformative(ACLMessage.
INFORM);
                                                            reply.setContent(inform.
getContent()+zero+inform.getEncoding()+TLICOR);
                                                            System.out.println("REPLY 
"+reply);
                                                            myAgent.send(reply);
                                                            
                                                        }
                                                        else{
                                                        System.out.println("Agent "+inform.
getSender().getName()+" successfully performed the requested action TLICOR");
                                                            
                                                            ACLMessage reply = msg.
createReply();
                                                            reply.setPerformative(ACLMessage.
INFORM);
                                                            reply.setContent
(TAR+zero+ELICOR+zero+inform.getContent());
                                                            System.out.println("REPLY 
"+reply);
                                                            myAgent.send(reply);

Page 6



Printing C:\IHerrera\NB_Projects\JADEMATLAB\src\SocketProxyAgent\Reducao.java at 6/29/07 4:02 AM

                                                        }
                                                    }
                                           } );
                                        }
                                        else {
                                                //block();
                                        }
                                }
                        } );
                        MessageTemplate template2 = MessageTemplate.and(
                        MessageTemplate.MatchProtocol(FIPANames.InteractionProtocol.
FIPA_CONTRACT_NET),
                        MessageTemplate.MatchPerformative(ACLMessage.CFP) );
                        addBehaviour(new ContractNetResponder(this, template2) {
                        protected ACLMessage handleCfp(ACLMessage cfp) throws 
NotUnderstoodException, RefuseException {
                            StringTokenizer st = new StringTokenizer(cfp.getContent());
                            int i = 0; 
                            Double reducao = 0.00;
                            Double vazao = 0.00;
                            Double templicor = 0.00;
                            Double tempar = 0.00;
                            Double entlicor= 0.00;
                          
                            while (st.hasMoreTokens()) {
                                i = i+1;
                                        if (i == 1) {
                                            String RED = st.nextToken();
                                            reducao = Double.parseDouble(RED);
                                        } else if (i == 2) {
                                            String VAZ = st.nextToken();
                                            vazao = Double.parseDouble(VAZ);
                                        } else if (i == 3) {
                                            String TLICOR = st.nextToken();
                                            templicor = Double.parseDouble(TLICOR);
                                        } else if (i == 4) {
                                            String TAR = st.nextToken();
                                            tempar = Double.parseDouble(TAR);
                                        } else {
                                            String ELICOR = st.nextToken();
                                            entlicor = Double.parseDouble(ELICOR);
                                        }
                            }
                            double diferencia = 2700-vazao;
                            double EntLC = entlicor+(diferencia*0.032*entlicor)/100;       
                                    
                                        System.out.println("Agent "+getLocalName()+": 
Propondo: Entrada do licor:"+EntLC);

Page 7

Printing C:\IHerrera\NB_Projects\JADEMATLAB\src\SocketProxyAgent\Reducao.java at 6/29/07 4:02 AM

                                        ACLMessage propose = cfp.createReply();
                                        propose.setPerformative(ACLMessage.PROPOSE);
                                        String proposta;
                                        String zero = " ";
                                        proposta = Double.toString(EntLC);                     
                                        propose.setContent(proposta);
                                        return propose;
                        }
                        
                        protected ACLMessage handleAcceptProposal(ACLMessage cfp, ACLMessage 
propose,ACLMessage accept) throws FailureException {
                                System.out.println("Agent "+getLocalName()+": Proposal 
accepted");
 
                                        System.out.println("Agent "+getLocalName()+": Action 
successfully performed");
                                        ACLMessage inform = accept.createReply();
                                        inform.setPerformative(ACLMessage.INFORM);
                                        inform.setContent(accept.getContent());
                                        return inform;  
                        }
                        
                        protected void handleRejectProposal(ACLMessage cfp, ACLMessage 
propose, ACLMessage reject) {
                                System.out.println("Agent "+getLocalName()+": Proposal 
rejected");
                        }
                } );                    
                }
        else {
            System.out.println("No responder specified.");
        }
  }         
}
 

Page 8



Printing C:\IHerrera\NB_Projects\JADEMATLAB\src\SocketProxyAgent\Vapor.java at 6/29/07 4:00 AM

/**
 * ***************************************************************
 * JADE - Java Agent DEvelopment Framework is a framework to develop
 * multi-agent systems in compliance with the FIPA specifications.
 * Copyright (C) 2000 CSELT S.p.A.
 *
 *Agente de controle Vapor desenvolvido por Ivan Herrera 2007.
 * 
 *Este agente "Vapor" tem dois "Behaviours" principais.
 *O primeiro é o "ContractNetInitiator" e o segundo é o
 *"ContractNetResponder". Por cada mensagem recebido do 
 *agente TCP4000 ele inicia uma negociação com o agente
 *"Vapor" para controlar as perturbações do sistema.
 *Tambem ele é capaz de receber uma proposta do agente "vapor" 
 *e cooperar ataundo como um agente receitor.
 * **************************************************************
 */
 
package SocketProxyAgent;
 
import jade.core.Agent;
import jade.core.AID;
import jade.lang.acl.ACLMessage;
import jade.proto.ContractNetInitiator;
import jade.proto.ContractNetResponder;
import jade.domain.FIPANames;
import jade.core.behaviours.CyclicBehaviour;
import jade.lang.acl.MessageTemplate;
import jade.domain.FIPAAgentManagement.NotUnderstoodException;
import jade.domain.FIPAAgentManagement.RefuseException;
import jade.domain.FIPAAgentManagement.FailureException;
import java.util.Date;
import java.util.Vector;
import java.util.Enumeration;
import java.io.*;
import java.util.*;
import jade.lang.acl.*;
import jade.core.behaviours.SimpleBehaviour;
import jade.util.Logger;
 
public class Vapor extends Agent {
        private int nResponders;
        private MessageTemplate template1 = MessageTemplate.MatchPerformative(ACLMessage.
REQUEST);
                
        protected void setup() {
        // Read names of responders as arguments
        //String myName = getLocalName();

Page 1

Printing C:\IHerrera\NB_Projects\JADEMATLAB\src\SocketProxyAgent\Vapor.java at 6/29/07 4:00 AM

        final Object[] args = getArguments();
        if (args != null &amp;amp;&amp;amp; args.length &gt; 0) {
           nResponders = args.length;
           System.out.println("Tentando enviar esta mensagem para o agente "+args[0]+".");
        
                      addBehaviour(new CyclicBehaviour(this) {
                                public void action() {
 
                                        final ACLMessage msg = myAgent.receive(template1);
                                        if (msg != null) {
                                                System.out.println("Mensagem ("+msg+")");
                                                System.out.println("Recevida uma mensagem 
REQUEST do agente "+msg.getSender().getName());
                                                
                                                // Fill the CFP message
                                                ACLMessage ajuda = new ACLMessage(ACLMessage.
CFP);
                                                ajuda.setContent(msg.getContent());
                                                ajuda.setProtocol(FIPANames.
InteractionProtocol.FIPA_CONTRACT_NET);
                                                for (int i = 0; i &amp;lt;args.length; ++i) {
                                                    ajuda.addReceiver(new AID((String) args
[i], AID.ISLOCALNAME));
                                                }
                                                System.out.println("REPLY "+ajuda);            
                                                    
                                                addBehaviour(new ContractNetInitiator(myAgent, 
ajuda) {
 
                                                    protected void handlePropose(ACLMessage 
propose, Vector v) {
                                                    
                                                            System.out.println("Agent 
"+propose.getSender().getName()+" proposed "+propose.getContent());
        
                                                    }
 
                                                    protected void handleRefuse(ACLMessage 
refuse) {
                                                            System.out.println("Agent 
"+refuse.getSender().getName()+" refused");
                                                            ACLMessage reply = msg.
createReply();
                                                            reply.setPerformative(ACLMessage.
INFORM);
                                                            reply.setContent("9999");
                                                            System.out.println("REPLY 
"+reply);

Page 2



Printing C:\IHerrera\NB_Projects\JADEMATLAB\src\SocketProxyAgent\Vapor.java at 6/29/07 4:00 AM

                                                            myAgent.send(reply);
                                                    }
 
                                                    protected void handleFailure(ACLMessage 
failure) {
                                                            if (failure.getSender().equals
(myAgent.getAMS())) {
                                                                    // FAILURE notification 
from the JADE runtime: the receiver
                                                                    // does not exist
                                                                    System.out.println
("Responder does not exist");
                                                            }
                                                            else {
                                                                    System.out.println("Agent 
"+failure.getSender().getName()+" failed");
                                                            }
                                                            // Immediate failure --&gt; we will 
not receive a response from this agent
                                                            ACLMessage reply = msg.
createReply();
                                                            reply.setPerformative(ACLMessage.
INFORM);
                                                            reply.setContent("8888");
                                                            System.out.println("REPLY 
"+reply);
                                                            myAgent.send(reply);
                                                            nResponders--;
                                                    }
 
                                                    protected void handleAllResponses(Vector 
responses, Vector acceptances) {
                                                            if (responses.size() &amp;lt;
nResponders) {
                                                                    // Some responder didn't 
reply within the specified timeout
                                                                    System.out.println
("Timeout expired: missing "+(nResponders - responses.size())+" responses");
                                                            }
                                                            // Evaluate proposals.
                                                            double bestProposal = -1.00;
                                                            AID bestProposer = null;
                                                            ACLMessage accept = null;
                                                            Enumeration e = responses.
elements();
                                                            while (e.hasMoreElements()) {
                                                                    ACLMessage msg = 
(ACLMessage) e.nextElement();

Page 3

Printing C:\IHerrera\NB_Projects\JADEMATLAB\src\SocketProxyAgent\Vapor.java at 6/29/07 4:00 AM

                                                                    if (msg.getPerformative() 
== ACLMessage.PROPOSE) {
                                                                            ACLMessage reply = 
msg.createReply();
                                                                            reply.
setPerformative(ACLMessage.REJECT_PROPOSAL);
                                                                            acceptances.
addElement(reply);
                                                                            Double proposal = 
Double.parseDouble(msg.getContent());
                                                                            if (proposal &gt; 
bestProposal) {
                                                                                    
bestProposal = proposal;
                                                                                    
bestProposer = msg.getSender();
                                                                                    accept = 
reply;
                                                                                    accept.
setContent(msg.getContent());
                                                                            }
                                                                    }
                                                            }
                                                            // Accept the proposal of the best 
proposer
                                                            if (accept != null) {
                                                                    System.out.println
("Accepting proposal "+bestProposal+" from responder "+bestProposer.getName());
                                                                    accept.setPerformative
(ACLMessage.ACCEPT_PROPOSAL);
                                                            }                                  
                                                    }
 
                                                    protected void handleInform(ACLMessage 
inform) {
                                                            StringTokenizer st = new 
StringTokenizer(msg.getContent());
                                                            int i = 0;
                                                            String zero=" ";
                                                            String RED=" ";
                                                            String VAZ=" ";
                                                            String TLICOR=" ";
                                                            String TAR=" ";
                                                            String ELICOR=" ";
                                                            while (st.hasMoreTokens()) {
                                                                i = i+1;
                                                                        if (i == 1) {
                                                                            RED = st.

Page 4



Printing C:\IHerrera\NB_Projects\JADEMATLAB\src\SocketProxyAgent\Vapor.java at 6/29/07 4:00 AM

nextToken();                                                                          
                                                                        } else if (i == 2) {
                                                                            VAZ = st.
nextToken();                                                                            
                                                                        } else if (i == 3) {
                                                                            TLICOR = st.
nextToken();                                                                         
                                                                        } else if (i == 4) {
                                                                            TAR = st.
nextToken();
                                                                        } else {
                                                                            ELICOR = st.
nextToken();
                                                                        }
                                                            }
 
                                                            System.out.println("Agent 
"+inform.getSender().getName()+" successfully performed the requested action ELICOR");         
                                                            ACLMessage reply = msg.
createReply();
                                                            reply.setPerformative(ACLMessage.
INFORM);
                                                            reply.setContent(TAR+zero+inform.
getContent()+zero+TLICOR);
                                                            System.out.println("REPLY 
"+reply);
                                                            myAgent.send(reply);
                                                    }
                                            } );
                                        }
                                        else {
                                                //block();
                                        }
                                }
                        } );
                        
                        MessageTemplate template2 = MessageTemplate.and(
                        MessageTemplate.MatchProtocol(FIPANames.InteractionProtocol.
FIPA_CONTRACT_NET),
                        MessageTemplate.MatchPerformative(ACLMessage.CFP) );
                        addBehaviour(new ContractNetResponder(this, template2) {
                        protected ACLMessage handleCfp(ACLMessage cfp) throws 
NotUnderstoodException, RefuseException {
                            StringTokenizer st = new StringTokenizer(cfp.getContent());
                            int i = 0; 
                            Double reducao = 0.00;
                            Double vazao = 0.00;
                            Double templicor = 0.00;

Page 5

Printing C:\IHerrera\NB_Projects\JADEMATLAB\src\SocketProxyAgent\Vapor.java at 6/29/07 4:00 AM

                            Double tempar = 0.00;
                            Double entlicor= 0.00;
                            while (st.hasMoreTokens()) {
                                i = i+1;
                                        if (i == 1) {
                                            String RED = st.nextToken();
                                            reducao = Double.parseDouble(RED);
                                        } else if (i == 2) {
                                            String VAZ = st.nextToken();
                                            vazao = Double.parseDouble(VAZ);
                                        } else if (i == 3) {
                                            String TLICOR = st.nextToken();
                                            templicor = Double.parseDouble(TLICOR);
                                        } else if (i == 4) {
                                            String TAR = st.nextToken();
                                            tempar = Double.parseDouble(TAR);
                                        } else {
                                            String ELICOR = st.nextToken();
                                            entlicor = Double.parseDouble(ELICOR);
                                        }
                            }
                            double porcento = (100-(reducao*100)/90);
                            System.out.println("porcento: "+porcento);
                            double TempLC = templicor*(1-(porcento*1.4)/100);
                            double TempAR = tempar*(1+(porcento*4.1)/100);
                            double vazteste = vazao*(1-porcento*4.1*0.82*0.024);         
                                    
                                        System.out.println("Agent "+getLocalName()+": 
Propondo: Temp do Licor:"+TempLC+",ou Temp do Ar)"+TempAR);
                                        ACLMessage propose = cfp.createReply();
                                        propose.setPerformative(ACLMessage.PROPOSE);
                                        String proposta1;
                                        String proposta2;
                                        String opcao;
                                        String zero = " ";
                                        proposta1 = Double.toString(TempLC);
                                        proposta2 = Double.toString(TempAR);
                                        opcao = Double.toString(vazteste);    
                                        String proposta = proposta1+zero+proposta2; 
                                        propose.setContent(proposta);
                                        propose.setEncoding(opcao);
                                        return propose;
                        }
                        
                        protected ACLMessage handleAcceptProposal(ACLMessage cfp, ACLMessage 
propose,ACLMessage accept) throws FailureException {
                                System.out.println("Agent "+getLocalName()+": Proposal 
accepted");

Page 6



Printing C:\IHerrera\NB_Projects\JADEMATLAB\src\SocketProxyAgent\Vapor.java at 6/29/07 4:00 AM

                                System.out.println("Agent "+getLocalName()+": Action 
successfully performed");
                                        ACLMessage inform = accept.createReply();
                                        inform.setPerformative(ACLMessage.INFORM);
                                             StringTokenizer st = new StringTokenizer(accept.
getContent());
                                             int i = 0; 
                                             Double templicor = 0.00;
                                             Double tempar = 0.00;
                                             String TLICOR ="";
                                             String TAR="";
                                             String t="NO";
                                             while (st.hasMoreTokens()) {
                                                    i = i+1;
                                                    if (i == 1) {
                                                          TLICOR = st.nextToken();
                                                    } else {
                                                          TAR = st.nextToken();     
                                                           }
                                                           }
                                                                   if (TLICOR.equals(t)) {
                                                                   inform.setContent(TAR);
                                                                   inform.setOntology("TAR");
                                                                        }
                                                                    else{
                                                                    inform.setContent(TLICOR);
                                                                    inform.setOntology
("TLICOR");
                                                                        }
 
                                        return inform;
                                
                        }
                        
                        protected void handleRejectProposal(ACLMessage cfp, ACLMessage 
propose, ACLMessage reject) {
                                System.out.println("Agent "+getLocalName()+": Proposal 
rejected");
                        }
                } );    
                }
        else {
            System.out.println("No responder specified.");
        }
  } 
 }
 
 

Page 7

Printing C:\IHerrera\NB_Projects\JADEMATLAB\src\SocketProxyAgent\Vapor.java at 6/29/07 4:00 AM

 

Page 8


	Parte1.pdf
	Parte2.pdf
	AgentesJADE.pdf
	AgenteReducao.pdf
	AgenteVapor.pdf




</field>
	</doc>
</add>