<?xml version="1.0" encoding="utf-8"?>
<add>
	<doc>
		<field name="docid">BR-TU.23927</field>
		<field name="filename">8206_Cire_AndreAugusto_M.pdf</field>
		<field name="filetype">PDF</field>
		<field name="text">


              FICHA CATALOGRÁFICA ELABORADA PELA
            BIBLIOTECA DO IMECC DA UNICAMP

            Bibliotecária: Maria Júlia Milani Rodrigues CRB8a / 2116

Ciré, André Augusto

C496m Modelos  computacionais  para  o  escalonamento  de  tarefas  em

redes de dutos / André Augusto Ciré -- Campinas, [S.P. :s.n.], 2008. 

Orientadores : Arnaldo Vieira Moura ; Cid Carvalho de Souza

Dissertação  (mestrado)  -  Universidade  Estadual  de  Campinas, 

Instituto de Computação.

1.  Restrições  (Inteligência  artificial).  2.  Pesquisa  operacional.  3.

Otimização combinatória.  4. Petróleo  - Transporte.   I.  Moura, Arnaldo

Vieira.   II.  Souza,  Cid  Carvalho  de.  III.  Universidade  Estadual  de 

Campinas. Instituto de Computação. IV. Título.

Título em inglês: Computational models for task scheduling in pipeline networks

Palavras-chave em inglês (Keywords): 1. Constraints (Artificial intelligence. 2. Operational 
research. 3. Combinatorial optimization. 4. Petroleum transportation. 

Área de concentração: Pesquisa operacional

Titulação: Mestre em Ciência da Computação

Banca examinadora: 

Prof. Dr. Arnaldo Vieira Moura (IC-UNICAMP)
Prof. Dr. Eduardo Camponogara (DAS-UFSC)
Prof. Dr. Zanoni Dias (IC-UNICAMP)
Prof. Dr. Nizam Omar (Univ.Presbiteriana Mackenzie)
Profa. Dra. Anamaria Gomide (IC-UNICAMP)

Data da defesa: 18/08/2008

Programa de pós-graduação: Mestrado em Ciência da Computação





Instituto de Computac?a?o

Universidade Estadual de Campinas

Modelos Computacionais para o Escalonamento de

Tarefas em Redes de Dutos

Andre? Augusto Cire?1

Julho de 2008

Banca Examinadora:

• Prof. Dr. Arnaldo Vieira Moura (Orientador)

• Prof. Dr. Eduardo Camponogara

Departamento de Automac?a?o e Sistemas, UFSC

• Prof. Dr. Zanoni Dias

Instituto de Computac?a?o, UNICAMP

• Prof. Dr. Nizam Omar (Suplente)

Universidade Prebisteriana Mackenzie

• Profa. Dra. Anamaria Gomide (Suplente)

Instituto de Computac?a?o, UNICAMP

1Suporte financeiro de: Fundac?a?o de Amparo a? Pesquisa do Estado de Sa?o Paulo (processo 05/57344-
7), 2006-2008.

iv



Resumo

Esta dissertac?a?o de Mestrado trata de um problema real de escalonamento, no qual

uma complexa rede de dutos e? utilizada para distribuic?a?o de derivados de petro?leo e

bio-combust??veis de refinarias a mercados locais. Dutos constituem a alternativa de trans-

porte mais vantajosa em termos econo?micos e ambientais, mas trazem consigo um amplo

conjunto de restric?o?es operacionais dif??ceis, envolvendo sequ?enciamento de produtos, ca-

pacidade de tanques, controle de taxa de vaza?o, controle de estoque e muitas outras. O

objetivo do problema esta? em escalonar operac?o?es de bombeamento nos dutos de forma a

satisfazer as demandas locais em cada o?rga?o de distribuic?a?o, dentro de um horizonte de

planejamento pre?-definido.

Para resolve?-lo, este trabalho propo?e uma nova abordagem h??brida composta por duas

fases. Primeiramente, uma fase de planejamento define os volumes de produto que devem

ser transmitidos entre o?rga?os para que as demandas sejam completamente atendidas. Em

seguida, uma fase de escalonamento e? responsa?vel por criar e escalonar as operac?o?es de

bombeamento, de forma a garantir que os volumes definidos na fase anterior sejam efe-

tivamente enviados. Esta dissertac?a?o foca na fase de escalonamento, e duas formulac?o?es

em Programac?a?o por Restric?o?es (PR) sa?o apresentadas para modela?-la. Conforme foi

verificado, a flexibilidade de PR e? fundamental para representar e satisfazer restric?o?es

que, usualmente, sa?o desconsideradas na literatura, mas que sa?o essenciais para a via-

bilidade operacional das soluc?o?es. A estrate?gia completa foi implementada e produziu

resultados adequados e promissoras para 5 insta?ncias reais fornecidas pela Petrobras.

Tais insta?ncias conte?m 30 dutos, mais de 30 produtos e 14 o?rga?os de distribuic?a?o que

contemplam cerca de 200 tanques.

v



Abstract

This dissertation deals with a very difficult overly-constrained scheduling challenge: how

to operate a large pipeline network in order to adequately transport oil derivatives and

biofuels from refineries to local markets. Pipeline network systems are considered the

major option for transporting these product types, in view of their many economic and

environmental advantages. However, they pose serious operational difficulties related to

product sequencing, flow rates and tank capacities.

The challenge is how to schedule individual pumping operations, given the daily pro-

duction and demand of each product, at each location in the network, over a given time

horizon. In order to tackle this problem, we propose a novel hybrid approach which com-

prises two phases. Firstly, a planning phase decides the necessary volume transmission

among depots to satisfy the given demands. Finally, a scheduling phase generates and

schedules the pumping operations that guarantee the required volume transmission. This

dissertation focuses on the scheduling phase, in which two new Constraint Programming

(CP) models are proposed. The CP flexibility plays a key role in modeling and satisfying

operational constraints that are usually overlooked in literature, but that are essential

in order to guarantee viable solutions. The full strategy was implemented and produced

adequate and promising results when tested over 5 large real instances from Petrobras.

These instances have a complex topology with around 30 interconnecting pipelines, over

30 different products in circulation, and about 14 distribution depots which harbor more

than 200 tanks.

vi



Agradecimentos

Agradec?o primeiramente a? minha fam??lia, Antonio, Maria Antonia e Danielle, pelo cari-

nho, amor, pacie?ncia e pelo apoio incondicional a? minha educac?a?o, sem a qual na?o teria

chegado ate? aqui.

Agradec?o tambe?m aos meus orientadores, Prof. Arnaldo e Prof. Cid, pela oportunidade,

amizade, por me iniciarem na a?rea de pesquisa e por constitu??rem o modelo de profissional

que almejo ser no futuro.

Agradec?o a todos os meus amigos pela convive?ncia, pelos o?timos momentos nesses u?ltimos

anos e por todo o apoio que me deram. Em especial ao Tony, pela amizade, pacie?ncia e

grandes ide?ias nos dias, noites e madrugadas acordadas que passamos desenvolvendo este

projeto.

Agradec?o a? FAPESP, pelo suporte financeiro ao meu projeto de pesquisa. A? Petrobras,

particularmente Fernando Marcellino, Andre? Lima, Leandro Barcelos e Enio Medeiros,

pelo fornecimento dos dados e, principalmente, pela oportunidade de participar deste

projeto. Tambe?m agradec?o aos funciona?rios do Instituto de Computac?a?o da UNICAMP,

sempre dispostos a ajudar nos momentos que precisamos.

Forc?a sempre!

vii



Suma?rio

Resumo v

Abstract vi

Agradecimentos vii

1 Introduc?a?o 1

1.1 Objetivos do Projeto . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2

1.2 Organizac?a?o do Texto . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3

2 O Problema do Transporte em Redes de Dutos 4

2.1 Caracterizac?a?o do PTRD . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5

2.2 Para?metros e Constantes Gerais . . . . . . . . . . . . . . . . . . . . . . . . 5

2.2.1 Restric?o?es dos O?rga?os . . . . . . . . . . . . . . . . . . . . . . . . . 6

2.2.2 Restric?o?es dos Dutos . . . . . . . . . . . . . . . . . . . . . . . . . . 8

2.2.3 Dados Dina?micos da Rede . . . . . . . . . . . . . . . . . . . . . . . 10

2.3 Soluc?a?o e Objetivos . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 11

2.4 Modelo da Rede de Dutos . . . . . . . . . . . . . . . . . . . . . . . . . . . 11

2.5 Topologia Brasileira . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 12

3 Revisa?o Bibliogra?fica 14

4 Arquitetura do Modelo de Resoluc?a?o 19

4.1 Fase de Planejamento . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 20

4.2 Fase de Escalonamento . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 21

5 Conceitos Ba?sicos de Programac?a?o por Restric?o?es 23

5.1 Satisfac?a?o de Restric?o?es . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24

5.1.1 Modelagem em PR . . . . . . . . . . . . . . . . . . . . . . . . . . . 25

5.2 Estrate?gias de Busca . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 26

viii



5.3 Otimizac?a?o em PR . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 28

6 Modelo Inicial para o Problema de Escalonamento 29

Pro?logo . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29

1 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31

2 Literature Review . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33

3 Problem Description . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 34

3.1 Problem Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . 34

3.2 Solution and Goals . . . . . . . . . . . . . . . . . . . . . . . . . . . 35

4 The Solver Framework . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 35

4.1 The Planning Phase . . . . . . . . . . . . . . . . . . . . . . . . . . 36

4.2 The Scheduling Phase . . . . . . . . . . . . . . . . . . . . . . . . . 38

5 Results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43

6 Conclusions and Further Work . . . . . . . . . . . . . . . . . . . . . . . . . 44

Bibliografia 47

Ep??logo . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 49

7 Modelo Aprimorado para o Problema de Escalonamento 50

Pro?logo . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 50

1 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 51

2 Why CP and Related Work . . . . . . . . . . . . . . . . . . . . . . . . . . 54

3 How CP ? . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 55

4 Results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 65

5 Added Value and Conclusions . . . . . . . . . . . . . . . . . . . . . . . . . 66

Bibliografia 69

Ep??logo . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 71

8 Conclusa?o 72

9 Trabalhos Futuros 74

Bibliografia 76

ix



Lista de Tabelas

3.1 Comparac?a?o entre abordagens anteriores. . . . . . . . . . . . . . . . . . . . 15

7 Modelo Inicial para o Problema de Escalonamento 29

6.1 Notac?a?o utilizada no modelo PR. . . . . . . . . . . . . . . . . . . . . . . . 30

2 Solver Results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 45

3 Solution Example . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 45

8 Modelo Aprimorado para o Problema de Escalonamento 50

1 Solution Example . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 66

2 Solver Results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 67

x



Lista de Figuras

2.1 Modelo esquema?tico de uma rede de dutos. . . . . . . . . . . . . . . . . . . 12

2.2 Representac?a?o do sistema de dutos da regia?o Sudeste de Sa?o Paulo (figura

fornecida pela Petrobras). . . . . . . . . . . . . . . . . . . . . . . . . . . 13

7 Modelo Inicial para o Problema de Escalonamento 29

1 A pipeline network example. . . . . . . . . . . . . . . . . . . . . . . . . . . . 35

2 Interaction between phases in the solver. . . . . . . . . . . . . . . . . . . . . . 36

3 Instance 2 Tankage Evolution . . . . . . . . . . . . . . . . . . . . . . . . . . 46

8 Modelo Aprimorado para o Problema de Escalonamento 50

1 petrobras pipeline networks. . . . . . . . . . . . . . . . . . . . . . . . . . . 52

2 A pipeline network example. . . . . . . . . . . . . . . . . . . . . . . . . . . . 52

3 Example of a flow reversal. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 55

4 Solver Framework. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 55

xi



Cap??tulo 1

Introduc?a?o

Problemas operacionais envolvendo agendamento e planejamento te?m obtido grande des-

taque nos u?ltimos anos, e sua importa?ncia deriva da necessidade da tomada ra?pida de

deciso?es em ambientes de incerteza e de requerimentos operacionais extremamente com-

plexos. Neste contexto, o planejamento da distribuic?a?o de a?lcoois e produtos derivados

do petro?leo adquire uma especial importa?ncia. Primeiramente, por envolver uma grande

quantidade de recursos materiais e humanos, como consequ?e?ncia da dificuldade em encon-

trar agendamentos capazes de suprir toda a demanda sem violar restric?o?es operacionais

da distribuic?a?o. E, em segundo lugar, o fato do cena?rio petrol??fero brasileiro ter deixado

de ser um monopo?lio estatal, a partir de 1994, faz com que uma log??stica eficiente seja

condic?a?o essencial neste ambiente de alta competitividade.

Esta distribuic?a?o pode ser realizada por diversos meios, tal como mar??timo, rodovia?rio

e ferrovia?rio. Contudo, a principal forma de distribuic?a?o, no Brasil e no mundo, e? via uma

rede de dutos, em decorre?ncia principalmente de sua viabilidade econo?mica e seguranc?a

ambiental [32]. De acordo com dados da pro?pria Petrobras, ha? no Brasil mais de

11.300 km de dutos, que distribuem cerca de 1.600 barris por dia de derivados do petro?leo

para o mercado consumidor [31].

Atualmente, o agendamento da distribuic?a?o nas malhas de oleodutos no Brasil e? essen-

cialmente manual, caracterizando-se como uma atividade custosa e lenta, o que dificulta a

simulac?a?o de cena?rios que possam reduzir custos e atender mais eficientemente a demanda

por tais produtos. Desta forma, ferramentas computacionais de otimizac?a?o exerceriam um

papel fundamental no apoio a? decisa?o deste planejamento, pois sa?o capazes de lidar ra-

pidamente com um grande conjunto de varia?veis e restric?o?es, fornecendo alternativas de

soluc?o?es mais diversificadas, com menor custo e mais detalhadas. Consequ?entemente,

mesmo que as soluc?o?es na?o fossem totalmente aproveitadas, ja? seriam excelentes pontos

de partida para um posterior refinamento e ana?lise.

1



1.1. Objetivos do Projeto 2

1.1 Objetivos do Projeto

Este projeto de mestrado trata do estudo de modelos para a distribuic?a?o de a?lcoois e

derivados do petro?leo por meio de uma rede de dutos. Ele surge de um problema pra?tico,

originado na Petrobras, parceira na especificac?a?o dos requisitos e no fornecimento de

dados. Sua importa?ncia, desta forma, na?o se limita apenas a? pesquisa acade?mica, mas

tambe?m envolve o esforc?o de criar metodologias u?teis e aplica?veis para problemas de

transporte em dutos de grande complexidade.

Contudo, a complexidade operacional inerente a?s topologias dutovia?rias torna-o um

problema de dif??cil resoluc?a?o. Na?o ha? atualmente uma modelagem matema?tica sufici-

entemente compacta e abrangente que aborde todos os requisitos mais fundamentais do

problema. Consequ?entemente, os modelos de otimizac?a?o ou satisfac?a?o existentes hoje na

literatura, apesar de eficientes, geram soluc?o?es muito aque?m daquelas operacionalmente

fact??veis. Isto porque sa?o fortemente baseadas em relaxac?o?es do problema, tornando-o

assim mais adequado para metodologias de otimizac?a?o cla?ssicas, como meta-heur??sticas e

Programac?a?o Linear Inteira [40].

Portanto, diferentemente dos estudos existentes, o objetivo do projeto e? propor mode-

los capazes de representar todo o amplo nu?mero de requisitos operacionais do problema

em formulac?o?es mais compactas, de forma que uma soluc?a?o va?lida destes modelos esteja

bastante pro?xima de uma soluc?a?o fact??vel para os operadores da rede de dutos. Tais

modelos devem contemplar tre?s outras caracter??sticas: mostrarem-se promissores para a

resoluc?a?o de insta?ncias reais, fornecidas pela pro?pria Petrobras; serem flex??veis para a

modelagem de outros requisitos operacionais; e, por fim, serem computa?veis por diferentes

algoritmos de resoluc?a?o, servindo como base para futuras pesquisas.

A fim de cumprir esses objetivos, montou-se um grupo de pesquisa formado por pro-

fessores e estudantes da UNICAMP, ale?m de funciona?rios da pro?pria Petrobras, em

um projeto de longo prazo denominado SCONSUELO1. O grupo era inicialmente com-

posto pelos professores Arnaldo V. Moura, Cid C. de Souza, pelos estudantes de mestrado

Andre? A. Cire?, Tony M.T. Lopes, e pelos funciona?rios da Petrobras, Fernando Mar-

cellino, Andre? Lima, Leandro Barcelos e Enio Medeiros. No te?rmino dessa dissertac?a?o, o

grupo completou dois anos de pesquisa, incluindo coleta de dados, especificac?a?o do pro-

blema, modelagem e testes computacionais. Os avanc?os eram periodicamente fornecidos

aos responsa?veis pelo planejamento de dutos da Petrobras, os quais relatavam as carac-

ter??sticas operacionais das soluc?o?es deveriam ser melhor abordadas pelos solucionadores.

A arquitetura de resoluc?a?o desenvolvida pelo grupo propo?e uma divisa?o do problema

em duas fases, planejamento e escalonamento, ambas independentes e que permitem a

1Solucionador para Consuelo, ja? que os resultados dos modelos devem ser compat??veis com o sistema
de simulac?a?o da Petrobras, denominado Consuelo.



1.2. Organizac?a?o do Texto 3

aplicac?a?o de diferentes me?todos para resolve?-las. Este projeto de mestrado foca na parte

de escalonamento, por estar relacionada a? satisfac?a?o dos requisitos operacionais da rede de

dutos. Para enta?o atingir os objetivos de modelagem descritos anteriormente, o trabalho

apresenta uma formulac?a?o exata em Programac?a?o por Restric?o?es [23], ferramenta que

prove? uma grande liberdade de representac?a?o e resoluc?a?o.

Atualmente, o projeto SCONSUELO conta com diversos alunos de iniciac?a?o cient??fica

e novos estudantes de mestrado, os quais utilizara?o os me?todos desenvolvidos ate? enta?o

como base para algoritmos mais robustos e capazes de lidar com um maior nu?mero de

restric?o?es operacionais. A ide?ia inicial e? que a fase de escalonamento seja resolvida utili-

zando te?cnicas de relaxac?a?o e metaheuristicas sobre os modelos PR aqui descritos, o que

reforc?a a contribuic?a?o deste projeto de mestrado para futuras pesquisas relacionadas ao

problema de escalonamento em dutos.

1.2 Organizac?a?o do Texto

A dissertac?a?o de Mestrado esta? organizada como segue. O cap??tulo 2 descreve em deta-

lhes o problema de Transporte em Dutos e seus para?metros, e o cap??tulo 3 apresenta as

principais refere?ncias da literatura de programac?a?o de dutos. Utilizando-se dos trabalhos

anteriores como base, o cap??tulo 4 descreve a proposta de resoluc?a?o do problema, a qual

sera? desenvolvida em detalhes nos cap??tulos 6 e 7. Por fim, o cap??tulo 8 exibe as concluso?es

e cap??tulo 9 os poss??veis trabalhos futuros, seguido pelas refere?ncias bibliogra?ficas.



Cap??tulo 2

O Problema do Transporte em

Redes de Dutos

Empresas de petro?leo dispo?em usualmente de um conjunto de refinarias e terminais,

denominados o?rga?os, os quais sa?o dedicados a? produc?a?o e distribuic?a?o de derivados de

petro?leo e bio-combust??veis aos seus mercados consumidores. As campanhas de produc?a?o

das refinarias e de entrega aos mercados sa?o traduzidas, respectivamente, em valores

estimados de produc?a?o e demanda de produtos em cada o?rga?o da rede [4, 6].

Contudo, os o?rga?os na?o sa?o auto-suficientes no suprimento de seus mercados locais.

Torna-se necessa?rio, portanto, o uso de algum meio de distribuic?a?o para evitar a falta de

produto nos terminais e para escoar a produc?a?o em excesso nas refinarias. Tal transporte

e? predominantemente feito por meio de uma rede de dutos, a alternativa mais vantajosa

em termos econo?micos, operacionais e ambientais [32].

Os dutos possuem capacidades, sentidos permitidos de fluxo, vazo?es de bombeamento

e podem ser usados para movimentar diferentes tipos de produto consecutivamente. Note

que alguns dutos permitem vaza?o em ambos os sentidos, com inverso?es de fluxo. Outra

caracter??stica operacional e? que os dutos devem estar sempre completamente preenchidos,

ou seja, a transmissa?o de um volume implica que necessariamente outro volume deve ser

bombeado em seguida.

Os produtos, por sua vez, esta?o associados a um conjunto de restric?o?es de interface, isto

e?, apenas podem ser bombeados consecutivamente em um duto se forem compat??veis entre

si, condic?a?o essencial para a manutenc?a?o de um n??vel de qualidade aceita?vel. Cada o?rga?o

tambe?m conte?m restric?o?es locais de bombeamento e recebimento de produtos, decorrentes

das conexo?es internas entre tanques e dutos.

O Problema de Transporte em Redes de Dutos (PTRD), desta forma, consiste em

determinar as operac?o?es a serem realizadas em uma rede de dutos a fim de escoar a

produc?a?o e atender um dado conjunto de demandas, considerando um horizonte tem-

4



2.1. Caracterizac?a?o do PTRD 5

poral pre?-estabelecido. Esta programac?a?o deve satisfazer todas as restric?o?es operacionais

particulares dos o?rga?os e dutos, ale?m de buscar reduzir os custos de transporte do sistema.

2.1 Caracterizac?a?o do PTRD

A seguir, sa?o descritos os dados e restric?o?es que formalizam o dom??nio do PTRD, ne-

cessa?rios para definir as insta?ncias e suas soluc?o?es va?lidas. Tal caracterizac?a?o pode ser

dividida em quatro classes: para?metros e constantes gerais do problema, restric?o?es dos

o?rga?os, restric?o?es dos dutos e dados dina?micos da rede. As tre?s primeiras classes esta?o

relacionadas a? topologia f??sica e pouco muta?vel da rede, enquanto a u?ltima varia conforme

o horizonte de planejamento.

2.2 Para?metros e Constantes Gerais

Ha? quatro para?metros fundamentais para o PTRD, conforme relac?a?o abaixo.

1. Unidade de Tempo (u.t.): designa a unidade de tempo real que sera? utilizada para a

discretizac?a?o da insta?ncia e precisa?o dos modelos desenvolvidos. Nos cena?rios reais,

e? comum que seja utilizado minuto como a u.t. ba?sica.

2. Unidade de Volume (u.v.): analogamente a? u.t., designa a unidade de volume real

que sera? utilizada para as vazo?es e capacidades. Usualmente sa?o metros cu?bicos.

3. Horizonte (H): um nu?mero inteiro que designa o horizonte de execuc?a?o em unidades

de tempo, isto e?, o tamanho da janela de tempo da insta?ncia na qual o planejamento

e escalonamento devem ser aplicados. Considera-se tambe?m que o instante inicial

de planejamento e? 1. Por exemplo, dados H = 14400 e u.t. em minutos, te?m-se um

horizonte de 10 dias em tempo real.

4. Conjunto de Produtos (P): o conjunto P = {p1, p2, ..., pnp} designa os produtos que

sa?o armazenados e transportados pela rede. Um grupo de produtos e? um subconjunto

de P formado por produtos com certas caracter??sticas qu??micas semelhantes, tais

como os grupos de gasolinas, dieseis e a?lcoois. Algumas restric?o?es, tal como as

de interface, podem ser definidas sobre grupos ao inve?s de produtos individuais,

facilitando a representac?a?o do problema.

Produtos no PTRD sa?o considerados fung??veis ou intercambia?veis [14], ou seja, na?o

ha? diferenciac?a?o entre volumes de produtos p distribu??dos na rede. Esta hipo?tese

surge do fato de que, na pra?tica, as quantidades de um mesmo produto p proveni-

entes de origens distintas possuem tambe?m qualidades diferenciadas, apesar de sua



2.2. Para?metros e Constantes Gerais 6

equivale?ncia qu??mica. Caso esta diferenciac?a?o seja necessa?ria, e? poss??vel explicita?-la

nesta formulac?a?o criando um novo produto para cada n??vel de qualidade desejado.

Um exemplo no cena?rio real ocorre com a gasolina de exportac?a?o e a gasolina comum.

Apesar de na pra?tica serem o mesmo produto, ambas conte?m especificac?o?es de

qualidade bastante distintas. Desta forma, e? importante que sejam consideradas

como produtos distintos, com dados de produc?a?o e demandas desagregados.

2.2.1 Restric?o?es dos O?rga?os

Uma rede de dutos possui um conjunto de o?rga?os Org = {o1, o2, ..., ono}, responsa?veis

pela produc?a?o, armazenamento e distribuic?a?o de produtos. Um nu?mero significativo das

restric?o?es de um determinado o?rga?o o ? Org esta? relacionado com seu complexo de

tanques, dado pelo conjunto T (o) = {t1, t2, ..., tnto}. Tais restric?o?es sa?o descritas a seguir,

com T q =
?

o?Org T (o).

C1: Para um dado tanque t ? T q, deve-se respeitar sua capacidade ma?xima de armaze-

namento cap(t) e nunca violar sua capacidade m??nima, 0.

C2: Um tanque t ? T q pode armazenar apenas um tipo de produto prod(t) ? P durante

todo o horizonte de planejamento, condic?a?o imposta como um requisito de qualidade.

Ale?m disso, usualmente ha? mais de um tanque por produto em cada o?rga?o, mas na?o

necessariamente um o?rga?o conte?m tanques para todos os produtos da rede. Se

T (o) = ? para um dado o ? Org, o o?rga?o e? denominado entroncamento, isto e?,

utilizado apenas para a passagem de produtos.

No cena?rio real, ha? casos em que certos tanques podem ser utilizados para o ar-

mazenamento de produtos diferentes dos originalmente atribu??dos, o que envolve a

aplicac?a?o de um custo fixo relativo a? limpeza e a demais detalhes operacionais. Como

sa?o casos indeseja?veis e muitas vezes provenientes da dificuldade do planejamento

manual, a restric?a?o C2 e? inclusive requisitada pelos operadores da Petrobras.

C3: Um produto pode ser tanto bombeado para um tanque ou dele retirado, desde que

essas operac?o?es na?o sejam simulta?neas. Isto significa que, ao iniciar uma inserc?a?o

ou retirada em um tanque, toda a operac?a?o deve ser completada antes que qualquer

outra seja realizada neste tanque.

Uma excec?a?o a? este caso ocorre em o?rga?os que representam terminais portua?rios.

Devido ao per??odo restrito em que os navios podem ficar parados nos portos, muitas

vezes volumes de produtos devem ser enviados diretamente dos dutos para os navios

sem pre?-estocagem. Para tanto, realiza-se uma operaca?o pulma?o, onde o produto e?

simultaneamente bombeado nos dutos para um tanque, e do tanque para o navio



2.2. Para?metros e Constantes Gerais 7

com uma vaza?o menor. No entanto, a operac?a?o pulma?o e? apenas poss??vel para alguns

o?rga?os que possuem esta capacidade hidra?ulica, definido pelo conjunto P ulm ? Org.

Ale?m disso, como hipo?tese, um tanque que esvaziou pode ser reabastecido sem que

seja necessa?rio considerar um tempo para limpeza e preparo para o armazenamento

de volume adicional.

C4: Se o produto a ser inserido em um tanque e? produzido localmente, isto e?, no

mesmo o?rga?o, o tanque so? pode receber este produto se estiver completamente vazio,

condic?a?o imposta tambe?m por questo?es de qualidade.

C5: Caso ocorra a mistura de dois volumes produzidos em o?rga?os distintos num certo

tanque, a qualidade do produto devera? ser reverificada antes da entrega ao mercado

consumidor ou bombeamento para outros o?rga?os. Isto e? representado aqui como um

tempo de certificac?a?o Tc, considerado entre o instante final da mistura e o instante

inicial das demais operaco?es no tanque.

Uma vez definidas as condic?o?es de armazenamento de produto nos o?rga?os, e? poss??vel

listar as restric?o?es referentes a?s necessidades de estocagem impostas pelos mercados, ale?m

daquelas relacionadas aos limites de envio e recebimento.

C6: O valor de estoque de um o?rga?o o ? Org, produto p ? P e instante i e? dado somando-

se o volume em i de todos os tanques T (o) que armazenam p. Em todos os o?rga?os

e instantes, tal estoque deve respeitar limitantes de estoque m??nimo, est min(o, p),

e estoque ma?ximo, est max(o, p). Esta restric?a?o e? proveniente da necessidade de

se manter estoques de seguranc?a para incentivar o escoamento da produc?a?o e para

eventuais problemas na distribuic?a?o, tal como manutenc?o?es emergenciais de dutos.

C7: Devido a?s restric?o?es sobre o conjunto de bombas e va?lvulas hidra?ulicas em um certo

o?rga?o o ? Org, deve ser observado um nu?mero ma?ximo de operac?o?es simulta?neas de

envio, env max(o). Como sa?o relativas aos bombeamentos, na?o ha? uma restric?a?o

ana?loga para recebimento de produtos em o.

C8: Alinhamentos proibidos: o complexo de conexo?es internas aos o?rga?os, principal-

mente refinarias, na?o permite que determinadas operac?o?es em oleodutos ocorram

simultaneamente. Cada configurac?a?o na?o-pass??vel de uso para transporte de pro-

dutos e? associada a um alinhamento proibido, um co?digo que agrupa as operac?o?es

proibidas de serem exercitadas simultaneamente no o?rga?o.

Supondo que Align(o) sejam os alinhamentos proibidos de o ? Org, cada alinha-

mento alin ? Align(o) e? formado por um conjunto de duplas (p, s), onde p ? P



2.2. Para?metros e Constantes Gerais 8

e s (sentido) indica se a operac?a?o e? relativa ao envio ou recebimento. Por exem-

plo, o alinhamento alin = {(gasolina, envio), (diesel, recebimento)} significa que as

operac?o?es de envio de gasolina e recebimento de diesel na?o podem ser simulta?neas.

Um certo alinhamento pode envolver diversos produtos e diferentes direc?o?es. Ale?m

disso, como esta? relacionado a?s conexo?es internas de um o?rga?o, na?o depende dos

dutos de entrada ou sa??da de produto.

Essa forma de representac?a?o facilita a modelagem do PTRD, evitando a necessidade

de explicitar detalhes da topologia dos circuitos hidra?ulicos e dutos internos ao o?rga?o.

C9: Devido principalmente ao custo mais alto da energia ele?trica em certos per??odos

do dia, um o?rga?o deve obededer a per??odos de sazonalidade, momentos em que

nenhuma operac?a?o pode ser iniciada. Para um dado o?rga?o o ? Org, per??odos

de sazonalidades sa?o dados como um conjunto de intervalos de tempo, saz(o) =

{(inicio1, f im1), ..., (inicionsaz(o), f imnsaz(o))}.

C10: Operac?o?es tambe?m na?o podem ser nem iniciadas, nem terminadas, durante as trocas

de turno de trabalho nos va?rios o?rga?os. Estas trocas sa?o dadas de forma ana?loga

aos per??odos de sazonalidade, tt(o) = {(inicio1, f im1), ..., (iniciott(o), f imtt(o))}, o ?

Org.

2.2.2 Restric?o?es dos Dutos

A rede esta? associada a um conjunto Dt = {d1, d2, ..., dnd} de dutos, onde cada d ? Dt

conecta um par de o?rga?os orgs(d) = (oi, oj), com oi, oj ? Org. No caso, oi e? denominado

o?rga?o ou extremidade de origem e oj, o?rga?o ou extremidade de destino do duto d. O sentido

de fluxo da extremidade de origem a? de destino corresponde ao sentido principal do duto,

ou p(d). Ja? o sentido de fluxo contra?rio corresponde ao sentido reverso do duto, ou r(d).

Outra caracter??stica e? que dois o?rga?os podem estar conectados por mais de um duto, o

que e? usual nas insta?ncias reais. Volumes tambe?m podem ser transmitidos diretamente

de um duto para outro, sem a necessidade de serem armazenados temporariamente em

o?rga?os intermedia?rios.

A partir dos o?rga?os e dutos, define-se tambe?m o conceito de rotas. Uma rota r e?

composta por uma sequ?e?ncia de pares de o?rga?os separados por dutos, representando os

percursos pelos quais qualquer fluxo da rede pode transitar. As rotas poss??veis sa?o prefixa-

das e informadas como para?metro: se um certo volume de produto v for transmitido de um

o?rga?o oi da rede ate? um o?rga?o oj , passando por um ou mais o?rga?os e dutos intermedia?rios

d1, oj+1, ..., oj?1, dn, j = i + n, necessariamente a rota r = (oi, d1, oi+1, ..., oj?1, dn, oj) deve

existir. Note que os volumes sa?o transmitidos diretamente entre os dutos intermedia?rios de

uma rota, sem perdas ou armazenamento nas conexo?es intermedia?rias. Contudo, existem



2.2. Para?metros e Constantes Gerais 9

casos em que parte do volume pode ser depositado em o?rga?os intermedia?rios, e o movi-

mento do volume restante do duto segue na rota com uma vaza?o menor. Esta operac?a?o e?

denominada sangria, que tambe?m deve ser prevista no modelo.

As restric?o?es referentes aos dutos sa?o listadas a seguir.

C11: Os dutos sa?o pressurizados e, portanto, devem sempre estar completamente preen-

chidos com produtos. A capacidade volume?trica de um duto d ? Dt e? definida por

vol(d).

Tambe?m e? considerada uma conservac?a?o de massa ideal: para se retirar um determi-

nado volume v de uma extremidade do duto, deve-se inserir o mesmo volume v em

sua outra extremidade. Tal volume pode ser proveniente de um tanque ou mesmo de

um outro duto, interligado ao mesmo o?rga?o atrave?s de uma de suas extremidades.

C12: As vazo?es de bombeamento em um duto sa?o limitadas por produto, devido a?s suas

viscosidades, e pelo sentido de fluxo, decorrente das diferenc?as na capacidade das

bombas entre os o?rga?os de origem e destino e inclinac?a?o do terreno. Uma intuic?a?o

relativa a? vaza?o por sentido e? que dutos geograficamente inclinados possuem uma

vaza?o de descida maior que a de subida. Os limites inferior e superior das vazo?es

para um duto d ? Dt, produto p ? P e sentido s ? {p(d), r(d)} sa?o dados, respecti-

vamente, por vz inf (d, p, s) e vz sup(d, p, s).

Assim, para se bombear um certo volume em um duto, deve-se considerar todos os

produtos e sentidos dos dutos nas rotas que sera?o movimentadas como consequ?e?ncia

do bombeamento. A vaza?o ma?xima de bombeamento sera?, portanto, o m??nimo das

vazo?es superiores destes produtos nos seus respectivos sentidos. Ja? a vaza?o m??nima

de bombeamento sera? dada pelo ma?ximo das vazo?es inferiores.

Os para?metros vz inf (d, p, s) e vz sup(d, p, s) tambe?m indicam os sentidos poss??veis

de fluxo para os produtos em um duto. Por exemplo, se um produto p so? puder ser

trafegado no sentido principal do duto, enta?o vz inf (d, p, r(d)) = vz sup(d, p, r(d)) =

0.

C13: Devido a?s questo?es operacionais das bombas de cada o?rga?o, deve-se respeitar tambe?m

uma quantidade m??nima de bombeamento ao se injetar produtos nos dutos. O vo-

lume bombeado em um duto tambe?m pode ser denominado de batelada, e esta

restric?a?o tambe?m e? comumente referenciada como tamanho m??nimo de batelada na

literatura. Tal quantidade e? definida por duto d ? Dt, produto p ? P e sentido

s ? {p(d), r(d)}, dada por qtde min(d, p, s).

C14: Dois produtos em contato num certo duto devem ser compat??veis. Pares incom-

pativeis sa?o dados pelo conjunto de duplas Incomp = {(gi, gj), ..., (gm, gn)}, onde

gk ? P e? um grupo de produtos.



2.2. Para?metros e Constantes Gerais 10

Esta restric?a?o esta? ligada a? manutenc?a?o da qualidade dos produtos, de forma a

evitar a degradac?a?o decorrente da mistura (ou interface) entre tipos qu??micos di-

ferenciados. Caso seja absolutamente necessa?rio que sejam enviados dois produtos

incompat??veis em sequ?e?ncia, deve-se interpor entre eles um terceiro produto, com-

pat??vel com ambos, chamado de selo. O volume de selo depende do oleoduto, dos

produtos em questa?o e do sentido do fluxo, e e? dado por selo(d, p, q, s), para d ? Dt,

p, q ? P e s ? {p(d), r(d)}.

C15: Os dutos possuem per??odos de manutenc?a?o espec??ficos, momentos em que sa?o reali-

zados reparos e limpeza. Os per??odos de manuntenc?a?o sa?o dados por manut(d) =

{mnut1, mnut2, ..., mnutnm(d)}, d ? Dt. Cada elemento mnuti = (inicio, f im, ?) in-

dica que, durante os instantes inicio e f im, as vazo?es esta?o limitadas a um para?metro

? vezes as vazo?es ma?ximas dos produtos e sentidos do duto, com ? &amp;lt;1.

2.2.3 Dados Dina?micos da Rede

Os dados dina?micos compo?em os para?metros que na?o se referem a? topologia f??sica da

rede, mas espec??ficos da insta?ncia a ser tratada pelo algoritmo. Podem ser divididos em

tre?s grupos: dados relativos ao estado inicial da rede, relativos a? produc?a?o e relativos a?

demanda.

Os dados do estado inicial da rede sa?o dois, dados a seguir.

1. Estoque inicial dos tanques, indicando o produto e o volume inicial nos tanques.

2. Conteu?do inicial dos dutos, dado para todos os dutos por uma sequ?e?ncia da forma

DIni(d) = {(pm, qm, rm), .., (pn, qn, rn)}, d ? Dt. A tripla (pj, qj , rj) representa,

respectivamente, um produto pj ? P , sua quantidade qj e a rota que deve seguir, rj .

Desta forma, considera-se que os produtos inicialmente nos dutos ja? possuem um

destino pre?-estabelecido, que obrigatoriamente deve ser respeitado pelas soluc?o?es

geradas. A ordem das tuplas na sequ?e?ncia DIni(d) refere-se ao sentido principal de

fluxo no duto.

As campanhas de produc?a?o para cada o?rga?o o ? Org sa?o definidas pelo conjunto

P r(o) = {pr1, pr2, ..., prnpr}, onde cada elemento pri ? P r(o) e? formado pela tupla

(p, v, inicio pr, f im pr). No caso, p ? P e? o produto que sera? refinado, v um inteiro

na?o-negativo que representa o volume produzido e, por fim, [inicio pr, f im pr] representa

o intervalo de tempo em que a produc?a?o ocorrera? no o?rga?o.

O volume v produzido e? distribu??do uniformemente entre as t = f im pr ?inicio pr + 1

unidades de tempo, isto e?, a cada instante sera?o produzidas ?v/t? unidades de volume



2.3. Soluc?a?o e Objetivos 11

(u.v.). A produc?a?o pode ser distribu??da em diferentes tanques durante este intervalo,

contanto que estejam vazios imediatamente antes de a receberem (restric?a?o C4).

Ja? as demandas sa?o dadas de forma sime?trica a?s produc?o?es. Para o o?rga?o o ? Org,

e? definido o conjunto Dem(o) = {dem1, dem2, ..., demndem}, onde cada elemento demi ?

Dem(o) e? formado pela tupla (p, v, inicio dem, f im dem). Te?m-se que p ? P e? o produto

da demanda, v e? um inteiro na?o-negativo que representa o volume demandado e, por fim,

[inicio dem, f im dem] representa o intervalo de tempo em que a demanda ocorrera? no

o?rga?o o. O volume v demandado e? distribu??do uniformemente entre as t = f im dem ?

inicio dem + 1 unidades de tempo, isto e?, a cada instante sera?o extra??das ?v/t? unidades

de volume (u.v.). Tal como a produc?a?o, demandas podem ser absorvidas de diferentes

tanques durante este intervalo.

2.3 Soluc?a?o e Objetivos

Uma soluc?a?o e? formada por uma programac?a?o de movimentos de entrada nos dutos.

Cada movimento e? designado pela tupla m = (p, r, v, inicio m, f im m, ts, te), isto e?, por

um produto p ? P , uma rota r cadastrada, o volume v positivo do produto, os instantes

de in??cio, inicio m, e fim, f im m, de bombeamento do produto no primeiro duto da rota

e, por fim, pelos tanques de sa??da ts ? T q e de entrada te ? T q, de onde o volume sera?

extra??do e onde sera? armazenado, respectivamente. O conjunto de movimentos deve ser

tal que respeite todas as restric?o?es nos o?rga?os e dutos, ale?m de satisfazer as campanhas

de produc?a?o e demanda em cada o?rga?o.

No modelo proposto neste projeto, o foco sera? dado a? satisfac?a?o de restric?o?es ao inve?s

da otimizac?a?o de uma certa func?a?o objetivo, devido a? alta complexidade de se obter

soluc?o?es via?veis para o PTRD. Assim, custos relativos a? utilizac?a?o dos dutos e tanques

sa?o desconsiderados. Isto e? condizente com a pra?tica atual realizada pela Petrobras,

na qual o correto atendimento da demanda e? priorita?rio frente aos demais custos.

2.4 Modelo da Rede de Dutos

A figura 2.1 apresenta um modelo esquema?tico simples de uma rede de dutos tratada

neste projeto, tambe?m mostrada no cap??tulo 7. Cada o?rga?o Bi apresenta seu pro?prio

conjunto de tanques, e note que mais de um duto pode ser utilizado para conectar dois

o?rga?os distintos, tal como ocorre entre B2 e B3.

Para que dois produtos fiquem em contato no duto, como em D2, ambos devem ser

compat??veis entre si, conforme restric?a?o C14. Se o o?rga?o B0 possuir um nu?mero ma?ximo

de envios simulta?neos igual a 1 (restric?a?o C7), enta?o produtos na?o podem ser injetados



2.5. Topologia Brasileira 12

simultaneamente em D0 e D1 a partir de B0. Ale?m disso, caso houver um alinhamento

proibido (restric?a?o C8) de recebimento de produtos P1 (cor cinza) e P2 (cor escura) no

o?rga?o B3, ele na?o podera? receber produtos dos dutos D3 e D4.

Por fim, um exemplo de rota seria r = (B1, D2, B2, D4, B3). Se o destino do produto

P1 (cor cinza) do duto D2 for o o?rga?o B3 pela rota r, a vaza?o aplicada para empurrar o

duto D2, no caso a partir de B1, deve ser consistente com as vazo?es dos produtos tanto

de D2 como do duto D4, que tambe?m sera? empurrado.

B
1
T

0
P

0

B
1
T

0
P

1

B
1
T

0
P

2

B
0
T

0
P

0
B

0
T

0
P

1

B
3
T

0
P

1
B

3
T

0
P

2

D
0

D
1

D
2

D
3

D
4

B
1

B
0

B
2

B
3

Figura 2.1: Modelo esquema?tico de uma rede de dutos.

2.5 Topologia Brasileira

A especificac?a?o do PTRD aqui descrita agrega as principais restric?o?es abordadas na lite-

ratura do problema, ale?m de representar com certa fidelidade a realidade enfrentada pelos

planejadores e operadores de dutos. Ela foi concebida a partir da ana?lise bibliogra?fica do

PTRD e, principalmente, com diversas reunio?es juntos aos gerentes da Petrobras.

O projeto focara? na rede de dutos da regia?o Sudeste do Brasil, gerenciada pela Pe-

trobras e representada na figura 2.2. Esta rede e? composta por 14 o?rga?os, 29 dutos,

cerca de 240 tanques e mais de 30 produtos.O horizonte de planejamento e? de cerca de 10

dias.



2.5. Topologia Brasileira 13

Figura 2.2: Representac?a?o do sistema de dutos da regia?o Sudeste de Sa?o Paulo (figura
fornecida pela Petrobras).



Cap??tulo 3

Revisa?o Bibliogra?fica

O problema abordado neste projeto engloba um conjunto de restric?o?es bastante complexo

e diversificado, relacionando fatores como capacidade de estocagem, sequ?enciamento de

produtos nos dutos e condic?o?es de balanceamento de massa em sua especificac?a?o mais

geral. O trabalho de [25] demonstra que basta considerar a restric?a?o C14, de interfaces

entre produtos, para que o PTRD seja classificado como NP-Dif??cil [30].

Na literatura, o problema e? usualmente conhecido como Multiproduct Pipeline Schedu-

ling e diversos trabalhos se propuseram a apresentar abordagens heur??sticas ou exatas para

sua resoluc?a?o. Contudo, em decorre?ncia da grande aplicabilidade pra?tica do problema,

os trabalhos existentes diferem bastante na forma como definem e adaptam restric?o?es a?s

suas respectivas realidades. Desta forma, tre?s pontos sa?o essenciais para a compreensa?o

de cada proposta de modelagem: a topologia da rede, o me?todo de resoluc?a?o aplicado e,

por fim, os resultados computacionais e a operacionalidade das soluc?o?es.

Ha? pesquisas dedicadas a? revisa?o bibliogra?fica do PTRD, tais como [13, 39], que apre-

sentam uma ana?lise bastante detalhada das abordagens existentes na a?rea. Assim, a re-

visa?o aqui descrita procurara? destacar as propostas mais relevantes e que serviram como

base para o desenvolvimento deste projeto. A tabela 3.1 sintetiza as caracter??sticas de

tais propostas e a compara com este trabalho.

Dentre tais trabalhos, o estudo mais completo da a?rea e? realizado por Camponogara [6],

cujas caracter??sticas mais se aproximam da realidade quando comparadas aos demais pro-

jetos. Nele, define-se um Problema de Transporte de Derivados de Petro?leo Simplificado,

ou PTDPS, no qual as vazo?es sa?o fixas por duto, todas as bases sa?o capazes de armazenar

todos os produtos (eliminando-se, assim, a transmissa?o de produtos duto-duto), e na?o

ha? trocas de turno ou manutenc?o?es programadas. Tambe?m desconsideram-se estoques

m??nimos por base e quantidades m??nimas por operac?a?o. Os tanques, por sua vez, sa?o

agregados, isto e?, ha? um tanque por o?rga?o com capacidade equivalente a? soma de todos

os tanques que armazenam o produto em questa?o.

14



15

[1] [3,7,18] [4] [6] [11] [19,20,21] PTRD

O?rga?os 8 5 12 7 2 2 14
Dutos 8 4 28 7 1 1 29

Tanques 40 25 84 28 16 12 242
Produtos 5 4 7 4 8 6 32
Horizonte 14 dias 3 dias 5 dias 80 u.t. 5 dias 30 dias 10 dias

Tempo Cont??nuo
? ? ?

Vazo?es Varia?veis
? ? ? ?

Tanques Individuais
? ?

Topologia Gene?rica
? ? ? ?

Restric?o?es de Interface
? ? ? ? ?

Te?cnica GA MILP,VNS A-Teams GA,MILP MILP,CP MILP Heur??stica+CP

Resultados Via?vel O?timo Invia?vel Via?vel O?timo O?timo Via?vel

Tabela 3.1: Comparac?a?o entre abordagens anteriores.

Para a resoluc?a?o do PTDPS, o trabalho de [6] propo?s duas te?cnicas distintas, uma

exata e outra heur??stica. A primeira, modelada como uma Programac?a?o Linear Inteira

(PLI) [40], buscava reduzir o PTDPS a um problema de Fluxo em Redes Multiper??odos

[3], com dutos e o?rga?os como ve?rtices e transmisso?es de quantidade como arestas. Apesar

da existe?ncia de algoritmos com bom desempenho para problemas deste tipo, verificou-

se que a resoluc?a?o do modelo PLI do PTDPS era impratica?vel, como conseque?ncia do

tamanho e densidade do grafo resultante da topologia da rede. Para as u?ltimas verso?es

dos resolvedores comerciais de PLI ate? a publicac?a?o desta dissertac?a?o, o tempo me?dio

para se obter uma soluc?a?o para a relaxac?a?o linear do modelo foi de 50 horas.

A segunda te?cnica proposta em [6] caracterizava-se pela aplicac?a?o de Times Ass??ncronos

ao PTDPS, heur??stica na qual diversos agentes auto?nomos tratam de partes distintas do

problema, trocando de tempos em tempos informac?o?es relevantes para a sua resoluc?a?o.

Para viabilizar a aplicac?a?o da heur??stica, o problema foi modelado como um Job Shop

Scheduling [6], composto por dois agentes: um para a gerac?a?o de bombeamentos de quan-

tidades entre bases e dutos, os jobs, e outro para o escalonamento e simulac?a?o de tais

bombeamentos nos dutos, equivalente ao processamento dos jobs em ma?quinas (dutos).

Apesar de mais eficiente, a aplicac?a?o de Times Ass??ncronos proposta por [6] na?o foi

capaz de gerar soluc?o?es via?veis para as insta?ncias apresentadas, em decorre?ncia das es-

trate?gias essencialmente gulosas atribu??das aos agentes. Com esta perspectiva, Laber et al

[27] utilizaram os Times Ass??ncronos como a fase gulosa de uma metaheur??stica GRASP

[38] para o PTDPS, desenvolvendo uma busca local para o reparo das soluc?o?es. Como

consequ?e?ncia, foram capazes de satisfazer todas as restric?o?es consideradas no PTDPS, mas

o tempo necessa?rio para a ressimulac?a?o apo?s cada aplicac?a?o da busca local inviabilizava

sua utilizac?a?o.



16

Posteriormente, Braconi et al [4] relaxou o modelo PLI de Fluxo em Redes Multi-

per??odos de [6], denominando a resoluc?a?o deste novo modelo Etapa de Planejamento.

Esta soluc?a?o parcial era enta?o utilizada como parte de uma segunda heur??stica, a Etapa

de Escalonamento, na qual atribu??a-se tempos aos fluxos criados na primeira etapa. Esta

te?cnica permitiu obter soluc?o?es rapidamente, mas as relaxac?o?es intr??nsecas a? definic?a?o

do PTDPS, tal como tanques para todos os produtos em todos os o?rga?os, tornavam as

soluc?o?es encontradas pouco aplica?veis na pra?tica.

Outro trabalho fundamentado na aplicac?a?o de heur??sticas e? de Crane et al [10], no

qual um Algoritmo Evolutivo [15] foi aplicado para uma versa?o bastante simplificada

do PTRD. Nela, a rede de dutos e? tratada como uma a?rvore direcionada com 8 no?s,

e os estoques dos tanques possuem apenas tre?s estados poss??veis: alto, me?dio e baixo.

Restric?o?es de interface e tamanho m??nimo de bateladas sa?o tambe?m desconsideradas. O

algoritmo proposto foi capaz de gerar soluc?o?es para horizontes de ate? 3 dias mas, devido

a? forma como as soluc?o?es eram representadas, o algoritmo era capaz de lidar apenas com

insta?ncias pequenas com poucos tanques e o?rga?os.

A te?cnica desenvolvida por De La Cruz et al [11] tambe?m aplica um Algoritmo Evo-

lutivo para uma versa?o simplificada do PTRD, sem restric?o?es de interface e com todos

os dutos possuindo um mesmo dia?metro e vaza?o. No entanto, sa?o considerados dutos

bidirecionais e uma func?a?o multi-objetivo, buscando reduzir interfaces e prazo de en-

trega dos produtos. Adicionalmente em [12], o autor tambe?m implementa um PLI para

o problema, usado para gerar parte das soluc?o?es que compo?e a populac?a?o do Algoritmo

Evolutivo. Em todos os casos, o algoritmo foi capaz de gerar soluc?o?es para insta?ncias

pequenas rapidamente, especialmente com o uso de resolvedores PLI e como decorre?ncia

das simplificac?o?es.

Ha? ainda o trabalho de Alves [1], que tambe?m aplica um Algoritmo Evolutivo para

uma variac?a?o do PTRD. No entanto, o procedimento desenvolvido foca na utilizac?a?o de

uma rede espec??fica da Petrobras denominada rede de escuros, utilizada para o tra?fego

de produtos de grande viscosidade. O problema e? similar ao PTDPS de [6], com tanques

agregados e vazo?es constantes, mas considerando tambe?m tamanho das bateladas e uso

de selos para separar produtos incompat??veis. Ale?m disso, a func?a?o objetivo buscava

minimizar o na?o-atendimento da demanda. O algoritmo obteve bons resultados para um

horizontes de 7 e 14 dias, discretizados em per??odos de algumas horas.

Uma abordagem alternativa e? descrita em Sasikumar et al [20], onde uma te?cnica

baseada em Intelige?ncia Artifical, denominada Beam Search, e? agreada a heur??sticas for-

temente baseadas na experie?ncia humana. O projeto e? aplicado em uma rede indiana,

com restric?o?es de sequ?enciamento de produtos e estoques nos o?rga?os. Apesar das simpli-

ficac?o?es, sa?o geradas boas programac?o?es mensais para as insta?ncias em questa?o.

Ainda, os trabalho de Liporace [14] e Milidiu? e Liporace [26] tratam o PTRD como



17

um problema de Planejamento em Intelige?ncia Artificial (PIA). Tal modelagem consiste

em formular o problema genericamente como um conjunto de proposic?o?es lo?gicas, cuja

composic?a?o de seus valores bina?rios representam um estado. A partir de um estado

inicial, aplicam-se ac?o?es que ira?o modifica?-lo ate? que se atinja um estado-objetivo. O

objetivo de um planejador, desta forma, e? identificar uma sequ?e?ncia de ac?o?es va?lidas que

leve o sistema ao estado-objetivo. Ale?m de um planejador espec??fico para o problema,

a especificac?a?o do PTRD como um PIA por Liporace foi inclu??da no benchmark oficial

da International Planning Competition [9], uma competic?a?o internacional de planejadores

gene?ricos. Contudo, numa perspectiva pra?tica, os planejadores existentes resolvem apenas

insta?ncias muito limitadas, com horizontes curtos, poucos tanques e restric?o?es.

Outro foco de pesquisa esta? em topologias simples, compostas por apenas um duto

e um conjunto de o?rga?os conectados a ele. A motivac?a?o e? que ela ja? representa diversos

casos pra?ticos existentes no mundo, incluindo sub-redes da pro?pria Petrobras. Ale?m

disso, esta topologia permite considerar restric?o?es mais complicadas referentes a?s vazo?es,

inventa?rio, perdas de volume decorrentes da criac?a?o de interfaces e custos de energia.

Neste contexto, encontram-se os trabalhos de Rejowski e Pinto [18, 24]. Ambos apre-

sentam uma formulac?a?o PLI de tempo discreto para o sistema OSBRA da Petrobras,

composto por 5 o?rga?os, 4 produtos e um duto que liga os estados de Sa?o Paulo e Bras??lia.

Sa?o consideradas diversas restric?o?es, tais como inventa?rio nos o?rga?os e sequ?e?ncias permi-

tidas de bombeamento, ale?m de uma func?a?o objetivo referente a? minimizac?a?o de custos de

estoque e de interface. Para um horizonte de 3 dias, os autores na?o obtiveram a soluc?a?o

o?tima nos testes realizados. Contudo, em [33], o modelo e? fortalecido pela introduc?a?o de

cortes e se consegue, em um tempo computacional razoa?vel, soluc?o?es o?timas para todas

as insta?ncias anteriores.

Para a mesma especificac?a?o proposta por [33], Cafaro e Cerda? [5] apresentam uma

formulac?a?o baseada em uma representac?a?o cont??nua do tempo e dos volumes. Conforme

explicado pelos autores, esta representac?a?o permite uma diminuic?a?o significativa do ta-

manho da formulac?a?o e do nu?mero de varia?veis bina?rias. Os resultados sa?o comparados ao

trabalho de [33], e mostram uma reduc?a?o de cerca de tre?s ordens de magnitude dos requi-

sitos computacionais necessa?rios para resolver o problema. A representac?a?o por tempos

cont??nuos tambe?m foi implementada por Rejowski e Pinto [34], considerando adicional-

mente vazo?es varia?veis de bombeamento e deciso?es relativas ao controle de inventa?rio.

Para tanto, o problema foi modelado como uma Programac?a?o Na?o-linear Inteira, baseado

na formulac?a?o em [24]. O algoritmo resultante gerou boas soluc?o?es para poucos dias.

Um outro direcionamento consiste em decompor o PTRD em subproblemas mais fa?ceis

de serem tratados, ao inve?s de resolve?-lo completamente com um modelo u?nico. O tra-

balho de Magata?o et al [21] propo?e uma divisa?o em que tre?s submodelos sa?o processados

sequ?encialmente, projetada para uma rede composta por um duto conectando uma refi-



18

naria a um terminal portua?rio. A execuc?a?o inicia-se com um procedimento denominado

Tanque Bound, caracterizado como um modelo em PLI responsa?vel pela determinac?a?o dos

recursos (i.e., tanques) a serem utilizados em todo o escalonamento. Em seguida, a Ro-

tina Auxiliar, basicamente heur??stica, define alguns para?metros de entrada para o pro?ximo

submodelo, como limites temporais que devem ser respeitados pelas tarefas no oleoduto.

Por fim, o Modelo Principal, escrito como um PLI e baseado nos para?metros fornecidos

pelo Tanque Bound e pela Rotina Auxiliar, determina o sequ?enciamento e a temporizac?a?o

das atividades de bombeamento no duto. A te?cnica foi testada com sucesso na topologia

em questa?o, considerando restric?o?es de tancagem e de interface, ale?m de vaza?o constantes.

Os autores propo?e tambe?m em [22] uma abordagem integrada entre PLI e Programaca?o

por Restric?o?es para resolver as mesmas insta?ncias, gerando boas soluc?o?es.

Mais recentemente, um conjunto de trabalhos de Relvas et al apresenta um estudo

de uma rede de dutos de Portugal, formada por um duto e dois o?rga?os. Em [35, 37], os

autores apresentam uma formulac?a?o PLI que considera diversas restric?o?es de controle de

inventa?rio, baseada em [5]. Ja? em [36], o modelo anterior e? melhorado de forma que sejam

consideradas paradas em dutos e vazo?es varia?veis, ale?m do conceito de re-escalonamento,

em que o modelo e? resolvido apo?s perturbac?o?es na soluc?a?o corrente.



Cap??tulo 4

Arquitetura do Modelo de Resoluc?a?o

O estudo dos artigos e teses apresentados no cap??tulo 3 evidencia que, como decorre?ncia da

grande dificuldade do PTRD, as abordagens existentes se apo?iam fortemente em simpli-

ficac?o?es dos requisitos do problema. Por exemplo, sa?o tratadas topologias de rede bastante

simples na maioria dos casos, com apenas um duto de sentido u?nico e terminais dispostos

de forma sequ?encial [5, 20, 34]. Ou, ainda, na?o sa?o consideradas incompatibilidade entre

produtos [1, 12] e os tanques sa?o representados com capacidade agregada [4, 6].

Tais hipo?teses permitem modelagens mais intuitivas e diretas do PTRD, fundamen-

tando seu tratamento pelas te?cnicas de otimizac?a?o mostradas no cap??tulo anterior. Em

contrapartida, elas tambe?m impossibilitam a representac?a?o de grande parte das restric?o?es

mais importantes para a viabilidade pra?tica das soluc?o?es, o que torna as abordagens exis-

tentes muito pouco aplica?veis para os cena?rios reais. Um exemplo e? quando se considera

um tanque u?nico de capacidade agregada. Apesar de simplificar as deciso?es relativas ao

controle de inventa?rio, inviabiliza a aplicac?a?o de restric?o?es como na?o-simultaneidade (C3),

essencial para um ca?lculo mais realista dos tempos de bombeamento. Note tambe?m que a

maioria dos trabalhos existentes considera cerca de 6 o?rga?os, 4 produtos e poucos tanques.

Por outro lado, a insta?ncia a ser tratada aqui agrega 14 o?rga?os com aproximadamente

300 tanques, ale?m de 28 dutos, 30 produtos, u.t. em minutos e diversas outras restric?o?es.

E? clara, portanto, a necessidade de modelos mais abrangentes para a obtenc?a?o de

soluc?o?es fact??veis para apresentar aos operadores da rede de dutos. Contudo, constata-se

que a resoluc?a?o do PTRD como um grande problema u?nico e integrado e? pouco promissora.

Ale?m do alto nu?mero de restric?o?es complicadoras que devem ser satisfeitas simultanea-

mente, muitos dos trabalhos baseados em resoluc?o?es integradas na?o obtiveram resultados

satisfato?rios para uma topologia complexa, mesmo apo?s diversas relaxac?o?es do modelo [6].

Desta forma, propo?e-se uma arquitetura de resoluc?a?o do problema composta por duas

fases, executadas sequ?encialmente: a fase de planejamento e a fase de escalonamento,

sendo a u?ltima o objeto de estudo desta dissertac?a?o. Tal arquitetura e? baseada nas

19



4.1. Fase de Planejamento 20

decomposic?o?es recorrentes do PTRD encontradas na literatura, as quais refletem os pro-

cedimentos manuais atualmente adotados. Cada fase e? descrita com detalhes nas sec?o?es

seguintes.

4.1 Fase de Planejamento

O problema de planejamento trata da movimentac?a?o geral na rede de dutos, onde sa?o pro-

gramados quais o?rga?os ira?o receber e enviar produtos para o atendimento das demandas

e escoamento das produc?o?es. Uma vez fixados os o?rga?os de destino e de origem, define-se

enta?o quais sera?o os dutos e as bases intermedia?rias pelos quais os produtos ira?o trafegar,

determinando tambe?m os volumes que sera?o transmitidos nas rotas escolhidas.

As trocas de produto geradas pela fase de planejamento sa?o representadas por uma

estrutura denominada plano de entrega, que representa uma transmissa?o de volume de um

o?rga?o origem a um o?rga?o destino, passando por uma determinada rota. Cada plano conte?m

um prazo, isto e?, o instante ma?ximo em que todo o volume ja? deve estar armazenado no

o?rga?o destino. Um plano de entrega e? formalmente definido pela tupla

pe = (ti, oi, td, od, p, v, r, pz),

onde ti ? T (oi) e? o tanque no o?rga?o de origem oi ? Org, td ? T (od) e? o tanque no

o?rga?o de destino od ? Org , v e? o volume do produto p ? P , r e? a rota de transmissa?o

do plano e pz e? o prazo do plano dentro do horizonte de programac?a?o. Considera-se

que um plano de entrega e? indivis??vel, ou seja, seu volume na?o pode ser fragmentado

em dois ou mais planos. Contudo, um plano pode parar no duto, isto e?, ser injetado

de forma intermitente, o que acarreta tambe?m a parada de toda a rota envolvida no

bombeamento. Operac?o?es de parada sa?o essenciais, por exemplo, para satisfazer o numero

ma?ximo de envios simulta?neos (restric?a?o C7) e os alinhamentos proibidos (restric?a?o C8).

Ale?m disso, tambe?m sa?o necessa?rias quando se necessita aguardar esvaziamento de tanques

por demanda para que tais tanques recebam quantidades proveniente do duto.

Assim, dadas as campanhas de produc?a?o e demanda em cada o?rga?o, o objetivo da

fase de planejamento e? gerar um conjunto de planos de entrega de tal forma que, se todos

forem satisfeitos, i.e., entregues no prazo, garante-se uma soluc?a?o que atenda todas as

demandas da rede e escoe os volumes em excesso das produc?o?es.

Diferentes me?todos heur??sticos ou exatos podem ser aplicados para a criac?a?o dos planos

de uma certa insta?ncia, os quais considerariam crite?rios espec??ficos para a determinac?a?o

das rotas, volumes e tanques. As te?cnicas heur??sticas aplicadas neste trabalho baseiam-se

em escolher os o?rga?os com as demandas mais criticas, isto e?, com maior volume e mais



4.2. Fase de Escalonamento 21

pro?ximas do in??cio do horizonte. Uma vez escolhidos, definem-se enta?o os o?rga?os que va?o

prover volume para satisfaze?-los, utilizando como crite?rio aqueles mais pro?ximos, isto e?,

conectados por um menor nu?mero de dutos. Por fim, sa?o selecionadas as rotas de maior

vaza?o e os volumes para fixar os demais para?metros dos planos.

Ale?m disso, visto que planos sa?o tambe?m uma representac?a?o intuitiva do planejamento

da rede, operadores dos dutos tambe?m sa?o capazes de inserir novos planos ou alterar

os existentes, muitas vezes para a representac?a?o de prefere?ncias de movimentac?a?o na?o

previstos pelo algoritmo.

A fase de planejamento encapsula as deciso?es de quais rotas e volumes utilizar para a

resoluc?a?o de uma insta?ncia do PTRD, mas na?o detalha as operac?o?es de bombeamento e

seus respectivos tempos. O desafio da fase de planejamento e?, portanto, criar conjuntos

de planos com uma grande probabilidade de serem via?veis, sem contudo aumentar a

complexidade do problema a ponto de torna?-lo na?o-resolv??vel.

Este projeto na?o focara? na fase de planejamento, considerando-o como um mo?dulo

a? parte ja? existente. O algoritmo utilizado para tal mo?dulo sera? o de [19], o qual foi

desenvolvido juntamente com esta pesquisa. Contudo, e? poss??vel que diversos outras

metodologias sejam utilizadas tanto para a fase de planejamento como a de escalonamento,

incentivando mais pesquisas sobre esse aspecto.

4.2 Fase de Escalonamento

Uma vez definidos os o?rga?os que ira?o enviar e receber produtos e as respectivas rotas por

onde os volumes ira?o trafegar, deve-se resolver o problema de escalonamento, ou seja,

determinar o nu?mero de operac?o?es de envios por plano de entrega e, principalmente, a

ordem em que os bombeamentos sera?o realizados. Nesta fase, consideram-se as restric?o?es

de incompatibilidade e de capacidade dos tanques, ale?m do ca?lculo de limitantes de tempo

para envio e chegada dos volumes nos o?rga?os. Por fim, e? necessa?rio atribuir os exatos

momentos em que ocorrera?o as operac?o?es de bombeamento, compondo a soluc?a?o final do

problema. Este u?ltimo deve garantir as restric?o?es referentes a?s vazo?es de bombeamento,

troca de turno, manutenc?a?o de dutos e demais restric?o?es ana?logas.

Dado um conjunto de planos de entrega P E = {pe1, pe2, ..., penpl}, o objetivo da fase

de escalonamento e? gerar movimentos m1, ..., mnm, conforme definidos na sec?a?o 2.3, de

forma que todos os planos sejam cobertos no prazo. Isto equivale a sequenciar e escalonar

os planos nas suas respectivas rotas e tanques, garantindo todos requisitos do problema

relacionadas no cap??tulo 2, como restric?a?o de interface, capacidade de tanques e na?o-

simultaneidade de operac?o?es. Note que nm ? npl, ja? que planos podem ser bombeados

por uma ou mais operac?o?es de envio.

Apesar do grande nu?mero de restric?o?es, a pre?-atribuic?a?o de rotas da fase de planeja-



4.2. Fase de Escalonamento 22

mento abre a possibilidade de modelagens mais intuitivas e compactas do problema de

escalonamento, ja? que as deciso?es ficam concentradas em como ordenar e temporizar os

planos nos seus respectivos dutos.

Como consequ?e?ncia da dificuldade em garantir heuristicamente soluc?o?es operacional-

mente via?veis, sera? utilizado um modelo exato como mo?dulo resolvedor desta fase. Este

modelo, por sua vez, sera? implementado usando Programac?a?o por Restric?o?es (PR) [23],

por duas principais razo?es. A primeira motivac?a?o decorre de restric?o?es na?o-lineares ineren-

tes ao sequ?enciamento e a?s vazo?es varia?veis, impossibilitando a modelagem do problema

usando Programac?a?o Linear Inteira. Ja? a segunda raza?o vem do fato de focarmos, prio-

ritariamente, a obtenc?a?o de soluc?o?es via?veis ao inve?s de o?timas. As te?cnicas em PR te?m

obtido grande sucesso neste quesito. Mais detalhes sobre Programac?a?o por Restric?a?o sa?o

apresentados no cap??tulo 5.



Cap??tulo 5

Conceitos Ba?sicos de Programac?a?o

por Restric?o?es

A Programac?a?o por Restric?o?es (PR) [2, 23] e? uma ferramenta de programac?a?o declarativa

reconhecida, principalmente, pela sua eficie?ncia na modelagem e resoluc?a?o de problemas

combinato?rios dif??ceis [16]. Apesar de ter origem nos anos 70, seu uso intensificou-se bas-

tante durante as de?cadas de 80 e 90, agregando hoje centenas de pesquisadores das a?reas

de Intelige?ncia Artificial, Linguagens de Programac?a?o, Computac?a?o Simbo?lica, Lo?gica

Computacional e Otimizac?a?o Combinato?ria.

Ha? atualmente diversos cena?rios pra?ticos em que o uso de PR possui grandes vantagens

em comparac?a?o a?s outras tecnologias mais tradicionais. Entre tais casos de sucesso [2],

e? poss??vel citar problemas de ana?lise e s??ntese de circuitos, agendamento de tarefas em

microprocessadores, sequenciamento de DNA em biologia molecular, alocac?a?o de fun-

ciona?rios em empresas ae?reas e muitos outros problemas relacionados a? agendamento em

Pesquisa Operacional, o que motiva o estudo de PR para sua aplicac?a?o no PTRD.

De forma geral, os conceitos ba?sicos de PR giram em torno de restric?o?es. Uma restric?a?o

e? definida como uma relac?a?o lo?gica entre um conjunto de varia?veis, cada qual contendo um

dom??nio de poss??veis valores. As restric?o?es, portanto, ira?o limitar os dom??nios de valores

que as varia?veis podem assumir simultaneamente. Por exemplo, dada duas varia?veis

x ? {1, ..., 5} e y ? {1, ..., 5}, a restric?a?o x + y ? 3 impede, por exemplo, que tanto x

como y tenham valores 3, 4 ou 5.

O poder de modelagem de PR recai nas propriedades interessantes que a definic?a?o

gene?rica de restric?a?o traz. Primeiramente, restric?o?es especificam informac?o?es parciais

e, portanto, na?o necessitam definir unicamente o valor de suas varia?veis; x + y ? 3,

por exemplo, representa um relacionamento que possui por si so? um conjunto infinito

de soluc?o?es para x e y. Ale?m disso, restric?o?es tambe?m sa?o na?o-direcionais. Do mesmo

exemplo anterior, temos que x ? 3 ? y ou y ? 3 ? x, isto e?, e? poss??vel inferir novas

23



5.1. Satisfac?a?o de Restric?o?es 24

restric?o?es sobre um literal a partir das outras varia?veis que se relacionam com ele.

A principal das propriedades, entretanto, esta? no fato de que restric?o?es sa?o declarativas,

ou seja, elas especificam o relacionamento entre varia?veis sem necessariamente impor

um procedimento computacional para garantir tal relacionamento. Consequ?entemente, e?

virtualmente poss??vel definir restric?o?es de qualquer natureza, lineares ou na?o. Um exemplo

t??pico consiste em definir varia?veis como tarefas e restric?o?es que impedem que um certo

nu?mero ma?ximo de tarefas seja executado ao mesmo tempo em uma ma?quina. Por fim,

restric?o?es tambe?m sa?o aditivas: na?o importa a ordem em que sejam postadas, contanto

que a conjunc?a?o delas seja satisfeita pela soluc?a?o final.

Uma vez definidas as restric?o?es, o estudo de PR, portanto, recai em sistemas compu-

tacionais resolvedores que sejam capazes de gerar rapidamente soluc?o?es que satisfac?am

todas as condic?o?es impostas no modelo. Para tanto, as estrate?gias de busca sa?o basea-

das essencialmente no conceito de propagac?a?o de restric?o?es. A ide?ia consiste em reduzir

os dom??nios das varia?veis a partir da consiste?ncia parcial das restric?o?es existentes, dimi-

nuindo, desta forma, o espac?o de busca a ser explorado. No caso anterior em que x+y ? 3

e x, y ? {1, ..., 5}, o sistema de propagac?a?o poderia eliminar 3, 4, 5 do dom??nio de ambas

as varia?veis ao inferir que, para tais valores, ter??amos x + y &gt; 3. Por outro lado, a con-

siste?ncia e? parcial porque ainda ha? uma combinac?a?o de valores no dom??nio resultante,

x, y ? {1, 2}, que podem violar a restric?a?o. O uso de te?cnicas de propagac?a?o e? inerente

a?s te?cnicas de busca aplicadas e sera? descrito nas subsec?o?es seguintes.

Podemos dividir a PR em dois ramos que, apesar de compartilharem a mesma termi-

nologia, diferem na origem e nas tecnologias de busca de soluc?o?es: satisfac?a?o de restric?o?es

e resoluc?a?o de restric?o?es. A primeira trata de problemas cujas varia?veis pertencem a

dom??nios finitos e, assim, as soluc?o?es derivam basicamente de te?cnicas combinato?rias. Ja?

o segundo ramo lida com dom??nios infinitos ou mais complexos, e cujas metodologias de

resoluc?a?o prove?m do ca?lculo e da matema?tica cont??nua.

Neste projeto, sera? focado o ramo de satisfac?a?o de restric?o?es, ja? que os dom??nios das

varia?veis do problema sa?o finitos e bem delineados no horizonte a ser tratado. Ale?m disso,

tal ramo abrange a maior parte das aplicac?o?es industriais e possui um grande conjunto

de me?todos e pol??ticas para agilizar o processo de busca.

5.1 Satisfac?a?o de Restric?o?es

Define-se um problema de PR deste tipo a partir dos seguintes elementos [2]:

1. Um conjunto de varia?veis de decisa?o X = {x1, x2, ..., xn}.

2. Um conjunto finito Di associado a cada xi, com os poss??veis valores que a varia?vel

pode assumir. Note que este dom??nio na?o e? necessariamente nume?rico; pode, por



5.1. Satisfac?a?o de Restric?o?es 25

exemplo, representar valores booleanos ou estruturas espec??ficas do problema.

3. Um conjunto de restric?o?es, isto e?, relac?o?es entre as varia?veis que impedem a ocorre?ncia

simulta?nea de certos valores.

Uma soluc?a?o va?lida e? definida como uma atribuic?a?o de valor a cada varia?vel xi que

respeite os dom??nios Di e na?o viole nenhuma restric?a?o do modelo. Portanto, uma for-

mulac?a?o PR pode conter diversas soluc?o?es va?lidas, todas igualmente aceita?veis dentro do

contexto de satisfac?a?o de restric?o?es. Contudo, caso cada soluc?a?o estivesse associada a

um valor real representando um determinado custo, encontrar a soluc?a?o de melhor custo

caracterizaria um problema de otimizac?a?o de restric?o?es.

O processo de uso da tecnologia de PR e? dividido em duas etapas. Em primeiro lugar,

deve-se modelar o problema adequadamente, definindo as varia?veis, seus dom??nios e as

restric?o?es que as relacionam. Uma vez criada a formulac?a?o PR, e? necessa?rio definir es-

trate?gias de busca para a atribuic?a?o das varia?veis sem que nenhuma restric?a?o seja violada.

Cada uma dessas etapas em PR sera? descrita com mais detalhes a seguir.

5.1.1 Modelagem em PR

As te?cnicas de PR induzem naturalmente a uma modelagem do problema mais intuitiva

e pro?xima da realidade, principalmente em decorre?ncia da maior expressividade das res-

tric?o?es. Devido a? sua origem estar intrinsecamente relacionada com Programac?a?o Lo?gica,

formulac?o?es podem ser colocadas de forma declarativa, tal como em Prolog [8], ou

tambe?m de forma ana?loga a?s formulac?o?es em Programac?a?o Linear.

Para exemplificar a modelagem em PR, sera? mostrado um problema cla?ssico de crip-

toaritme?tica, extra??do de [23] e apresentado abaixo.

S E N D

+ M O R E

M O N E Y

O objetivo da criptoaritme?tica consiste em atribuir um nu?mero i ? {0, 9} a cada

uma das letras para que a operac?a?o de soma seja consistente. Uma das poss??veis formas

de modelar o problema seria atribuir diretamente uma varia?vel inteira para cada letra,

todas com dom??nio no intervalo de [0, 9]. Contudo, ale?m da expressa?o aritme?tica para

representar a consiste?ncia da soma, tambe?m e? necessa?rio impor que as varia?veis (letras)

assumam valores distintos. De forma declarativa no estilo de Prolog, a formulac?a?o seria

facilmente escrita como:



5.2. Estrate?gias de Busca 26

crypto(V ars) : ?

V ars = [S, E, N, D, M, O, R, Y],

V ars :: [0, 9],

M 6= 0,

S 6= 0,

1000.S + 100.E + 10.N + D

+ 1000.M + 100.O + 10.R + E

= 10000.M + 1000.O + 100.N + 10.E + Y,

all different(V ars).

Inicialmente, as varia?veis do problema (V ars) e seus dom??nios sa?o definidos. Em se-

guida, condiciona-se que M e S sejam na?o-nulos, pois sa?o os primeiros d??gitos dos nu?meros,

e se escreve a expressa?o aritme?tica da soma. Por fim, impo?e-se a condic?a?o all different,

pertencente a um conjunto de restric?o?es denominadas restric?o?es globais, para garantir que

as varia?veis tenham valores distintos entre si.

As restric?o?es globais compo?em um dos pilares de pesquisa em PR. Uma restric?a?o

global caracteriza-se, intuitivamente, como um conjunto de restric?o?es mais elementares

cuja estrutura global pode ser facilmente explorada pelos resolvedores [16]. No exemplo

acima, a restric?a?o global e? equivalente a escrever, para cada par de varia?veis vi, vj ? V ars,

a desigualdade vi 6= vj .

Ale?m de permitirem uma modelagem mais compacta do problema, tambe?m e? poss??vel

implementar propagadores espec??ficos para tais restric?o?es, mais eficientes em restringir

os dom??nios das varia?veis. No caso de all different, constro?i-se usualmente um grafo

bipartido para cada restric?a?o global desse tipo, aplicando-se algoritmos espec??ficos para

explorar tal estrutura [7]. Cata?logos de restric?o?es globais e seus propagadores podem ser

encontrados em [7] e [16].

A flexibilidade de modelagem de PR, principalmente pelo uso das restric?o?es globais,

sera? essencial para a modelagem mais completa do PTRD e para a obtenc?a?o de soluc?o?es

va?lidas, como sera? descrito com detalhes nos cap??tulos 6 e 7.

5.2 Estrate?gias de Busca

A eficie?ncia de um resolvedor PR esta? intrinsicamente relacionada ao modo como a busca

de uma soluc?a?o va?lida e? realizada. A forma mais trivial baseia-se em, para cada varia?vel,

escolher e atribuir um valor arbitra?rio de seu dom??nio. Assim que todas as varia?veis



5.2. Estrate?gias de Busca 27

estiverem atribu??das, deve-se enta?o checar se alguma restric?a?o foi violada. Tal me?todo e?

denominada gerar-e-testar e, claramente, possui o menor desempenho.

Outra forma de busca sistema?tica, conhecida como backtracking, consiste em estender

incrementalmente soluc?o?es va?lidas parciais, escolhendo-se repetidamente valores para as

varia?veis ainda livres. Assim que todas as varia?veis pertinentes a uma certa restric?a?o es-

tiverem atribu??das, verifica-se enta?o se ela foi violada. Caso positivo, o algoritmo retorna

para a u?ltima varia?vel que ainda possua valores alternativos em seu dom??nio, seleciona

um novo valor e o procedimento e? repetido. Apesar de ser mais eficiente que o procedi-

mento de gerar-e-estar, o algoritmo de backtracking ba?sico ainda e? bastante ineficiente,

principalmente pelo fato de que a violac?a?o de restric?o?es e? detectada muito tardiamente.

Desta forma, mecanismos de propagac?a?o de restric?o?es, tambe?m chamados de te?cnicas

de consiste?ncia local, sa?o geralmente acoplados ao backtracking para contornar tal pro-

blema. Estes mecanismos buscam remover valores inconsistentes dos dom??nios a cada

atribuic?a?o nova de valor, reduzindo o tamanho da a?rvore de backtracking e, assim, agi-

lizando o processo de busca. Usualmente, os propagadores baseiam-se em um grafo de

restric?o?es, onde ve?rtices representam varia?veis e, as arestas, restric?o?es do problema. A

partir de tal grafo, sa?o analisadas as inconsiste?ncias dos dom??nios usando algoritmos

como no?-consiste?ncia, arco-consiste?ncia e caminho-consiste?ncia [23]. Ale?m disso, res-

tric?o?es globais tambe?m implementam algoritmos de propagac?a?o mais espec??ficos para os

subproblemas que representam, tal como mostrado anteriormente com a restric?a?o global

all different.

Para exemplificar a estrate?gia de backtracking, suponha, por exemplo, a formulac?a?o

de criptoaritme?tica mostrada anteriormente. Antes do in??cio da busca, o algoritmo de

propagac?a?o ja? e? capaz de eliminar valores dos dom??nios de todas as varia?veis, como mos-

trado em [41]. Seja v1 ? {0, 1} o vem-um da coluna correspondente a?s varia?veis E, O, N e

v2 ? {0, 1} o vai-um da coluna S, M, O. Temos, pela restric?a?o aritme?tica, que:

v1 + S + M = O + 10.v2.

Portanto, o primeiro d??gito da palavra MONEY, M, e? claramente v2. Como v2 ? 1 e

M 6= 0, enta?o o dom??nio de M pode ser reduzido para [1]. Por all different, o valor 1 e?

removido de todos os demais dom??nios. A equac?a?o anterior torna-se, desta forma,

v1 + S = O + 9.

Isto implica que S ? 8 e, assim, o dom??nio de S e? reduzido para [8, 9]. Como v1 + S ?

10, O ? 1 mas, como o valor 1 foi removido pela restric?a?o de all different, o dom??nio de



5.3. Otimizac?a?o em PR 28

O torna-se [0] e, consequ?entemente, v2 = 0 e o dom??nio de S reduz-se para [9]. As demais

varia?veis, D, E, N, R, Y, te?m como dom??nio resultante da propagac?a?o inicial o intervalo [2, 8].

Assim, o mecanismo de backtracking se inicia com os dom??nios das varia?veis ja? reduzi-

dos. A pro?xima etapa consiste em escolher uma varia?vel com dom??nio na?o-unita?rio e um

valor de atribuic?a?o. Apo?s escolhidos, a propagac?a?o de restric?o?es e? realizada novamente e,

se alguma inconsiste?ncia for encontrada, escolhe-se um novo valor ate? que uma atribuic?a?o

va?lida seja encontrada ou se prove que o problema na?o possui soluc?a?o. Por exemplo, e?

poss??vel escolher a varia?vel N e o valor 6. Em seguida, a propagac?a?o removeria o valor 6 de

todos os dom??nios, e o processo assim continuaria. Uma soluc?a?o va?lida para o problema

seria S = 9, E = 5, N = 6, D = 7, M = 1, O = 0, R = 8 e Y = 2.

As pol??ticas de busca por atribuic?o?es va?lidas sa?o essencialmente heur??sticas e variam

bastante quanto a? ordem em que as varia?veis ou dom??nios sa?o testados [23]. Todo o espac?o

de busca pode ser coberto ou na?o, e tambe?m podem incluir mecanismos de propagac?a?o

de restric?o?es auxiliares.

Como exemplos, podemos citar as pol??ticas de first-fail, que atribui inicialmente para

as varia?veis com os menores dom??nios; most constrained, que seleciona as varia?veis relacio-

nadas em mais restric?o?es; e split-domain, que explora os dom??nios tal como um algoritmo

de divisa?o-e-conquista. O me?todo de busca ideal deve ser escolhido de acordo com as

caracter??sticas do problema.

5.3 Otimizac?a?o em PR

A qualidade de uma soluc?a?o em PR e? quantificada por meio de uma func?a?o objetivo, e as

te?cnicas devem buscar maximiza?-la ou minimiza?-la, conforme o caso. Assim, um problema

de Otimizac?a?o em PR, ale?m do conjunto de restric?o?es a serem satisfeitas, tambe?m possui

uma func?a?o objetivo que mapeia cada atribuic?a?o va?lida para um valor nume?rico, sendo

que o objetivo e? minimizar (ou maximizar) este valor.

A principal te?cnica para otimizac?a?o em PR e? o Branch and Bound [2], que utiliza

uma func?a?o de avaliac?a?o heur??stica subestimadora (em problemas de minimizac?a?o) para

classificar atribuic?o?es parciais de soluc?o?es. O algoritmo se comporta tal como uma busca

em largura: dentro de um conjunto de atribuic?o?es para uma varia?vel, as soluc?o?es parciais

com valores (heur??sticos) acima de um determinado limite (ou bound ) sa?o descartadas.

Este limite e? inicialmente colocado como muito alto, e e? substitu??do quando uma atribuic?a?o

completa va?lida e? encontrada.

No modelo do PTRD aqui estudado, o foco sera? dado apenas a? satisfac?a?o de restric?o?es,

tanto devido a? dificuldade do problema, como pela falta de dados de entrada referentes

aos custos de bombeamento e de criac?a?o de interfaces entre produtos. A otimizac?a?o do

problema e? relacionada, desta forma, como sugesta?o para trabalho futuro no cap??tulo 9.



Cap??tulo 6

Modelo Inicial para o Problema de

Escalonamento

Pro?logo

O artigo a seguir concentra-se na primeira versa?o da formulac?a?o aplicada a? fase de escalo-

namento do PTRD. Tambe?m e? realizada uma descric?a?o sucinta das heur??sticas utilizadas

para a gerac?a?o dos planos.

Inicialmente, descreve-se o problema de forma geral e as restric?o?es a serem tratadas.

As heur??sticas para a fase de planejamento sa?o enta?o citadas, seguidas da formulac?a?o

da fase de escalonamento em PR. Por fim, alguns resultados para as insta?ncias reais

fornecidas pela Petrobras sa?o mostrados. Para auxilar a compreensa?o da formulac?a?o

matema?tica do problema, a tabela 6 apresenta uma s??ntese da notac?a?o utilizada para as

varia?veis e constantes do modelo.

Este artigo foi aceito na confere?ncia internacional IEEE 11th International Confe-

rence on Computational Science and Engineering (CSE08, http://www.icmc.usp.br/
?cse08/), que ocorreu em Sa?o Paulo, Brasil, nos dias 16 a 18 de julho de 2008. Neste

ano, cerca de 30% de mais de 190 trabalhos foram aceitos.

O artigo foi publicado nos anais da confere?ncia, Proceedings of the 11th IEEE Inter-

national Conference on Computational Science and Engineering - CSE’08 [28], e eletro-

nicamente, pela editora do IEEE. No decorrer deste cap??tulo, segue sua transcric?a?o na

??ntegra, em ingle?s.

29



30

Notac?a?o Significado

Del? Prefixo para varia?veis de planos de entrega (delivery)

Dem? Prefixo para varia?veis de planos de demanda
Det? Prefixo para planos determinados
P d? Prefixo para varia?veis de produto
P r? Prefixo para varia?veis de planos de produc?a?o

U nd? Prefixo para planos na?o-determinados

?Acc Sufixo para varia?veis de acu?mulo de volume

?DueDate Sufixo para prazo de um plano de entrega
?Dir Sufixo para varia?veis de direc?a?o de fluxo nos dutos
?F R Sufixo para varia?veis de vaza?o (flow rate)
?R Sufixo para o conjunto de dutos de uma rota

?P os Sufixo para varia?vel de posic?a?o de um plano
?P osOr Sufixo para varia?vel de posic?a?o de um plano em seu tanque origem
?P osDest Sufixo para varia?vel de posic?a?o de um plano em seu tanque destino
?T qOr Sufixo para tanque de origem de um plano

?T qDest Sufixo para tanque de destino de um plano
?Ti Sufixo para varia?veis de tempo inicial
?Tf Sufixo para varia?veis de tempo final
?V Sufixo para os volumes pre?-definido de planos
?V ol Sufixo para varia?veis de volume

Adjp Pares de produtos/operac?o?es compat??veis no duto p

DelRPi,j Posic?a?o do plano i no duto j

Demord Conjunto de planos de demanda

Delord Conjunto de planos de entrega

Delordp Conjunto de planos de entrega

M axF Ri,j Vaza?o ma?xima de um plano i no duto j

P rord Conjunto de planos de produc?a?o

Tabela 6.1: Notac?a?o utilizada no modelo PR.



1. Introduction 31

Heuristics and Constraint Programming
Hybridizations for a Real Pipeline Planning

and Scheduling Problem

Arnaldo V. Moura, Cid C. de Souza, Andre A. Cire, Tony M.T. Lopes
Institute of Computing - University of Campinas

13081-970, Campinas, SP
{arnaldo, cid}@ic.unicamp.br, {andre.cire, tony.lopes}@gmail.com

Abstract

Pipeline network systems are considered the major option for transporting

petroleum derivatives from refineries to local markets, in view of their many

economic and environmental advantages. This article deals with a large real-

world pipeline system planning and scheduling problem, in which different

products should be transported in a pipeline network in order to supply

market demands, while also satisfying hard operational constraints related

to product sequencing, flow rates and tank capacities. We propose a novel hy-

brid approach based on two iterative phases comprised by a heuristic strategy

and a Constraint Programming model. The resulting algorithm was tested

with real-world instances yielding feasible solutions for all of them.

Keywords: constraint satisfaction, heuristic methods, scheduling, combinatorial algorithms,

decision support.

1 Introduction

Planning and scheduling problems have been receiving increasing attention in the last few

years, mainly due to the need to deal efficiently with large, complex real-world settings in

order for companies to persevere in highly competitive markets. A notable example stems

from the oil industry, in which ethanol and several petroleum derivatives, like gasoline,

diesel, and naphtha must be transported from refineries to depots where consumer markets

are located. In this context, pipeline networks are considered the principal transportation

mode in comparison to rail, road, and vessels, since they are environmentally safer and

much more economical. For instance, the Brazilian system managed by PETROBRAS

has more than 11,300 km of pipelines and supplies 1,600 barrels per day [15].



1. Introduction 32

A multiproduct pipeline network is composed of depots linked by bidirectional ducts.

In order to operate the network, one must determine how product volumes should be

transferred among depots, as well as their exact pumping time intervals, and how in-

ventories should be managed. Local markets demands and production schedules, both

represented by daily volumes at each depot, must be satisfied at all times. Furthermore,

several conditions regarding pumping flow rates, product contamination and tank alloca-

tion must be taken into account.

Even though research in this field can lead to a significant operational cost reduc-

tion, the transportation planning and scheduling procedures are, typically, still executed

manually in most oil companies. Moreover, studies from the literature usually focus on

more restrictive and smaller pipeline topologies, each with a reduced set of operational

constraints that, despite making the problem more tractable, are far from representing

real-world scenarios. This is a consequence of the large number of hard sequencing and

timing constraints involved, aggravated when large and more generic topologies are con-

sidered. In face of these difficulties, manual planning is usually deficient, and down-level

operators must frequently apply corrections in pumping plans in order to make the system

work appropriately.

We propose a new algorithm for generating feasible solutions for a very-large pipeline

planning and scheduling problem, considering most of the hardest real-world constraints.

Our approach has two phases: the planning phase is implemented as a constructive heuris-

tic that generates orders, representing necessary transfers between two depots; and the

scheduling phase, a Constraint Programming (CP) model, is used to assign time inter-

vals to orders. The resulting algorithm, specially tailored to deal with large instances,

generates more reliable pumping plans and can also be used to validate production and

demand scenarios.

This project was a joint work with PETROBRAS, the Brazilian oil company, which

provided both problem specifications and instances, as well as analyzed the proposed

solutions. The prototype developed is being considered for use as an auxiliary tool to aid

planners at PETROBRAS. This strategy proved to be very flexible, permitting the easier

addition or removal of operational requirements, and facilitating the test of new search

heuristics.

The article is organized as follows. Section 2 presents a literature review. Section

3 describes the problem and Section 4 discusses the solver. Finally, section 5 shows the

computational results and section 6 presents some conclusions and points to further work.



2. Literature Review 33

2 Literature Review

In the literature, one of the most studied settings involves transporting petroleum deriva-

tives from a single origin to multiple destinations. One pipeline connects an oil refinery to

depots distributed in series along its segments. For this case, [9] developed a knowledge-

based heuristic search for an Indian pipeline, composed of three depots, four products

and a 1-month time horizon. Considering a more constrained problem, [16] presented

two large-size discrete MILP formulations, strongly based on disjunctive programming,

for scheduling a real-world Brazilian instance with five depots and four products. Later,

[17] improved this model by adding integer cuts and redundant constraints.

In addition to the discrete formulations, [3] developed a continuous time and contin-

uous volume model representation based on a MILP approach studied by [16]. Recently,

another continuous-time model with non-linear constraints (MINLP) for this same con-

figuration was proposed by [18], who covered pumping flow rate variation for a 130-hours

time horizon.

Another studied topology was composed of a refinery, a pipeline, and a depot with

a tank farm [10]. For this case, a decomposition strategy similar to the one proposed

by [13] was developed, involving a MILP submodel, an auxiliary routine, and a main

discrete MILP model. Improvements appeared in [11], now using CP techniques. A

recent work [19, 21] presented a single continuous-time MILP for a case study proposed

by a Portuguese oil distribution company. Although simpler in the operational details,

it added inventory management constraints for a 1-month time horizon. An expansion

was published in [20], with variable flow rates, intermittent pipeline operation, variable

settling periods, and rescheduling.

There are also several approaches dealing with multiple origins and destinations within

a complex pipeline network, albeit neglecting most of the hard constraints in order to

make the problem tractable by the methods used. In [4], an heuristic method, known

as A-Teams, was applied to a relaxed real-world pipeline system, but was unable to find

any feasible solutions. A much more simplified problem version was solved by [5], which

implemented a Genetic Algorithm for a directed tree network topology with 8 depots and

only a few operational constraints. A similar work using evolutionary algorithms and

MILP models is presented in [6].

A different approach is discussed in [14], which addressed the pipeline scheduling

as a general-purpose artificial intelligence planner problem, albeit not effective for large

instances. A more recent application of metaheuristics to more general topologies, but

with relaxed operational constraints, can be found in [1, 7].



3. Problem Description 34

3 Problem Description

In this section, we give a cursive description of the problem, as may be conveyed by field

engineers. In the sequel, a more formal discussion will be presented. As an illustration,

Figure 1 shows a sample network with 4 depots, B0, B1, B2, and B3, interconnected by 5

pipelines. Between depots B2 and B3, there are 2 pipelines, which is a common scenario in

practice. Each depot also has its own tank farm. For instance, depot B1 has storage tanks

for products P0, P1 and P2. Each tank contains an initial volume, shown in standardized

units. Ducts are shown completely filled with product volumes, also given in standardized

units. In this network, products P0 and P2 cannot make contact since they are not

compatible.

3.1 Problem Constraints

1. Pipelines operate in an intermittent fashion and must always be completely filled.

In order to pump out a certain volume from one side, the same volume must be

pumped in from the other extremity. No interface losses are considered. Volumes

pumped-out can either enter a tank or move directly into another pipeline. An initial

list of products inside each pipeline, with their respective volumes and destinations

is known.

2. At each depot there are tanks to store certain products, but it is not necessary to

have tanks for all products. A tank can store only one pre-defined product and its

capacity must always be respected. Additionally, a tank is not allowed to pump into

more than one pipeline at a time, and all operations in a tank must be disjunctive

in time. The initial product level in each tank is known.

3. There is a maximum flow rate per pipeline, per pumping direction, and for each

product. Flows must respect the least maximum rate for all products in a pipeline.

4. Some pairs of products can not make contact, else a quality loss will ensue. Products

that can not make contact are called incompatible. It is possible, nevertheless, to

use a third product, called a plug, to separate two incompatible products. Of course,

the plug itself must be compatible with both products it separates.

5. A route is a sequence of depots and non-repeating pipelines that is traversed by

a certain product volume. A volume in transit can only leave its route at the

final destination tank. Although new routes can be created, choices dictated by

human experience are to be preferred, since they might account for other implicit

operational restrictions. A list of known routes is given.



4. The Solver Framework 35

6. Productions and demands are defined per depot and per product, each with its

own time interval. However, since future estimates for such data are speculative, a

production (demand) is redefined in a daily basis by linearly distributing its volume

during the days that comprise its active time interval. The algorithm is at liberty to

inject a production (extract a demand) from the system at any instant and at any

rate during a day. Furthermore, a certain given percentage of such daily production

(demand) can be postponed to the next day, as long as it does not violate its original

time interval of activation.

3.2 Solution and Goals

A solution is defined as a set of continuos and nonpreemptive pumping operations. Each

such operation contains information about the product, volume, route, origin and des-

tination tanks, as well as start and end pumping times. Once a pumping operation is

concluded, its corresponding volume must follow the designated route until it reaches the

destination tank. However, a volume in transit may stop at any instant and at any point

along its route, as long as it is not interleaved with other products. The main goal is to

find a solution that satisfies both all operational as well as all production and demand

constraints.

Figure 1: A pipeline network example.

4 The Solver Framework

When facing a complex and real sequencing problem, it is very common to decompose

it [4, 10, 11]. One frequently used decomposition scheme, also applied here, divides the

problem into two parts:

1. Planning and Routing: This sub-problem aims at satisfying all productions and

demands by creating a set of orders that specify routes and volumes.



4. The Solver Framework 36

2. Sequencing and Scheduling: Upon receiving a set of orders, this sub-problem defines

the sequence and exact times for pumping operations at depots, including those

special operations used to store production and extract demands.

The accumulated experience at PETROBRAS showed that the first part is the easiest

to handle manually. We followed some of their guidelines and human expertise when

developing heuristic strategies for our planning phase.

The second part, the so called scheduling phase, is the hardest. At PETROBRAS it is

solved manually by trial-and-error using a proprietary simulation software that can check

simple constraints. In order to properly solve this part, we used CP model.

Although the planning phase is designed to produce a good set of orders, on occasion

it might create infeasible sets. Or the scheduling phase may not be able to find a feasible

solution in a reasonable time. In any case, the planning phase must be activated again,

since it uses randomization and can produce a new and different set of orders. The

interaction between the two phases is shown in figure 2.

Scheduling Phase

Planning Phase

Instance

Set of Orders

Solution

No Solution

Figure 2: Interaction between phases in the solver.

4.1 The Planning Phase

The planning phase defines a set of orders necessary to satisfy all products demands within

the time horizon. To this end, we developed a heuristic that incrementally builds a set of

orders in a randomized and constructive way.

For any single order, its product, volume, origin depot, destination depot, origin tank,

destination tank, route, and due date must be determined. These characteristics are

determined sequentially, as described below:

1. Product, Destination Depot, and Due Date: For every triple of product p, destina-

tion depot bd and day t, we define Vp,bd,d = H ? (lastMinute(t) ? T Np,bd), where

H is the last minute in the horizon, and T Np,bd is the minute when enough of the



4. The Solver Framework 37

appropriate product is available, in all depots, to fully satisfy the demand at day t.

The idea is to satisfy any pressing demands first. We randomly select some triple

within the best ?1 percent triples for the most critical Vp,bd,t values.

2. Origin Depot and Route: For every pair of origin depot bo and route r starting at

bo and ending at a selected depot bd, we define Vbo,r = (lastMinute(t) ? (T Dp,bo +

T minr,p))/(1 + NRr), where T Dp,bo is the minute when there is any quantity of the

product p available at bo, and T minr,p gives the minimum amount of minutes nec-

essary for p to travel route r. Hence, the route with the greatest difference between

earliest arrival and due times, for any volume occurring in it, will be selected. Since

we endured to avoid flow direction reversals, the term NRr captures the number of

such occurences if route r is used. A pair among the best ?2 percent Vbo,r values is

randomly selected.

3. Origin and Destination Tanks: Let Vtq = Captq/(T Aloctq + 1), where tq is a tank,

Captq is its capacity and T Aloctq is the volume so far assigned to it. A big Vtq
indicates a large tank with few allocations. The origin tank to and the destination

tank td are selected within the ?3 percent tanks with larger Vtq values inside the

origin depot and the destination depot, respectively.

4. Volume: The volume of an order is determined by its origin and destination tanks.

Assume that in some tank t all orders allocated before this new one have already been

fulfilled, leaving a quantity T Qdet in the tank. This way V olume = min{Capto ?

T Qdeto, Captd ? T Qdetd}. By executing orders in this sequence, no undertankage

or overtankage will occur.

Three types of orders are created. There are production and demand orders that

select tanks to accommodate productions in the origin depot and to satisfy demands

in the destination depot, respectively. There are also delivery orders, which represent

volume transfers throughout the chosen route. Delivery orders, in turn, are of two types:

determined, which are orders generated by the heuristic, and undetermined orders. The

later are created randomly and, although they are assigned a route, they do not carry

information about the origin or destination tanks. Undetermined orders represent volumes

that are not transfered to satisfy demands or store production, but are only used to push

other volumes along the pipeline. They are also used to free space in tanks in order to

accommodate future productions.

The planning phase ends when there is no more pairs of product and destination to

be chosen, meaning that every demand has been satisfied. In real cases, at this moment

there could be some production that was left unused. This production can usually be

stored in its origin.



4. The Solver Framework 38

4.2 The Scheduling Phase

Given that the planning phase already selects routes and tanks, the scheduling phase must

gather additional information to control the size of the model, incorporating special struc-

tures geared to effectively explore the search space. Notably, knowing which pipelines a

delivery order will traverse provides lower bounds on the corresponding pumping volumes

and flow rates. This eliminates incompatible order sequences in advance and makes it

possible to infer special conditions to constrain time variables.

However, taking advantage of these structures using discrete MILP models, as stud-

ied in [10, 17], turned out to be impracticable for two main reasons. Firstly, most of

the problem restrictions are computationally costly, or impossible, to model as linear

constraints, specially those related with variable flow rates and direct flow connections

between pipelines. Secondly, the MILP models would have to deal with multiple pipelines

and depots, and investigation showed that the number of integer variables and constraints

would increase at an unacceptable rate.

On the other hand, heuristics and meta-heuristics strategies per se, as described in

[5, 6], are greatly impaired when too many operational constraints are considered. This

is particularly disturbing when slight modifications in a solution give rise to collateral

effects on the problem structure as a whole. For example, products can flow directly from

one pipeline to another connecting pipeline. Thus, changing a single pumping start time

may delay the arrival of a number of other products in many connected pipelines, which

can turn the solution into an infeasible one. Repairing procedures could be an elegant

choice to ameliorate this situation, but their bias can make the model loose robustness.

In face of all these issues, we propose a new CP model that explicitly takes advantage

of the problem’s diverse structures, while also providing the flexibility to consider new

operational requirements or implement new searching heuristics. CP fundamentals can

be found in [2, 12]. The CP programming paradigm is distinguished by a powerful model-

ing language, reinforced by global constraints, like alldiff and cumulative, that exploit

specific problems patterns and provide specialized constraint propagation mechanisms [8].

CP is thus well-suited for the scheduling phase. In particular, it can easily model mul-

tiple representations in a compact way, which are then interconnected by element global

constraints, thus taking advantage of each problem structure.

Our model comprises two different CP perspectives, or views, containing both specific

variables and constraints to deal with the corresponding structures they focus on, as well

as additional redundancy used to enforce constraint propagation. Firstly, the orders view

will handle order restrictions. In the sequel, their variables for production, demand and

delivery, respectively, will be identified by the prefixes Pr*, Dem* and Del*. Secondly,

the resources view will represent pipeline and tank restrictions, and related variables

will be identified by the prefix Op*. In addition, the following notation is used across



4. The Solver Framework 39

the mathematical models detailed below. For common variables suffixes we use ?V ol for

volume; ?Ti and ?Tf for start and ending times; ?F R for flow rate; ?Dir for flow direction

in pipelines; ?V for orders’ pre-defined volumes; ?R for pipelines that occur in a route;

and ?T qOr and ?T qDest for orders’ pre-defined origin and destination tanks, respectively.

Other prefixes include P d?, for product; and Det? and Und?, for marking delivery orders

as determined or undetermined. Finally, P ip denotes the pipeline set and T nk denotes

the tank set. Note that ?Ti and ?Tf are continuous variables, while all others are integer

variables. Domains are easily inferred.

The Order View

Constraints (1) to (4) below guarantee the satisfaction of production and demand orders.

In this case, P rord and Demord stand for the set of orders and [?T min, ?T max] denotes

their time interval.

P rT mini ? P rT ii, P rT fi ? P rT
max
i , (1)

P rV oli = P rVi, ?i ? P r
ord. (2)

DemT mini ? DemT ii, DemT fi ? DemT
max
i , (3)

DemV oli = (?1).DemVi, ?i ? Dem
ord. (4)

Volumes can be pumped in a staccato manner into the pipeline network. The waiting

time between two consecutive pump actions determines a pipeline stoppage time. The

parameter ns limits the number of pump actions a delivery order can be broken into.

Although this limits the maximum number of pipeline stoppages, it helps to avoid an

excessive number of small pump actions for each order.

We consider now two sets of variables: the entering (overscript (e)) and leaving (over-

script (l)) sets. They correspond, respectively, to pumping operations that inject or ex-

tract derivatives from a duct along a route. The constraints for the internal relationship

in each set of variables is represented by constraints (5) to (9) below. In these equations,

MaxF Ri,j is the maximum flow rate for order i in pipe j, and the superscript
(?) indicates

that the constraint is defined for both sets of variables.

DelT i
(?)
i,j,k ? DelT f

(?)
i,j,k, (5)

DelV ol
(?)
i,j,k = DelF R

(?)
i,j,k(DelT f

(?)
i,j,k ? DelT i

(?)
i,j,k), (6)

DelF R
(?)
i,j,k ? MaxF Ri,j , (7)

DelT f
(l)
i,j,k ? DelDueDatei, ?i ? Del

ord, (8)



4. The Solver Framework 40

?j ? {1, ..., ns}, ?k ? DelRi.
ns
?

j=1

DelV ol
(e)
i,j,k =

ns
?

j=1

DelV ol
(l)
i,j,k = DetVi, (9)

?i ? Detord, ?k ? DelRi.

The channeling between these two sets of variables along route segments is posed by

constraints (10) to (12):

DelT i
(l)
i,j,k = DelT i

(e)
i,j,k+1, (10)

DelT f
(l)
i,j,k = DelT f

(e)
i,j,k+1, (11)

DelV ol
(l)
i,j,k = DelV ol

(e)
i,j,k+1, (12)

?i ? Delord, ?j ? {1, ..., ns}, ?(k + 1) ? DelRi.

The Resource View: Pipelines

Pipelines are represented as two time-ordered operations sequences: the send sequence

(overscript (s)) relates to operations entering a pipeline, and the receive sequence (over-

script (r)) relates to operations leaving a pipeline. An operation is considered to be a

continuous pumping action and, thus, if a sending operation has finished before a receiv-

ing operation, the next sending operation must start immediately after the previous one,

in order to push the volume along the route. The exact number of operations in each

pipeline p is given by np = 2.ns|Del
ord
p |.

Constraints which regulate time, flow direction and product incompatibilities are posed

by constraint (13) to (16). Here, (?) means that they are defined for both types of se-

quences, and Adjp is the set of operation pairs which may make contact inside a duct.

OpT f
(?)
i,p ? OpT i

(?)
i+1,p, i ? np ? 1, ?p ? P ip. (13)

disjunctive([OpT i
(?)
i,p , OpT f

(?)
i,p ]

np
i=1), ?p ? P ip. (14)

(OpDir
(?)
i,p , OpDir

(?)
i+1,p) ? V alidDirP airs (15)

(OpP d
(?)
i,p , OpP d

(?)
j,p) /? {(pdm, pdn), (pdn, pdm)}, (16)

?p ? P ip, ?(i, j) ? Adjp, ?(m, n) ? IncompatP d

The necessary channeling constraints between the in and out sequences is detailed

next. First, we define the accumulate variables (?Acc), which represent the sum of the

volumes sent and received until the end of each operation. The accumulate relations are



4. The Solver Framework 41

defined by constraints (17) to (18) below. The channeling and flow control constraints

are expressed by equations (20) to (21).

OpAcc
(?)
0,p = OpV ol

(?)
0,p, (17)

OpAcc
(?)
i,p = OpAcc

(?)
i?1,p + OpAcc

(?)
i,p , (18)

?i ? {2, ..., np}, ?p ? P ip. (19)

OpAcc
(s)
i,p ? (OpAcc

(r)
j,p ? OpV ol

(r)
j,p ) &gt; V olp (20)

? (OpAcc
(s)
i,p ? OpV ol

(s)
j,p ) ? OpAcc

(r)
j,p &amp;lt;V olp

=? OpT i
(s)
i,p = OpT i

(r)
j,p +

+max(0, (OpAcc
(s)
i,p ? OpV ol

(s)
j,p ) ?

?(OpAcc
(r)
j,p ? OpV ol

(r)
j,p ) ? V olp)/OpF R

(r)
j,p

? OpT i
(r)
j,p = OpT i

(s)
i,p +

+max(0, V olp ? ((OpAcc
(s)
i,p ? OpV ol

(s)
j,p ) ?

?(OpAcc
(r)
j,p ? OpV ol

(r)
j,p ))/OpF R

(s)
i,p

? OpF R
(s)
i,p = OpF R

(r)
j,p

?i, j ? {1, ..., np}, ?p ? P ip.

(OpAcc
(s)
i,p ? OpV ol

(s)
j,p ) ? OpAcc

(r)
j,p &amp;lt;V olp (21)

=? OpF R
(s)
i,p ? OpF RMax

(r)
j,p

?i, j ? {1, ..., np}, ?p ? P ip.

The Resource View: Tanks

For each tank t, only one operation sequence is needed, and its size is given by nt =

|Delordt |. For undetermined delivery orders, an operation is created for each tank to which

it might be assigned and only one such operation does not have a null volume. Tank

constraints are represented by equations (22) to (26):

OpT fi,t ? OpT ii+1,t, (22)

OpAcc0,t = OpV ol0,t, (23)

OpAcci+1,t = OpAcci,t + OpV oli+1,t, (24)

?i ? {1, ..., nt ? 1},

0 ? OpAcci,t ? Capacityt, ?i ? {1, ..., nt}, (25)



4. The Solver Framework 42

disjunctive([OpT ii,t, OpT fi,t]
nt
i=1), ?t ? T nk. (26)

Channeling Constraints

In order to relate pipeline and order variables, we use element global constraints over

positional variables. Each of these variables indicates a position in an order sequence

associated with both a tank (suffixes ?P osOr for origin tanks and ?P osDest for destina-

tion tanks), as well as with pipelines along a route (suffix ?P os). Constraints (27) to (29)

below govern pipeline sequencing, and constraints (30) to (42) relate to tank sequencing.

In these equations, DelPp indicates delivery orders assigned to pipeline p and DelRPi,p
denotes the position of p in order i.

alldiff ([DelP os
(?)
i,k ]i?DelPp,k?DelRPi,p) (27)

ns?1
?

j=1

DelT i
(e)
i,j,k = OpT i

(s)

[ns(DelP os
(e)
i,k

)+j],k
(28)

? DelT f
(e)
i,j,k = OpT f

(s)

[ns(DelP os
(e)
i,k

)+j],k

? DelV ol
(e)
i,j,k = OpV ol

(s)

[ns(DelP os
(e)
i,k

)+j],k

? DelF R
(e)
i,j,k = OpF R

(s)

[ns(DelP os
(e)
i,k

)+j],k

ns?1
?

j=1

DelT i
(l)
i,j,k = OpT i

(r)

[ns(DelP osi,k)
(l)+j],k

(29)

? DelT f
(l)
i,j,k = OpT f

(r)

[ns(DelP os
(l)
i,k

)+j],k

? DelV ol
(l)
i,j,k = OpV ol

(r)

[ns(DelP os
(l)
i,k

)+j],k

? DelF R
(l)
i,j,k = OpF R

(r)

[ns(DelP os
(l)
i,k

)+j],k

?i ? Delord, ?k ? DelRi

DelT i
(e)
i,0,0 = OpT i

(s)
DelP osOri,DelT qOri

(30)

DelT f
(e)
i,ns,0 = OpT f

(s)
DelP osOri,DelT qOri

(31)

DelV oli = OpV ol
(s)
DelP osOri,DelT qOri

(32)

DelT i
(l)
i,0,|DelRi| = OpT i

(r)
DelP osDesti,DelT qDesti

(33)

DelT f
(l)
i,ns,|DelRi| = OpT f

(r)
DelP osDesti,DelT qDesti

(34)



5. Results 43

DelV oli = OpV ol
(r)
DelP osDesti,DelT qDesti

(35)

?i ? Delord.

P rT ii = OpT iP rP osi,P rT qi, (36)

P rT fi = OpT fP rP osi,P rT qi, (37)

P rV oli = OpV olP rP osi,P rT qi, ?i ? P r
ord. (38)

DemT ii = OpT iDemP osi,DemT qi, (39)

DemT fi = OpT fDemP osi,DemT qi, (40)

DemV oli = OpV olP rP osi,DemT qi, ?i ? Dem
ord. (41)

alldiff ([DelP osOri, DelP osDestj, (42)

P rP osk, DemP osl](i,j,k,l)?Ordt).

The Search Procedure

The strategy for searching a solution is based on a backtrack mechanism [12] in which the

order for selecting variables is as follows. First, pipelines that are involved in a greater

number of operations are chosen, and delivery orders with the earliest due dates are

sequenced first in these pipelines (assignment of ?P os variables). Then, the volumes and

tanks for undetermined delivery orders that were sequenced first in these pipelines are

assigned. This is followed by randomly choosing the sequence of tank orders (including

production and demand orders as well). Finally, start and end times are assigned for all

orders, which are again chosen by the earliest delivery deadline.

5 Results

The experiments were carried out on a Pentium D 3.40 Ghz CPU, with 4GB of memory.

The planning and scheduling phases were coded in C++ and compiled using GCC-4.0

with optimization flag O3. The CP model was solved using ILOG Solver 6.2 and ILOG

Scheduler 6.2, with medium to high propagation enforcement.

Part of a typical solution is presented in table 3. As described earlier, a solution is a

sequence of pumping actions and each line in the table describes one such action. Column

headings are as follows: Ti and Tf are start and end times (in minutes), respectively; V ol

is the pumped volume (in m3); Pd is the product code (G for gasoline, N for naphtha

and D for diesel); T kOr and T kDt are origin and destination tank codes, respectively;

and Route is the route code. A table showing a full solution would continue for several

hundred lines.

A summary of the results for two real instances are shown in table 2. Both instances

share the same network topology composed of 14 depots, 29 pipelines, 32 products and



6. Conclusions and Further Work 44

242 tanks distributed among the depots. As can be seen from section 2, these are far

more complex instances than others that can be found in any previously reported work.

Pipelines volumes range from 30 to 8,000 m3, and most of the tank capacities are between

4,000 and 30,000 m3. Instance 1 had a 10-day scheduling time horizon, while instance 2

had a 7-day scheduling horizon. The maximum number of pumping operations for each

delivery order was set as ns = 7. Also, parameters ?1, ?2 and ?3, described in section 4.1,

were set to 10%. As shown in table 2, the algorithm quickly found a feasible solution,

despite the size of the problems. The planning phase is the fastest and uses little memory,

generating more than 800 orders for each instance. Of these, about 25% were delivery

orders and the rest were production and demand orders. The scheduling phase consumed

a large amount of memory and was the overall bottleneck. This reflects the sizable number

of variables and constraints in the CP model. Experimental results showed that only a

small fraction of the orders used up to ns pumping operations. In all cases the solver

found a solution in a reasonable time, e.g., within 5 minutes. The number of choice points

(i.e., variables assignment) and fails during the solver execution were greatly reduced by

appropriately choosing a sequence for variable assignments, as discussed in section 4.2.

The majority of variables were assigned as a result of constraint propagation, and this was

greatly improved by the use of different model views linked by channeling constraints.

Figure 3 shows the total tankage for some product groups of instance 2. A group is

formed by gathering compatible products. The figure exposes volume variations over time

in a typical solution, covering the entire horizon of 7 days. Note that, in certain cases,

there was a reduction of more than 15,000 m3, attesting to a intense use of the pipeline

network. Mainly, this volume variation indicates refilling activities necessary to maintain

inventory levels, specially for those lines connected to depots with low-capacity tanks. For

this same reason, some pipelines did not show the typical intermittent usage, but were

continuously used throughout the time horizon (not shown in the figure).

The heuristic guidance provided in the planning phase was also instrumental to im-

prove other important aspects of the solution quality, as noticed by logistic engineers.

For instance, usually a typical solution showed only a very small number of pipeline flow

reversions, a kind of operation that engineers prefer to keep to a minimum. Also, new

and interesting routes were identified for product flow through the mesh, some of them

surprising the logistic engineers, who were biased to use almost always the same routes.

6 Conclusions and Further Work

We proposed a novel algorithm for generating feasible solutions for a very-large multiprod-

uct pipeline network, considering hard real-world constraints including product incompat-

ibility, direct transmission between pipelines, flow rate limitations and tank capacities.



6. Conclusions and Further Work 45

Table 2: Solver Results
Instance 1 2
Horizon 10 days 7 days
Orders 924 845

Planning Phase Time 1 min 1 min
Planning Phase Memory 350MB 309MB

Integer Variables 92,548 90,619
Continuous Variables 9,752 7,612

Constraints 417,215 401,363
Choice Points 2,561 2,451

Fails 5,232 4,952
Scheduling Phase Time 3 min 4 min

Scheduling Phase Memory 3.4 GB 3.2 GB
Total Time 4 min 5 min

Table 3: Solution Example
Ti Tf Vol. Pd TkOr TkDt Route

2075 2362 858 G T004 T005 SUG03
4857 4868 30 N T160 T087 GUG03
4870 5111 722 D T008 T005 BUG03
5111 5693 582 D T111 T098 GRC01
6323 6753 2139 D T004 T077 TRC01
6753 6871 582 G T009 T012 SUG03
7211 7889 2030 G T001 T007 TRC03
7890 8309 1256 G T003 T005 SUG03
8309 8505 582 D T023 T215 KDD2
... ... ... ... ... ... ...

The algorithm has two phases. The planning phase generates the so called orders,

which are related to how product volumes should be transmitted between depots. An

order contains information regarding product, volumes, origin and destination tanks, as

well as delivery deadlines. In this phase, a number of randomized heuristics work together

in order to select appropriate depots, tanks and volumes so as to satisfy demand and

production schedules.

The scheduling phase, on the other hand, assigns start and end times for each order,

satisfying all deadlines and operational constraints. Several reasons motivated the use of

CP techniques to model the actions in this phase. The scheduling problem is highly over-

constrained and have several non-linear constraints, easily modeled in the CP paradigm.

Besides, the primary goal was to search for a feasible solution. The choice of variables

for value assignment in the CP engine prioritizes variables related to orders with earliest



6. Conclusions and Further Work 46

0

100

200

300

400

500

600

0 2.5 5 7.5 10

DIESEL GAS NAPHTA

Time (103 min)

V
o
lu

m
e

(1
0
3

m
3
)

Figure 3: Instance 2 Tankage Evolution

delivery deadlines. When no solution was found in this phase, a new set of orders was

requested from the planning phase.

As a result, the algorithm was able to find solutions for two real-world instances com-

posed of 14 depots, 29 pipelines, 32 products, and more than 200 tanks, satisfying all

hard operational constraints and offering a more reliable pumping plan to the pipeline

operators. The prototype developed is being considered by PETROBRAS as an auto-

matic assistant that could be used by the logistic engineers who have the responsibility

of generating operational plans to run the entire pipeline network on a daily basis.

There are several opportunities for further research related to this problem. First,

new real-world constraints are being considered to improve the adequacy of the overall

model. These include inventory management restrictions and energy hourly limitations

at the depots. Also, one can implement more sophisticated search heuristics for both the

planning and scheduling phase, making the overall approach capable of dealing with more

specific real instances classes. Finally, one can consider objective functions that would

help guide the heuristics. This would provide a yardstick, based on a uniform cost grid,

that could be used to gauge solution quality, thus allowing the search for better solutions

across several problem instances.

Acknowledgment The authors gratefully acknowledge financial support from FAPESP

under grants 05/57343-0 and 05/57344-7, from CNPq under grant 305781/2005-7, and

from PETROBRAS under grant TI-SPS No 0200-0012829-05-2. The cooperation of Fer-

nando Marcellino, Enio Medeiros, Andre? Lima and Leandro Barcelos were also instru-

mental.



REFERENCES 47

References

[1] V. Alves and V. J. Filho. Pipeline scheduling of petroleum derivatives using genetic al-

gorithm. In IV Congresso Brasileiro de Pesquisa e Desenvolvimento em Petro?leo e Ga?s,

Campinas, Brazil, 2007.

[2] R. Bartak. Constraint programming: In pursuit of the holy grail. In Proceedings of Week

of Doctoral Students (WDS99), pages 555–564, Prague, Czech Republic, 1999.

[3] D. C. Cafaro and J. Cerda?. Optimal scheduling of multiproduct pipeline systems using

a non-discrete MILP formulation. Computers &amp;amp; Chemical Engineering, 28(10):2053–2058,

2004.

[4] E. Camponogara and P. S. Souza. A-Teams for oil transportation problem through

pipelines. In Information Systems Analysis and Synthesis, Orlando, United States, 1996.

[5] D. S. Crane, R. L. Wainwright, and D. A. Schoenefeld. Scheduling of multi-product fungible

liquid pipelines using genetic algorithms. In Proceedings of the 1999 ACM Symposium on

Applied Computing, pages 280–285, San Antonio, USA, 1999.

[6] J. de la Cruz, A. Herra?n-Gonza?lez, J. Risco-Mart??n, and B. Andre?s-Toro. Hybrid heuristic

and mathematical programming in oil pipelines networks: Use of immigrants. Journal of

Zhejiang University SCIENCE, 6A(1):9–19, 2005.

[7] E. M. S. Filho, V. J. Filho, and L. S. de Lima. Variable neighborhood search (VNS) applied

to pipeline distribution problem with capacity constraints. In IV Congresso Brasileiro de

Pesquisa e Desenvolvimento em Petro?leo e Ga?s, Campinas, Brazil, 2007.

[8] J. N. Hooker. Integrated Methods for Optimization (International Series in Operations

Research &amp;amp; Management Science). Springer-Verlag, Secaucus, USA, 2006.

[9] M. M. Sasikumar, P. R. Prakash, S. M. Patil, and S. Ramani. Pipes: A heuristic search

model for pipeline schedule generation. Knowledge-Based Systems, 10(3):169–175, 1997.

[10] L. Magatao, L. Arruda, and F. Neves. A mixed integer programming approach for schedul-

ing commodities in a pipeline. Computers &amp;amp; Chemical Engineering, 28(1):171–185, 2004.

[11] L. Magatao, L. Arruda, and F. Neves. Using CLP and MILP for scheduling commodities

in a pipeline. Computer-Aided Chemical Engineering, 20B:1027–1032, 2005.

[12] K. Marriot and P. Stuckey. Programming with Constraints: An Introduction. MIT Press,

Cambridge, Massachusetts, 1a edition, 1998.

[13] R. Ma?s and J. M. Pinto. A mixed-integer optimization strategy for oil supply in distribution

complexes. Optimization and Engineering, 4(1):23–64, 2003.

[14] R. Milid??u, F. dos Santos Liporace, and C. J. P. de Lucena. Pipesworld: Planning pipeline

transportation of petroleum derivatives. In Proceedings of ICAPS’03 - Workshop on the

Competition: Impact, Organization, Evaluation, Benchmarks, Trento, Italy, 2003.

[15] PETROBRAS. Relato?rio anual de atividades, 2004.

[16] R. Rejowski and J. M. Pinto. Scheduling of a multiproduct pipeline system. Computers &amp;amp;

Chemical Engineering, 27(8):1229–1246, 2003.

[17] R. Rejowski and J. M. Pinto. Efficient MILP formulations and valid cuts for multiproduct

pipeline scheduling. Computers &amp;amp; Chemical Engineering, 28(8):1511–1528, 2004.



REFERENCES 48

[18] R. Rejowski and J. M. Pinto. A novel continuous time representation for the scheduling of

pipeline systems with pumping yield rate constraints. Computers &amp;amp; Chemical Engineering,

32:1042–1066, 2008.

[19] S. Relvas, A. P. F. D. Barbosa-Po?voa, H. A. Matos, J. Fialho, and A. S. Pinheiro. Pipeline

scheduling and distribution centre management - a real-world scenario at CLC. In Pro-

ceedings of the 16th European Symposium on Computer Aided Process Engineering and 9th

International Symposium on Process Systems Engineering, pages 2135–2140, Garmisch-

Partenkirchen, Germany, 2006.

[20] S. Relvas, H. A. Matos, A. P. F. D. Barbosa-Po?voa, and J. Fialho. Reactive scheduling

framework for a multiproduct pipeline with inventory management. Industrial &amp;amp; Engineer-

ing Chemistry Research, 46(17):5659–5672, 2007.

[21] S. Relvas, H. A. Matos, A. P. F. D. Barbosa-Po?voa, J. Fialho, and A. S. Pinheiro. Pipeline

scheduling and inventory management of a multiproduct distribution oil system. Industrial

&amp;amp; Engineering Chemistry Research, 45(23):7841–7855, 2006.



Ep??logo 49

Ep??logo

O modelo PR apresentado neste trabalho ainda na?o modela as seguintes restric?o?es do pro-

blema: tanques vazios quando recebem produc?a?o local (C4), tempo de certificac?a?o (C5),

nu?mero ma?ximo de envios simulta?neos (C7), alinhamentos proibidos (C8) e manutenc?a?o

de dutos (C15). Mesmo assim, apresenta um modelo inovador e mais abrangente para o

PTRD, sendo capaz de gerar soluc?o?es para insta?ncias reais fornecidas pela Petrobras.

Cada insta?ncia era composta por 14 o?rga?os, 29 dutos, 32 produtos e cerca de 240 tan-

ques distribu??dos na rede. O horizonte resolvido variava de 7 a 10 dias. Devido a? dificul-

dade de coletar dados de entrada, apenas algumas insta?ncias foram testadas e resultados

para duas foram apresentados, ja? que as demais ainda apresentavam inconsiste?ncias nas

tabelas de entrada.

Dentre as dificuldades enfrentadas, destacava-se o fato de que as soluc?o?es ainda esta-

vam pouco operacionaliza?veis na pra?tica, apesar do grande nu?mero de restric?o?es conside-

radas. Um fator que dificultou a expansa?o do modelo estava relacionado ao para?metro ns,

o qual representa o nu?mero ma?ximo de operac?o?es de bombeamento para cada plano de

entrega. Quando ns e? pequeno, ha? poucas possibilidades de parada dos planos nos dutos,

o que sempre forc?a bombeamentos maiores e elimina diversas possibilidades de soluc?a?o.

Por outro lado, um valor alto para ns cria diversas operac?o?es desnecessa?rias nos dutos,

aumentando excessivamente o nu?mero de varia?veis e o tempo de propagac?a?o na execuc?a?o

do modelo.

Desta forma, o modelo e? mais adequado para topologias menores e cena?rios reais

nos quais as restric?o?es de alinhamento e envios simulta?neos na?o sejam cr??ticas. Sua im-

plementac?a?o tambe?m e? relativamente simples quando comparado ao modelo descrito no

cap??tulo 7 e, assim, torna-se mais vantajoso quando a rede de dutos na?o apresenta todas

as restric?o?es operacionais do PTRD.



Cap??tulo 7

Modelo Aprimorado para o

Problema de Escalonamento

Pro?logo

O artigo a seguir apresenta em detalhes o novo modelo desenvolvido para a fase de escalo-

namento, o qual utiliza estruturas de dados mais eficientes e faz extenso uso de restric?o?es

globais espec??ficas para escalonamento em PR. Ale?m disso, novos me?todos de busca de

soluc?a?o tambe?m sa?o propostos.

Neste trabalho, as restric?o?es do problema sa?o descritas e o uso de PR e? fundamentado.

Em seguida, explica-se a arquitetura geral do modelo e a fase de Planejamento e? citada,

para enta?o a formulac?a?o em PR ser extensamente detalhada.

Este artigo foi aceito em uma das confere?ncia internacionais mais importantes na

a?rea de Programac?a?o por Restric?o?es, a The 14th Principles and Practice of Constraint

Programming (CP’08), que ocorreu em Sydney, Austra?lia, nos dias 14 a 18 de setembro

de 2008. O artigo foi publicado nos anais do congresso, na se?rie Lecture Notes in Computer

Science [29]. Ale?m disso, tambe?m recebeu o pre?mio de Best Paper Award no Applications

Track nesta mesma confere?ncia.

A versa?o em ingle?s aqui transcrita refere-se ao texto final submetido a? confere?ncia.

A notac?a?o das varia?veis na formulac?a?o matema?tica do texto seguem um padra?o simples

descrito com detalhes no texto.

50



1. Introduction 51

Planning and Scheduling the Operation of a
Very Large Oil Pipeline Network

Arnaldo V. Moura, Cid C. de Souza, Andre A. Cire, Tony M.T. Lopes
Institute of Computing - University of Campinas

13081-970, Campinas, SP
{arnaldo, cid}@ic.unicamp.br, {andre.cire, tony.lopes}@gmail.com

Abstract

Brazilian petrobras is one of the world largest oil companies. Recurrently,

it faces a very difficult over-constrained planning challenge: how to operate

a large pipeline network in order to adequately transport oil derivatives and

biofuels from refineries to local markets. In spite of being more economical

and environmentally safer, the use of a complex pipeline network poses serious

operational difficulties. The network has a complex topology, with around 30

interconnecting pipelines, over 30 different products in circulation, and about

14 distribution depots which harbor more than 200 tanks, with a combined

capacity for storing up to 65 million barrels. The problem is how to schedule

individual pumping operations, given the daily production and demand of

each product, at each location in the network, over a given time horizon. We

describe a solution based on a two-phase problem decomposition strategy.

A novel Constraint Programming (CP) model plays a key role in modeling

operational constraints that are usually overlooked in literature, but that are

essential in order to guarantee viable solutions. The use of CP was crucial,

since it allowed the modeling of complex constraints, including nonlinearities.

The full strategy was implemented and produced very adequate results when

tested over large real instances. In contrast, other approaches known from

the literature failed, even when applied to much less complex networks.

1 Introduction

petrobras is ranked as the 14th largest oil company in the world (see www.energyintel.com).

One of the major sources of costs faced by petrobras is related to transportation, spe-

cially regarding petroleum derivatives, such as gasoline, and biofuel, like ethanol. In this

context, pipeline networks are considered the main inland transportation mode in contrast

to rail and road, since they are much more economical and environmentally safer.



1. Introduction 52

Figure 1: petrobras pipeline networks.

B
1
T

0
P

0

B
1
T

0
P

1

B
1
T

0
P

2

B
0
T

0
P

0
B

0
T

0
P

1

B
3
T

0
P

1
B

3
T

0
P

2

D
0

D
1

D
2

D
3

D
4

B
1

B
0

B
2

B
3

Figure 2: A pipeline network example.

However, these advantages ensue a very high operational complexity. For instance,

the Brazilian pipeline network owned and operated by petrobras has an extension of

7,000 kilometers, comprising 29 individual interconnecting pipelines in which more than

30 different types of products are in circulation. There are 14 distribution depots that

can store up to 65 millions barrels of these products, stocked in more than 200 tanks

located at such depots. A partial illustration of the Brazilian southeastern network is

shown in Figure 1. Pipelines must always be completely filled with products, meaning

that a volume must be pushed into a duct in order to pump out the same volume at the

other extremity. Moreover, due to chemical properties, certain products can not make

contact with each other - they are called incompatibles. Also, each product has its own

flow rate interval, and that depends on the flow direction and on the particular pipeline

being used. At depots, not all departing and arriving operations can be simultaneous,

due to restrictions imposed both by the internal valve and ducts layout, as well as by

the number of local pumps. Tanks can store just one type of product, and extraction or

injection of volumes can not be simultaneous.

The problem is how to schedule all individual pumping operations in order to fulfill

market demands and store all the planned production. Each pumping operation is defined

by origin and destination tanks, a pipeline route, start and end times, a specific product

and its respective volume. The operations must obey all constraints over the given time

horizon. The management of all these resources gives rise to a complex planning and

scheduling problem.

Currently, the problem is solved manually by executing a trial-and-error process with

the aid of a proprietary simulator that checks whether some simple physical constraints

are being satisfied. This process is very time consuming and, not rarely, the final results

still violate some of the more complex restrictions. Clearly, this manual process is far



1. Introduction 53

from optimal and limits the efficiency of the network operation. In fact, it is common for

the company to use trucks for transporting pending volumes, thus increasing the overall

transportation costs, a situation that could be avoided by a more intelligent use of the

pipeline network.

Due to its size and complexity, as well as to its financial impact, the efficient operation

of this large oil pipeline network is one of the most strategic problems faced by logistics

at petrobras today. As will be discussed later, CP was at the core of a computational

model devised and used to find good operational solutions for real problem instances, in

an adequate amount of computer time.

Problem Description. As an illustration, Figure 2 shows a sample network with 4

depots, B0, B1, B2, and B3, interconnected by 5 pipelines. Between depots B2 and B3,

there are 2 pipelines, which is common to occur in practice. Each depot also has its own

tank farm. For instance, depot B1 has storage tanks for products P0, P1 and P2. Each

tank contains an initial volume. Ducts must always be completely filled. All of these

quantities are measured in standardized units.

The following constraints must be satisfied:

(1) During the whole planning horizon, a tank can store only a pre-defined product and

its capacity must always be respected. But a depot not necessarily contains tanks to

store all types of products. All injection and extraction operations in a tank must be

disjunctive in time.

(2) Pipelines operate in an intermittent fashion and must always be completely filled. No

interface losses between products are considered. Furthermore, volumes pumped out can

either enter a tank or move directly into another pipe in an assigned route. The initial

sequence of products inside each pipe is given.

Flows in pipelines can change direction dinamically, an event called pipeline flow re-

versal. An example of reversal is illustrated in Figure 3 for a single pipeline topology.

From instants t = 0 to t = 2, a product extracted from tank B0T0P2 in depot B0 is being

used to push another product into the tank B1T0P0 in depot B1. As soon as the first

product is completely injected into its destination tank at t = 3, the second volume must

return to the first depot, since there is no tank for it in depot B1. This is done by using

the product from tank B1T0P1 to push it back to the origin tank, changing the pipeline

direction at t = 4 and t = 5.

(3) Depending on the internal arrangement of a depot, certain operations can not be active

simultaneously. Such sets of operations are called forbidden alignment configurations.

Also, each depot has an upper limit on the number of outgoing pump operations, which

depends on the number of available pumps.

(4) A route is an alternating sequence of depots and non-repeating connecting ducts.



2. Why CP and Related Work 54

For example, the sequence (B0, D1, B2, D3, B3) represents a valid route in figure 2. Each

product in circulation must have a route assigned to it, and a volume can only leave its

route at the final destination tank. Although there is no restriction barring the creation

of new routes, the most common choices obtained from human experience should be

preferred.

(5) Least maximum flow rates among all products in any route must be enforced.

(6) To separate two incompatible products, it is possible to use a third product, called a

plug, compatible with both products it separates.

(7) Production and demand volumes are defined per depot and per product, each with

its own duration interval.

A solution is defined by a set of pumping operations. Each such operation is taken as a

continuous and atomic pumping stream. An operation is defined by specifying information

about the product, volume, route, origin and destination tanks, as well as start and end

pumping times. Once a pumping operation starts, the volume must follow its designated

route until it reaches the destination tank. However, a pumping operation can be stopped

at any time, as long as no pumped volume (i.e. a volume that composes a whole operation)

is interleaved with other products at any intermediate depot along its assigned route. The

main goal is to find a solution that respects all operational and physical constrains of the

network, as well as that uses stocks and productions to satisfy all local demands, while

storing away any remaining production.

2 Why CP and Related Work

Previous studies from the literature frequently have focused on more restricted or much

smaller network topologies. Usually, they consist of a single pipe connecting one origin

(a refinery) to multiple depots. Different problem decompositions together with several

MILP formulations [1, 2, 3, 4] were proposed for these cases. Some studies also deal with

variable pumping flow rates and other non-linear constraints [5, 6]. Other approaches

handle multiple origins and destinations within a more realistic network, albeit neglecting

most of the hard constraints in order to make the problem tractable [7]. In [8], a MILP

based on a network flow model was created to solve a relaxed version of the problem, but

it took more than 50 hours of computer time only to find the LP initial basis.

As our research indicated, taking advantage of the problem structure using single

MILP models is not practical for two reasons. First, most of the problem restrictions are

computationally costly, or even impossible, to model as linear constraints, specially those

related with variable flow rates and transmission between pipelines. Besides, MILP models

would have to deal with multiple pipelines and depots, and investigation showed that the

number of integer variables and constraints would increase at an unacceptable rate. On



3. How CP ? 55

the other hand, heuristic and meta-heuristic strategies per se are greatly impaired when

too many operational constraints are considered. This is particularly disturbing when

slight modifications in a solution give rise to serious collateral perturbations over the

problem structure as a whole. For example, since products can flow directly from one

pipeline to another, changing a single pumping start time may delay the arrival of a

number of other products that pass through connected pipelines. This can easily render

a candidate solution into an infeasible one.

In face of all these issues, the use of CP was seen to offer great advantages for mod-

eling and solving this problem. Firstly, its powerful modeling language allowed for the

implementation of operationally crucial constraints, besides providing enough flexibility

to extend the model if new restrictions were risen by pipeline operators. Secondly, and

most importantly, it was possible to exploit specific problems patterns explicitly. This

is done, for instance, by modeling multiple subproblem representations in order to use

specialized and adequate constraint propagation mechanisms to solve each of the sub-

problems. In fact, such multiple perspectives played an important role in the final model,

greatly improving domain reductions. Furthermore, a preliminary study [9] already indi-

cated that CP would be flexible and powerful enough to treat the real problem faced by

petrobras. Finally, the use of CP was further fostered by its well-known good perfor-

mance when treating scheduling problems [10]. In addition, CP is more suitable for our

case since any feasible solution is enough.

3 How CP ?

The complete problem was solved using a hybrid approach that combined a randomized

constructive heuristic and a novel CP model. The hybridization main cycle is schemati-

cally presented in Figure 4. The planning phase, implemented as a constructive heuristic,

B
0

B
0
T

0
P

0
B

0
T

0
P

1
B

0
T

0
P

2

B
1

t=0

B
1
T

0
P

0
B

1
T

0
P

1

t=1

t=2

t=3

t=4

Figure 3: Example of a flow reversal.

Scheduling Phase

Planning Phase

Instance

Set of Orders

Solution

No Solution

Figure 4: Solver Framework.

is responsible for creating a set of delivery orders. Each such order is defined by a volume,



3. How CP ? 56

origin and destination tanks, product type, route and a delivery deadline. The planning

phase must guarantee that, if all delivery orders are completed within their respective

deadlines, local market demands will be fulfilled and the excess production will be cor-

rectly stored away. The scheduling phase takes the set of delivery orders generated by the

planning phase. It must both sequence the pumping operations at the initial pipeline in

each route present in a delivery order, as well as determine the start times of each of the

pumping operations, while ensuring that no network operational constraint is violated at

any time. The scheduling phase represents the problem’s central decision process and it

was implemented as a CP model. In the sequel, each phase will be discussed, with the

CP model described in more detail.

Planning and Routing. To generate delivery orders, we created a randomized con-

structive heuristic that makes use of the accumulated experience at petrobras. The

purpose of the randomization is to generate diversified sets of orders in case the main

cycle restarts, increasing the chance of finding solutions. Also, it takes into consideration

other criteria that are difficult to handle manually, such as estimating the time for product

volumes to arrive at depots.

Delivery orders are created incrementally as follows: (1) randomly select a local prod-

uct demand in any depot, giving higher priority to demands that must be fulfilled earlier

in time; (2) randomly choose depots that could supply volumes of the required products,

as well as the routes that these volumes should traverse. In order to do so, consider fac-

tors such as pipeline occupation rate, production schedules, present product stocks and

estimated time of arrivals; (3) select origin and destination tanks, setting order volumes

accordingly. Also, set order deadlines so as to guarantee demand fulfillment.

As soon as there is no more demands to choose from, the planning phase ends. At this

point network operators can interfere adding, modifying, or removing orders according

to their particular needs. This flexibility is interesting since sudden needs might unex-

pectedly arise. For example, there might be exceptional cases where the operators want

to empty certain tanks for emergency maintenance purposes. This could be achieved by

issuing new orders that remove products from those particular tanks.

All demands are guaranteed to be satisfied if the resulting orders can be scheduled to

arrive by their respective deadlines. Of course, at this stage, it is not possible to know

if the whole pipeline network can be operated in a way that meets all delivery order

deadlines, while satisfying all problem constraints.

Orders are indivisible, i.e., once a volume starts to be pumped in, no other pump

operation, at that same origin, can be started before the first one completes. However,

orders are preemptive in the sense that they can be interrupted and be resumed at a later

time. For instance, it is possible that a segment of the route that is being used in this



3. How CP ? 57

pumping must also carry other products, with more pressing deadlines, along another

route that has that segment in common. In such cases, it may be necessary to interrupt

the present pumping operation, allowing for the more urgent products to circulate in the

common pipeline segment, later resuming the first pumping.

Sequencing and Scheduling Orders. The scheduling phase must determine the

pumping parameters in order to meet all delivery order deadlines, also taking into ac-

count the network operational constraints. Or it must prove that the present set of

delivery orders can not be sequenced nor have their start times set in a way that ob-

serve all their assigned deadlines. At this point, orders already have their routes, volumes

and origin/destination tanks assigned by the planning and routing phase, besides their

deadlines.

In a typical scenario comprising 14400 minutes (i.e. 10 days), the model is expected to

deal with around 900 delivery orders, involving dozens of products, leaving and reaching

several tanks, circulating through many interconnected pipelines, and subject to thou-

sands of constraints. In order to cope with this problem complexity, the CP model was

further divided into two steps. A first model treats the sequencing of delivery orders,

generating time intervals for the start of the respective pumping operations. After one

such sequencing is completed, the most difficult constraints are guaranteed to be satisfied.

Then a second, simpler, CP model takes over and determines the number of pumping op-

erations for each delivery order (i.e. taking into account possible preemptions), as well

as the start time of each operation.

All time variables represent minutes, the unit currently adopted by network operators.

Therefore, all variables have integer domains. Time value roundings, e.g. due to some

particular combination of flow rate and pipeline extension, can be safely neglected given

the large volumes that are involved. Variable domains are easy to infer from the input

data instances and are not further detailed here.

The Sequencing Model. This model must take into account product pair incompati-

bilities, tank capacities, pipeline flow direction restrictions and other essential operational

constraints, such as no two products being pumped into a pipeline simultaneously. Fur-

thermore, it must consider order deadlines and flow rates, in order to determine valid time

bounds for the pumping operations.

The model interrelates two different viewpoints [11]. Firstly, the order viewpoint pro-

vides a global view of the problem, dealing mainly with routes and volume transmission

between pipelines. In contrast, the operations viewpoint captures a local view of the prob-

lem, representing the pumping operation constraints in each pipeline. Both viewpoints

are connected by channeling constraints.



3. How CP ? 58

The Order Viewpoint. The order viewpoint handles the problem globally, focusing

on the relationship between orders and the pipelines that occur in their assigned routes.

It also enforces constraints related to flow rates, deliver deadlines, disjunctions of pipeline

operations, product incompatibilities, and tanks.

Let P be the pipeline set, T the tank set and O = {o1, . . . , on} the set of delivery

orders received from the planning phase. For each oi ? O, let route(oi) = (pl, . . . , pm) be

the sequence of pipelines that order oi must traverse. For each p ? route(oi), the volume

specified by oi can have one of four possible pipeline flow attributes when traversing

pipeline p: N , if it follows the normative, or preferred, pipeline flow direction; R, if it

follows the reverse direction; NR, if it starts in the normative direction, but later changes

to the reverse direction, thus leaving the pipeline through the same extremity it was

pumped into; and RN , similar to NR but starting in the reverse direction. Let variable

directi,p specify one among such possibilities. Finally, let origin(oi), destin(oi) ? T

be the origin and destination tanks, respectively, for order oi.

For each oi ? O and p ? route(oi), we define two activities [12], sndi,p and rcvi,p,

each composed by start and end time variables and an inferred non-negative duration

variable. The first activity represents the time interval during which order oi is being

pumped into p, while the second represents the time interval during which the order is

being pumped out of p. Using these activities, we can give bounds on flow rates and state

delivery deadline constraints for each oi ? O and each p ? route(oi):

EndT ime(rcvi,p) ? deadline(oi), (1)

Duration(sndi,p).max flow ratep,directi,p ? volume(oi), (2)

Duration(rcvi,p).max flow ratep,directi,p ? volume(oi). (3)

Before an order exits a pipeline, it must first traverse all the pipeline extension. Thus,

for each oi ? O and p ? route(oi), we require:

StartT ime(rcvi,p) ? StartT ime(sndi,p) +

?

volume(p)

max flow ratep,directi,p

?

. (4)

When an order is being pumped out of a pipeline, it is immediately pumped into the

next pipeline in its route, without volume loss. This can be done by unifying [13] send

and receive activity variables in the following way. For each oi ? O and for each pair

(pl, pm) of consecutive pipeline pairs in route(oi), let:

StartT ime(rcvi,pl) = StartT ime(sndi,pm ), (5)

EndT ime(rcvi,pl) = EndT ime(sndi,pm ). (6)



3. How CP ? 59

Order activities in a pipeline must all be disjunctive with respect to time; a send (or

receive) activity from a certain order must not overlap with the send (or receive) activity of

other orders in the pipe. In order to guarantee this, for each p ? P, we define two unary

resources1: SndResourcep and RcvResourcep, and we associate the send and receive

activities to these resources, respectively. Since an unary resource defines a mutually

exclusive relationship between activities that are linked to it, each resource constraint is

ranked during the solving process, i.e., it is ordered along the time line. This ranking

is explicitly represented in our model using positional variables sndP osi,p and rcvP osi,p,

accounting for, respectively, the send and receive activities positions of order oi in pipeline

p ? route(oi). The positional variables are connected directly to the resource’s precedence

graph [10, 12], expressed by the constraints:

sndi,p startsBefore sndj,p ?? sndP osi,p &amp;lt;sndP osj,p, (7)

rcvi,p startsBefore rcvj,p ?? rcvP osi,p &amp;lt;rcvP osj,p, (8)

?oi, oj ? O, ?p ? route(oi) ? route(oj ).

We also add redundant all different global constraints [13]. For each p ? P,

all diff (sndP osi,p) ? all diff (rcvP osi,p), ?oi ? O s.t. p ? route(oi). (9)

In case two orders oi, oj ? O share at least one common consecutive pipeline pair

(pl, pm) ? route(oi) ? route(oj), the activities precedence relations must be preserved in

both pipelines. Here, we present the restrictions for flow directions N and R, the other

cases being similar.

sndP osi,pl &gt; sndP osj,pl ?? sndP osi,pm &gt; sndP osj,pm (10)

? rcvP osi,pl &gt; rcvP osj,pl ?? rcvP osi,pm &gt; rcvP osj,pm,

?oi, oj ? O, ?(pl, pm) ? route(oi) ? route(oj).

Positional variables also help discarding sequences that violate product incompatibil-

ities. Given two orders oi, oj ? O, if product(oi) and product(oj ) are incompatible, then

they can not make contact in a pipeline. A necessary condition for contact is that both

orders enter consecutively at the same pipeline extremity, and this can only happen if

they have the same entering (or leaving) pipeline flow direction. This scenario is repre-

sented by the following constraints, for each oi, oj ? O, p ? route(oi) ? route(oj) and

1An unary resource is a resource that allows for only one activity at a time [12].



3. How CP ? 60

product(oi) incompatible product(oj).

|sndP osi,p ? sndP osj,p| &gt; 1 if (directi,p 6= N ? directj,p 6= RN ) (11)

? (directi,p 6= R ? directj,p 6= NR),

|rcvP osi,p ? rcvP osj,p| &gt; 1 if (directi,p 6= N ? directj,p 6= NR) (12)

? (directi,p 6= R ? directj,p 6= RN ).

Next, we define two new activities: exti,origin(oi) and inji,destin(oi), representing volume

extraction and injection, respectively, from the assigned tanks associated with order oi.

The relationship between send (receive) variables and tanks activities is the same as those

for pipeline volume transmissions. For each oi ? O, letting p0 and pm be the first and last

pipeline in route(oi), we state:

StartT ime(sndi,p0) = StartT ime(exti,origin(oi )), (13)

EndT ime(sndi,p0) = EndT ime(exti,origin(oi )), (14)

StartT ime(rcvi,pm ) = StartT ime(inji,destin(oi )), (15)

EndT ime(rcvi,pm ) = EndT ime(inji,destin(oi )). (16)

Injecting and extracting volumes from tanks must not overlap in time as well. Hence,

activities exti,t and inji,t are associated with a new unary resource T kDisjt, created for

each tank t ? T. However, capacities must also be taken into account in this case, requir-

ing the combined use of a different type of resource T kRest, t ? T, called a reservoir [12].

Such activities can both increase capacity (volume injection) or deplete capacity (volume

extraction) from reservoirs.

Finally, we must also consider production and demand volumes in order to appropri-

ately represent the behavior of tank capacities. Let Dem and Pr be, respectively, the

sets of demands and productions given as input. For each d ? Dem, an activity demd
is created, with its associated constraints, considering demand time bounds and volume

extraction from tanks. Similarly, an activity prodp is created for each p ? Pr, but now

considering volume injection instead of extraction. These activities are associated with

the unary resources T kDisjt and reservoirs T kRest. Additional constraints are stated as

follows.

StartT ime(demd) ? DemandMinStartTime(d), (17)

EndT ime(demd) ? DemandMaxEndTime(d), ?d ? Dem, (18)

StartT ime(prodp) ? ProductMinStartTime(p), (19)

EndT ime(prodp) ? ProductMaxEndTime(p), ?p ? Pr. (20)



3. How CP ? 61

The Operations Viewpoint. The main intuition for this viewpoint is to consider each

pipeline individually (a local vision), since time variables domains will be automatically

propagated by force of constraints defined in the order viewpoint. Although time bounds

and disjunctions were already established, it is still necessary to model the fact that,

in order for a certain volume to leave a pipeline, the exact amount of volume must be

pumped in from the other extremity. Besides that, restrictions such as variable flow rates

which depend on the products inside a pipeline, must also be considered. We will also

use some ideas from previous studies [2, 5, 6], that treated the case of a single pipeline.

Given a pipeline p ? P , two time-ordered sets of operation activities are defined,

SndP ipep and RcvP ipep, where |SndP ipep| = |RcvP ipep| = |{oi : oi ? O, p ? route(oi)}|.

As in the order viewpoint, they represent send and receive activities in p, respectively,

but now with new precedence relations of the form

i &amp;lt;j ?? sndOpp,i startsBefore sndOpp,j, ?sndOpp,i, sndOpp,j ? SndP ipep,

i &amp;lt;j ?? rcvOpp,i startsBefore rcvOpp,j, ?rcvOpp,i, rcvOpp,j ? RcvP ipep.

A volume and a product variables are additionally associated with each activity be-

longing to SndP ipep and RcvP ipep. We thus say that both sequences represent a valid

ranking of undetermined delivery orders; they will only be determined when orders are

ranked in their unary resources. However, since they are already time-ordered, we are

able to create a more intuitive and compact model to represent pipeline flow behavior, in

which constraints will also enforce propagation in the order viewpoint variable domains.

Let rcvOpp,j ? RcvP ipep be an activity. A certain volume associated with it can

only be received when an activity sndOpp,i ? SndP ipep is being pumped at the other

extremity of the pipe. In order to define which send activity i pushes a receive activity j,

it is necessary to consider three factors: the pipeline volume, the volumes of the activities

and the volumes between activities sndOpp,i and rcvOpp,j, i.e., the volume still in the

pipeline before sending sndOpp,i and after receiving rcvOpp,j. For the latter, a new

variable accp,i,j is created for each sndOpp,i ? SndP ipep, rcvOpp,j ? RcvP ipep, for i ? j,

as follows:

accp,i,j =
?

k&lt;i

volume(sndOpp,k) ?
?

k?j
volume(rcvOpp,k). (21)

It can be shown that sndOpp,i never pushes rcvOpp,j off the pipeline, for i &gt; j, due

to the time-ordering of the relation. If accp,i,j ? volume(p), then it is not possible

for sndOpp,i to push rcvOpp,j, since a quantity greater or equal than the pipeline vol-

ume was already injected between activities i and j. On the other hand, if accp,i,j +

volume(sndOpp,i) + volume(rcvOpp,j) ? volume(p), then the volume in sndOpp,i is not



3. How CP ? 62

enough to push rcvOpp,j out of the pipeline. Thus, a necessary and sufficient condition

for activity i to push activity j out of the pipeline (a pushi,j event), can be stated as:

pushi,j ?? accp,i,j &amp;lt;volume(p) (22)

? accp,i,j + volume(sndOpp,i) + volume(rcvOpp,j) &gt; volume(p).

Similar ideas can be used to determine the exact amount of volume involved in the pump-

ing. Let f lowi,j be the volume used in sndOpp,i to push the same volume f lowi,j from

rcvOpp,j out of the pipeline. We have:

pushi,j =? f lowi,j = min[volume(rcvOpp,j), volume(rcvOpp,j) (23)

+ volume(sndOpp,i) + accp,i,j ? volume(p)]

? max[0, volume(rcvOpp,j) + accp,i,j ? volume(p)],

¬pushi,j =? f lowi,j = 0. (24)

These flow variables can be seen as flow edges in a capacitated network. Assuming that

each operation activity represents a node, the amount of volume (flow) pushed into a pipe

must be equal to the volume pushed out it, and both are equal to the operation’s total

volume. To model this restriction, we can use a flow global constraint [10] for send and

receive variable sequences.

In order to ensure flow rate bounds consistency, it is necessary to limit the flow rate

of send and receive activities according to the products that are inside the pipeline when

the pumping activity occurs. This can now be easily done using the earlier condition

accp,i,j + volume(sndOpp,i) + volume(rcvOpp,j) ? volume(p), which is true if sndOpp,i
and rcvOpp,j are both inside the pipeline at the moment of pumping. Let MaxF li be a

variable representing the maximum flow rate for activity sndOpp,i, related to the variable

product(sndOpp,i), and let MaxF lj stand similarly for activity rcvOpp,j. We state:

accp,i,j + volume(sndOpp,i) + volume(rcvOpp,j) ? volume(p) (25)

=?

?

volume(sndOpp,i)

(EndT ime(sndOpp,i) ? StartT ime(sndOpp,i)

?

? MaxF lj

?

?

volume(rcvOpp,j)

(EndT ime(rcvOpp,j) ? StartT ime(rcvOpp,j)

?

? MaxF li.

Finally, flow directions in the pipeline must be consistent as well. For instance, if

an activity has its direction attribute set to N , the next activity along the pipe must

necessarily have its direction attributes set to N or NR. Direction attributes such as R

and RN are only consistent after a sequence of NR activities whose volume sum is equal



3. How CP ? 63

to the pipeline volume. Attribute RN is treated similarly. These valid pairs are enforced

using a Table Constraint [12].

For the pipeline reversal, a special constraint reversal was created, encapsulating the

rules for the reversal of flow direction. This global constraints also controls the relation

between the sequences sndP osi,p and rcvP osi,p, since orders do not enter and live a pipe

in the same order when there is a flow reversal, as showed in figure 3. If there is no flow

reversal in a pipe p, then a constraint sndP osi,p = rcvP osi,p is added to the model.

The Channeling Constraints. The order and operation viewpoints can be easily

connected using the element constraint [13] and positional variables. Notice that a similar

set of constraints is applied to the receive sequence.

StartT ime(sndi,p) = StartT ime(sndOp sndP osi,p, p), (26)

EndT ime(sndi,p) = EndT ime(sndOp sndP osi,p, p), (27)

volume(oi) = V olume(sndOp sndP osi,p, p), (28)

direct(oi) = Direct(sndOp sndP osi,p, p), (29)

product(oi) = P roduct(sndOp sndP osi,p, p), (30)

?oi ? O, p ? route(oi).

The Scheduling Model. The second part of the complete CP model is a simpler

model which is responsible for assigning the exact times to pumping operations, respecting

forbidden alignment configurations and avoiding simultaneous pipe usage. The pumping

operations are created by checking the f lowp,i,j variables values for each activity i and

pipeline p. If f lowp,i,j &gt; 0, for a certain j, then there is a pumping operation of volume

f lowp,i,j with flow rate and time bounds already established by the sequencing step. In

that case, a new activity, pumpOp, is created and its time constraints are included in

the model. Note that the precedence among activities can be inferred from the orders’

sequence.

Let Dep be the set of depots, and let P umpOpsd give the pumping operations that

will start at depot d, for each d ? Dep. The simultaneous sending constraint can

be implemented using a discrete resource, DiscSendingd, a resource which limits the

number of consecutive operations by a certain capacity [12]. Thus, we associate each

operation in P umpOpsd in its respective resource DiscSendingd, limited by the input

DepotMaxSimultaneousOperationsd. Similarly, the forbidden alignment configurations

are enforced with discrete resources AlignDisca,d, created for each alignment restriction

a. The operations associated with each resource are easily identifiable by checking their

product type and flow direction.



3. How CP ? 64

Free Delivery Orders. In certain scenarios, the orders created by the planning phase

are not enough to guarantee a valid pumping solution. For instance, suppose that only

two orders need to be scheduled, and they have incompatible products. Consequently,

one can not push the other in a pipeline. A third product must be used between them.

For that, free delivery orders are arbitrary created before entering the scheduling phase.

In contrast to regular orders, their volumes, products, and origin/destination tanks are

treated as variables instead of constants, and they do not have a deadline. Note also that

free orders may have a null volume associated with them. Furthermore, their routes are

previously determined by choosing among the ones typically used by pipeline operators.

Operators can change such routes by editing a configuration file.

Free orders are also used to represent products that remain in the pipeline at the end

of the process, for the purpose of ensuring that all pipes are always completely filled.

These orders do not have a destination tank, and constraints are used to indicate they

are the last ones to be pumped into the pipelines.

Only minor changes to the previous model are necessary in order to accommodate free

orders. Among them, in the order viewpoint, constraints where volume and product were

constants should be changed to variables, and an Alternative Resource Set [12] can be

used to indicate that an origin and destination tank must be assigned to free orders. The

operation viewpoint remains unchanged.

Search Strategy. Different types of search strategies were tested for solving both the

sequencing and the scheduling models. The currently implemented version is shown as

Algorithm 1. It combines a backtracking mechanism [13] with a special variable ordering,

being divided into three consecutive parts: disjunctive components determination, adap-

tive backtracking and time assignment. In the Disjunctive Components Determination,

a disjunctive component is defined as a subset of the network which can be scheduled

separately, without affecting other regions. Two pipelines belong to the same component

if they are both contained in at least one order’s route. The same reasoning applies to

tanks.

For the Adaptive Backtracking, we implemented backtracking using positional variables

for each pipeline. The term adaptive comes from the fact that it is based on a restart

strategy [14]. As such, the pipeline sequencing order is changed dynamically according

to the number of fails that occurred during the search. The values of positional variables

are randomly chosen, giving higher probabilities to orders with the earliest deadlines. For

free orders, volumes, products and tanks are set after their respective positional variables

are labeled.

The initial sequencing is constructed as follows. Firstly a pipe graph is created, in

which pipelines are nodes and there is a direct arc from node p to q if there is a consecutive



4. Results 65

Algorithm 1: Procedure for search strategy

begin1

Identify network disjunctive components C2
for each c ? C do3

Build pipe graph G(c) and sort it topologically, obtaining order N4
N ? := N ; k := initial k5
while N ? 6= ? do6

p := first element from sequence N ?; N ? := N ?/{p}7
Label positional variables, and volumes/tanks in case of free orders8
if fails in labeling ? k and not cyclic condition then9

k := k+incremental factor; N ? := N10
Move p to the beginning of sequence N ?11

while no scheduling solution found do12
Create scheduling model and assign times as earliest as possible13
if no solution then request next sequencing solution14

end15

pair (p, q) in some order’s route. In case there are two arcs (p, q) and (q, p), only the one

associated with the order having the earliest deadline is maintained. Secondly, the graph is

topologically sorted, the result being the desired initial sequencing. Clearly, this strategy

considers first those pipelines with the least number of orders that come directly from

other pipelines.

After the occurrence of k fails involving a pipeline, the backtrack tree is reinitialized

with that pipeline as the first element in the topological ordering, and k is incremented by

a constant. This implementation was motivated by the fact that, during test runs, it was

observed that a fair number of fails were caused by earlier decisions taken when instan-

tiating variables in related pipelines in the given sequencing. We empirically determined

k = 150 and 100 as the increment.

Finally, in Time Assignment, executed after the sequencing is completed, the CP

scheduling model is created and the time variables are instantiated with the least possible

value in their domains. This forces pumping to start as soon as possible. In case a failure

ensues, a new sequencing solution is requested, most certainly a different one due to the

randomization present in the model.

4 Results

Solutions were obtained on a Intel Pentium D 3.40 Ghz CPU platform, with 4GB of

memory. The planning and scheduling phases were coded in C++ and compiled using



5. Added Value and Conclusions 66

Table 1: Solution Example
Ti Tf Vol. Pd TkOr TkDt Route

2075 2362 858 G T004 T005 SUG03
4857 4868 30 N T160 T087 GUG03
4870 5111 722 D T008 T005 BUG03
... ... ... ... ... ... ...

GCC-4.0. The CP model was solved using ILOG Solver 6.2 and ILOG Scheduler 6.2,

with medium to high propagation enforcement. Part of a typical solution is presented

in Table 1. As described earlier, a solution is a sequence of pump operations and each

line in the table describes one such operation. Column headings are as follows: Ti and

Tf are the start and end times (in minutes), respectively; V ol is the pumped volume (in

m3); Pd is the product code (G is gasoline, N is naphtha and D is diesel); T kOr and T kDt
are origin and destination tank codes, respectively; and Route is the route code. A full

solution table would contain several hundred such lines.

We used four real field instances to test the models. The first two rows in Table 2

indicate the time horizon and the number of deliver orders generated by the planning

phase, respectively, for each of the test instances. The remaining lines give details of

typical runs. All instances share the same network topology of 14 depots, 29 pipelines, 32

different product types and 242 tanks distributed among the depots. Pipelines volumes

range from 30 to 8,000 m3, and most of the tank capacities are between 4,000 and 30,000

m3.

In all cases the solver found a solution in a reasonable amount of computer time, e.g.,

within 10 minutes. Most variables were instantiated as a result of constraint propagation.

The search heuristic, which proved crucial in the planning phase, was also instrumental to

improve other important aspects of the solution quality, as noticed by logistic engineers.

For instance, usually, a typical solution showed only a very small number of pipeline

flow reversions, the kind of operation that engineers prefer to keep to a minimum. Also,

new and interesting routes were identified. Some of them came as a surprise to logistic

engineers, who were biased towards the same traditional routes they were using when

manually planning the network operation.

5 Added Value and Conclusions

We proposed a novel procedure for generating feasible solutions for real instances stem-

ming from planning and scheduling the operation of a very-large pipeline network used

do move petroleum derivatives. The operation of such a network is subject to a complex

set of physical and operational constraints, and it makes possible the delivery of oil and



5. Added Value and Conclusions 67

Table 2: Solver Results
Instance 1 2 3 4

Horizon 10 days 7 days 7 days 7 days
Orders 924 645 724 693

Planning Phase Time 4 min 5 min 4 min 6 min
Planning Phase Peak Memory 78MB 61MB 67MB 63MB

Sequencing Model Variables 37,326 21,381 25,938 24,315
Sequencing Model Constraints 382,565 148,075 160,302 155,409

Sequencing Choice Points 3,355 2,462 3,417 2,518
Sequencing Fails 2,301 1,291 987 1,902
Sequencing Time 2 min 1 min 1 min 1 min

Sequencing Peak Memory 450 MB 240 MB 310 MB 270 MB
Scheduling Model Variables 12,350 7,530 8,931 8,032

Scheduling Model Constraints 27,088 16,768 19,231 18,292
Scheduling Choice Points 1,516 1,164 801 1,810

Scheduling Fails 301 429 210 120
Scheduling Time 2 min 1 min 1 min 1 min

Scheduling Peak Memory 450 MB 250 MB 290 MB 280 MB
Total Time 8 min 7 min 6 min 8 min

biofuel to local markets, as well as the storing of the excess production from refineries.

Using the CP paradigm, these constraints were adequately modeled. Problems of this

size and complexity, as known by the authors, would not be solved by other approaches

reported in the literature to date, in which much of the difficult constraints and topologies

are overlooked.

The procedure is already integrated with a proprietary flow simulation tool and the

company is currently considering it for routine use on a daily basis. The tool has already

proved its value, showing that it can save many valuable work hours of skilled engineers.

Also, using the tool, many different planning and scheduling scenarios can be easily setup

and quickly tested, by varying local demand needs and production schedules at refineries.

The present modeling and implementation stage was reached after 2 years of problem

specification, data gathering, model development, and testing. As work progresses, it is

expected that new constraints will be introduced. Such could include inventory man-

agement restrictions, limitations on energy use at specific time intervals and at specific

depots, and shutdown periods or partial operation intervals for tanks and pipelines. When

modeling such new constraints, we feel that the flexibility of the CP paradigm will again

prove to be crucial.

As for future directions, one could implement more sophisticated search heuristics for

both the planning and scheduling phases, making the overall approach capable of dealing

with more specific instance classes. Finally, one could consider objective functions that



5. Added Value and Conclusions 68

would help guide the heuristics. This would provide a yardstick that could be used to

gauge solution quality.

Acknowledgments. This research was supported by grants 05/57343-0 and 05/57344-

7 from FAPESP and grants 301732/07-8, 478470/06-1, 472504/07-0, and 473726/07-6,

305781/2005-7 from CNPq. The authors are also grateful to Fernando Marcellino and the

team of engineers from petrobras-ti/sp.



REFERENCES 69

References

[1] Rejowski, R., Pinto, J.M.: Efficient MILP formulations and valid cuts for multiprod-

uct pipeline scheduling. Computers &amp;amp; Chemical Engineering 28(8) (2004) 1511–1528

[2] Cafaro, D.C., Cerda?, J.: Optimal scheduling of multiproduct pipeline systems using

a non-discrete MILP formulation. Computers &amp;amp; Chemical Engineering 28(10) (2004)

2053–2058

[3] Relvas, S., Barbosa-Po?voa, A.P.F.D., Matos, H.A., Fialho, J., Pinheiro, A.S.:

Pipeline scheduling and distribution centre management - a real-world scenario at

CLC. In: Proceedings of the 16th European Symposium on Computer Aided Pro-

cess Engineering and 9th International Symposium on Process Systems Engineering,

Garmisch-Partenkirchen, Germany (2006) 2135–2140

[4] Relvas, S., Matos, H.A., Barbosa-Po?voa, A.P.F.D., Fialho, J., Pinheiro, A.S.:

Pipeline scheduling and inventory management of a multiproduct distribution oil

system. Industrial &amp;amp; Engineering Chemistry Research 45(23) (2006) 7841–7855

[5] Rejowski, R., Pinto, J.M.: A novel continuous time representation for the scheduling

of pipeline systems with pumping yield rate constraints. Computers &amp;amp; Chemical

Engineering 32 (2008) 1042–1066

[6] Relvas, S., Matos, H.A., Barbosa-Po?voa, A.P.F.D., Fialho, J.: Reactive scheduling

framework for a multiproduct pipeline with inventory management. Industrial &amp;amp;

Engineering Chemistry Research 46(17) (2007) 5659–5672

[7] Crane, D.S., Wainwright, R.L., Schoenefeld, D.A.: Scheduling of multi-product

fungible liquid pipelines using genetic algorithms. In: Proceedings of the 1999 ACM

Symposium on Applied Computing, San Antonio, USA (1999) 280–285

[8] Camponogara, E.: A-Teams para um problema de transporte de derivados de

petro?leo. Master’s thesis, Instituto de Matema?tica, Estat??stica e Cie?ncia da Com-

putac?a?o, Universidade Estadual de Campinas, Campinas, Brazil (1995)

[9] Moura, A., de Souza, C., Cire, A., Lopes, T.: Heuristics and constraint programming

hybridizations for a real pipeline planning and scheduling problem. In: Proceedings of

the 11th IEEE International Conference on Computational Science and Engineering

- CSE’08. (Julho 2008) 455–462

[10] Hooker, J.N.: Integrated Methods for Optimization (International Series in Opera-

tions Research &amp;amp; Management Science). Springer-Verlag, Secaucus, USA (2006)



REFERENCES 70

[11] Cheng, B.M.W., Choi, K.M.F., Lee, J.H.M., Wu, J.C.K.: Increasing constraint

propagation by redundant modeling: an experience report. Constraints 4(2) (1999)

167–192

[12] ILOG: ILOG Scheduler 6.2: User’s Manual. ILOG. (2006)

[13] Marriot, K., Stuckey, P.: Programming with Constraints: An Introduction. 1a edn.

MIT Press, Cambridge, Massachusetts (1998)

[14] Kautz, H., Horvitz, E., Ruan, Y., Gomes, C., Selman, B.: Dynamic restarts policies.

In: Proceedings of the AAAI-2002, Edmonton, Alberta (2002)



Ep??logo 71

Ep??logo

As principais diferenc?as em relac?a?o a?s duas formulac?o?es de escalonamento existentes

esta? na forma como os bombeamento sa?o representados. No primeiro caso, descrito no

cap??tulo 6, as varia?veis Op? modelam explicitamente as operac?o?es de envio e recebimento

nos dutos e tanques, o que acarreta a necessidade de tratar o para?metro ns que descreve

o nu?mero ma?ximo de operac?o?es por plano.

No modelo aprimorado, os planos sa?o vistos como atividades, que sa?o uma estrutura

para aplicac?a?o de restric?o?es globais mais espec??ficas para problemas de escalonamento [17].

Cada atividade e?, de forma geral, composta por um tempo de ??nicio ti e tempo final

tf , os quais modelam os intervalos de ocorre?ncia do plano em cada duto, ao inve?s de

explicitamente os bombeamentos em si.

Esta representac?a?o de intervalos de tempo permite uma formulac?a?o mais compacta

da rede de dutos, descartando o uso do para?metro ns e, adicionalmente, facilitando a

aplicac?a?o de restric?o?es globais relativas a?s disjunc?o?es temporais, como as restric?o?es cu-

mulative e disjunctive apresentadas no texto. Como ha? tambe?m um menor nu?mero de

varia?veis, tambe?m e? poss??vel aumentar o n??vel de propagac?a?o das restric?o?es, o que reduz

o tamanho da a?rvore de backtrack do PR.

As movimentac?o?es por intervalos de tempo, contudo, na?o caracterizam uma soluc?a?o

do PTRD, conforme descrito no cap??tulo 2. Assim, um segundo modelo PR de atribuic?a?o

de tempos e? utilizado para determinar exatamente os tempos de bombeamentos. Tais

operac?o?es sa?o calculadas a partir do sequ?enciamento dos planos, obtido pela soluc?a?o do

modelo anterior.

As varia?veis do modelo de atribuic?a?o de tempos, desta forma, representam exatamente

as operac?o?es de envio e recebimento que ocorrera?o nos dutos, determinadas a partir de uma

soluc?a?o parcial do problema de Escalonamento. As restric?o?es faltantes, tal como envios

simulta?neos e alinhamentos, sa?o facilmente implementadas neste segundo submodelo. O

artigo na?o apresenta a modelagem dos requisitos C5, C10 e C15 em decorre?ncia da falta

de dados na insta?ncia, mas estas podem ser implementadas utilizando-se restric?o?es de

disjunc?a?o temporal simples.

O artigo tambe?m apresenta um me?todo de busca diferenciado de soluc?o?es, denominado

backtrack adaptativo. Ao inve?s de fixar uma ordem de varia?veis para atribuic?a?o de valores,

o algoritmo procura identificar os dutos mais cr??ticos a partir do nu?mero de fails durante

o sequ?enciamento dos planos. Espera-se que a ocorre?ncia de muitos fails seja devida a?

deciso?es equivocadas no passado e, portanto, os dutos problema?ticos ganham prioridade

na ordem de sequ?enciamento, quando uma nova a?rvore de backtrack e? constru??da.



Cap??tulo 8

Conclusa?o

Este projeto de mestrado trata do problema de distribuic?a?o de derivados de petro?leo

e a?lcoois em redes de duto, ou PTRD, atualmente enfrentado pela Petrobras. Seu

objetivo e? definir movimentos de transporte de produtos entre o?rga?os de tal forma que

as campanhas de produc?a?o e os mercados locais, representados por valores estimados

de demandas, sejam totalmente satisfeitos. Para tanto, um amplo conjunto de restric?o?es

operacionais nos dutos e tanques deve ser respeitado, envolvendo sequ?enciamentos va?lidos

de produtos, capacidade de tanques e limites de envio simulta?neo.

As te?cnicas ate? enta?o empregadas para resolver o PTRD sa?o fortemente baseadas em

relaxac?o?es de seus principais requisitos ou lidam apenas com topologias de rede restritas,

tornando-o assim trata?vel para ser resolvido eficientemente com te?cnicas de otimizac?a?o

cla?ssicas. Por outro lado, tais relaxac?o?es acarretam soluc?o?es pouco aplica?veis para os

cena?rios reais ao descartarem restric?o?es fortes para os operadores de duto, tais como

interface de produtos e na?o-simultaneidade de operac?o?es em tanques.

O trabalho aqui desenvolvido propo?e formulac?o?es capazes de representar a maior parte

das restric?o?es fundamentais do PTRD, com potencial para serem utilizadas em insta?ncias

de tamanho real. Com este objetivo, a resoluc?a?o e? dividida em duas fases, planejamento

e escalonamento. A dissertac?a?o foca na segunda fase: dado um conjunto de planos de

entrega a serem sequ?enciados e escalonados, deve-se gerar operac?o?es de bombeamento

para cobr??-lo sem que nenhum requisito operacional seja violado.

Sa?o propostas duas formulac?o?es em Programac?a?o por Restric?o?es para a fase de es-

calonamento do PTRD. Tal te?cnica foi utilizada devido a? sua flexibilidade em modelar

problemas de escalonamento e dos fortes mecanismos de propagac?a?o existentes, os quais

permitem encontrar soluc?o?es fact??veis rapidamente. O primeiro modelo proposto ja? con-

sidera um nu?mero bastante alto de restric?o?es e uma topologia real, mas possui limitac?o?es

decorrentes da forma como as paradas em dutos sa?o tratadas. Ja? o segundo modelo re-

presenta um aprimoramento significativo do primeiro, resolvendo a questa?o das paradas

72



73

dos dutos, contemplando mais restric?o?es e sendo capaz de acomodar um horizonte maior.

As formulac?o?es foram testadas com 5 insta?ncias reais fornecidas pela Petrobras, co-

letadas ao longo de dois anos de especificac?a?o e implementac?a?o dos modelos. Vale ressaltar

a grande dificuldade de coletar dados reais, visto que esta e? a primeira vez em que o pro-

blema e? formalizado junto aos operadores e gerentes da Petrobras. Assim, considera-se

que uma contribuic?a?o adicional do trabalho e? prover uma especificac?a?o do PTRD em que

as soluc?o?es obtidas sa?o bastante pro?ximas das realiza?veis, conforme exige?ncia dos pro?prios

operadores. Pela mesma raza?o de falta de dados consolidados pela empresa, ainda na?o

foi poss??vel comparar as soluc?o?es obtidas pelos modelos com as manualmente criadas.

Contudo, todas as soluc?o?es foram executadas com sucesso no simulador de dutos da Pe-

trobras, denominado CONSUELO. Por fim, devido ao alto nu?mero de restric?o?es, gerar

insta?ncias artificiais caracteriza-se como um procedimento extremamente dif??cil, o qual

foi deixado como sugesta?o para trabalho futuro.

O objetivo de se pesquisar modelos flex??veis e abrangentes para o PTRD foi alcanc?ado,

os quais apresentaram grande potencial para gerar soluc?o?es efetivas para o problema.

Espera-se que este seja um primeiro passo para uma resoluc?a?o consistente do PTRD,

inspirando novas te?cnicas e, ainda, ide?ias aplica?veis em problemas similares de escalona-

mento.



Cap??tulo 9

Trabalhos Futuros

Propo?e-se diversas extenso?es deste trabalho, entre as quais:

• Alterar o modelo de satisfac?a?o para uma formulac?a?o capaz de lidar com otimizac?a?o

de para?metros. Assim, o algoritmo seria capaz de gerar soluc?o?es parciais em relac?a?o

ao atendimento da demanda e escoamento das produc?o?es, criando soluc?o?es u?teis para

guiar os operadores da rede de dutos. Ale?m disso, tambe?m seria poss??vel considerar

custos de energia de bombeamento, o que exigiria tambe?m um esforc?o adicional para

a coleta de tais dados.

• Novas formas de atribuic?a?o de valores a?s varia?veis dos modelos em PR apresentados.

Um poss??vel exemplo seria aplicar heur??sticas de busca local, as quais aproveitariam

o sistema de propagac?a?o de PR para a reduc?a?o do tamanho da vizinhanc?a.

• Testes mais extensos com insta?ncias reais fornecidas pela Petrobras. Experimen-

tos de grande porte ainda na?o foram realizados devido a? dificuldade em se obter

um conjunto de dados de entrada confia?veis, visto que esta e? a primeira vez que

o problema completo e? formalizado junto com os operadores da rede. Ale?m disso,

tambe?m e? essencial que um gerador de insta?ncias artificiais seja desenvolvido para

verificac?a?o da robustez do algoritmo, o que forneceria um primeiro benchmark mais

extenso para comparac?a?o de trabalhos, tal como em [26].

• Formas de resoluc?a?o diferenciadas para a fase de escalonamento. Por exemplo, por

meio de meta-heur??sticas, ou hibridizac?o?es entre PLI, PR e heur??sticas.

• Formas para que a fase de escalonamento seja capaz de analisar soluc?o?es com falhas,

i.e. sem soluc?a?o, e retornar um feedback para que a fase de planejamento crie

conjuntos de planos de entrega com mais chance de viabilidade.

74



75

• Elaborar teorias que regulam o funcionamento dos dutos a partir de, por exemplo,

Fluxo em Redes, definindo formalmente a noc?a?o de empurramento. Tal teoria pode

ser essencial para criar algoritmos eficientes para o PTRD.



Refere?ncias Bibliogra?ficas

[1] Vanessa Renno? Frota Moraes Alves. Programac?a?o de transfere?ncia de derivados de

petro?leo em rede dutovia?ria usando algoritmo gene?tico. Dissertac?a?o de Mestrado,

COPPE - Universidade Federal do Rio de Janeiro, Rio de Janeiro, RJ, Brasil, 2007.

[2] R. Bartak. Constraint programming: In pursuit of the holy grail. Proceedings of Week

of Doctoral Students (WDS99), pa?ginas 555–564, Prague, Czech Republic, 1999.

[3] M.S. Bazaraa, J.J. Jarvis, e H.D. Sherali. Linear Programming and Network Flows.

John Wiley and Sons, 1990.

[4] Viviane Monteiro Braconi. Heur??sticas multifluxo para roteamento de produtos em

redes dutovia?rias. Dissertac?a?o de Mestrado, Departamento de Informa?tica, PUC-Rio,

Rio de Janeiro, RJ, Brasil, 2002.

[5] Diego C. Cafaro e Jaime Cerda?. Optimal scheduling of multiproduct pipeline sys-

tems using a non-discrete MILP formulation. Computers &amp;amp; Chemical Engineering,

28(10):2053–2058, 2004.

[6] Eduardo Camponogara. A-Teams para um problema de transporte de derivados de

petro?leo. Dissertac?a?o de Mestrado, Instituto de Matema?tica, Estat??stica e Cie?ncia

da Computac?a?o, Universidade Estadual de Campinas, Campinas, Brazil, 1995.

[7] Global Constraint Catalog. http://www.emn.fr/x-info/sdemasse/gccat/index.html.

[8] W.F. Clocksin e C.S. Mellish. Programming in Prolog. Springer, 1994.

[9] 5th International Planning Competition. http://zeus.ing.unibs.it/ipc-5/.

[10] D. Scott Crane, Roger L. Wainwright, e Dale A. Schoenefeld. Scheduling of multi-

product fungible liquid pipelines using genetic algorithms. Proceedings of the 1999

ACM Symposium on Applied Computing, pa?ginas 280–285, San Antonio, USA, 1999.

76



REFERE?NCIAS BIBLIOGRA?FICAS 77

[11] J.M. de la Cruz, B. Andre?s-Toro, A. Herra?n-Gonza?lez, E. Besada Porta, e P. Fernan-

dez Blanco. Multiobjective optimization of the transport in oil pipelines networks.

Proceedings of the IEEE Conference on Emerging Technologies and Factory Automa-

tion, volume 1, pa?ginas 566–573, 2003.

[12] J.M. de la Cruz, A. Herra?n-Gonza?lez, J.L. Risco-Mart??n, e B. Andre?s-Toro. Hybrid

heuristic and mathematical programming in oil pipelines networks: Use of immi-

grants. Journal of Zhejiang University SCIENCE, 6A(1):9–19, 2005.

[13] E?rito Marques de Souza Filho, Vanessa Renno? Frota Moraes, e Virg??lio Jose? Mar-

tins Ferreira Filho. Utilizac?a?o de te?cnicas de pesquisa operacional em problemas

de distribuic?a?o dutovia?ria: Uma revisa?o. XXXVIII Simpo?sio Brasileiro de Pesquisa

Operacional, pa?ginas 1873–1880, Goiania, Brazil, 2006.

[14] Frederico dos Santos Liporace. Planejadores para transporte em polidutos. Tese

de Doutorado, Departamento de Informa?tica, PUC-Rio, Rio de Janeiro, RJ, Brasil,

2005.

[15] D. E. Goldberg. Genetic Algorithms in Search, Optimization and Machine Learning.

Addison-Wesley, 1989.

[16] John N. Hooker. Integrated Methods for Optimization (International Series in Ope-

rations Research &amp;amp; Management Science). Springer-Verlag, Secaucus, USA, 2006.

[17] ILOG. ILOG Scheduler 6.2: User’s Manual. ILOG, 2006.

[18] R. Rejowski Jr. e Jose? M. Pinto. An MILP formulation for the scheduling of multi-

product pipeline systems. Brazilian Journal of Chemical Engineering, 19(4):467–474,

2002.

[19] Tony Lopes. Planejamento em rede de dutos. Dissertac?a?o de Mestrado, Instituto de

Computac?a?o, Universidade Estadual de Campinas, Campinas, SP, Brasil, 2008 (em

andamento).

[20] M. M. Sasikumar, P. R. Prakash, S. M. Patil, e S. Ramani. Pipes: A heuristic search

model for pipeline schedule generation. Knowledge-Based Systems, 10(3):169–175,

1997.

[21] L. Magatao, L.V.R. Arruda, e F. Neves. A mixed integer programming approach for

scheduling commodities in a pipeline. Computers &amp;amp; Chemical Engineering, 28(1):171–

185, 2004.



REFERE?NCIAS BIBLIOGRA?FICAS 78

[22] L. Magatao, L.V.R. Arruda, e F. Neves. Using CLP and MILP for scheduling com-

modities in a pipeline. Computer-Aided Chemical Engineering, 20B:1027–1032, 2005.

[23] K. Marriot e P.J. Stuckey. Programming with Constraints: An Introduction. MIT

Press, Cambridge, Massachusetts, 1a edic?a?o, 1998.

[24] Rodrigo Ma?s e Jose? M. Pinto. A mixed-integer optimization strategy for oil supply

in distribution complexes. Optimization and Engineering, 4(1):23–64, 2003.

[25] R.L. Milid??u e Frederico dos Santos Liporace. Planning of pipeline oil transportation

with interface restrictions is a difficult problem. Relato?rio Te?cnico 56, Departamento

de Informa?tica, PUC-Rio, Rio de Janeiro, RJ, Brasil, 2003.

[26] R.L. Milid??u, Frederico dos Santos Liporace, e Carlos Jose? P. de Lucena. Pipesworld:

Planning pipeline transportation of petroleum derivatives. Proceedings of ICAPS’03

- Workshop on the Competition: Impact, Organization, Evaluation, Benchmarks,

Trento, Italy, 2003.

[27] R.L. Milid??u, A.A. Pessoa, V. Braconi, E.S. Laber, e Rey P.A. Um algoritmo GRASP

para o problema de transporte de derivados de petro?leo em oleodutos. Proceedings

of the XXXIII Brazilan Symposium on Operations Research, pa?ginas 237–246, 2001.

[28] A.V. Moura, C.C. de Souza, A.A. Cire, e T.M.T. Lopes. Heuristics and constraint

programming hybridizations for a real pipeline planning and scheduling problem.

Proceedings of the 11th IEEE International Conference on Computational Science

and Engineering - CSE’08, pa?ginas 455–462, Julho de 2008.

[29] A.V. Moura, C.C. de Souza, A.A. Cire, e T.M.T. Lopes. Planning and scheduling the

operation of a very large oil pipeline network. Lecture Notes in Computer Science

- Proceedings of the 14th International Conference on Principles and Practice of

Constraint Programming, volume 5202, pa?ginas 36–51, Setembro de 2008.

[30] C.H. Papadimitriou e K. Steiglitz. Combinatorial Optimization: Algorithms and

Complexity. Dover Publications, 1998.

[31] PETROBRAS. Relato?rio anual de atividades, 2004.

[32] PETROBRAS. RIMA - Relato?rio de Impacto Ambiental, Plano Diretor de Dutos de

Sa?o Paulo PDD/SP, Setembro, 2007.

[33] R. Rejowski e Jose? M. Pinto. Efficient MILP formulations and valid cuts for multi-

product pipeline scheduling. Computers &amp;amp; Chemical Engineering, 28(8):1511–1528,

2004.



REFERE?NCIAS BIBLIOGRA?FICAS 79

[34] R. Rejowski e Jose? M. Pinto. A novel continuous time representation for the schedu-

ling of pipeline systems with pumping yield rate constraints. Computers &amp;amp; Chemical

Engineering, 32:1042–1066, 2008.

[35] Susana Relvas, Ana Paula F. D. Barbosa-Po?voa, Henrique A. Matos, Joa?o Fialho, e

Anto?nio S. Pinheiro. Pipeline scheduling and distribution centre management - a real-

world scenario at CLC. Proceedings of the 16th European Symposium on Computer

Aided Process Engineering and 9th International Symposium on Process Systems

Engineering, pa?ginas 2135–2140, Garmisch-Partenkirchen, Germany, 2006.

[36] Susana Relvas, Henrique A. Matos, Ana Paula F. D. Barbosa-Po?voa, e Joa?o Fialho.

Reactive scheduling framework for a multiproduct pipeline with inventory manage-

ment. Industrial &amp;amp; Engineering Chemistry Research, 46(17):5659–5672, 2007.

[37] Susana Relvas, Henrique A. Matos, Ana Paula F. D. Barbosa-Po?voa, Joa?o Fialho,

e Anto?nio S. Pinheiro. Pipeline scheduling and inventory management of a mul-

tiproduct distribution oil system. Industrial &amp;amp; Engineering Chemistry Research,

45(23):7841–7855, 2006.

[38] M.G.C. Resende e C.C. Ribeiro. Greedy randomized adaptive search procedures.

F. Glover e G. Kochenberger, editors, Handbook of Metaheuristics, pa?ginas 219–249.

Kluwer Academic Publishers, 2002.

[39] A?lvaro Garc??a Sa?nchez e Miguel Ortega Mier. Programacio?n de oleoductos: presen-

tacio?n del problema y revisio?n de enfoques. Anales del IX Congreso de Ingenier??a de

Organizacio?n (CIO 2005), 2005.

[40] L. A. Wolsey. Integer Programming. Wiley-Interscience, 1998.

[41] Tallys Hoover Yunes. Problemas de escalonamento no transporte coletivo: Pro-

gramac?a?o por restric?o?es e outras te?cnicas. Dissertac?a?o de Mestrado, Instituto de

Computac?a?o, Universidade Estadual de Campinas, 2000.




</field>
	</doc>
</add>